#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЧтениеОбъектаРазрешено(Ссылка)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

////////////////////////////////////////////////////////////////////////////////
// Печать
#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	УправлениеПечатьюБольничнаяАптека.ДобавитьКомандыПечати(Метаданные.ЖурналыДокументов.ЧекиККМ.ПолноеИмя(), КомандыПечати);
	
КонецПроцедуры

Функция ДоступныеПечатныеФормы() Экспорт
	
	ПечатныеФормы = УправлениеПечатьюБольничнаяАптека.СоздатьКоллекциюДоступныхПечатныхФорм();
	
	МенеджерПечати   = Метаданные.ЖурналыДокументов.ЧекиККМ;
	МетаданныеМакета = МенеджерПечати.Макеты.ПФ_MXL_ТоварныйЧек;
	
	ПечатнаяФорма = УправлениеПечатьюБольничнаяАптека.ДобавитьПечатнуюФорму(ПечатныеФормы, "ТоварныйЧек", МенеджерПечати.ПолноеИмя());
	ПечатнаяФорма.Представление = МетаданныеМакета.Представление();
	ПечатнаяФорма.ПутьКМакету = ФормированиеПечатныхФормБольничнаяАптека.ПутьКМакету(МетаданныеМакета);
	УправлениеПечатьюБольничнаяАптека.ДобавитьКомандуПечати(ПечатнаяФорма);
	
	Возврат ПечатныеФормы;
	
КонецФункции

Функция ПечатьТоварныйЧек(МассивОбъектов, ОбъектыПечати) Экспорт
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.АвтоМасштаб        = Истина;
	
	МетаданныеМакета = Метаданные.ЖурналыДокументов.ЧекиККМ.Макеты.ПФ_MXL_ТоварныйЧек;
	ПолноеИмяМакета = ФормированиеПечатныхФормБольничнаяАптека.ПутьКМакету(МетаданныеМакета);
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_" + ПолноеИмяМакета;
	Макет = УправлениеПечатью.МакетПечатнойФормы(ПолноеИмяМакета);
	
	СтруктураТипов = ОбщегоНазначенияБольничнаяАптека.РазложитьМассивСсылокПоТипам(МассивОбъектов);
	
	НомерТипаДокумента = 0;
	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
		
		НомерТипаДокумента = НомерТипаДокумента + 1;
		Если НомерТипаДокумента > 1 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(СтруктураОбъектов.Ключ);
		
		ДанныеДляПечати = МенеджерОбъекта.ПолучитьДанныеДляПечати(СтруктураОбъектов.Значение);
		
		СформироватьТоварныйЧек(ТабличныйДокумент, Макет, ДанныеДляПечати, ОбъектыПечати);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Процедура СформироватьТоварныйЧек(ТабличныйДокумент, Макет, ДанныеДляПечати, ОбъектыПечати)
	
	Шапка = ДанныеДляПечати.РезультатПоШапке.Выбрать();
	ВыборкаПоДокументам = ДанныеДляПечати.РезультатПоТабличнойЧасти.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	Пока Шапка.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		Иначе
			ПервыйДокумент = Ложь;
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(Шапка.Ссылка, ТабличныйДокумент, Макет);
		
		// Получение параметров для заполнения
		ДанныеШапки = ПолучитьДанныеШапкиТоварногоЧека(Шапка);
		
		ФормированиеПечатныхФормБольничнаяАптека.ВывестиОбластьПоИмени(ТабличныйДокумент, Макет, "Заголовок", ДанныеШапки);
		ФормированиеПечатныхФормБольничнаяАптека.ВывестиОбластьПоИмени(ТабличныйДокумент, Макет, "РеквизитыЗаголовка", ДанныеШапки);
		
		ВыборкаПоДокументам.Сбросить();
		ПараметрыПоиска = Новый Структура("Документ", Шапка.Ссылка);
		Если ВыборкаПоДокументам.НайтиСледующий(ПараметрыПоиска) Тогда
			ВыборкаСтрокТовары = ВыборкаПоДокументам.Выбрать();
		Иначе
			ВыборкаСтрокТовары = Неопределено;
		КонецЕсли;
		
		ПараметрыКолонок = ПолучитьПараметрыВыводаКолонокТоварногоЧека(ВыборкаСтрокТовары);
		
		// Вывод шапки таблицы
		ОбластьКолонкаТовар = Макет.Область("Товар");
		
		ФормированиеПечатныхФормБольничнаяАптека.ВывестиОбластьПоИмени(ТабличныйДокумент, Макет, "ШапкаТаблицы|НомерСтроки");
		Если ПараметрыКолонок.ВыводитьКоды Тогда
			ФормированиеПечатныхФормБольничнаяАптека.ПрисоединитьОбластьПоИмени(ТабличныйДокумент, Макет, "ШапкаТаблицы|КолонкаКодов", ПараметрыКолонок);
		Иначе
			ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки + Макет.Область("КолонкаКодов").ШиринаКолонки;
		КонецЕсли;
		ФормированиеПечатныхФормБольничнаяАптека.ПрисоединитьОбластьПоИмени(ТабличныйДокумент, Макет, "ШапкаТаблицы|Данные");
		Если ПараметрыКолонок.ЕстьСкидки Или ПараметрыКолонок.ЕстьНаценки Тогда
			ФормированиеПечатныхФормБольничнаяАптека.ПрисоединитьОбластьПоИмени(ТабличныйДокумент, Макет, "ШапкаТаблицы|Скидка", ПараметрыКолонок);
		Иначе
			ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки + Макет.Область("СуммаБезСкидки").ШиринаКолонки + Макет.Область("СуммаСкидки").ШиринаКолонки;
		КонецЕсли;
		Если ПараметрыКолонок.ЕстьНДС Тогда
			ФормированиеПечатныхФормБольничнаяАптека.ПрисоединитьОбластьПоИмени(ТабличныйДокумент, Макет, "ШапкаТаблицы|СуммаНДС");
		КонецЕсли;
		ФормированиеПечатныхФормБольничнаяАптека.ПрисоединитьОбластьПоИмени(ТабличныйДокумент, Макет, "ШапкаТаблицы|Сумма");
		
		ТабличныйДокумент.ПовторятьПриПечатиСтроки = ТабличныйДокумент.Область(ТабличныйДокумент.ВысотаТаблицы, ,ТабличныйДокумент.ВысотаТаблицы);
		
		// Инициализация итогов по документу
		ПараметрыИтого = Новый Структура;
		Если ПараметрыКолонок.ЕстьСкидки Или ПараметрыКолонок.ЕстьНаценки Тогда
			ПараметрыИтого.Вставить("СуммаБезСкидки", 0);
			ПараметрыИтого.Вставить("СуммаСкидка"   , 0);
		КонецЕсли;
		Если ПараметрыКолонок.ЕстьНДС Тогда
			ПараметрыИтого.Вставить("СуммаНДС", 0);
		КонецЕсли;
		ПараметрыИтого.Вставить("СуммаСНДС", 0);
		
		// Вывод многострочной части
		Если ВыборкаСтрокТовары <> Неопределено Тогда
			
			КоличествоСтрок = ВыборкаСтрокТовары.Количество();
			КлючиПараметров = ФормированиеПечатныхФормБольничнаяАптека.ПолучитьИменаКолонокТаблицы(ВыборкаСтрокТовары);
			НомерСтроки     = 0;
			Пока ВыборкаСтрокТовары.Следующий() Цикл
				
				НомерСтроки = НомерСтроки + 1;
				
				ДанныеСтроки = Новый Структура(КлючиПараметров);
				ЗаполнитьЗначенияСвойств(ДанныеСтроки, ВыборкаСтрокТовары);
				
				ТоварНаименование = ОбщегоНазначенияБольничнаяАптека.ПолучитьПредставлениеНоменклатурыДляПечати(
					ДанныеСтроки.ТоварНаименование,
					ДанныеСтроки.СерияНоменклатуры,
					ДанныеСтроки.Партия);
				
				ДанныеСтроки.Вставить("ТоварНаименование", ТоварНаименование);
				
				Если ПараметрыКолонок.ЕстьСкидки Тогда
					ДанныеСтроки.Вставить("СуммаСкидка", ?(ПараметрыКолонок.ЕстьНаценки, -ДанныеСтроки.Скидка, ДанныеСтроки.Скидка));
					ДанныеСтроки.Вставить("СуммаБезСкидки", ДанныеСтроки.Сумма + ДанныеСтроки.Скидка);
				КонецЕсли;
				
				ОбластьДанных = Макет.ПолучитьОбласть("Строка|Данные");
				ОбластьДанных.Параметры.Заполнить(ДанныеСтроки);
				ЭтоПоследняяСтрока = НомерСтроки = КоличествоСтрок;
				ПроверитьВыводСтрокиТаблицыТоварногоЧека(ТабличныйДокумент, Макет, ОбластьДанных, ЭтоПоследняяСтрока);
				
				ФормированиеПечатныхФормБольничнаяАптека.ВывестиОбластьПоИмени(ТабличныйДокумент, Макет, "Строка|НомерСтроки", ДанныеСтроки);
				Если ПараметрыКолонок.ВыводитьКоды Тогда
					ФормированиеПечатныхФормБольничнаяАптека.ПрисоединитьОбластьПоИмени(ТабличныйДокумент, Макет, "ШапкаТаблицы|КолонкаКодов", ДанныеСтроки);
				КонецЕсли;
				ТабличныйДокумент.Присоединить(ОбластьДанных);
				Если ПараметрыКолонок.ЕстьСкидки Или ПараметрыКолонок.ЕстьНаценки Тогда
					ФормированиеПечатныхФормБольничнаяАптека.ПрисоединитьОбластьПоИмени(ТабличныйДокумент, Макет, "Строка|Скидка", ДанныеСтроки);
				КонецЕсли;
				Если ПараметрыКолонок.ЕстьНДС Тогда
					ФормированиеПечатныхФормБольничнаяАптека.ПрисоединитьОбластьПоИмени(ТабличныйДокумент, Макет, "Строка|СуммаНДС", ДанныеСтроки);
				КонецЕсли;
				ФормированиеПечатныхФормБольничнаяАптека.ПрисоединитьОбластьПоИмени(ТабличныйДокумент, Макет, "Строка|Сумма", ДанныеСтроки);
				
				ФормированиеПечатныхФормБольничнаяАптека.РассчитатьИтоги(ДанныеСтроки, ПараметрыИтого);
				
			КонецЦикла;
		КонецЕсли;
		
		// Вывод итогов
		ФормированиеПечатныхФормБольничнаяАптека.ВывестиОбластьПоИмени(ТабличныйДокумент, Макет, "Итого|НомерСтроки");
		Если ПараметрыКолонок.ВыводитьКоды Тогда
			ФормированиеПечатныхФормБольничнаяАптека.ПрисоединитьОбластьПоИмени(ТабличныйДокумент, Макет, "Итого|КолонкаКодов");
		КонецЕсли;
		ФормированиеПечатныхФормБольничнаяАптека.ПрисоединитьОбластьПоИмени(ТабличныйДокумент, Макет, "Итого|Данные");
		Если ПараметрыКолонок.ЕстьСкидки Тогда
			ФормированиеПечатныхФормБольничнаяАптека.ПрисоединитьОбластьПоИмени(ТабличныйДокумент, Макет, "Итого|Скидка", ПараметрыИтого);
		КонецЕсли;
		Если ПараметрыКолонок.ЕстьНДС Тогда
			ФормированиеПечатныхФормБольничнаяАптека.ПрисоединитьОбластьПоИмени(ТабличныйДокумент, Макет, "Итого|СуммаНДС", ПараметрыИтого);
		КонецЕсли;
		ФормированиеПечатныхФормБольничнаяАптека.ПрисоединитьОбластьПоИмени(ТабличныйДокумент, Макет, "Итого|Сумма", ПараметрыИтого);
		
		// Вывод суммы прописью
		ФорматированнаяСумма = ОбщегоНазначенияБольничнаяАптека.ФорматСумм(Шапка.СуммаДокумента);
		ИтоговаяСтрока = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Всего наименований %1, на сумму %2'"), КоличествоСтрок, ФорматированнаяСумма);
		ДанныеШапки.Вставить("ИтоговаяСтрока", ИтоговаяСтрока);
		ДанныеШапки.Вставить("СуммаПрописью" , РаботаСКурсамиВалют.СформироватьСуммуПрописью(Шапка.СуммаДокумента, Шапка.Валюта));
		
		ФормированиеПечатныхФормБольничнаяАптека.ВывестиОбластьПоИмени(ТабличныйДокумент, Макет, "СуммаПрописью", ДанныеШапки);
		
		// Вывод подписей
		ФормированиеПечатныхФормБольничнаяАптека.ВывестиОбластьПоИмени(ТабличныйДокумент, Макет, "Подписи", ДанныеШапки);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьДанныеШапкиТоварногоЧека(Шапка)
	
	КлючиПараметров = ФормированиеПечатныхФормБольничнаяАптека.ПолучитьИменаКолонокТаблицы(Шапка);
	
	Параметры = Новый Структура(КлючиПараметров);
	ЗаполнитьЗначенияСвойств(Параметры, Шапка);
	
	// Данные заголовка
	НомерДокумента       = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Шапка.НомерДокумента);
	ШаблонТекстЗаголовка = НСтр("ru='Товарный чек № %1 от %2'");
	ТекстЗаголовка       = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		ШаблонТекстЗаголовка, НомерДокумента, Формат(Шапка.ДатаДокумента, "ДЛФ=DD"));
	
	СведенияОбОтправителе    = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Шапка.Отправитель, Шапка.ДатаДокумента);
	ОтправительПредставление = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОтправителе, "ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны");
	
	Параметры.Вставить("ТекстЗаголовка"          , ТекстЗаголовка);
	Параметры.Вставить("ОтправительПредставление", ОтправительПредставление);
	
	// Данные подписей документа
	Параметры.Вставить("КассирККМПредставление", ФизическиеЛицаКлиентСервер.ФамилияИнициалы(СокрЛП(Шапка.КассирККМ)));
	
	Возврат Параметры;
	
КонецФункции

Функция ПолучитьПараметрыВыводаКолонокТоварногоЧека(Товары)
	
	ПараметрыКолонок = Новый Структура;
	ПараметрыКолонок.Вставить("ЕстьСкидки"  , Ложь);
	ПараметрыКолонок.Вставить("ЕстьНаценки" , Ложь);
	ПараметрыКолонок.Вставить("ЕстьНДС"     , Ложь);
	ПараметрыКолонок.Вставить("ВыводитьКоды", Ложь);
	
	Если Товары <> Неопределено Тогда
		Пока Товары.Следующий() Цикл
			Если Не ПараметрыКолонок.ЕстьСкидки И Товары.Скидка > 0 Тогда
				ПараметрыКолонок.ЕстьСкидки = Истина;
			КонецЕсли;
			Если Не ПараметрыКолонок.ЕстьНаценки И Товары.Скидка < 0 Тогда
				ПараметрыКолонок.ЕстьНаценки = Истина;
			КонецЕсли;
			Если Товары.СуммаНДС <> 0 Тогда
				ПараметрыКолонок.ЕстьНДС = Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	Товары.Сбросить();
	
	Если ПараметрыКолонок.ЕстьНаценки И ПараметрыКолонок.ЕстьСкидки Тогда
		ПараметрыКолонок.Вставить("ИмяКолонкиСкидка"         , НСтр("ru = 'Скидка (Наценка)'"));
		ПараметрыКолонок.Вставить("ИмяКолонкиСуммаБезСкидки" , НСтр("ru = 'Сумма'") + Символы.ПС + НСтр("ru = 'без скидки (наценки)'"));
	ИначеЕсли ПараметрыКолонок.ЕстьНаценки И Не ПараметрыКолонок.ЕстьСкидки Тогда
		ПараметрыКолонок.Вставить("ИмяКолонкиСкидка"         , НСтр("ru = 'Наценка'"));
		ПараметрыКолонок.Вставить("ИмяКолонкиСуммаБезСкидки" , НСтр("ru = 'Сумма'") + Символы.ПС + НСтр("ru = 'без наценки'"));
	ИначеЕсли ПараметрыКолонок.ЕстьСкидки Тогда
		ПараметрыКолонок.Вставить("ИмяКолонкиСкидка"         , НСтр("ru = 'Скидка'"));
		ПараметрыКолонок.Вставить("ИмяКолонкиСуммаБезСкидки" , НСтр("ru = 'Сумма'") + Символы.ПС + НСтр("ru = 'без скидки'"));
	КонецЕсли;
	
	Если ПараметрыКолонок.ВыводитьКоды Тогда
		ПараметрыКолонок.Вставить("ИмяКолонкиКодов", "");
	КонецЕсли;
	
	Возврат ПараметрыКолонок;
	
КонецФункции

Процедура ПроверитьВыводСтрокиТаблицыТоварногоЧека(ТабличныйДокумент, Макет, ТекущаяОбласть, ЭтоПоследняяСтрока)
	
	МассивВыводимыхОбластей = Новый Массив;
	МассивВыводимыхОбластей.Добавить(ТекущаяОбласть);
	Если ЭтоПоследняяСтрока Тогда
		МассивВыводимыхОбластей.Добавить(Макет.ПолучитьОбласть("Итого"));
		МассивВыводимыхОбластей.Добавить(Макет.ПолучитьОбласть("СуммаПрописью"));
		МассивВыводимыхОбластей.Добавить(Макет.ПолучитьОбласть("Подписи"));
	КонецЕсли;
	
	Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабличныйДокумент, МассивВыводимыхОбластей) Тогда
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти // Печать

#КонецОбласти // СлужебныеПроцедурыИФункции

#КонецЕсли