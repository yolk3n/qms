
#Область ПрограммныйИнтерфейс

// Переопределяет запуск выполнения проверки КМ на форме документов библиотеки МДЛП или документов имеющих структуру подобную документам библиотеки МДЛП.
// (см. процедуру КонтрольКодовМаркировкиМДЛПКлиент.НачатьПроверкуКМНаФорме)
// Для выполнения проверки КМ на форме объектов не имеющих структуру подобную документам библиотеки МДЛП
// необходимо использовать процедуру
// НачатьПроверкуКМСредствамиАПИМДЛП
// или НачатьПроверкуКМСредствамиРВ
// или НачатьПроверкуКМСредствамиККТ.
//
Процедура НачатьПроверкуКМНаФорме(Форма, Объект, ДанныеШтрихкодовПоТипам, ОповещениеОЗавершении, ЗагрузкаИзТСД, СтандартнаяОбработка) Экспорт
	
	// БольничнаяАптека
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "Объект")
	   И ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма.Объект, "Ссылка") Тогда
		
		ТипДокумента = ТипЗнч(Форма.Объект.Ссылка);
		Если ТипДокумента = Тип("ДокументСсылка.ЧекККМ") Тогда
			
			СтандартнаяОбработка = Ложь;
			
			НачатьПроверкуКМНаформеСредствамиККТ(Форма, Объект, ДанныеШтрихкодовПоТипам, ОповещениеОЗавершении, ЗагрузкаИзТСД);
			
		КонецЕсли;
		
	КонецЕсли;
	// Конец БольничнаяАптека
	
КонецПроцедуры

// Переопределяет открытие формы выборочного контроля из формы владельца.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма объекта подключения механизма проверки КМ.
//  СтандартнаяОбработка - Булево - Истина, если нужно чтоб стандартный механизм процедуры КонтрольКодовМаркировкиМДЛПКлиент.ОткрытьФормуВыборочногоКонтроляКМИзФормыВладельца не выполнялся.
//
Процедура ОткрытьФормуВыборочногоКонтроляКМИзФормыВладельца(Форма, СтандартнаяОбработка) Экспорт
	
	// БольничнаяАптека
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "Объект")
	   И ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма.Объект, "Ссылка") Тогда
		
		ТипДокумента = ТипЗнч(Форма.Объект.Ссылка);
		Если ТипДокумента = Тип("ДокументСсылка.ЧекККМ") Тогда
			
			СтандартнаяОбработка = Ложь;
			
			ОткрытьФормуВыборочногоКонтроляКМИзФормыВладельцаСредствамиККТ(Форма);
			
		КонецЕсли;
		
	КонецЕсли;
	// Конец БольничнаяАптека
	
КонецПроцедуры

#Область КонтрольКМСредствамиАПИМДЛП

// Переопределяет запуск выполнения проверки КМ средствами АПИ МДЛП на форме объекта (см. процедуру КонтрольКодовМаркировкиСредствамиАПИМДЛПКлиент.НачатьПроверкуКМ).
// Результат будет возвращен в процедуру, указанную в параметре Параметры.ОповещениеОЗавершении (см. функцию КонтрольКодовМаркировкиСредствамиАПИМДЛПКлиент.ПараметрыПроверкиКМ).
// Процедура должна принимать следующие параметры:
//  * РезультатПроверкиКМ - Структура - результат проверки КМ средствами АПИ МДЛП (см. функцию РезультатПроверкиКМ):
//     ** ЕстьОшибки     - Булево - признак наличия критических ошибок выполнения проверки КМ.
//     ** ДанныеПроверки - Соответствие - коллекция результатов проверки кодов маркировки.
//         * Ключ - ИдентификаторЭлемента из коллекции ДанныеДляПроверки параметров проверки КМ
//            (см. функции ПараметрыПроверкиКМ и ЭлементДанныхДляПроверкиКМ).
//         * Значение - Структура - результат проверки конкретного кода маркировки (см. функцию РезультатПроверкиКМЭлемента).
//            ** КодМаркировки       - SGTIN.
//            ** ПолныйКодМаркировки - полный код маркировки в формате Base64.
//            ** КонтрольПройден     - Булево - признак того, что КМ корректный или пользователь считает его корректным (в случае использования интерактивного режима).
//            ** РезультатПроверкиКМ - ФиксированнаяСтруктура - результат проверки конкретного кода маркировки средствами РВ
//                                     (см. РегистрыСведений.РезультатыПроверкиКМСредствамиАПИМДЛП.СвойстваРезультатаПроверкиКМ).
//            ** КодСтатусаПроверкиКМ       - Число - результат обработки значения РезультатПроверкиКМ, для отображения пользователю на форме.
//            ** ПояснениеСтатусаПроверкиКМ - Строка - результат обработки значения РезультатПроверкиКМ, для отображения пользователю на форме.
//  * ДополнительныеПараметры - дополнительные параметры описания оповещения.
//
// Параметры:
//  Параметры - Структура - см. функцию КонтрольКодовМаркировкиСредствамиАПИМДЛПКлиент.ПараметрыПроверкиКМ.
//  СтандартнаяОбработка - Булево - Истина, если нужно чтоб стандартный механизм процедуры КонтрольКодовМаркировкиСредствамиАПИМДЛПКлиент.НачатьПроверкуКМ не выполнялся.
//
Процедура НачатьПроверкуКМСредствамиАПИМДЛП(Параметры, СтандартнаяОбработка) Экспорт
	
	
	
КонецПроцедуры

#КонецОбласти

#Область КонтрольКМСредствамиРВ

// Переопределяет запуск выполнения проверки КМ средствами РВ на форме объекта (см. процедуру КонтрольКодовМаркировкиСредствамиРВМДЛПКлиент.НачатьПроверкуКМ).
// Результат будет возвращен в процедуру, указанную в параметре Параметры.ОповещениеОЗавершении (см. функцию КонтрольКодовМаркировкиСредствамиРВМДЛПКлиент.ПараметрыПроверкиКМ).
// Процедура должна принимать следующие параметры:
//  * РезультатПроверкиКМ - Структура - результат проверки КМ средствами РВ (см. функцию РезультатПроверкиКМ):
//     ** ЕстьОшибки     - Булево - признак наличия критических ошибок выполнения проверки КМ.
//     ** ДанныеПроверки - Соответствие - коллекция результатов проверки кодов маркировки.
//         * Ключ - ИдентификаторЭлемента из коллекции ДанныеДляПроверки параметров проверки КМ
//            (см. функции ПараметрыПроверкиКМ и ЭлементДанныхДляПроверкиКМ).
//         * Значение - Структура - результат проверки конкретного кода маркировки (см. функцию РезультатПроверкиКМЭлемента).
//            ** КодМаркировки       - SGTIN.
//            ** ПолныйКодМаркировки - полный код маркировки в формате Base64.
//            ** КонтрольПройден     - Булево - признак того, что КМ корректный или пользователь считает его корректным (в случае использования интерактивного режима).
//            ** РезультатПроверкиКМ - ФиксированнаяСтруктура - результат проверки конкретного кода маркировки средствами РВ
//                                     (см. РегистрыСведений.РезультатыПроверкиКМСредствамиРВМДЛП.СвойстваРезультатаПроверкиКМ).
//            ** КодСтатусаПроверкиКМ       - Число - результат обработки значения РезультатПроверкиКМ, для отображения пользователю на форме.
//            ** ПояснениеСтатусаПроверкиКМ - Строка - результат обработки значения РезультатПроверкиКМ, для отображения пользователю на форме.
//  * ДополнительныеПараметры - дополнительные параметры описания оповещения.
//
// Параметры:
//  Параметры - Структура - см. функцию КонтрольКодовМаркировкиСредствамиРВМДЛПКлиент.ПараметрыПроверкиКМ.
//  СтандартнаяОбработка - Булево - Истина, если нужно чтоб стандартный механизм процедуры КонтрольКодовМаркировкиСредствамиРВМДЛПКлиент.НачатьПроверкуКМ не выполнялся.
//
Процедура НачатьПроверкуКМСредствамиРВ(Параметры, СтандартнаяОбработка) Экспорт
	
	
	
КонецПроцедуры

#КонецОбласти

#Область КонтрольКМСредствамиККТ

// Переопределяет запуск выполнения проверки КМ средствами ККТ на форме объекта (см. процедуру КонтрольКодовМаркировкиСредствамиККТМДЛПКлиент.НачатьПроверкуКМ).
// Результат будет возвращен в процедуру, указанную в параметре Параметры.ОповещениеОЗавершении (см. функцию КонтрольКодовМаркировкиСредствамиККТМДЛПКлиент.ПараметрыПроверкиКМ).
// Процедура должна принимать следующие параметры:
//  * РезультатПроверкиКМ - Структура - результат проверки КМ средствами ККТ (см. функцию РезультатПроверкиКМ):
//     ** ЕстьОшибки     - Булево - признак наличия критических ошибок выполнения проверки КМ.
//     ** ДанныеПроверки - Соответствие - коллекция результатов проверки кодов маркировки.
//         * Ключ - ИдентификаторЭлемента из коллекции ДанныеДляПроверки параметров проверки КМ
//            (см. функции ПараметрыПроверкиКМ и ЭлементДанныхДляПроверкиКМ).
//         * Значение - Структура - результат проверки конкретного кода маркировки (см. функцию РезультатПроверкиКМЭлемента).
//            ** КодМаркировки       - SGTIN.
//            ** ПолныйКодМаркировки - полный код маркировки в формате Base64.
//            ** КонтрольПройден     - Булево - признак того, что КМ корректный или пользователь считает его корректным (в случае использования интерактивного режима).
//            ** РезультатПроверкиКМ - ФиксированнаяСтруктура - результат проверки конкретного кода маркировки средствами ККТ
//                                     (см. РегистрыСведений.РезультатыПроверкиКМСредствамиККТМДЛП.СвойстваРезультатаПроверкиКМ).
//            ** КодСтатусаПроверкиКМ       - Число - результат обработки значения РезультатПроверкиКМ, для отображения пользователю на форме.
//            ** ПояснениеСтатусаПроверкиКМ - Строка - результат обработки значения РезультатПроверкиКМ, для отображения пользователю на форме.
//  * ДополнительныеПараметры - дополнительные параметры описания оповещения.
//
// Параметры:
//  Параметры - Структура - см. функцию КонтрольКодовМаркировкиСредствамиККТМДЛПКлиент.ПараметрыПроверкиКМ.
//  СтандартнаяОбработка - Булево - Истина, если нужно чтоб стандартный механизм процедуры КонтрольКодовМаркировкиСредствамиККТМДЛПКлиент.НачатьПроверкуКМ не выполнялся.
//
Процедура НачатьПроверкуКМСредствамиККТ(Параметры, СтандартнаяОбработка) Экспорт
	
	
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// БольничнаяАптека

Процедура НачатьПроверкуКМНаформеСредствамиККТ(Форма, Объект, ДанныеШтрихкодов, ОповещениеОЗавершении, ЗагрузкаИзТСД)
	
	ГруппыНастроекКонтроляКМ = КонтрольКодовМаркировкиМДЛПКлиентСервер.ГруппыНастроекКонтроляКМ();
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "КлючГруппыНастроекКонтроляКМ") Тогда
		КлючГруппыНастроекКонтроляКМ = Форма.КлючГруппыНастроекКонтроляКМ;
	Иначе
		КлючГруппыНастроекКонтроляКМ = Неопределено;
	КонецЕсли;
	
	Если КлючГруппыНастроекКонтроляКМ = ГруппыНастроекКонтроляКМ.ПараметрыКонтроляСредствамиККТ Тогда
		Если Не ОборудованиеЧекопечатающиеУстройстваКлиент.ФискальноеУстройствоПоддерживаетПроверкуКодовМаркировки(Форма.ПараметрыКассыККМ.ИдентификаторУстройства) Тогда
			ВыполнитьОбработкуОповещения(ОповещениеОЗавершении);
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ДанныеДляПроверки = Новый Массив;
	Для Каждого ДанныеШтрихкода Из ДанныеШтрихкодов Цикл
		
		Если ДанныеШтрихкода.ТипШтрихкода <> "ШтрихкодМДЛП" Или ДанныеШтрихкода.ТипУпаковки <> ПредопределенноеЗначение("Перечисление.ТипыУпаковокМДЛП.МаркированныйТовар") Тогда
			Продолжить;
		КонецЕсли;
		
		// Перезапись значения без символов переноса по ссылке.
		ДанныеШтрихкода.ШтрихкодBase64 = СтрЗаменить(СтрЗаменить(ДанныеШтрихкода.ШтрихкодBase64, Символы.ПС, ""), Символы.ВК, "");
		
		ЭлементДанных = КонтрольКодовМаркировкиМДЛПКлиент.ЭлементДанныхДляПроверки();
		ЭлементДанных.КодМаркировки         = ДанныеШтрихкода.SGTIN;
		ЭлементДанных.ПолныйКодМаркировки   = ДанныеШтрихкода.ШтрихкодBase64;
		ЭлементДанных.ИдентификаторЭлемента = ДанныеШтрихкода.ШтрихкодBase64;
		
		ДанныеДляПроверки.Добавить(ЭлементДанных);
		
	КонецЦикла;
	
	Если ДанныеДляПроверки.Количество() = 0 Тогда
		ВыполнитьОбработкуОповещения(ОповещениеОЗавершении);
		Возврат;
	КонецЕсли;
	
	ОповещениеОЗавершенииПроверкиКМ = Новый ОписаниеОповещения("ЗакончитьПроверкуКМНаФормеСредствамиККТ", ЭтотОбъект, ОповещениеОЗавершении);
	
	ПараметрыПроверкиКМ = КонтрольКодовМаркировкиМДЛПКлиент.ПараметрыПроверкиКМ(Форма);
	ПараметрыПроверкиКМ.ОповещениеОЗавершении = ОповещениеОЗавершенииПроверкиКМ;
	ПараметрыПроверкиКМ.ДанныеДляПроверки     = ДанныеДляПроверки;
	
	Если КлючГруппыНастроекКонтроляКМ = ГруппыНастроекКонтроляКМ.ПараметрыКонтроляСредствамиККТ Тогда
		ПараметрыПроверкиКМ.ККТФФД12МДЛП = Форма.ПараметрыКассыККМ.ИдентификаторУстройства;
	КонецЕсли;
	
	КонтрольКодовМаркировкиМДЛПКлиент.НачатьПроверкуКМ(ПараметрыПроверкиКМ);
	
КонецПроцедуры

Процедура ЗакончитьПроверкуКМНаФормеСредствамиККТ(РезультатПроверки, ОповещениеОЗавершении) Экспорт
	
	Если ЗначениеЗаполнено(РезультатПроверки) Тогда
		
		НомераУпаковок = ОповещениеОЗавершении.ДополнительныеПараметры.Штрихкоды;
		Для Каждого ДанныеШтрихкодаПриемник Из НомераУпаковок Цикл
			ДанныеШтрихкодаИсточник = РезультатПроверки.ДанныеПроверки[ДанныеШтрихкодаПриемник.ШтрихкодBase64];
			ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(ДанныеШтрихкодаПриемник, ДанныеШтрихкодаИсточник, Ложь);
		КонецЦикла;
		
	КонецЕсли;
	
	ВыполнитьОбработкуОповещения(ОповещениеОЗавершении);
	
КонецПроцедуры

Процедура ОткрытьФормуВыборочногоКонтроляКМИзФормыВладельцаСредствамиККТ(Форма)
	
	Обработчик = Новый ОписаниеОповещения("ОткрытьФормуВыборочногоКонтроляКМИзФормыВладельцаСредствамиККТ_ПослеЗаписи", ЭтотОбъект, Форма);
	ИнтеграцияМДЛПСлужебныйКлиент.ЗаписатьДокументВФормеПриНеобходимости(Обработчик, Форма, Ложь);
	
КонецПроцедуры

Процедура ОткрытьФормуВыборочногоКонтроляКМИзФормыВладельцаСредствамиККТ_ПослеЗаписи(ЗаписаноУспешно, Форма) Экспорт
	
	Если Не ЗаписаноУспешно Тогда
		Возврат;
	КонецЕсли;
	
	НомераУпаковокВыборочногоКонтроляКМ = Новый Массив;
	Для Каждого Строка Из Форма.Объект.Товары Цикл
		Если ЗначениеЗаполнено(Строка.НомерКИЗ) Тогда
			НомераУпаковокВыборочногоКонтроляКМ.Добавить(Строка.НомерКИЗ);
		КонецЕсли;
	КонецЦикла;
	
	Если Не ЗначениеЗаполнено(НомераУпаковокВыборочногоКонтроляКМ) Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ПроверяемыйДокумент", Форма.Объект.Ссылка);
	ПараметрыФормы.Вставить("НомераУпаковок", НомераУпаковокВыборочногоКонтроляКМ);
	
	ОткрытьФорму("Обработка.ВыборочныйКонтрольКММДЛП.Форма.ВыборочныйКонтроль", ПараметрыФормы, ЭтотОбъект);
	
КонецПроцедуры

// Конец БольничнаяАптека

#КонецОбласти
