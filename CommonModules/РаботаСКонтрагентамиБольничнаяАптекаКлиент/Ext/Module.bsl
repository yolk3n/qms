
////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС
#Область ПрограммныйИнтерфейс

// Заполняет реквизиты контрагента в форме по данным ЕГР
//
// Параметры:
//  Форма             - ФормаКлиентскогоПриложения - форма заполняемого объекта
//  СтрокаИНН         - Строка - ИНН, по которому будут получены данные
//  ЗаполняемыеДанные - Структура - данные заполнения реквизитов контрагента.
//  Оповестить        - ОписаниеОповещения - в вызываемую обработку будут переданы реквизиты контрагента, если они изменились
//
Процедура ЗаполнитьПоДаннымЕГР(Форма, СтрокаИНН, ЗаполняемыеДанные, Оповестить) Экспорт
	
	ЭтоФизЛицо = (СтрДлина(СтрокаИНН) = 12);
	ТекстСообщения = "";
	Если Не РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(СтрокаИНН, Не ЭтоФизЛицо, ТекстСообщения) Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыЗаполнения = Новый Структура;
	ПараметрыЗаполнения.Вставить("Форма"             , Форма);
	ПараметрыЗаполнения.Вставить("СтрокаИНН"         , СтрокаИНН);
	ПараметрыЗаполнения.Вставить("ЭтоЮридическоеЛицо", Не ЭтоФизЛицо);
	ПараметрыЗаполнения.Вставить("ЗаполняемыеДанные" , ЗаполняемыеДанные);
	ПараметрыЗаполнения.Вставить("Оповестить"        , Оповестить);
	
	РеквизитыКонтрагента = РаботаСКонтрагентамиБольничнаяАптекаВызовСервера.ПолучитьРеквизитыПоИНН(СтрокаИНН);
	Если ЗначениеЗаполнено(РеквизитыКонтрагента.ОписаниеОшибки) Тогда
		ПоказатьПользователюОшибкуПолученияРеквизитовКонтрагентаПоИНН(РеквизитыКонтрагента.ОписаниеОшибки, ПараметрыЗаполнения);
	Иначе
		ЗаполнитьПоДаннымЕГРПродолжение(РеквизитыКонтрагента, ПараметрыЗаполнения);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти // ПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

Процедура ПоказатьПользователюОшибкуПолученияРеквизитовКонтрагентаПоИНН(ОписаниеОшибки, ПараметрыЗаполнения)
	
	// Обработка ошибок
	Если ОписаниеОшибки = "НеУказаныПараметрыАутентификации" Тогда
		ТекстВопроса = НСтр("ru='Для автоматического заполнения реквизитов контрагентов
			|необходимо подключиться к Интернет-поддержке пользователей.
			|Подключиться сейчас?'");
		ОписаниеОповещения = Новый ОписаниеОповещения("ПодключитьИнтернетПоддержку", ЭтотОбъект, ПараметрыЗаполнения);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	ИначеЕсли ОписаниеОшибки = "НеУказанПароль" Тогда
		ТекстВопроса = НСтр("ru='Необходимо указать пароль к Интернет-поддержке пользователей
			|и установить флажок ""Запомнить пароль"".
			|Указать сейчас?'");
		ОписаниеОповещения = Новый ОписаниеОповещения("ПодключитьИнтернетПоддержку", ЭтотОбъект, ПараметрыЗаполнения);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	Иначе
		ПоказатьПредупреждение(, ОписаниеОшибки);
	КонецЕсли;
	
КонецПроцедуры

// Подключение интернет поддержки пользователей после запроса пользователя
//
Процедура ПодключитьИнтернетПоддержку(Ответ, ПараметрыЗаполнения) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ПодключитьИнтернетПоддержкуЗавершение", ЭтотОбъект, ПараметрыЗаполнения);
		ИнтернетПоддержкаПользователейКлиент.ПодключитьИнтернетПоддержкуПользователей(ОписаниеОповещения, ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

// Продолжение подключения интернет поддержки пользователей
//
Процедура ПодключитьИнтернетПоддержкуЗавершение(Результат, ПараметрыЗаполнения) Экспорт
	
	Если Результат <> Неопределено И Результат <> КодВозвратаДиалога.Отмена Тогда
		ЗаполнитьПоДаннымЕГР(ПараметрыЗаполнения.Форма, ПараметрыЗаполнения.СтрокаИНН, ПараметрыЗаполнения.ЗаполняемыеДанные, ПараметрыЗаполнения.Оповестить);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПоДаннымЕГРПродолжение(РеквизитыКонтрагента, ПараметрыЗаполнения)
	
	ДанныеОбъекта = ДанныеОбъектаДляСравнения(ПараметрыЗаполнения);
	РезультатСравнения = РезультатСравненияПолученныхДанныхКонтрагентаСИмеющимися(РеквизитыКонтрагента, ДанныеОбъекта);
	
	Если РезультатСравнения.ЕстьИзменения Тогда
		
		Если РезультатСравнения.ЕстьИзмененияВЗаполненныхРеквизитах Тогда
			
			ПараметрыЗаполнения.Вставить("РеквизитыКонтрагента", РеквизитыКонтрагента);
			ОписаниеОповещенияПерезаполнить = Новый ОписаниеОповещения("ЗаполнитьПоДаннымЕГРЗавершение", ЭтотОбъект, ПараметрыЗаполнения);
			ТекстВопроса = НСтр("ru = 'Перезаполнить реквизиты на основании данных ЕГРЮЛ\ЕГРИП?'");
			ПоказатьВопрос(ОписаниеОповещенияПерезаполнить, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
			
		Иначе
			ВыполнитьОбработкуОповещения(ПараметрыЗаполнения.Оповестить, РеквизитыКонтрагента);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Продолжение ЗаполнитьПоДаннымЕГРПродолжение
//
Процедура ЗаполнитьПоДаннымЕГРЗавершение(Ответ, ПараметрыЗаполнения) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ВыполнитьОбработкуОповещения(ПараметрыЗаполнения.Оповестить, ПараметрыЗаполнения.РеквизитыКонтрагента);
	КонецЕсли;
	
КонецПроцедуры

Функция ДанныеОбъектаДляСравнения(ПараметрыЗаполнения)
	
	ПолучаемыеДанные = ПустаяСтруктураДанныхКонтрагента(ПараметрыЗаполнения.ЭтоЮридическоеЛицо);
	
	Форма = ПараметрыЗаполнения.Форма;
	Объект = Форма.Объект;
	ЗаполняемыеДанные = ПараметрыЗаполнения.ЗаполняемыеДанные;
	
	ДанныеДляСравнения = Новый Структура;
	
	Для Каждого Реквизит Из ПолучаемыеДанные Цикл
		
		ПутьКДанным = Неопределено;
		Если ЗаполняемыеДанные.Свойство(Реквизит.Ключ, ПутьКДанным) Тогда
			Если ПутьКДанным = Неопределено Тогда
				ПутьКДанным = Реквизит.Ключ;
			КонецЕсли;
			
			Значение = Неопределено;
			ТипПути = ТипЗнч(ПутьКДанным);
			Если ТипПути = Тип("Строка") И Не ПустаяСтрока(ПутьКДанным) Тогда
				Значение = Объект[ПутьКДанным];
			ИначеЕсли ТипЗнч(ПутьКДанным) = Тип("СправочникСсылка.ВидыКонтактнойИнформации") Тогда
				ДанныеКонтактнойИнформации = ДанныеСтрокиКонтактнойИнформацииПоВиду(Форма, ПутьКДанным);
				Если ДанныеКонтактнойИнформации <> Неопределено Тогда
					Значение = Новый Структура("Представление", ДанныеКонтактнойИнформации.Представление);
				КонецЕсли;
			Иначе
				Значение = ПутьКДанным;
			КонецЕсли;
			
			ДанныеДляСравнения.Вставить(Реквизит.Ключ, Значение);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ДанныеДляСравнения;
	
КонецФункции

Функция ПустаяСтруктураДанныхКонтрагента(ЭтоЮридическоеЛицо)
	
	Если ЭтоЮридическоеЛицо Тогда
		
		РеквизитыОрганизации = Новый Структура;
		РеквизитыОрганизации.Вставить("ИНН");                         // Строка, 10
		РеквизитыОрганизации.Вставить("КПП");                         // Строка, 9
		РеквизитыОрганизации.Вставить("Наименование");                // Строка, 0
		РеквизитыОрганизации.Вставить("НаименованиеПолное");          // Строка, 0
		РеквизитыОрганизации.Вставить("НаименованиеСокращенное");     // Строка, 0
		РеквизитыОрганизации.Вставить("РегистрационныйНомер");        // Строка, 13 - ОГРН
		// Следующие свойства могут содержать Неопределено в случае отсутствия в сервисе данных.
		РеквизитыОрганизации.Вставить("ПравоваяФорма");               // Строка, 0
		РеквизитыОрганизации.Вставить("ЮридическийАдрес");            // Структура из НоваяКонтактнаяИнформация().
		РеквизитыОрганизации.Вставить("Телефон");                     // Структура из НоваяКонтактнаяИнформация().
		РеквизитыОрганизации.Вставить("Руководитель");                // Структура из НовоеКонтактноеЛицо().
		РеквизитыОрганизации.Вставить("РегистрацияВНалоговомОргане"); // Структура из НоваяРегистрацияВНалоговомОргане().
		РеквизитыОрганизации.Вставить("ДатаРегистрации");             // Дата
		РеквизитыОрганизации.Вставить("РегистрацияВПенсионномФонде"); // Структура из НоваяРегистрацияВПенсионномФонде().
		РеквизитыОрганизации.Вставить("РегистрацияВФСС");             // Структура из НоваяРегистрацияВФСС().
		РеквизитыОрганизации.Вставить("КодОКВЭД");                    // Строка, 8
		
		ПустыеДанныеКонтрагента = РеквизитыОрганизации;
		
	Иначе
		
		РеквизитыПредпринимателя = Новый Структура;
		РеквизитыПредпринимателя.Вставить("ИНН");                         // Строка, 12
		РеквизитыПредпринимателя.Вставить("Наименование");                // Строка, 0
		РеквизитыПредпринимателя.Вставить("НаименованиеПолное");          // Строка, 0
		РеквизитыПредпринимателя.Вставить("НаименованиеСокращенное");     // Строка, 0
		РеквизитыПредпринимателя.Вставить("Фамилия");                     // Строка, 0
		РеквизитыПредпринимателя.Вставить("Имя");                         // Строка, 0
		РеквизитыПредпринимателя.Вставить("Отчество");                    // Строка, 0
		РеквизитыПредпринимателя.Вставить("РегистрационныйНомер");        // Строка, 13 - ОГРН
		// Следующие свойства могут содержать Неопределено в случае отсутствия в сервисе данных.
		РеквизитыПредпринимателя.Вставить("Пол");                         // Строка: "1" - Мужской, "2" - Женский.
		РеквизитыПредпринимателя.Вставить("КодСтраныГражданства");        // Строка, 3
		РеквизитыПредпринимателя.Вставить("РегистрацияВНалоговомОргане"); // Структура из НоваяРегистрацияВНалоговомОргане().
		РеквизитыПредпринимателя.Вставить("РегистрацияВПенсионномФонде"); // Структура из НоваяРегистрацияВПенсионномФонде().
		РеквизитыПредпринимателя.Вставить("РегистрацияВФСС");             // Структура из НоваяРегистрацияВФСС().
		РеквизитыПредпринимателя.Вставить("ДатаРегистрации");             // Дата
		РеквизитыПредпринимателя.Вставить("КодОКВЭД");                    // Строка, 8
		РеквизитыПредпринимателя.Вставить("СвидетельствоОРегистрации");   // Структура из НовоеСвидетельствоОРегистрации().
		
		ПустыеДанныеКонтрагента = РеквизитыПредпринимателя;
		
	КонецЕсли;
	
	Возврат ПустыеДанныеКонтрагента;
	
КонецФункции

Функция РезультатСравненияПолученныхДанныхКонтрагентаСИмеющимися(РеквизитыКонтрагента, ДанныеОбъекта)
	
	Результат = Новый Структура("ЕстьИзменения, ЕстьИзмененияВЗаполненныхРеквизитах", Ложь, Ложь);
	
	Для Каждого Реквизит Из РеквизитыКонтрагента Цикл
		Если ЗначенияРазличаются(ДанныеОбъекта, Реквизит) Тогда
			Результат.ЕстьИзменения = Истина;
			Если ЗначениеРеквизитаЗаполнено(ДанныеОбъекта[Реквизит.Ключ]) Тогда
				Результат.ЕстьИзмененияВЗаполненныхРеквизитах = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция ЗначенияРазличаются(ДанныеОбъекта, Реквизит)
	
	НовоеЗначение = Реквизит.Значение;
	Если НовоеЗначение = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ТекущееЗначение = Неопределено;
	Если Не ДанныеОбъекта.Свойство(Реквизит.Ключ, ТекущееЗначение) Или ТекущееЗначение = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если ТипЗнч(НовоеЗначение) = Тип("Структура") Тогда
		Для Каждого Поле Из НовоеЗначение Цикл
			Если ЗначенияРазличаются(ТекущееЗначение, Поле) Тогда
				Возврат Истина;
			КонецЕсли;
		КонецЦикла;
		Возврат Ложь;
	КонецЕсли;
	
	Возврат НовоеЗначение <> ТекущееЗначение;
	
КонецФункции

Функция ЗначениеРеквизитаЗаполнено(Значение)
	
	Если Не ЗначениеЗаполнено(Значение) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если ТипЗнч(Значение) = Тип("Структура") Тогда
		Для Каждого Поле Из Значение Цикл
			Если ЗначениеЗаполнено(Поле.Значение) Тогда
				Возврат Истина;
			КонецЕсли;
		КонецЦикла;
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

Функция ДанныеСтрокиКонтактнойИнформацииПоВиду(Форма, ВидКонтактнойИнформации)
	
	Отбор  = Новый Структура("Вид", ВидКонтактнойИнформации);
	Строки = Форма.КонтактнаяИнформацияОписаниеДополнительныхРеквизитов.НайтиСтроки(Отбор);
	Возврат ?(Строки.Количество() = 0, Неопределено, Строки[0]);
	
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции
