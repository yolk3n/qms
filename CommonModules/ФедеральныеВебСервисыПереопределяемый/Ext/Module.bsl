#Область ПрограммныйИнтерфейс


// Возвращает структуру с данными о пациенте.
// Для создания структуры используйте ФедеральныеВебСервисыРЭМД.СоздатьСтруктуруДанныхПациента().
// ЗапрашиваемыеРеквизиты - Строка. Список через запятую имен запрашиваемых свойств документа, возвращаемая структура должна иметь как минимум поля с именами из этого списка.
Функция ПолучитьДанныеПациента(Пациент, ЗапрашиваемыеРеквизиты = Неопределено) Экспорт
	
	// БольничнаяАптека
	Результат = ФедеральныеВебСервисыРЭМД.СоздатьСтруктуруДанныхПациента(ЗапрашиваемыеРеквизиты);
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ФизическиеЛица.Наименование  КАК ФИО,
	|	ФизическиеЛица.ДатаРождения  КАК ДатаРождения,
	|	ФизическиеЛица.СНИЛС         КАК СтраховойНомерПФР,
	|	ВЫБОР
	|		КОГДА ФизическиеЛица.Пол = ЗНАЧЕНИЕ(Перечисление.ПолФизическогоЛица.Мужской)
	|			ТОГДА 1
	|		КОГДА ФизическиеЛица.Пол = ЗНАЧЕНИЕ(Перечисление.ПолФизическогоЛица.Женский)
	|			ТОГДА 2
	|		ИНАЧЕ 3
	|	КОНЕЦ                        КАК ПолПациентаКодРЭМД
	|ИЗ
	|	Справочник.ФизическиеЛица КАК ФизическиеЛица
	|ГДЕ
	|	ФизическиеЛица.Ссылка = &Ссылка
	|");
	
	Запрос.УстановитьПараметр("Ссылка", Пациент);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Не Выборка.Следующий() Тогда
		Возврат Результат;
	КонецЕсли;
	
	РезультатПолный = ФедеральныеВебСервисыРЭМД.СоздатьСтруктуруДанныхПациента();
	ЗаполнитьЗначенияСвойств(РезультатПолный, Выборка);
	ЗаполнитьЗначенияСвойств(РезультатПолный, ФизическиеЛицаКлиентСервер.ЧастиИмени(Выборка.ФИО));
	РезультатПолный.ИдентификаторПациента = Строка(Пациент.УникальныйИдентификатор());
	
	ЗаполнитьЗначенияСвойств(Результат, РезультатПолный);
	
	Возврат Результат;
	// Конец БольничнаяАптека
	
КонецФункции

// Возвращает структуру с данными о сотруднике.
// Для создания структуры используйте ФедеральныеВебСервисыРЭМД.СоздатьСтруктуруДанныхСотрудника().
// ЗапрашиваемыеРеквизиты - Строка. Список через запятую имен запрашиваемых свойств документа, возвращаемая структура должна иметь как минимум поля с именами из этого списка.
Функция ПолучитьДанныеСотрудника(Сотрудник, ЗапрашиваемыеРеквизиты = Неопределено) Экспорт
	
	// БольничнаяАптека
	Результат = ФедеральныеВебСервисыРЭМД.СоздатьСтруктуруДанныхСотрудника(ЗапрашиваемыеРеквизиты);
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ФизическиеЛица.Наименование      КАК ФИО,
	|	ФизическиеЛица.ДатаРождения      КАК ДатаРождения,
	|	ФизическиеЛица.СНИЛС             КАК СтраховойНомерПФР,
	|	ФизическиеЛица.КодДолжностиФРМР  КАК КодДолжностиФРМР,
	|	ФизическиеЛица.ДолжностьФРМР     КАК ДолжностьФРМР,
	|	ФизическиеЛица.КодДолжности1002  КАК КодДолжности1002,
	|	ФизическиеЛица.Должность1002     КАК Должность1002
	|ИЗ
	|	Справочник.ФизическиеЛица КАК ФизическиеЛица
	|ГДЕ
	|	ФизическиеЛица.Ссылка = &Ссылка
	|");
	
	Запрос.УстановитьПараметр("Ссылка", Сотрудник);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Не Выборка.Следующий() Тогда
		Возврат Результат;
	КонецЕсли;
	
	РезультатПолный = ФедеральныеВебСервисыРЭМД.СоздатьСтруктуруДанныхСотрудника();
	ЗаполнитьЗначенияСвойств(РезультатПолный, Выборка);
	ЗаполнитьЗначенияСвойств(РезультатПолный, ФизическиеЛицаКлиентСервер.ЧастиИмени(Выборка.ФИО));
	РезультатПолный.ИдентификаторСотрудника = Строка(Сотрудник.УникальныйИдентификатор());
	
	// В механизмах интеграции с РЭМД нужен Код минздрава должности, а не сама должность.
	// Создадим структуру для дальнейшего получения Кода минздрава в функции ПолучитьКодМинздраваПоСсылке этого модуля.
	РезультатПолный.Должность = Новый Структура("КодДолжностиФРМР, ДолжностьФРМР, КодДолжности1002, Должность1002");
	ЗаполнитьЗначенияСвойств(РезультатПолный.Должность, Выборка);
	
	ЗаполнитьЗначенияСвойств(Результат, РезультатПолный);
	
	Возврат Результат;
	// Конец БольничнаяАптека
	
КонецФункции

// Возвращает данные организации владельца документа которые будут использоваться в сообщениях для РЭМД.
// Для создания структуры используйте ФедеральныеВебСервисыРЭМД.СоздатьСтруктуруДанныхОрганизации().
Функция ПолучитьДанныеМедицинскойОрганизацииПоДокументу(ДокументИнформационнойБазы) Экспорт
	
	// БольничнаяАптека
	Результат = ФедеральныеВебСервисыРЭМД.СоздатьСтруктуруДанныхОрганизации();
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	Документ.Организация.Наименование  КАК Наименование,
	|	Документ.Организация.КодOID        КАК КодOIDМедицинскойОрганизации
	|ИЗ
	|	#Документ КАК Документ
	|ГДЕ
	|	Документ.Ссылка = &Ссылка
	|");
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "#Документ", ДокументИнформационнойБазы.Метаданные().ПолноеИмя());
	Запрос.УстановитьПараметр("Ссылка", ДокументИнформационнойБазы);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Не Выборка.Следующий() Тогда
		Возврат Результат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(Результат, Выборка);
	
	Возврат Результат;
	// Конец БольничнаяАптека
	
КонецФункции

// Возвращает структуру со свойствами документа необходимые для сообщений отправляемых в РЭМД.
// Для создания структуры используйте ФедеральныеВебСервисыРЭМД.СоздатьСтруктуруДанныхДокумента(ЗапрашиваемыеРеквизиты).
// ЗапрашиваемыеРеквизиты - Строка. Список через запятую имен запрашиваемых свойств документа, возвращаемая структура должна иметь как минимум поля с именами из этого списка.
Функция ПолучитьСвойстваДокументаДляРЭМД(ДокументИнформационнойБазы, ЗапрашиваемыеРеквизиты = Неопределено) Экспорт
	
	// БольничнаяАптека
	Менеджер = ОбщегоНазначения.МенеджерОбъектаПоСсылке(ДокументИнформационнойБазы);
	РезультатПолученияСвойствДляРЭМД = Менеджер.ПолучитьСвойстваДокументаДляРЭМД(ДокументИнформационнойБазы, ЗапрашиваемыеРеквизиты);
	Если РезультатПолученияСвойствДляРЭМД.Статус = "Ошибка" Тогда
		ВызватьИсключение НСтр("ru = 'Не удалось получить свойства документа для РЭМД. Подробности см. в Журнале регистрации.'");
	КонецЕсли;
	
	Возврат РезультатПолученияСвойствДляРЭМД.Данные;
	// Конец БольничнаяАптека
	
КонецФункции

// Возвращает ссылку на сертификат для подписания документа подписью медицинской организации.
Функция ПолучитьСертификатМедицинскойОрганизации(ДокументИнформационнойБазы) Экспорт
	
	РеквизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументИнформационнойБазы, "Дата, Организация");
	
	Если ЗначениеЗаполнено(РеквизитыДокумента.Организация) Тогда
		
		Сертификат = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РеквизитыДокумента.Организация, "СертификатЭПМедицинскойОрганизации");
		Если ЗначениеЗаполнено(Сертификат) Тогда
			
			СертификатКриптографии = Новый СертификатКриптографии(Сертификат.ДанныеСертификата.Получить());
			
			Если РеквизитыДокумента.Дата >= СертификатКриптографии.ДатаНачала
			   И РеквизитыДокумента.Дата < СертификатКриптографии.ДатаОкончания Тогда
				Возврат Сертификат;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

// Возвращает структуру со свойствами подразделения для передачи в РЭМД.
// Для создания структуры используйте ФедеральныеВебСервисыРЭМД.СоздатьСтруктуруДанныхПодразделения().
Функция ПолучитьДанныеПодразделения(Подразделение) Экспорт 
	
	// БольничнаяАптека
	Результат = ФедеральныеВебСервисыРЭМД.СоздатьСтруктуруДанныхПодразделения();
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	Справочник.Наименование  КАК Наименование,
	|	Справочник.Родитель      КАК Родитель,
	|	Справочник.КодOID        КАК КодOIDМедицинскогоПодразделения
	|ИЗ
	|	#Справочник КАК Справочник
	|ГДЕ
	|	Справочник.Ссылка = &Ссылка
	|");
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "#Справочник", Подразделение.Метаданные().ПолноеИмя());
	Запрос.УстановитьПараметр("Ссылка", Подразделение);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Не Выборка.Следующий() Тогда
		Возврат Результат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Выборка.КодOIDМедицинскогоПодразделения) Тогда
		ЗаполнитьЗначенияСвойств(Результат, Выборка);
	ИначеЕсли ЗначениеЗаполнено(Выборка.Родитель) Тогда
		Результат = ПолучитьДанныеПодразделения(Выборка.Родитель);
	КонецЕсли;
	
	Возврат Результат;
	// Конец БольничнаяАптека
	
КонецФункции

// Возвращает номер докумета, который будет использован для регистрации в РЭМД.
// При повторной регистрации (после изменения документа) номер должен быть прежним.
Функция ПолучитьНомерДокументаДляРЭМД(ДокументИнформационнойБазы) Экспорт

	Возврат Строка(ДокументИнформационнойБазы.УникальныйИдентификатор());
	
КонецФункции

// Возвращает идентификатор, который будет использован для регистрации в РЭМД.
// При повторной регистрации (после изменения документа) требуется присвоить новый идентификатор.
Функция СоздатьИдентификаторДокументаДляРЭМД(ДокументИнформационнойБазы) Экспорт

	Возврат Строка(Новый УникальныйИдентификатор);
	
КонецФункции

// Возвращает Истина если формирование документа завершено, иначе Ложь.
// Используется перед отправкой документа в РЭМД.
Функция ПроверитьГотовностьДокумента(ДокументИнформационнойБазы) Экспорт
	Возврат Истина;
КонецФункции

// Возвращает Истина если документ подлежит регистрации в РЭМД, иначе Ложь.
Функция ДокументПодлежитРегистрацииВРЭМД(ДокументИнформационнойБазы) Экспорт
	Возврат Истина;
КонецФункции

// Возвращает Истина если информационная система используется в условиях стационара.
Функция ИспользуютсяСтационарныеУсловия() Экспорт
	Возврат Истина;
КонецФункции

// Возвращает ссылку на элемент справочника или перечисления по коду и OID классификатора минздрава.
Функция ПолучитьСсылкуПоКодуМинздрава(code, codeSystem) Экспорт
	
	// БольничнаяАптека
	Если codeSystem = "1.2.643.5.1.13.13.11.1002" Тогда
		// Код минздрава: Должности медицинских и фармацевтических работников
		
		Если Не ЗначениеЗаполнено(code) Тогда
			Возврат Неопределено;
		КонецЕсли;
		
		Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	Справочник.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ФизическиеЛица КАК Справочник
		|ГДЕ
		|	Справочник.КодДолжности1002 = &КодДолжности1002
		|");
		
		Запрос.УстановитьПараметр("КодДолжности1002", СокрЛП(code));
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Не Выборка.Следующий() Тогда
			Возврат Неопределено;
		КонецЕсли;
		
		Возврат Выборка.Ссылка;
		
	ИначеЕсли codeSystem = "1.2.643.5.1.13.13.99.2.181" Тогда
		// Код ФРМР должности.
		
		Если Не ЗначениеЗаполнено(code) Тогда
			Возврат Неопределено;
		КонецЕсли;
		
		Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	Справочник.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ФизическиеЛица КАК Справочник
		|ГДЕ
		|	Справочник.КодДолжностиФРМР = &КодДолжностиФРМР
		|");
		
		Запрос.УстановитьПараметр("КодДолжностиФРМР", СокрЛП(code));
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Не Выборка.Следующий() Тогда
			Возврат Неопределено;
		КонецЕсли;
		
		Возврат Выборка.Ссылка;
		
	Иначе
		
		// Других случаев получения ссылки по коду минздрава, на текущий момент не предусмотрено.
		Возврат Неопределено;
		
	КонецЕсли;
	// Конец БольничнаяАптека
	
КонецФункции

// Возвращает структуру с кодом минздрава и OID классификатора (поля структуры code, codeSystem) по ссылке на элемент справочника или перечисления.
Функция ПолучитьКодМинздраваПоСсылке(СсылкаНаОбъектМетаданных, codeSystem = Неопределено) Экспорт
	
	// БольничнаяАптека
	Если ТипЗнч(СсылкаНаОбъектМетаданных) = Тип("Структура") Тогда
		
		Если codeSystem = "1.2.643.5.1.13.13.11.1002" Тогда
			// Код минздрава: Должности медицинских и фармацевтических работников
			
			// См. ПолучитьДанныеСотрудника этого модуля
			Возврат Новый ФиксированнаяСтруктура(Новый Структура("code", СсылкаНаОбъектМетаданных.КодДолжности1002));
			
		ИначеЕсли codeSystem = "1.2.643.5.1.13.13.99.2.181" Тогда
			// Код ФРМР должности.
			
			// См. ПолучитьДанныеСотрудника этого модуля
			Возврат Новый ФиксированнаяСтруктура(Новый Структура("code", СсылкаНаОбъектМетаданных.КодДолжностиФРМР));
			
		КонецЕсли;
		
	Иначе
		
		// Других случаев получения кода минздрава, на текущий момент не предусмотрено.
		// Возвращаем пустой код.
		Возврат Новый ФиксированнаяСтруктура(Новый Структура("code", ""));
		
	КонецЕсли;
	// Конец БольничнаяАптека
	
КонецФункции

// Возвращает код минздрава (Строка) родителя элемента с кодом переданном в параметре. Используется для иерархических справочников.
// На данный момент используется только для справочника должностей OID 1.2.643.5.1.13.13.11.1002,
// для других реализовывать переопределяемую функцию не обязательно.
Функция ПолучитьКодМинздраваРодителя(code, codeSystem) Экспорт
	
	Если Не ЗначениеЗаполнено(code) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если codeSystem = "1.2.643.5.1.13.13.11.1002" Тогда
		// Код минздрава: Должности медицинских и фармацевтических работников
		
		// Данные должности хранятся в справочнике ФизическиеЛица.
		// См. ПолучитьДанныеСотрудника этого модуля.
		
		Запрос = Новый Запрос("
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	ФизическиеЛица.КодДолжностиРодителя1002  КАК КодДолжностиРодителя1002
		|ИЗ
		|	Справочник.ФизическиеЛица КАК ФизическиеЛица
		|ГДЕ
		|	ФизическиеЛица.КодДолжности1002 = &КодДолжности1002
		|");
		
		Запрос.УстановитьПараметр("КодДолжности1002", code);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Возврат Выборка.КодДолжностиРодителя1002;
		Иначе
			Возврат Неопределено;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

// Возвращает ссылку на сотрудника подписывающего документ.
Функция ПолучитьСотрудникаПодписывающегоДокумент(ДокументИнформационнойБазы, Пользователь) Экспорт
	
	// БольничнаяАптека
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Пользователь, "ФизическоеЛицо");
	// Конец БольничнаяАптека
	
КонецФункции

// Возвращает ссылку на сотрудника соответствующего пользователю.
Функция ПолучитьСотрудникаПользователя(Пользователь) Экспорт
	
	// БольничнаяАптека
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Пользователь, "ФизическоеЛицо");
	// Конец БольничнаяАптека
	
КонецФункции

// Возвращает массив всех сотрудников использующих пользователя.
Функция ПолучитьСотрудниковПользователя(Пользователь) Экспорт
	
	// БольничнаяАптека
	Возврат ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Пользователь, "ФизическоеЛицо"));
	// Конец БольничнаяАптека
	
КонецФункции

// Переопределяет одноименную функцию общего модуля ФедеральныеВебСервисыРЭМД.
// Если изменение поведения не требуется достаточно венуть Неопределено.
// Должна вернуть выборку (тип ВыборкаИзРезультатаЗапроса) элементов справочника ФедеральныеВебСервисыЭМД для отправки в РЭМД.
// Список выбираемых реквизитов справочника ФедеральныеВебСервисыЭМД см. в оригинальном запросе.
// Если в функцию передан параметр ЭМДСсылка, в запрос должно быть добавлено условие ФедеральныеВебСервисыЭМД.Ссылка = &ЭМДСсылка
// (используется для проверки присутствия элемента в списке отправляемых).
// Если передан параметр МассивСсылокПредыдущихПорцийДляПолученияСледующейПорции (массив ссылок на элементы справочника ФедеральныеВебСервисыЭМД),
// в запросе необходимо исключить получение элементов справочника ссылки на которые содержатся в массиве
// (этот параметр используется для реализации порционного получения ссылок, если функция использует запрос без оператора ПЕРВЫЕ,
// т.е. возвращает все подъходящии ссылки за раз, то при вызове с параметром МассивСсылокПредыдущихПорцийДляПолученияСледующейПорции отличным от значения Неопределено
// желательно просто вернуть Неопределено, а не нагружать СУБД лишним запросом).
Функция ПолучитьВыборкуОтправляемыхДокументов(ЭМДСсылка = Неопределено, МассивСсылокПредыдущихПорцийДляПолученияСледующейПорции = Неопределено) Экспорт
	
	Возврат Неопределено;
	
КонецФункции

// Переопределяет одноименную функцию общего модуля ФедеральныеВебСервисыРЭМД.
// Если изменение поведения не требуется достаточно венуть Неопределено.
// Должна вернуть выборку (тип ВыборкаИзРезультатаЗапроса) элементов справочника ФедеральныеВебСервисыЭМД для автоматичекого подписания сертификатом МО.
// Список выбираемых реквизитов справочника ФедеральныеВебСервисыЭМД см. в оригинальном запросе.
Функция ПолучитьВыборкуПодписываемыхСертификатомОрганизацииДокументов() Экспорт
	
	Возврат Неопределено;
	
КонецФункции

// Если документ не готов к регистрации в РЭМД по причинам специфичным для конфигурации необходимо вернуть структуру
// с полями СтатусСтрокой, КодСтатуса, Описание, где СтатусСтрокой - краткое описание причины, КодСтатуса - какой-нибудь строковый код,
// Описание - более детальное описание причины. Иначе необходимо вернуть Неопределено.
Функция ПолучитьСтатусРегистрацииДокументаВРЭМД(ДокументИнформационнойБазы) Экспорт
	Возврат Неопределено;
КонецФункции

// Истина - если исходящие в РЭМД сообщения должны подписываться электронной подписью,
// иначе Ложь (сообщения не будут подписываться даже если в соответствующей константе указан сертификат для подписания).
Функция ИспользоватьПодписаниеСообщенийSoap() Экспорт
	Возврат Истина;
КонецФункции

// Требуется удалить электронные подписи документа.
// После изменения пациента в реквизите элемента справочника ФедеральныеВебСервисыЭМД из него были удалены все ЭЦП,
// если после удаления ЭЦП требуются действия специфичные для конфигурации их можно реализовать здесь.
// 
// Параметры:
//  ПорядковыйНомер      - Число - порядковый номер подписи, начальный номер 1.
//                       - Массив - значения указанного выше типа.
//                         Если параметр Неопределено, все подписи должны быть удалены.
Процедура УдалитьЭлектронныеПодписи(ДокументИнформационнойБазы, ПорядковыйНомер = Неопределено) Экспорт

КонецПроцедуры

// Возвращает ссылку на элемент справочника ФедеральныеВебСервисыЭМД который соответствует документу информационной базы.
// Требует реализации только если по какой-то специфичной для конфигурации причине не возможно найти элемент ЭМД по значению реквизита этого справочника ДокументИнформационнойБазы,
// к примеру, если в какой-то момент для некоего документа было решено в ЭМД в реквизит ДокументИнформационнойБазы помещать не ссылку на сам документ, а ссылку на иной объект конфигурации
// при этом для старых документов в ЭМД осталась ссылка на сам документ, тогда при повторном помещении старого документа в ЭМД (изменилось содержимое СЭМД)
// без реализации это переопределяемой функкции в ЭМД может появиться дубль, старый элемент попрежнему будет ссылаться на сам документ, а новый добавленный 
// со ссылкой на другой объект конфигурации. В данной ситуации эта функция должна отыскать элемент ЭМД, содержащий ссылку на сам документ, по ссылке на
// другой объект конфигурации.
Функция НайтиЭМДПоДокументуИнформационнойБазы(ДокументИнформационнойБазы) Экспорт
	Возврат Неопределено;
КонецФункции

#КонецОбласти
