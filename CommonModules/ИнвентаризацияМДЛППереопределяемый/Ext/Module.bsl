
#Область ПрограммныйИнтерфейс

#Область ОбработчикиСобытийДокументов

// Вызывается при вводе документа-уведомления на основании документа-инвентаризации.
//
// Параметры:
//  ДокументОбъект - ДокументОбъект - заполняемый документ,
//  ДанныеЗаполнения - ДокументСсылка.ИнвентаризацияПотребительскихУпаковокМДЛП - значение, которое используется как основание для заполнения.
//  ТекстЗаполнения - Строка, Неопределено - текст, используемый для заполнения документа,
//  СтандартнаяОбработка - Булево - признак выполнения стандартной (системной) обработки события.
//
Процедура ОбработкаЗаполнения(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	// БольничнаяАптека
	Товары = ДокументОбъект.Товары;
	Если Товары.Количество() > 0 И ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Товары[0], "КоличествоПервичныхУпаковокВоВторичной") Тогда
		
		ТаблицаЗначенийТовары = Товары.Выгрузить(, "НомерСтроки, Номенклатура, КоличествоПервичныхУпаковокВоВторичной");
		
		Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	Товары.НомерСтроки                             КАК НомерСтроки,
		|	Товары.Номенклатура                            КАК Номенклатура,
		|	Товары.КоличествоПервичныхУпаковокВоВторичной  КАК КоличествоПервичныхУпаковокВоВторичной
		|ПОМЕСТИТЬ Товары
		|ИЗ
		|	&ТаблицаЗначенийТовары КАК Товары
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Товары.НомерСтроки  КАК НомерСтроки,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).Упаковка.КоличествоВУпаковке, 0) = 0
		|			ТОГДА 1
		|		ИНАЧЕ ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).Упаковка.КоличествоВУпаковке
		|	КОНЕЦ               КАК КоличествоПервичныхУпаковокВоВторичной
		|ИЗ
		|	Товары КАК Товары
		|ГДЕ
		|	Товары.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|	И Товары.КоличествоПервичныхУпаковокВоВторичной = 0
		|");
		
		Запрос.УстановитьПараметр("ТаблицаЗначенийТовары", ТаблицаЗначенийТовары);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			СтрокаТовара = Товары[Выборка.НомерСтроки - 1];
			СтрокаТовара.КоличествоПервичныхУпаковокВоВторичной = Выборка.КоличествоПервичныхУпаковокВоВторичной;
		КонецЦикла;
		
	КонецЕсли;
	// Конец БольничнаяАптека
	
КонецПроцедуры

#КонецОбласти

#Область ФормированиеРезультатаПолученияДанныхАнализа

// Вызывается при формировании результата получения данных анализа инвентаризируемых упаковок.
// Устанавливает текст запроса получения данных номеров серий и сроков годности всех номеров упаковок информационной базы.
//
// Параметры:
//  ТекстЗапроса - Строка - (исходящий параметр) текст запроса с полями:
//   * НомерУпаковки - ОпределяемыеТипы.НомерУпаковкиМДЛП - номер упаковки.
//   * КлючУпаковки  - Строка - ключ упаковки.
//   * НомерСерии    - Строка - номер серии.
//   * ГоденДо       - Дата - срок годности.
//
Процедура УстановитьТекстЗапросаДанныеСерийНомеровУпаковокИБ(ТекстЗапроса) Экспорт
	
	// БольничнаяАптека
	СтандартнаяОбработка = Ложь;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	УпаковкиМаркируемогоТовара.НомерУпаковки            КАК НомерУпаковки,
	|	УпаковкиМаркируемогоТовара.КлючУпаковки             КАК КлючУпаковки,
	|	УпаковкиМаркируемогоТовара.СерияНоменклатуры.Номер  КАК НомерСерии,
	|	УпаковкиМаркируемогоТовара.ГоденДо                  КАК ГоденДо
	|ИЗ
	|	Справочник.УпаковкиМаркируемогоТовара КАК УпаковкиМаркируемогоТовара
	|ГДЕ
	|	НЕ УпаковкиМаркируемогоТовара.ПометкаУдаления
	|";
	// Конец БольничнаяАптека
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
