
#Область СлужебныеПроцедурыИФункции

// Распаковывает транспортные контейнеры.
// 
// Параметры:
// 	Контейнеры - Массив из ДокументСсылка.ТранспортныйКонтейнерЭДО
Процедура РаспаковатьКонтейнеры(Контейнеры) Экспорт
	
	ТекстСообщения = НСтр("ru = 'Выполняется распаковка транспортных контейнеров ЭДО. Подождите...'");
	Состояние(НСтр("ru = 'Распаковка.'"), , ТекстСообщения);
	
	КонтекстДиагностики = ОбработкаНеисправностейБЭДКлиент.НовыйКонтекстДиагностики();
	Контекст = Новый Структура;
	Контекст.Вставить("Контейнеры", Контейнеры);
	Контекст.Вставить("КонтекстДиагностики", КонтекстДиагностики);
	Контекст.Вставить("РаспакованоКонтейнеров", 0);
	Оповещение = Новый ОписаниеОповещения("РаспаковатьКонтейнерыПослеПолученияОтпечатков",
		ЭтотОбъект, Контекст);
	КриптографияБЭДКлиент.ПолучитьОтпечаткиСертификатов(Оповещение);
	
КонецПроцедуры

Процедура РаспаковатьКонтейнерыПослеПолученияОтпечатков(Отпечатки, Контекст) Экспорт
	
	ДлительнаяОперация = ТранспортныеКонтейнерыЭДОВызовСервера.НачатьРаспаковкуКонтейнеров(Контекст.Контейнеры,
		Отпечатки, Контекст.КонтекстДиагностики);
	
	Оповещение = Новый ОписаниеОповещения("РаспаковатьКонтейнерыПослеРаспаковкиКонтейнеров", ЭтотОбъект, Контекст);
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Неопределено);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, Оповещение, ПараметрыОжидания);
		
КонецПроцедуры

Процедура РаспаковатьКонтейнерыПослеРаспаковкиКонтейнеров(РезультатВыполнения, Контекст) Экспорт
	
	Если РезультатВыполнения.Статус = "Ошибка" Тогда
		ВидОшибки = ОбработкаНеисправностейБЭДКлиентСервер.ВидОшибкиНеизвестнаяОшибка();
		ВидОперации = НСтр("ru = 'Распаковка транспортных контейнеров ЭДО'");
		Ошибка = ОбработкаНеисправностейБЭДКлиент.НоваяОшибка(ВидОперации, ВидОшибки,
			РезультатВыполнения.ПодробноеПредставлениеОшибки, РезультатВыполнения.КраткоеПредставлениеОшибки);
		ОбработкаНеисправностейБЭДКлиент.ДобавитьОшибку(Контекст.КонтекстДиагностики, Ошибка,
			ОбщегоНазначенияБЭДКлиентСервер.ПодсистемыБЭД().ОбменСКонтрагентами);
		ОбработкаНеисправностейБЭДКлиент.ОбработатьОшибки(Контекст.КонтекстДиагностики);
		Возврат;
	КонецЕсли;
	
	РезультатРаспаковки = ТранспортныеКонтейнерыЭДОВызовСервера.РезультатРаспаковкиКонтейнеров(
		РезультатВыполнения.АдресРезультата);
	
	Контекст.КонтекстДиагностики = РезультатРаспаковки.КонтекстДиагностики;
	Контекст.РаспакованоКонтейнеров = РезультатРаспаковки.РаспакованоКонтейнеров;
	Оповещение = Новый ОписаниеОповещения("РаспаковатьКонтейнерыПослеОбработкиРезультатовЗагрузкиДокументов",
		ЭтотОбъект, Контекст);
	ЭлектронныеДокументыЭДОКлиент.НачатьОбработкуРезультатовЗагрузкиДокументов(Оповещение,
		РезультатРаспаковки.РезультатЗагрузкиДокументов, , Контекст.КонтекстДиагностики);
		
КонецПроцедуры

Процедура РаспаковатьКонтейнерыПослеОбработкиРезультатовЗагрузкиДокументов(Результат, Контекст) Экспорт
	
	ШаблонОповещения = НСтр("ru = 'Распаковано контейнеров: %1.'");
	ТекстОповещения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонОповещения,
		Контекст.РаспакованоКонтейнеров);
	ЗаголовокОповещения = НСтр("ru = 'Обмен электронными документами'");
	ПоказатьОповещениеПользователя(ЗаголовокОповещения, , ТекстОповещения);
	Оповестить("ОбновитьСостояниеЭД");
	
	ОбработкаНеисправностейБЭДКлиент.ОбработатьОшибки(Результат.КонтекстДиагностики);
	
КонецПроцедуры

#КонецОбласти