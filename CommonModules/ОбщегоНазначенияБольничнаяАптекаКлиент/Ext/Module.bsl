
////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС
#Область ПрограммныйИнтерфейс

// Устанавливает значение пометки удаления передаваемой ссылки.
//
// Параметры:
//  Ссылка - ЛюбаяСсылка - ссылка удаляемого объекта.
//
Процедура УстановитьПометкуУдаления(Ссылка) Экспорт
	
	Если Не ЗначениеЗаполнено(Ссылка) Тогда
		Возврат;
	КонецЕсли;
	
	УстановкаПометки = Не ОбщегоНазначенияБольничнаяАптекаВызовСервера.ОбъектПомеченНаУдаление(Ссылка);
	Если УстановкаПометки Тогда
		ТекстВопроса = НСтр("ru='Пометить ""%1"" на удаление?'");
	Иначе
		ТекстВопроса = НСтр("ru='Снять с ""%1"" пометку на удаление?'");
	КонецЕсли;
	
	ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстВопроса, СокрЛП(Ссылка));
	
	Оповестить = Новый ОписаниеОповещения("УстановитьПометкуУдаленияПродолжение", ОбщегоНазначенияБольничнаяАптекаКлиент, Ссылка);
	ПоказатьВопрос(Оповестить, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

// Продолжение процедуры УстановитьПометкуУдаления
//
// Параметры:
//  Ответ  - КодВозвратаДиалога
//  Ссылка - ЛюбаяСсылка - ссылка удаляемого объекта.
//
Процедура УстановитьПометкуУдаленияПродолжение(Ответ, Ссылка) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ОбщегоНазначенияБольничнаяАптекаВызовСервера.УстановитьПометкуУдаления(Ссылка);
		ОповеститьОбИзменении(Ссылка);
	КонецЕсли;
	
КонецПроцедуры

// Формирует описание оповещения с продолжением выполнения закрытия формы.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма, которую необходимо закрыть.
//
// Возвращаемое значение:
//  Оповещение - ОписаниеОповещения - описание события после предупреждения.
//
Функция ЗакрытьФормуПослеПредупреждения(Форма) Экспорт
	
	Оповещение = Новый ОписаниеОповещения("ЗакрытьФорму", ЭтотОбъект, Форма);
	Возврат Оповещение;
	
КонецФункции

// Продолжение функции ЗакрытьФормуПослеПредупреждения.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма, которую необходимо закрыть.
//
Процедура ЗакрытьФорму(Форма) Экспорт
	
	Форма.Закрыть();
	
КонецПроцедуры

#Область УстановкаСтатуса

// Изменяет статус переданных объектов
//
// Параметры:
//  Список                  - список объектов для изменения статуса.
//  Статус                  - Строка - устанавливаемый статус.
//  ПредставлениеСтатуса    - Строка - представление устанавливаемого статуса.
//  ДополнительныеПараметры - Произвольный - дополнительные параметры обработки изменения статуса.
//  ТекстВопроса            - Строка - текст вопроса, при изменении статуса.
//  ОповещениеЗавершения    - ОписаниеОповещения - будет использовано для передачи управления далее.
//
Процедура УстановитьСтатусОбъектовВСписке(Список, Статус, ПредставлениеСтатуса, ДополнительныеПараметры = Неопределено, ТекстВопроса, ОповещениеЗавершения = Неопределено) Экспорт
	
	ВыделенныеСтроки = ВзаимодействиеСПользователемКлиент.ПроверитьПолучитьВыделенныеВСпискеСсылки(Список);
	Если ВыделенныеСтроки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыУстановкиСтатуса = Новый Структура;
	ПараметрыУстановкиСтатуса.Вставить("Список"                 , Список);
	ПараметрыУстановкиСтатуса.Вставить("ВыделенныеСтроки"       , ВыделенныеСтроки);
	ПараметрыУстановкиСтатуса.Вставить("Статус"                 , Статус);
	ПараметрыУстановкиСтатуса.Вставить("ПредставлениеСтатуса"   , ПредставлениеСтатуса);
	ПараметрыУстановкиСтатуса.Вставить("ДополнительныеПараметры", ДополнительныеПараметры);
	
	Если ОповещениеЗавершения = Неопределено Тогда
		Оповещение = Новый ОписаниеОповещения("УстановитьСтатусОбъектовВСпискеПродолжение", ЭтотОбъект, ПараметрыУстановкиСтатуса);
	Иначе
		Оповещение = Новый ОписаниеОповещения(ОповещениеЗавершения.ИмяПроцедуры, ОповещениеЗавершения.Модуль, ПараметрыУстановкиСтатуса);
	КонецЕсли;
	ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

// Продолжение процедуры УстановитьСтатусОбъектовВСписке
//
// Параметры:
//  Ответ                     - КодВозвратаДиалога
//  ПараметрыУстановкиСтатуса - Структура - параметры, используемые для обработки изменения статуса.
//
Процедура УстановитьСтатусОбъектовВСпискеПродолжение(Ответ, ПараметрыУстановкиСтатуса) Экспорт
	
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ВыделенныеСтроки = ПараметрыУстановкиСтатуса.ВыделенныеСтроки;
	КоличествоВсего = ВыделенныеСтроки.Количество();
	
	ОчиститьСообщения();
	КоличествоОбработанных = ОбщегоНазначенияБольничнаяАптекаВызовСервера.УстановитьСтатусОбъектов(ПараметрыУстановкиСтатуса.ВыделенныеСтроки, ПараметрыУстановкиСтатуса.Статус, ПараметрыУстановкиСтатуса.ДополнительныеПараметры);
	ОповеститьПользователяОбУстановкеСтатуса(ПараметрыУстановкиСтатуса.Список, КоличествоОбработанных, КоличествоВсего, ПараметрыУстановкиСтатуса.ПредставлениеСтатуса);
	
КонецПроцедуры

#КонецОбласти // УстановкаСтатуса

#КонецОбласти // ПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

Процедура ОповеститьПользователяОбУстановкеСтатуса(СписокДокументов, КоличествоОбработанных, КоличествоВсего, Статус)
	
	Если КоличествоОбработанных > 0 Тогда
		
		Если СписокДокументов.Видимость = Истина Тогда
			СписокДокументов.Обновить();
		КонецЕсли;
		
		ТекстСообщения = НСтр("ru='Для %1 из %2 выделенных в списке документов установлен статус ""%3""'");
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, КоличествоОбработанных, КоличествоВсего, Статус);
		ТекстЗаголовка = НСтр("ru='Статус ""%1"" установлен'");
		ТекстЗаголовка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстЗаголовка, Статус);
		ПоказатьОповещениеПользователя(ТекстЗаголовка,, ТекстСообщения, БиблиотекаКартинок.Информация32);
		
	Иначе
		
		ТекстСообщения = НСтр("ru='Статус ""%1"" не установлен ни для одного документа.'");
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, Статус);
		ТекстЗаголовка = НСтр("ru='Статус ""%1"" не установлен'");
		ТекстЗаголовка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстЗаголовка, Статус);
		ПоказатьОповещениеПользователя(ТекстЗаголовка,, ТекстСообщения, БиблиотекаКартинок.Информация32);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти // СлужебныеПроцедурыИФункции

