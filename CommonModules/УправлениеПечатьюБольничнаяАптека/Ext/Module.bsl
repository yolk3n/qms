
////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС
#Область ПрограммныйИнтерфейс

// Возвращает пустую таблицу доступных печатных форм документа. Для добавления печатных форм следует использовать
// метод УправлениеПечатьюБольничнаяАптека.ДобавитьПечатнуюФорму.
//
// Возвращаемое значение:
//   ТаблицаЗначений   - таблица с колонками:
//       см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати - используются как значения по умолчанию для
//          добавляемых команд печати
//     * ПутьКМакету     - Строка - полный путь к макету печатной формы, например, Документ.ПоступлениеТоваров.ПФ_MXL_М4
//     * Роли            - Строка - список ролей разделенных запятой, для которых доступна печатная форма
//     * КомандыПечати   - ТаблицаЗначений - см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//     * Параметризуемая - Булево - служебный, устанавливается у печатных форм, которые имею несколько команд печати
//
Функция СоздатьКоллекциюДоступныхПечатныхФорм() Экспорт
	
	ПечатныеФормы = УправлениеПечатью.СоздатьКоллекциюКомандПечати();
	
	ПечатныеФормы.Колонки.Добавить("ПутьКМакету", Новый ОписаниеТипов("Строка"));
	ПечатныеФормы.Колонки.Добавить("КомандыПечати", Новый ОписаниеТипов("ТаблицаЗначений"));
	ПечатныеФормы.Колонки.Добавить("Роли", Новый ОписаниеТипов("Строка"));
	ПечатныеФормы.Колонки.Добавить("Параметризуемая", Новый ОписаниеТипов("Булево"));
	
	Возврат ПечатныеФормы;
	
КонецФункции

// Добавляет описание печатной формы
//
// Параметры:
//  ПечатныеФормы  - ТаблицаЗначений - Таблица, возвращаемая функцией УправлениеПечатьюБольничнаяАптека.СоздатьКоллекциюДоступныхПечатныхФорм
//
//  Идентификатор  - Строка          - Идентификатор печатной формы
//
//  МенеджерПечати - Строка          - (необязательный) Имя объекта, в модуле менеджера которого располагается функция
//                                     формирования печатной формы. Имя функции
//                                     должно формироваться по правилу: "Печать" + Идентификатор + "(МассивОбъектов, ОбъектыПечати)".
//                                     Например: Функция ПечатьМ4(МассивОбъектов, ОбъектыПечати) Экспорт
//
//  Обработчик     - Строка          - (необязательный) Клиентский обработчик команды, в который необходимо передать
//                                     управление вместо стандартного обработчика команды печать.
//
// Возвращаемое значение:
//   Строка таблицы значений - добавленное описание печатной формы
//
Функция ДобавитьПечатнуюФорму(ПечатныеФормы, Идентификатор, МенеджерПечати = "", Обработчик = "") Экспорт
	
	ПечатнаяФорма = ПечатныеФормы.Добавить();
	ПечатнаяФорма.МенеджерПечати = МенеджерПечати;
	ПечатнаяФорма.Обработчик = Обработчик;
	ПечатнаяФорма.Идентификатор = Идентификатор;
	
	ПечатнаяФорма.КомандыПечати = УправлениеПечатью.СоздатьКоллекциюКомандПечати();
	ПечатнаяФорма.ПроверкаПроведенияПередПечатью = Истина;
	
	Возврат ПечатнаяФорма;
	
КонецФункции

// Добавляет описание команды печати печатной формы
//
// Параметры:
//  ПечатнаяФорма - СтрокаТаблицыЗначений - описание печатной формы, возвращаемое
//                  функцией УправлениеПечатьюБольничнаяАптека.ДобавитьПечатнуюФорму
//
// Возвращаемое значение:
//   Строка таблицы значений - добавленное описание команды печати
//
Функция ДобавитьКомандуПечати(ПечатнаяФорма) Экспорт
	
	КомандаПечати = ПечатнаяФорма.КомандыПечати.Добавить();
	ЗаполнитьЗначенияСвойств(КомандаПечати, ПечатнаяФорма);
	Для Каждого Колонка Из ПечатнаяФорма.КомандыПечати.Колонки Цикл
		КомандаПечати[Колонка.Имя] = ОбщегоНазначения.СкопироватьРекурсивно(КомандаПечати[Колонка.Имя]);
	КонецЦикла;
	
	КомандаПечати.МенеджерПечати = Метаданные.Обработки.МенеджерПечати.ПолноеИмя();
	
	Возврат КомандаПечати;
	
КонецФункции

#КонецОбласти // ПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

// Заполняет список команд печати.
// 
// Параметры:
//  ПолноеИмяОбъекта - Строка - Полное имя объекта для которого заполняются команды печати
//  КомандыПечати    - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(Знач ПолноеИмяОбъекта, КомандыПечати) Экспорт
	
	ПечатныеФормы = УправлениеПечатьюБольничнаяАптекаПовтИсп.ДоступныеПечатныеФормы(ПолноеИмяОбъекта);
	Для Каждого ПечатнаяФорма Из ПечатныеФормы Цикл
		
		Если ПечатнаяФорма.КомандыПечати.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Если Не ПустаяСтрока(ПечатнаяФорма.Роли) И Не Пользователи.РолиДоступны(ПечатнаяФорма.Роли) Тогда
			Продолжить;
		КонецЕсли;
		
		Для Каждого Команда Из ПечатнаяФорма.КомандыПечати Цикл
			КомандаПечати = КомандыПечати.Добавить();
			ЗаполнитьЗначенияСвойств(КомандаПечати, Команда);
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

// Определяет объекты, в которых есть процедура ДобавитьКомандыПечати().
//
// Параметры:
//  СписокОбъектов - Массив - список менеджеров объектов.
//
Процедура ПриОпределенииОбъектовСКомандамиПечати(СписокОбъектов) Экспорт
	
	// БольничнаяАптека
	Если ОбщегоНазначенияБольничнаяАптека.ЭтоОсновнаяПодсистемаКонфигурации() Тогда
		СписокОбъектов.Добавить(Справочники.Номенклатура);
		СписокОбъектов.Добавить(Справочники.Организации);
		СписокОбъектов.Добавить(Справочники.Контрагенты);
		СписокОбъектов.Добавить(Справочники.ДоговорыКонтрагентов);
	КонецЕсли;
	СписокОбъектов.Добавить(Справочники.ЛекарственныеПрописи);
	СписокОбъектов.Добавить(Документы.АктОбУстановленииРасхожденияВКоличествеИКачестве);
	СписокОбъектов.Добавить(Документы.ВводОстатков);
	СписокОбъектов.Добавить(Документы.ВнесениеДенежныхСредствВКассуККМ);
	СписокОбъектов.Добавить(Документы.ВнутреннееПотреблениеТоваров);
	СписокОбъектов.Добавить(Документы.ВнутреннееПотреблениеТоваровВОтделении);
	СписокОбъектов.Добавить(Документы.ВозвратТоваровИзОтделения);
	СписокОбъектов.Добавить(Документы.ВозвратТоваровОтКлиента);
	СписокОбъектов.Добавить(Документы.ВозвратТоваровПоставщику);
	СписокОбъектов.Добавить(Документы.ВыемкаДенежныхСредствИзКассыККМ);
	СписокОбъектов.Добавить(Документы.ЗаказНаПеремещение);
	СписокОбъектов.Добавить(Документы.ЗаказПоставщику);
	СписокОбъектов.Добавить(Документы.ИзготовлениеПоЛекарственнойПрописи);
	СписокОбъектов.Добавить(Документы.ИнвентаризацияТоваровНаСкладе);
	СписокОбъектов.Добавить(Документы.ИнвентаризацияТоваровНаСкладеВОтделении);
	СписокОбъектов.Добавить(Документы.КорректировкаРегистров);
	СписокОбъектов.Добавить(Документы.НазначениеВрача);
	СписокОбъектов.Добавить(Документы.ОприходованиеИзлишковТоваров);
	СписокОбъектов.Добавить(Документы.ОприходованиеИзлишковТоваровВОтделении);
	СписокОбъектов.Добавить(Документы.ОтпускТоваровВОтделение);
	СписокОбъектов.Добавить(Документы.ОтчетОРозничныхПродажах);
	СписокОбъектов.Добавить(Документы.ПередачаТоваровНаСторону);
	СписокОбъектов.Добавить(Документы.ПеремещениеТоваров);
	СписокОбъектов.Добавить(Документы.ПеремещениеТоваровМеждуОтделениями);
	СписокОбъектов.Добавить(Документы.ПересортицаТоваров);
	СписокОбъектов.Добавить(Документы.ПересортицаТоваровВОтделении);
	СписокОбъектов.Добавить(Документы.ПоступлениеДопРасходов);
	СписокОбъектов.Добавить(Документы.ПоступлениеТоваров);
	СписокОбъектов.Добавить(Документы.ПотреблениеТоваровПоНазначениямВрачей);
	СписокОбъектов.Добавить(Документы.ПрочееОприходованиеТоваров);
	СписокОбъектов.Добавить(Документы.РазмещениеТоваровПоМестамХранения);
	СписокОбъектов.Добавить(Документы.РазмещениеТоваровПоМестамХраненияВОтделении);
	СписокОбъектов.Добавить(Документы.РасчетСебестоимостиТоваров);
	СписокОбъектов.Добавить(Документы.СпецификацияКДоговору);
	СписокОбъектов.Добавить(Документы.СписаниеНедостачТоваров);
	СписокОбъектов.Добавить(Документы.СписаниеНедостачТоваровВОтделении);
	СписокОбъектов.Добавить(Документы.ТребованиеОтделения);
	СписокОбъектов.Добавить(Документы.УстановкаЦенНоменклатуры);
	СписокОбъектов.Добавить(Документы.ФормулярныйСписокНоменклатуры);
	СписокОбъектов.Добавить(Документы.ЧекККМ);
	СписокОбъектов.Добавить(Документы.ЧекККМВозврат);
	СписокОбъектов.Добавить(Документы.ЧекККМКоррекции);
	СписокОбъектов.Добавить(БизнесПроцессы.Согласование);
	СписокОбъектов.Добавить(ЖурналыДокументов.ЧекиККМ);
	// Конец БольничнаяАптека
	
	// ИнтеграцияМДЛП
	СписокОбъектов.Добавить(Документы.ИнвентаризационнаяОписьМДЛП);
	СписокОбъектов.Добавить(Документы.ИнвентаризацияПотребительскихУпаковокМДЛП);
	СписокОбъектов.Добавить(Документы.УведомлениеВладельцаОбОприходованииМДЛП);
	СписокОбъектов.Добавить(Документы.УведомлениеОбАгрегированииИТрансформацииУпаковокМДЛП);
	СписокОбъектов.Добавить(Документы.УведомлениеОбОприходованииМДЛП);
	СписокОбъектов.Добавить(Документы.УведомлениеОбОтгрузкеМДЛП);
	СписокОбъектов.Добавить(Документы.УведомлениеОбОтпускеЛППоДокументамОтличнымОтЧекаМДЛП);
	СписокОбъектов.Добавить(Документы.УведомлениеОбОтпускеПоЛьготномуРецептуМДЛП);
	СписокОбъектов.Добавить(Документы.УведомлениеОВыбытииМДЛП);
	СписокОбъектов.Добавить(Документы.УведомлениеОВыдачеВОтделенияМДЛП);
	СписокОбъектов.Добавить(Документы.УведомлениеОПередачеНаУничтожениеМДЛП);
	СписокОбъектов.Добавить(Документы.УведомлениеОПеремещенииГЛОМДЛП);
	СписокОбъектов.Добавить(Документы.УведомлениеОПеремещенииМДЛП);
	СписокОбъектов.Добавить(Документы.УведомлениеОПовторномВводеВОборотМДЛП);
	СписокОбъектов.Добавить(Документы.УведомлениеОПриемкеМДЛП);
	СписокОбъектов.Добавить(Документы.УведомлениеОРозничнойПродажеМДЛП);
	СписокОбъектов.Добавить(Документы.УведомлениеОФактеУничтоженияМДЛП);
	СписокОбъектов.Добавить(Документы.УведомлениеОбОтсутствииЛПНаБалансеМДЛП);
	// Конец ИнтеграцияМДЛП
	
КонецПроцедуры

#КонецОбласти // СлужебныеПроцедурыИФункции
