#Область ПрограммныйИнтерфейс

Функция ИмяСобытияЗаписьГосконтрактаЕИС() Экспорт
	
	Возврат "Запись_ГосконтрактЕИС";
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция СобытиеЖурналаРегистрации(ВариантСобытия = "") Экспорт
	
	ИмяСобытия = НСтр("ru = 'Электронное актирование в ЕИС'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
	Если Не ПустаяСтрока(ВариантСобытия) Тогда
		ИмяСобытия = ИмяСобытия + "." + ВариантСобытия;
	КонецЕсли;

	Возврат ИмяСобытия;
	
КонецФункции

Функция ТекстСообщенияОМаркировке() Экспорт
	
	Возврат НСтр("ru='В документе используется товарная маркировка. Из-за технических ограничений в работе ЕИС в"
		+" сфере закупок данные по маркировке не будут переданы в личный кабинет.'");
	
КонецФункции

Функция ТекстСообщенияОПрослеживаемость() Экспорт
	
	Возврат НСтр("ru='В документе присутствуют прослеживаемые товары. Из-за технических ограничений в работе ЕИС в"
		+" сфере закупок данные по прослеживаемости не будут переданы в личный кабинет.'");
	
КонецФункции

Функция МаксимальныйРазмерПриложенногоФайлаВБайтах() Экспорт
	
	Возврат 10 * БайтовВМегабайте();
	
КонецФункции

Функция МаксимальныйОбщийРазмерПриложенныхФайловВБайтах() Экспорт
	
	Возврат 10 * БайтовВМегабайте();
	
КонецФункции

Функция ГиперссылкаОткрытияЛичногоКабинетаПоставщика() Экспорт
	
	Возврат "https://eis5.roskazna.ru/auth/welcome";;
	
КонецФункции

Функция ГиперссылкаОткрытияДанныхСтрокиКонтракта() Экспорт
	
	Возврат НСтр("ru='Открыть'");
	
КонецФункции

Функция НовоеМестоПоставки() Экспорт
	
	МестоПоставки = Новый Структура;
	МестоПоставки.Вставить("Место", "");
	МестоПоставки.Вставить("Адрес", "");
	МестоПоставки.Вставить("ДанныеМеста", "");
	
	Возврат МестоПоставки;
	
КонецФункции

Функция СтатусПользователяАктивен() Экспорт
	
	Возврат ПредопределенноеЗначение("Перечисление.СтатусыПодписантовЕИС.Активный");
	
КонецФункции

Функция СтатусПользователяЗаблокирован() Экспорт
	
	Возврат ПредопределенноеЗначение("Перечисление.СтатусыПодписантовЕИС.Заблокирован");
	
КонецФункции

Функция НовыеСведенияОПодписанте() Экспорт
	
	Результат = Новый Структура;
	// Идентификатор пользователя из ЕСИА.
	// userId, Число.
	Результат.Вставить("Идентификатор", 0);
	// Дата регистрации пользователя в ЕРУЗ.
	// commonInfo/regDate, Дата.
	Результат.Вставить("ДатаРегистрации", Дата(1, 1, 1));
	// Дата/время последнего изменения.
	// commonInfo/modificationDate, Дата.
	Результат.Вставить("ДатаМодификации");
	// Статус пользователя:
	// A - Активный;
	// B - Заблокирован.
	// status, Строка.
	Результат.Вставить("Статус", СтатусПользователяАктивен());
	// nameInfo/lastName, Строка(60).
	Результат.Вставить("Фамилия", "");
	// nameInfo/firstName, Строка(60).
	Результат.Вставить("Имя", "");
	// nameInfo/middleName, Строка(60).
	Результат.Вставить("Отчество");
	// Составное поле.
	Результат.Вставить("ФИО");
	
	// Массив структур НовыеСведенияОПолномочияхПользователя().
	Результат.Вставить("Полномочия", Новый Массив);
	
	// Тип подписанта.
	// signerType, Строка.
	// ТипПодписантаФизическоеЛицо(), ТипПодписантаПредприниматель(), ТипПодписантаПредставительЮрЛица()
	Результат.Вставить("ТипПодписанта");
	// individualPersonInfo/INN, Строка(12).
	// individualEntrepreneurInfo/INN, Строка(12).
	// legalEntityInfo/INN, Строка(10).
	Результат.Вставить("ИНН");
	// Для ТипПодписантаПредставительЮрЛица().
	// legalEntityInfo/fullName, Строка(1000).
	Результат.Вставить("НаименованиеОрганизации");
	// legalEntityInfo/position, Строка(255).
	Результат.Вставить("Должность");
	
	// Актуальность связи пользователя с реестровой записью ЕРУЗ
	// isActual, Булево
	Результат.Вставить("АктуальностьСвязиСРеестровойЗаписьюЕРУЗ", Истина);
	
	Возврат Результат;
	
КонецФункции

Функция НовыеСведенияОПодписантеДляДокумента() Экспорт
	
	Результат = НовыеСведенияОПодписанте();
	Результат.Вставить("Выбран", Ложь);
	Результат.Вставить("ОбластьПолномочий", "");
	Результат.Вставить("ОснованиеПолномочий", "");

	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция БайтовВМегабайте()
	
	Возврат 1024 * 1024;
	
КонецФункции

#КонецОбласти