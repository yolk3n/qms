
////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС
#Область ПрограммныйИнтерфейс

// Возвращает фильтруемый список.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма, где используется фильтр.
//
// Возвращаемое значение:
//  ДинамическийСписок.
//
Функция ФильтруемыйСписок(Форма) Экспорт
	
	Возврат Форма[ИмяФильтруемогоСписка(Форма)];
	
КонецФункции

// Возвращает фильтруемый список как элемент формы.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма, где используется фильтр.
//
// Возвращаемое значение:
//  ТаблицаФормы.
//
Функция ФильтруемыйСписокЭлементФормы(Форма) Экспорт
	
	Возврат Форма.Элементы[ИмяФильтруемогоСписка(Форма) + ТекущийВариантПоиска(Форма)];
	
КонецФункции

// Возвращает имя реквизита флага использования фильтров.
//
// Возвращаемое значение:
//  Строка - имя реквизита флага использования фильтров.
//
Функция ИмяРеквизитаИспользоватьФильтры() Экспорт
	
	Возврат Префикс() + "ИспользоватьФильтры";
	
КонецФункции

// Возвращает значение флага использования фильтров.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма, где используется фильтр.
//
// Возвращаемое значение:
//  Булево - значение флага использования фильтров.
//
Функция ИспользоватьФильтры(Форма) Экспорт
	
	Возврат Форма[ИмяРеквизитаИспользоватьФильтры()];
	
КонецФункции

// Устанавливает значение флага использования фильтра.
//
// Параметры:
//  Форма    - ФормаКлиентскогоПриложения - форма, где используется фильтр.
//  Значение - Булево - новое значение флага.
//
Процедура УстановитьИспользоватьФильтры(Форма, Значение) Экспорт
	
	Форма[ИмяРеквизитаИспользоватьФильтры()] = Значение;
	
КонецПроцедуры

// Возвращает идентификатор текущего фильтра.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма, где используется фильтр.
//
// Возвращаемое значение:
//  Строка - идентификатор текущего фильтра.
//
Функция ТекущийФильтр(Форма) Экспорт
	
	Возврат Форма[Префикс() + "ВариантФильтра"];
	
КонецФункции

// Возвращает массив фильтров формы.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма, где используется фильтр.
//
// Возвращаемое значение:
//  Массив - массив фильтров формы, полученных из списка выбора.
//
Функция Фильтры(Форма) Экспорт
	
	Возврат Форма.Элементы[Префикс() + "ВариантФильтра"].СписокВыбора.ВыгрузитьЗначения();
	
КонецФункции

// Определяет, является ли переданная форма формой списка справочника номенклатура.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма, где используется фильтр.
//
// Возвращаемое значение:
//  Булево - признак того является ли переданная форма формой списка справочника номенклатура.
//
Функция ЭтоФормаСпискаНоменклатуры(Форма) Экспорт
	
	Возврат Форма.ИмяФормы = "Справочник.Номенклатура.Форма.ФормаСписка";
	
КонецФункции

// Определяет, является ли переданная форма формой выбора справочника номенклатура.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма, где используется фильтр.
//
// Возвращаемое значение:
//  Булево - признак того является ли переданная форма формой выбора справочника номенклатура.
//
Функция ЭтоФормаВыбораНоменклатуры(Форма) Экспорт
	
	Возврат Форма.ИмяФормы = "Справочник.Номенклатура.Форма.ФормаВыбора";
	
КонецФункции

#КонецОбласти // ПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЙ ПРОГРАММНЫЙ ИНТЕРФЕЙС
#Область СлужебныйПрограммныйИнтерфейс

// Возвращает префикс элементов используемых в механизме фильтрации.
//
// Возвращаемое значение:
//  Строка - префикс элементов используемых в механизме фильтрации.
//
Функция Префикс() Экспорт
	Возврат "ФильтрыСписков";
КонецФункции

#КонецОбласти // СлужебныйПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

Функция ИмяФильтруемогоСписка(Форма)
	
	Возврат Форма[Префикс() + "ИмяФильтруемогоСписка"];
	
КонецФункции

Функция ТекущийВариантПоиска(Форма)
	
	Возврат ПодборТоваровКлиентСервер.ТекущийВариантПоиска(Форма);
	
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции
