
////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЙ ПРОГРАММНЫЙ ИНТЕРФЕЙС
#Область СлужебныйПрограммныйИнтерфейс

#Область ИнтеграцияСБЭД

#Область ВыборПрикладныхЗначений

// См. ОбменСКонтрагентамиКлиентПереопределяемый.ПриПодбореУчетногоДокумента.
Процедура ПриПодбореУчетногоДокумента(Знач Настройки, Знач ОповещениеОВыборе, СтандартнаяОбработка = Истина) Экспорт
	
	СтандартнаяОбработка = Ложь;
	
	ИмяФормы = Настройки.ИмяОбъектаМетаданных + ".ФормаВыбора";
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимВыбора"       , Истина);
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе", Истина);
	ПараметрыФормы.Вставить("Отбор"             , Новый Структура("Контрагент, Организация", Настройки.Контрагент, Настройки.Организация));
	
	ОткрытьФорму(ИмяФормы, ПараметрыФормы,,,,, ОповещениеОВыборе, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

// См. ОбменСКонтрагентамиКлиентПереопределяемый.ПриВыбореДоговораКонтрагента.
Процедура ПриВыбореДоговораКонтрагента(Параметры, Владелец, ОповещениеОЗакрытии, СтандартнаяОбработка) Экспорт
	
	СтандартнаяОбработка = Ложь;
	
	Отбор = Новый Структура;
	Отбор.Вставить("Контрагент"   , Параметры.Контрагент);
	Отбор.Вставить("Организация", Параметры.Организация);
	
	ПараметрыФормы = Новый Структура("Отбор", Отбор);
	ОткрытьФорму("Справочник.ДоговорыКонтрагентов.ФормаВыбора", ПараметрыФормы, Владелец,,,,ОповещениеОЗакрытии);
	
КонецПроцедуры

// См. ОбменСКонтрагентамиКлиентПереопределяемый.СоздатьКонтрагентаИнтерактивно.
Процедура СоздатьКонтрагентаИнтерактивно(РеквизитыКонтрагента, ОписаниеОповещенияОСозданииКонтрагента) Экспорт
	
	СтруктураЗаполнения = Новый Структура;
	СтруктураЗаполнения.Вставить("Наименование", РеквизитыКонтрагента.Наименование);
	СтруктураЗаполнения.Вставить("НаименованиеПолное", РеквизитыКонтрагента.Наименование);
	СтруктураЗаполнения.Вставить("ИНН", РеквизитыКонтрагента.ИНН);
	СтруктураЗаполнения.Вставить("КПП", РеквизитыКонтрагента.КПП);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СтруктураЗаполнения", СтруктураЗаполнения);
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ОписаниеОповещенияОСозданииКонтрагента", ОписаниеОповещенияОСозданииКонтрагента);
	
	ОписаниеОповещенияОЗакрытии = Новый ОписаниеОповещения(Неопределено,, ДополнительныеПараметры);
	ОткрытьФорму("Справочник.Контрагенты.Форма.ФормаЭлемента", ПараметрыФормы,,,,, ОписаниеОповещенияОЗакрытии);
	
КонецПроцедуры

// См. ОбменСКонтрагентамиКлиентПереопределяемый.ВыбратьКонтрагента.
Процедура ВыбратьКонтрагента(РеквизитыОтбораКонтрагента, ОписаниеОповещенияОЗакрытии) Экспорт
	
	Отбор = Новый Структура;
	Если ЗначениеЗаполнено(РеквизитыОтбораКонтрагента.Наименование) Тогда
		Отбор.Вставить("Наименование", РеквизитыОтбораКонтрагента.Наименование);
	КонецЕсли;
	Если ЗначениеЗаполнено(РеквизитыОтбораКонтрагента.ИНН) Тогда
		Отбор.Вставить("ИНН", РеквизитыОтбораКонтрагента.ИНН);
	КонецЕсли;
	Если ЗначениеЗаполнено(РеквизитыОтбораКонтрагента.КПП) Тогда
		Отбор.Вставить("КПП", РеквизитыОтбораКонтрагента.КПП);
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Отбор", Отбор);
	
	ОткрытьФорму("Справочник.Контрагенты.ФормаВыбора", ПараметрыФормы,,,,, ОписаниеОповещенияОЗакрытии)
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

// См. ОбменСКонтрагентамиКлиентПереопределяемый.ПроверитьИспользованиеИнтернетПоддержкаПользователей.
Процедура ПроверитьИспользованиеИнтернетПоддержкаПользователей(Использование) Экспорт
	
	Если СтандартныеПодсистемыКлиент.ПараметрыРаботыКлиента().РазделениеВключено Тогда
		Использование = Ложь;
	Иначе
		Использование = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СобытияФормыИнтеграцияСБЭД

// Вызывется из одноименных событий форм для инициализации параметров подсистемы ЭДО.
//
Процедура ОбработкаОповещения_ФормаДокумента(Форма, ИмяСобытия, Параметр, Источник) Экспорт
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	ПараметрыОповещения = ОбменСКонтрагентамиКлиент.ПараметрыОповещенияЭДО_ФормаДокумента();
	ПараметрыОповещения.Форма = Форма;
	ПараметрыОповещения.ДокументСсылка = Объект.Ссылка;
	ПараметрыОповещения.КонтроллерСостояниеЭДО = Элементы.ДекорацияСостояниеЭДО;
	ПараметрыОповещения.ГруппаСостояниеЭДО = Элементы.ГруппаСостояниеЭДО;
	РезультатыОбработкиОповещения = Неопределено;
	ОбменСКонтрагентамиКлиент.ОбработкаОповещения_ФормаДокумента(ИмяСобытия, Параметр, Источник, ПараметрыОповещения, РезультатыОбработкиОповещения);
	
	ИзменилосьСостояниеЭДО = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(РезультатыОбработкиОповещения, "ИзменилосьСостояниеЭДО", Ложь);
	Если ИзменилосьСостояниеЭДО Тогда
		// Принудительное обновление Заголовка декорации формы средствами обновления видимости.
		Элементы.ДекорацияСостояниеЭДО.Видимость = Не Элементы.ДекорацияСостояниеЭДО.Видимость;
		Элементы.ДекорацияСостояниеЭДО.Видимость = Не Элементы.ДекорацияСостояниеЭДО.Видимость;
	КонецЕсли;
	
	Если ИмяСобытия = "ОбновитьДокументИБПослеЗаполнения" И Параметр.Найти(Объект.Ссылка) <> Неопределено Тогда
		Форма.Прочитать();
	КонецЕсли;
	
КонецПроцедуры

// Вызывется из одноименных событий форм для инициализации параметров подсистемы ЭДО.
//
Процедура ОбработкаОповещения_ФормаСпискаДокумента(Форма, ИмяСобытия, Параметр, Источник, ИмяДинамическогоСписка = "Список") Экспорт
	
	ПараметрыОповещенияЭДО = ОбменСКонтрагентамиКлиент.ПараметрыОповещенияЭДО_ФормаСписка();
	ПараметрыОповещенияЭДО.Форма = Форма;
	ПараметрыОповещенияЭДО.ИмяДинамическогоСписка = ИмяДинамическогоСписка;
	ПараметрыОповещенияЭДО.ЕстьОбработчикОбновленияВидимостиСостоянияЭДО = Истина;
	ОбменСКонтрагентамиКлиент.ОбработкаОповещения_ФормаСписка(ИмяСобытия, Параметр, Источник, ПараметрыОповещенияЭДО);
	
КонецПроцедуры

// Вызывется из одноименных событий форм для инициализации параметров подсистемы ЭДО.
//
Процедура СписокВыбор_ФормаСпискаДокумента(Форма, Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка) Экспорт
	
	Элементы = Форма.Элементы;
	
	Если Поле = Элементы.ПредставлениеСостояния Тогда
		ОбменСКонтрагентамиКлиент.СостояниеЭДОНажатие_ФормаСписка(ВыбраннаяСтрока, СтандартнаяОбработка);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
