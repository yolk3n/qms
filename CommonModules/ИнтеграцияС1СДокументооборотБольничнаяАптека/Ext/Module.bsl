
////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС
#Область ПрограммныйИнтерфейс

// См. ИнтеграцияС1СДокументооборотБазоваяФункциональностьПереопределяемый.ЗаполнитьРеквизитыИзПотребителя.
//
Процедура ЗаполнитьРеквизитыИзПотребителя(Прокси, ОбъектXDTO, СсылкаНаПотребитель) Экспорт
	
	Если СсылкаНаПотребитель.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	Настройки = ИнтеграцияС1СДокументооборотБазоваяФункциональностьВызовСервера.ИспользоватьИнтеграцию();
	
	Если ТипЗнч(ОбъектXDTO) = Тип("Строка") Или ОбъектXDTO = Неопределено Тогда
		ЗаполнитьПеречислениеXDTOИзПотребителя(ОбъектXDTO, СсылкаНаПотребитель, Настройки);
	ИначеЕсли ТипЗнч(ОбъектXDTO) = Тип("ОбъектXDTO") Тогда
		ЗаполнитьСсылочныйОбъектXDTOИзПотребителя(Прокси, ОбъектXDTO, СсылкаНаПотребитель, Настройки);
	КонецЕсли;
	
КонецПроцедуры

// Возвращает значение реквизита, описывающего состояние согласования объекта, соответствующее
// переданному значению состояния согласования в 1С:Документооборот.
//
// Параметры:
//   ТипРеквизита - Булево
//                - ПеречислениеСсылка - тип реквизита объекта.
//   ИмяРеквизита - Строка - имя реквизита объекта.
//   ТипОбъекта - СправочникОбъект
//              - ДокументОбъект - тип объекта.
//   СостояниеДО - Строка - состояния согласования в ДО.
//
// Возвращаемое значение:
//   Булево
//   ПеречислениеСсылка
//
Функция СостояниеСогласования(ТипРеквизита, ИмяРеквизита, ТипОбъекта, СостояниеДО) Экспорт
	
	Результат = Неопределено;
	
	Если ТипРеквизита = Тип("Булево") И ИмяРеквизита = "Согласован" Тогда
		
		Если СостояниеДО = "Согласован" Тогда
			Результат = Истина;
		ИначеЕсли СостояниеДО = "НеСогласован" Тогда
			Результат = Ложь;
		ИначеЕсли СостояниеДО = "НаСогласовании" Тогда
			Результат = Ложь;
		КонецЕсли;
		
	ИначеЕсли ТипРеквизита = Тип("ПеречислениеСсылка.СтатусыДоговоровКонтрагентов") Тогда
		
		Если СостояниеДО = "Согласован" Тогда
			Результат = Перечисления.СтатусыДоговоровКонтрагентов.Действует;
		ИначеЕсли СостояниеДО = "НеСогласован" Тогда
			Результат = Перечисления.СтатусыДоговоровКонтрагентов.НеСогласован;
		ИначеЕсли СостояниеДО = "НаСогласовании" Тогда
			Результат = Перечисления.СтатусыДоговоровКонтрагентов.НеСогласован;
		КонецЕсли;
		
	ИначеЕсли ТипРеквизита = Тип("ПеречислениеСсылка.СтатусыЗаказовПоставщикам") Тогда
		
		Если СостояниеДО = "Согласован" Тогда
			Результат = Перечисления.СтатусыЗаказовПоставщикам.Согласован;
		ИначеЕсли СостояниеДО = "НеСогласован" Тогда
			Результат = Перечисления.СтатусыЗаказовПоставщикам.НеСогласован;
		ИначеЕсли СостояниеДО = "НаСогласовании" Тогда
			Результат = Перечисления.СтатусыЗаказовПоставщикам.НеСогласован;
		КонецЕсли;
		
	ИначеЕсли ТипРеквизита = Тип("ПеречислениеСсылка.СтатусыТребованийОтделений") Тогда
		
		Если СостояниеДО = "Согласован" Тогда
			Результат = Перечисления.СтатусыТребованийОтделений.Согласован;
		ИначеЕсли СостояниеДО = "НеСогласован" Тогда
			Результат = Перечисления.СтатусыТребованийОтделений.НеСогласован;
		ИначеЕсли СостояниеДО = "НаСогласовании" Тогда
			Результат = Перечисления.СтатусыТребованийОтделений.НаСогласовании;
		ИначеЕсли СостояниеДО = "НаИсполнении" Тогда
			Результат = Перечисления.СтатусыТребованийОтделений.КВыполнению;
		ИначеЕсли СостояниеДО = "Исполнен" Тогда
			Результат = Перечисления.СтатусыТребованийОтделений.Исполнен;
		КонецЕсли;
		
	ИначеЕсли ТипРеквизита = Тип("ПеречислениеСсылка.СтатусыФормуляров") Тогда
		
		Если СостояниеДО = "Согласован" Тогда
			Результат = Перечисления.СтатусыФормуляров.Согласован;
		ИначеЕсли СостояниеДО = "НеСогласован" Тогда
			Результат = Перечисления.СтатусыФормуляров.НеСогласован;
		ИначеЕсли СостояниеДО = "НаСогласовании" Тогда
			Результат = Перечисления.СтатусыФормуляров.НаСогласовании;
		ИначеЕсли СостояниеДО = "НеУтвержден" Тогда
			Результат = Перечисления.СтатусыФормуляров.НеУтвержден;
		ИначеЕсли СостояниеДО = "НаУтверждении" Тогда
			Результат = Перечисления.СтатусыФормуляров.НаУтверждении;
		ИначеЕсли СостояниеДО = "Утвержден" Тогда
			Результат = Перечисления.СтатусыФормуляров.Утвержден;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьПеречислениеXDTOИзПотребителя(ОбъектXDTO, СсылкаНаПотребитель, Настройки)
	
	Если Настройки.ИспользоватьИнтеграциюДО3 = Ложь Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(СсылкаНаПотребитель) = Тип("ПеречислениеСсылка.ЮридическоеФизическоеЛицо") Тогда
		
		Если СсылкаНаПотребитель = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо Тогда
			ОбъектXDTO = "LglPerson";
			
		ИначеЕсли СсылкаНаПотребитель = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо Тогда
			ОбъектXDTO = "Individ";
			
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(СсылкаНаПотребитель) = Тип("ПеречислениеСсылка.ЮрФизЛицо") Тогда
		
		Если СсылкаНаПотребитель = Перечисления.ЮрФизЛицо.ЮрЛицо Тогда
			ОбъектXDTO = "LglPerson";
			
		ИначеЕсли СсылкаНаПотребитель = Перечисления.ЮрФизЛицо.ФизЛицо Тогда
			ОбъектXDTO = "Individ";
			
		ИначеЕсли СсылкаНаПотребитель = Перечисления.ЮрФизЛицо.ЮрЛицоНеРезидент Тогда
			ОбъектXDTO = "LglPersonNonResident";
			
		ИначеЕсли СсылкаНаПотребитель = Перечисления.ЮрФизЛицо.ИндивидуальныйПредприниматель Тогда
			ОбъектXDTO = "IndividualEntrepreneur";
			
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(СсылкаНаПотребитель) = Тип("ПеречислениеСсылка.СтавкиНДС") Тогда
		
		Если СсылкаНаПотребитель = Перечисления.СтавкиНДС.БезНДС Тогда
			ОбъектXDTO = "WithoutVAT";
			
		ИначеЕсли СсылкаНаПотребитель = Перечисления.СтавкиНДС.НДС0 Тогда
			ОбъектXDTO = "VAT0";
			
		ИначеЕсли СсылкаНаПотребитель = Перечисления.СтавкиНДС.НДС10
				Или СсылкаНаПотребитель = Перечисления.СтавкиНДС.НДС10_110 Тогда
			ОбъектXDTO = "VAT10";
			
		ИначеЕсли СсылкаНаПотребитель = Перечисления.СтавкиНДС.НДС18
				Или СсылкаНаПотребитель = Перечисления.СтавкиНДС.НДС18_118 Тогда
			ОбъектXDTO = "VAT18";
			
		ИначеЕсли СсылкаНаПотребитель = Перечисления.СтавкиНДС.НДС20
				Или СсылкаНаПотребитель = Перечисления.СтавкиНДС.НДС20_120 Тогда
			ОбъектXDTO = "VAT20";
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьСсылочныйОбъектXDTOИзПотребителя(Прокси, ОбъектXDTO, СсылкаНаПотребитель, Настройки)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ТипЗнч(СсылкаНаПотребитель) = Тип("ПеречислениеСсылка.ЮрФизЛицо") Тогда
		
		Если Настройки.ИспользоватьИнтеграциюДО2 Тогда
			ЮрФизЛицоID = "";
			Если СсылкаНаПотребитель = Перечисления.ЮрФизЛицо.ФизЛицо Тогда
				ЮрФизЛицоID = "ФизЛицо"; //@NON-NLS-1
			ИначеЕсли СсылкаНаПотребитель = Перечисления.ЮрФизЛицо.ЮрЛицо Тогда
				ЮрФизЛицоID = "ЮрЛицо"; //@NON-NLS-1
			ИначеЕсли СсылкаНаПотребитель = Перечисления.ЮрФизЛицо.ЮрЛицоНеРезидент Тогда
				ЮрФизЛицоID = "ЮрЛицоНеРезидент"; //@NON-NLS-1
			ИначеЕсли СсылкаНаПотребитель = Перечисления.ЮрФизЛицо.ИндивидуальныйПредприниматель Тогда
				ЮрФизЛицоID = "ИндивидуальныйПредприниматель"; //@NON-NLS-1
			КонецЕсли;
			ОбъектXDTO = ИнтеграцияС1СДокументооборотБазоваяФункциональность.СоздатьОбъект(
				Прокси,
				"DMLegalPrivatePerson");
			ОбъектXDTO.name = Строка(СсылкаНаПотребитель);
			ОбъектXDTO.objectID = ИнтеграцияС1СДокументооборотБазоваяФункциональность.СоздатьObjectID(
				Прокси,
				ЮрФизЛицоID,
				"DMLegalPrivatePerson");
		ИначеЕсли Настройки.ИспользоватьИнтеграциюДО3 Тогда
			ЗаполнитьПеречислениеXDTOИзПотребителя(ОбъектXDTO, СсылкаНаПотребитель, Настройки);
		КонецЕсли;
		
	ИначеЕсли (ИнтеграцияС1СДокументооборотБазоваяФункциональность.ПроверитьТип(Прокси, ОбъектXDTO, "DMCorrespondent")
				И ТипЗнч(СсылкаНаПотребитель) = Тип("СправочникСсылка.Контрагенты"))
			Или (ИнтеграцияС1СДокументооборотБазоваяФункциональность.ПроверитьТип(Прокси, ОбъектXDTO, "DMOrganization")
				И ТипЗнч(СсылкаНаПотребитель) = Тип("СправочникСсылка.Организации")) Тогда
		
		Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СсылкаНаПотребитель,
			"ИНН, КПП, ЮрФизЛицо, КодПоОКПО, НаименованиеПолное");
		
		Если ЗначениеЗаполнено(Реквизиты.ИНН) Тогда
			ОбъектXDTO.inn = Реквизиты.ИНН;
		КонецЕсли;
		Если ЗначениеЗаполнено(Реквизиты.КПП) Тогда
			ОбъектXDTO.kpp = Реквизиты.КПП;
		КонецЕсли;
		Если ЗначениеЗаполнено(Реквизиты.КодПоОКПО) Тогда
			ОбъектXDTO.okpo = Реквизиты.КодПоОКПО;
		КонецЕсли;
		Если ЗначениеЗаполнено(Реквизиты.НаименованиеПолное) Тогда
			ОбъектXDTO.fullName = Реквизиты.НаименованиеПолное;
		КонецЕсли;
		
		ЗаполнитьРеквизитыИзПотребителя(Прокси, ОбъектXDTO.legalPrivatePerson, Реквизиты.ЮрФизЛицо);
		
	ИначеЕсли ИнтеграцияС1СДокументооборотБазоваяФункциональность.ПроверитьТип(Прокси, ОбъектXDTO, "DMPrivatePerson")
			И ТипЗнч(СсылкаНаПотребитель) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
		
		СпосокРеквизитов = Новый Массив;
		СпосокРеквизитов.Добавить("ДатаРождения");
		
		Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СсылкаНаПотребитель, СтрСоединить(СпосокРеквизитов, ","));
		
		ОбъектXDTO.birthDay = Реквизиты.ДатаРождения;
		
	ИначеЕсли ИнтеграцияС1СДокументооборотБазоваяФункциональность.ПроверитьТип(Прокси, ОбъектXDTO, "DMBankAccount")
			И (ТипЗнч(СсылкаНаПотребитель) = Тип("СправочникСсылка.БанковскиеСчетаКонтрагентов")
				Или ТипЗнч(СсылкаНаПотребитель) = Тип("СправочникСсылка.БанковскиеСчетаОрганизаций")) Тогда
		
		Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СсылкаНаПотребитель, "Владелец, Банк, НомерСчета");
		
		ОбъектXDTO.number = Реквизиты.НомерСчета;
		
		Если ЗначениеЗаполнено(Реквизиты.Владелец) Тогда
			Если ТипЗнч(Реквизиты.Владелец) = Тип("СправочникСсылка.Контрагенты") Тогда
				ИмяТипаXDTO = "DMCorrespondent";
			ИначеЕсли ТипЗнч(Реквизиты.Владелец) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
				ИмяТипаXDTO = "DMPrivatePerson";
			ИначеЕсли ТипЗнч(Реквизиты.Владелец) = Тип("СправочникСсылка.Организации") Тогда
				ИмяТипаXDTO = "DMOrganization";
			КонецЕсли;
			ОбъектXDTO.owner = ИнтеграцияС1СДокументооборотБазоваяФункциональность.СоздатьОбъект(
				Прокси,
				ИмяТипаXDTO,
				Реквизиты.Владелец);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Реквизиты.Банк) Тогда
			ОбъектXDTO.bank = ИнтеграцияС1СДокументооборотБазоваяФункциональность.СоздатьОбъект(
				Прокси,
				"DMBank",
				Реквизиты.Банк);
		КонецЕсли;
		
	ИначеЕсли ИнтеграцияС1СДокументооборотБазоваяФункциональность.ПроверитьТип(Прокси, ОбъектXDTO, "DMSubdivision") Тогда
		
		Руководитель = Неопределено;
		
		Если ТипЗнч(СсылкаНаПотребитель) = Тип("СправочникСсылка.ПодразделенияОрганизаций") Тогда
			Руководитель = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СсылкаНаПотребитель, "ТекущийРуководитель");
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Руководитель) Тогда
			
			Если Настройки.ИспользоватьИнтеграциюДО2 Тогда
				ИмяТипаXDTO = "DMUser";
			ИначеЕсли Настройки.ИспользоватьИнтеграциюДО3 Тогда
				ИмяТипаXDTO = "DMEmployee";
			КонецЕсли;
			
			ОбъектXDTO.head = ИнтеграцияС1СДокументооборотБазоваяФункциональность.СоздатьОбъект(
				Прокси,
				ИмяТипаXDTO,
				Руководитель,
				Ложь);
			
			ОбъектXDTO.head.subdivision = ИнтеграцияС1СДокументооборотБазоваяФункциональность.СоздатьОбъект(
				Прокси,
				"DMSubdivision",
				СсылкаНаПотребитель,
				Ложь);
			
			Если ТипЗнч(Руководитель) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
				ОбъектXDTO.head.privatePerson = ИнтеграцияС1СДокументооборотБазоваяФункциональность.СоздатьОбъект(
					Прокси,
					"DMPrivatePerson",
					Руководитель,
					Ложь);
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли ИнтеграцияС1СДокументооборотБазоваяФункциональность.ПроверитьТип(Прокси, ОбъектXDTO, "DMUser") Тогда
		
		Если ТипЗнч(СсылкаНаПотребитель) = Тип("СправочникСсылка.Пользователи") Тогда
			Подразделение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СсылкаНаПотребитель, "Подразделение");
			Если ЗначениеЗаполнено(Подразделение) Тогда
				ОбъектXDTO.subdivision = ИнтеграцияС1СДокументооборотБазоваяФункциональность.СоздатьОбъект(
					Прокси,
					"DMSubdivision",
					Подразделение);
			КонецЕсли;
		КонецЕсли;
		
		Если ТипЗнч(СсылкаНаПотребитель) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
			Запрос = Новый Запрос(
				"ВЫБРАТЬ РАЗЛИЧНЫЕ
				|	Пользователи.Ссылка КАК Ссылка
				|ИЗ
				|	Справочник.Пользователи КАК Пользователи
				|ГДЕ
				|	Пользователи.ФизическоеЛицо = &ФизическоеЛицо
				|	И НЕ Пользователи.ПометкаУдаления");
			Запрос.УстановитьПараметр("ФизическоеЛицо", СсылкаНаПотребитель);
			
			ВыборкаПользователи = Запрос.Выполнить().Выбрать();
			
			Если ВыборкаПользователи.Количество() = 1 Тогда
				ВыборкаПользователи.Следующий();
				ИнтеграцияС1СДокументооборотБазоваяФункциональность.ЗаполнитьРеквизитыИзПотребителя(
					Прокси,
					ОбъектXDTO,
					ВыборкаПользователи.Ссылка);
				
			Иначе
				ОбъектXDTO.privatePerson = ИнтеграцияС1СДокументооборотБазоваяФункциональность.СоздатьОбъект(
					Прокси,
					"DMPrivatePerson",
					СсылкаНаПотребитель);
				
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли ИнтеграцияС1СДокументооборотБазоваяФункциональность.ПроверитьТип(Прокси, ОбъектXDTO, "DMEmployee") Тогда
		
		Если ТипЗнч(СсылкаНаПотребитель) = Тип("СправочникСсылка.Пользователи") Тогда
			ЗапросПользователь = Новый Запрос(
				"ВЫБРАТЬ
				|	Пользователи.ФизическоеЛицо.Наименование КАК ФизическоеЛицоНаименование,
				|	Пользователи.Подразделение КАК Подразделение
				|ИЗ
				|	Справочник.Пользователи КАК Пользователи
				|ГДЕ
				|	Пользователи.Ссылка = &Пользователь");
			ЗапросПользователь.УстановитьПараметр("Пользователь", СсылкаНаПотребитель);
			
			ВыборкаПользователь = ЗапросПользователь.Выполнить().Выбрать();
			Если ВыборкаПользователь.Следующий() Тогда
				
				Если ЗначениеЗаполнено(ВыборкаПользователь.ФизическоеЛицоНаименование) Тогда
					ОбъектXDTO.name = ВыборкаПользователь.ФизическоеЛицоНаименование;
				КонецЕсли;
				
				Если ЗначениеЗаполнено(ВыборкаПользователь.Подразделение) Тогда
					ОбъектXDTO.subdivision = ИнтеграцияС1СДокументооборотБазоваяФункциональность.СоздатьОбъект(
						Прокси,
						"DMSubdivision",
						ВыборкаПользователь.Подразделение);
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
		Если ТипЗнч(СсылкаНаПотребитель) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
			ЗапросПользователь = Новый Запрос(
				"ВЫБРАТЬ РАЗЛИЧНЫЕ
				|	Пользователи.Ссылка КАК Ссылка
				|ИЗ
				|	Справочник.Пользователи КАК Пользователи
				|ГДЕ
				|	Пользователи.ФизическоеЛицо = &ФизическоеЛицо
				|	И НЕ Пользователи.ПометкаУдаления");
			ЗапросПользователь.УстановитьПараметр("ФизическоеЛицо", СсылкаНаПотребитель);
			
			ВыборкаПользователи = ЗапросПользователь.Выполнить().Выбрать();
			
			Если ВыборкаПользователи.Количество() = 1 Тогда
				ВыборкаПользователи.Следующий();
				ИнтеграцияС1СДокументооборотБазоваяФункциональность.ЗаполнитьРеквизитыИзПотребителя(
					Прокси,
					ОбъектXDTO,
					ВыборкаПользователи.Ссылка);
				
			Иначе
				ОбъектXDTO.privatePerson = ИнтеграцияС1СДокументооборотБазоваяФункциональность.СоздатьОбъект(
					Прокси,
					"DMPrivatePerson",
					СсылкаНаПотребитель);
				
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли ИнтеграцияС1СДокументооборотБазоваяФункциональность.ПроверитьТип(Прокси, ОбъектXDTO, "DMParty") Тогда
		
		Если ТипЗнч(СсылкаНаПотребитель) = Тип("СправочникСсылка.Контрагенты") Тогда
			ОбъектXDTO.correspondent = ИнтеграцияС1СДокументооборотБазоваяФункциональность.СоздатьОбъект(
				Прокси,
				"DMCorrespondent",
				СсылкаНаПотребитель);
			
		ИначеЕсли ТипЗнч(СсылкаНаПотребитель) = Тип("СправочникСсылка.Организации") Тогда
			ОбъектXDTO.organization = ИнтеграцияС1СДокументооборотБазоваяФункциональность.СоздатьОбъект(
				Прокси,
				"DMOrganization",
				СсылкаНаПотребитель);
			
		ИначеЕсли ТипЗнч(СсылкаНаПотребитель) = Тип("СправочникСсылка.Пользователи")
				Или ТипЗнч(СсылкаНаПотребитель) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
			Если Настройки.ИспользоватьИнтеграциюДО2 Тогда
				ОбъектXDTO.user = ИнтеграцияС1СДокументооборотБазоваяФункциональность.СоздатьОбъект(
					Прокси,
					"DMUser",
					СсылкаНаПотребитель);
			ИначеЕсли Настройки.ИспользоватьИнтеграциюДО3 Тогда
				ОбъектXDTO.employee = ИнтеграцияС1СДокументооборотБазоваяФункциональность.СоздатьОбъект(
					Прокси,
					"DMEmployee",
					СсылкаНаПотребитель);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

#КонецОбласти