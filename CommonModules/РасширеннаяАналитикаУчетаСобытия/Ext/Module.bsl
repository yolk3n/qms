
////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС
#Область ПрограммныйИнтерфейс

// Обработчик подписки на событие УдалитьАналитикуУчета
//
Процедура УдалитьДанныеКлючаАналитики(Источник, Отказ) Экспорт
	
	РасширеннаяАналитикаУчета.УдалитьАналитику(Источник.Ссылка);
	
КонецПроцедуры

// Обработчик подписки на событие УстановитьПометкуУдаленияКлючейАналитики И УстановитьПометкуУдаленияКлючейАналитикиДокументов
//
Процедура УстановитьПометкуУдаленияКлючейАналитики(Источник, Отказ, РежимЗаписи = Неопределено, РежимПроведения = Неопределено) Экспорт
	
	Если Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Источник.ЭтоНовый() Или Источник.ПометкаУдаления = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Источник.Ссылка, "ПометкаУдаления") Тогда
		Возврат;
	КонецЕсли;
	
	ТипЗначения = ТипЗнч(Источник.Ссылка);
	МенеджерыКлючей = РасширеннаяАналитикаУчетаПереопределяемый.ПолучитьМенеджерыКлючей();
	
	Для Каждого Менеджер Из МенеджерыКлючей Цикл
		
		МетаданныеКлючаАналитики = Менеджер.ПустаяСсылка().Метаданные();
		ПоляАналитики = МетаданныеКлючаАналитики.Реквизиты;
		ИменаПолейАналитики = Менеджер.ИменаПолейАналитики();
		
		Для Каждого ИмяАналитики Из ИменаПолейАналитики Цикл
			
			ПолеАналитики = ПоляАналитики[ИмяАналитики];
			Если ПолеАналитики.Тип.СодержитТип(ТипЗначения) Тогда
				Менеджер.УстановитьПометкуУдаления(Источник.Ссылка, Источник.ПометкаУдаления);
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

// Регламентное обновление наименований ключей аналитики
//
Процедура ОбновитьНаименованиеКлючейАналитики() Экспорт
	
	ОбщегоНазначения.ПриНачалеВыполненияРегламентногоЗадания(Метаданные.РегламентныеЗадания.ОбновлениеНаименованийКлючейАналитики);
	
	РасширеннаяАналитикаУчета.ОбновитьНаименованияКлючейАналитики();
	
КонецПроцедуры

#КонецОбласти // ПрограммныйИнтерфейс
