
////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС
#Область ПрограммныйИнтерфейс

// Возвращает метод оценки материальных запасов организации в учетном периоде, Если 
// метод оценки неопределен, то вызывается исключение.
//
// Параметры
//   Организация - СправочникСсылка.Организации
//   Период - Дата
//
// Возвращаемое значение
//  ПеречислениеСсылка.МетодыОценкиСтоимостиТоваров
//
Функция ПолучитьМетодОценкиСтоимостиТоваров(Организация, Период) Экспорт
	
	Результат = ЗначениеНастроекБольничнаяАптекаПовтИсп.ПолучитьМетодОценкиСтоимостиТоваров(Организация, НачалоГода(Период));
	Если Результат = Неопределено Тогда
	
		ТекстИсключения = НСтр("ru = 'Не установлен способ оценки стоимости запасов.
									 |Настройку можно сделать в регистре сведений Настройка методов оценки стоимости товаров'");
		ВызватьИсключение ТекстИсключения;
	
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Процедуры обновления стоимости товаров.
//
Процедура ПредварительныйРасчетСебестоимости() Экспорт
	
	ОбщегоНазначения.ПриНачалеВыполненияРегламентногоЗадания(Метаданные.РегламентныеЗадания.РасчетСебестоимости);
	
	Документы.РасчетСебестоимостиТоваров.ПредварительныйРасчетСебестоимости();
	
КонецПроцедуры

// Возвращает цену последней закупки номенклатуры.
//
Функция ПолучитьЦенуПоследнейЗакупки(Номенклатура, ЕдиницаИзмерения, Дата, Документ, Склад, Поставщик, Валюта) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Документ.Валюта КАК Валюта,
	|	ТЧТовары.Цена КАК Цена,
	|	ТЧТовары.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	|ИЗ
	|	Документ.ПоступлениеТоваров.Товары КАК ТЧТовары
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.ПоступлениеТоваров КАК Документ
	|		ПО
	|			ТЧТовары.Ссылка = Документ.Ссылка
	|ГДЕ
	|	ТЧТовары.Номенклатура = &Номенклатура
	|	И Документ.Ссылка <> &Документ
	|	И Документ.Дата <= &Дата
	|	И (Документ.Склад = &Склад ИЛИ &Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка))
	|	И (Документ.Контрагент = &Поставщик ИЛИ &Поставщик = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка))
	|	И Документ.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	Документ.Дата УБЫВ");
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("Документ", Документ);
	Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса()));
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("Поставщик", Поставщик);
	
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Если Результат.Пустой() Тогда
		Возврат 0;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	
	Цена = Выборка.Цена;
	Если Выборка.ЕдиницаИзмерения <> ЕдиницаИзмерения Тогда
		
		Цена = Цена
			* НоменклатураСервер.КоэффициентЕдиницыИзмерения(Номенклатура, ЕдиницаИзмерения)
			/ НоменклатураСервер.КоэффициентЕдиницыИзмерения(Номенклатура, Выборка.ЕдиницаИзмерения);
		
	КонецЕсли;
	
	Если Валюта <> Выборка.Валюта Тогда
		
		ПараметрыТекущегоКурса = РаботаСКурсамиВалют.ПолучитьКурсВалюты(Выборка.Валюта, Дата);
		ПараметрыНовогоКурса = РаботаСКурсамиВалют.ПолучитьКурсВалюты(Валюта, Дата);
		
		Цена = РаботаСКурсамиВалютКлиентСервер.ПересчитатьПоКурсу(Цена, ПараметрыТекущегоКурса, ПараметрыНовогоКурса);
		
	КонецЕсли;
	
	Возврат Цена;
	
КонецФункции

// Заполняет цены товаров по предыдущим поступлениям.
//
Процедура ЗаполнитьЦеныПоПоследнемуПоступлению(Товары, Дата, Документ, Поставщик, Валюта) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ИсходнаяТаблица.НомерСтроки       КАК НомерСтроки,
	|	ИсходнаяТаблица.Номенклатура      КАК Номенклатура
	|	
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	&ИсходнаяТаблица КАК ИсходнаяТаблица
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоступлениеТоваров.Ссылка.МоментВремени   КАК МоментВремени,
	|	ПоступлениеТоваров.Номенклатура           КАК Номенклатура,
	|	ПоступлениеТоваров.ЕдиницаИзмерения       КАК ЕдиницаИзмерения,
	|	ПоступлениеТоваров.СуммаСНДС / ПоступлениеТоваров.КоличествоВЕдиницахИзмерения КАК Цена,
	|	ПоступлениеТоваров.Ссылка.Валюта КАК Валюта
	|	
	|ПОМЕСТИТЬ ЦеныПоступлений
	|ИЗ
	|	Документ.ПоступлениеТоваров.Товары КАК ПоступлениеТоваров
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаТовары
	|	ПО
	|		ПоступлениеТоваров.Номенклатура = ТаблицаТовары.Номенклатура
	|ГДЕ
	|	ПоступлениеТоваров.Ссылка.Проведен
	|	И ПоступлениеТоваров.Ссылка.Дата <= &Дата
	|	И ПоступлениеТоваров.Ссылка <> &Документ
	|	И (ПоступлениеТоваров.Ссылка.Контрагент = &Поставщик ИЛИ &Поставщик = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка))
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЦеныПоступлений.Номенклатура         КАК Номенклатура,
	|	ЦеныПоступлений.ЕдиницаИзмерения     КАК ЕдиницаИзмерения,
	|	ЦеныПоступлений.Цена                 КАК Цена,
	|	ЦеныПоступлений.Валюта               КАК Валюта
	|	
	|ПОМЕСТИТЬ ЦеныПоследнихПоступлений
	|ИЗ
	|	ЦеныПоступлений КАК ЦеныПоступлений 
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		ЦеныПоступлений КАК Отбор
	|	ПО
	|		ЦеныПоступлений.Номенклатура = Отбор.Номенклатура
	|		И ЦеныПоступлений.МоментВремени < Отбор.МоментВремени
	|ГДЕ
	|	Отбор.МоментВремени ЕСТЬ NULL
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки       КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура      КАК Номенклатура,
	|	ЦеныПоследнихПоступлений.ЕдиницаИзмерения  КАК ЕдиницаИзмерения,
	|	ЦеныПоследнихПоступлений.Цена
	|	* ВЫБОР
	|		КОГДА &Валюта <> ЦеныПоследнихПоступлений.Валюта
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(КурсыВалютыЦены.Кратность, 0) > 0
	|						И ЕСТЬNULL(КурсыВалютыЦены.Курс, 0) > 0
	|						И ЕСТЬNULL(КурсыВалюты.Кратность, 0) > 0
	|						И ЕСТЬNULL(КурсыВалюты.Курс, 0) > 0
	|					ТОГДА 
	|						(КурсыВалютыЦены.Курс * КурсыВалюты.Кратность)
	|						/ (КурсыВалюты.Курс * КурсыВалютыЦены.Кратность)
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК Цена
	|	
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		ЦеныПоследнихПоступлений КАК ЦеныПоследнихПоступлений
	|		
	|	ПО 
	|		ТаблицаТовары.Номенклатура = ЦеныПоследнихПоступлений.Номенклатура
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютыЦены
	|	ПО 
	|		ЦеныПоследнихПоступлений.Валюта = КурсыВалютыЦены.Валюта
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.КурсыВалют.СрезПоследних(&Дата, Валюта = &Валюта) КАК КурсыВалюты
	|	ПО
	|		ИСТИНА
	|	");
	
	Запрос.УстановитьПараметр("ИсходнаяТаблица", Товары.Выгрузить(, "НомерСтроки, Номенклатура"));
	Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса()));
	Запрос.УстановитьПараметр("Документ", Документ);
	Запрос.УстановитьПараметр("Поставщик", Поставщик);
	Запрос.УстановитьПараметр("Валюта", Валюта);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СтрокаТабличнойЧасти = Товары[Выборка.НомерСтроки - 1];
		Если Выборка.ЕдиницаИзмерения <> СтрокаТабличнойЧасти.ЕдиницаИзмерения Тогда
			СтрокаТабличнойЧасти.Цена = Выборка.Цена
				* НоменклатураСервер.КоэффициентЕдиницыИзмерения(СтрокаТабличнойЧасти.Номенклатура, СтрокаТабличнойЧасти.ЕдиницаИзмерения)
				/ НоменклатураСервер.КоэффициентЕдиницыИзмерения(Выборка.Номенклатура, Выборка.ЕдиницаИзмерения);
		Иначе
			СтрокаТабличнойЧасти.Цена = Выборка.Цена;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Заполняет основные данные документа для проведения.
//
Процедура ПриПодготовкеОсновныхДанныхДляПроведения(ДополнительныеСвойства, ОсновныеДанныеДокумента) Экспорт
	
	ОбщегоНазначенияБольничнаяАптекаКлиентСервер.ДобавитьВСтруктуру(ОсновныеДанныеДокумента, ЗапасыКлиентСерверПовтИсп.СтатусыУказанияСерий());
	ОбщегоНазначенияБольничнаяАптекаКлиентСервер.ДобавитьВСтруктуру(ОсновныеДанныеДокумента, ЗапасыКлиентСерверПовтИсп.СтатусыУказанияПартий());
	
КонецПроцедуры

// Структура параметров указания серий, возвращаемая соответствующей процедурой модуля менеджера документа (обработки).
//
Функция ПараметрыУчетаНоменклатуры() Экспорт
	
	ПараметрыУчета = Новый Структура;
	ПараметрыУчета.Вставить("ИспользоватьСерии", Ложь);
	ПараметрыУчета.Вставить("ИспользоватьПартии", Ложь);
	
	ПараметрыУчета.Вставить("ИспользоватьСправочноеУказаниеСерий", Истина);
	
	ПараметрыУчета.Вставить("СуффиксыСтатусов", Новый Массив);
	
	ПараметрыУчета.Вставить("Склад", Справочники.Склады.ПустаяСсылка());
	
	ПараметрыУчета.Вставить("ЭтоПеремещениеМеждуСкладами", Ложь);
	ПараметрыУчета.Вставить("Отгружено", Ложь);
	
	ПараметрыУчета.Вставить("ТоварВШапке", Ложь);
	
	ПараметрыУчета.Вставить("ИмяТабличнойЧасти", "Товары");
	ПараметрыУчета.Вставить("ПолноеИмяОбъекта");
	
	Возврат ПараметрыУчета;
	
КонецФункции

// Возвращает параметры учета номенклатуры, указанной в документе.
//
// Параметры
//   Объект - ДокументОбъект или ДанныеФормыСтруктура - документ, для которого нужно сформировать параметры проверки.
//
// Возвращаемое значение
//   Структура - Состав полей определяется требованиями функции НоменклатураКлиентСервер.ПараметрыУчетаНоменклатуры.
//
Функция ПолучитьПараметрыУчетаНоменклатуры(Объект, МенеджерОбъекта = Неопределено) Экспорт
	
	Если МенеджерОбъекта = Неопределено Тогда
		Если ОбщегоНазначения.ЭтоСсылка(ТипЗнч(Объект)) Тогда
			МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Объект);
		Иначе
			МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Объект.Ссылка);
		КонецЕсли;
	КонецЕсли;
	
	ИменаРеквизитов = МенеджерОбъекта.ИменаРеквизитовДляЗаполненияПараметровУчетаНоменклатуры();
	
	Если ОбщегоНазначения.ЭтоСсылка(ТипЗнч(Объект)) Тогда
		ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект, ИменаРеквизитов);
	Иначе
		ЗначенияРеквизитов = Новый Структура(ИменаРеквизитов);
		ЗаполнитьЗначенияСвойств(ЗначенияРеквизитов, Объект);
	КонецЕсли;
	
	Возврат МенеджерОбъекта.ПараметрыУчетаНоменклатуры(ЗначенияРеквизитов);
	
КонецФункции

// Заполняет статусы указания серий и партий в документе.
//
Процедура ЗаполнитьСтатусыУчетаНоменклатуры(Объект, ПараметрыУчетаНоменклатуры) Экспорт
	
	Если Не ПараметрыУчетаНоменклатуры.ИспользоватьСерии И Не ПараметрыУчетаНоменклатуры.ИспользоватьПартии Тогда
		
		СтатусыУказанияСерий = ЗапасыКлиентСерверПовтИсп.СтатусыУказанияСерий();
		СтатусыУказанияПартий = ЗапасыКлиентСерверПовтИсп.СтатусыУказанияПартий();
		
		Если ПараметрыУчетаНоменклатуры.ТоварВШапке Тогда
			Если ПараметрыУчетаНоменклатуры.СуффиксыСтатусов.Количество() = 0 Тогда
				Объект.СтатусУказанияСерий = СтатусыУказанияСерий.СтатусСерииНеУказываются;
				Объект.СтатусУказанияПартий = СтатусыУказанияПартий.СтатусПартииНеУказываются;
			Иначе
				Для Каждого Суффикс Из ПараметрыУчетаНоменклатуры.СуффиксыСтатусов Цикл
					Объект["СтатусУказанияСерий" + Суффикс] = СтатусыУказанияСерий.СтатусСерииНеУказываются;
					Объект["СтатусУказанияПартий" + Суффикс] = СтатусыУказанияПартий.СтатусПартииНеУказываются;
				КонецЦикла;
			КонецЕсли;
		Иначе
			Для Каждого СтрокаТаблицы Из Объект[ПараметрыУчетаНоменклатуры.ИмяТабличнойЧасти] Цикл
				Если ПараметрыУчетаНоменклатуры.СуффиксыСтатусов.Количество() = 0 Тогда
					СтрокаТаблицы.СтатусУказанияСерий = СтатусыУказанияСерий.СтатусСерииНеУказываются;
					СтрокаТаблицы.СтатусУказанияПартий = СтатусыУказанияПартий.СтатусПартииНеУказываются;
				Иначе
					Для Каждого Суффикс Из ПараметрыУчетаНоменклатуры.СуффиксыСтатусов Цикл
						СтрокаТаблицы["СтатусУказанияСерий" + Суффикс] = СтатусыУказанияСерий.СтатусСерииНеУказываются;
						СтрокаТаблицы["СтатусУказанияПартий" + Суффикс] = СтатусыУказанияПартий.СтатусПартииНеУказываются;
					КонецЦикла;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		Возврат;
		
	КонецЕсли;
	
	Выборка = ВыборкаИзЗапросаРасчетаСтатусовУчетаНоменклатуры(ПараметрыУчетаНоменклатуры, Объект);
	Пока Выборка.Следующий() Цикл
		
		Если ПараметрыУчетаНоменклатуры.ТоварВШапке Тогда
			СтрокаТаблицы = Объект;
		Иначе
			СтрокаТаблицы = Объект[ПараметрыУчетаНоменклатуры.ИмяТабличнойЧасти][Выборка.НомерСтроки - 1];
		КонецЕсли;
		
		Если ПараметрыУчетаНоменклатуры.СуффиксыСтатусов.Количество() = 0 Тогда
			СтрокаТаблицы.СтатусУказанияСерий = Выборка.СтатусУказанияСерий;
			СтрокаТаблицы.СтатусУказанияПартий = Выборка.СтатусУказанияПартий;
		Иначе
			Для Каждого Суффикс Из ПараметрыУчетаНоменклатуры.СуффиксыСтатусов Цикл
				СтрокаТаблицы["СтатусУказанияСерий" + Суффикс] = Выборка["СтатусУказанияСерий" + Суффикс];
				СтрокаТаблицы["СтатусУказанияПартий" + Суффикс] = Выборка["СтатусУказанияПартий" + Суффикс];
			КонецЦикла;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Заполняет статусы указания серий и партий в строке документа.
//
Процедура ЗаполнитьСтатусыУчетаНоменклатурыПриИзмененииРеквизитовВСтроке(ТекущаяСтрока, ПараметрыУчетаНоменклатуры) Экспорт
	
	Если Не ПараметрыУчетаНоменклатуры.ИспользоватьСерии И Не ПараметрыУчетаНоменклатуры.ИспользоватьПартии Тогда
		
		СтатусыУказанияСерий = ЗапасыКлиентСерверПовтИсп.СтатусыУказанияСерий();
		СтатусыУказанияПартий = ЗапасыКлиентСерверПовтИсп.СтатусыУказанияПартий();
		
		Если ПараметрыУчетаНоменклатуры.СуффиксыСтатусов.Количество() = 0 Тогда
			ТекущаяСтрока.СтатусУказанияСерий = СтатусыУказанияСерий.СтатусСерииНеУказываются;
			ТекущаяСтрока.СтатусУказанияПартий = СтатусыУказанияПартий.СтатусПартииНеУказываются;
		Иначе
			Для Каждого Суффикс Из ПараметрыУчетаНоменклатуры.СуффиксыСтатусов Цикл
				ТекущаяСтрока["СтатусУказанияСерий" + Суффикс] = СтатусыУказанияСерий.СтатусСерииНеУказываются;
				ТекущаяСтрока["СтатусУказанияПартий" + Суффикс] = СтатусыУказанияПартий.СтатусПартииНеУказываются;
			КонецЦикла;
		КонецЕсли;
		
		Возврат;
		
	КонецЕсли;
	
	Товары = ПустаяТаблицаТоваров(ПараметрыУчетаНоменклатуры);
	СтрокаТовара = Товары.Добавить();
	ЗаполнитьЗначенияСвойств(СтрокаТовара, ТекущаяСтрока);
	СтрокаТовара.НомерСтроки = 1;
	
	Выборка = ВыборкаИзЗапросаРасчетаСтатусовУчетаНоменклатуры(ПараметрыУчетаНоменклатуры, Товары);
	
	Если Выборка.Следующий() Тогда
		
		Если ПараметрыУчетаНоменклатуры.СуффиксыСтатусов.Количество() = 0 Тогда
			ТекущаяСтрока.СтатусУказанияСерий = Выборка.СтатусУказанияСерий;
			ТекущаяСтрока.СтатусУказанияПартий = Выборка.СтатусУказанияПартий;
		Иначе
			Для Каждого Суффикс Из ПараметрыУчетаНоменклатуры.СуффиксыСтатусов Цикл
				ТекущаяСтрока["СтатусУказанияСерий" + Суффикс] = Выборка["СтатусУказанияСерий" + Суффикс];
				ТекущаяСтрока["СтатусУказанияПартий" + Суффикс] = Выборка["СтатусУказанияПартий" + Суффикс];
			КонецЦикла;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Очищает неиспользуемые реквизиту списка товаров.
//
Процедура ОчиститьНеиспользуемыеРеквизиты(Объект, ПараметрыУчетаНоменклатуры) Экспорт
	
	ИмяТабличнойЧасти = ПараметрыУчетаНоменклатуры.ИмяТабличнойЧасти;
	
	СтатусыСерий = ЗапасыКлиентСерверПовтИсп.СтатусыУказанияСерий();
	СтатусыПартий = ЗапасыКлиентСерверПовтИсп.СтатусыУказанияПартий();
	
	МетаданныеДокумента = Метаданные.НайтиПоПолномуИмени(ПараметрыУчетаНоменклатуры.ПолноеИмяОбъекта);
	
	СуффиксыСтатусов = ОбщегоНазначенияКлиентСервер.СкопироватьМассив(ПараметрыУчетаНоменклатуры.СуффиксыСтатусов);
	Если СуффиксыСтатусов.Количество() = 0 Тогда
		СуффиксыСтатусов.Добавить("");
	КонецЕсли;
	
	СуффиксыСерий = Новый Массив;
	СуффиксыПартий = Новый Массив;
	Для Каждого Суффикс Из СуффиксыСтатусов Цикл
		Если ПараметрыУчетаНоменклатуры.ТоварВШапке Тогда
			Если ОбщегоНазначения.ЕстьРеквизитОбъекта("СерияНоменклатуры" + Суффикс, МетаданныеДокумента) Тогда
				СуффиксыСерий.Добавить(Суффикс);
			КонецЕсли;
			Если ОбщегоНазначения.ЕстьРеквизитОбъекта("Партия" + Суффикс, МетаданныеДокумента) Тогда
				СуффиксыПартий.Добавить(Суффикс);
			КонецЕсли;
		Иначе
			Если ОбщегоНазначенияБольничнаяАптека.ЕстьРеквизитТабличнойЧастиОбъекта("СерияНоменклатуры" + Суффикс, МетаданныеДокумента, ИмяТабличнойЧасти) Тогда
				СуффиксыСерий.Добавить(Суффикс);
			КонецЕсли;
			Если ОбщегоНазначенияБольничнаяАптека.ЕстьРеквизитТабличнойЧастиОбъекта("Партия" + Суффикс, МетаданныеДокумента, ИмяТабличнойЧасти) Тогда
				СуффиксыПартий.Добавить(Суффикс);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если ПараметрыУчетаНоменклатуры.ТоварВШапке Тогда
		Для Каждого Суффикс Из СуффиксыСерий Цикл
			Если Не ПараметрыУчетаНоменклатуры.ИспользоватьСерии Или Объект["СтатусУказанияСерий" + Суффикс] = СтатусыСерий.СтатусСерииНеУказываются Тогда
				Объект["СерияНоменклатуры" + Суффикс] = Справочники.СерииНоменклатуры.ПустаяСсылка();
			КонецЕсли;
		КонецЦикла;
		Для Каждого Суффикс Из СуффиксыПартий Цикл
			Если Не ПараметрыУчетаНоменклатуры.ИспользоватьПартии Или Объект["СтатусУказанияПартий" + Суффикс] = СтатусыПартий.СтатусПартииНеУказываются Тогда
				Объект["Партия" + Суффикс] = Справочники.ПартииНоменклатуры.ПустаяСсылка();
			КонецЕсли;
		КонецЦикла;
	Иначе
		Для Каждого Товар Из Объект[ИмяТабличнойЧасти] Цикл
			Для Каждого Суффикс Из СуффиксыСерий Цикл
				Если Не ПараметрыУчетаНоменклатуры.ИспользоватьСерии Или Товар["СтатусУказанияСерий" + Суффикс] = СтатусыСерий.СтатусСерииНеУказываются Тогда
					Товар["СерияНоменклатуры" + Суффикс] = Справочники.СерииНоменклатуры.ПустаяСсылка();
				КонецЕсли;
			КонецЦикла;
			Для Каждого Суффикс Из СуффиксыПартий Цикл
				Если Не ПараметрыУчетаНоменклатуры.ИспользоватьПартии Или Товар["СтатусУказанияПартий" + Суффикс] = СтатусыПартий.СтатусПартииНеУказываются Тогда
					Товар["Партия" + Суффикс] = Справочники.ПартииНоменклатуры.ПустаяСсылка();
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

// Устанавливает статусы параметров учета номенклатуры в параметрах запроса.
//
Процедура УстановитьСтатусыПараметровУчетаВПараметрахЗапроса(Запрос) Экспорт
	
	СтатусыУказанияСерий = ЗапасыКлиентСерверПовтИсп.СтатусыУказанияСерий();
	Для Каждого Статус Из СтатусыУказанияСерий Цикл
		Запрос.УстановитьПараметр(Статус.Ключ, Статус.Значение);
	КонецЦикла;
	
	СтатусыУказанияПартий = ЗапасыКлиентСерверПовтИсп.СтатусыУказанияПартий();
	Для Каждого Статус Из СтатусыУказанияПартий Цикл
		Запрос.УстановитьПараметр(Статус.Ключ, Статус.Значение);
	КонецЦикла;
	
КонецПроцедуры

// Обработка проверки заполнения серий номенклатуры.
//
// Параметры
//   Объект
//   ПараметрыУчетаНоменклатуры
//   НепроверяемыеРеквизиты
//   Отказ
//
Процедура ПроверитьЗаполнениеСерийНоменклатуры(Объект,
                                               ПараметрыУчетаНоменклатуры,
                                               НепроверяемыеРеквизиты,
                                               Отказ) Экспорт
	
	МетаданныеДокумента = Объект.Метаданные();
	Суффиксы = Новый Массив;
	Если ПараметрыУчетаНоменклатуры.СуффиксыСтатусов.Количество() = 0 Тогда
		Суффиксы.Добавить("");
	Иначе
		Для Каждого Суффикс Из ПараметрыУчетаНоменклатуры.СуффиксыСтатусов Цикл
			Если ПараметрыУчетаНоменклатуры.ТоварВШапке Тогда
				Если ОбщегоНазначения.ЕстьРеквизитОбъекта("СерияНоменклатуры" + Суффикс, МетаданныеДокумента)
				   И МетаданныеДокумента.Реквизиты["СерияНоменклатуры" + Суффикс].ПроверкаЗаполнения = ПроверкаЗаполнения.ВыдаватьОшибку Тогда
					Суффиксы.Добавить(Суффикс);
				КонецЕсли;
			Иначе
				Если ОбщегоНазначенияБольничнаяАптека.ЕстьРеквизитТабличнойЧастиОбъекта("СерияНоменклатуры" + Суффикс, МетаданныеДокумента, ПараметрыУчетаНоменклатуры.ИмяТабличнойЧасти)
				   И МетаданныеДокумента.ТабличныеЧасти[ПараметрыУчетаНоменклатуры.ИмяТабличнойЧасти].Реквизиты["СерияНоменклатуры" + Суффикс].ПроверкаЗаполнения = ПроверкаЗаполнения.ВыдаватьОшибку Тогда
					Суффиксы.Добавить(Суффикс);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	ПрефиксРеквизитов = ?(ПараметрыУчетаНоменклатуры.ТоварВШапке, "", ПараметрыУчетаНоменклатуры.ИмяТабличнойЧасти + ".");
	Для Каждого Суффикс Из Суффиксы Цикл
		НепроверяемыеРеквизиты.Добавить(ПрефиксРеквизитов + "СерияНоменклатуры" + Суффикс);
	КонецЦикла;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ";
	Для Каждого Суффикс Из Суффиксы Цикл
		СуффиксНоменклатуры = "";
		Если ПараметрыУчетаНоменклатуры.ТоварВШапке Тогда
			Если ОбщегоНазначения.ЕстьРеквизитОбъекта("Номенклатура" + Суффикс, МетаданныеДокумента) Тогда
				СуффиксНоменклатуры = Суффикс;
			КонецЕсли;
		Иначе
			Если ОбщегоНазначенияБольничнаяАптека.ЕстьРеквизитТабличнойЧастиОбъекта("Номенклатура" + Суффикс, МетаданныеДокумента, ПараметрыУчетаНоменклатуры.ИмяТабличнойЧасти) Тогда
				СуффиксНоменклатуры = Суффикс;
			КонецЕсли;
		КонецЕсли;
		
		ТекстПоляКоличество = "
		|	1 КАК КоличествоШтук" + Суффикс + ",";
		Если ПараметрыУчетаНоменклатуры.ТоварВШапке Тогда
			Если ОбщегоНазначения.ЕстьРеквизитОбъекта("Количество" + СуффиксНоменклатуры, МетаданныеДокумента) Тогда
				ТекстПоляКоличество = "
				|	ТаблицаСерий.Количество" + СуффиксНоменклатуры + " КАК КоличествоШтук" + Суффикс + ",";
			КонецЕсли;
		Иначе
			Если ОбщегоНазначенияБольничнаяАптека.ЕстьРеквизитТабличнойЧастиОбъекта("Количество" + СуффиксНоменклатуры, МетаданныеДокумента, ПараметрыУчетаНоменклатуры.ИмяТабличнойЧасти) Тогда
				ТекстПоляКоличество = "
				|	ТаблицаСерий.Количество" + СуффиксНоменклатуры + " КАК КоличествоШтук" + Суффикс + ",";
			КонецЕсли;
		КонецЕсли;
		
		ТекстЗапроса = ТекстЗапроса + "
		|	ТаблицаСерий.Номенклатура" + СуффиксНоменклатуры + " КАК Номенклатура" + Суффикс + ",
		|	ТаблицаСерий.СерияНоменклатуры" + Суффикс + "  КАК СерияНоменклатуры" + Суффикс + ",
		|	ТаблицаСерий.СтатусУказанияСерий" + Суффикс + " КАК СтатусУказанияСерий" + Суффикс + ","
		+ ТекстПоляКоличество;
	КонецЦикла;
	
	ТекстЗапроса = ТекстЗапроса + "
	|	ТаблицаСерий.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ ТаблицаСерий
	|ИЗ
	|	&ТаблицаСерий КАК ТаблицаСерий
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ";
	
	Для Каждого Суффикс Из Суффиксы Цикл
		ТекстЗапроса = ТекстЗапроса + "
		|	ПРЕДСТАВЛЕНИЕ(ТаблицаСерий.Номенклатура" + Суффикс + ") КАК ТоварПредставление" + Суффикс + ",
		|	ВЫБОР
		|		КОГДА ТаблицаСерий.СерияНоменклатуры" + Суффикс + " = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
		|				И ТаблицаСерий.СтатусУказанияСерий" + Суффикс + " <> &СтатусСерииНеУказываются
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК СерияНеЗаполнена" + Суффикс + ",
		|	ВЫБОР
		|		КОГДА (НЕ ВЫРАЗИТЬ(ТаблицаСерий.Номенклатура" + Суффикс + " КАК Справочник.Номенклатура).ВидНоменклатуры.ИспользоватьКоличествоСерии)
		|				И ТаблицаСерий.СтатусУказанияСерий" + Суффикс + " <> &СтатусСерииНеУказываются
		|				И ТаблицаСерий.КоличествоШтук" + Суффикс + " <> 1
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ОшибкаКоличества" + Суффикс + ",";
	КонецЦикла;
	
	ТекстЗапроса = ТекстЗапроса + "
	|	ТаблицаСерий.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	ТаблицаСерий КАК ТаблицаСерий
	|ГДЕ
	|	ЛОЖЬ";
	
	Для Каждого Суффикс Из Суффиксы Цикл
		ТекстЗапроса = ТекстЗапроса + "
		|	ИЛИ
		|	(ТаблицаСерий.СтатусУказанияСерий" + Суффикс + " <> &СтатусСерииНеУказываются
		|	И (ТаблицаСерий.СерияНоменклатуры" + Суффикс + " = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
		|			ИЛИ (НЕ ВЫРАЗИТЬ(ТаблицаСерий.Номенклатура" + Суффикс + " КАК Справочник.Номенклатура).ВидНоменклатуры.ИспользоватьКоличествоСерии)
		|				И ТаблицаСерий.КоличествоШтук" + Суффикс + " <> 1))
		|";
	КонецЦикла;
	
	ТекстЗапроса = ТекстЗапроса + "
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Если ПараметрыУчетаНоменклатуры.ТоварВШапке Тогда
		ТаблицаСерий = ПустаяТаблицаТоваров(ПараметрыУчетаНоменклатуры);
		ЗаполнитьЗначенияСвойств(ТаблицаСерий.Добавить(), Объект);
	Иначе
		ТаблицаСерий = Объект[ПараметрыУчетаНоменклатуры.ИмяТабличнойЧасти].Выгрузить()
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("ТаблицаСерий", ТаблицаСерий);
	Запрос.УстановитьПараметр("СтатусСерииНеУказываются", ЗапасыКлиентСерверПовтИсп.СтатусыУказанияСерий().СтатусСерииНеУказываются);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если ПараметрыУчетаНоменклатуры.ТоварВШапке Тогда
		
		Если Выборка.Следующий() Тогда
			
			Для Каждого Суффикс Из Суффиксы Цикл
				
				Если Выборка["СерияНеЗаполнена" + Суффикс] Тогда
					ТекстСообщения = НСтр("ru = 'Поле ""%ИмяРеквизитаСерия%"" не заполнено'");
					
					ИмяРеквизитаСерия = МетаданныеДокумента.Реквизиты["СерияНоменклатуры" + Суффикс].Синоним;
					ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ИмяРеквизитаСерия%", ИмяРеквизитаСерия);
					
					ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Объект, "СерияНоменклатуры" + Суффикс, "Объект", Отказ);
				КонецЕсли;
				
				Если Выборка["ОшибкаКоличества" + Суффикс] Тогда
					ТекстСообщения = НСтр("ru = 'Количество должно равняться 1, т.к. политика учета серий товара ""%ТоварПредставление%"" предусматривает, что количество по любой серии этого товара всегда будет равно 1""'");
					ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ТоварПредставление%", Выборка["ТоварПредставление" + Суффикс]);
					
					ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Объект, "КоличествоВЕдиницахИзмерения" + Суффикс, "Объект", Отказ);
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
	Иначе
		
		ИмяТабличнойЧасти = ПараметрыУчетаНоменклатуры.ИмяТабличнойЧасти;
		ПредставлениеТЧ = МетаданныеДокумента.ТабличныеЧасти[ИмяТабличнойЧасти].Синоним;
		
		Пока Выборка.Следующий() Цикл
			
			Для Каждого Суффикс Из Суффиксы Цикл
				
				Если Выборка["СерияНеЗаполнена" + Суффикс] Тогда
					ТекстСообщения = НСтр("ru = 'Не заполнена колонка ""%ИмяРеквизитаСерия%"" в строке %НомерСтроки% списка ""%ПредставлениеТЧ%""'");
					
					ИмяРеквизитаСерия = МетаданныеДокумента.ТабличныеЧасти[ИмяТабличнойЧасти].Реквизиты["СерияНоменклатуры" + Суффикс].Синоним;
					
					ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ИмяРеквизитаСерия%", ИмяРеквизитаСерия);
					ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерСтроки%", Строка(Выборка.НомерСтроки));
					ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПредставлениеТЧ%", ПредставлениеТЧ);
					
					Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ИмяТабличнойЧасти, Выборка.НомерСтроки, "СерияНоменклатуры" + Суффикс);
					
					ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Объект, Поле, "Объект", Отказ);
				КонецЕсли;
				
				Если Выборка["ОшибкаКоличества" + Суффикс] Тогда
					ТекстСообщения = НСтр("ru = 'В строке %НомерСтроки% количество должно равняться 1, т.к. политика учета серий товара ""%ТоварПредставление%"" предусматривает, что количество по любой серии этого товара всегда будет равно 1""'");
					ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерСтроки%", Строка(Выборка.НомерСтроки));
					ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ТоварПредставление%", Выборка["ТоварПредставление" + Суффикс]);
					
					Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ИмяТабличнойЧасти, Выборка.НомерСтроки, "КоличествоВЕдиницахИзмерения");
					
					ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Объект, Поле, "Объект", Отказ);
				КонецЕсли;
				
			КонецЦикла;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

// Обработка проверки заполнения партий номенклатуры.
//
// Параметры
//   Объект
//   ПараметрыУчетаНоменклатуры
//   НепроверяемыеРеквизиты
//   Отказ
//
Процедура ПроверитьЗаполнениеПартийНоменклатуры(Объект,
                                                ПараметрыУчетаНоменклатуры,
                                                НепроверяемыеРеквизиты,
                                                Отказ) Экспорт
	
	МетаданныеДокумента = Объект.Метаданные();
	Суффиксы = Новый Массив;
	Если ПараметрыУчетаНоменклатуры.СуффиксыСтатусов.Количество() = 0 Тогда
		Суффиксы.Добавить("");
	Иначе
		Для Каждого Суффикс Из ПараметрыУчетаНоменклатуры.СуффиксыСтатусов Цикл
			Если ПараметрыУчетаНоменклатуры.ТоварВШапке Тогда
				Если ОбщегоНазначения.ЕстьРеквизитОбъекта("Партия" + Суффикс, МетаданныеДокумента)
				   И МетаданныеДокумента.Реквизиты["Партия" + Суффикс].ПроверкаЗаполнения = ПроверкаЗаполнения.ВыдаватьОшибку Тогда
					Суффиксы.Добавить(Суффикс);
				КонецЕсли;
			Иначе
				Если ОбщегоНазначенияБольничнаяАптека.ЕстьРеквизитТабличнойЧастиОбъекта("Партия" + Суффикс, МетаданныеДокумента, ПараметрыУчетаНоменклатуры.ИмяТабличнойЧасти)
				   И МетаданныеДокумента.ТабличныеЧасти[ПараметрыУчетаНоменклатуры.ИмяТабличнойЧасти].Реквизиты["Партия" + Суффикс].ПроверкаЗаполнения = ПроверкаЗаполнения.ВыдаватьОшибку Тогда
					Суффиксы.Добавить(Суффикс);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	ПрефиксРеквизитов = ?(ПараметрыУчетаНоменклатуры.ТоварВШапке, "", ПараметрыУчетаНоменклатуры.ИмяТабличнойЧасти + ".");
	Для Каждого Суффикс Из Суффиксы Цикл
		НепроверяемыеРеквизиты.Добавить(ПрефиксРеквизитов + "Партия" + Суффикс);
	КонецЦикла;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ";
	Для Каждого Суффикс Из Суффиксы Цикл
		СуффиксНоменклатуры = "";
		Если ПараметрыУчетаНоменклатуры.ТоварВШапке Тогда
			Если ОбщегоНазначения.ЕстьРеквизитОбъекта("Номенклатура" + Суффикс, МетаданныеДокумента) Тогда
				СуффиксНоменклатуры = Суффикс;
			КонецЕсли;
		Иначе
			Если ОбщегоНазначенияБольничнаяАптека.ЕстьРеквизитТабличнойЧастиОбъекта("Номенклатура" + Суффикс, МетаданныеДокумента, ПараметрыУчетаНоменклатуры.ИмяТабличнойЧасти) Тогда
				СуффиксНоменклатуры = Суффикс;
			КонецЕсли;
		КонецЕсли;
		ТекстЗапроса = ТекстЗапроса + "
		|	ТаблицаПартий.Номенклатура" + СуффиксНоменклатуры + " КАК Номенклатура" + Суффикс + ",
		|	ТаблицаПартий.Партия" + Суффикс + "  КАК Партия" + Суффикс + ",
		|	ТаблицаПартий.СтатусУказанияПартий" + Суффикс + " КАК СтатусУказанияПартий" + Суффикс + ",";
	КонецЦикла;
	
	ТекстЗапроса = ТекстЗапроса + "
	|	ТаблицаПартий.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ ТаблицаПартий
	|ИЗ
	|	&ТаблицаПартий КАК ТаблицаПартий
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ";
	
	Для Каждого Суффикс Из Суффиксы Цикл
		ТекстЗапроса = ТекстЗапроса + "
		|	ПРЕДСТАВЛЕНИЕ(ТаблицаПартий.Номенклатура" + Суффикс + ") КАК ТоварПредставление" + Суффикс + ",
		|	ВЫБОР
		|		КОГДА ТаблицаПартий.Партия" + Суффикс + " = ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка)
		|				И ТаблицаПартий.СтатусУказанияПартий" + Суффикс + " <> &СтатусПартииНеУказываются
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ПартияНеЗаполнена" + Суффикс + ",";
	КонецЦикла;
	
	ТекстЗапроса = ТекстЗапроса + "
	|	ТаблицаПартий.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	ТаблицаПартий КАК ТаблицаПартий
	|ГДЕ
	|	ЛОЖЬ";
	
	Для Каждого Суффикс Из Суффиксы Цикл
		ТекстЗапроса = ТекстЗапроса + "
		|	ИЛИ
		|	(ТаблицаПартий.СтатусУказанияПартий" + Суффикс + " <> &СтатусПартииНеУказываются
		|	И ТаблицаПартий.Партия" + Суффикс + " = ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка))
		|";
	КонецЦикла;
	
	ТекстЗапроса = ТекстЗапроса + "
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Если ПараметрыУчетаНоменклатуры.ТоварВШапке Тогда
		ТаблицаПартий = ПустаяТаблицаТоваров(ПараметрыУчетаНоменклатуры);
		ЗаполнитьЗначенияСвойств(ТаблицаПартий.Добавить(), Объект);
	Иначе
		ТаблицаПартий = Объект[ПараметрыУчетаНоменклатуры.ИмяТабличнойЧасти].Выгрузить()
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("ТаблицаПартий", ТаблицаПартий);
	Запрос.УстановитьПараметр("СтатусПартииНеУказываются", ЗапасыКлиентСерверПовтИсп.СтатусыУказанияПартий().СтатусПартииНеУказываются);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если ПараметрыУчетаНоменклатуры.ТоварВШапке Тогда
		
		Если Выборка.Следующий() Тогда
			
			Для Каждого Суффикс Из Суффиксы Цикл
				
				Если Выборка["ПартияНеЗаполнена" + Суффикс] Тогда
					ТекстСообщения = НСтр("ru = 'Поле ""%ИмяРеквизитаПартия%"" не заполнено'");
					
					ИмяРеквизитаПартия = МетаданныеДокумента.Реквизиты["Партия" + Суффикс].Синоним;
					ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ИмяРеквизитаПартия%", ИмяРеквизитаПартия);
					
					ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Объект, "Партия" + Суффикс, "Объект", Отказ);
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
	Иначе
		
		ИмяТабличнойЧасти = ПараметрыУчетаНоменклатуры.ИмяТабличнойЧасти;
		ПредставлениеТЧ = МетаданныеДокумента.ТабличныеЧасти[ИмяТабличнойЧасти].Синоним;
		
		Пока Выборка.Следующий() Цикл
			
			Для Каждого Суффикс Из Суффиксы Цикл
				
				Если Выборка["ПартияНеЗаполнена" + Суффикс] Тогда
					ТекстСообщения = НСтр("ru = 'Не заполнена колонка ""%ИмяРеквизитаПартия%"" в строке %НомерСтроки% списка ""%ПредставлениеТЧ%""'");
					
					ИмяРеквизитаПартия = МетаданныеДокумента.ТабличныеЧасти[ИмяТабличнойЧасти].Реквизиты["Партия" + Суффикс].Синоним;
					
					ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ИмяРеквизитаПартия%", ИмяРеквизитаПартия);
					ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерСтроки%", Строка(Выборка.НомерСтроки));
					ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПредставлениеТЧ%", ПредставлениеТЧ);
					
					Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ИмяТабличнойЧасти, Выборка.НомерСтроки, "Партия" + Суффикс);
					
					ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Объект, Поле, "Объект", Отказ);
				КонецЕсли;
				
			КонецЦикла;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

// Возвращает текст запроса для расчета статусов указания параметров учета номенклатуры.
//
// Параметры
//   ПараметрыУчетаНоменклатуры - Структура - состав полей задается в функции ЗапасыСервер.ПараметрыУчетаНоменклатуры.
//
// Возвращаемое значение
//   Строка - текст запроса
//
Функция ТекстЗапросаРасчетаСтатусовУчетаНоменклатуры(ПараметрыУчетаНоменклатуры) Экспорт
	
	Если ПараметрыУчетаНоменклатуры.ЭтоПеремещениеМеждуСкладами Тогда
		ТекстЗапроса = ТекстЗапросаРасчетаСтатусовУчетаНоменклатурыПриПеремещенииМеждуСкладами(ПараметрыУчетаНоменклатуры);
	Иначе
		ТекстЗапроса = ТекстЗапросаРасчетаСтатусовУчетаНоменклатурыОбщий(ПараметрыУчетаНоменклатуры);
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти // ПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

Функция ПустаяТаблицаТоваров(ПараметрыУчетаНоменклатуры)
	
	МетаданныеОбъекта = Метаданные.НайтиПоПолномуИмени(ПараметрыУчетаНоменклатуры.ПолноеИмяОбъекта);
	
	Товары = Новый ТаблицаЗначений;
	Товары.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(5, 0, ДопустимыйЗнак.Неотрицательный)));
	Если ПараметрыУчетаНоменклатуры.СуффиксыСтатусов.Количество() = 0 Тогда
		Товары.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
		Товары.Колонки.Добавить("СерияНоменклатуры", Новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры"));
		Товары.Колонки.Добавить("Партия", Новый ОписаниеТипов("СправочникСсылка.ПартииНоменклатуры"));
		Товары.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15, 3, ДопустимыйЗнак.Неотрицательный)));
	Иначе
		Для Каждого Суффикс Из ПараметрыУчетаНоменклатуры.СуффиксыСтатусов Цикл
			Если ПараметрыУчетаНоменклатуры.ТоварВШапке Тогда
				Если ОбщегоНазначения.ЕстьРеквизитОбъекта("Номенклатура" + Суффикс, МетаданныеОбъекта) <> Неопределено Тогда
					Товары.Колонки.Добавить("Номенклатура" + Суффикс, Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
					Товары.Колонки.Добавить("Количество" + Суффикс, Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15, 3, ДопустимыйЗнак.Неотрицательный)));
				КонецЕсли;
				Если ОбщегоНазначения.ЕстьРеквизитОбъекта("СерияНоменклатуры" + Суффикс, МетаданныеОбъекта) <> Неопределено Тогда
					Товары.Колонки.Добавить("СерияНоменклатуры" + Суффикс, Новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры"));
				КонецЕсли;
				Если ОбщегоНазначения.ЕстьРеквизитОбъекта("Партия" + Суффикс, МетаданныеОбъекта) <> Неопределено Тогда
					Товары.Колонки.Добавить("Партия" + Суффикс, Новый ОписаниеТипов("СправочникСсылка.ПартииНоменклатуры"));
				КонецЕсли;
			Иначе
				Если ОбщегоНазначенияБольничнаяАптека.ЕстьРеквизитТабличнойЧастиОбъекта("Номенклатура" + Суффикс, МетаданныеОбъекта, ПараметрыУчетаНоменклатуры.ИмяТабличнойЧасти) <> Неопределено Тогда
					Товары.Колонки.Добавить("Номенклатура" + Суффикс, Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
					Товары.Колонки.Добавить("Количество" + Суффикс, Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15, 3, ДопустимыйЗнак.Неотрицательный)));
				КонецЕсли;
				Если ОбщегоНазначенияБольничнаяАптека.ЕстьРеквизитТабличнойЧастиОбъекта("СерияНоменклатуры" + Суффикс, МетаданныеОбъекта, ПараметрыУчетаНоменклатуры.ИмяТабличнойЧасти) <> Неопределено Тогда
					Товары.Колонки.Добавить("СерияНоменклатуры" + Суффикс, Новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры"));
				КонецЕсли;
				Если ОбщегоНазначенияБольничнаяАптека.ЕстьРеквизитТабличнойЧастиОбъекта("Партия" + Суффикс, МетаданныеОбъекта, ПараметрыУчетаНоменклатуры.ИмяТабличнойЧасти) <> Неопределено Тогда
					Товары.Колонки.Добавить("Партия" + Суффикс, Новый ОписаниеТипов("СправочникСсылка.ПартииНоменклатуры"));
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если ПараметрыУчетаНоменклатуры.СуффиксыСтатусов.Количество() = 0 Тогда
		Товары.Колонки.Добавить("СтатусУказанияСерий", Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(2, 0, ДопустимыйЗнак.Неотрицательный)));
		Товары.Колонки.Добавить("СтатусУказанияПартий", Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(2, 0, ДопустимыйЗнак.Неотрицательный)));
	Иначе
		Для Каждого Суффикс Из ПараметрыУчетаНоменклатуры.СуффиксыСтатусов Цикл
			Товары.Колонки.Добавить("СтатусУказанияСерий" + Суффикс, Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(2, 0, ДопустимыйЗнак.Неотрицательный)));
			Товары.Колонки.Добавить("СтатусУказанияПартий" + Суффикс, Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(2, 0, ДопустимыйЗнак.Неотрицательный)));
		КонецЦикла;
	КонецЕсли;
	
	Возврат Товары;
	
КонецФункции

Функция ВыборкаИзЗапросаРасчетаСтатусовУчетаНоменклатуры(ПараметрыУчетаНоменклатуры, Объект)
	
	Если Метаданные.ОбщиеМодули.Найти(ПараметрыУчетаНоменклатуры.ПолноеИмяОбъекта) <> Неопределено Тогда
		МодульМенеджера = Вычислить(ПараметрыУчетаНоменклатуры.ПолноеИмяОбъекта); // ВычислитьВБезопасномРежиме не требуется, т.к. проверка надежная.
	Иначе
		МодульМенеджера = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(ПараметрыУчетаНоменклатуры.ПолноеИмяОбъекта);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = МодульМенеджера.ТекстЗапросаРасчетаСтатусовУчетаНоменклатуры(ПараметрыУчетаНоменклатуры);
	
	Если ПараметрыУчетаНоменклатуры.ЭтоПеремещениеМеждуСкладами Тогда
		Запрос.УстановитьПараметр("СкладОтправитель", ПараметрыУчетаНоменклатуры.Склад.Отправитель);
		Запрос.УстановитьПараметр("СкладПолучатель", ПараметрыУчетаНоменклатуры.Склад.Получатель);
		Запрос.УстановитьПараметр("Отгружено", ПараметрыУчетаНоменклатуры.Отгружено);
	Иначе
		Запрос.УстановитьПараметр("Склад", ПараметрыУчетаНоменклатуры.Склад);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ИспользоватьСправочноеУказаниеСерий", ПараметрыУчетаНоменклатуры.ИспользоватьСправочноеУказаниеСерий);
	Запрос.УстановитьПараметр("ИспользоватьСерии", ПараметрыУчетаНоменклатуры.ИспользоватьСерии);
	Запрос.УстановитьПараметр("ИспользоватьПартии", ПараметрыУчетаНоменклатуры.ИспользоватьПартии);
	
	Если ТипЗнч(Объект) = Тип("ТаблицаЗначений") Тогда
		ТаблицаТоварыПараметрЗапроса = Объект;
	ИначеЕсли ПараметрыУчетаНоменклатуры.ТоварВШапке Тогда
		ТаблицаТоварыПараметрЗапроса = ПустаяТаблицаТоваров(ПараметрыУчетаНоменклатуры);
		ЗаполнитьЗначенияСвойств(ТаблицаТоварыПараметрЗапроса.Добавить(), Объект);
	Иначе
		ТаблицаТовары = Объект[ПараметрыУчетаНоменклатуры.ИмяТабличнойЧасти].Выгрузить();
		ТаблицаТоварыПараметрЗапроса = ПустаяТаблицаТоваров(ПараметрыУчетаНоменклатуры);
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТаблицаТовары, ТаблицаТоварыПараметрЗапроса);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Товары", ТаблицаТоварыПараметрЗапроса);
	УстановитьСтатусыПараметровУчетаВПараметрахЗапроса(Запрос);
	
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

Функция ТекстЗапросаРасчетаСтатусовУчетаНоменклатурыОбщий(ПараметрыУчетаНоменклатуры)
	
	ТекстЗапросаТовары = "
	|ВЫБРАТЬ
	|";
	
	ТекстЗапросаТоварыДляЗапроса = "";
	
	Если ПараметрыУчетаНоменклатуры.СуффиксыСтатусов.Количество() = 0 Тогда
		ТекстЗапросаТовары = ТекстЗапросаТовары + "
		|	Товары.Номенклатура КАК Номенклатура,
		|	Товары.СерияНоменклатуры КАК СерияНоменклатуры,
		|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерий,
		|	Товары.СтатусУказанияПартий КАК СтатусУказанияПартий,
		|	Товары.Количество КАК Количество,";
		
		ТекстЗапросаТоварыДляЗапроса = ТекстЗапросаТоварыДляЗапроса + "
		|ВЫБРАТЬ
		|	""""                      КАК Суффикс,
		|	Товары.Номенклатура       КАК Номенклатура,
		|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры КАК ВидНоменклатуры,
		|	СУММА(Товары.Количество)  КАК Количество
		|ПОМЕСТИТЬ ТоварыДляЗапроса
		|ИЗ
		|	Товары КАК Товары
		|СГРУППИРОВАТЬ ПО
		|	Товары.Номенклатура
		|";
	Иначе
		МетаданныеОбъекта = Метаданные.НайтиПоПолномуИмени(ПараметрыУчетаНоменклатуры.ПолноеИмяОбъекта);
		Для Каждого Суффикс Из ПараметрыУчетаНоменклатуры.СуффиксыСтатусов Цикл
			СуффиксНоменклатуры = "";
			Если ПараметрыУчетаНоменклатуры.ТоварВШапке Тогда
				Если ОбщегоНазначения.ЕстьРеквизитОбъекта("Номенклатура" + Суффикс, МетаданныеОбъекта) Тогда
					СуффиксНоменклатуры = Суффикс;
				КонецЕсли;
			Иначе
				Если ОбщегоНазначенияБольничнаяАптека.ЕстьРеквизитТабличнойЧастиОбъекта("Номенклатура" + Суффикс, МетаданныеОбъекта, ПараметрыУчетаНоменклатуры.ИмяТабличнойЧасти) Тогда
					СуффиксНоменклатуры = Суффикс;
				КонецЕсли;
			КонецЕсли;
			ТекстЗапросаТовары = ТекстЗапросаТовары + "
			|	Товары.Номенклатура" + СуффиксНоменклатуры + " КАК Номенклатура" + Суффикс + ",
			|	Товары.СерияНоменклатуры" + Суффикс + " КАК СерияНоменклатуры" + Суффикс + ",
			|	Товары.СтатусУказанияСерий" + Суффикс + " КАК СтатусУказанияСерий" + Суффикс + ",
			|	Товары.СтатусУказанияПартий" + Суффикс + " КАК СтатусУказанияПартий" + Суффикс + ",
			|	Товары.Количество" + СуффиксНоменклатуры + " КАК Количество" + Суффикс + ",";
			
			
			Если Не ПустаяСтрока(ТекстЗапросаТоварыДляЗапроса) Тогда
				ТекстЗапросаТоварыДляЗапроса = ТекстЗапросаТоварыДляЗапроса + Символы.ПС + "ОБЪЕДИНИТЬ ВСЕ" + Символы.ПС;
			КонецЕсли;
			
			ТекстЗапросаТоварыДляЗапроса = ТекстЗапросаТоварыДляЗапроса + "
			|ВЫБРАТЬ
			|	""" + Суффикс + """ КАК Суффикс,
			|	Товары.Номенклатура" + СуффиксНоменклатуры + " КАК Номенклатура,
			|	ВЫРАЗИТЬ(Товары.Номенклатура" + СуффиксНоменклатуры + " КАК Справочник.Номенклатура).ВидНоменклатуры КАК ВидНоменклатуры,
			|	СУММА(Товары.Количество) КАК Количество
			|" + ?(ПустаяСтрока(ТекстЗапросаТоварыДляЗапроса), "ПОМЕСТИТЬ ТоварыДляЗапроса", "") + "
			|ИЗ
			|	Товары КАК Товары
			|СГРУППИРОВАТЬ ПО
			|	Товары.Номенклатура" + СуффиксНоменклатуры + "
			|";
		КонецЦикла;
	КонецЕсли;
	
	ТекстЗапросаТовары = ТекстЗапросаТовары + "
	|	Товары.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	ТекстЗапросаТоварыДляЗапроса = ТекстЗапросаТоварыДляЗапроса + ОбщегоНазначения.РазделительПакетаЗапросов();
	
	Если ПараметрыУчетаНоменклатуры.СуффиксыСтатусов.Количество() = 0 Тогда
		ТекстЗапросаСтатусы = "
		|ВЫБРАТЬ
		|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерийСтарый,
		|	Товары.СтатусУказанияПартий КАК СтатусУказанияПартийСтарый,
		|	ВЫБОР
		|		КОГДА &ИспользоватьСерии И НЕ ПолитикиУчета.ПолитикаУчетаСерий ЕСТЬ NULL
		|			ТОГДА ВЫБОР
		|					КОГДА ПолитикиУчета.ВестиСуммовойУчетПоСериям
		|						ТОГДА ВЫБОР
		|								КОГДА Товары.СерияНоменклатуры = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
		|									ТОГДА &СтатусУчетСебестоимостиПоСериям //&СтатусУчетСебестоимостиПоСериямСерияНеЗаполнена
		|								ИНАЧЕ &СтатусУчетСебестоимостиПоСериям
		|							КОНЕЦ
		|					КОГДА ПолитикиУчета.ВестиУчетПоСериям
		|						ТОГДА ВЫБОР
		|								КОГДА Товары.СерияНоменклатуры = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
		|									ТОГДА &СтатусУчетПоСериям //&СтатусУчетПоСериямСерияНеЗаполнена
		|								ИНАЧЕ &СтатусУчетПоСериям
		|							КОНЕЦ
		|					КОГДА &ИспользоватьСправочноеУказаниеСерий И ПолитикиУчета.СправочноеУказаниеСерий
		|						ТОГДА ВЫБОР
		|								КОГДА Товары.СерияНоменклатуры = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
		|									ТОГДА &СтатусСправочноеУказаниеСерий //&СтатусСправочноеУказаниеСерийСерияНеЗаполнена
		|								ИНАЧЕ &СтатусСправочноеУказаниеСерий
		|							КОНЕЦ
		|					ИНАЧЕ &СтатусСерииНеУказываются
		|				КОНЕЦ
		|		ИНАЧЕ &СтатусСерииНеУказываются
		|	КОНЕЦ КАК СтатусУказанияСерий,
		|	ВЫБОР
		|		КОГДА &ИспользоватьПартии И НЕ ПолитикиУчета.ПолитикаУчетаПартий ЕСТЬ NULL
		|			ТОГДА ВЫБОР
		|					КОГДА ПолитикиУчета.ВестиСуммовойУчетПоПартиям
		|						ТОГДА &СтатусУчетСебестоимостиПоПартиям
		|					КОГДА ПолитикиУчета.ВестиУчетПоПартиям
		|						ТОГДА &СтатусУчетПоПартиям
		|					ИНАЧЕ &СтатусПартииНеУказываются
		|				КОНЕЦ
		|		ИНАЧЕ &СтатусПартииНеУказываются
		|	КОНЕЦ КАК СтатусУказанияПартий,
		|	Товары.НомерСтроки КАК НомерСтроки
		|ПОМЕСТИТЬ Статусы
		|ИЗ
		|	Товары КАК Товары
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		ТоварыДляЗапроса КАК ТоварыДляЗапроса
		|		ПО
		|			ТоварыДляЗапроса.Номенклатура = Товары.Номенклатура
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		ПолитикиУчета КАК ПолитикиУчета
		|		ПО
		|			ПолитикиУчета.ВидНоменклатуры = ТоварыДляЗапроса.ВидНоменклатуры
		|			И ПолитикиУчета.Склад = &Склад
		|;
		|
		|/////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Статусы.НомерСтроки КАК НомерСтроки,
		|	Статусы.СтатусУказанияСерий КАК СтатусУказанияСерий,
		|	Статусы.СтатусУказанияПартий КАК СтатусУказанияПартий
		|ИЗ
		|	Статусы КАК Статусы
		|ГДЕ
		|	Статусы.СтатусУказанияСерий <> Статусы.СтатусУказанияСерийСтарый
		|	ИЛИ Статусы.СтатусУказанияПартий <> Статусы.СтатусУказанияПартийСтарый
		|";
	Иначе
		ТекстЗапросаСтатусыПоля = "";
		ТекстЗапросаСтатусыТоварыСоединения = "";
		ТекстЗапросаСтатусыСоединения = "";
		ТекстЗапросаСтатусыИтогПоля = "";
		ТекстЗапросаСтатусыИтогУсловия = "";
		Для Каждого Суффикс Из ПараметрыУчетаНоменклатуры.СуффиксыСтатусов Цикл
			ТекстЗапросаСтатусыПоля = ТекстЗапросаСтатусыПоля + "
			|	Товары.СтатусУказанияСерий" + Суффикс + " КАК СтатусУказанияСерийСтарый" + Суффикс + ",
			|	Товары.СтатусУказанияПартий" + Суффикс + " КАК СтатусУказанияПартийСтарый" + Суффикс + ",
			|	ВЫБОР
			|		КОГДА &ИспользоватьСерии И НЕ ПолитикиУчета.ПолитикаУчетаСерий ЕСТЬ NULL
			|			ТОГДА ВЫБОР
			|					КОГДА ПолитикиУчета" + Суффикс + ".ВестиСуммовойУчетПоСериям
			|						ТОГДА ВЫБОР
			|								КОГДА Товары.СерияНоменклатуры" + Суффикс + " = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
			|									ТОГДА &СтатусУчетСебестоимостиПоСериям //&СтатусУчетСебестоимостиПоСериямСерияНеЗаполнена
			|								ИНАЧЕ &СтатусУчетСебестоимостиПоСериям
			|							КОНЕЦ
			|					КОГДА ПолитикиУчета" + Суффикс + ".ВестиУчетПоСериям
			|						ТОГДА ВЫБОР
			|								КОГДА Товары.СерияНоменклатуры" + Суффикс + " = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
			|									ТОГДА &СтатусУчетПоСериям //&СтатусУчетПоСериямСерияНеЗаполнена
			|								ИНАЧЕ &СтатусУчетПоСериям
			|							КОНЕЦ
			|					КОГДА &ИспользоватьСправочноеУказаниеСерий И ПолитикиУчета" + Суффикс + ".СправочноеУказаниеСерий
			|						ТОГДА ВЫБОР
			|								КОГДА Товары.СерияНоменклатуры" + Суффикс + " = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
			|									ТОГДА &СтатусСправочноеУказаниеСерий //&СтатусСправочноеУказаниеСерийСерияНеЗаполнена
			|								ИНАЧЕ &СтатусСправочноеУказаниеСерий
			|							КОНЕЦ
			|					ИНАЧЕ &СтатусСерииНеУказываются
			|				КОНЕЦ
			|		ИНАЧЕ &СтатусСерииНеУказываются
			|	КОНЕЦ КАК СтатусУказанияСерий" + Суффикс + ",
			|	ВЫБОР
			|		КОГДА &ИспользоватьПартии И НЕ ПолитикиУчета" + Суффикс + ".ПолитикаУчетаПартий ЕСТЬ NULL
			|			ТОГДА ВЫБОР
			|					КОГДА ПолитикиУчета" + Суффикс + ".ВестиСуммовойУчетПоПартиям
			|						ТОГДА &СтатусУчетСебестоимостиПоПартиям
			|					КОГДА ПолитикиУчета" + Суффикс + ".ВестиУчетПоПартиям
			|						ТОГДА &СтатусУчетПоПартиям
			|					ИНАЧЕ &СтатусПартииНеУказываются
			|				КОНЕЦ
			|		ИНАЧЕ &СтатусПартииНеУказываются
			|	КОНЕЦ КАК СтатусУказанияПартий" + Суффикс + ",";
			
			ТекстЗапросаСтатусыТоварыСоединения = ТекстЗапросаСтатусыТоварыСоединения + "
			|	ЛЕВОЕ СОЕДИНЕНИЕ
			|		ТоварыДляЗапроса КАК ТоварыДляЗапроса" + Суффикс + "
			|	ПО
			|		ТоварыДляЗапроса" + Суффикс + ".Суффикс = """ + Суффикс + """
			|		И ТоварыДляЗапроса" + Суффикс + ".Номенклатура = Товары.Номенклатура" + Суффикс;
			
			ТекстЗапросаСтатусыСоединения = ТекстЗапросаСтатусыСоединения + "
			|	ЛЕВОЕ СОЕДИНЕНИЕ
			|		ПолитикиУчета КАК ПолитикиУчета" + Суффикс + "
			|		ПО
			|			ПолитикиУчета" + Суффикс + ".ВидНоменклатуры = ТоварыДляЗапроса" + Суффикс + ".ВидНоменклатуры
			|			И ПолитикиУчета" + Суффикс + ".Склад = &Склад";
			
			ТекстЗапросаСтатусыИтогПоля = ТекстЗапросаСтатусыИтогПоля + "
			|	Статусы.СтатусУказанияСерий" + Суффикс + " КАК СтатусУказанияСерий" + Суффикс + ",
			|	Статусы.СтатусУказанияПартий" + Суффикс + " КАК СтатусУказанияПартий" + Суффикс + ",";
			
			ТекстЗапросаСтатусыИтогУсловия = ТекстЗапросаСтатусыИтогУсловия + "
			|	ИЛИ Статусы.СтатусУказанияСерий" + Суффикс + " <> Статусы.СтатусУказанияСерийСтарый" + Суффикс + "
			|	ИЛИ Статусы.СтатусУказанияПартий" + Суффикс + " <> Статусы.СтатусУказанияПартийСтарый" + Суффикс;
		КонецЦикла;
		ТекстЗапросаСтатусы = "
		|ВЫБРАТЬ
		|" + ТекстЗапросаСтатусыПоля + "
		|	Товары.НомерСтроки КАК НомерСтроки
		|ПОМЕСТИТЬ Статусы
		|ИЗ
		|	Товары КАК Товары
		|" + ТекстЗапросаСтатусыТоварыСоединения + "
		|" + ТекстЗапросаСтатусыСоединения + "
		|;
		|
		|///////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|" + ТекстЗапросаСтатусыИтогПоля + "
		|	Статусы.НомерСтроки КАК НомерСтроки
		|ИЗ
		|	Статусы КАК Статусы
		|ГДЕ
		|	ЛОЖЬ
		|" + ТекстЗапросаСтатусыИтогУсловия + "
		|	";
	КонецЕсли;
	
	ТекстЗапроса =
		ТекстЗапросаТовары 
		+ ТекстЗапросаТоварыДляЗапроса
		+ "
		|ВЫБРАТЬ
		|	Склады.Ссылка КАК Склад,
		|	Склады.ТипСклада КАК ТипСклада
		|ПОМЕСТИТЬ Склады
		|ИЗ
		|	Справочник.Склады КАК Склады
		|ГДЕ
		|	Склады.Ссылка = &Склад
		|;
		|
		|/////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПолитикиУчета.Ссылка КАК ВидНоменклатуры,
		|	Склады.Склад КАК Склад,
		|	ПолитикиУчета.ПолитикаУчетаСерий КАК ПолитикаУчетаСерий,
		|	ВЫБОР
		|		КОГДА ПолитикиУчета.ПолитикаУчетаСерий = ЗНАЧЕНИЕ(Перечисление.ТипыПолитикУчетаСерий.СправочноеУказаниеСерий)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК СправочноеУказаниеСерий,
		|	ВЫБОР
		|		КОГДА ПолитикиУчета.ПолитикаУчетаСерий В (ЗНАЧЕНИЕ(Перечисление.ТипыПолитикУчетаСерий.УправлениеОстаткамиСерий), ЗНАЧЕНИЕ(Перечисление.ТипыПолитикУчетаСерий.УчетСебестоимостиПоСериям))
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ВестиУчетПоСериям,
		|	ВЫБОР
		|		КОГДА ПолитикиУчета.ПолитикаУчетаСерий = ЗНАЧЕНИЕ(Перечисление.ТипыПолитикУчетаСерий.УчетСебестоимостиПоСериям)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ВестиСуммовойУчетПоСериям,
		|
		|	ПолитикиУчета.ПолитикаУчетаПартий КАК ПолитикаУчетаПартий,
		|	ВЫБОР
		|		КОГДА ПолитикиУчета.ПолитикаУчетаПартий = ЗНАЧЕНИЕ(Перечисление.ТипыПолитикУчетаПартий.УправлениеОстаткамиПартий)
		|				ИЛИ ПолитикиУчета.ПолитикаУчетаПартий = ЗНАЧЕНИЕ(Перечисление.ТипыПолитикУчетаПартий.УчетСебестоимостиПоПартиям)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ВестиУчетПоПартиям,
		|	ВЫБОР
		|		КОГДА ПолитикиУчета.ПолитикаУчетаПартий = ЗНАЧЕНИЕ(Перечисление.ТипыПолитикУчетаПартий.УчетСебестоимостиПоПартиям)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ВестиСуммовойУчетПоПартиям
		|ПОМЕСТИТЬ ПолитикиУчета
		|ИЗ
		|	Справочник.ВидыНоменклатуры КАК ПолитикиУчета
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Склады
		|		ПО
		|			Склады.ТипСклада <> ЗНАЧЕНИЕ(Перечисление.ТипыСкладов.Отделение)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПолитикиУчета.Ссылка КАК ВидНоменклатуры,
		|	Склады.Склад КАК Склад,
		|	ПолитикиУчета.ПолитикаУчетаСерийВОтделениях КАК ПолитикаУчетаСерий,
		|	ВЫБОР
		|		КОГДА ПолитикиУчета.ПолитикаУчетаСерийВОтделениях = ЗНАЧЕНИЕ(Перечисление.ТипыПолитикУчетаСерий.СправочноеУказаниеСерий)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК СправочноеУказаниеСерий,
		|	ВЫБОР
		|		КОГДА ПолитикиУчета.ПолитикаУчетаСерийВОтделениях В (ЗНАЧЕНИЕ(Перечисление.ТипыПолитикУчетаСерий.УправлениеОстаткамиСерий), ЗНАЧЕНИЕ(Перечисление.ТипыПолитикУчетаСерий.УчетСебестоимостиПоСериям))
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ВестиУчетПоСериям,
		|	ВЫБОР
		|		КОГДА ПолитикиУчета.ПолитикаУчетаСерийВОтделениях = ЗНАЧЕНИЕ(Перечисление.ТипыПолитикУчетаСерий.УчетСебестоимостиПоСериям)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ВестиСуммовойУчетПоСериям,
		|
		|	ПолитикиУчета.ПолитикаУчетаПартийВОтделениях КАК ПолитикаУчетаПартий,
		|	ВЫБОР
		|		КОГДА ПолитикиУчета.ПолитикаУчетаПартийВОтделениях = ЗНАЧЕНИЕ(Перечисление.ТипыПолитикУчетаПартий.УправлениеОстаткамиПартий)
		|				ИЛИ ПолитикиУчета.ПолитикаУчетаПартийВОтделениях = ЗНАЧЕНИЕ(Перечисление.ТипыПолитикУчетаПартий.УчетСебестоимостиПоПартиям)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ВестиУчетПоПартиям,
		|	ВЫБОР
		|		КОГДА ПолитикиУчета.ПолитикаУчетаПартийВОтделениях = ЗНАЧЕНИЕ(Перечисление.ТипыПолитикУчетаПартий.УчетСебестоимостиПоПартиям)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ВестиСуммовойУчетПоПартиям
		|ИЗ
		|	Справочник.ВидыНоменклатуры КАК ПолитикиУчета
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Склады
		|		ПО
		|			Склады.ТипСклада = ЗНАЧЕНИЕ(Перечисление.ТипыСкладов.Отделение)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ВидНоменклатуры,
		|	Склад
		|;
		|
		|///////////////////////////////////////////////////////////////////////////////
		|"
		+ ТекстЗапросаСтатусы;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаРасчетаСтатусовУчетаНоменклатурыПриПеремещенииМеждуСкладами(ПараметрыУчетаНоменклатуры)
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Товары.НомерСтроки,
	|	Товары.Номенклатура,
	|	Товары.СерияНоменклатуры,
	|	Товары.СтатусУказанияСерий,
	|	Товары.СтатусУказанияСерийОтправитель,
	|	Товары.СтатусУказанияСерийПолучатель,
	|	Товары.СтатусУказанияПартий,
	|	Товары.СтатусУказанияПартийОтправитель,
	|	Товары.СтатусУказанияПартийПолучатель,
	|	Товары.Количество
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура,
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры КАК ВидНоменклатуры,
	|	СУММА(Товары.Количество) КАК Количество
	|ПОМЕСТИТЬ ТоварыДляЗапроса
	|ИЗ
	|	Товары КАК Товары
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Склады.Ссылка КАК Склад,
	|	Склады.ТипСклада КАК ТипСклада
	|ПОМЕСТИТЬ Склады
	|ИЗ
	|	Справочник.Склады КАК Склады
	|ГДЕ
	|	Склады.Ссылка В (&СкладОтправитель, &СкладПолучатель)
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПолитикиУчета.Ссылка КАК ВидНоменклатуры,
	|	Склады.Склад КАК Склад,
	|
	|	ПолитикиУчета.ПолитикаУчетаСерий КАК ПолитикаУчетаСерий,
	|	ВЫБОР
	|		КОГДА ПолитикиУчета.ПолитикаУчетаСерий = ЗНАЧЕНИЕ(Перечисление.ТипыПолитикУчетаСерий.СправочноеУказаниеСерий)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК СправочноеУказаниеСерий,
	|	ВЫБОР
	|		КОГДА ПолитикиУчета.ПолитикаУчетаСерий = ЗНАЧЕНИЕ(Перечисление.ТипыПолитикУчетаСерий.УправлениеОстаткамиСерий)
	|				ИЛИ ПолитикиУчета.ПолитикаУчетаСерий = ЗНАЧЕНИЕ(Перечисление.ТипыПолитикУчетаСерий.УчетСебестоимостиПоСериям)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ВестиУчетПоСериям,
	|	ВЫБОР
	|		КОГДА ПолитикиУчета.ПолитикаУчетаСерий = ЗНАЧЕНИЕ(Перечисление.ТипыПолитикУчетаСерий.УчетСебестоимостиПоСериям)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ВестиСуммовойУчетПоСериям,
	|
	|	ПолитикиУчета.ПолитикаУчетаПартий КАК ПолитикаУчетаПартий,
	|	ВЫБОР
	|		КОГДА ПолитикиУчета.ПолитикаУчетаПартий = ЗНАЧЕНИЕ(Перечисление.ТипыПолитикУчетаПартий.УправлениеОстаткамиПартий)
	|				ИЛИ ПолитикиУчета.ПолитикаУчетаПартий = ЗНАЧЕНИЕ(Перечисление.ТипыПолитикУчетаПартий.УчетСебестоимостиПоПартиям)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ВестиУчетПоПартиям,
	|	ВЫБОР
	|		КОГДА ПолитикиУчета.ПолитикаУчетаПартий = ЗНАЧЕНИЕ(Перечисление.ТипыПолитикУчетаПартий.УчетСебестоимостиПоПартиям)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ВестиСуммовойУчетПоПартиям
	|ПОМЕСТИТЬ ПараметрыУчета
	|ИЗ
	|	Справочник.ВидыНоменклатуры КАК ПолитикиУчета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТоварыДляЗапроса КАК ТоварыДляЗапроса
	|		ПО
	|			ТоварыДляЗапроса.ВидНоменклатуры = ПолитикиУчета.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Склады
	|		ПО
	|			Склады.ТипСклада <> ЗНАЧЕНИЕ(Перечисление.ТипыСкладов.Отделение)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПолитикиУчета.Ссылка КАК ВидНоменклатуры,
	|	Склады.Склад КАК Склад,
	|
	|	ПолитикиУчета.ПолитикаУчетаСерийВОтделениях КАК ПолитикаУчетаСерий,
	|	ВЫБОР
	|		КОГДА ПолитикиУчета.ПолитикаУчетаСерийВОтделениях = ЗНАЧЕНИЕ(Перечисление.ТипыПолитикУчетаСерий.СправочноеУказаниеСерий)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК СправочноеУказаниеСерий,
	|	ВЫБОР
	|		КОГДА ПолитикиУчета.ПолитикаУчетаСерийВОтделениях = ЗНАЧЕНИЕ(Перечисление.ТипыПолитикУчетаСерий.УправлениеОстаткамиСерий)
	|				ИЛИ ПолитикиУчета.ПолитикаУчетаСерийВОтделениях = ЗНАЧЕНИЕ(Перечисление.ТипыПолитикУчетаСерий.УчетСебестоимостиПоСериям)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ВестиУчетПоСериям,
	|	ВЫБОР
	|		КОГДА ПолитикиУчета.ПолитикаУчетаСерийВОтделениях = ЗНАЧЕНИЕ(Перечисление.ТипыПолитикУчетаСерий.УчетСебестоимостиПоСериям)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ВестиСуммовойУчетПоСериям,
	|
	|	ПолитикиУчета.ПолитикаУчетаПартийВОтделениях КАК ПолитикаУчетаПартий,
	|	ВЫБОР
	|		КОГДА ПолитикиУчета.ПолитикаУчетаПартийВОтделениях = ЗНАЧЕНИЕ(Перечисление.ТипыПолитикУчетаПартий.УправлениеОстаткамиПартий)
	|				ИЛИ ПолитикиУчета.ПолитикаУчетаПартийВОтделениях = ЗНАЧЕНИЕ(Перечисление.ТипыПолитикУчетаПартий.УчетСебестоимостиПоПартиям)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ВестиУчетПоПартиям,
	|	ВЫБОР
	|		КОГДА ПолитикиУчета.ПолитикаУчетаПартийВОтделениях = ЗНАЧЕНИЕ(Перечисление.ТипыПолитикУчетаПартий.УчетСебестоимостиПоПартиям)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ВестиСуммовойУчетПоПартиям
	|ИЗ
	|	Справочник.ВидыНоменклатуры КАК ПолитикиУчета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТоварыДляЗапроса КАК ТоварыДляЗапроса
	|		ПО
	|			ТоварыДляЗапроса.ВидНоменклатуры = ПолитикиУчета.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Склады
	|		ПО
	|			Склады.ТипСклада = ЗНАЧЕНИЕ(Перечисление.ТипыСкладов.Отделение)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидНоменклатуры,
	|	Склад
	|;
	|
	|///////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерийСтарый,
	|	Товары.СтатусУказанияСерийОтправитель КАК СтатусУказанияСерийОтправительСтарый,
	|	Товары.СтатусУказанияСерийПолучатель КАК СтатусУказанияСерийПолучательСтарый,
	|	Товары.СтатусУказанияПартий КАК СтатусУказанияПартийСтарый,
	|	Товары.СтатусУказанияПартийОтправитель КАК СтатусУказанияПартийОтправительСтарый,
	|	Товары.СтатусУказанияПартийПолучатель КАК СтатусУказанияПартийПолучательСтарый,
	|	ВЫБОР
	|		КОГДА &ИспользоватьСерии И НЕ ПолитикиУчетаОтправитель.ПолитикаУчетаСерий ЕСТЬ NULL
	|			ТОГДА ВЫБОР
	|					КОГДА ПолитикиУчетаОтправитель.ВестиСуммовойУчетПоСериям
	|						ТОГДА ВЫБОР
	|								КОГДА Товары.СерияНоменклатуры = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|									ТОГДА &СтатусУчетСебестоимостиПоСериям //&СтатусУчетСебестоимостиПоСериямСерияНеЗаполнена
	|								ИНАЧЕ &СтатусУчетСебестоимостиПоСериям
	|							КОНЕЦ
	|					КОГДА ПолитикиУчетаОтправитель.ВестиУчетПоСериям
	|						ТОГДА ВЫБОР
	|								КОГДА Товары.СерияНоменклатуры = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|									ТОГДА &СтатусУчетПоСериям //&СтатусУчетПоСериямСерияНеЗаполнена
	|								ИНАЧЕ &СтатусУчетПоСериям
	|							КОНЕЦ
	|					КОГДА ПолитикиУчетаОтправитель.СправочноеУказаниеСерий
	|						ТОГДА ВЫБОР
	|								КОГДА Товары.СерияНоменклатуры = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|									ТОГДА &СтатусСправочноеУказаниеСерий //&СтатусСправочноеУказаниеСерийСерияНеЗаполнена
	|								ИНАЧЕ &СтатусСправочноеУказаниеСерий
	|							КОНЕЦ
	|					ИНАЧЕ &СтатусСерииНеУказываются
	|				КОНЕЦ
	|		ИНАЧЕ &СтатусСерииНеУказываются
	|	КОНЕЦ КАК СтатусУказанияСерийОтправитель,
	|	ВЫБОР
	|		КОГДА &ИспользоватьСерии И НЕ ПолитикиУчетаПолучатель.ПолитикаУчетаСерий ЕСТЬ NULL
	|			ТОГДА ВЫБОР
	|					КОГДА ПолитикиУчетаПолучатель.ВестиСуммовойУчетПоСериям
	|						ТОГДА ВЫБОР
	|								КОГДА Товары.СерияНоменклатуры = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|									ТОГДА &СтатусУчетСебестоимостиПоСериям //&СтатусУчетСебестоимостиПоСериямСерияНеЗаполнена
	|								ИНАЧЕ &СтатусУчетСебестоимостиПоСериям
	|							КОНЕЦ
	|					КОГДА ПолитикиУчетаПолучатель.ВестиУчетПоСериям
	|						ТОГДА ВЫБОР
	|								КОГДА Товары.СерияНоменклатуры = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|									ТОГДА &СтатусУчетПоСериям //&СтатусУчетПоСериямСерияНеЗаполнена
	|								ИНАЧЕ &СтатусУчетПоСериям
	|							КОНЕЦ
	|					КОГДА ПолитикиУчетаПолучатель.СправочноеУказаниеСерий
	|						ТОГДА ВЫБОР
	|								КОГДА Товары.СерияНоменклатуры = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|									ТОГДА &СтатусСправочноеУказаниеСерий //&СтатусСправочноеУказаниеСерийСерияНеЗаполнена
	|								ИНАЧЕ &СтатусСправочноеУказаниеСерий
	|							КОНЕЦ
	|					ИНАЧЕ &СтатусСерииНеУказываются
	|				КОНЕЦ
	|		ИНАЧЕ &СтатусСерииНеУказываются
	|	КОНЕЦ КАК СтатусУказанияСерийПолучатель,
	|	ВЫБОР
	|		КОГДА &ИспользоватьПартии И НЕ ПолитикиУчетаОтправитель.ПолитикаУчетаПартий ЕСТЬ NULL
	|			ТОГДА ВЫБОР
	|					КОГДА ПолитикиУчетаОтправитель.ВестиСуммовойУчетПоПартиям
	|						ТОГДА &СтатусУчетСебестоимостиПоПартиям
	|					КОГДА ПолитикиУчетаОтправитель.ВестиУчетПоПартиям
	|						ТОГДА &СтатусУчетПоПартиям
	|					ИНАЧЕ &СтатусПартииНеУказываются
	|				КОНЕЦ
	|		ИНАЧЕ &СтатусПартииНеУказываются
	|	КОНЕЦ КАК СтатусУказанияПартийОтправитель,
	|	ВЫБОР
	|		КОГДА &ИспользоватьПартии И НЕ ПолитикиУчетаПолучатель.ПолитикаУчетаПартий ЕСТЬ NULL
	|			ТОГДА ВЫБОР
	|					КОГДА ПолитикиУчетаПолучатель.ВестиСуммовойУчетПоПартиям
	|						ТОГДА &СтатусУчетСебестоимостиПоПартиям
	|					КОГДА ПолитикиУчетаПолучатель.ВестиУчетПоПартиям
	|						ТОГДА &СтатусУчетПоПартиям
	|					ИНАЧЕ &СтатусПартииНеУказываются
	|				КОНЕЦ
	|		ИНАЧЕ &СтатусПартииНеУказываются
	|	КОНЕЦ КАК СтатусУказанияПартийПолучатель
	|ПОМЕСТИТЬ СтатусыОтправительПолучатель
	|ИЗ
	|	Товары КАК Товары
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТоварыДляЗапроса КАК ТоварыДляЗапроса
	|		ПО
	|			ТоварыДляЗапроса.Номенклатура = Товары.Номенклатура
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПараметрыУчета КАК ПолитикиУчетаОтправитель
	|		ПО
	|			ПолитикиУчетаОтправитель.ВидНоменклатуры = ТоварыДляЗапроса.ВидНоменклатуры
	|			И ПолитикиУчетаОтправитель.Склад = &СкладОтправитель
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПараметрыУчета КАК ПолитикиУчетаПолучатель
	|		ПО
	|			ПолитикиУчетаПолучатель.ВидНоменклатуры = ТоварыДляЗапроса.ВидНоменклатуры
	|			И ПолитикиУчетаПолучатель.Склад = &СкладПолучатель
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Статусы.НомерСтроки КАК НомерСтроки,
	|	Статусы.СтатусУказанияСерийСтарый КАК СтатусУказанияСерийСтарый,
	|	Статусы.СтатусУказанияСерийОтправительСтарый КАК СтатусУказанияСерийОтправительСтарый,
	|	Статусы.СтатусУказанияСерийПолучательСтарый КАК СтатусУказанияСерийПолучательСтарый,
	|	Статусы.СтатусУказанияПартийСтарый КАК СтатусУказанияПартийСтарый,
	|	Статусы.СтатусУказанияПартийОтправительСтарый КАК СтатусУказанияПартийОтправительСтарый,
	|	Статусы.СтатусУказанияПартийПолучательСтарый КАК СтатусУказанияПартийПолучательСтарый,
	|	ВЫБОР
	|		КОГДА НЕ &Отгружено ТОГДА
	|			Статусы.СтатусУказанияСерийОтправитель
	|		ИНАЧЕ
	|			ВЫБОР
	|				КОГДА Статусы.СтатусУказанияСерийОтправитель В (&СтатусУчетСебестоимостиПоСериям, &СтатусУчетСебестоимостиПоСериямСерияНеЗаполнена)
	|					ТОГДА Статусы.СтатусУказанияСерийОтправитель
	|				КОГДА Статусы.СтатусУказанияСерийПолучатель В (&СтатусУчетСебестоимостиПоСериям, &СтатусУчетСебестоимостиПоСериямСерияНеЗаполнена)
	|					ТОГДА Статусы.СтатусУказанияСерийПолучатель
	|				КОГДА Статусы.СтатусУказанияСерийОтправитель В (&СтатусУчетПоСериям, &СтатусУчетПоСериямСерияНеЗаполнена)
	|					ТОГДА Статусы.СтатусУказанияСерийОтправитель
	|				КОГДА Статусы.СтатусУказанияСерийПолучатель В (&СтатусУчетПоСериям, &СтатусУчетПоСериямСерияНеЗаполнена)
	|					ТОГДА Статусы.СтатусУказанияСерийПолучатель
	|				КОГДА Статусы.СтатусУказанияСерийОтправитель В (&СтатусСправочноеУказаниеСерий, &СтатусСправочноеУказаниеСерийСерияНеЗаполнена)
	|					ТОГДА Статусы.СтатусУказанияСерийОтправитель
	|				ИНАЧЕ Статусы.СтатусУказанияСерийОтправитель
	|			КОНЕЦ
	|	КОНЕЦ КАК СтатусУказанияСерий,
	|	Статусы.СтатусУказанияСерийОтправитель КАК СтатусУказанияСерийОтправитель,
	|	Статусы.СтатусУказанияСерийПолучатель КАК СтатусУказанияСерийПолучатель,
	|	ВЫБОР
	|		КОГДА НЕ &Отгружено ТОГДА
	|			Статусы.СтатусУказанияПартийОтправитель
	|		ИНАЧЕ
	|			ВЫБОР
	|				КОГДА Статусы.СтатусУказанияПартийОтправитель В (&СтатусУчетСебестоимостиПоПартиям)
	|					ТОГДА Статусы.СтатусУказанияПартийОтправитель
	|				КОГДА Статусы.СтатусУказанияПартийПолучатель В (&СтатусУчетСебестоимостиПоПартиям)
	|					ТОГДА Статусы.СтатусУказанияПартийПолучатель
	|				КОГДА Статусы.СтатусУказанияПартийОтправитель В (&СтатусУчетПоПартиям)
	|					ТОГДА Статусы.СтатусУказанияПартийОтправитель
	|				КОГДА Статусы.СтатусУказанияПартийПолучатель В (&СтатусУчетПоПартиям)
	|					ТОГДА Статусы.СтатусУказанияПартийПолучатель
	|				ИНАЧЕ &СтатусПартииНеУказываются
	|			КОНЕЦ
	|	КОНЕЦ КАК СтатусУказанияПартий,
	|	Статусы.СтатусУказанияПартийОтправитель КАК СтатусУказанияПартийОтправитель,
	|	Статусы.СтатусУказанияПартийПолучатель КАК СтатусУказанияПартийПолучатель
	|ПОМЕСТИТЬ Статусы
	|ИЗ
	|	СтатусыОтправительПолучатель КАК Статусы
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Статусы.НомерСтроки КАК НомерСтроки,
	|	Статусы.СтатусУказанияСерий КАК СтатусУказанияСерий,
	|	Статусы.СтатусУказанияСерийОтправитель КАК СтатусУказанияСерийОтправитель,
	|	Статусы.СтатусУказанияСерийПолучатель КАК СтатусУказанияСерийПолучатель,
	|	Статусы.СтатусУказанияПартий КАК СтатусУказанияПартий,
	|	Статусы.СтатусУказанияПартийОтправитель КАК СтатусУказанияПартийОтправитель,
	|	Статусы.СтатусУказанияПартийПолучатель КАК СтатусУказанияПартийПолучатель
	|ИЗ
	|	Статусы КАК Статусы
	|ГДЕ
	|	Статусы.СтатусУказанияСерий <> Статусы.СтатусУказанияСерийСтарый
	|	ИЛИ Статусы.СтатусУказанияСерийОтправитель <> Статусы.СтатусУказанияСерийОтправительСтарый
	|	ИЛИ Статусы.СтатусУказанияСерийПолучатель <> Статусы.СтатусУказанияСерийПолучательСтарый
	|	ИЛИ Статусы.СтатусУказанияПартий <> Статусы.СтатусУказанияПартийСтарый
	|	ИЛИ Статусы.СтатусУказанияПартийОтправитель <> Статусы.СтатусУказанияПартийОтправительСтарый
	|	ИЛИ Статусы.СтатусУказанияПартийПолучатель <> Статусы.СтатусУказанияПартийПолучательСтарый
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Выполняет установку параметров сеанса. Вызывается из модуля сеанса.
//
// Параметры:
//   ИмяПараметра           - строка с именем параметра сеанса.
//   УстановленныеПараметры - массив всех установленных параметров сеанса.
//
Процедура УстановитьПараметрСеанса(ИмяПараметра, УстановленныеПараметры) Экспорт
	
	Если ИмяПараметра = "ПроводитьБезКонтроляОстатковТоваровПоРегиструСебестоимости" Тогда
		ПараметрыСеанса.ПроводитьБезКонтроляОстатковТоваровПоРегиструСебестоимости = Ложь;
		УстановленныеПараметры.Добавить(ИмяПараметра);
	КонецЕсли;

КонецПроцедуры

Функция ИмяСобытияВыключенКонтрольОстатков() Экспорт
	Возврат НСтр("ru = 'Контроль остатков товаров по регистру себестоимости'", ОбщегоНазначения.КодОсновногоЯзыка());
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции
