
////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС
#Область ПрограммныйИнтерфейс

// Добавляет элементы фильтра по лекарственным средствам на форму.
//
// Параметры:
//  Форма -ФормаКлиентскогоПриложения - форма, на которую добавляется фильтр.
//
Процедура ДобавитьФильтрНаФорму(Форма) Экспорт
	
	ИнициализироватьФильтр(Форма);
	
КонецПроцедуры

// Восстанавливает настройки фильтра из хранилища общих настроек.
// Устанавливает отбор из параметров формы.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма, где устанавливаются начальные настройки.
//
Процедура УстановитьНачальныеНастройки(Форма, Параметры) Экспорт
	
	Префикс = ФильтрНоменклатурыЛекарственныхСредствКлиентСервер.Идентификатор();
	
	Настройки = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(Префикс, Форма.КодФормы);
	Если Настройки <> Неопределено Тогда
		Если Настройки.Свойство("Отбор") Тогда
			
			Отбор = Новый Структура;
			
			СохраненныеОтборы = Настройки.Отбор;
			Для Каждого ЭлементОтбора Из СохраненныеОтборы Цикл
				
				Если ОбщегоНазначения.ЭтоСсылка(ТипЗнч(ЭлементОтбора.Значение))
				   И Не ОбщегоНазначения.СсылкаСуществует(ЭлементОтбора.Значение) Тогда
					Продолжить;
				КонецЕсли;
				
				Отбор.Вставить(ЭлементОтбора.Ключ, ЭлементОтбора.Значение);
				
			КонецЦикла;
			
			Если Отбор.Количество() > 0 Тогда
				УстановитьОтборыСписка(Форма, Отбор);
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
	Если Форма.Параметры.Свойство("Отбор") Тогда
		Номенклатура = Неопределено;
		Если Форма.Параметры.Отбор.Свойство("Номенклатура", Номенклатура) И ЗначениеЗаполнено(Номенклатура) Тогда
			Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Номенклатура, "ЭтоЛекарственноеСредство") = Истина Тогда
				Отбор = ПолучитьПоляОтбораПоНоменклатуре(Номенклатура);
				УстановитьОтборыСписка(Форма, Отбор);
				Форма.Параметры.Отбор.Удалить("Номенклатура");
			КонецЕсли;
		Иначе
			УстановитьОтборыСписка(Форма, Форма.Параметры.Отбор, Истина);
		КонецЕсли;
	КонецЕсли;
	
	Если Форма.Параметры.Свойство("ОтборТолькоПросмотр") Тогда
		УстановитьТолькоПросмотрОтбораСписка(Форма, Форма.Параметры.ОтборТолькоПросмотр);
	КонецЕсли;
	
КонецПроцедуры

// Сохраняет настройки формы с фильтром по лекарственным средствам.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма, для которой сохраняются настройки.
//
Процедура СохранитьНастройки(Форма) Экспорт
	
	Префикс = ФильтрНоменклатурыЛекарственныхСредствКлиентСервер.Идентификатор();
	
	Настройки = Новый Структура;
	
	Отбор = Новый Структура;
	ПолучитьУстановленныеОтборы(Форма, Отбор);
	Настройки.Вставить("Отбор", Отбор);
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(Префикс, Форма.КодФормы, Настройки);
	
КонецПроцедуры

// Возвращает страницу формы с элементами фильтра по лекарственным средствам.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма, из которой получается страница фильтра.
//
// Возвращаемое значение:
//  ГруппаФормы - страница с элементами фильтра по лекарственным средствам.
//
Функция СтраницаФильтра(Форма) Экспорт
	
	Возврат Форма.Элементы[ФильтрНоменклатурыЛекарственныхСредствКлиентСервер.Идентификатор() + "ФильтрЛекарственныеСредства"];
	
КонецФункции

// Возвращает представление фильтра по лекарственным средствам.
// Используется для представления пользователю при выборе фильтра.
//
// Возвращаемое значение:
//  Строка - представление фильтра.
//
Функция ПредставлениеФильтра() Экспорт
	
	Возврат НСтр("ru='лекарственным средствам'");
	
КонецФункции

// Обрабатывает изменение варианта фильтра.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма, у которой обрабатывается фильтр.
//
Процедура ОбработатьВыборФильтра(Форма) Экспорт
	
	УстановитьФильтр(Форма);
	
КонецПроцедуры

// Обрабатывает отмену установленного фильтра.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма, в которой обрабатывается отмена фильтра.
//
Процедура ОбработатьОтменуФильтра(Форма) Экспорт
	
	СброситьФильтр(Форма);
	
КонецПроцедуры

// Устанавливает доступность элементов фильтра лекарственных средств.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма, где устанавливается доступность изменения элементов фильтра.
//
Процедура УстановитьДоступность(Форма) Экспорт
	
	СтраницаФильтра(Форма).Доступность = ФильтрыСписковКлиентСервер.ИспользоватьФильтры(Форма);
	
КонецПроцедуры

// Устанавливает фильтр в списке передаваемой формы.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма, где устанавливается фильтр.
//
Процедура УстановитьФильтр(Форма) Экспорт
	
	Если Не ФильтрыСписковКлиентСервер.ИспользоватьФильтры(Форма) Тогда
		Возврат;
	КонецЕсли;
	
	Список = ФильтрыСписковКлиентСервер.ФильтруемыйСписок(Форма);
	Префикс = ФильтрНоменклатурыЛекарственныхСредствКлиентСервер.Идентификатор();
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, Неопределено,,, Префикс + "ОтборФильтра", Истина);
	
	ОбновитьИспользованиеОтборов(Форма);
	
КонецПроцедуры

// Выключает использование фильтра списка передаваемой формы.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма, где выключается использование фильтра.
//
Процедура СброситьФильтр(Форма) Экспорт
	
	Список = ФильтрыСписковКлиентСервер.ФильтруемыйСписок(Форма);
	Префикс = ФильтрНоменклатурыЛекарственныхСредствКлиентСервер.Идентификатор();
	ИзменяемыеЭлементы = Новый Массив;
	НайтиРекурсивно(Список.Отбор.Элементы, ИзменяемыеЭлементы, Префикс);
	
	Для Каждого ЭлементОтбора Из ИзменяемыеЭлементы Цикл
		ЭлементФормы = Форма.Элементы.Найти(ЭлементОтбора.Представление);
		Если ЭлементФормы <> Неопределено И ЭлементФормы.ТолькоПросмотр Тогда
			Продолжить;
		КонецЕсли;
		ЭлементОтбора.Использование = Ложь;
	КонецЦикла;
	
КонецПроцедуры

// Устанавливает отборы списка формы по переданному описанию отбора.
//
// Параметры:
//  Форма                      - ФормаКлиентскогоПриложения - форма, где устанавливаются отборы.
//  Отборы                     - Структура - устанавливаемые отборы.
//  УдалятьУстановленныеОтборы - Булево - признак удаления элемента отбора
//                                        из структуры устанавливаемых отборов после их установки.
//
Процедура УстановитьОтборыСписка(Форма, Отборы, УдалятьУстановленныеОтборы = Ложь) Экспорт
	
	Элементы = Форма.Элементы;
	УстановленныеОтборы = Новый Массив;
	Префикс = ФильтрНоменклатурыЛекарственныхСредствКлиентСервер.Идентификатор();
	ПараметрыФормыВыпуска = ФильтрНоменклатурыЛекарственныхСредствКлиентСервер.ПараметрыФормыВыпуска();
	
	Для Каждого Отбор Из Отборы Цикл
		
		ИмяОтбора = Префикс + Отбор.Ключ;
		
		Элемент = Элементы.Найти(ИмяОтбора);
		Если Элемент = Неопределено Или Элемент.ТолькоПросмотр Тогда
			Продолжить;
		КонецЕсли;
		
		Если Не ТипЗнч(Элемент) = Тип("ПолеФормы") Тогда
			Продолжить;
		КонецЕсли;
		
		ОтборУстановлен = Ложь;
		Если Элемент.Вид = ВидПоляФормы.ПолеФлажка Тогда
			Форма[ИмяОтбора] = Истина;
			ОтборУстановлен = Форма[ИмяОтбора];
		Иначе
			ИмяФлажка = Префикс + "Отбор" + Отбор.Ключ;
			Если ТипЗнч(Форма[ИмяОтбора]) = Тип("СписокЗначений") Тогда
				Если ЗначениеЗаполнено(Отбор.Значение) Тогда
					Форма[ИмяОтбора].Очистить();
					Форма[ИмяОтбора + "ДляВыбора"].ЗаполнитьПометки(Ложь);
					Для Каждого ЭлементСписка Из Отбор.Значение Цикл
						НайденныйЭлемент = Форма[ИмяОтбора + "ДляВыбора"].НайтиПоЗначению(ЭлементСписка.Значение);
						Если НайденныйЭлемент <> Неопределено Тогда
							Форма[ИмяОтбора].Добавить(ЭлементСписка.Значение, ЭлементСписка.Представление);
							НайденныйЭлемент.Пометка = Истина;
						КонецЕсли;
					КонецЦикла;
					Если Форма[ИмяОтбора].Количество() = 0 Тогда
						НайденныйЭлемент = Форма[ИмяОтбора + "ДляВыбора"].НайтиПоЗначению(Форма[ИмяОтбора + "ДляВыбора"].ТипЗначения.ПривестиЗначение());
						НайденныйЭлемент.Пометка = Истина;
						Форма[ИмяОтбора].Добавить(НайденныйЭлемент.Значение, НайденныйЭлемент.Представление);
					Иначе
						Форма[ИмяФлажка] = Истина;
					КонецЕсли;
				КонецЕсли;
			Иначе
				Форма[ИмяОтбора] = Отбор.Значение;
				Форма[ИмяФлажка] = ЗначениеЗаполнено(Отбор.Значение);
			КонецЕсли;
			ОтборУстановлен = Форма[ИмяФлажка];
		КонецЕсли;
		
		Если ОтборУстановлен И ПараметрыФормыВыпуска.Свойство(Отбор.Ключ) Тогда
			Форма[Префикс + "ОтборФормаВыпуска"] = Истина;
		КонецЕсли;
		
		УстановленныеОтборы.Добавить(Отбор.Ключ);
		
	КонецЦикла;
	
	Если Форма[Префикс + "ОтборФормаВыпуска"] Тогда
		
		ПредставлениеФормыВыпуска = "";
		Для Каждого Реквизит Из ПараметрыФормыВыпуска Цикл
			ИмяОтбора = Префикс + Реквизит.Ключ;
			ИмяФлажка = Префикс + "Отбор" + Реквизит.Ключ;
			
			ИспользоватьОтбор = Форма[ИмяФлажка];
			Если ИспользоватьОтбор Тогда
				ПредставлениеФормыВыпуска = ПредставлениеФормыВыпуска + ", " + Форма[ИмяОтбора];
			КонецЕсли;
		КонецЦикла;
		
		ПредставлениеФормыВыпуска = Сред(ПредставлениеФормыВыпуска, 3);
		Если ПустаяСтрока(ПредставлениеФормыВыпуска) Тогда
			ПредставлениеФормыВыпуска = НСтр("ru = '<Форма выпуска не задана>'");
		КонецЕсли;
		
		Форма[Префикс + "ФормаВыпуска"] = ПредставлениеФормыВыпуска;
		
	КонецЕсли;
	
	Если УдалятьУстановленныеОтборы Тогда
		Для Каждого УстановленныйОтбор Из УстановленныеОтборы Цикл
			Отборы.Удалить(УстановленныйОтбор);
		КонецЦикла;
	КонецЕсли;
	
	Если ФильтрыСписковКлиентСервер.ИспользоватьФильтры(Форма)
	   И ФильтрыСписковКлиентСервер.ТекущийФильтр(Форма) = "ФильтрНоменклатурыЛекарственныхСредств" Тогда
		ОбновитьИспользованиеОтборов(Форма);
	КонецЕсли;
	
КонецПроцедуры

// Устанавливает настройки фильтра по указанной номенклатуре.
//
// Параметры:
//  Форма        - ФормаКлиентскогоПриложения - форма, в которой устанавливаются настройки.
//  Номенклатура - СправочникСсылка.Номенклатура - элемент справочника, по которому устанавливаются настройки фильтра.
//
Процедура УстановитьОтборыСпискаПоНоменклатуре(Форма, Номенклатура) Экспорт
	
	СброситьОтборы(Форма);
	Отбор = ПолучитьПоляОтбораПоНоменклатуре(Номенклатура);
	УстановитьОтборыСписка(Форма, Отбор);
	
КонецПроцедуры

// Обрабатывает сброс всех отборов фильтра по лекарственных средствах.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма, где сбрасываются все фильтры.
//
Процедура СброситьОтборы(Форма) Экспорт
	
	СнятьФлажки(Форма);
	ОбновитьИспользованиеОтборов(Форма);
	
КонецПроцедуры

// Обрабатывает изменение флага использования элемента фильтра.
//
// Параметры:
//  Форма     - ФормаКлиентскогоПриложения - форма, в которой обрабатывается изменение флага использования элемента отбора.
//  ИмяФлажка - Строка - имя флага использования элемента отбора.
//
Процедура ПриИзмененииФлажкаОтбора(Форма, ИмяФлажка) Экспорт
	
	ОбработатьИзменениеФлагаОтбора(Форма, ИмяФлажка);
	
КонецПроцедуры

// Обрабатывает изменение значения элемента отбора.
//
// Параметры:
//  Форма     - ФормаКлиентскогоПриложения - форма, в которой обрабатывается изменение значения элемента отбора.
//  ИмяОтбора - Строка - имя используемого отбора.
//
Процедура ПриИзмененииЗначенияОтбора(Форма, ИмяОтбора) Экспорт
	
	ОбработатьИзменениеЗначенияОтбора(Форма, ИмяОтбора);
	
КонецПроцедуры

#КонецОбласти // ПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

Функция ПолучитьПоляОтбораПоНоменклатуре(Номенклатура)
	
	ЗапрашиваемыеПоля = Новый Структура;
	ЗапрашиваемыеПоля.Вставить("ДействующиеВеществаМНН"                      , "ЭлементКАТ.ДействующиеВеществаМНН");
	ЗапрашиваемыеПоля.Вставить("ТорговоеНаименование"                        , "ЭлементКАТ.ТорговоеНаименование");
	ЗапрашиваемыеПоля.Вставить("ГруппаЛекарственныхФорм"                     , "ЭлементКАТ.ФормаВыпуска.ЛекарственнаяФорма.Группа");
	ЗапрашиваемыеПоля.Вставить("ЛекарственнаяФорма"                          , "ЭлементКАТ.ФормаВыпуска.ЛекарственнаяФорма");
	ЗапрашиваемыеПоля.Вставить("ЕдиницаИзмерения"                            , "ЭлементКАТ.ФормаВыпуска.ЕдиницаИзмерения");
	ЗапрашиваемыеПоля.Вставить("Количество"                                  , "ЭлементКАТ.ФормаВыпуска.Количество");
	ЗапрашиваемыеПоля.Вставить("НеНормализованныеДанные"                     , "ЭлементКАТ.ФормаВыпуска.НеНормализованныеДанные");
	ЗапрашиваемыеПоля.Вставить("Характеристика"                              , "ЭлементКАТ.ФормаВыпуска.Характеристика");
	
	ПоляНоменклатуры = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Номенклатура, ЗапрашиваемыеПоля);
	
	Возврат ПоляНоменклатуры;
	
КонецФункции

Процедура СнятьФлажки(Форма, Элемент = Неопределено)
	
	Если Элемент = Неопределено Тогда
		Элемент = СтраницаФильтра(Форма);
	КонецЕсли;
	
	Если ТипЗнч(Элемент) = Тип("ГруппаФормы") Тогда
		Для Каждого ПодчиненныйЭлемент Из Элемент.ПодчиненныеЭлементы Цикл
			СнятьФлажки(Форма, ПодчиненныйЭлемент);
		КонецЦикла;
	Иначе
		ПараметрыФормыВыпуска = ФильтрНоменклатурыЛекарственныхСредствКлиентСервер.ПараметрыФормыВыпуска();
		Если ТипЗнч(Элемент) = Тип("ПолеФормы")
		   И Элемент.Вид = ВидПоляФормы.ПолеФлажка
		   И Не Элемент.ТолькоПросмотр
		   И Форма[Элемент.Имя]
		   И Не ПараметрыФормыВыпуска.Свойство(СтрЗаменить(Элемент.Имя, ФильтрНоменклатурыЛекарственныхСредствКлиентСервер.Идентификатор() + "Отбор", "")) Тогда
			Форма[Элемент.Имя] = Ложь;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбновитьИспользованиеОтборов(Форма, Элемент = Неопределено)
	
	Если Элемент = Неопределено Тогда
		Элемент = СтраницаФильтра(Форма);
	КонецЕсли;
	
	Если ТипЗнч(Элемент) = Тип("ГруппаФормы") Тогда
		Для Каждого ПодчиненныйЭлемент Из Элемент.ПодчиненныеЭлементы Цикл
			ОбновитьИспользованиеОтборов(Форма, ПодчиненныйЭлемент);
		КонецЦикла;
	ИначеЕсли ТипЗнч(Элемент) = Тип("ПолеФормы") Тогда
		
		Если Элемент.Вид = ВидПоляФормы.ПолеФлажка Тогда
			ОбработатьИзменениеФлагаОтбора(Форма, Элемент.Имя);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработатьИзменениеФлагаОтбора(Форма, ИмяФлажка)
	
	ИмяЭлемента = ПолучитьИмяЭлементаПоФлажку(ИмяФлажка);
	УстановитьПрименениеОтбора(Форма, ИмяЭлемента, Форма[ИмяФлажка]);
	
КонецПроцедуры

Процедура ОбработатьИзменениеЗначенияОтбора(Форма, ИмяОтбора)
	
	Префикс = ФильтрНоменклатурыЛекарственныхСредствКлиентСервер.Идентификатор();
	ИмяФлажка = Префикс + "Отбор" + Сред(ИмяОтбора, СтрДлина(Префикс) + 1);
	Форма[ИмяФлажка] = ЗначениеЗаполнено(Форма[ИмяОтбора]);
	УстановитьПрименениеОтбора(Форма, ИмяОтбора, Форма[ИмяФлажка]);
	
КонецПроцедуры

Процедура УстановитьПрименениеОтбора(Форма, Знач ИмяЭлемента, Знач Использовать)
	
	СтандартнаяОбработка = Истина;
	УстановитьПрименениеОтбораПереопределяемый(Форма, ИмяЭлемента, Использовать, СтандартнаяОбработка);
	
	Если Не СтандартнаяОбработка Тогда
		Возврат;
	КонецЕсли;
	
	Список = ФильтрыСписковКлиентСервер.ФильтруемыйСписок(Форма);
	ИзменяемыеЭлементы = Новый Массив;
	НайтиРекурсивно(Список.Отбор.Элементы, ИзменяемыеЭлементы, ИмяЭлемента);
	
	Если Использовать И ИзменяемыеЭлементы.Количество() = 0 Тогда
		ЗаполнитьПредопределенныеОтборы(Форма, ИмяЭлемента);
		НайтиРекурсивно(Список.Отбор.Элементы, ИзменяемыеЭлементы, ИмяЭлемента);
	КонецЕсли;
	
	Для Каждого ЭлементОтбора Из ИзменяемыеЭлементы Цикл
		ЭлементОтбора.Использование = Использовать;
		Если Использовать Тогда
			ЭлементОтбора.ПравоеЗначение = Форма[ИмяЭлемента];
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура УстановитьТолькоПросмотрОтбораСписка(Форма, Отборы)
	
	Элементы = Форма.Элементы;
	Префикс = ФильтрНоменклатурыЛекарственныхСредствКлиентСервер.Идентификатор();
	
	Для Каждого Отбор Из Отборы Цикл
		
		ИмяОтбора = Префикс + Отбор;
		ИмяФлажка = Префикс + "Отбор" + Отбор;
		
		ОбщегоНазначенияБольничнаяАптекаКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, ИмяОтбора, "ТолькоПросмотр", Истина);
		ОбщегоНазначенияБольничнаяАптекаКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, ИмяФлажка, "ТолькоПросмотр", Истина);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура УстановитьПрименениеОтбораПереопределяемый(Форма, ИмяЭлемента, Использовать, СтандартнаяОбработка)
	
	Префикс = ФильтрНоменклатурыЛекарственныхСредствКлиентСервер.Идентификатор();
	
	ПараметрыФормыВыпуска = ФильтрНоменклатурыЛекарственныхСредствКлиентСервер.ПараметрыФормыВыпуска();
	ИдентификаторЭлемента = СтрЗаменить(ИмяЭлемента, Префикс, "");
	
	Если ИдентификаторЭлемента = "Количество" Или ИдентификаторЭлемента = "ЕдиницаИзмерения" Тогда
		
		Если Использовать И ЗначениеЗаполнено(Форма[Префикс + "ЕдиницаИзмерения"]) И Форма[Префикс + "Количество"] <> 0 Тогда
			ПараметрыЕдиницыИзмерения = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Форма[Префикс + "ЕдиницаИзмерения"], "ТипЕдиницы, Коэффициент, БазоваяЕдиницаИзмерения");
			Если ПараметрыЕдиницыИзмерения.ТипЕдиницы = Перечисления.ТипыЕдиницИзмерения.Вес Тогда
				БазоваяЕдиницаИзмерения = Константы.ЕдиницаИзмеренияВеса.Получить();
				КоличествоБазовых = Форма[Префикс + "Количество"] * ПараметрыЕдиницыИзмерения.Коэффициент;
			ИначеЕсли ЗначениеЗаполнено(ПараметрыЕдиницыИзмерения.БазоваяЕдиницаИзмерения) Тогда
				БазоваяЕдиницаИзмерения = ПараметрыЕдиницыИзмерения.БазоваяЕдиницаИзмерения;
				КоличествоБазовых = Форма[Префикс + "Количество"] * ПараметрыЕдиницыИзмерения.Коэффициент;
			Иначе
				БазоваяЕдиницаИзмерения = Форма[Префикс + "ЕдиницаИзмерения"];
				КоличествоБазовых = Форма[Префикс + "Количество"];
			КонецЕсли;
		Иначе
			БазоваяЕдиницаИзмерения = Справочники.ЕдиницыИзмерения.ПустаяСсылка();
			КоличествоБазовых = 0;
		КонецЕсли;
		
		Форма[Префикс + "БазоваяЕдиницаИзмерения"] = БазоваяЕдиницаИзмерения;
		Форма[Префикс + "КоличествоБазовых"] = КоличествоБазовых;
		
		Использовать = (Форма[Префикс + "ОтборФормаВыпуска"] И Форма[Префикс + "ОтборЕдиницаИзмерения"] И Форма[Префикс + "ОтборКоличество"]);
		УстановитьПрименениеОтбора(Форма, Префикс + "БазоваяЕдиницаИзмерения", Использовать);
		УстановитьПрименениеОтбора(Форма, Префикс + "КоличествоБазовых", Использовать);
		
	ИначеЕсли ИдентификаторЭлемента = "ФормаВыпуска" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		Для Каждого Реквизит Из ПараметрыФормыВыпуска Цикл
			ИмяОтбора = Префикс + Реквизит.Ключ;
			ИмяФлажка = Префикс + "Отбор" + Реквизит.Ключ;
			
			ИспользоватьОтбор = Форма[ИмяФлажка];
			УстановитьПрименениеОтбора(Форма, ИмяОтбора, ИспользоватьОтбор);
		КонецЦикла;
		
	ИначеЕсли ПараметрыФормыВыпуска.Свойство(ИдентификаторЭлемента) Тогда
		
		Использовать = Использовать И Форма[Префикс + "ОтборФормаВыпуска"];
		
	ИначеЕсли ИдентификаторЭлемента = "Наркотические" Тогда
		
		Менеджер = Перечисления.СпискиНаркотическихВеществ;
		
		ЭлементВыбора = Форма[ИмяЭлемента + "ДляВыбора"].НайтиПоЗначению(Менеджер.Список2или3);
		Если ЭлементВыбора <> Неопределено Тогда
			Форма[ИмяЭлемента + "ДляВыбора"].Удалить(ЭлементВыбора);
		КонецЕсли;
		
		Если Форма[ИмяЭлемента].НайтиПоЗначению(Менеджер.Список2или3) = Неопределено Тогда
			Если Форма[ИмяЭлемента].НайтиПоЗначению(Менеджер.Список2) <> Неопределено
			 Или Форма[ИмяЭлемента].НайтиПоЗначению(Менеджер.Список3) <> Неопределено Тогда
				Форма[ИмяЭлемента].Добавить(Менеджер.Список2или3);
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПолучитьУстановленныеОтборы(Форма, Отбор, Элемент = Неопределено)
	
	Если Элемент = Неопределено Тогда
		Элемент = СтраницаФильтра(Форма);
	КонецЕсли;
	
	Если ТипЗнч(Элемент) = Тип("ГруппаФормы") Тогда
		Для Каждого ПодчиненныйЭлемент Из Элемент.ПодчиненныеЭлементы Цикл
			ПолучитьУстановленныеОтборы(Форма, Отбор, ПодчиненныйЭлемент);
		КонецЦикла;
	ИначеЕсли ТипЗнч(Элемент) = Тип("ПолеФормы") Тогда
		
		Префикс = ФильтрНоменклатурыЛекарственныхСредствКлиентСервер.Идентификатор();
		ПараметрыФормыВыпуска = ФильтрНоменклатурыЛекарственныхСредствКлиентСервер.ПараметрыФормыВыпуска();
		Если Элемент.Вид = ВидПоляФормы.ПолеФлажка
		   И Элемент.Имя <> Префикс + "ОтборФормаВыпуска"
		   И Форма[Элемент.Имя] Тогда
			ИмяЭлемента = ПолучитьИмяЭлементаПоФлажку(Элемент.Имя);
			Если (Не ПараметрыФормыВыпуска.Свойство(СтрЗаменить(ИмяЭлемента, Префикс, ""))
			 Или Форма[Префикс + "ОтборФормаВыпуска"]) Тогда
				ИмяОтбора = Сред(ИмяЭлемента, СтрДлина(ФильтрНоменклатурыЛекарственныхСредствКлиентСервер.Идентификатор()) + 1);
				Отбор.Вставить(ИмяОтбора, Форма[ИмяЭлемента]);
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура НайтиРекурсивно(КоллекцияЭлементов, НайденныеЭлементы, ПредставлениеНачинаетсяС, ВключатьГруппы = Ложь)
	
	Для Каждого ЭлементОтбора Из КоллекцияЭлементов Цикл
		
		Если ТипЗнч(ЭлементОтбора) = Тип("ЭлементОтбораКомпоновкиДанных") Тогда
			Если Найти(ЭлементОтбора.Представление, ПредставлениеНачинаетсяС) = 1 Тогда
				НайденныеЭлементы.Добавить(ЭлементОтбора);
			КонецЕсли;
		Иначе
			Если ВключатьГруппы И Найти(ЭлементОтбора.Представление, ПредставлениеНачинаетсяС) = 1 Тогда
				НайденныеЭлементы.Добавить(ЭлементОтбора);
			КонецЕсли;
			
			НайтиРекурсивно(ЭлементОтбора.Элементы, НайденныеЭлементы, ПредставлениеНачинаетсяС, ВключатьГруппы);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьИмяЭлементаПоФлажку(ИмяФлага)
	
	Префикс = ФильтрНоменклатурыЛекарственныхСредствКлиентСервер.Идентификатор();
	Если Найти(ИмяФлага, Префикс + "Отбор") = 1 Тогда
		Возврат Префикс + Сред(ИмяФлага, СтрДлина(Префикс + "Отбор") + 1);
	КонецЕсли;
	
	Возврат ИмяФлага;
	
КонецФункции

Процедура ИнициализироватьФильтр(Форма)
	
	Описание = УправляемаяФорма.ПрочитатьОписаниеФормыИзСтроки(ОписаниеЭлементовФормы(Форма));
	УправляемаяФорма.СоздатьЭлементы(Форма, Описание);
	
	ФильтрыСписков.ДобавитьДополнительнуюИнформациюВЗапрос(Форма, ОписаниеДополнительныхПолейВыбора(), ОписаниеДополнительныхТаблиц());
	
	ЗаполнитьПредопределенныеОтборы(Форма);
	
КонецПроцедуры

Функция ОписаниеЭлементовФормы(Форма)
	
	Префикс = ФильтрНоменклатурыЛекарственныхСредствКлиентСервер.Идентификатор();
	Описание = "
	|<Форма>
	|	<Команды>
	|		<Команда
	|				Имя='%1СброситьОтборы'
	|				Действие='Подключаемый_ФильтрНоменклатурыЛекарственныхСредств_СброситьОтборы'
	|				Заголовок='" + НСтр("ru='Сбросить отборы'") + "'
	|				Подсказка='" + НСтр("ru='Сбросить отборы'") + "'
	|				Картинка='СнятьФлажки'/>
	|	</Команды>
	|	<Элементы>
	|		<ГруппаФормы Имя='%1ФильтрЛекарственныеСредства' Родитель='%2'>
	|			<Свойство Имя='Вид'>Страница</Свойство>
	|			<Свойство Имя='Заголовок'>" + НСтр("ru='Основные'") + "</Свойство>
	|			<ГруппаФормы Имя='%1КоманднаяПанельФильтра' Родитель='ФильтрыСписковГруппаВыборФильтра'>
	|				<Свойство Имя='Вид'>КоманднаяПанель</Свойство>
	|				<КнопкаФормы Имя='%1СброситьОтборы'>
	|					<Свойство Имя='Вид'>КнопкаКоманднойПанели</Свойство>
	|					<Свойство Имя='ИмяКоманды'>%1СброситьОтборы</Свойство>
	|				</КнопкаФормы>
	|			</ГруппаФормы>
	|		</ГруппаФормы>
	|	</Элементы>"
	+ ОтборПоЗначению("ГруппаПКУ", Префикс + "ФильтрЛекарственныеСредства", "СправочникСсылка.ГруппыПКУ", НСтр("ru='Группа ПКУ'"))
	+ ОтборПоЗначению("ДействующиеВеществаМНН", Префикс + "ФильтрЛекарственныеСредства", "СправочникСсылка.ДействующиеВеществаМНН", НСтр("ru='Действующие вещества (МНН)'"))
	+ ОтборПоЗначению(
		"ТорговоеНаименование",
		Префикс + "ФильтрЛекарственныеСредства",
		"СправочникСсылка.ТорговыеНаименования",
		НСтр("ru='Торговое наименование'")
		//,
		//"<СвязиПараметровВыбора>
		//|	<Связь Имя='Отбор.ДействующиеВеществаМНН' ПутьКДанным='%1ДействующиеВеществаМНН' ИзменениеЗначения='НеИзменять'/>
		//|</СвязиПараметровВыбора>"
		)
	+ ОтборПоЗначению("Производитель", Префикс + "ФильтрЛекарственныеСредства", "СправочникСсылка.Производители", НСтр("ru='Производитель'"))
	+ ОписаниеЭлементовФормыВыпуска()
	+ ОтборПоЗначению("ВКомплекте", Префикс + "ФильтрЛекарственныеСредства", "Строка", НСтр("ru='В комплекте'"))
	// Принадлежность к спискам
	+ "
	|	<Элементы>
	|		<ГруппаФормы Имя='%1ФильтрЛекарственныеСредства'>
	|			<ГруппаФормы Имя='%1ГруппаПризнакиУчетаВертикальная'>
	|				<Свойство Имя='Вид'>ОбычнаяГруппа</Свойство>
	|				<Свойство Имя='ОтображатьЗаголовок'>Ложь</Свойство>
	|				<Свойство Имя='Отображение'>Нет</Свойство>
	|				<Свойство Имя='Группировка'>Вертикальная</Свойство>
	|				<ГруппаФормы Имя='%1ГруппаПризнакиУчетаГоризонтальная1'>
	|					<Свойство Имя='Вид'>ОбычнаяГруппа</Свойство>
	|					<Свойство Имя='ОтображатьЗаголовок'>Ложь</Свойство>
	|					<Свойство Имя='Отображение'>Нет</Свойство>
	|					<Свойство Имя='РастягиватьПоГоризонтали'>Истина</Свойство>
	|					<Свойство Имя='Группировка'>Горизонтальная</Свойство>
	|				</ГруппаФормы>
	|				<ГруппаФормы Имя='%1ГруппаПризнакиУчетаГоризонтальная2'>
	|					<Свойство Имя='Вид'>ОбычнаяГруппа</Свойство>
	|					<Свойство Имя='ОтображатьЗаголовок'>Ложь</Свойство>
	|					<Свойство Имя='Отображение'>Нет</Свойство>
	|					<Свойство Имя='РастягиватьПоГоризонтали'>Истина</Свойство>
	|					<Свойство Имя='Группировка'>Горизонтальная</Свойство>
	|				</ГруппаФормы>
	|			</ГруппаФормы>
	|		</ГруппаФормы>
	|	</Элементы>"
	+ ОтборПоКатегории("ПринадлежностьК7ВЗН", Префикс + "ГруппаПризнакиУчетаГоризонтальная1", НСтр("ru='7 ВЗН'"), "ПринадлежностьК7ВЗН")
	+ ОтборПоКатегории("БезрецептурныйОтпуск", Префикс + "ГруппаПризнакиУчетаГоризонтальная1", НСтр("ru='Отпуск без рецепта'"), "БезрецептурныйОтпуск")
	+ ОтборПоКатегории("ЖНВЛП", Префикс + "ГруппаПризнакиУчетаГоризонтальная1", НСтр("ru='ЖНВЛП'"), "ЖизненноВажныеПрепараты")
	+ ОтборПоКатегории("ДЛО", Префикс + "ГруппаПризнакиУчетаГоризонтальная2", НСтр("ru='ДЛО'"), "ДЛО")
	+ ОтборПоКатегории("ВНациональномКалендареПрививок", Префикс + "ГруппаПризнакиУчетаГоризонтальная2", НСтр("ru='В календаре прививок'"), "ПринадлежностьКНКПП")
	+ ОтборПоКатегории("ВКалендареПрививокПоЭпидемическимПоказаниям", Префикс + "ГруппаПризнакиУчетаГоризонтальная2", НСтр("ru='В эпидемическом календаре'"), "ПринадлежностьККПЭП")
	
	+ ОтборПоСпискуЗначений("Наркотические", Префикс + "ФильтрЛекарственныеСредства", "ПеречислениеСсылка.СпискиНаркотическихВеществ", НСтр("ru='Наркотические вещества'"), "НаркотическиеПрепараты")
	+ ОтборПоСпискуЗначений("СильнодействующиеИЯды", Префикс + "ФильтрЛекарственныеСредства", "ПеречислениеСсылка.СпискиСильнодействующихИЯдовитыхВеществ", НСтр("ru='Сильнодействующие и яды'"), "СильнодействующиеЯдовитыеПрепараты")
	+ ОтборПоСпискуЗначений("СпискиАиБ", Префикс + "ФильтрЛекарственныеСредства", "ПеречислениеСсылка.СпискиАиБ", НСтр("ru='Списки А и Б'"), "СпискиАиБ")
	+ "
	|</Форма>
	|";
	
	Описание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Описание, Префикс, ФильтрыСписков.СтраницаФильтров());
	Возврат Описание;
	
КонецФункции

Функция ОписаниеЭлементовФормыВыпуска()
	
	ОтключитьВидимость = "<Свойство Имя='Видимость'>Ложь</Свойство>";
	
	Префикс = ФильтрНоменклатурыЛекарственныхСредствКлиентСервер.Идентификатор();
	Описание = "
	|	<Реквизиты>
	|		<Реквизит Имя='%1ОтборФормаВыпуска'>
	|			<Типы><Тип>Булево</Тип></Типы>
	|		</Реквизит>
	|		<Реквизит Имя='%1ФормаВыпуска' Заголовок='Форма выпуска'>
	|			<Типы><Тип>Строка</Тип></Типы>
	|			<Значение Тип='Строка'><![CDATA[" + НСтр("ru = '<Форма выпуска не задана>'") + "]]></Значение>
	|		</Реквизит>
	|		<Реквизит Имя='%1БазоваяЕдиницаИзмерения'>
	|			<Типы><Тип>СправочникСсылка.ЕдиницыИзмерения</Тип></Типы>
	|		</Реквизит>
	|		<Реквизит Имя='%1КоличествоБазовых'>
	|			<Типы><Тип>Число</Тип></Типы>
	|		</Реквизит>
	|	</Реквизиты>
	|	<Элементы>
	|		<ГруппаФормы Имя='%1ГруппаФормаВыпуска' Родитель='%1ФильтрЛекарственныеСредства'>
	|			<Свойство Имя='Вид'>ОбычнаяГруппа</Свойство>
	|			<Свойство Имя='Отображение'>Нет</Свойство>
	|			<Свойство Имя='ОтображатьЗаголовок'>Ложь</Свойство>
	|			<Свойство Имя='Группировка'>Горизонтальная</Свойство>
	|			<ПолеФормы Имя='%1ОтборФормаВыпуска'>
	|				<Свойство Имя='Вид'>ПолеФлажка</Свойство>
	|				<Свойство Имя='ПутьКДанным'>%1ОтборФормаВыпуска</Свойство>
	|				<Свойство Имя='ПоложениеЗаголовка'>Нет</Свойство>
	|				<События>
	|					<ПриИзменении Действие='Подключаемый_ФильтрНоменклатурыЛекарственныхСредств_ПриИзмененииФлажкаОтбора'/>
	|				</События>
	|			</ПолеФормы>
	|			<ПолеФормы Имя='%1ФормаВыпуска'>
	|				<Свойство Имя='Вид'>ПолеНадписи</Свойство>
	|				<Свойство Имя='ПутьКДанным'>%1ФормаВыпуска</Свойство>
	|				<Свойство Имя='ПоложениеЗаголовка'>Нет</Свойство>
	|				<Свойство Имя='Подсказка'>"+ НСтр("ru = 'Форма выпуска'") + "</Свойство>
	|				<Свойство Имя='ОтображениеПодсказки'>Кнопка</Свойство>
	|				<Свойство Имя='Гиперссылка'>Истина</Свойство>
	|				<События>
	|					<Нажатие Действие='Подключаемый_ФильтрНоменклатурыЛекарственныхСредств_ФормаВыпускаНажатие'/>
	|				</События>
	|			</ПолеФормы>
	|		</ГруппаФормы>
	|	</Элементы>"
	+ ОтборПоЗначению("ГруппаЛекарственныхФорм", Префикс + "ГруппаФормаВыпуска", "СправочникСсылка.ГруппыЛекарственныхФорм", НСтр("ru='Группа лекарственных форм'"), ОтключитьВидимость, ОтключитьВидимость)
	+ ОтборПоЗначению("ЛекарственнаяФорма", Префикс + "ГруппаФормаВыпуска", "СправочникСсылка.ЛекарственныеФормы", НСтр("ru='Лекарственная форма'"), ОтключитьВидимость, ОтключитьВидимость)
	+ ОтборПоЗначению("Количество", Префикс + "ГруппаФормаВыпуска", "Число(10.3)", НСтр("ru='В комплекте'"), ОтключитьВидимость, ОтключитьВидимость)
	+ ОтборПоЗначению("ЕдиницаИзмерения", Префикс + "ГруппаФормаВыпуска", "СправочникСсылка.ЕдиницыИзмерения", НСтр("ru='Единица'"), ОтключитьВидимость, ОтключитьВидимость)
	+ ОтборПоЗначению("НеНормализованныеДанные", Префикс + "ГруппаФормаВыпуска", "Строка(500)", НСтр("ru='Не нормализованные данные'"), ОтключитьВидимость, ОтключитьВидимость)
	+ ОтборПоЗначению("Характеристика", Префикс + "ГруппаФормаВыпуска", "СправочникСсылка.ХарактеристикиЛекарственныхФорм", НСтр("ru='Характеристика'"), ОтключитьВидимость, ОтключитьВидимость)
	+ "";
	
	Возврат СтрШаблон(Описание, Префикс);
	
КонецФункции

Функция ОписаниеДополнительныхПолейВыбора()
	
	Префикс = ФильтрНоменклатурыЛекарственныхСредствКлиентСервер.Идентификатор();
	
	Поля = Новый Структура;
	Поля.Вставить(
		Префикс + "КоличествоБазовых", "
		|ВЫБОР
		|	КОГДА Товары.Ссылка.ЭлементКАТ.ФормаВыпуска.ЕдиницаИзмерения.ТипЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыЕдиницИзмерения.Вес)
		|			ИЛИ Товары.Ссылка.ЭлементКАТ.ФормаВыпуска.ЕдиницаИзмерения.Коэффициент <> 0
		|		ТОГДА Товары.Ссылка.ЭлементКАТ.ФормаВыпуска.Количество * Товары.Ссылка.ЭлементКАТ.ФормаВыпуска.ЕдиницаИзмерения.Коэффициент
		|	ИНАЧЕ Товары.Ссылка.ЭлементКАТ.ФормаВыпуска.Количество
		|КОНЕЦ
		|");
	Поля.Вставить(
		Префикс + "БазоваяЕдиницаИзмерения", "
		|	ВЫБОР
		|		КОГДА Товары.Ссылка.ЭлементКАТ.ФормаВыпуска.ЕдиницаИзмерения.ТипЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыЕдиницИзмерения.Вес)
		|			ТОГДА %1ЕдиницаИзмеренияВеса.Значение
		|		КОГДА Товары.Ссылка.ЭлементКАТ.ФормаВыпуска.ЕдиницаИзмерения.БазоваяЕдиницаИзмерения = ЗНАЧЕНИЕ(Справочник.ЕдиницыИзмерения.ПустаяСсылка)
		|			ТОГДА Товары.Ссылка.ЭлементКАТ.ФормаВыпуска.ЕдиницаИзмерения
		|		ИНАЧЕ Товары.Ссылка.ЭлементКАТ.ФормаВыпуска.ЕдиницаИзмерения.БазоваяЕдиницаИзмерения
		|	КОНЕЦ
		|");
	Поля.Вставить(
		Префикс + "ПринадлежностьК7ВЗН", "
		|ЕСТЬNULL(Товары.Ссылка.ЭлементКАТ.ПринадлежностьК7ВЗН, ЛОЖЬ)
		|");
	Поля.Вставить(
		Префикс + "БезрецептурныйОтпуск", "
		|ЕСТЬNULL(Товары.Ссылка.ЭлементКАТ.БезрецептурныйОтпуск, ЛОЖЬ)
		|");
	Поля.Вставить(
		Префикс + "ЖНВЛП", "
		|ЕСТЬNULL(Товары.Ссылка.ЭлементКАТ.ЖНВЛП, ЗНАЧЕНИЕ(Перечисление.СпискиЖНВЛП.ПустаяСсылка))
		|");
	Поля.Вставить(
		Префикс + "ДЛО", "
		|ЕСТЬNULL(Товары.Ссылка.ЭлементКАТ.ДЛО, ЛОЖЬ)
		|");
	Поля.Вставить(
		Префикс + "ВНациональномКалендареПрививок", "
		|ЕСТЬNULL(Товары.Ссылка.ЭлементКАТ.ВНациональномКалендареПрививок, ЛОЖЬ)
		|");
	Поля.Вставить(
		Префикс + "ВКалендареПрививокПоЭпидемическимПоказаниям", "
		|ЕСТЬNULL(Товары.Ссылка.ЭлементКАТ.ВКалендареПрививокПоЭпидемическимПоказаниям, ЛОЖЬ)
		|");
	Поля.Вставить(
		Префикс + "Наркотические", "
		|ЕСТЬNULL(Товары.Ссылка.ЭлементКАТ.Наркотические, ЗНАЧЕНИЕ(Перечисление.СпискиНаркотическихВеществ.ПустаяСсылка))
		|");
	Поля.Вставить(
		Префикс + "СильнодействующиеИЯды", "
		|ЕСТЬNULL(Товары.Ссылка.ЭлементКАТ.СильнодействующиеИЯды, ЗНАЧЕНИЕ(Перечисление.СпискиСильнодействующихИЯдовитыхВеществ.ПустаяСсылка))
		|");
	Поля.Вставить(
		Префикс + "СпискиАиБ", "
		|ЕСТЬNULL(Товары.Ссылка.ЭлементКАТ.СпискиАиБ, ЗНАЧЕНИЕ(Перечисление.СпискиАиБ.ПустаяСсылка))
		|");
	
	Для Каждого Поле Из Поля Цикл
		Поля[Поле.Ключ] = СтрЗаменить(Поле.Значение, "%1", Префикс);
	КонецЦикла;
	
	Возврат Поля;
	
КонецФункции

Функция ОписаниеДополнительныхТаблиц()
	
	Префикс = ФильтрНоменклатурыЛекарственныхСредствКлиентСервер.Идентификатор();
	
	Таблицы = Новый Массив;
	
	Таблица = Новый Структура;
	Таблица.Вставить("Источник", Новый Структура);
	Таблица.Источник.Вставить("Таблица", "Константа.ЕдиницаИзмеренияВеса");
	Таблица.Источник.Вставить("Псевдоним", Префикс + "ЕдиницаИзмеренияВеса");
	Таблица.Вставить("Соединение", Новый Структура);
	Таблица.Соединение.Вставить("ГлавнаяТаблица", "Товары");
	Таблица.Соединение.Вставить("Условие", "ИСТИНА");
	Таблицы.Добавить(Таблица);
	
	Возврат Таблицы;
	
КонецФункции

Процедура ЗаполнитьПредопределенныеОтборы(Форма, Знач ИмяЭлемента = "")
	
	Список = ФильтрыСписковКлиентСервер.ФильтруемыйСписок(Форма);
	Префикс = ФильтрНоменклатурыЛекарственныхСредствКлиентСервер.Идентификатор();
	
	РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	ОбластьОтбора = ОбщегоНазначенияБольничнаяАптекаКлиентСервер.ОбластьОтбораДинамическогоСписка(Список, РежимОтображения).Элементы;
	
	ИмяЭлемента = СтрЗаменить(ИмяЭлемента, Префикс, "");
	
	Если ИмяЭлемента = "" Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "Ссылка.ЭтоЛекарственноеСредство", Истина,, Префикс + "ОтборФильтра", Ложь, РежимОтображения);
	КонецЕсли;
	
	Если ИмяЭлемента = "ГруппаПКУ" Или ИмяЭлемента = "" Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "Ссылка.ГруппаПКУ",,, Префикс + "ГруппаПКУ", Ложь, РежимОтображения);
	КонецЕсли;
	
	ГруппаОтбора = ОбщегоНазначенияКлиентСервер.НайтиЭлементОтбораПоПредставлению(ОбластьОтбора, Префикс + "ТорговоеНаименованиеДействующиеВещества");
	Если ГруппаОтбора = Неопределено Тогда
		ГруппаОтбора = ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(ОбластьОтбора, Префикс + "ТорговоеНаименованиеДействующиеВещества", ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли);
	КонецЕсли;
	
	Если ИмяЭлемента = "ТорговоеНаименование" Или ИмяЭлемента = "" Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ГруппаОтбора, "Ссылка.ЭлементКАТ.ТорговоеНаименование",,, Префикс + "ТорговоеНаименование", Ложь);
	КонецЕсли;
	
	ГруппаДействующиеВещества = ОбщегоНазначенияКлиентСервер.НайтиЭлементОтбораПоПредставлению(ГруппаОтбора.Элементы, Префикс + "ДействующиеВещества");
	Если ГруппаДействующиеВещества = Неопределено Тогда
		ГруппаДействующиеВещества = ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(ГруппаОтбора, Префикс + "ДействующиеВещества", ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли);
	КонецЕсли;
	
	Если ИмяЭлемента = "ДействующиеВеществаМНН" Или ИмяЭлемента = "" Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ГруппаДействующиеВещества, "Ссылка.ЭлементКАТ.ТорговоеНаименование.ДействующиеВеществаМНН",,, Префикс + "ДействующиеВеществаМНН", Ложь);
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ГруппаДействующиеВещества, "Ссылка.ЭлементКАТ.ДействующиеВеществаМНН",,, Префикс + "ДействующиеВеществаМНН", Ложь);
	КонецЕсли;
	
	Если ИмяЭлемента = "Производитель" Или ИмяЭлемента = "" Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "Ссылка.Производитель",,, Префикс + "Производитель", Ложь, РежимОтображения);
	КонецЕсли;
	
	ГруппаОтбора = ОбщегоНазначенияКлиентСервер.НайтиЭлементОтбораПоПредставлению(ГруппаОтбора.Элементы, Префикс + "ЛекарственнаяФорма");
	Если ГруппаОтбора = Неопределено Тогда
		ГруппаОтбора = ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(ОбластьОтбора, Префикс + "ЛекарственнаяФорма", ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли);
	КонецЕсли;
	Если ИмяЭлемента = "ЛекарственнаяФорма" Или ИмяЭлемента = "" Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ГруппаОтбора, "Ссылка.ЭлементКАТ.ФормаВыпуска.ЛекарственнаяФорма",,, Префикс + "ЛекарственнаяФорма", Ложь);
	КонецЕсли;
	Если ИмяЭлемента = "ГруппаЛекарственныхФорм" Или ИмяЭлемента = "" Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ГруппаОтбора, "Ссылка.ЭлементКАТ.ФормаВыпуска.ЛекарственнаяФорма.Группа",,, Префикс + "ГруппаЛекарственныхФорм", Ложь);
	КонецЕсли;
	
	ГруппаОтбора = ОбщегоНазначенияКлиентСервер.НайтиЭлементОтбораПоПредставлению(ОбластьОтбора, Префикс + "КоличествоЕдиницаОбщая");
	Если ГруппаОтбора = Неопределено Тогда
		ГруппаОтбора = ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(ОбластьОтбора, Префикс + "КоличествоЕдиницаОбщая", ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли);
	КонецЕсли;
	ГруппаКоличествоЕдиница = ОбщегоНазначенияКлиентСервер.НайтиЭлементОтбораПоПредставлению(ГруппаОтбора.Элементы, Префикс + "КоличествоЕдиница");
	Если ГруппаКоличествоЕдиница = Неопределено Тогда
		ГруппаКоличествоЕдиница = ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(ГруппаОтбора, Префикс + "КоличествоЕдиница", ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ);
	КонецЕсли;
	Если ИмяЭлемента = "Количество" Или ИмяЭлемента = "" Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ГруппаКоличествоЕдиница, "Ссылка.ЭлементКАТ.ФормаВыпуска.Количество",,, Префикс + "Количество", Ложь);
	КонецЕсли;
	Если ИмяЭлемента = "ЕдиницаИзмерения" Или ИмяЭлемента = "" Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ГруппаКоличествоЕдиница, "Ссылка.ЭлементКАТ.ФормаВыпуска.ЕдиницаИзмерения",,, Префикс + "ЕдиницаИзмерения", Ложь);
	КонецЕсли;
	
	ГруппаКоличествоЕдиницаБазовая = ОбщегоНазначенияКлиентСервер.НайтиЭлементОтбораПоПредставлению(ГруппаОтбора.Элементы, Префикс + "КоличествоЕдиницаБазовая");
	Если ГруппаКоличествоЕдиницаБазовая = Неопределено Тогда
		ГруппаКоличествоЕдиницаБазовая = ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(ГруппаОтбора, Префикс + "КоличествоЕдиницаБазовая", ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ);
	КонецЕсли;
	Если ИмяЭлемента = "КоличествоБазовых" Или ИмяЭлемента = "" Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ГруппаКоличествоЕдиницаБазовая, Префикс + "КоличествоБазовых",,, Префикс + "КоличествоБазовых", Ложь);
	КонецЕсли;
	Если ИмяЭлемента = "БазоваяЕдиницаИзмерения" Или ИмяЭлемента = "" Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ГруппаКоличествоЕдиницаБазовая, Префикс + "БазоваяЕдиницаИзмерения",,, Префикс + "БазоваяЕдиницаИзмерения", Ложь);
	КонецЕсли;
	
	Если ИмяЭлемента = "НеНормализованныеДанные" Или ИмяЭлемента = "" Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "Ссылка.ЭлементКАТ.ФормаВыпуска.НеНормализованныеДанные",,, Префикс + "НеНормализованныеДанные", Ложь, РежимОтображения);
	КонецЕсли;
	
	Если ИмяЭлемента = "Характеристика" Или ИмяЭлемента = "" Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "Ссылка.ЭлементКАТ.ФормаВыпуска.Характеристика",,, Префикс + "Характеристика", Ложь, РежимОтображения);
	КонецЕсли;
	Если ИмяЭлемента = "ВКомплекте" Или ИмяЭлемента = "" Тогда
		ГруппаВКомплекте = ОбщегоНазначенияКлиентСервер.НайтиЭлементОтбораПоПредставлению(ГруппаОтбора.Элементы, Префикс + "ВКомплектеСПрепаратом");
		Если ГруппаВКомплекте = Неопределено Тогда
			ГруппаВКомплекте = ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(ОбластьОтбора, Префикс + "ВКомплектеСПрепаратом", ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли);
		КонецЕсли;
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ГруппаВКомплекте, "Ссылка.ЭлементКАТ.ВКомплекте",, ВидСравненияКомпоновкиДанных.Содержит, Префикс + "ВКомплекте", Ложь);
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ГруппаВКомплекте, "Ссылка.ЭлементКАТ.ВКомплектеПолное",, ВидСравненияКомпоновкиДанных.Содержит, Префикс + "ВКомплекте", Ложь);
	КонецЕсли;
	
	Если ИмяЭлемента = "ПринадлежностьК7ВЗН" Или ИмяЭлемента = "" Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, Префикс + "ПринадлежностьК7ВЗН",,, Префикс + "ПринадлежностьК7ВЗН", Ложь, РежимОтображения);
	КонецЕсли;
	Если ИмяЭлемента = "БезрецептурныйОтпуск" Или ИмяЭлемента = "" Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, Префикс + "БезрецептурныйОтпуск",,, Префикс + "БезрецептурныйОтпуск", Ложь, РежимОтображения);
	КонецЕсли;
	Если ИмяЭлемента = "ЖНВЛП" Или ИмяЭлемента = "" Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, Префикс + "ЖНВЛП",, ВидСравненияКомпоновкиДанных.Заполнено, Префикс + "ЖНВЛП", Ложь, РежимОтображения);
	КонецЕсли;
	Если ИмяЭлемента = "ДЛО" Или ИмяЭлемента = "" Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, Префикс + "ДЛО",,, Префикс + "ДЛО", Ложь, РежимОтображения);
	КонецЕсли;
	Если ИмяЭлемента = "ВНациональномКалендареПрививок" Или ИмяЭлемента = "" Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, Префикс + "ВНациональномКалендареПрививок",,, Префикс + "ВНациональномКалендареПрививок", Ложь, РежимОтображения);
	КонецЕсли;
	Если ИмяЭлемента = "ВКалендареПрививокПоЭпидемическимПоказаниям" Или ИмяЭлемента = "" Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, Префикс + "ВКалендареПрививокПоЭпидемическимПоказаниям",,, Префикс + "ВКалендареПрививокПоЭпидемическимПоказаниям", Ложь, РежимОтображения);
	КонецЕсли;
	Если ИмяЭлемента = "Наркотические" Или ИмяЭлемента = "" Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, Префикс + "Наркотические",, ВидСравненияКомпоновкиДанных.ВСписке, Префикс + "Наркотические", Ложь, РежимОтображения);
	КонецЕсли;
	Если ИмяЭлемента = "СильнодействующиеИЯды" Или ИмяЭлемента = "" Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, Префикс + "СильнодействующиеИЯды",, ВидСравненияКомпоновкиДанных.ВСписке, Префикс + "СильнодействующиеИЯды", Ложь, РежимОтображения);
	КонецЕсли;
	Если ИмяЭлемента = "СпискиАиБ" Или ИмяЭлемента = "" Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, Префикс + "СпискиАиБ",, ВидСравненияКомпоновкиДанных.ВСписке, Префикс + "СпискиАиБ", Ложь, РежимОтображения);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Шаблоны элементов формы
#Область ШаблоныЭлементовФормы

Функция ОтборПоЗначению(Имя, Родитель, Тип, Заголовок = "", ДопСвойстваЗначения = "", ДопСвойстваФлажка = "")
	
	Шаблон = "
	|	<Реквизиты>
	|		<Реквизит Имя='%1Отбор%2'>
	|			<Типы><Тип>Булево</Тип></Типы>
	|		</Реквизит>
	|		<Реквизит Имя='%1%2' Заголовок='%3'>
	|			<Типы><Тип>%4</Тип></Типы>
	|		</Реквизит>
	|	</Реквизиты>
	|	<Элементы>
	|		<ГруппаФормы Имя='%1Группа%2' Родитель='%5'>
	|			<Свойство Имя='Вид'>ОбычнаяГруппа</Свойство>
	|			<Свойство Имя='Отображение'>Нет</Свойство>
	|			<Свойство Имя='ОтображатьЗаголовок'>Ложь</Свойство>
	|			<Свойство Имя='Группировка'>Горизонтальная</Свойство>
	|			<ПолеФормы Имя='%1Отбор%2'>
	|				<Свойство Имя='Вид'>ПолеФлажка</Свойство>
	|				<Свойство Имя='ПутьКДанным'>%1Отбор%2</Свойство>
	|				<Свойство Имя='ПоложениеЗаголовка'>Нет</Свойство>
	|				<События>
	|					<ПриИзменении Действие='Подключаемый_ФильтрНоменклатурыЛекарственныхСредств_ПриИзмененииФлажкаОтбора'/>
	|				</События>
	|				%7
	|			</ПолеФормы>
	|			<ПолеФормы Имя='%1%2'>
	|				<Свойство Имя='Вид'>ПолеВвода</Свойство>
	|				<Свойство Имя='ПутьКДанным'>%1%2</Свойство>
	|				<Свойство Имя='ПоложениеЗаголовка'>Нет</Свойство>
	|				<Свойство Имя='КнопкаВыпадающегоСписка'>Ложь</Свойство>
	|				<Свойство Имя='КнопкаВыбора'>Истина</Свойство>
	|				<Свойство Имя='КнопкаОткрытия'>Ложь</Свойство>
	|				<Свойство Имя='КнопкаСоздания'>Ложь</Свойство>
	|				<Свойство Имя='ОтображениеКнопкиВыбора'>ОтображатьВПолеВвода</Свойство>
	|				<Свойство Имя='ПодсказкаВвода'>%3</Свойство>
	|				<Свойство Имя='Подсказка'>%3</Свойство>
	|				<Свойство Имя='ОтображениеПодсказки'>Кнопка</Свойство>
	|				<События>
	|					<ПриИзменении Действие='Подключаемый_ФильтрНоменклатурыЛекарственныхСредств_ПриИзмененииЗначенияОтбора'/>
	|				</События>
	|				%6
	|			</ПолеФормы>
	|		</ГруппаФормы>
	|	</Элементы>
	|";
	
	ПрефиксЭлементов = ФильтрНоменклатурыЛекарственныхСредствКлиентСервер.Идентификатор();
	Возврат СтрШаблон(Шаблон, ПрефиксЭлементов, Имя, Заголовок, Тип, Родитель, ДопСвойстваЗначения, ДопСвойстваФлажка);
	
КонецФункции

Функция ОтборПоКатегории(Имя, Родитель, Заголовок, Картинка)
	
	Шаблон = "
	|	<Реквизиты>
	|		<Реквизит Имя='%1%2' Заголовок='%3'>
	|			<Типы><Тип>Булево</Тип></Типы>
	|		</Реквизит>
	|	</Реквизиты>
	|	<Элементы>
	|		<ГруппаФормы Имя='%1Группа%2' Родитель='%5'>
	|			<Свойство Имя='Вид'>ОбычнаяГруппа</Свойство>
	|			<Свойство Имя='Заголовок'>%3</Свойство>
	|			<Свойство Имя='Отображение'>Нет</Свойство>
	|			<Свойство Имя='ОтображатьЗаголовок'>Ложь</Свойство>
	|			<Свойство Имя='РастягиватьПоГоризонтали'>Истина</Свойство>
	|			<Свойство Имя='Группировка'>Горизонтальная</Свойство>
	|			<ДекорацияФормы Имя='%1Картинка%2'>
	|				<Свойство Имя='Вид'>Картинка</Свойство>
	|				<Свойство Имя='Ширина'>2</Свойство>
	|				<Свойство Имя='Высота'>1</Свойство>
	|				<Свойство Имя='РазмерКартинки'>АвтоРазмер</Свойство>
	|				<Свойство Имя='Картинка'>%4</Свойство>
	|			</ДекорацияФормы>
	|			<ПолеФормы Имя='%1%2'>
	|				<Свойство Имя='Вид'>ПолеФлажка</Свойство>
	|				<Свойство Имя='ПутьКДанным'>%1%2</Свойство>
	|				<Свойство Имя='ПоложениеЗаголовка'>Нет</Свойство>
	|				<Свойство Имя='Подсказка'>%3</Свойство>
	|				<Свойство Имя='ОтображениеПодсказки'>Кнопка</Свойство>
	|				<События>
	|					<ПриИзменении Действие='Подключаемый_ФильтрНоменклатурыЛекарственныхСредств_ПриИзмененииФлажкаОтбора'/>
	|				</События>
	|			</ПолеФормы>
	|		</ГруппаФормы>
	|	</Элементы>
	|";
	
	ПрефиксЭлементов = ФильтрНоменклатурыЛекарственныхСредствКлиентСервер.Идентификатор();
	Возврат СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Шаблон, ПрефиксЭлементов, Имя, Заголовок, Картинка, Родитель);
	
КонецФункции

Функция ОтборПоСпискуЗначений(Имя, Родитель, Тип, Заголовок, Картинка)
	
	Шаблон = "
	|	<Реквизиты>
	|		<Реквизит Имя='%1Отбор%2'>
	|			<Типы><Тип>Булево</Тип></Типы>
	|		</Реквизит>
	|		<Реквизит Имя='%1%2' Заголовок='%3'>
	|			<Типы><Тип>СписокЗначений</Тип></Типы>
	|			<Свойства>
	|				<Свойство Имя='ТипЗначения'><Типы><Тип>%4</Тип></Типы></Свойство>
	|			</Свойства>
	|			<Значение Тип='СписокЗначений'>
	|				<Элемент Представление='" + НСтр("ru='Не в списках'") + "'>
	|					<Значение Тип='%4'>ПустаяСсылка</Значение>
	|				</Элемент>
	|			</Значение>
	|		</Реквизит>
	|		<Реквизит Имя='%1%2ДляВыбора'>
	|			<Типы><Тип>СписокЗначений</Тип></Типы>
	|			<Свойства>
	|				<Свойство Имя='ТипЗначения'><Типы><Тип>%4</Тип></Типы></Свойство>
	|			</Свойства>
	|			<Значение Тип='СписокЗначений'>
	|				%5
	|				<Элемент Представление='" + НСтр("ru='Не в списках'") + "' Пометка='Истина'>
	|					<Значение Тип='%4'>ПустаяСсылка</Значение>
	|				</Элемент>
	|			</Значение>
	|		</Реквизит>
	|	</Реквизиты>
	|	<Элементы>
	|		<ГруппаФормы Имя='%1Группа%2' Родитель='%7'>
	|			<Свойство Имя='Вид'>ОбычнаяГруппа</Свойство>
	|			<Свойство Имя='ОтображатьЗаголовок'>Ложь</Свойство>
	|			<Свойство Имя='Отображение'>Нет</Свойство>
	|			<Свойство Имя='Группировка'>Горизонтальная</Свойство>
	|			<ПолеФормы Имя='%1Отбор%2'>
	|				<Свойство Имя='Вид'>ПолеФлажка</Свойство>
	|				<Свойство Имя='ПутьКДанным'>%1Отбор%2</Свойство>
	|				<Свойство Имя='ПоложениеЗаголовка'>Нет</Свойство>
	|				<События>
	|					<ПриИзменении Действие='Подключаемый_ФильтрНоменклатурыЛекарственныхСредств_ПриИзмененииФлажкаОтбора'/>
	|				</События>
	|			</ПолеФормы>
	|			<ДекорацияФормы Имя='%1Картинка%2'>
	|				<Свойство Имя='Вид'>Картинка</Свойство>
	|				<Свойство Имя='Ширина'>2</Свойство>
	|				<Свойство Имя='Высота'>1</Свойство>
	|				<Свойство Имя='РазмерКартинки'>АвтоРазмер</Свойство>
	|				<Свойство Имя='Картинка'>%6</Свойство>
	|			</ДекорацияФормы>
	|			<ПолеФормы Имя='%1%2'>
	|				<Свойство Имя='Вид'>ПолеНадписи</Свойство>
	|				<Свойство Имя='ПутьКДанным'>%1%2</Свойство>
	|				<Свойство Имя='ПоложениеЗаголовка'>Нет</Свойство>
	|				<Свойство Имя='Подсказка'>%3</Свойство>
	|				<Свойство Имя='ОтображениеПодсказки'>Кнопка</Свойство>
	|				<Свойство Имя='Гиперссылка'>Истина</Свойство>
	|				<События>
	|					<Нажатие Действие='Подключаемый_ФильтрНоменклатурыЛекарственныхСредств_СписокОтбораНажатие'/>
	|				</События>
	|			</ПолеФормы>
	|		</ГруппаФормы>
	|	</Элементы>
	|";
	
	ШаблонЭлементаСписка =
	"				<Элемент>
	|					<Значение Тип='%1'>%2</Значение>
	|				</Элемент>
	|";
	
	ЗначенияДляВыбора = "";
	Менеджер = Метаданные.НайтиПоТипу(Тип(Тип)).ЗначенияПеречисления;
	Для Каждого ПредопределенныйЭлемент Из Менеджер Цикл
		ЗначенияДляВыбора = ЗначенияДляВыбора + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонЭлементаСписка, Тип, ПредопределенныйЭлемент.Имя);
	КонецЦикла;
	
	ПрефиксЭлементов = ФильтрНоменклатурыЛекарственныхСредствКлиентСервер.Идентификатор();
	Возврат СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Шаблон, ПрефиксЭлементов, Имя, Заголовок, Тип, ЗначенияДляВыбора, Картинка, Родитель);
	
КонецФункции

#КонецОбласти // ШаблоныЭлементовФормы

#КонецОбласти // СлужебныеПроцедурыИФункции
