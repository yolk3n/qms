////////////////////////////////////////////////////////////////////////////////
// Подсистема "Работа с номенклатурой".
// ОбщийМодуль.РаботаСНоменклатуройКлиент.
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Процедура, вызываемая перед закрытием формы номенклатуры, для установки значений технических реквизитов.
//
// Параметры:
//  Форма				 - ФормаКлиентскогоПриложения - форма номенклатуры.
//  Отказ				 - Булево - признак отказа.
//  ЗавершениеРаботы	 - Булево - признак завершения работы.
//  ТекстПредупреждения	 - Строка - текст предупреждения.
//  СтандартнаяОбработка - Булево - признак стандартной обработки закрытия.
//
Процедура ПередЗакрытиемФормыНоменклатуры(Форма, 
			Отказ, 
			ЗавершениеРаботы, 
			ТекстПредупреждения, 
			СтандартнаяОбработка) Экспорт
			
	Если Не Форма.РаботаСНоменклатурой_СервисДоступен Тогда
		Возврат;
	КонецЕсли;		
			
	Если Не Форма.РаботаСНоменклатурой_ЭтоЗаписьОбъекта Тогда
		Возврат;
	КонецЕсли;
	
	Если Не (РаботаСНоменклатуройСлужебныйКлиентСервер.БудутЗагружатьсяХарактеристики(Форма)
		ИЛИ БудутЗагружатьсяИзображения(Форма)) Тогда
		
		Возврат;
	КонецЕсли;	
	
	Отказ = Истина;
	
	СтандартнаяОбработка = Ложь;
	
	Форма.РаботаСНоменклатурой_ЗакрытьФормуПослеСозданияОбъектов = Истина;
	
КонецПроцедуры

// Процедура вызывается после записи номенклатуры. Запускает длительную операцию для загрузки характеристик номенклатуры.
//
// Параметры:
//  Форма	 - ФормаКлиентскогоПриложения - форма номенклатуры.
//
Процедура ПослеЗаписиФормаНоменклатурыПродолжение(Форма) Экспорт
	
	ЗагрузитьДополнительныеДанныеДляНоменклатуры(Форма);
		
КонецПроцедуры

// Открытие формы подбора по штрихкодам.
//
// Параметры:
//  ПараметрыФормы		 - Структура -          параметры формы. см. ПараметрыФормыПодбораНоменклатурыПоШтрихкодам.
//  Владелец			 - ФормаКлиентскогоПриложения -   владелец формы.
//  ОповещениеОЗакрытии	 - ОписаниеОповещения - описание оповещения о закрытии.
//
Процедура ОткрытьФормуПодбораНоменклатурыПоШтрихкодам(ПараметрыФормы, 
			Владелец = Неопределено, ОповещениеОЗакрытии = Неопределено) Экспорт
	
	ОценкаПроизводительностиКлиент.ЗамерВремени(
		"ОбщаяФорма.ПоискНоменклатурыПоШтрихкоду");
		
	ОткрытьФорму("ОбщаяФорма.ПоискНоменклатурыПоШтрихкоду", 
		ПараметрыФормы, Владелец, Новый УникальныйИдентификатор, , , ОповещениеОЗакрытии);
		
КонецПроцедуры

// Функция - Параметры формы подбора номенклатуры по штрихкодам
// 
// Возвращаемое значение:
//  Структура - 
//   Ключи:
//    * НеизвестныеШтрихкоды                - Массив - массив структур с ключами: Штрихкод (Строка), Количество (Число).
//    * ДействияСНеизвестнымиШтрихкодами    - Строка - описание действие, которое необходимо выполнить с неизвестными штрихкодами.
//                                                     Возможные значения: "ЗарегистрироватьПеренестиВДокумент", "ТолькоЗарегистрировать".
//
Функция ПараметрыФормыПодбораНоменклатурыПоШтрихкодам() Экспорт
	
	Результат = Новый Структура;
	
	Результат.Вставить("НеизвестныеШтрихкоды",             Новый Массив);
	Результат.Вставить("ДействияСНеизвестнымиШтрихкодами", "ЗарегистрироватьПеренестиВДокумент");
	
	Возврат Результат;
	
КонецФункции

// После записи формы номенклатуры.
//
// Параметры:
//  Форма	 - ФормаКлиентскогоПриложения - форма номенклатуры.
//
Процедура ПослеЗаписиФормаНоменклатуры(Форма) Экспорт
	
	Если Не Форма.РаботаСНоменклатурой_СервисДоступен Тогда
		Возврат;
	КонецЕсли;
	
	Оповестить(ОписаниеОповещенийПодсистемы().СопоставлениеНоменклатуры);
		
	Если ЗначениеЗаполнено(Форма.РаботаСНоменклатурой_АдресДанныхЗаполнения) Тогда
		ЗаполнитьПараметрыЗакрытия(Форма);
	КонецЕсли;
	
	Если Не (РаботаСНоменклатуройСлужебныйКлиентСервер.БудутЗагружатьсяХарактеристики(Форма)
		ИЛИ БудутЗагружатьсяИзображения(Форма)) Тогда
		
		Возврат;
	КонецЕсли;
	
	Форма.РаботаСНоменклатурой_ЭтоЗаписьОбъекта = Истина;
		
	Форма.ПодключитьОбработчикОжидания("Подключаемый_ПослеЗаписиРаботаСНоменклатурой", 0.1, Истина);
		
КонецПроцедуры

// Описание оповещений подсистемы при различных действиях.
// 
// Возвращаемое значение:
//  Структура - структура с именами оповещений.
//
Функция ОписаниеОповещенийПодсистемы() Экспорт
	
	Результат = Новый Структура;

	Результат.Вставить("ЗагрузкаНоменклатуры",      "РаботаСНоменклатурой_ЗагрузкаНоменклатуры");
	Результат.Вставить("ЗагрузкаКатегорий",         "РаботаСНоменклатурой_ЗагрузкаКатегорий");
	Результат.Вставить("СопоставлениеНоменклатуры", "РаботаСНоменклатурой_СопоставлениеНоменклатуры");
	Результат.Вставить("ЗагрузкаХарактеристики",    "");
	
	Возврат Результат;
	
КонецФункции

// Поиск номенклатуры в сервисе 1С:Номенклатура по штрихкоду.
//  В случае успеха открывается карточка номенклатуры, из которой можно загрузить номенклатуру
//  в информационную базу.
//
// Параметры:
//  ШтрихКод			 - Строка	 - строка штрихкода.
//  Форма				 - ФормаКлиентскогоПриложения - форма владелец.
//  ОповещениеОЗакрытии	 - ОписаниеОповещения - оповещение о закрытии окна. 
//                         При закрытии формы карточки номенклатуры возвращается структура с ключом: 
//                         СозданнаяНоменклатура - массив ссылок на созданную номенклатуру.
//
Процедура НайтиНоменклатуруПоШтрихкодуВСервисе(ШтрихКод, 
			Форма = Неопределено, ОповещениеОЗакрытии = Неопределено) Экспорт
	
	ИдентификаторыНоменклатуры 
		= РаботаСНоменклатуройСлужебныйВызовСервера.ПолучитьДанныеПоНоменклатуреПоШтрихкоду(ШтрихКод);
	
	Если Не ЗначениеЗаполнено(ИдентификаторыНоменклатуры) Тогда
		ПоказатьОповещениеПользователя(
			НСтр("ru = 'Номенклатура не найдена'"),,
			СтрШаблон(НСтр("ru = 'По штрихкоду %1 номенклатура не найдена.'"), ШтрихКод),,
			СтатусОповещенияПользователя.Информация);
		ВыполнитьОбработкуОповещения(ОповещениеОЗакрытии);
		Возврат;
	КонецЕсли;
	
	Если ИдентификаторыНоменклатуры.Количество() = 1
		И ТипЗнч(ОповещениеОЗакрытии) = Тип("ОписаниеОповещения") 
		И ТипЗнч(ОповещениеОЗакрытии.ДополнительныеПараметры) = Тип("Структура")
		И ОповещениеОЗакрытии.ДополнительныеПараметры.Свойство("ВернутьОдинРезультат") 
		И ОповещениеОЗакрытии.ДополнительныеПараметры.ВернутьОдинРезультат Тогда
		
		ВыполнитьОбработкуОповещения(ОповещениеОЗакрытии, ИдентификаторыНоменклатуры[0]);
		Возврат;
	КонецЕсли;
	
	ОткрытьФормуКарточкиНоменклатуры(ИдентификаторыНоменклатуры, Форма, ОповещениеОЗакрытии, ШтрихКод);
		
КонецПроцедуры

// Очистка данных объекта сервиса 1С:Номенклатура на форме.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма владелец.
//
Процедура НажатиеОчиститьКатегорию(Форма) Экспорт
	
	Форма.РаботаСНоменклатурой_ОбъектСервисаИзменен = Истина;
	
	Форма.ТекущийЭлемент = Форма.Элементы.ПредставлениеКатегорииСервиса;
	
	РаботаСНоменклатуройСлужебныйКлиентСервер.СброситьДанныеОбъектаСервиса(Форма);
		
	Форма.Модифицированность = Истина;	
	
КонецПроцедуры

// Очистка данных объекта сервиса 1С:Номенклатура на форме.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма владелец.
//
Процедура НажатиеОчиститьНоменклатуру(Форма) Экспорт
	
	Форма.РаботаСНоменклатурой_ОбъектСервисаИзменен = Истина;
	
	Форма.ТекущийЭлемент = Форма.Элементы.ПредставлениеНоменклатурыСервиса;
	
	РаботаСНоменклатуройСлужебныйКлиентСервер.СброситьДанныеОбъектаСервиса(Форма);
		
	Форма.Модифицированность = Истина;
		
КонецПроцедуры

// Открытие окна выбора объекта сервиса.
//
// Параметры:
//  Форма				 - ФормаКлиентскогоПриложения - форма владелец.
//  Элемент				 - ПолеФормы		 - элемент с представлением объекта сервиса.
//  СтандартнаяОбработка - Булево			 - флаг стандартной обработки.
//  ЗаполнятьПриВыборе	 - Булево			 - Истина, если при выборе объекта сервиса будет заполняться объект базы.
//  ОповещениеОЗакрытии	 - ОписаниеОповещения - оповещение о закрытии окна. 
//
Процедура ВыбратьОбъектСервиса(Форма, 
			Элемент, 
			СтандартнаяОбработка, 
			ЗаполнятьПриВыборе = Ложь, 
			ОповещениеОЗакрытии = Неопределено) Экспорт 
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыОбработчика = Новый Структура;
	ПараметрыОбработчика.Вставить("Форма",       Форма);
	ПараметрыОбработчика.Вставить("ИмяЭлемента", Элемент.Имя);
	
	Если Форма.РаботаСНоменклатурой_ТипОбъекта = "ВидНоменклатуры" Тогда
		ОткрытьФормуВыбораКатегорий(Форма, ПараметрыОбработчика, ЗаполнятьПриВыборе, ОповещениеОЗакрытии);
						
	ИначеЕсли Форма.РаботаСНоменклатурой_ТипОбъекта = "Номенклатура" Тогда
		ОткрытьФормуВыбораНоменклатуры(Форма, ПараметрыОбработчика, ОповещениеОЗакрытии)
		
	КонецЕсли;
	
КонецПроцедуры

// Обработка нажатия кнопки выбора режима обновления объекта базы.
//
// Параметры:
//  Форма							 - ФормаКлиентскогоПриложения - форма владелец.
//  ДанныеИнтерактивногоЗаполнения	 - Строка			 - см. РаботаСНоменклатурой.ПодготовитьДанныеДляИнтерактивногоЗаполнения.
//  ОповещениеОЗакрытии				 - ОписаниеОповещения	 - оповещение о закрытии окна.
//
Процедура НажатиеРежимОбновления(Форма, ДанныеИнтерактивногоЗаполнения, ОповещениеОЗакрытии) Экспорт 
	
	СсылкаНаОбъект = Форма.РаботаСНоменклатурой_СсылкаНаОбъект;
	
	ПараметрыОбработки = Новый Структура();
	
	ПараметрыОбработки.Вставить("Форма",                          Форма);
	ПараметрыОбработки.Вставить("ДанныеИнтерактивногоЗаполнения", ДанныеИнтерактивногоЗаполнения);
	ПараметрыОбработки.Вставить("ОповещениеОЗакрытии",            ОповещениеОЗакрытии);
		
	ОповещениеНажатиеРежимаОбновления = 
		Новый ОписаниеОповещения("ОбработкаОповещенияВыбораРежимаОбновления", ЭтотОбъект, ПараметрыОбработки);
	
	СписокРежимов = Новый СписокЗначений;
	СписокРежимов.Добавить("РучноеОбновление", НСтр("ru = 'Ручное обновление'"),, 
		БиблиотекаКартинок.РучноеОбновлениеРаботаСНоменклатурой);
	СписокРежимов.Добавить("АвтоматическоеОбновление", НСтр("ru = 'Автоматическое обновление'"),, 
		БиблиотекаКартинок.АвтоматическоеОбновлениеРаботаСНоменклатурой);
	
	Если Форма.РаботаСНоменклатурой_РежимПредставленияОбъектаСервиса = "Гиперссылка" Тогда
		
		Если Форма.РаботаСНоменклатурой_ОбновляетсяАвтоматически Тогда
			ВыполнитьОбработкуОповещения(ОповещениеНажатиеРежимаОбновления, СписокРежимов[1]);	
		Иначе
			ВыполнитьОбработкуОповещения(ОповещениеНажатиеРежимаОбновления, СписокРежимов[0]);	
		КонецЕсли;
		
	Иначе		
		Форма.ПоказатьВыборИзМеню(ОповещениеНажатиеРежимаОбновления, СписокРежимов, 
			Форма.Элементы.Найти("РежимОбновления"));
	КонецЕсли;
	
КонецПроцедуры

// Обработка нажатия встраиваемых гиперссылок.
//
// Параметры:
//  Форма				 - ФормаКлиентскогоПриложения - форма объекта.
//  Элемент				 - Элемент			 - элемент формы.
//  СтандартнаяОбработка - Булево			 - флаг стандартной обработки.
//  ОповещениеОЗакрытии	 - ОписаниеОповещения - оповещение о закрытии окна. 
//
Процедура НажатиеГиперссылки(Форма, Элемент, СтандартнаяОбработка, ОповещениеОЗакрытии) Экспорт
	
	Если Элемент.Имя = "РежимОбновления" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		РежимыОбновления = Новый СписокЗначений;
		
		РежимыОбновления.Добавить("вручную", НСтр("ru = 'Обновлять вручную'"), 
			НЕ Форма.РаботаСНоменклатурой_ОбновляетсяАвтоматически);
		РежимыОбновления.Добавить("автоматически", НСтр("ru = 'Обновлять автоматически'"), 
			Форма.РаботаСНоменклатурой_ОбновляетсяАвтоматически);
				
		Форма.ПоказатьВыборИзМеню(Новый ОписаниеОповещения("ВыборРежимаОбновления", 
			ЭтотОбъект, Новый Структура("Форма", Форма)), РежимыОбновления);
		
	ИначеЕсли Элемент.Имя = "РаботаСНоменклатурой_ОчиститьОбъектСервиса" Тогда	
		Если Форма.РаботаСНоменклатурой_ТипОбъекта = "Номенклатура" Тогда
			НажатиеОчиститьНоменклатуру(Форма);
		ИначеЕсли Форма.РаботаСНоменклатурой_ТипОбъекта = "ВидНоменклатуры" Тогда
			НажатиеОчиститьКатегорию(Форма);
		КонецЕсли;
	ИначеЕсли Элемент.Имя = "РаботаСНоменклатурой_Характеристики" Тогда	
		
		Оповещение = Новый ОписаниеОповещения("ПослеСопоставленияХарактеристик", 
			ЭтотОбъект, Новый Структура("Форма", Форма));		
		
		ПараметрыФормы = ПараметрыФормыСопоставленияХарактеристик();
		
		ПараметрыФормы.ИдентификаторНоменклатуры       = Форма.РаботаСНоменклатурой_ИдентификаторОбъектаСервиса;
		ПараметрыФормы.Номенклатура                    = Форма.РаботаСНоменклатурой_СсылкаНаОбъект;
		ПараметрыФормы.НаименованиеНоменклатурыСервиса = Форма.РаботаСНоменклатурой_ПредставлениеОбъектаСервиса;
		
		ОткрытьФормуСопоставленияХарактеристик(ПараметрыФормы, Форма, Оповещение);
		
	Иначе
		Если Форма.РаботаСНоменклатурой_ЭтоРежимТолькоСопоставление Тогда
			
			// Обработка представления номенклатуры в режиме Сопоставление
			
			СтандартнаяОбработка = Ложь;
			
			Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияФормыСопоставления", ЭтотОбъект,
				Новый Структура("Форма, СсылкаНаОбъект", Форма, Форма.РаботаСНоменклатурой_СсылкаНаОбъект));
			
			ПараметрыФормы = ПараметрыФормыСопоставленийНоменклатуры();
			
			ПараметрыФормы.ОтображатьСопоставленные = Истина;
			ПараметрыФормы.Номенклатура.Добавить(Форма.РаботаСНоменклатурой_СсылкаНаОбъект);
			
			ОткрытьФормуСопоставленияНоменклатуры(ПараметрыФормы, Форма, Оповещение);
			
		Иначе
			Если ЗначениеЗаполнено(Форма.РаботаСНоменклатурой_ИдентификаторОбъектаСервиса) Тогда
				ОткрытьКарточкуОбъектаСервиса(Форма, Элемент, СтандартнаяОбработка);	
			Иначе
				ВыбратьОбъектСервиса(Форма, Элемент, СтандартнаяОбработка, Ложь, ОповещениеОЗакрытии);
			КонецЕсли;	
		КонецЕсли;
	КонецЕсли;
		
КонецПроцедуры

// Открытие формы подбора номенклатуры из сервиса.
//
// Параметры:
//  Форма				 - ФормаКлиентскогоПриложения - владелец формы.
//  Параметры			 - Структура - параметры формы.
//  ОповещениеОЗакрытии	 - ОписаниеОповещения - оповещение о закрытии формы.
//
Процедура ПодобратьНоменклатуруИзСервиса(Форма = Неопределено, 
			Параметры = Неопределено, ОповещениеОЗакрытии = Неопределено) Экспорт
	
	ОценкаПроизводительностиКлиент.ЗамерВремени(
		"ОбщийМодуль.РаботаСНоменклатуройКлиент.ПодобратьНоменклатуруИзСервиса");
	
	ОткрытьФормуЗагрузкиНоменклатуры(Параметры, Форма, ОповещениеОЗакрытии);
	
КонецПроцедуры

// Открытие формы подбора категорий из сервиса.
//
// Параметры:
//  Владелец - ФормаКлиентскогоПриложения - владелец формы.
//
Процедура ПодобратьКатегорииИзСервиса(Владелец = Неопределено) Экспорт
	
	ОценкаПроизводительностиКлиент.ЗамерВремени(
		"ОбщийМодуль.РаботаСНоменклатуройКлиент.ПодобратьКатегорииИзСервиса");
	
	ОткрытьФорму("Обработка.РаботаСНоменклатурой.Форма.ЗагрузкаКатегорий", , Владелец);
	
КонецПроцедуры

// Обработка события ПриИзменении элемента формы, для формирования строки поиска номенклатуры в сервисе.
// Поиск осуществляется для формирования контекстной подсказки в момент заполнения объекта.
//
// Параметры:
//  Форма	 - ФормаКлиентскогоПриложения - форма события.
//  Элемент	 - ПолеФормы - изменяемый элемент формы.
//
Процедура ПриИзмененииСобратьСтрокуПоиска(Форма, Элемент) Экспорт 
	
	СобратьСтрокуПоиска(Форма, Элемент);
	
КонецПроцедуры

// Обработка события ИзменениеТекстаРедактирования элемента формы, для формирования строки поиска номенклатуры в сервисе.
// Поиск осуществляется для формирования контекстной подсказки в момент заполнения объекта.
//
// Параметры:
//  Форма	 - ФормаКлиентскогоПриложения - форма события.
//  Текст	 - Строка - редактируемый текст.
//  Элемент	 - ПолеФормы - изменяемый элемент формы.
//  СтандартнаяОбработка - Булево - флаг стандартной обработки.
//
Процедура ИзменениеТекстаСобратьСтрокуПоиска(Форма, Текст, Элемент, СтандартнаяОбработка) Экспорт 
	
	СтандартнаяОбработка = Ложь;
	
	Если СтрДлина(Текст) < 3 
		И ЗначениеЗаполнено(Текст) Тогда
		
		Возврат;
	КонецЕсли;
	
	СобратьСтрокуПоиска(Форма, Элемент);
	
КонецПроцедуры

// Открытие формы представления объекта сервиса.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма владелец.
//  Элемент - ПолеФормы - элемент с представлением объекта сервиса.
//  СтандартнаяОбработка - Булево - флаг стандартной обработки.
//
Процедура ОткрытьКарточкуОбъектаСервиса(Форма, Элемент, СтандартнаяОбработка) Экспорт 
	
	СтандартнаяОбработка = Ложь;
		
	Если Форма.РаботаСНоменклатурой_ТипОбъекта = "ВидНоменклатуры" Тогда // Категория
		
		Если НЕ ЗначениеЗаполнено(Форма.РаботаСНоменклатурой_ИдентификаторыОбъектовСервиса) Тогда
			Возврат;
		КонецЕсли;
				
		ОценкаПроизводительностиКлиент.ЗамерВремени(
			"ОбщийМодуль.РаботаСНоменклатуройКлиент.ОткрытКарточкуОбъектаСервиса.КатегорииСервиса");
				
		ОткрытьФормуКарточкиКатегории(Форма.РаботаСНоменклатурой_ИдентификаторыОбъектовСервиса, 
			Форма.РаботаСНоменклатурой_СсылкаНаОбъект, Форма, Форма.УникальныйИдентификатор);
		
	ИначеЕсли Форма.РаботаСНоменклатурой_ТипОбъекта = "Номенклатура" Тогда // Номенклатура
		
		Если НЕ ЗначениеЗаполнено(Форма.РаботаСНоменклатурой_ИдентификаторОбъектаСервиса) Тогда
			Возврат;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Форма.РаботаСНоменклатурой_ИдентификаторХарактеристики) Тогда
			Идентификаторы = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(
				Новый Структура("ИдентификаторНоменклатуры, ИдентификаторХарактеристики", 
					Форма.РаботаСНоменклатурой_ИдентификаторОбъектаСервиса,
					Форма.РаботаСНоменклатурой_ИдентификаторХарактеристики));
		Иначе
			Идентификаторы = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Форма.РаботаСНоменклатурой_ИдентификаторОбъектаСервиса);
		КонецЕсли;
		
		ОценкаПроизводительностиКлиент.ЗамерВремени(
				"ОбщийМодуль.РаботаСНоменклатуройКлиент.ОткрытКарточкуОбъектаСервиса.НоменклатураСервиса");
				
		ОткрытьФормуКарточкиНоменклатуры(Идентификаторы, Форма);
		
	КонецЕсли;
	
КонецПроцедуры

// Функция определяет доступность подсистемы.
// 
// Возвращаемое значение:
//  Булево - признак доступности подсистемы.
//
Функция ДоступнаФункциональностьПодсистемы() Экспорт
	
	Возврат РаботаСНоменклатуройСлужебныйВызовСервера.ДоступнаФункциональностьПодсистемы();
	
КонецФункции

// Процедура вызывается после выбора 1С:Номенклатуры из прикладных форм, собирает данные с формы объекта информационной базы
//  и передает в форму заполнения.
//
// Параметры:
//  ДанныеВыбора					 - Структура - идентификатор и наименование объекта сервиса.
//  ДополнительныеПараметры			 - Структура - ссылка на заполняемую номенклатуру и его форму.
//  ДанныеИнтерактивногоЗаполнения	 - Строка	 - см. РаботаСНоменклатурой.ПодготовитьДанныеДляИнтерактивногоЗаполнения.
//  ОповещениеОЗакрытии				 - ОписаниеОповещения - описание оповещения о закрытии формы заполнения.
//
Процедура ОбработкаОповещенияЗакрытиеФормыВыбора(ДанныеВыбора, 
			ДополнительныеПараметры, 
			ДанныеИнтерактивногоЗаполнения, 
			ОповещениеОЗакрытии) Экспорт
	
	Если ДанныеВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДанныеВыбора.ВыбранныеОбъекты) Тогда
		Возврат;
	КонецЕсли;	
		
	Форма = ДополнительныеПараметры.Форма;
	
	Если Форма.РаботаСНоменклатурой_ТипОбъекта = "ВидНоменклатуры" Тогда
		ОбработкаВыбораКатегории(ДанныеВыбора, ДополнительныеПараметры, ДанныеИнтерактивногоЗаполнения, ОповещениеОЗакрытии);
		
	ИначеЕсли Форма.РаботаСНоменклатурой_ТипОбъекта = "Номенклатура" Тогда	
		ОбработкаВыбораНоменклатуры(ДанныеВыбора, ДополнительныеПараметры, ДанныеИнтерактивногоЗаполнения, ОповещениеОЗакрытии);
		
	КонецЕсли;
	
КонецПроцедуры

// Открытие формы сопоставление характеристик информационной базы с характеристиками сервиса.
//
// Параметры:
//  НоменклатураСсылка   - Ссылка - ссылка на номенклатуру.
//  Владелец			 - ФормаКлиентскогоПриложения - форма владелец формы сопоставления.
//  ОповещениеОЗакрытии	 - ОписаниеОповещения - оповещение о закрытии формы.
//
Процедура ОткрытьФормуСопоставленияХарактеристикСервиса(НоменклатураСсылка, 
			Владелец = Неопределено, 
			ОповещениеОЗакрытии = Неопределено) Экспорт
	
	ПараметрыФормы = ПараметрыФормыСопоставленияХарактеристик();		
	
	ПараметрыФормы.Номенклатура = НоменклатураСсылка;
			
	ОткрытьФормуСопоставленияХарактеристик(ПараметрыФормы, Владелец, ОповещениеОЗакрытии);
		
КонецПроцедуры

// Представление сопоставленных характеристик.
//
// Параметры:
//  НоменклатураСсылка	 - Ссылка - ссылка на номенклатуру.
//  ШаблонПредставления	 - Строка - шаблон представления гиперссылки. Шаблон должен включать два маркера подстановки: %1, %2.
//                                  На место маркера %1 будет проставлено количество сопоставленных характеристик, 
//                                  на место маркера %2 будет проставлено общее количество характеристик номенклатуры.
//                                  Если шаблон указан не будет, представление имеет вид: Сопоставлено характеристик: %1 из %2.
// 
// Возвращаемое значение:
//  Строка - представление гиперссылки.
//
Функция ПредставлениеСопоставленныхХарактеристик(НоменклатураСсылка, ШаблонПредставления = "") Экспорт
	
	Возврат РаботаСНоменклатуройСлужебныйВызовСервера.ПредставлениеСопоставленныхХарактеристик(
		НоменклатураСсылка, Неопределено, ШаблонПредставления);
		
КонецФункции

// Обработка встраиваемых команд.
//
// Параметры:
//  Форма	 - ФормаКлиентскогоПриложения - форма, из которой происходит выполнение команды.
//  Команда	 - Команда - выполняемая команда.
//
Процедура ВыполнитьПодключаемуюКоманду(Форма, Команда) Экспорт
	
	Если Команда.Имя = "РаботаСНоменклатуройПодобратьНоменклатуруИзСервиса" Тогда
		
		ПодобратьНоменклатуруИзСервиса();
		
	ИначеЕсли Команда.Имя = "РаботаСНоменклатуройСопоставитьВыделеннуюНоменклатуру" Тогда
		
		ПараметрыФормы = ПараметрыФормыСопоставленийНоменклатуры();
		
		ПараметрыФормы.Номенклатура = ТекущаяНоменклатураФормыСписка(Форма);
		
		ОткрытьФормуСопоставленияНоменклатуры(ПараметрыФормы);
		
	ИначеЕсли Команда.Имя = "РаботаСНоменклатуройСопоставитьВсюНоменклатуру" Тогда
		
		ПоказатьВопросПриСопоставленииВсейНоменклатуры();
		
	ИначеЕсли Команда.Имя = "РаботаСНоменклатуройВключитьАвтоматическоеОбновление" Тогда	
		
		УстановитьРежимОбновленияНоменклатуры(ТекущаяНоменклатураФормыСписка(Форма), Истина);
		
		ОбновитьСписокФормы(Форма);
		
	ИначеЕсли Команда.Имя = "РаботаСНоменклатуройВключитьРучноеОбновление" Тогда	
		
		УстановитьРежимОбновленияНоменклатуры(ТекущаяНоменклатураФормыСписка(Форма), Ложь);
		
		ОбновитьСписокФормы(Форма);
				
	КонецЕсли;
		
КонецПроцедуры

// Обработка выбора строки таблицы.
//
// Параметры:
//  Форма				 - ФормаКлиентскогоПриложения - форма, из которой происходит выполнение команды.
//  Элемент				 - ТаблицаФормы - таблица формы.
//  ВыбраннаяСтрока		 - Произвольный - значение выбранной строки. Тип значения зависит от типа данных, отображаемых в таблице.
//  Поле				 - ПолеФормы - активное поле (колонка). 
//  СтандартнаяОбработка - Булево - признак выполнения стандартной обработки события.
//
Процедура ВыборВТаблицеФормы(Форма, Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка) Экспорт
	
	Если Поле.Имя = "НоменклатураСервиса" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		Если Элемент.ТекущиеДанные = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		Если Элемент.ТекущиеДанные.КодСтатусаСопоставленияРаботаСНоменклатурой = 2 Тогда
			
			ОткрытьФормуКарточкиНоменклатуры(
				ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(
					Элемент.ТекущиеДанные.ИдентификаторНоменклатурыРаботаСНоменклатурой), Форма);
					
		ИначеЕсли Форма.РаботаСНоменклатурой_ПравоИзмененияДанных Тогда
			
			ПараметрыФормы = ПараметрыФормыСопоставленийНоменклатуры();
			
			ПараметрыФормы.Номенклатура = ТекущаяНоменклатураФормыСписка(Форма);
			
			Если Элемент.ТекущиеДанные.КодСтатусаСопоставленияРаботаСНоменклатурой = 3 Тогда
				ПараметрыФормы.ОтображатьСопоставленные = Истина;
			КонецЕсли;
			
			ОткрытьФормуСопоставленияНоменклатуры(ПараметрыФормы);
			
		КонецЕсли;
		
	КонецЕсли;
		
КонецПроцедуры

// Параметры формы помощника выгрузки номенклатуры
// 
// Возвращаемое значение:
//  Структура - параметры формы.
//   Ключи:
//    * Организация - ОпределяемыйТип.Организация - организация, для которой требуется получить настройку.
//    * АдресТоваровВХранилище - Строка - адрес во временном хранилище, по адресу размещается ТаблицаЗначений:
//     * Номенклатура - ОпределяемыйТип.НоменклатураРаботаСНоменклатурой - обязательна
//     * Характеристика - ОпределяемыйТип.ХарактеристикаРаботаСНоменклатурой - может отсутствовать, если учет по характеристикам не ведется
//    * ВыгружатьНоменклатуру - Булево - флаг выгрузки в сервис 1С:Номенклатура, по умолчанию Истина.
//    * ВыгружатьВНациональныйКаталог - Булево - флаг выгрузки в Национальный каталог, по умолчанию Истина.
//
Функция ПараметрыФормыПомощникВыгрузки() Экспорт
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Организация");
	ПараметрыФормы.Вставить("АдресТоваровВХранилище", "");
	ПараметрыФормы.Вставить("ВыгружатьНоменклатуру", Истина);
	ПараметрыФормы.Вставить("ВыгружатьВНациональныйКаталог", Истина);
	
	Возврат ПараметрыФормы;
	
КонецФункции

// Открытие формы помощника выгрузки номенклатуры.
//
// Параметры:
//  ПараметрыФормы              - Структура                  - см. ПараметрыФормыПомощникВыгрузки.
//  Владелец                    - ФормаКлиентскогоПриложения - владелец формы.
//  ОписаниеОповещенияОЗакрытии - ОписаниеОповещения         - оповещение о закрытии формы.
//  РежимОткрытияОкна           - РежимОткрытияОкнаФормы - содержит варианте открытия формы клиентского приложения.
//
Процедура ОткрытьФормуПомощникВыгрузки(ПараметрыФормы, 
	Владелец = Неопределено,
	ОписаниеОповещенияОЗакрытии = Неопределено, 
	РежимОткрытияОкна = Неопределено) Экспорт
	
	ОценкаПроизводительностиКлиент.ЗамерВремени("Обработка.РаботаСНоменклатурой.Форма.ПомощникВыгрузки.ОткрытиеФормы");
	
	КлючУникальности = Неопределено;
	Если ТипЗнч(Владелец) = Тип("ФормаКлиентскогоПриложения") Тогда
		КлючУникальности = Владелец.УникальныйИдентификатор;
	КонецЕсли;
	
	ОткрытьФорму("Обработка.РаботаСНоменклатурой.Форма.ПомощникВыгрузки", 
		ПараметрыФормы, Владелец, КлючУникальности, , , ОписаниеОповещенияОЗакрытии, РежимОткрытияОкна);
	
КонецПроцедуры

// Подготовка параметров заполнения формы элемента номенклатуры по данным сервиса.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма, из которой происходит выполнение команды.
//  ДанныеОбъекта - Структура:
//   * Идентификатор - Строка - идентификатор номенклатуры в сервисе.
//   * Наименование - Строка - наименование номенклатуры.
//  ОповещениеФормы - ОписаниеОповещения - оповещение, вызываемое после подготовки параметров.
//  ДополнительныеПараметры - Структура:
//   * ВыводитьОкноОжидания - Булево - см. ДлительныеОперацииКлиент.ПараметрыОжидания().ВыводитьОкноОжидания.
//
Процедура ПодготовитьПараметрыЗаполненияФормыНоменклатуры(Форма, ДанныеОбъекта, ОповещениеФормы, 
	ДополнительныеПараметры) Экспорт
	
	ДанныеИнтерактивногоЗаполнения = ПоместитьВоВременноеХранилище(Неопределено, Форма.УникальныйИдентификатор);
	
	НоменклатураНаименование = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ДанныеОбъекта, "Наименование");
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ИдентификаторНоменклатуры", ДанныеОбъекта.Идентификатор);
	ПараметрыФормы.Вставить("Номенклатура", Форма.РаботаСНоменклатурой_СсылкаНаОбъект);
	ПараметрыФормы.Вставить("НоменклатураНаименование", НоменклатураНаименование);
	ПараметрыФормы.Вставить("ИдентификаторыВыбранныхХарактеристик", Новый СписокЗначений);
	ПараметрыФормы.Вставить("ЭтоПривязка", Истина);
	
	ПараметрыФормы.Вставить("ДанныеИнтерактивногоЗаполнения", ДанныеИнтерактивногоЗаполнения);
	
	ДополнительныеПараметры.Вставить("Форма", Форма);
	ДополнительныеПараметры.Вставить("ПараметрыФормы", ПараметрыФормы);
	
	ПодготовитьПараметрыЗаполненияНоменклатуры(ДанныеОбъекта.Идентификатор, ДанныеИнтерактивногоЗаполнения,
		ОповещениеФормы, ДополнительныеПараметры);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область ОткрытиеФорм

// Открытие формы загрузки категорий.
//
// Параметры:
//  ПараметрыФормы			 - Структура - См. ПараметрыФормыЗагрузкиКатегорий.
//  Владелец				 - ФормаКлиентскогоПриложения - владелец формы.
//  ОповещениеОЗакрытии		 - ОписаниеОповещения - оповещение о закрытии формы.
//  РежимОткрытияОкнаФормы	 - РежимОткрытияОкнаФормы - режим открытия окна формы.
//
Процедура ОткрытьФормуЗагрузкиКатегорий(ПараметрыФормы, 
			Владелец            = Неопределено,
			ОповещениеОЗакрытии = Неопределено,
			РежимОткрытияОкна   = Неопределено) Экспорт
	
	ОткрытьФорму("Обработка.РаботаСНоменклатурой.Форма.ЗагрузкаКатегорий", ПараметрыФормы, Владелец,,,, 
		ОповещениеОЗакрытии, 
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

// Открытие формы сопоставление характеристик
//
// Параметры:
//  ПараметрыФормы		 - Структура - см. ПараметрыФормыСопоставленияХарактеристик.
//  Владелец			 - ФормаКлиентскогоПриложения - форма владелец формы сопоставления.
//  ОповещениеОЗакрытии	 - ОписаниеОповещения - оповещение о закрытии формы.
//
Процедура ОткрытьФормуСопоставленияХарактеристик(ПараметрыФормы, 
			Владелец = Неопределено, 
			ОповещениеОЗакрытии = Неопределено) Экспорт
	
	ОценкаПроизводительностиКлиент.ЗамерВремени(
		"ОбщийМодуль.РаботаСНоменклатуройКлиент.СопоставитьХарактеристики");

	ОткрытьФорму("Обработка.РаботаСНоменклатурой.Форма.СопоставлениеХарактеристик", ПараметрыФормы, Владелец,,,,ОповещениеОЗакрытии);	
		
КонецПроцедуры

// Открытие формы загрузки/выбора номенклатуры.
//
// Параметры:
//  ПараметрыФормы			 - Структура - См. ПараметрыФормыЗагрузкиНоменклатуры.
//  Владелец				 - ФормаКлиентскогоПриложения - владелец формы.
//  ОповещениеОЗакрытии		 - ОписаниеОповещения - оповещение о закрытии формы.
//  РежимОткрытияОкнаФормы	 - РежимОткрытияОкнаФормы - режим открытия окна формы.
//
Процедура ОткрытьФормуЗагрузкиНоменклатуры(ПараметрыФормы, 
			Владелец = Неопределено, 
			ОповещениеОЗакрытии = Неопределено, 
			РежимОткрытияОкнаФормы = Неопределено) Экспорт
	
	ОткрытьФорму("Обработка.РаботаСНоменклатурой.Форма.ЗагрузкаНоменклатуры", 
		ПараметрыФормы, Владелец,,,, ОповещениеОЗакрытии, РежимОткрытияОкнаФормы);
	
КонецПроцедуры

// Открытие формы карточки номенклатуры.
//
// Параметры:
//  Идентификаторы		 - Массив - массив строк - идентификаторов номенклатуры или массив структур с ключами: 
//                                  ИдентификаторНоменклатуры (Строка), ИдентификаторХарактеристики (Строка),
//                                  если требуется открыть конкретные характеристики номенклатуры.
//  Владелец			 - ФормаКлиентскогоПриложения - владелец формы.
//  ОповещениеОЗакрытии	 - ОписаниеОповещения - оповещение о закрытии формы.
//  СтрокаШтрихкода		 - Строка - строка штрихкода. Используется когда форма вызывается после поиска номенклатуры по штрихкоду.
//  ПараметрыФормы       - Структура - параметры открытия формы
//
Процедура ОткрытьФормуКарточкиНоменклатуры(Знач Идентификаторы, 
			Владелец = Неопределено,
			ОповещениеОЗакрытии = Неопределено,
			СтрокаШтрихкода = "",
			ПараметрыФормы = Неопределено) Экспорт
	
	Если ПараметрыФормы = Неопределено Тогда
		ПараметрыФормы = Новый Структура;
	КонецЕсли;
		
	ПараметрыФормы.Вставить("ИдентификаторыНоменклатуры", Идентификаторы);
	ПараметрыФормы.Вставить("СтрокаШтрихкода",            СтрокаШтрихкода);
	
	ОткрытьФормуКарточкиНоменклатурыСервиса(ПараметрыФормы, Владелец, ОповещениеОЗакрытии);
		
КонецПроцедуры

// Открытие панели администрировании подсистемы РаботаСНоменклатурой.
//
// Параметры:
//  ПараметрыФормы			 - Структура			 - см. ПараметрыФормыПанелиАдминистрирования.
//  Владелец				 - ФормаКлиентскогоПриложения - форма владелец формы сопоставления.
//  ОповещениеОЗакрытии		 - ОписаниеОповещения	 - оповещение о закрытии формы.
//  РежимОткрытияОкнаФормы	 - РежимОткрытияОкнаФормы	 - режим открытия окна формы.
//
Процедура ОткрытьФормуПанелиАдминистрирования(ПараметрыФормы,
				Владелец = Неопределено,
				ОповещениеОЗакрытии = Неопределено, 
				РежимОткрытияОкнаФормы = Неопределено) Экспорт
	
	ОткрытьФорму("Обработка.РаботаСНоменклатурой.Форма.ПанельАдминистрирования", 
		ПараметрыФормы, 
		Владелец,,,,
		ОповещениеОЗакрытии, 
		РежимОткрытияОкнаФормы);
	
КонецПроцедуры

// Открытие формы сопоставления номенклатуры.
//
// Параметры:
//  ПараметрыФормы				 - Структура		 - см. ПараметрыФормыСопоставленийНоменклатуры.
//  Владелец					 - ФормаКлиентскогоПриложения - владелец формы.
//  ОписаниеОповещенияОЗакрытии	 - ОписаниеОповещения	 - оповещение о закрытии формы.
//
Процедура ОткрытьФормуСопоставленияНоменклатуры(
			ПараметрыФормы,
			Владелец = Неопределено, 
			ОписаниеОповещенияОЗакрытии = Неопределено) Экспорт;
			
	ОткрытьФорму("Обработка.РаботаСНоменклатурой.Форма.СопоставлениеНоменклатуры", 
		ПараметрыФормы, Владелец, , , , ОписаниеОповещенияОЗакрытии);
		
КонецПроцедуры

// Открытие формы сопоставления номенклатуры с рубрикатором 1С:Номенклатура.
//
// Параметры:
//  ПараметрыФормы              - Структура                  - см. ПараметрыФормыСопоставленияНоменклатурыСРубрикатором.
//  Владелец                    - ФормаКлиентскогоПриложения - владелец формы.
//  ОписаниеОповещенияОЗакрытии - ОписаниеОповещения         - оповещение о закрытии формы.
//
Процедура ОткрытьФормуСопоставленияНоменклатурыСРубрикатором(ПараметрыФормы, 
				Владелец = Неопределено,
				ОписаниеОповещенияОЗакрытии = Неопределено, 
				РежимОткрытияОкнаФормы = Неопределено) Экспорт
	
	ОценкаПроизводительностиКлиент.ЗамерВремени(
		"Обработка.РаботаСНоменклатурой.Форма.СопоставлениеНоменклатурыСРубрикатором.ОткрытиеФормы");
	
	НастройкиОтбора = Неопределено;
	ПараметрыФормы.Свойство("НастройкиОтбора", НастройкиОтбора);
	
	Если ПараметрыФормы.Свойство("Номенклатура") И ЗначениеЗаполнено(ПараметрыФормы.Номенклатура) Тогда
		Если НастройкиОтбора = Неопределено Тогда
			НастройкиОтбора = Новый НастройкиКомпоновкиДанных;
		КонецЕсли;
		СписокСсылок = Новый СписокЗначений;
		СписокСсылок.ЗагрузитьЗначения(ПараметрыФормы.Номенклатура);
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(НастройкиОтбора.Отбор, "Номенклатура", СписокСсылок,
			ВидСравненияКомпоновкиДанных.ВСписке, , Истина, РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
		ПараметрыФормы.Удалить("Номенклатура");
	КонецЕсли; 

	Если ПараметрыФормы.Свойство("ВидыНоменклатуры") И ЗначениеЗаполнено(ПараметрыФормы.ВидыНоменклатуры) Тогда
		Если НастройкиОтбора = Неопределено Тогда
			НастройкиОтбора = Новый НастройкиКомпоновкиДанных;
		КонецЕсли;
		СписокСсылок = Новый СписокЗначений;
		СписокСсылок.ЗагрузитьЗначения(ПараметрыФормы.ВидыНоменклатуры);
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(НастройкиОтбора.Отбор, "ВидНоменклатуры", СписокСсылок,
			ВидСравненияКомпоновкиДанных.ВСписке, , Истина, РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
		ПараметрыФормы.Удалить("ВидыНоменклатуры");
	КонецЕсли; 
	
	Если ПараметрыФормы.Свойство("Родители") И ЗначениеЗаполнено(ПараметрыФормы.Родители) Тогда
		Если НастройкиОтбора = Неопределено Тогда
			НастройкиОтбора = Новый НастройкиКомпоновкиДанных;
		КонецЕсли;
		СписокСсылок = Новый СписокЗначений;
		СписокСсылок.ЗагрузитьЗначения(ПараметрыФормы.Родители);
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(НастройкиОтбора.Отбор, "Родитель", СписокСсылок,
			ВидСравненияКомпоновкиДанных.ВСписке, , Истина, РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
		ПараметрыФормы.Удалить("Родители");
	КонецЕсли; 
	
	ПараметрыФормы.Вставить("НастройкиОтбора" , НастройкиОтбора);
	
	КлючУникальности = Неопределено;
	Если ТипЗнч(Владелец) = Тип("ФормаКлиентскогоПриложения") Тогда
		КлючУникальности = Владелец.УникальныйИдентификатор;
	КонецЕсли;
	
	ОткрытьФорму("Обработка.РаботаСНоменклатурой.Форма.СопоставлениеНоменклатурыСРубрикатором", 
		ПараметрыФормы, Владелец, КлючУникальности, , , ОписаниеОповещенияОЗакрытии, РежимОткрытияОкнаФормы);

КонецПроцедуры

// Открытие формы условия отбора номенклатуры.
//
// Параметры:
//  ПараметрыФормы              - Структура                  - см. ПараметрыФормыУсловияОтбораНоменклатуры.
//  Владелец                    - ФормаКлиентскогоПриложения - владелец формы.
//  ОписаниеОповещенияОЗакрытии - ОписаниеОповещения         - оповещение о закрытии формы, если параметр не задан,
//                                                             подключается оповещение "по умолчанию" ОбновитьУсловияОтбораНоменклатуры
//  РежимОткрытияОкнаФормы      - РежимОткрытияОкнаФормы     - варианты открытия формы клиентского приложения,
//                                                             значение "по умолчанию" - БлокироватьОкноВладельца.
// 
Процедура ОткрытьФормуУсловияОтбораНоменклатуры(ПараметрыФормы, 
				Владелец = Неопределено,
				ОписаниеОповещенияОЗакрытии = Неопределено, 
				РежимОткрытия = Неопределено) Экспорт

	Если РежимОткрытия = Неопределено Тогда
		РежимОткрытия = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	КонецЕсли;
	
	КлючУникальности = Новый УникальныйИдентификатор;
	Если ТипЗнч(Владелец) = Тип("ФормаКлиентскогоПриложения") Тогда
		КлючУникальности = Владелец.УникальныйИдентификатор;
		Если ОписаниеОповещенияОЗакрытии = Неопределено Тогда
			ОписаниеОповещенияОЗакрытии = Новый ОписаниеОповещения("ОбновитьУсловияОтбораНоменклатуры", ЭтотОбъект, Владелец);
		КонецЕсли;
	КонецЕсли;
	
	ОткрытьФорму("Обработка.РаботаСНоменклатурой.Форма.УсловияОтбораНоменклатуры",
		ПараметрыФормы, Владелец, КлючУникальности,,,ОписаниеОповещенияОЗакрытии, РежимОткрытия);

КонецПроцедуры

// Открытие либо повторное открытие формы помощника выгрузки номенклатуры по организации
// При повторном открытии для изменения организации отрабатывает обработчик оповещения
//
// Параметры:
//  Организация - ОпределяемыйТип.Организация - организация для определения настройки выгрузки
//
Процедура ОткрытьПомощникВыгрузки(Организация) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Возврат
	КонецЕсли;
	ПараметрыФормы = ПараметрыФормыПомощникВыгрузки();
	ПараметрыФормы.Организация = Организация;
	ОткрытьФормуПомощникВыгрузки(ПараметрыФормы);
	Оповестить("ВыгрузкаНоменклатурыЗавершена", Организация);
	
КонецПроцедуры

#КонецОбласти

#Область ЗагрузкаДанных

// Загрузка номенклатуры и характеристик сервиса.
//
// Параметры:
//  ОповещениеОЗавершении		 - ОписаниеОповещения - оповещение вызываемое после загрузки номенклатуры.
//  Идентификаторы				 - Массив - массив структур с ключами: ИдентификаторНоменклатуры, ИдентификаторХарактеристики. 
//  Форма						 - ФормаКлиентскогоПриложения - форма, из которой вызывается метод.
//  ДополнительныеПараметры		 - Соответствие - дополнительные параметры создания. 
//  ИдентификаторЗадания		 - УникальныйИдентификатор - идентификатор задания.
//  ДекорацияДлительногоОжидания - ДекорацияФормы - элемент формы, для отображения хода выполнения задания.
//
Процедура ЗагрузитьНоменклатуруИХарактеристики(ОповещениеОЗавершении, 
			Идентификаторы,
			Форма, 
			ДополнительныеПараметры = Неопределено,
			ИдентификаторЗадания = Неопределено, 
			ДекорацияДлительногоОжидания = Неопределено) Экспорт
	
	ДлительнаяОперация = РаботаСНоменклатуройСлужебныйВызовСервера.СоздатьНоменклатуруВФоне(
		Идентификаторы, ДополнительныеПараметры, Форма.УникальныйИдентификатор, ИдентификаторЗадания);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Ложь;
	ПараметрыОжидания.ВыводитьОкноОжидания = ДекорацияДлительногоОжидания = Неопределено;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Ложь;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	
	ИдентификаторЗадания = ДлительнаяОперация.ИдентификаторЗадания;
	ОповещениеОЗавершении.ДополнительныеПараметры.Вставить("ИдентификаторЗадания", ИдентификаторЗадания);
		
	ПараметрыЗавершения = Новый Структура;
	ПараметрыЗавершения.Вставить("ИдентификаторыНоменклатуры", Идентификаторы);
	ПараметрыЗавершения.Вставить("ОповещениеОЗавершении",      ОповещениеОЗавершении);
	ПараметрыЗавершения.Вставить("Форма",                      Форма);
	
	ДлительнаяОперацияЗавершение = Новый ОписаниеОповещения("ЗагрузитьНоменклатуруПродолжение",
		ЭтотОбъект, ПараметрыЗавершения);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация,
		ДлительнаяОперацияЗавершение,
		ПараметрыОжидания);
	
КонецПроцедуры

#КонецОбласти

#Область ПараметрыОткрытияФорм

// Параметры формы сопоставления характеристик.
// 
// Возвращаемое значение:
//  Структура - параметры открытия формы сопоставления характеристик.
//    Ключи:
//      Номенклатура - Ссылка - ссылка на номенклатуру.
//      ИдентификаторНоменклатуры - Строка - идентификатор номенклатуры сервиса (необязательный).
//      НаименованиеНоменклатурыСервиса - Строка - наименование номенклатуры сервиса (необязательный).
//      ЭтоРежимВыбораХарактеристики - Булево - Истина, если форма должна открываться в режиме выбора характеристик.
//                                              В этом режиме форма позволяет только выбрать не сопоставленную характеристику
//                                              По умолчанию Ложь.
//
Функция ПараметрыФормыСопоставленияХарактеристик() Экспорт
	
	ПараметрыФормы = Новый Структура;
	
	ПараметрыФормы.Вставить("Номенклатура",                    Неопределено);
	ПараметрыФормы.Вставить("ИдентификаторНоменклатуры",       "");
	ПараметрыФормы.Вставить("НаименованиеНоменклатурыСервиса", "");
	ПараметрыФормы.Вставить("ЭтоРежимВыбораХарактеристики",    Ложь);
	
	Возврат ПараметрыФормы;
	
КонецФункции

// Параметры открытия формы подбора номенклатуры
// 
// Возвращаемое значение:
//  Структура - параметры открытия.
//    Ключи:
//      СтрокаПоиска - Строка - строка поиска номенклатуры.
//      ИдентификаторКатегории - Строка - идентификатор категории сервиса.
//      ИдентификаторНоменклатуры - Строка - идентификатор номенклатуры сервиса.
//      РежимПривязкиНоменклатуры - Булево - Истина, если идет привязка номенклатуры к номенклатуре сервиса.
//      РежимВыбораНоменклатуры - Булево - Истина, если форма открывается в режиме выбора.
//      СоздаватьНоменклатуруПриВыборе - Булево - Истина, если необходимо создавать номенклатуру при выборе.
//      ПодтверждатьСозданиеНоменклатуры - Булево - Истина, если требуется запросить подтверждение при создании номенклатуры.
//      ВозвращатьРасширенныйНаборПолей- Булево - Истина, если после выбора номенклатуры требуется возвращать информацию по категориям.
//      ПокупатьНоменклатуруПриВыборе- Булево - Истина, если при выборе номенклатуры должна происходить ее покупка.
//
Функция ПараметрыФормыЗагрузкиНоменклатуры() Экспорт
	
	Параметры = Новый Структура;
	
	Параметры.Вставить("СтрокаПоиска",              "");
	Параметры.Вставить("ИдентификаторКатегории",    Неопределено); // для позиционировании на категории, при переходе из карточки номенклатуры
	Параметры.Вставить("ИдентификаторНоменклатуры", "");           // используется при открытии формы из уже привязанной номенклатуры
	
	// Параметры выбора.
	
	Параметры.Вставить("РежимПривязкиНоменклатуры",        Ложь);
	Параметры.Вставить("РежимВыбораНоменклатуры",          Ложь);
	Параметры.Вставить("СоздаватьНоменклатуруПриВыборе",   Ложь);
	Параметры.Вставить("ПодтверждатьСозданиеНоменклатуры", Ложь);
	Параметры.Вставить("ЗапрещатьВыборЗагруженных",        Ложь);
	Параметры.Вставить("ВозвращатьРасширенныйНаборПолей",  Ложь);
	Параметры.Вставить("ПокупатьНоменклатуруПриВыборе",    Истина);
	
	Возврат Параметры;
	
КонецФункции

// Параметры формы загрузки категорий.
// 
// Возвращаемое значение:
//  Структура - параметры открытия.
//    Ключи:
//      ОдиночныйРежимВыбора - Булево - если Истина, форма открывается без возможности выбора нескольких категорий.
//      СкрыватьОписаниеКатегорий - Булево - управление видимостью описания категорий при выделении.
//      РежимВыбораКатегорий - Булево - Истина, если форма открывается в режиме выбора.
//      ИдентификаторыВыбранныхКатегорий - Массив (Строка) - идентификаторы категорий, которые будут отмечены при открытии формы.
//      ЭтоВыгрузкаВНациональныйКаталог - Булево - признак открытия формы в режиме выгрузки данных в Национальный каталог.
//      СсылкаНаОбъект - ОпределяемыйТип.ВидНоменклатурыРаботаСНоменклатурой, ОпределяемыйТип.НоменклатураРаботаСНоменклатурой
//
Функция ПараметрыФормыЗагрузкиКатегорий() Экспорт
	
	Результат = Новый Структура;
	
	Результат.Вставить("ОдиночныйРежимВыбора",             Ложь);
	Результат.Вставить("СкрыватьОписаниеКатегорий",        Ложь);
	Результат.Вставить("РежимВыбораКатегорий",             Ложь);
	Результат.Вставить("РазрешеноВыбиратьГруппы",          Ложь);
	Результат.Вставить("ИдентификаторыВыбранныхКатегорий", Новый Массив);
	Результат.Вставить("ЗаголовокФормы",                   НСтр("ru = 'Загрузка категорий 1С:Номенклатуры'"));
	Результат.Вставить("ЭтоВыгрузкаВНациональныйКаталог",  Ложь);
	Результат.Вставить("СсылкаНаОбъект");
	Результат.Вставить("ВидНоменклатуры");
	Результат.Вставить("ТекстПредупреждения",              "");
	
	Возврат Результат;
	
КонецФункции

// Параметры формы панели администрирования.
// 
// Возвращаемое значение:
//  Структура - параметры открытия.
//    Ключи:
//      Раздел - Строка - отображаемый раздел. ВозможныеЗначения: ПустаяСтрока, НастройкиРаботаСНоменклатурой, НастройкиОблачныйКлассификатор.
//      ОписаниеРаздела - Строка - описание раздела.
//      Заголовок - Строка - заголовок формы.
//
Функция ПараметрыФормыПанелиАдминистрирования() Экспорт
	
	Результат = Новый Структура;
	
	Результат.Вставить("Раздел",          "");
	Результат.Вставить("ОписаниеРаздела", "");
	Результат.Вставить("Заголовок",       "");
	
	Возврат Результат;
	
КонецФункции

// Параметры формы сопоставлений номенклатуры.
// 
// Возвращаемое значение:
//  Структура - параметры формы.Ключи:
//    * Номенклатура - Массив - (Ссылка) номенклатура для отбора в списке формы.
//    * ОтображатьСопоставленные - Булево - отображать сопоставленные объекты.
//    * ПодсистемаВладелец - Строка - имя подсистемы, из которой вызывается форма.
//                                  Допустимые значения: "РаботаСНоменклатурой", "ТорговыеПредложения".
//
Функция ПараметрыФормыСопоставленийНоменклатуры(ПодсистемаВладелец = "РаботаСНоменклатурой") Экспорт
	
	ПараметрыФормы = Новый Структура;
	
	ПараметрыФормы.Вставить("Номенклатура",             Новый Массив);
	ПараметрыФормы.Вставить("ОтображатьСопоставленные", Ложь);
	ПараметрыФормы.Вставить("ПодсистемаВладелец",       ПодсистемаВладелец);
	
	Возврат ПараметрыФормы;
	
КонецФункции

// Параметры формы сопоставления номенклатуры с рубрикатором 1С:Номенклатура
// 
// Возвращаемое значение:
//  Структура - параметры формы.
//   Ключи:
//    * СценарийИспользования - Строка - 
//       - ПубликацияТорговыхПредложенийБезКонтекста - открытие из подсистемы
//           "ЭлектронноеВзаимодействие.ТорговыеПредложения" без отборов.
//       - ПубликацияТорговыхПредложений - открытие из подсистемы 
//           "ЭлектронноеВзаимодействие.ТорговыеПредложения" с отборами.
//       - ВыгрузкаНоменклатуры - открытие из подсистемы 
//           "ЭлектронноеВзаимодействие.РаботаСНоменклатурой" для выгрузки номенклатуры.
//    * НастройкиОтбора - НастройкиКомпоновкиДанных - содержит настройки отбора номенклатуры.
//    * Номенклатура - Массив из ОпределяемыйТип.НоменклатураРаботаСНоменклатурой - массив номенклатуры для которой
//                     требуется установить отбор.
//    * ВидыНоменклатуры - Массив из ОпределяемыйТип.ВидНоменклатурыРаботаСНоменклатурой - массив видов номенклатуры
//                     для которых требуется установить отбор.
//    * Родители - Массив из ОпределяемыйТип.НоменклатураРаботаСНоменклатурой - массив номенклатуры для которых
//                     требуется установить отбор с учетом иерархии.
//    * РежимСопоставления - Строка - способ сопоставления категорий:
//       - ПоНоменклатуре - сопоставление с категориями номенклатуры.
//       - ПоИерархии - сопоставление с категориями по иерархии.
//       - ПоВидам - сопоставление с категориями по видам номенклатуры.
//    * Заголовок             Строка - заголовок формы.
//    * ЗаголовокКатегории    Строка - заголовок колонок Категория на всех закладках формы.
//    * ЗаголовокРеквизита    Строка - заголовок колонки таблицы формы РеквизитыПредставлениеРеквизитаКатегории.
//    * ЗаголовокТипа         Строка - заголовок колонки таблицы формы РеквизитыТипРеквизитаРубрикатора.
//    * ИнформацияСписок      Строка - заголовок надписи ИнформацияСписок.
//    * ИнформацияРеквизиты   Строка - заголовок надписи ИнформацияРеквизиты.
//
Функция ПараметрыФормыСопоставленияНоменклатурыСРубрикатором() Экспорт 

	Возврат РаботаСНоменклатуройСлужебныйКлиентСервер.ПараметрыФормыСопоставленияНоменклатурыСРубрикатором();

КонецФункции

// Параметры формы условия отбора номенклатуры.
// 
// Возвращаемое значение:
//  Структура - параметры формы.Ключи:
//    * НастройкиОтбора - НастройкиКомпоновкиДанных - настройки отбора номенклатуры, заполняются из контекста, по умолчанию Неопределено
//
Функция ПараметрыФормыУсловияОтбораНоменклатуры() Экспорт
	
	ПараметрыФормы = Новый Структура;
	
	ПараметрыФормы.Вставить("НастройкиОтбора", Неопределено);
	
	Возврат ПараметрыФормы;
	
КонецФункции

#КонецОбласти

#Область КарточкаПубликуемогоТорговогоПредложения

// Открывает интерактивный выбор категории 1С:Бизнес-сеть для дальнейшего записи соответствия
//   номенклатуры категориям сервиса.
//
// Параметры:
//  Номенклатура                  - Массив из ОпределяемыйТип.НоменклатураБЭД - номенклатура, 
//              для которой требуется выбрать и записать соответствие категории сервиса
//  ФормаВладелец                 - ФормаКлиентскогоПриложения - владелец открывающейся формы выбора
//              категории.
//  ОписаниеОповещенияОЗавершении - ОписаниеОповещения - содержит описание процедуры, которая 
//              будет вызвана после записи соответствия со следующими параметрами: 
//                  * Результат - Булево - Истина - если номенклатура была сопоставлена, Ложь -
//                        в ином случае.
//                  * ДополнительныеПараметры - Структура -значение, которое было указано при 
//                        создании объекта ОписаниеОповещения.
//
Процедура СопоставитьНоменклатуруКатегорииСервиса(Номенклатура, ФормаВладелец, ОписаниеОповещенияОЗавершении) Экспорт

	ПараметрыФормыВыбора = ПараметрыФормыЗагрузкиКатегорий();
	ПараметрыФормыВыбора.СкрыватьОписаниеКатегорий = Истина;
	ПараметрыФормыВыбора.ОдиночныйРежимВыбора      = Истина;
	ПараметрыФормыВыбора.РежимВыбораКатегорий      = Истина;	
	ПараметрыФормыВыбора.ЗаголовокФормы = НСтр("ru = 'Выбор категории товаров 1С:Номенклатура'");
	ПараметрыФормыВыбора.ИдентификаторыВыбранныхКатегорий = 
		РаботаСНоменклатуройСлужебныйВызовСервера.ПолучитьИдентификаторыКатегорийНоменклатуры(Номенклатура);
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Номенклатура"  , Номенклатура);
	ДополнительныеПараметры.Вставить("ФормаВладелец" , ФормаВладелец);
	ДополнительныеПараметры.Вставить("ОписаниеОповещенияОЗавершении", ОписаниеОповещенияОЗавершении);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("СопоставитьНоменклатуруКатегорииСервисаЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	
	ОткрытьФорму("Обработка.РаботаСНоменклатурой.Форма.ЗагрузкаКатегорий", ПараметрыФормыВыбора, , , , , ОписаниеОповещения,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

#КонецОбласти

#Область РаботаСНоменклатурой

Процедура КупитьКарточкиНоменклатуры(ОповещениеОЗавершении, ИдентификаторыНоменклатуры, 
			Форма, ИдентификаторЗадания = Неопределено, ДекорацияДлительногоОжидания = Неопределено) Экспорт 
	
	ДлительнаяОперация = РаботаСНоменклатуройСлужебныйВызовСервера.КупитьКарточкиНоменклатурыВФоне(
		ИдентификаторыНоменклатуры, Форма.УникальныйИдентификатор, ИдентификаторЗадания);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Ложь;
	ПараметрыОжидания.ВыводитьОкноОжидания = ДекорацияДлительногоОжидания = Неопределено;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Ложь;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	
	ИдентификаторЗадания = ДлительнаяОперация.ИдентификаторЗадания;
	ОповещениеОЗавершении.ДополнительныеПараметры.Вставить("ИдентификаторЗадания", ИдентификаторЗадания);
	
	Если Не ДекорацияДлительногоОжидания = Неопределено
		И Не ДлительнаяОперация = Неопределено
		И ДлительнаяОперация.Статус = "Выполняется" Тогда
		ДекорацияДлительногоОжидания.Картинка = БиблиотекаКартинок.ДлительнаяОперация16;
	КонецЕсли;
	
	ПараметрыЗавершения = Новый Структура;
	ПараметрыЗавершения.Вставить("ОповещениеОЗавершении", ОповещениеОЗавершении);
	
	ДлительнаяОперацияЗавершение = Новый ОписаниеОповещения("ДлительнаяОперацияЗавершение",
		ЭтотОбъект, ПараметрыЗавершения);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация,
		ДлительнаяОперацияЗавершение,
		ПараметрыОжидания);
		
КонецПроцедуры

Процедура СоздатьНоменклатуруОбработкаОшибки(ОписаниеОшибки) Экспорт
	
	ПараметрыОткрытияФормы = Новый Структура;
	ПараметрыОткрытияФормы.Вставить("Ошибка", ОписаниеОшибки);
	
	ОткрытьФорму("Обработка.РаботаСНоменклатурой.Форма.ОшибкаПокупкиНоменклатуры", ПараметрыОткрытияФормы);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОткрытиеФорм

Процедура ОткрытьФормуКарточкиКатегории(Знач ИдентификаторыКатегорий, ВидНоменклатуры, 
		Владелец = Неопределено, Уникальность = Неопределено, ОповещениеОЗакрытии = Неопределено) Экспорт
	
	Идентификаторы = Новый СписокЗначений;
	
	Если ТипЗнч(ИдентификаторыКатегорий) = Тип("Строка") Тогда
		Идентификаторы.ЗагрузитьЗначения(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ИдентификаторыКатегорий));	
	ИначеЕсли ТипЗнч(ИдентификаторыКатегорий) = Тип("Массив") Тогда	
		Идентификаторы.ЗагрузитьЗначения(ИдентификаторыКатегорий);	
	ИначеЕсли ТипЗнч(ИдентификаторыКатегорий) = Тип("СписокЗначений") Тогда	
		Идентификаторы = ИдентификаторыКатегорий;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	
	ПараметрыФормы.Вставить("ИдентификаторыКатегорий", Идентификаторы);
	
	Если ВидНоменклатуры <> Неопределено Тогда
		ПараметрыФормы.Вставить("ВидНоменклатуры", ВидНоменклатуры);
	КонецЕсли;
	
	ОткрытьФорму("Обработка.РаботаСНоменклатурой.Форма.КарточкаКатегории", 
		ПараметрыФормы, Владелец, Уникальность,,, ОповещениеОЗакрытии);
	
КонецПроцедуры

Процедура ОткрытьФормуЗаполненияВидаНоменклатуры(ПараметрыФормы, 
			Владелец = Неопределено, ОповещениеОЗакрытии = Неопределено) Экспорт
	
	ИдентификаторыКатегорий = ПараметрыФормы.ИдентификаторыКатегорий;
	
	Идентификаторы = Новый СписокЗначений;
	
	Если ТипЗнч(ИдентификаторыКатегорий) = Тип("Строка") Тогда
		Идентификаторы.ЗагрузитьЗначения(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ИдентификаторыКатегорий));	
	ИначеЕсли ТипЗнч(ИдентификаторыКатегорий) = Тип("Массив") Тогда	
		Идентификаторы.ЗагрузитьЗначения(ИдентификаторыКатегорий);	
	ИначеЕсли ТипЗнч(ИдентификаторыКатегорий) = Тип("СписокЗначений") Тогда	
		Идентификаторы = ИдентификаторыКатегорий;		
	КонецЕсли;
	
	ПараметрыФормы.Вставить("ИдентификаторыКатегорий", Идентификаторы);
	
	ОткрытьФорму("Обработка.РаботаСНоменклатурой.Форма.ЗаполнениеВидаНоменклатуры", 
		ПараметрыФормы, Владелец,,,, ОповещениеОЗакрытии);
	
КонецПроцедуры

Процедура ОткрытьФормуПодбораХарактеристик(ИдентификаторНоменклатуры, 
			АдресДанныхНоменклатуры, 
			Знач ИдентификаторыХарактеристик, 
			ЭтоРежимПросмотра = Ложь, 
			Владелец = Неопределено, 
			ОповещениеОЗакрытии = Неопределено) Экспорт
	
	ОценкаПроизводительностиКлиент.ЗамерВремени(
		"ОбщийМодуль.РаботаСНоменклатуройКлиент.ПодобратьХарактеристики");
	
	ПараметрыФормы = Новый Структура;
	
	Если ЗначениеЗаполнено(ИдентификаторыХарактеристик) Тогда
		
		Если ЭтоАдресВременногоХранилища(ИдентификаторыХарактеристик) Тогда
			ИдентификаторыХарактеристик = ПолучитьИзВременногоХранилища(ИдентификаторыХарактеристик);
		КонецЕсли;
		
		Если ТипЗнч(ИдентификаторыХарактеристик) = Тип("Массив") Тогда
			Идентификаторы = Новый СписокЗначений;
			Идентификаторы.ЗагрузитьЗначения(ИдентификаторыХарактеристик);
			ПараметрыФормы.Вставить("ИдентификаторыХарактеристик", Идентификаторы);
		Иначе
			ПараметрыФормы.Вставить("ИдентификаторыХарактеристик", ИдентификаторыХарактеристик);
		КонецЕсли;
		
	КонецЕсли;
	
	ПараметрыФормы.Вставить("ИдентификаторНоменклатуры", ИдентификаторНоменклатуры);
	ПараметрыФормы.Вставить("АдресДанныхНоменклатуры",   АдресДанныхНоменклатуры);
	ПараметрыФормы.Вставить("ЭтоРежимПросмотра",         ЭтоРежимПросмотра);
	
	ОткрытьФорму("Обработка.РаботаСНоменклатурой.Форма.ПодборХарактеристик", ПараметрыФормы, Владелец,,,,ОповещениеОЗакрытии);
	
КонецПроцедуры

Процедура ОткрытьФормуВыбораКатегорий(Форма, ПараметрыОбработчика, ЗаполнятьПриВыборе, ОповещениеОЗакрытии)
	
	ОценкаПроизводительностиКлиент.ЗамерВремени(
		"ОбщийМодуль.РаботаСНоменклатуройКлиент.ПодобратьКатегорииИзСервиса");
	
	ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(ОповещениеОЗакрытии.ДополнительныеПараметры, ПараметрыОбработчика);
		
	ПараметрыФормы = Новый Структура;	
		
	ПараметрыФормы.Вставить("РежимВыбораКатегорий",             Истина);
	ПараметрыФормы.Вставить("ИдентификаторыВыбранныхКатегорий", Форма.РаботаСНоменклатурой_ИдентификаторыОбъектовСервиса.ВыгрузитьЗначения());
	ПараметрыФормы.Вставить("ЗаполнятьПриВыборе",               ЗаполнятьПриВыборе);
	
	ОткрытьФорму("Обработка.РаботаСНоменклатурой.Форма.ЗагрузкаКатегорий"
		, ПараметрыФормы, Форма, Форма.УникальныйИдентификатор,,, ОповещениеОЗакрытии, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

Процедура ОткрытьФормуВыбораНоменклатуры(Форма, ПараметрыОбработчика, ОповещениеОЗакрытии)
	
	ОценкаПроизводительностиКлиент.ЗамерВремени(
		"ОбщийМодуль.РаботаСНоменклатуройКлиент.ПодобратьНоменклатуруИзСервиса");
	
	Если Не ЗначениеЗаполнено(Форма.РаботаСНоменклатурой_ИдентификаторОбъектаСервиса) 
		И Не ЗначениеЗаполнено(Форма.РаботаСНоменклатурой_СтрокаПоискаОбъектаСервиса) Тогда
		
		Форма.РаботаСНоменклатурой_СтрокаПоискаОбъектаСервиса = СформироватьСтрокуПоискаПоПолямФормы(Форма);
	КонецЕсли;	
		
	ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(ОповещениеОЗакрытии.ДополнительныеПараметры, ПараметрыОбработчика);
	
	Если Не ЗначениеЗаполнено(Форма.РаботаСНоменклатурой_ИдентификаторОбъектаСервиса) Тогда
		Форма.РаботаСНоменклатурой_СтрокаПоискаОбъектаСервиса = СформироватьСтрокуПоискаПоПолямФормы(Форма);
	КонецЕсли;	
	
	СтрокаПоиска = ?(ЗначениеЗаполнено(Форма.РаботаСНоменклатурой_ИдентификаторОбъектаСервиса), 
			Форма.РаботаСНоменклатурой_ПредставлениеОбъектаСервиса, 
			Форма.РаботаСНоменклатурой_СтрокаПоискаОбъектаСервиса);
	
	ПараметрыФормы = ПараметрыФормыЗагрузкиНоменклатуры();
	
	ПараметрыФормы.РежимВыбораНоменклатуры   = Истина;
	ПараметрыФормы.РежимПривязкиНоменклатуры = Истина;
	ПараметрыФормы.ИдентификаторНоменклатуры = Форма.РаботаСНоменклатурой_ИдентификаторОбъектаСервиса;
	ПараметрыФормы.СтрокаПоиска              = СтрокаПоиска;
					
	ОткрытьФормуЗагрузкиНоменклатуры(ПараметрыФормы, Форма, ОповещениеОЗакрытии, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца)	
		
КонецПроцедуры

Процедура ОткрытьФормуНастройкиЗагрузкиНоменклатуры(РезультатСоздания, ДополнительныеПараметры)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("НоменклатураДляАнализа", РезультатСоздания.НоменклатураДляАнализа);
	
	Если РезультатСоздания.КоличествоКатегорийДляНастройки = 1 
		И РезультатСоздания.КоличествоНоменклатурыДляНастройки = 1 Тогда
		
		ОценкаПроизводительностиКлиент.ЗамерВремени(
			"ОбщийМодуль.РаботаСНоменклатуройКлиент.НастройкаЗагрузкиНоменклатурыОдиночная");
		
		ОткрытьФорму("Обработка.РаботаСНоменклатурой.Форма.НастройкаЗагрузкиНоменклатурыОдиночная", 
			ПараметрыФормы, ЭтотОбъект,,,, ДополнительныеПараметры.ОповещениеОЗавершении);
	Иначе
		
		ОценкаПроизводительностиКлиент.ЗамерВремени(
			"ОбщийМодуль.РаботаСНоменклатуройКлиент.НастройкаЗагрузкиНоменклатурыМножественная");
				
		ОткрытьФорму("Обработка.РаботаСНоменклатурой.Форма.НастройкаЗагрузкиНоменклатурыМножественная", 
			ПараметрыФормы, ЭтотОбъект,,,, ДополнительныеПараметры.ОповещениеОЗавершении);	
	КонецЕсли;
	
КонецПроцедуры

Процедура ОткрытьФормуКарточкиНоменклатурыСервиса(
			ПараметрыФормы, 
			Владелец = Неопределено, 
			ОповещениеОЗакрытии = Неопределено) Экспорт
			
	Если ТипЗнч(ПараметрыФормы.ИдентификаторыНоменклатуры) <> Тип("Массив") 
		ИЛИ Не ЗначениеЗаполнено(ПараметрыФормы.ИдентификаторыНоменклатуры) Тогда
		
		ВызватьИсключение НСтр("ru = 'Ошибка передачи идентификаторов номенклатуры.'");
	КонецЕсли;	
	
	Если ТипЗнч(ПараметрыФормы.ИдентификаторыНоменклатуры[0]) = Тип("Строка") Тогда	
	
		ПреобразованныйМассив = Новый Массив;
		
		Для каждого ЭлементКоллекции Из ПараметрыФормы.ИдентификаторыНоменклатуры Цикл
			ПреобразованныйМассив.Добавить(Новый Структура("ИдентификаторНоменклатуры, ИдентификаторХарактеристики", ЭлементКоллекции, ""));
		КонецЦикла;
		
		ПараметрыФормы.ИдентификаторыНоменклатуры = ПреобразованныйМассив;
				
	КонецЕсли;

	Уникальность = ПараметрыФормы.ИдентификаторыНоменклатуры[0].ИдентификаторНоменклатуры;
	
	ОткрытьФорму("Обработка.РаботаСНоменклатурой.Форма.КарточкаНоменклатуры", 
		ПараметрыФормы, Владелец, Уникальность,,, ОповещениеОЗакрытии);
		
КонецПроцедуры

#КонецОбласти

#Область ПараметрыОткрытияФорм

Функция ПараметрыФормыЗаполненияВидаНоменклатуры() Экспорт
	
	ПараметрыФормы = Новый Структура;
	
	ПараметрыФормы.Вставить("ИдентификаторыКатегорий",         Новый СписокЗначений);
	ПараметрыФормы.Вставить("ВидНоменклатуры",                 Неопределено);
	ПараметрыФормы.Вставить("ЭтоРежимСопоставленияРеквизитов", Ложь);
	ПараметрыФормы.Вставить("ЭтоВнешняяПривязка",              Ложь);
	ПараметрыФормы.Вставить("ЭтоПривязка",                     Ложь);
	ПараметрыФормы.Вставить("ВызовИзПомощникаОбновления",      Ложь);
	ПараметрыФормы.Вставить("ДанныеИнтерактивногоЗаполнения",  Неопределено);
	ПараметрыФормы.Вставить("РежимЗагрузкиХарактеристик",      "");
	
	Возврат ПараметрыФормы;
	
КонецФункции

Функция ПараметрыФормыКарточкиНоменклатурыСервиса() Экспорт
	
	Результат = Новый Структура;
	
	Результат.Вставить("ЭтоРежимПросмотра",          Ложь);
	Результат.Вставить("ИдентификаторыНоменклатуры", Новый Массив);
	Результат.Вставить("СтрокаШтрихкода",            "");
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытийФорм

Процедура ВыборРежимаОбновления(РежимОбновления, ДополнительныеПараметры) Экспорт
	
	Если РежимОбновления = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Форма = ДополнительныеПараметры.Форма;
	
	Форма.РаботаСНоменклатурой_ОбъектСервисаИзменен = Истина;
	
	Если РежимОбновления.Значение = "вручную" Тогда
		
		Если Форма.РаботаСНоменклатурой_ОбновляетсяАвтоматически Тогда
			Форма.Модифицированность = Истина;
		КонецЕсли;
		
		Форма.РаботаСНоменклатурой_ОбновляетсяАвтоматически = Ложь;
		
	ИначеЕсли РежимОбновления.Значение = "автоматически" Тогда
		
		Если Не Форма.РаботаСНоменклатурой_ОбновляетсяАвтоматически Тогда
			Форма.Модифицированность = Истина;
		КонецЕсли;
				
		Форма.РаботаСНоменклатурой_ОбновляетсяАвтоматически = Истина;
		
	КонецЕсли;
	
	РежимОбновленияЗаголовок = РаботаСНоменклатуройСлужебныйКлиентСервер.ЗаголовокГиперссылкиРежимаОбновления(
		Форма.РаботаСНоменклатурой_ОбновляетсяАвтоматически); 
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы, "РежимОбновления", 
		"Заголовок", РежимОбновленияЗаголовок); 
		
	
КонецПроцедуры

Процедура ОткрытьФормуЗаполненияНоменклатуры(Владелец, ПараметрыФормы, ОповещениеОЗакрытии)
	
	ОткрытьФорму("Обработка.РаботаСНоменклатурой.Форма.ЗаполнениеНоменклатуры", ПараметрыФормы, Владелец, , , , ОповещениеОЗакрытии);

КонецПроцедуры
	
Процедура ОбработкаРасшифровкиПредставленияКатегории(Элемент, 
			Расшифровка, СтандартнаяОбработка, ДополнительныеПараметры) Экспорт
	
	Если Элемент.ТекущаяОбласть.Имя = "Шапка_ВидыНоменклатуры" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		Если Не ЗначениеЗаполнено(Расшифровка) Тогда
			Возврат;
		КонецЕсли;
		
		Если ТипЗнч(Расшифровка) = Тип("Массив") Тогда
			
			РаботаСНоменклатуройКлиентПереопределяемый.ОткрытьФормуСпискаВидаНоменклатуры(Расшифровка, ЭтотОбъект);
			
		ИначеЕсли ТипЗнч(Расшифровка) <> Тип("Массив") Тогда	
			
			ИмяФормыВидаНоменклатуры = РаботаСНоменклатуройСлужебныйВызовСервера.ИмяФормыЭлементаВидаНоменклатуры();
			
			Если НЕ ЗначениеЗаполнено(ИмяФормыВидаНоменклатуры) Тогда
				Возврат;
			КонецЕсли;
			
			ОткрытьФорму(ИмяФормыВидаНоменклатуры, Новый Структура("Ключ", Расшифровка), ЭтотОбъект);		
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиОповещенияФормПрикладныхОбъектов

Процедура ПослеЗакрытияФормыСопоставления(Результат, ДополнительныеПараметры) Экспорт
	
	ДополнительныеПараметры.Форма.РаботаСНоменклатурой_ПредставлениеОбъектаСервиса = 
		Новый ФорматированнаяСтрока(
			РаботаСНоменклатуройСлужебныйВызовСервера.ПредставлениеСопоставленныхХарактеристик(ДополнительныеПараметры.СсылкаНаОбъект));
	
КонецПроцедуры

Процедура ОбработкаОповещенияВыбораРежимаОбновления(РезультатВыбора, ДополнительныеПараметры) Экспорт
	
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	////////////////////////////////////////////////////////////////////////////////
	
	Форма               =  ДополнительныеПараметры.Форма;
	СсылкаНаОбъект      = Форма.РаботаСНоменклатурой_СсылкаНаОбъект;
	ОповещениеОЗакрытии = ДополнительныеПараметры.ОповещениеОЗакрытии;
	
	Если РезультатВыбора.Значение = "РучноеОбновление" Тогда
		
		УстановитьРучнойРежимОбновленияНаФорме(Форма);
		
		Если Форма.РаботаСНоменклатурой_ТипОбъекта = "ВидНоменклатуры" Тогда // Категория
				
			ПараметрыФормы = ПараметрыФормыЗаполненияВидаНоменклатуры();
			
			ПараметрыФормы.ИдентификаторыКатегорий        = Форма.РаботаСНоменклатурой_ИдентификаторыОбъектовСервиса;
			ПараметрыФормы.ВидНоменклатуры                = СсылкаНаОбъект;
			ПараметрыФормы.ДанныеИнтерактивногоЗаполнения = ДополнительныеПараметры.ДанныеИнтерактивногоЗаполнения;
			ПараметрыФормы.РежимЗагрузкиХарактеристик =     Форма.РаботаСНоменклатурой_РежимЗагрузкиХарактеристик;
			
			ОткрытьФормуЗаполненияВидаНоменклатуры(ПараметрыФормы, Форма, ОповещениеОЗакрытии);
				
		ИначеЕсли Форма.РаботаСНоменклатурой_ТипОбъекта = "Номенклатура" Тогда // Номенклатура
						
			ПараметрыФормы = Новый Структура;
			
			ПараметрыФормы.Вставить("ИдентификаторНоменклатуры",            Форма.РаботаСНоменклатурой_ИдентификаторОбъектаСервиса);
			ПараметрыФормы.Вставить("НоменклатураНаименование",             Форма.РаботаСНоменклатурой_ПредставлениеОбъектаСервиса);
			ПараметрыФормы.Вставить("Номенклатура",                         СсылкаНаОбъект);
			ПараметрыФормы.Вставить("ДанныеИнтерактивногоЗаполнения",       ДополнительныеПараметры.ДанныеИнтерактивногоЗаполнения);
			ПараметрыФормы.Вставить("ИдентификаторыВыбранныхХарактеристик", Форма.РаботаСНоменклатурой_ИдентификаторыХарактеристик);
			ПараметрыФормы.Вставить("ИдентификаторХарактеристики",          Форма.РаботаСНоменклатурой_ИдентификаторХарактеристики);
			
			ОткрытьФормуЗаполненияНоменклатуры(Форма, ПараметрыФормы, ОповещениеОЗакрытии);

		КонецЕсли;
		
	ИначеЕсли РезультатВыбора.Значение = "АвтоматическоеОбновление" Тогда
		
		Если Форма.РаботаСНоменклатурой_ТипОбъекта = "ВидНоменклатуры" Тогда
			ПоказатьВопросПриВключенииАвтообновленияВидаНоменклатуры(СсылкаНаОбъект, 
				Форма.РаботаСНоменклатурой_ИдентификаторыОбъектовСервиса.ВыгрузитьЗначения(), Форма);
		ИначеЕсли Форма.РаботаСНоменклатурой_ТипОбъекта = "Номенклатура" Тогда	
			ПоказатьВопросПриВключенииАвтообновленияНоменклатуры(СсылкаНаОбъект, 
				Форма.РаботаСНоменклатурой_ИдентификаторОбъектаСервиса, Форма);
		КонецЕсли;
		
	КонецЕсли;
		
КонецПроцедуры

Процедура ИзменениеТекстаРедактированияОбъектаСервисаЗавершение(Знач Результат, ДополнительныеПараметры) Экспорт
	
	Форма = ДополнительныеПараметры.Форма;
	Если Форма.РаботаСНоменклатурой_ИдентификаторЗадания <> ДополнительныеПараметры.ИдентификаторЗадания Тогда 
		Возврат;
	КонецЕсли;
	
	Форма.РаботаСНоменклатурой_ИдентификаторЗадания = Неопределено;
	
	ИмяЭлемента = ДополнительныеПараметры.ИмяЭлемента;
	Форма.Элементы.РаботаСНоменклатуройДекорацияДлительнойОперации.Картинка = БиблиотекаКартинок.Пустая;
	
	КоличествоНайденныхКарточек = Неопределено;
	
	Если Результат = Неопределено Тогда // отменено пользователем.
		Возврат;
	КонецЕсли;

	Если ЭтоАдресВременногоХранилища(Результат.АдресРезультата) Тогда 
		КоличествоНайденныхКарточек = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
	КонецЕсли;
	
	Если КоличествоНайденныхКарточек = Неопределено Тогда
		РаботаСНоменклатуройСлужебныйКлиентСервер.СброситьДанныеОбъектаСервиса(Форма);
		Возврат;	
	КонецЕсли;
		
	Если КоличествоНайденныхКарточек > 0 Тогда
		Если Форма.РаботаСНоменклатурой_РежимПредставленияОбъектаСервиса = "ПолеВвода" Тогда
			Форма.Элементы[ИмяЭлемента].ПодсказкаВвода 
				= ТекстКоличествоНайденныхЭлементов(
					ИмяЭлемента, КоличествоНайденныхКарточек, Форма.РаботаСНоменклатурой_РежимПредставленияОбъектаСервиса);
		Иначе
			Форма.РаботаСНоменклатурой_ПредставлениеОбъектаСервиса 
				= ТекстКоличествоНайденныхЭлементов(
					ИмяЭлемента, КоличествоНайденныхКарточек, Форма.РаботаСНоменклатурой_РежимПредставленияОбъектаСервиса);
		КонецЕсли;		
	Иначе					
		Если Форма.РаботаСНоменклатурой_РежимПредставленияОбъектаСервиса = "Гиперссылка" Тогда
			Форма.РаботаСНоменклатурой_ПредставлениеОбъектаСервиса = СтроковыеФункцииКлиентСервер.
				ФорматированнаяСтрока(НСтр("ru = '<b>Похожих карточек не найдено.  </b><a href = ""Ссылка"">Выбрать</a>'"));
		Иначе
			РаботаСНоменклатуройСлужебныйКлиентСервер.СброситьДанныеОбъектаСервиса(Форма);	
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область КонтекстныйПоискНоменклатуры

Функция ТекстКоличествоНайденныхЭлементов(ИмяЭлемента, КоличествоНайденныхКарточек, Назначение)
	
	Если Назначение = "ПолеВвода" Тогда
		Если КоличествоНайденныхКарточек >= 500 Тогда 
			Возврат НСтр("ru = 'Обнаружено подходящих карточек: 500+'");
		Иначе
			Возврат СтрШаблон(НСтр("ru = 'Обнаружено подходящих карточек: %1'"), КоличествоНайденныхКарточек);
		КонецЕсли;
	Иначе
		Если КоличествоНайденныхКарточек >= 50 Тогда 
			Возврат СтроковыеФункцииКлиентСервер.
				ФорматированнаяСтрока(НСтр("ru = '<b>Найдено более 50 карточек. </b><a href = ""Ссылка"">Выбрать</a>'"));
		Иначе
			Возврат СтроковыеФункцииКлиентСервер.
				ФорматированнаяСтрока(СтрШаблон(НСтр("ru = '<b>Найдено %1 похожих карточек.  </b><a href = ""Ссылка"">Выбрать</a>'"), 
				КоличествоНайденныхКарточек));
		КонецЕсли;
	КонецЕсли;
		
КонецФункции

Функция СформироватьСтрокуПоискаПоПолямФормы(Форма)
	
	СтрокаПоиска = "";
	СписокПолей = Форма.РаботаСНоменклатурой_СписокПолейДляПодбораНоменклатуры.ВыгрузитьЗначения();
	////////////////////////////////////////////////////////////////////////////////
	
	СписокПодстрок = Новый Массив;
	
	Для каждого ЭлементКоллекции Из СписокПолей Цикл
		СписокПодстрок.Добавить(Форма.Элементы[ЭлементКоллекции].ТекстРедактирования);
	КонецЦикла;
	
	СтрокаПоиска = СтрСоединить(СписокПодстрок, " ");
	
	Возврат СокрЛП(СтрокаПоиска);
	
КонецФункции

// Формирование строки поиска номенклатуры.
//
// Параметры:
//  Форма	 - ФормаКлиентскогоПриложения - форма события.
//  Элемент	 - ПолеФормы - изменяемый элемент формы.
//
Процедура СобратьСтрокуПоиска(Форма, Элемент)
	
	Если Не Форма.РаботаСНоменклатурой_СервисДоступен Тогда
		Возврат;
	КонецЕсли;
	
	Если Не Форма.РаботаСНоменклатурой_ЗаполненыДанныеАутентификации Тогда
		Возврат;
	КонецЕсли;
		
	Если Не ПустаяСтрока(Форма.РаботаСНоменклатурой_ИдентификаторОбъектаСервиса) Тогда 
		Возврат;
	КонецЕсли;
	
	Если Форма.РаботаСНоменклатурой_РежимПредставленияОбъектаСервиса = "Гиперссылка" Тогда
		Форма.РаботаСНоменклатурой_ПредставлениеОбъектаСервиса = СтроковыеФункцииКлиентСервер.
			ФорматированнаяСтрока(НСтр("ru = '<b>Идет поиск... </b><a href = ""Ссылка"">Выбрать</a>'"));
	КонецЕсли;
	
	Форма.РаботаСНоменклатурой_СтрокаПоискаОбъектаСервиса = СформироватьСтрокуПоискаПоПолямФормы(Форма);
		
	Если Не ЗначениеЗаполнено(Форма.РаботаСНоменклатурой_СтрокаПоискаОбъектаСервиса) Тогда
		РаботаСНоменклатуройСлужебныйКлиентСервер.СброситьДанныеОбъектаСервиса(Форма);
		Возврат;
	КонецЕсли;
	
	СписокПолей = Форма.РаботаСНоменклатурой_СписокПолейДляПодбораНоменклатуры.ВыгрузитьЗначения();
	СписокПолей.Добавить("ПредставлениеНоменклатурыСервиса");
	
	Если Не СписокПолей.Найти(Элемент.Имя) = Неопределено Тогда 
		ДлительнаяОперация = РаботаСНоменклатуройСлужебныйВызовСервера.ПолучитьКоличествоКарточекНоменклатурыПоСтрокеПоискаВФоне(
			Форма.РаботаСНоменклатурой_СтрокаПоискаОбъектаСервиса, Форма.УникальныйИдентификатор, Форма.РаботаСНоменклатурой_ИдентификаторЗадания);
	Иначе
		Возврат;
	КонецЕсли;
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	
	ПараметрыОжидания.ВыводитьПрогрессВыполнения      = Ложь;
	ПараметрыОжидания.ВыводитьОкноОжидания            = Ложь;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Ложь;
	ПараметрыОжидания.ВыводитьСообщения               = Ложь;
	
	Если Не ДлительнаяОперация = Неопределено
		И ДлительнаяОперация.Статус = "Выполняется" Тогда
		Форма.Элементы.РаботаСНоменклатуройДекорацияДлительнойОперации.Картинка = БиблиотекаКартинок.ДлительнаяОперация16;
	КонецЕсли;
	
	Форма.РаботаСНоменклатурой_ИдентификаторЗадания = ДлительнаяОперация.ИдентификаторЗадания;
	
	ПараметрыЗавершения = Новый Структура();
	ПараметрыЗавершения.Вставить("ИмяЭлемента",          "ПредставлениеНоменклатурыСервиса");
	ПараметрыЗавершения.Вставить("Форма",                Форма);
	ПараметрыЗавершения.Вставить("ИдентификаторЗадания", Форма.РаботаСНоменклатурой_ИдентификаторЗадания);
	
	ОповещениеОЗавершении = Новый ОписаниеОповещения(
		"ИзменениеТекстаРедактированияОбъектаСервисаЗавершение", 
		ЭтотОбъект, ПараметрыЗавершения);   
	
	ПараметрыЗавершенияДлительнойОперации = Новый Структура();
	ПараметрыЗавершенияДлительнойОперации.Вставить("ОповещениеОЗавершении", ОповещениеОЗавершении);
	ПараметрыЗавершенияДлительнойОперации.Вставить("ВыводитьОшибки", Ложь);
	
	ДлительнаяОперацияЗавершение = Новый ОписаниеОповещения("ДлительнаяОперацияЗавершение",
		ЭтотОбъект, ПараметрыЗавершенияДлительнойОперации);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация,
		ДлительнаяОперацияЗавершение,
		ПараметрыОжидания);
	
КонецПроцедуры

#КонецОбласти

#Область РаботаСКатегориями

Процедура ПолучитьПредставлениеКатегорииПоИдентификатору(ОповещениеОЗавершении, Идентификатор, 
			Форма, ИдентификаторЗадания = Неопределено, ДекорацияДлительногоОжидания = Неопределено) Экспорт
	
	НаборПолей = 1;

	ДлительнаяОперация = РаботаСНоменклатуройСлужебныйВызовСервера.ПолучитьКатегориюПоИдентификаторуВФоне(
		Идентификатор, НаборПолей, Форма.УникальныйИдентификатор, ИдентификаторЗадания);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Ложь;
	ПараметрыОжидания.ВыводитьОкноОжидания = ДекорацияДлительногоОжидания = Неопределено;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Ложь;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	
	ИдентификаторЗадания = ДлительнаяОперация.ИдентификаторЗадания;
	ОповещениеОЗавершении.ДополнительныеПараметры.Вставить("ИдентификаторЗадания", ИдентификаторЗадания);
	
	Если Не ДекорацияДлительногоОжидания = Неопределено
		И Не ДлительнаяОперация = Неопределено
		И ДлительнаяОперация.Статус = "Выполняется" Тогда
		ДекорацияДлительногоОжидания.Картинка = БиблиотекаКартинок.ДлительнаяОперация16;
	КонецЕсли;
	
	ПараметрыЗавершения = Новый Структура;
	ПараметрыЗавершения.Вставить("ОповещениеОЗавершении", ОповещениеОЗавершении);
	
	ДлительнаяОперацияЗавершение = Новый ОписаниеОповещения("ДлительнаяОперацияЗавершение",
		ЭтотОбъект, ПараметрыЗавершения);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация,
		ДлительнаяОперацияЗавершение,
		ПараметрыОжидания);
		
КонецПроцедуры

Процедура ПолучитьОписаниеКатегорииПоИдентификатору(ОповещениеОЗавершении, Идентификатор, Форма, 
			ИдентификаторЗадания = Неопределено, ДекорацияДлительногоОжидания = Неопределено) Экспорт
	
	НаборПолей = 2;

	ДлительнаяОперация = РаботаСНоменклатуройСлужебныйВызовСервера.ПолучитьКатегориюПоИдентификаторуВФоне(
		Идентификатор, НаборПолей, Форма.УникальныйИдентификатор, ИдентификаторЗадания);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Ложь;
	ПараметрыОжидания.ВыводитьОкноОжидания = ДекорацияДлительногоОжидания = Неопределено;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Ложь;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	
	ИдентификаторЗадания = ДлительнаяОперация.ИдентификаторЗадания;
	ОповещениеОЗавершении.ДополнительныеПараметры.Вставить("ИдентификаторЗадания", ИдентификаторЗадания);
	
	Если Не ДекорацияДлительногоОжидания = Неопределено
		И Не ДлительнаяОперация = Неопределено
		И ДлительнаяОперация.Статус = "Выполняется" Тогда
		ДекорацияДлительногоОжидания.Картинка = БиблиотекаКартинок.ДлительнаяОперация16;
	КонецЕсли;
	
	ПараметрыЗавершения = Новый Структура;
	ПараметрыЗавершения.Вставить("ОповещениеОЗавершении", ОповещениеОЗавершении);
	
	ДлительнаяОперацияЗавершение = Новый ОписаниеОповещения("ДлительнаяОперацияЗавершение",
		ЭтотОбъект, ПараметрыЗавершения);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация,
		ДлительнаяОперацияЗавершение,
		ПараметрыОжидания);
		
КонецПроцедуры

Процедура ПолучитьПолноеОписаниеКатегорииПоИдентификатору(ОповещениеОЗавершении, Идентификатор, Форма, 
			ИдентификаторЗадания = Неопределено, ДекорацияДлительногоОжидания = Неопределено) Экспорт
	
	НаборПолей = 3;

	ДлительнаяОперация = РаботаСНоменклатуройСлужебныйВызовСервера.ПолучитьКатегориюПоИдентификаторуВФоне(
		Идентификатор, НаборПолей, Форма.УникальныйИдентификатор, ИдентификаторЗадания);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Ложь;
	ПараметрыОжидания.ВыводитьОкноОжидания = ДекорацияДлительногоОжидания = Неопределено;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Ложь;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	
	ИдентификаторЗадания = ДлительнаяОперация.ИдентификаторЗадания;
	ОповещениеОЗавершении.ДополнительныеПараметры.Вставить("ИдентификаторЗадания", ИдентификаторЗадания);
	
	Если Не ДекорацияДлительногоОжидания = Неопределено
		И Не ДлительнаяОперация = Неопределено
		И ДлительнаяОперация.Статус = "Выполняется" Тогда
		ДекорацияДлительногоОжидания.Картинка = БиблиотекаКартинок.ДлительнаяОперация16;
	КонецЕсли;
	
	ПараметрыЗавершения = Новый Структура;
	ПараметрыЗавершения.Вставить("ОповещениеОЗавершении", ОповещениеОЗавершении);
	
	ДлительнаяОперацияЗавершение = Новый ОписаниеОповещения("ДлительнаяОперацияЗавершение",
		ЭтотОбъект, ПараметрыЗавершения);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация,
		ДлительнаяОперацияЗавершение,
		ПараметрыОжидания);
		
КонецПроцедуры

Процедура ПолучитьДополнительныеРеквизитыКатегорий(ОповещениеОЗавершении, Идентификатор, Форма, 
			ИдентификаторЗадания = Неопределено, ДекорацияДлительногоОжидания = Неопределено) Экспорт
	
	ДлительнаяОперация = РаботаСНоменклатуройСлужебныйВызовСервера.ПолучитьДополнительныеРеквизитыКатегорийВФоне(
		Идентификатор, Форма.УникальныйИдентификатор, ИдентификаторЗадания);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Ложь;
	ПараметрыОжидания.ВыводитьОкноОжидания = ДекорацияДлительногоОжидания = Неопределено;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Ложь;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	
	ИдентификаторЗадания = ДлительнаяОперация.ИдентификаторЗадания;
	ОповещениеОЗавершении.ДополнительныеПараметры.Вставить("ИдентификаторЗадания", ИдентификаторЗадания);
	
	Если Не ДекорацияДлительногоОжидания = Неопределено
		И Не ДлительнаяОперация = Неопределено
		И ДлительнаяОперация.Статус = "Выполняется" Тогда
		ДекорацияДлительногоОжидания.Картинка = БиблиотекаКартинок.ДлительнаяОперация16;
	КонецЕсли;
	
	ПараметрыЗавершения = Новый Структура;
	ПараметрыЗавершения.Вставить("ОповещениеОЗавершении", ОповещениеОЗавершении);
	
	ДлительнаяОперацияЗавершение = Новый ОписаниеОповещения("ДлительнаяОперацияЗавершение",
		ЭтотОбъект, ПараметрыЗавершения);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация,
		ДлительнаяОперацияЗавершение,
		ПараметрыОжидания);
		
КонецПроцедуры

Процедура ПолучитьФильтрыКатегории(ОповещениеОЗавершении, Идентификатор, Форма, 
			ИдентификаторЗадания = Неопределено, ДекорацияДлительногоОжидания = Неопределено) Экспорт
	
	ДлительнаяОперация = РаботаСНоменклатуройСлужебныйВызовСервера.ПолучитьФильтрыКатегорииВФоне(
		Идентификатор, Форма.УникальныйИдентификатор, ИдентификаторЗадания);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Ложь;
	ПараметрыОжидания.ВыводитьОкноОжидания = ДекорацияДлительногоОжидания = Неопределено;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Ложь;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	
	ИдентификаторЗадания = ДлительнаяОперация.ИдентификаторЗадания;
	ОповещениеОЗавершении.ДополнительныеПараметры.Вставить("ИдентификаторЗадания", ИдентификаторЗадания);
	
	Если Не ДекорацияДлительногоОжидания = Неопределено
		И Не ДлительнаяОперация = Неопределено
		И ДлительнаяОперация.Статус = "Выполняется" Тогда
		ДекорацияДлительногоОжидания.Картинка = БиблиотекаКартинок.ДлительнаяОперация16;
	КонецЕсли;
	
	ПараметрыЗавершения = Новый Структура;
	ПараметрыЗавершения.Вставить("ОповещениеОЗавершении", ОповещениеОЗавершении);
	
	ДлительнаяОперацияЗавершение = Новый ОписаниеОповещения("ДлительнаяОперацияЗавершение",
		ЭтотОбъект, ПараметрыЗавершения);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация,
		ДлительнаяОперацияЗавершение,
		ПараметрыОжидания);
		
КонецПроцедуры

Процедура ПолучитьЗначенияДополнительногоРеквизитаКатегории(ОповещениеОЗавершении, ПараметрыПоиска, Форма, 
			ИдентификаторЗадания = Неопределено, ДекорацияДлительногоОжидания = Неопределено) Экспорт 
	
	ДлительнаяОперация = РаботаСНоменклатуройСлужебныйВызовСервера.ПолучитьЗначенияДополнительногоРеквизитаКатегорииВФоне(
		ПараметрыПоиска, Форма.УникальныйИдентификатор, ИдентификаторЗадания);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Ложь;
	ПараметрыОжидания.ВыводитьОкноОжидания = ДекорацияДлительногоОжидания = Неопределено;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Ложь;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	
	ИдентификаторЗадания = ДлительнаяОперация.ИдентификаторЗадания;
	ОповещениеОЗавершении.ДополнительныеПараметры.Вставить("ИдентификаторЗадания", ИдентификаторЗадания);
	
	ПараметрыЗавершения = Новый Структура;
	ПараметрыЗавершения.Вставить("ОповещениеОЗавершении", ОповещениеОЗавершении);
	
	ДлительнаяОперацияЗавершение = Новый ОписаниеОповещения("ДлительнаяОперацияЗавершение",
		ЭтотОбъект, ПараметрыЗавершения);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация,
		ДлительнаяОперацияЗавершение,
		ПараметрыОжидания);
		
КонецПроцедуры
	
Процедура ПолучитьПроизводителейКатегории(ОповещениеОЗавершении, ПараметрыПоиска, Форма, 
			ИдентификаторЗадания = Неопределено, ДекорацияДлительногоОжидания = Неопределено) Экспорт 
	
	ДлительнаяОперация = РаботаСНоменклатуройСлужебныйВызовСервера.ПолучитьПроизводителейКатегорииВФоне(
		ПараметрыПоиска, Форма.УникальныйИдентификатор, ИдентификаторЗадания);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Ложь;
	ПараметрыОжидания.ВыводитьОкноОжидания = ДекорацияДлительногоОжидания = Неопределено;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Ложь;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	
	ИдентификаторЗадания = ДлительнаяОперация.ИдентификаторЗадания;
	ОповещениеОЗавершении.ДополнительныеПараметры.Вставить("ИдентификаторЗадания", ИдентификаторЗадания);
	
	Если Не ДекорацияДлительногоОжидания = Неопределено
		И Не ДлительнаяОперация = Неопределено
		И ДлительнаяОперация.Статус = "Выполняется" Тогда
		ДекорацияДлительногоОжидания.Картинка = БиблиотекаКартинок.ДлительнаяОперация16;
	КонецЕсли;
	
	ПараметрыЗавершения = Новый Структура;
	ПараметрыЗавершения.Вставить("ОповещениеОЗавершении", ОповещениеОЗавершении);
	
	ДлительнаяОперацияЗавершение = Новый ОписаниеОповещения("ДлительнаяОперацияЗавершение",
		ЭтотОбъект, ПараметрыЗавершения);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация,
		ДлительнаяОперацияЗавершение,
		ПараметрыОжидания);
		
КонецПроцедуры

Процедура СформироватьПредставлениеКарточкиКатегории(ОповещениеОЗавершении, ИдентификаторыКатегорий, Форма, 
			ИдентификаторЗадания = Неопределено, ДекорацияДлительногоОжидания = Неопределено) Экспорт 
	
	ДлительнаяОперация = РаботаСНоменклатуройСлужебныйВызовСервера.СформироватьПредставлениеКарточкиКатегорииВФоне(
		ИдентификаторыКатегорий, Форма.УникальныйИдентификатор, ИдентификаторЗадания);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Ложь;
	ПараметрыОжидания.ВыводитьОкноОжидания = ДекорацияДлительногоОжидания = Неопределено;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Ложь;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	
	ИдентификаторЗадания = ДлительнаяОперация.ИдентификаторЗадания;
	ОповещениеОЗавершении.ДополнительныеПараметры.Вставить("ИдентификаторЗадания", ИдентификаторЗадания);
	
	Если Не ДекорацияДлительногоОжидания = Неопределено
		И Не ДлительнаяОперация = Неопределено
		И ДлительнаяОперация.Статус = "Выполняется" Тогда
		ДекорацияДлительногоОжидания.Картинка = БиблиотекаКартинок.ДлительнаяОперация48;
	КонецЕсли;
	
	ПараметрыЗавершения = Новый Структура;
	ПараметрыЗавершения.Вставить("ОповещениеОЗавершении", ОповещениеОЗавершении);
	
	ДлительнаяОперацияЗавершение = Новый ОписаниеОповещения("ДлительнаяОперацияЗавершение",
		ЭтотОбъект, ПараметрыЗавершения);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация,
		ДлительнаяОперацияЗавершение,
		ПараметрыОжидания);
		
КонецПроцедуры

Процедура ЗагрузитьКатегории(ОповещениеОЗавершении, 
			КатегорииКЗагрузке, 
			Форма, 
			ИдентификаторЗадания = Неопределено, 
			ДекорацияДлительногоОжидания = Неопределено, 
			ДополнительныеПараметры = Неопределено) Экспорт 
	
	ДлительнаяОперация = РаботаСНоменклатуройСлужебныйВызовСервера.ЗагрузитьКатегорииВФоне(
		КатегорииКЗагрузке, Форма.УникальныйИдентификатор, ИдентификаторЗадания, ДополнительныеПараметры);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Ложь;
	ПараметрыОжидания.ВыводитьОкноОжидания = ДекорацияДлительногоОжидания = Неопределено;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Ложь;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	
	ИдентификаторЗадания = ДлительнаяОперация.ИдентификаторЗадания;
	ОповещениеОЗавершении.ДополнительныеПараметры.Вставить("ИдентификаторЗадания", ИдентификаторЗадания);
		
	ПараметрыЗавершения = Новый Структура;
	ПараметрыЗавершения.Вставить("ОповещениеОЗавершении", ОповещениеОЗавершении);
	
	ДлительнаяОперацияЗавершение = Новый ОписаниеОповещения("ДлительнаяОперацияЗавершение",
		ЭтотОбъект, ПараметрыЗавершения);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация,
		ДлительнаяОперацияЗавершение,
		ПараметрыОжидания);
		
КонецПроцедуры

Процедура ПолучитьДанныеКатегорийСервиса(ОповещениеОЗавершении, ИдентификаторыКатегорий, Форма, 
			ИдентификаторЗадания = Неопределено, ДекорацияДлительногоОжидания = Неопределено) Экспорт
			
	УникальныйИдентификатор 
		= ?(Форма.ВладелецФормы = Неопределено, Форма.УникальныйИдентификатор, Форма.ВладелецФормы.УникальныйИдентификатор);
						
	ДлительнаяОперация = РаботаСНоменклатуройСлужебныйВызовСервера.ПолучитьДанныеКатегорийСервиса(
		ИдентификаторыКатегорий, УникальныйИдентификатор, ИдентификаторЗадания);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Ложь;
	ПараметрыОжидания.ВыводитьОкноОжидания = ДекорацияДлительногоОжидания = Неопределено;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Ложь;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	
	ИдентификаторЗадания = ДлительнаяОперация.ИдентификаторЗадания;
	ОповещениеОЗавершении.ДополнительныеПараметры.Вставить("ИдентификаторЗадания", ИдентификаторЗадания);
	
	ПараметрыЗавершения = Новый Структура;
	ПараметрыЗавершения.Вставить("ОповещениеОЗавершении", ОповещениеОЗавершении);
	
	ДлительнаяОперацияЗавершение = Новый ОписаниеОповещения("ДлительнаяОперацияЗавершение",
		ЭтотОбъект, ПараметрыЗавершения);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация,
		ДлительнаяОперацияЗавершение,
		ПараметрыОжидания);
		
КонецПроцедуры

// Получить значения дополнительного реквизита, в соответствии с представлением значений базы.
//
// Параметры:
//  ОповещениеОЗавершении		 - ОписаниеОповещения - оповещение для обработки результата.
//  ПараметрыЗапроса - Структура - параметры метода.
//   Ключи:
//    * ИдентификаторКатегории                - Строка - идентификатор категории.
//    * ИдентификаторДополнительногоРеквизита - Строка - идентификатор реквизита.
//    * ИдентификаторКатегории                - Массив (Строка) - строковое представление значений базы.
//  Форма						 - ФормаКлиентскогоПриложения - форма.
//  ИдентификаторЗадания		 - УникальныйИдентификатор - идентификатор задания.
//  ДекорацияДлительногоОжидания - ДекорацияФормы - декорация формы.
//
Процедура ПолучитьЗначенияСоответствующиеЗаданным(ОповещениеОЗавершении, ПараметрыЗапроса, 
			Форма, ИдентификаторЗадания = Неопределено, ДекорацияДлительногоОжидания = Неопределено) Экспорт
	
	ДлительнаяОперация = РаботаСНоменклатуройСлужебныйВызовСервера.ПолучитьЗначенияСоответствующиеЗаданнымВФоне(
		ПараметрыЗапроса, Форма.УникальныйИдентификатор, ИдентификаторЗадания);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Ложь;
	ПараметрыОжидания.ВыводитьОкноОжидания = ДекорацияДлительногоОжидания = Неопределено;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Ложь;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	
	ИдентификаторЗадания = ДлительнаяОперация.ИдентификаторЗадания;
	ОповещениеОЗавершении.ДополнительныеПараметры.Вставить("ИдентификаторЗадания", ИдентификаторЗадания);
		
	ПараметрыЗавершения = Новый Структура;
	ПараметрыЗавершения.Вставить("ОповещениеОЗавершении", ОповещениеОЗавершении);
	
	ДлительнаяОперацияЗавершение = Новый ОписаниеОповещения("ДлительнаяОперацияЗавершение",
	ЭтотОбъект, ПараметрыЗавершения);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация,
	ДлительнаяОперацияЗавершение,
	ПараметрыОжидания);
	
КонецПроцедуры

#КонецОбласти

#Область РаботаСНоменклатурой

#Область СозданиеНоменклатуры

Процедура СоздатьНоменклатуруИнтерактивно(РезультатВыполнения, ДополнительныеПараметры)
	
	ПараметрыЗавершения = Новый Структура;
	ПараметрыЗавершения.Вставить("ОповещениеОЗавершении", ДополнительныеПараметры.ОповещениеОЗавершении);
	
	СоздатьНоменклатуруИнтерактивноЗавершение = Новый ОписаниеОповещения("СоздатьНоменклатуруИнтерактивноЗавершение",
		ЭтотОбъект, ПараметрыЗавершения);
		
	ПараметрыФормы = Новый Структура;
	
	ПараметрыФормы.Вставить("РаботаСНоменклатурой_АдресДанныхЗаполнения", РезультатВыполнения.АдресДанныхЗаполнения);
		
	РаботаСНоменклатуройКлиентПереопределяемый.СоздатьНоменклатуруИнтерактивно(ПараметрыФормы,
		СоздатьНоменклатуруИнтерактивноЗавершение);
		
КонецПроцедуры

Процедура СоздатьНоменклатуруИнтерактивноЗавершение(Знач НоменклатураСсылка, ДополнительныеПараметры) Экспорт
	
	ДополнительныеПараметры.Свойство("НоменклатураСсылка", НоменклатураСсылка);
	
	Если НЕ ЗначениеЗаполнено(НоменклатураСсылка) Тогда 
		Возврат;
	КонецЕсли;
	
	ИдентификаторНоменклатуры = "";
	
	ДополнительныеПараметры.Свойство("ИдентификаторНоменклатуры", ИдентификаторНоменклатуры);
	
	// Заполнение параметров оповещения.
	
	Шаблон = РаботаСНоменклатуройСлужебныйКлиентСервер.ШаблонДанныхНоменклатуры();
	
	Шаблон.Номенклатура              = НоменклатураСсылка;
	Шаблон.ИдентификаторНоменклатуры = ИдентификаторНоменклатуры;
	
	Результат = Новый Структура();
	
	Результат.Вставить("ДолжноБытьСоздано",      1);
	Результат.Вставить("НовыеЭлементы",          ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Шаблон));
	Результат.Вставить("НоменклатураДляАнализа", Неопределено);
	Результат.Вставить("Создано",                ?(ЗначениеЗаполнено(НоменклатураСсылка), 1, 0));

	ОповеститьОСозданииНоменклатуры(Результат.НовыеЭлементы);
		
	ОповещениеОЗавершении = Неопределено;
		
	Если ДополнительныеПараметры.ОповещениеОЗавершении.
		ДополнительныеПараметры.Свойство("ИсходноеОписаниеОповещения", ОповещениеОЗавершении) Тогда
		
		ВыполнитьОбработкуОповещения(ОповещениеОЗавершении, Результат);
	Иначе
		ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеОЗавершении, Результат);
	КонецЕсли;	
	
КонецПроцедуры

Процедура ОповеститьПользователяОСоздании(РезультатСоздания, ПризнакОшибки, ПроставитьПризнакЗагрузки, Форма)
	
	РезультатСоздания.Вставить("Форма", Форма);
	
	Если ПризнакОшибки Тогда 
		
		НажатиеОповещенияПользователя = "";
		КартинкаОповещения = БиблиотекаКартинок.Ошибка32;
		ТекстОповещения = НСтр("ru = 'Не удалось создать номенклатуру'");
		
	Иначе
		
		НажатиеОповещенияПользователя = Новый ОписаниеОповещения("НажатиеОповещенияПользователя",
			ЭтотОбъект, РезультатСоздания);
		
		Если РезультатСоздания.Создано = 0 Тогда
			КартинкаОповещения = БиблиотекаКартинок.Предупреждение32;
			ТекстОповещения = НСтр("ru = 'Номенклатура не создана'");
		Иначе
			КартинкаОповещения = БиблиотекаКартинок.Успешно32;
			ТекстОповещения = СтрШаблон(НСтр("ru = 'Создано объектов: %1'"), РезультатСоздания.Создано);
		КонецЕсли;
				
		ПроставитьПризнакЗагрузки = Истина;
				
	КонецЕсли;
	
	ПоказатьОповещениеПользователя(НСтр("ru = 'Загрузка номенклатуры'"),
		НажатиеОповещенияПользователя, ТекстОповещения, КартинкаОповещения,
		СтатусОповещенияПользователя.Информация, Форма.УникальныйИдентификатор);
		
КонецПроцедуры

Процедура ЗагрузитьДополнительныеДанныеДляНоменклатуры(Форма)
	
	ПараметрыЗагрузкиХарактеристик = Неопределено;
	ПараметрыЗагрузкиИзображений   = Неопределено;
	
	Если РаботаСНоменклатуройСлужебныйКлиентСервер.БудутЗагружатьсяХарактеристики(Форма) Тогда
		
		ПараметрыЗагрузкиХарактеристик = РаботаСНоменклатуройСлужебныйКлиентСервер.ПараметрыЗагрузкиХарактеристик();
		
		ПараметрыЗагрузкиХарактеристик.Номенклатура                = Форма.РаботаСНоменклатурой_СсылкаНаОбъект;
		ПараметрыЗагрузкиХарактеристик.ИдентификаторыХарактеристик = Форма.РаботаСНоменклатурой_ИдентификаторыХарактеристик.ВыгрузитьЗначения();
		ПараметрыЗагрузкиХарактеристик.ЗагружатьВсеХарактеристики  = Форма.РаботаСНоменклатурой_РежимЗагрузкиХарактеристик = "Все";
		
	КонецЕсли;
	
	Если БудутЗагружатьсяИзображения(Форма) Тогда
		
		ПараметрыЗагрузкиИзображений = Новый Структура;
		
		ПараметрыЗагрузкиИзображений.Вставить("Номенклатура",              Форма.РаботаСНоменклатурой_СсылкаНаОбъект);
		ПараметрыЗагрузкиИзображений.Вставить("ИдентификаторНоменклатуры", Форма.РаботаСНоменклатурой_ИдентификаторОбъектаСервиса);
		
	КонецЕсли;	
		
	ПараметрыЗагрузкиДанных = Новый Структура;
	
	ПараметрыЗагрузкиДанных.Вставить("ПараметрыЗагрузкиХарактеристик", ПараметрыЗагрузкиХарактеристик);
	ПараметрыЗагрузкиДанных.Вставить("ПараметрыЗагрузкиИзображений", ПараметрыЗагрузкиИзображений);
	
	Оповещение = Новый ОписаниеОповещения("ЗагрузитьДополнительныеДанныеЗавершение", 
		ЭтотОбъект, Новый Структура("Форма", Форма));
	
	ЗагрузитьДополнительныеДанные(Оповещение, ПараметрыЗагрузкиДанных, Форма);
			
КонецПроцедуры

Процедура ЗагрузитьДополнительныеДанные(ОповещениеОЗавершении, ПараметрыСоздания, Форма, 
		ИдентификаторЗадания = Неопределено, ДекорацияДлительногоОжидания = Неопределено)
	
	ДлительнаяОперация = РаботаСНоменклатуройСлужебныйВызовСервера.ЗагрузитьДополнительныеДанныеВФоне(
		ПараметрыСоздания, Форма.УникальныйИдентификатор, ИдентификаторЗадания);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Ложь;
	ПараметрыОжидания.ВыводитьОкноОжидания = ДекорацияДлительногоОжидания = Неопределено;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Ложь;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	
	ИдентификаторЗадания = ДлительнаяОперация.ИдентификаторЗадания;
	ОповещениеОЗавершении.ДополнительныеПараметры.Вставить("ИдентификаторЗадания", ИдентификаторЗадания);
	
	Если Не ДекорацияДлительногоОжидания = Неопределено
		И Не ДлительнаяОперация = Неопределено
		И ДлительнаяОперация.Статус = "Выполняется" Тогда
		ДекорацияДлительногоОжидания.Картинка = БиблиотекаКартинок.ДлительнаяОперация16;
	КонецЕсли;
	
	ПараметрыЗавершения = Новый Структура;
	ПараметрыЗавершения.Вставить("ОповещениеОЗавершении", ОповещениеОЗавершении);
	ПараметрыЗавершения.Вставить("Форма",                 Форма);
	
	ДлительнаяОперацияЗавершение = Новый ОписаниеОповещения("ДлительнаяОперацияЗавершение",
		ЭтотОбъект, ПараметрыЗавершения);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация,
		ДлительнаяОперацияЗавершение,
		ПараметрыОжидания);
	
КонецПроцедуры

Процедура ПодготовитьПараметрыЗаполненияНоменклатуры(ИдентификаторНоменклатуры, 
	ДанныеИнтерактивногоЗаполнения, ОповещениеФормы, ДополнительныеПараметры)
	
	Если ДополнительныеПараметры.Свойство("ВыводитьОкноОжидания") Тогда
		ВыводитьОкноОжидания = ДополнительныеПараметры.ВыводитьОкноОжидания;
	Иначе 
		ВыводитьОкноОжидания = Истина;
	КонецЕсли;
	
	Форма = ДополнительныеПараметры.Форма;
	
	АдресРезультата = ПоместитьВоВременноеХранилище(Неопределено, Форма.УникальныйИдентификатор);
	
	ДлительнаяОперация = РаботаСНоменклатуройСлужебныйВызовСервера.ПодготовкаПараметровЗаполненияНоменклатурыВФоне(
		Форма.УникальныйИдентификатор, ИдентификаторНоменклатуры, ДанныеИнтерактивногоЗаполнения, АдресРезультата);
	
	ПараметрыОповещения = Новый Структура;
	ПараметрыОповещения.Вставить("ОписаниеОповещения", ОповещениеФормы);
	ПараметрыОповещения.Вставить("Форма", Форма);
	ПараметрыОповещения.Вставить("ПараметрыФормы", ДополнительныеПараметры.ПараметрыФормы);
	ПараметрыОповещения.Вставить("АдресРезультата", АдресРезультата);
	
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ПодготовкаПараметровЗаполненияНоменклатурыЗавершение", 
		ЭтотОбъект, ПараметрыОповещения);

	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	ПараметрыОжидания.ВыводитьОкноОжидания = ВыводитьОкноОжидания;
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Ложь;
	ПараметрыОжидания.ВыводитьСообщения = Ложь;
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
	
КонецПроцедуры

#КонецОбласти

#Область ПолучениеДанныхПоНоменклатуре

Процедура ПолучитьНоменклатуруПоШтрихкодам(ОповещениеОЗавершении, Штрихкоды, 
			Форма, ИдентификаторЗадания = Неопределено, ДекорацияДлительногоОжидания = Неопределено) Экспорт
	
	ДлительнаяОперация = РаботаСНоменклатуройСлужебныйВызовСервера.ПолучитьНоменклатуруПоШтрихкодамВФоне(
		Штрихкоды, Форма.УникальныйИдентификатор, ИдентификаторЗадания);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Ложь;
	ПараметрыОжидания.ВыводитьОкноОжидания = ДекорацияДлительногоОжидания = Неопределено;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Ложь;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	
	ИдентификаторЗадания = ДлительнаяОперация.ИдентификаторЗадания;
	ОповещениеОЗавершении.ДополнительныеПараметры.Вставить("ИдентификаторЗадания", ИдентификаторЗадания);
	
	ПараметрыЗавершения = Новый Структура;
	ПараметрыЗавершения.Вставить("ОповещениеОЗавершении", ОповещениеОЗавершении);
	
	ДлительнаяОперацияЗавершение = Новый ОписаниеОповещения("ДлительнаяОперацияЗавершение",
		ЭтотОбъект, ПараметрыЗавершения);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация,
		ДлительнаяОперацияЗавершение,
		ПараметрыОжидания);
		
КонецПроцедуры

Процедура ПолучитьПереченьНоменклатуры(ОповещениеОЗавершении, ПараметрыПоиска, 
			Форма, ИдентификаторЗадания = Неопределено, ДекорацияДлительногоОжидания = Неопределено) Экспорт 
	
	ДлительнаяОперация = РаботаСНоменклатуройСлужебныйВызовСервера.ПолучитьПереченьНоменклатурыВФоне(
		ПараметрыПоиска, Форма.УникальныйИдентификатор, ИдентификаторЗадания);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Ложь;
	ПараметрыОжидания.ВыводитьОкноОжидания = ДекорацияДлительногоОжидания = Неопределено;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Ложь;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	
	ИдентификаторЗадания = ДлительнаяОперация.ИдентификаторЗадания;
	ОповещениеОЗавершении.ДополнительныеПараметры.Вставить("ИдентификаторЗадания", ИдентификаторЗадания);
	
	Если Не ДекорацияДлительногоОжидания = Неопределено
		И Не ДлительнаяОперация = Неопределено
		И ДлительнаяОперация.Статус = "Выполняется" Тогда
		ДекорацияДлительногоОжидания.Картинка = БиблиотекаКартинок.ДлительнаяОперация16;
	КонецЕсли;
	
	ПараметрыЗавершения = Новый Структура;
	ПараметрыЗавершения.Вставить("ОповещениеОЗавершении", ОповещениеОЗавершении);
	
	ДлительнаяОперацияЗавершение = Новый ОписаниеОповещения("ДлительнаяОперацияЗавершение",
		ЭтотОбъект, ПараметрыЗавершения);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация,
		ДлительнаяОперацияЗавершение,
		ПараметрыОжидания);
		
КонецПроцедуры
	
Процедура СформироватьПредставленияКарточекНоменклатуры(
			ОповещениеОЗавершении, 
			ИдентификаторыНоменклатуры, 
			Форма, 
			ИдентификаторЗадания = Неопределено, 
			ДекорацияДлительногоОжидания = Неопределено, 
			ЭтоРежимПросмотра = Ложь) Экспорт 
	
	ДлительнаяОперация = РаботаСНоменклатуройСлужебныйВызовСервера.СформироватьПредставленияКарточекНоменклатурыВФоне(
		ИдентификаторыНоменклатуры, ЭтоРежимПросмотра, Форма.УникальныйИдентификатор, ИдентификаторЗадания);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Ложь;
	ПараметрыОжидания.ВыводитьОкноОжидания = ДекорацияДлительногоОжидания = Неопределено;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Ложь;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	
	ИдентификаторЗадания = ДлительнаяОперация.ИдентификаторЗадания;
	ОповещениеОЗавершении.ДополнительныеПараметры.Вставить("ИдентификаторЗадания", ИдентификаторЗадания);
	
	Если ДекорацияДлительногоОжидания <> Неопределено
		И ДлительнаяОперация <> Неопределено
		И ДлительнаяОперация.Статус = "Выполняется" Тогда
		
		ДекорацияДлительногоОжидания.Картинка = БиблиотекаКартинок.ДлительнаяОперация48;
	КонецЕсли;
	
	ПараметрыЗавершения = Новый Структура;
	ПараметрыЗавершения.Вставить("ОповещениеОЗавершении", ОповещениеОЗавершении);
	
	ДлительнаяОперацияЗавершение = Новый ОписаниеОповещения("ДлительнаяОперацияЗавершение",
		ЭтотОбъект, ПараметрыЗавершения);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация,
		ДлительнаяОперацияЗавершение,
		ПараметрыОжидания);
		
КонецПроцедуры
	
Процедура ПолучитьДанныеНоменклатурыСервиса(ОповещениеОЗавершении, ПараметрыМетода, 
			Форма, ИдентификаторЗадания = Неопределено, ДекорацияДлительногоОжидания = Неопределено) Экспорт
			
	УникальныйИдентификатор 
		= ?(Форма.ВладелецФормы = Неопределено ИЛИ ТипЗнч(Форма.ВладелецФормы) <> Тип("ФормаКлиентскогоПриложения"),
			Форма.УникальныйИдентификатор, Форма.ВладелецФормы.УникальныйИдентификатор);
			
	ДлительнаяОперация = РаботаСНоменклатуройСлужебныйВызовСервера.ПолучитьДанныеНоменклатурыСервиса(
		ПараметрыМетода, УникальныйИдентификатор, ИдентификаторЗадания);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Ложь;
	ПараметрыОжидания.ВыводитьОкноОжидания = ДекорацияДлительногоОжидания = Неопределено;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Ложь;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	
	ИдентификаторЗадания = ДлительнаяОперация.ИдентификаторЗадания;
	ОповещениеОЗавершении.ДополнительныеПараметры.Вставить("ИдентификаторЗадания", ИдентификаторЗадания);
	
	ПараметрыЗавершения = Новый Структура;
	ПараметрыЗавершения.Вставить("ОповещениеОЗавершении", ОповещениеОЗавершении);
	
	ДлительнаяОперацияЗавершение = Новый ОписаниеОповещения("ДлительнаяОперацияЗавершение",
		ЭтотОбъект, ПараметрыЗавершения);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация,
		ДлительнаяОперацияЗавершение,
		ПараметрыОжидания);
		
КонецПроцедуры

Функция ПараметрыЗапросаДанныхНоменклатуры() Экспорт
	
	Результат = Новый Структура;
	
	Результат.Вставить("Идентификаторы",                       Неопределено);
	Результат.Вставить("АктуализироватьВспомогательныеДанные", Ложь);
	
	Возврат Результат;
		
КонецФункции

#КонецОбласти

#КонецОбласти

#Область РаботаСХарактеристиками

Процедура ЗагрузитьХарактеристики(ОповещениеОЗавершении, ПараметрыСоздания, Форма, 
			ИдентификаторЗадания = Неопределено, ДекорацияДлительногоОжидания = Неопределено) Экспорт
	
	ДлительнаяОперация = РаботаСНоменклатуройСлужебныйВызовСервера.ЗагрузитьХарактеристикиДляНоменклатурыВФоне(
		ПараметрыСоздания, Форма.УникальныйИдентификатор, ИдентификаторЗадания);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Ложь;
	ПараметрыОжидания.ВыводитьОкноОжидания = ДекорацияДлительногоОжидания = Неопределено;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Ложь;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	
	ИдентификаторЗадания = ДлительнаяОперация.ИдентификаторЗадания;
	ОповещениеОЗавершении.ДополнительныеПараметры.Вставить("ИдентификаторЗадания", ИдентификаторЗадания);
	
	ПараметрыЗавершения = Новый Структура;
	ПараметрыЗавершения.Вставить("ОповещениеОЗавершении", ОповещениеОЗавершении);
	ПараметрыЗавершения.Вставить("Форма",                 Форма);
	
	ДлительнаяОперацияЗавершение = Новый ОписаниеОповещения("ДлительнаяОперацияЗавершение",
		ЭтотОбъект, ПараметрыЗавершения);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация,
		ДлительнаяОперацияЗавершение,
		ПараметрыОжидания);
	
КонецПроцедуры

Процедура ПолучитьДанныеХарактеристикСервиса(ОповещениеОЗавершении, ПараметрыЗапросаХарактеристик, 
			Форма, ИдентификаторЗадания = Неопределено, ДекорацияДлительногоОжидания = Неопределено) Экспорт
	
	ДлительнаяОперация = РаботаСНоменклатуройСлужебныйВызовСервера.ПолучитьДанныеХарактеристикВФоне(
		ПараметрыЗапросаХарактеристик, Форма.УникальныйИдентификатор, ИдентификаторЗадания);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Ложь;
	ПараметрыОжидания.ВыводитьОкноОжидания = ДекорацияДлительногоОжидания = Неопределено;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Ложь;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	
	ИдентификаторЗадания = ДлительнаяОперация.ИдентификаторЗадания;
	ОповещениеОЗавершении.ДополнительныеПараметры.Вставить("ИдентификаторЗадания", ИдентификаторЗадания);
	
	ПараметрыЗавершения = Новый Структура;
	ПараметрыЗавершения.Вставить("ОповещениеОЗавершении", ОповещениеОЗавершении);
	ПараметрыЗавершения.Вставить("Форма",                 Форма);
	
	ДлительнаяОперацияЗавершение = Новый ОписаниеОповещения("ДлительнаяОперацияЗавершение",
		ЭтотОбъект, ПараметрыЗавершения);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация,
		ДлительнаяОперацияЗавершение,
		ПараметрыОжидания);
	
КонецПроцедуры

#КонецОбласти

#Область РаботаСРекламнымиЗаписями

Процедура ЗакэшироватьИзображенияБаннеров(ОповещениеОЗавершении, ИдентификаторыИсточников, 
			Форма, ИдентификаторЗадания = Неопределено) Экспорт 
	
	ДлительнаяОперация = РаботаСНоменклатуройСлужебныйВызовСервера.ЗакэшироватьИзображенияБаннеровФоне(
		ИдентификаторыИсточников, Форма.УникальныйИдентификатор, ИдентификаторЗадания);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Ложь;
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Ложь;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	
	ПараметрыЗавершения = Новый Структура;
	ПараметрыЗавершения.Вставить("ОповещениеОЗавершении", ОповещениеОЗавершении);
	
	ДлительнаяОперацияЗавершение = Новый ОписаниеОповещения("ДлительнаяОперацияЗавершение",
		ЭтотОбъект, ПараметрыЗавершения);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация,
		ДлительнаяОперацияЗавершение,
		ПараметрыОжидания);

	
КонецПроцедуры

#КонецОбласти

#Область СостояниеСервиса

Процедура ПроверитьСостояниеСервисаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено 
		ИЛИ Не ЭтоАдресВременногоХранилища(Результат.АдресРезультата) Тогда
		
		Состояние =  РаботаСНоменклатуройСлужебныйКлиентСервер.ОписаниеСостоянияСервиса();
	Иначе
		Состояние = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Состояние) Тогда
		Состояние = РаботаСНоменклатуройСлужебныйКлиентСервер.ОписаниеСостоянияСервиса();
	КонецЕсли;
	
	ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеОЗавершении, Состояние);
	
КонецПроцедуры

Процедура ПроверитьСостояниеСервиса(ОповещениеОЗавершении, Форма, ИдентификаторЗадания = Неопределено) Экспорт
	
	ДлительнаяОперация = РаботаСНоменклатуройСлужебныйВызовСервера.ПроверитьСостояниеСервисаВФоне(
		Форма.УникальныйИдентификатор, ИдентификаторЗадания);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Ложь;
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Ложь;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	
	ИдентификаторЗадания = ДлительнаяОперация.ИдентификаторЗадания;
	ОповещениеОЗавершении.ДополнительныеПараметры.Вставить("ИдентификаторЗадания", ИдентификаторЗадания);
	
	ПараметрыЗавершения = Новый Структура;
	ПараметрыЗавершения.Вставить("ОповещениеОЗавершении", ОповещениеОЗавершении);
	
	ПроверитьСостояниеСервисаЗавершение = Новый ОписаниеОповещения("ПроверитьСостояниеСервисаЗавершение",
		ЭтотОбъект, ПараметрыЗавершения);
	
	ПараметрыЗавершения = Новый Структура;
	ПараметрыЗавершения.Вставить("ОповещениеОЗавершении", ПроверитьСостояниеСервисаЗавершение);
	
	ДлительнаяОперацияЗавершение = Новый ОписаниеОповещения("ДлительнаяОперацияЗавершение",
		ЭтотОбъект, ПараметрыЗавершения);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация,
		ДлительнаяОперацияЗавершение,
		ПараметрыОжидания);
		
КонецПроцедуры

Процедура ПодключитьТестовыйПериодЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = ПредопределенноеЗначение("Перечисление.СостоянияПодключенияСервисов.Подключен") Тогда
		Результат = Истина;
	ИначеЕсли Результат = ПредопределенноеЗначение("Перечисление.СостоянияПодключенияСервисов.Подключение") Тогда 
		Результат = Неопределено;
	Иначе
		Результат = Ложь;
	КонецЕсли;
		
	Если ТипЗнч(ДополнительныеПараметры) = Тип("Структура")
		И ДополнительныеПараметры.Свойство("ОбработчикЗавершения") 
		И ДополнительныеПараметры.ОбработчикЗавершения <> Неопределено Тогда
		
		ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОбработчикЗавершения, Результат);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПодключитьТестовыйПериод(
		Владелец,
		ДополнительныеПараметрыОбработчика,
		ОбработчикПриЗакрытииФормы = Неопределено) Экспорт
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Владелец",                    Владелец);
	ДополнительныеПараметры.Вставить("ОбработчикПриЗакрытииФормы",  ОбработчикПриЗакрытииФормы);
	ДополнительныеПараметры.Вставить("ОбработчикЗавершения",
		ДополнительныеПараметрыОбработчика.ОбработчикЗавершения);
	
	ОповещениеПриЗавершенииПодключения = Новый ОписаниеОповещения(
		"ПодключитьТестовыйПериодЗавершение",
		ЭтотОбъект,
		ДополнительныеПараметры);
	
	ПодключениеСервисовСопровожденияКлиент.ПодключитьТестовыйПериод(
		РаботаСНоменклатуройСлужебныйКлиентСервер.ИдентификаторСервиса(),
		Владелец,
		ОповещениеПриЗавершенииПодключения);
	
КонецПроцедуры

#КонецОбласти

#Область ВспомогательныеМетоды

Процедура ОбработкаВыбораНоменклатуры(ДанныеВыбора, 
			ДополнительныеПараметры, 
			ДанныеИнтерактивногоЗаполнения, 
			ОповещениеОЗакрытии)
	
	Форма = ДополнительныеПараметры.Форма;
	
	ИдентификаторыВыбранныхХарактеристик = Новый СписокЗначений;
		
	ВыбранныеОбъекты = ДанныеВыбора.ВыбранныеОбъекты[0];
	
	Если ЗначениеЗаполнено(ВыбранныеОбъекты.ИдентификаторХарактеристики) Тогда
		ИдентификаторыВыбранныхХарактеристик.Добавить(ВыбранныеОбъекты.ИдентификаторХарактеристики);
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	
	ПараметрыФормы.Вставить("ИдентификаторНоменклатуры", ВыбранныеОбъекты.ИдентификаторНоменклатуры);
	ПараметрыФормы.Вставить("Номенклатура",              Форма.РаботаСНоменклатурой_СсылкаНаОбъект);
	
	Если ЗначениеЗаполнено(Форма.РаботаСНоменклатурой_СсылкаНаОбъект)
		И РаботаСНоменклатуройСлужебныйВызовСервера.НоменклатураСопоставлена(
			Форма.РаботаСНоменклатурой_СсылкаНаОбъект, ВыбранныеОбъекты.ИдентификаторНоменклатуры) Тогда
		
		Оповещение = Новый ОписаниеОповещения("ПослеСопоставленияХарактеристик", 
			ЭтотОбъект, Новый Структура("Форма", Форма));		
				
		Если ЗначениеЗаполнено(ВыбранныеОбъекты.ИдентификаторХарактеристики) Тогда
			// Если выбрана характеристика привязанной номенклатуры - открывается форма привязки характеристики.
			
			ПараметрыФормы.Вставить("ИдентификаторХарактеристики", ВыбранныеОбъекты.ИдентификаторХарактеристики);
			ПараметрыФормы.Вставить("НаименованиеНоменклатуры",    ВыбранныеОбъекты.НаименованиеНоменклатуры);
			ПараметрыФормы.Вставить("НаименованиеХарактеристики",  ВыбранныеОбъекты.НаименованиеХарактеристики);
						
			ОткрытьФорму("Обработка.РаботаСНоменклатурой.Форма.ПривязкаХарактеристики", ПараметрыФормы, Форма,,,,Оповещение);	
			
		Иначе			
			// Если выбрана номенклатура у которой есть характеристики, при этом она уже сопоставлена с текущей 
			// - открывается форма сопоставления характеристик.			
			
			ПараметрыФормыСопоставления = ПараметрыФормыСопоставленияХарактеристик();
			
			ЗаполнитьЗначенияСвойств(ПараметрыФормыСопоставления, ПараметрыФормы);
			
			ПараметрыФормыСопоставления.НаименованиеНоменклатурыСервиса = ВыбранныеОбъекты.НаименованиеНоменклатуры;
			
			ОткрытьФормуСопоставленияХарактеристик(ПараметрыФормы, Форма, Оповещение);
			
		КонецЕсли;
	
	ИначеЕсли ДополнительныеПараметры.Свойство("НеОткрыватьФормуЗаполненияНоменклатуры") 
		И ДополнительныеПараметры.НеОткрыватьФормуЗаполненияНоменклатуры Тогда
		
		ПараметрыФормы.Вставить("НоменклатураНаименование",             ВыбранныеОбъекты.НаименованиеНоменклатуры);
		ПараметрыФормы.Вставить("ИдентификаторыВыбранныхХарактеристик", ИдентификаторыВыбранныхХарактеристик);
		ПараметрыФормы.Вставить("ЭтоПривязка",                          Истина);
		ПараметрыФормы.Вставить("ДанныеИнтерактивногоЗаполнения", ДанныеИнтерактивногоЗаполнения);
		ДополнительныеПараметры.Вставить("ПараметрыФормы", ПараметрыФормы);
		
		ПодготовитьПараметрыЗаполненияНоменклатуры(ВыбранныеОбъекты.ИдентификаторНоменклатуры,
			ДанныеИнтерактивногоЗаполнения, ОповещениеОЗакрытии, ДополнительныеПараметры);
		
	Иначе
		
		// В случае привязки к новой 1С:Номенклатуры - открывается окно заполнения номенклатуры
		
		ПараметрыФормы.Вставить("НоменклатураНаименование",             ВыбранныеОбъекты.НаименованиеНоменклатуры);
		ПараметрыФормы.Вставить("ДанныеИнтерактивногоЗаполнения",       ДанныеИнтерактивногоЗаполнения);
		ПараметрыФормы.Вставить("ИдентификаторыВыбранныхХарактеристик", ИдентификаторыВыбранныхХарактеристик);
		ПараметрыФормы.Вставить("ЭтоПривязка",                          Истина);
		
		ОткрытьФормуЗаполненияНоменклатуры(Форма, ПараметрыФормы, ОповещениеОЗакрытии);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаВыбораКатегории(ДанныеВыбора, 
			ДополнительныеПараметры, 
			ДанныеИнтерактивногоЗаполнения, 
			ОповещениеОЗакрытии)
	
	Форма            = ДополнительныеПараметры.Форма;
	ВыбранныеОбъекты = ДанныеВыбора.ВыбранныеОбъекты;
	
	ИдентификаторыКатегорий = Новый СписокЗначений;
	
	Для каждого ЭлементКоллекции Из ВыбранныеОбъекты Цикл
		ИдентификаторыКатегорий.Добавить(ЭлементКоллекции.Идентификатор, ЭлементКоллекции.Наименование);
	КонецЦикла;
	
	ПараметрыФормы = ПараметрыФормыЗаполненияВидаНоменклатуры();
	
	ПараметрыФормы.ВидНоменклатуры                = Форма.РаботаСНоменклатурой_СсылкаНаОбъект;
	ПараметрыФормы.ИдентификаторыКатегорий        = ИдентификаторыКатегорий;
	ПараметрыФормы.ДанныеИнтерактивногоЗаполнения = ДанныеИнтерактивногоЗаполнения;
	ПараметрыФормы.РежимЗагрузкиХарактеристик     = Форма.РаботаСНоменклатурой_РежимЗагрузкиХарактеристик;
	ПараметрыФормы.ЭтоПривязка                    = Истина;	
	
	ОткрытьФормуЗаполненияВидаНоменклатуры(
		ПараметрыФормы, ДополнительныеПараметры.Форма, ОповещениеОЗакрытии);
			
КонецПроцедуры

Процедура ЗагрузитьНоменклатуруПродолжение(Знач Результат, ДополнительныеПараметры) Экспорт
	
	РезультатВыполнения = РезультатВыполненияЗагрузкиНоменклатуры(Результат);
		
	Если ЕстьОшибкиПриВыполненииЗагрузкиНоменклатуры(Результат, РезультатВыполнения, ДополнительныеПараметры) Тогда 
		Возврат;
	КонецЕсли;

	Если РезультатВыполнения.СозданиеИнтерактивно Тогда 
		СоздатьНоменклатуруИнтерактивно(РезультатВыполнения, ДополнительныеПараметры);
		ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеОЗавершении, Неопределено); // для скрытия элементов длительной операции
	Иначе
		ЗагрузитьНоменклатуруЗавершение(РезультатВыполнения, ДополнительныеПараметры);	
	КонецЕсли;
	
КонецПроцедуры

Функция РезультатВыполненияЗагрузкиНоменклатуры(РезультатФоновогоЗадания)
	
	Результат = Неопределено;
	
	Если РезультатФоновогоЗадания = Неопределено Тогда
		Возврат Результат;
	КонецЕсли;	
		
	ВывестиСообщения(РезультатФоновогоЗадания, Истина);
	
	Если ЭтоАдресВременногоХранилища(РезультатФоновогоЗадания.АдресРезультата) Тогда
		Результат = ПолучитьИзВременногоХранилища(РезультатФоновогоЗадания.АдресРезультата);
	КонецЕсли;
			
	Возврат Результат;
	
КонецФункции

Функция ЕстьОшибкиПриВыполненииЗагрузкиНоменклатуры(Результат, РезультатВыполнения, ДополнительныеПараметры)
	
	Если Результат <> Неопределено
		И РезультатВыполнения <> Неопределено
		И Не РезультатВыполнения.ЕстьОшибки Тогда
		
		Возврат Ложь;
		
	КонецЕсли;
			
	ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеОЗавершении, Неопределено);
	
	Если РезультатВыполнения <> Неопределено 
		И РезультатВыполнения.ЕстьОшибки Тогда
		
		ПоказатьУведомлениеОбОшибке(РезультатВыполнения);
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

Процедура ПоказатьУведомлениеОбОшибке(РезультатВыполнения)
	
	КартинкаОповещения = БиблиотекаКартинок.Ошибка32;
	ТекстОповещения = НСтр("ru = 'Создать не удалось'");
	ПоказатьОповещениеПользователя(НСтр("ru = 'Создание номенклатуры'"),,
		ТекстОповещения, КартинкаОповещения,
		СтатусОповещенияПользователя.Информация);
	
	СоздатьНоменклатуруОбработкаОшибки(РезультатВыполнения.ОписаниеОшибки);
	
КонецПроцедуры

Процедура ДлительнаяОперацияЗавершение(Результат, ДополнительныеПараметры) Экспорт 
	
	Отказ = Ложь;
	ТекстСообщения = "";
	ВыводитьОшибки = Истина;
	
	Если ДополнительныеПараметры.Свойство("ВыводитьОшибки") Тогда 
		ВыводитьОшибки = ДополнительныеПараметры.ВыводитьОшибки;
	КонецЕсли;
	
	ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеОЗавершении, 
		?(Результат = Неопределено, ПустойРезультат(), Результат));
	
	Если Результат = Неопределено Тогда // Отменено пользователем.
		Отказ = Истина;
		ТекстСообщения = НСтр("ru = 'Фоновое задание отменено пользователем'");
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Ошибка" Тогда
		Отказ = Истина;
		ТекстСообщения = Результат.КраткоеПредставлениеОшибки;
	КонецЕсли;
	
	Если Отказ Тогда
		Если Не ПустаяСтрока(ТекстСообщения) И ВыводитьОшибки Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1 %2'"),
					ОбщегоНазначенияКлиент.ДатаСеанса(), ТекстСообщения));
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

Функция ПустойРезультат()
	
	Результат = Новый Структура;
	
	Результат.Вставить("Сообщения",       Новый Массив);
	Результат.Вставить("АдресРезультата", "");
	
	Возврат Результат;
	
КонецФункции

Функция ЭтоФормаНастройки(Форма)
	
	Возврат Форма.ИмяФормы = "Обработка.РаботаСНоменклатурой.Форма.НастройкаЗагрузкиНоменклатурыОдиночная" 
		ИЛИ Форма.ИмяФормы = "Обработка.РаботаСНоменклатурой.Форма.НастройкаЗагрузкиНоменклатурыМножественная";
		
КонецФункции

Процедура НажатиеОповещенияПользователя(ДополнительныеПараметры) Экспорт 
	
	Номенклатура = Новый Массив;
	
	Для каждого ЭлементКоллекции Из ДополнительныеПараметры.НовыеЭлементы Цикл
		Если Номенклатура.Найти(ЭлементКоллекции.Номенклатура) = Неопределено Тогда
			Номенклатура.Добавить(ЭлементКоллекции.Номенклатура);
		КонецЕсли;
	КонецЦикла;
	
	ПараметрыОткрытияФормыСписка = Новый Структура();
	ПараметрыОткрытияФормыСписка.Вставить("Отбор", Новый Структура("Ссылка", Номенклатура));
	
	ИмяФормыСпискаНоменклатуры = РаботаСНоменклатуройСлужебныйВызовСервера.ИмяФормыСпискаНоменклатуры();
	
	Если ЗначениеЗаполнено(ИмяФормыСпискаНоменклатуры) Тогда
		ОткрытьФорму(ИмяФормыСпискаНоменклатуры, ПараметрыОткрытияФормыСписка, ДополнительныеПараметры.Форма, ДополнительныеПараметры.Форма.УникальныйИдентификатор);
	КонецЕсли;
	
КонецПроцедуры

Процедура ВывестиСообщения(Результат, ВыводитьПредставлениеОшибки = Ложь) Экспорт
	
	Если ТипЗнч(Результат) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.Свойство("Сообщения") 
		И Результат.Сообщения <> Неопределено Тогда
		
		Для каждого Сообщение Из Результат.Сообщения Цикл
			Сообщение.Сообщить();
		КонецЦикла;
	КонецЕсли;
	
	Если ВыводитьПредставлениеОшибки
		И Результат.Свойство("Статус") 
		И Результат.Статус = "Ошибка" Тогда
		
		Если ЗначениеЗаполнено(Результат.КраткоеПредставлениеОшибки) Тогда
			ТекстСообщения = Результат.КраткоеПредставлениеОшибки;
		ИначеЕсли ЗначениеЗаполнено(Результат.ПодробноеПредставлениеОшибки) Тогда
			ТекстСообщения = Результат.ПодробноеПредставлениеОшибки;
		Иначе
			ТекстСообщения = НСтр("ru = 'Ошибка выполнения операции'");
		КонецЕсли;
		
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		
	КонецЕсли;
		
КонецПроцедуры

Процедура ЗагрузитьНоменклатуруЗавершение(РезультатСоздания, ДополнительныеПараметры)
		
	Ошибка = Ложь;
	ПроставитьПризнакЗагрузки = Ложь;
	
	ОповеститьПользователяОСоздании(РезультатСоздания, Ошибка, ПроставитьПризнакЗагрузки, ДополнительныеПараметры.Форма);
	
	Если Ошибка Тогда 
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(РезультатСоздания.НовыеЭлементы) Тогда
		ОповеститьОСозданииНоменклатуры(РезультатСоздания.НовыеЭлементы);
		ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеОЗавершении, РезультатСоздания);		
	Иначе
		ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеОЗавершении, Неопределено); // для настройки внешнего вида формы
	КонецЕсли;
		
	Если ЗначениеЗаполнено(РезультатСоздания.НоменклатураДляАнализа) 
		И Не ЭтоФормаНастройки(ДополнительныеПараметры.Форма) Тогда
		
		ОткрытьФормуНастройкиЗагрузкиНоменклатуры(РезультатСоздания, ДополнительныеПараметры);	
	КонецЕсли;
		
КонецПроцедуры	

Процедура ОповеститьОСозданииНоменклатуры(СозданныеОбъекты)
	
	Оповестить(ОписаниеОповещенийПодсистемы().ЗагрузкаНоменклатуры,
		Новый Структура("СозданныеОбъекты", СозданныеОбъекты));
		
	Если СозданныеОбъекты.Количество() > 0 Тогда
		ОповеститьОбИзменении(ТипЗнч(СозданныеОбъекты[0]));
	КонецЕсли;
	
КонецПроцедуры

Процедура ПослеСопоставленияХарактеристик(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Форма = ДополнительныеПараметры.Форма;
	
	Если Не Результат.Свойство("КоличествоСопоставленныхХарактеристик") Тогда
		Форма.Элементы.РаботаСНоменклатурой_Характеристики.Заголовок 
			= РаботаСНоменклатуройСлужебныйВызовСервера.ПредставлениеСопоставленныхХарактеристик(Форма.РаботаСНоменклатурой_СсылкаНаОбъект);
	Иначе
		Форма.Элементы.РаботаСНоменклатурой_Характеристики.Заголовок 
			= СтрШаблон(
				НСтр("ru = 'Сопоставлено характеристик: %1 из %2'"), 
					Формат(Результат.КоличествоСопоставленныхХарактеристик, "ЧЦ=15; ЧН="),
					Формат(Результат.КоличествоХарактеристикВсего, "ЧЦ=15; ЧН="));
	КонецЕсли;
				
	Форма.Прочитать();
		
КонецПроцедуры

Процедура ЗаполнитьПараметрыЗакрытия(Форма)
	
	Если Форма.ОписаниеОповещенияОЗакрытии = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Форма.ОписаниеОповещенияОЗакрытии.ДополнительныеПараметры) <> Тип("Структура")  Тогда
		Возврат;
	КонецЕсли;

	ДополнительныеПараметры = Форма.ОписаниеОповещенияОЗакрытии.ДополнительныеПараметры;
	
	ДополнительныеПараметры.Вставить("НоменклатураСсылка",        Форма.РаботаСНоменклатурой_СсылкаНаОбъект);
	ДополнительныеПараметры.Вставить("ИдентификаторНоменклатуры", Форма.РаботаСНоменклатурой_ИдентификаторОбъектаСервиса);
	
КонецПроцедуры

Функция БудутЗагружатьсяИзображения(Форма)
	
	Возврат Форма.РаботаСНоменклатурой_ЗагрузитьИзображения;
	
КонецФункции

Процедура ЗагрузитьДополнительныеДанныеЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Не ЭтоАдресВременногоХранилища(Результат.АдресРезультата) Тогда
		Возврат;
	КонецЕсли;
	
	Форма = ДополнительныеПараметры.Форма;
	
	Форма.РаботаСНоменклатурой_ЗагрузитьИзображения = Ложь;
	Форма.РаботаСНоменклатурой_ИдентификаторыХарактеристик.Очистить();
	Форма.РаботаСНоменклатурой_РежимЗагрузкиХарактеристик = "Загружены";
	
	РезультатСоздания = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
	
	Если РезультатСоздания.КоличествоЗагруженныхХарактеристик > 0 Тогда
		ПоказатьОповещениеПользователя(
			НСтр("ru = 'Создание характеристик'"), Неопределено, 
			СтрШаблон(НСтр("ru = 'Создано характеристик: %1'"), РезультатСоздания.КоличествоЗагруженныхХарактеристик));
	КонецЕсли;

	Если Форма.РаботаСНоменклатурой_ЗакрытьФормуПослеСозданияОбъектов Тогда
		
		// Если была нажата кнопка "Записать и закрыть" - форма закрывается.
		
		Форма.РаботаСНоменклатурой_ЭтоЗаписьОбъекта = Ложь;
		Форма.Закрыть();
	Иначе
		Форма.Элементы.РаботаСНоменклатурой_Характеристики.Заголовок 	
			= РаботаСНоменклатуройСлужебныйВызовСервера.ПредставлениеСопоставленныхХарактеристик(Форма.РаботаСНоменклатурой_СсылкаНаОбъект);
			
		Если РезультатСоздания.КоличествоЗагруженныхХарактеристик > 0 Тогда
			Форма.Элементы.РаботаСНоменклатурой_Характеристики.Видимость = Истина;
			Форма.Элементы.РаботаСНоменклатурой_Характеристики.Доступность = Истина;
		КонецЕсли;
		
		Форма.Прочитать();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ДиалогПереключенияНаАвтообновление

Процедура ПоказатьВопросПриВключенииАвтообновленияНоменклатуры(
			Номенклатура, 
			ИдентификаторНоменклатуры, 
			Форма, 
			ОбновлятьЗаблокированныеРеквизиты = Ложь) Экспорт
			
	ПараметрыОповещения = Новый Структура;		
	
	ПараметрыОповещения.Вставить("ОбъектОбновления",                  Номенклатура);
	ПараметрыОповещения.Вставить("Форма",                             Форма);
	ПараметрыОповещения.Вставить("Идентификатор",                     ИдентификаторНоменклатуры);
	ПараметрыОповещения.Вставить("ОбновлятьЗаблокированныеРеквизиты", ОбновлятьЗаблокированныеРеквизиты);
			
	Оповещение = Новый ОписаниеОповещения("ПриОтветеНаВопросАвтоматическогоОбновления", ЭтотОбъект, ПараметрыОповещения);
	
	ТекстВопроса = 
		НСтр("ru = 'Доступные для редактирования реквизиты будут заполнены данными сервиса. Номенклатура будет записана. Продолжить?'");
	
	ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
КонецПроцедуры

Процедура ПоказатьВопросПриВключенииАвтообновленияВидаНоменклатуры(
			ВидНоменклатуры, 
			ИдентификаторыКатегорий, 
			Форма,
			ОбновлятьЗаблокированныеРеквизиты = Ложь) Экспорт
			
	ПараметрыОповещения = Новый Структура;		
	
	ПараметрыОповещения.Вставить("ОбъектОбновления",                  ВидНоменклатуры);
	ПараметрыОповещения.Вставить("Форма",                             Форма);
	ПараметрыОповещения.Вставить("Идентификатор",                     ИдентификаторыКатегорий);
	ПараметрыОповещения.Вставить("ОбновлятьЗаблокированныеРеквизиты", ОбновлятьЗаблокированныеРеквизиты);
						
	Оповещение = Новый ОписаниеОповещения("ПриОтветеНаВопросАвтоматическогоОбновления", ЭтотОбъект, ПараметрыОповещения);
	
	ТекстВопроса = 
		НСтр("ru = 'Доступные для редактирования реквизиты будут заполнены данными сервиса. Вид номенклатуры будет записан. Продолжить?'");
			
	ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

Процедура ПриОтветеНаВопросАвтоматическогоОбновления(Ответ, ДополнительныеПараметры) Экспорт 
	
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	СлужебныеФормы = Новый Массив;
	
	СлужебныеФормы.Добавить("Обработка.РаботаСНоменклатурой.Форма.ЗаполнениеНоменклатуры");
	СлужебныеФормы.Добавить("Обработка.РаботаСНоменклатурой.Форма.ЗаполнениеВидаНоменклатуры");
	
	Форма = ДополнительныеПараметры.Форма;
	
	Если СлужебныеФормы.Найти(Форма.ИмяФормы) = Неопределено Тогда
		ФормаОбъекта = Форма;
	Иначе
		ФормаОбъекта = Форма.ВладелецФормы;
	КонецЕсли;
	
	Если ФормаОбъекта.Модифицированность Тогда
		ФормаОбъекта.РаботаСНоменклатурой_ИгнорироватьПроверкуЗаполнения = Истина;
		Если НЕ ФормаОбъекта.Записать() Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(
				НСтр("ru = 'Не удалось записать объект обновления'"));
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ФормаОбъекта.РазблокироватьДанныеФормыДляРедактирования();
	
	ОбъектОбновления = Неопределено;
	
	Если ДополнительныеПараметры.Свойство("ОбъектОбновления")
		И ЗначениеЗаполнено(ДополнительныеПараметры.ОбъектОбновления) Тогда
		
		ОбъектОбновления = ДополнительныеПараметры.ОбъектОбновления;
	Иначе
		ОбъектОбновления = Форма.РаботаСНоменклатурой_СсылкаНаОбъект;	
	КонецЕсли;
	
	// При установке автоматического обновления требуется проверка покупки карточки, 
	// если карточка не куплена - автоматический режим не устанавливается.
	
	УстановленАвтоматическийРежимОбновления = Ложь;
	
	РаботаСНоменклатуройСлужебныйВызовСервера.ОбновитьОбъектИнформационнойБазы(
		ОбъектОбновления, 
		ДополнительныеПараметры.Идентификатор,
		УстановленАвтоматическийРежимОбновления,
		ДополнительныеПараметры.ОбновлятьЗаблокированныеРеквизиты);
		
	Если СлужебныеФормы.Найти(Форма.ИмяФормы) = Неопределено Тогда
		
		// Закрытие прикладных форм
		
		Форма.РаботаСНоменклатурой_ОбновляетсяАвтоматически = УстановленАвтоматическийРежимОбновления;
		
		Если Форма.РаботаСНоменклатурой_РежимПредставленияОбъектаСервиса = "ПолеВвода" Тогда
			РежимОбновленияКартинка 
				= ?(УстановленАвтоматическийРежимОбновления,
					БиблиотекаКартинок.АвтоматическоеОбновлениеРаботаСНоменклатурой,
					БиблиотекаКартинок.РучноеОбновлениеРаботаСНоменклатурой);
			ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы, "РежимОбновления", 
				"Картинка", РежимОбновленияКартинка);
		Иначе
			РаботаСНоменклатуройСлужебныйКлиентСервер.НастроитьВидимостьГиперссылок(Форма);
		КонецЕсли;
		
		Форма.РаботаСНоменклатурой_ОбъектСервисаИзменен = Ложь;
		
		Форма.Прочитать();
	Иначе 
		
		// Закрытие форм заполнения
		
		Форма.Закрыть(Новый Структура("АвтоматическийРежимОбновления", УстановленАвтоматическийРежимОбновления));		
		
	КонецЕсли; 
	
КонецПроцедуры
	
#КонецОбласти

#Область ОбновлениеДанных

Процедура ПолучитьОбновленияВидовНоменклатуры(ОповещениеОЗавершении, ОбновляемыеОбъекты, Форма = Неопределено, 
			ИдентификаторЗадания = Неопределено, ДекорацияДлительногоОжидания = Неопределено) Экспорт 
	
	ДлительнаяОперация = РаботаСНоменклатуройСлужебныйВызовСервера.ПолучитьОбновленияВидовНоменклатурыВФоне(
		ОбновляемыеОбъекты, Форма.УникальныйИдентификатор, ИдентификаторЗадания);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Ложь;
	ПараметрыОжидания.ВыводитьОкноОжидания = ДекорацияДлительногоОжидания = Неопределено;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Ложь;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	
	ИдентификаторЗадания = ДлительнаяОперация.ИдентификаторЗадания;
	ОповещениеОЗавершении.ДополнительныеПараметры.Вставить("ИдентификаторЗадания", ИдентификаторЗадания);
	
	ПараметрыЗавершения = Новый Структура;
	ПараметрыЗавершения.Вставить("ОповещениеОЗавершении", ОповещениеОЗавершении);
	
	ДлительнаяОперацияЗавершение = Новый ОписаниеОповещения("ДлительнаяОперацияЗавершение",
		ЭтотОбъект, ПараметрыЗавершения);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация,
		ДлительнаяОперацияЗавершение,
		ПараметрыОжидания);

	
КонецПроцедуры
	
Процедура ПолучитьОбновленияНоменклатуры(ОповещениеОЗавершении, ОбновляемыеОбъекты, Форма = Неопределено, 
			ИдентификаторЗадания = Неопределено, ДекорацияДлительногоОжидания = Неопределено) Экспорт 
	
	ДлительнаяОперация = РаботаСНоменклатуройСлужебныйВызовСервера.ПолучитьОбновленияНоменклатурыВФоне(
		ОбновляемыеОбъекты, Форма.УникальныйИдентификатор, ИдентификаторЗадания);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Ложь;
	ПараметрыОжидания.ВыводитьОкноОжидания = ДекорацияДлительногоОжидания = Неопределено;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Ложь;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	
	ИдентификаторЗадания = ДлительнаяОперация.ИдентификаторЗадания;
	ОповещениеОЗавершении.ДополнительныеПараметры.Вставить("ИдентификаторЗадания", ИдентификаторЗадания);
	
	ПараметрыЗавершения = Новый Структура;
	ПараметрыЗавершения.Вставить("ОповещениеОЗавершении", ОповещениеОЗавершении);
	
	ДлительнаяОперацияЗавершение = Новый ОписаниеОповещения("ДлительнаяОперацияЗавершение",
		ЭтотОбъект, ПараметрыЗавершения);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация,
		ДлительнаяОперацияЗавершение,
		ПараметрыОжидания);

	
КонецПроцедуры

Процедура УстановитьРучнойРежимОбновленияНаФорме(Форма)
	
	Если Форма.РаботаСНоменклатурой_РежимПредставленияОбъектаСервиса = "ПолеВвода" Тогда
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы, "РежимОбновления", 
				"Картинка", БиблиотекаКартинок.РучноеОбновлениеРаботаСНоменклатурой);
		
		Если Форма.РаботаСНоменклатурой_ОбновляетсяАвтоматически Тогда
			Форма.Модифицированность = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	Форма.РаботаСНоменклатурой_ОбъектСервисаИзменен     = Истина;
	Форма.РаботаСНоменклатурой_ОбновляетсяАвтоматически = Ложь;

КонецПроцедуры

#КонецОбласти

#Область ЗапретРедактированияРеквизитов

Процедура ПроверитьИспользованиеОбъекта(Форма, ТаблицаФормы, СсылкаНаОбъект) Экспорт
	
	ПараметрыЗавершения = Новый Структура;
	
	ПараметрыЗавершения.Вставить("Форма",          Форма);
	ПараметрыЗавершения.Вставить("ТаблицаФормы",   ТаблицаФормы);
	ПараметрыЗавершения.Вставить("СсылкаНаОбъект", СсылкаНаОбъект);
	
	ПараметрыМетода = Новый Структура;
	
	ПараметрыМетода.Вставить("СсылкаНаОбъект",      СсылкаНаОбъект);
	ПараметрыМетода.Вставить("ИзмененныеРеквизиты", Форма.БлокируемыеРеквизиты.ВыгрузитьЗначения());
	
	ПолучитьНоменклатуруЗавершение = Новый ОписаниеОповещения("ПроверитьИспользованиеОбъектаЗавершение", 
		ЭтотОбъект, ПараметрыЗавершения);
	
	ПроверитьИспользованиеОбъектаВФоне(
		ПолучитьНоменклатуруЗавершение,
		ПараметрыМетода, 
		Форма);

КонецПроцедуры

Процедура ПроверитьИспользованиеОбъектаВФоне(
			ОповещениеОЗавершении, 
			ПараметрыМетода, 
			Форма, 
			ИдентификаторЗадания = Неопределено, 
			ДекорацияДлительногоОжидания = Неопределено)
	
	ДлительнаяОперация = РаботаСНоменклатуройСлужебныйВызовСервера.ПроверитьИспользованиеОбъектаВФоне(
		ПараметрыМетода, Форма.УникальныйИдентификатор, ИдентификаторЗадания);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Ложь;
	ПараметрыОжидания.ВыводитьОкноОжидания = ДекорацияДлительногоОжидания = Неопределено;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Ложь;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	
	ИдентификаторЗадания = ДлительнаяОперация.ИдентификаторЗадания;
	ОповещениеОЗавершении.ДополнительныеПараметры.Вставить("ИдентификаторЗадания", ИдентификаторЗадания);
	
	Если Не ДекорацияДлительногоОжидания = Неопределено
		И Не ДлительнаяОперация = Неопределено
		И ДлительнаяОперация.Статус = "Выполняется" Тогда
		
		ДекорацияДлительногоОжидания.Видимость = Истина;
	КонецЕсли;
	
	ПараметрыЗавершения = Новый Структура;
	ПараметрыЗавершения.Вставить("ОповещениеОЗавершении", ОповещениеОЗавершении);
	
	ДлительнаяОперацияЗавершение = Новый ОписаниеОповещения("ДлительнаяОперацияЗавершение",
		ЭтотОбъект, ПараметрыЗавершения);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация,
		ДлительнаяОперацияЗавершение,
		ПараметрыОжидания);
	
КонецПроцедуры

Процедура ПроверитьИспользованиеОбъектаЗавершение(Результат, ДополнительныеПараметры) Экспорт

	Если ТипЗнч(Результат) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЭтоАдресВременногоХранилища(Результат.АдресРезультата) Тогда
		Возврат;
	КонецЕсли;

	РезультатПроверки = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
	
	Если ТипЗнч(РезультатПроверки) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	СсылкиОбнаружены = РезультатПроверки.СсылкиОбнаружены;
	ТекстСообщения   = РезультатПроверки.ТекстСообщения;
	
	Если СсылкиОбнаружены Тогда
		
		Оповещение = Новый ОписаниеОповещения("ПослеПредупрежденияОНайденныхСсылках", ЭтотОбъект, ДополнительныеПараметры);
		
		ОткрытьФорму("Обработка.РаботаСНоменклатурой.Форма.ПослеПроверкиИспользованияОбъекта",
			Новый Структура("ТекстСообщения", ТекстСообщения),,,,, Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	Иначе
				
		Форма        = ДополнительныеПараметры.Форма;
		ТаблицаФормы = ДополнительныеПараметры.ТаблицаФормы;

		РазблокироватьРеквизиты(Форма, ТаблицаФормы);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура РазблокироватьРеквизиты(Форма, ТаблицаФормы)
	
	Форма.Элементы.ГруппаРеквизитыЗаблокированы.Видимость = Ложь;
	
	РаботаСНоменклатуройСлужебныйКлиентСервер.СнятьПометкиСБлокируемыхРеквизитов(Форма, ТаблицаФормы, Ложь);
	
	Форма.БлокируемыеРеквизиты.Очистить();
	
КонецПроцедуры

Процедура ПослеПредупрежденияОНайденныхСсылках(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	РазблокироватьРеквизиты(ДополнительныеПараметры.Форма, ДополнительныеПараметры.ТаблицаФормы);
	
КонецПроцедуры

#КонецОбласти

#Область СопоставлениеНоменклатуры

Процедура УстановитьРежимОбновленияНоменклатуры(Номенклатура, ОбновляетсяАвтоматически)
	
	РаботаСНоменклатуройСлужебныйВызовСервера.УстановитьРежимОбновленияНоменклатуры(Номенклатура, ОбновляетсяАвтоматически);
	
КонецПроцедуры

Процедура ПоказатьВопросПриСопоставленииВсейНоменклатуры()
	
	Оповещение = Новый ОписаниеОповещения("ПослеВопросаПриСопоставленииВсейНоменклатуры", ЭтотОбъект);
	
	ТекстВопроса = НСтр("ru = 'Сопоставление всей номенклатуры может занять продолжительное время. Продолжить?'");
	
	ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

Процедура ПослеВопросаПриСопоставленииВсейНоменклатуры(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ОткрытьФормуСопоставленияНоменклатуры(ПараметрыФормыСопоставленийНоменклатуры());
	
КонецПроцедуры

Процедура ОбновитьСписокФормы(Форма)
	
	Форма.Элементы[Форма.РаботаСНоменклатурой_ИмяТаблицыФормы].Обновить();
	
КонецПроцедуры

Функция ТекущаяНоменклатураФормыСписка(Форма)
	
	Номенклатура = Новый Массив;
	
	Для каждого ЭлементКоллекции Из Форма.Элементы[Форма.РаботаСНоменклатурой_ИмяТаблицыФормы].ВыделенныеСтроки Цикл
		Номенклатура.Добавить(ЭлементКоллекции);
	КонецЦикла;
	
	Возврат Номенклатура; 
	
КонецФункции

#КонецОбласти

#Область КарточкаПубликуемогоТорговогоПредложения

Процедура СопоставитьНоменклатуруКатегорииСервисаЗавершение(РезультатВыбора, ДополнительныеПараметры) Экспорт 

	Если РезультатВыбора = Неопределено Или ТипЗнч(РезультатВыбора) <> Тип("Структура") Тогда
		ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОписаниеОповещенияОЗавершении, Ложь);
		Возврат;
	КонецЕсли;
	
	Отказ = Ложь;
	РаботаСНоменклатуройСлужебныйВызовСервера.ЗаписатьЗначениеСопоставления(ДополнительныеПараметры.Номенклатура,
		РезультатВыбора.ВыбранныеОбъекты[0], Отказ);
		
	ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОписаниеОповещенияОЗавершении, НЕ Отказ);
	
КонецПроцедуры
 
#КонецОбласти

#Область ОписанияОповещений

Процедура ОбновитьУсловияОтбораНоменклатуры(РезультатЗакрытия, ДополнительныеПараметры) Экспорт 
	Если РезультатЗакрытия <> Неопределено Тогда
		Форма = ДополнительныеПараметры;
		Форма.НастройкиОтбора = РезультатЗакрытия;
		Форма.Элементы.ДекорацияОтбор.Заголовок = РаботаСНоменклатуройСлужебныйКлиент.ЗаголовокДекорацииУсловияОтбора(РезультатЗакрытия);
		ОбновляемыеПараметры = Новый Структура("НастройкиОтбора", РезультатЗакрытия);
		РаботаСНоменклатуройСлужебныйВызовСервера.ОбновитьПараметрыНастройкиВыгрузки(Форма.Организация, ОбновляемыеПараметры);
	КонецЕсли;
КонецПроцедуры

Процедура ПодготовкаПараметровЗаполненияНоменклатурыЗавершение(Результат, ДополнительныеПараметры) Экспорт 
	
	Если Результат = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	Если Результат.Статус = "Ошибка" Тогда
		ТекстОшибки = НСтр("ru = 'Не удалось подготовить параметры номенклатуры.'");
		ВызватьИсключение ТекстОшибки;
	ИначеЕсли Результат.Статус <> "Выполнено" Тогда
		Возврат;
	КонецЕсли;
	
	Оповещение = ДополнительныеПараметры.ОписаниеОповещения;
	
	Если ПолучитьИзВременногоХранилища(Результат.АдресРезультата) Тогда
		ВыполнитьОбработкуОповещения(Оповещение, ДополнительныеПараметры.АдресРезультата);
	Иначе 
		РезультатПокупки = ПолучитьИзВременногоХранилища(Результат.АдресДополнительногоРезультата);
		Если ТипЗнч(РезультатПокупки) = Тип("Структура") И РезультатПокупки.ЕстьОшибки Тогда
			СоздатьНоменклатуруОбработкаОшибки(РезультатПокупки.ОписаниеОшибки);
		Иначе 
			ОткрытьФормуЗаполненияНоменклатуры(ДополнительныеПараметры.Форма, ДополнительныеПараметры.ПараметрыФормы,
				Оповещение);
		КонецЕсли;
	КонецЕсли;
	УдалитьИзВременногоХранилища(Результат.АдресРезультата);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

