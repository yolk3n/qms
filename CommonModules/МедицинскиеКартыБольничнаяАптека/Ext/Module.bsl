////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС
#Область ПрограммныйИнтерфейс

//////////////////////////////////////////////////////////////////////////////
// Регламентные задания
#Область РегламентныеЗадания

// Процедура выполняет архивирование медкарт пациентов с регистрацией события в журнале регистрации.
// Вызывается регламентным заданием.
//
Процедура АрхивированиеМедкарт() Экспорт
	
	ОбщегоНазначения.ПриНачалеВыполненияРегламентногоЗадания(Метаданные.РегламентныеЗадания.АрхивированиеМедкарт);
	
	Если Не Константы.ПомещатьЗакрытыеМедкартыВАрхивАвтоматически.Получить() Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	ЗаписатьСтатусАрхивацииВЖурнал(НСтр("ru = 'Начато регламентное архивирование медкарт пациентов.'"));
	
	КоличествоДнейХраненияМедкарт = Константы.КоличествоДнейДоПомещенияЗакрытыхМедкартВАрхив.Получить() * 86400;
	ВыполнитьАрхивациюМедкарт(КоличествоДнейХраненияМедкарт);
	
	ЗаписатьСтатусАрхивацииВЖурнал(НСтр("ru = 'Закончено регламентное архивирование медкарт пациентов.'"));
	
КонецПроцедуры

#КонецОбласти // РегламентныеЗадания

#КонецОбласти // ПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

Процедура ВыполнитьАрхивациюМедкарт(КоличествоДнейХраненияМедкарт)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	МедицинскиеКарты.Ссылка КАК МедицинскаяКарта
	|ИЗ
	|	Справочник.МедицинскиеКарты КАК МедицинскиеКарты
	|ГДЕ
	|	НЕ МедицинскиеКарты.ВАрхиве
	|	И МедицинскиеКарты.ДатаЗакрытия <> ДАТАВРЕМЯ(1,1,1)
	|	И МедицинскиеКарты.ДатаЗакрытия < &ДатаХраненияМедкарты
	|";
	
	ДатаХраненияМедкарты = ТекущаяДатаСеанса() - КоличествоДнейХраненияМедкарт;
	
	Запрос.УстановитьПараметр("ДатаХраненияМедкарты", ДатаХраненияМедкарты);
	
	ВыборкаМедицинскихКарт = Запрос.Выполнить().Выбрать();
	Пока ВыборкаМедицинскихКарт.Следующий() Цикл
		Попытка
			Объект = ВыборкаМедицинскихКарт.МедицинскаяКарта.ПолучитьОбъект();
			Объект.ВАрхиве = Истина;
			Объект.Записать();
		Исключение
			СтатусАрхивации = НСтр("ru = 'Во время архивации медкарт произошла ошибка.'") + Символы.ПС + ИнформацияОбОшибке().Описание;
			ЗаписатьСтатусАрхивацииВЖурнал(СтатусАрхивации, УровеньЖурналаРегистрации.Ошибка, ВыборкаМедицинскихКарт.МедицинскаяКарта);
		КонецПопытки;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаписатьСтатусАрхивацииВЖурнал(СтатусАрхивации, УровеньЖурнала = Неопределено, Данные = Неопределено)
	
	ЗаписьЖурналаРегистрации(
		НСтр("ru = 'Архивирование медицинских карт пациентов'", ОбщегоНазначения.КодОсновногоЯзыка()),
		?(УровеньЖурнала = Неопределено, УровеньЖурналаРегистрации.Информация, УровеньЖурнала),
		,
		Данные,
		СтатусАрхивации);
	
КонецПроцедуры

#КонецОбласти // СлужебныеПроцедурыИФункции
