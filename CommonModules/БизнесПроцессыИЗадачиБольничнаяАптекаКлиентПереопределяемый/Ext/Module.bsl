
////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС
#Область ПрограммныйИнтерфейс

// Обработчик события перед установкой статуса предмета закрыт
//
// Параметры:
//  Предмет              - ЛюбаяСсылка - 
//  ОповещениеЗавершения - ОписаниеОповещения - куда вернуть результат успешности обработки события
//  СтандартнаяОбработка - Булево - признак, что события будет отработано стандартно.
//
Процедура ПередУстановкойСтатусаПредметаЗакрыт(Предмет, ОповещениеЗавершения, СтандартнаяОбработка) Экспорт
	
	ТипПредмета = ТипЗнч(Предмет);
	Если ТипПредмета = Тип("ДокументСсылка.ТребованиеОтделения")
	 Или ТипПредмета = Тип("ДокументСсылка.ЗаказНаПеремещение") Тогда
		
		ПараметрыЗакрытия = ЗаказыВызовСервера.ПолучитьПараметрыЗакрытияЗаказа(Предмет);
		Если ПараметрыЗакрытия.ЕстьНеотработанныеСтроки Тогда
			СтандартнаяОбработка = Ложь;
			ПараметрыЗакрытия.Вставить("ОповещениеЗавершения", ОповещениеЗавершения);
			Оповещение = Новый ОписаниеОповещения("ОбработатьОтветОЗакрытииЗаказа", ЭтотОбъект, ПараметрыЗакрытия);
			ТекстВопроса = НСтр("ru = 'По документу есть неотработанные строки.
				|Все неотработанные строки будут отменены. Продолжить?'");
			ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти // ПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

Процедура ОбработатьОтветОЗакрытииЗаказа(Ответ, ПараметрыЗакрытия) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		
		Если ПараметрыЗакрытия.ИспользоватьПричиныОтмены Тогда
			Оповещение = Новый ОписаниеОповещения("ОбработатьВыборПричиныОтменыЗаказа", ЭтотОбъект, ПараметрыЗакрытия);
			ОткрытьФорму(ПараметрыЗакрытия.ФормаВыбораПричиныОтмены,,,,,, Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		Иначе
			ПараметрыЗакрытия.ОповещениеЗавершения.ДополнительныеПараметры.Вставить("ОтменаНеотработанныхСтрок");
			ВыполнитьОбработкуОповещения(ПараметрыЗакрытия.ОповещениеЗавершения, Истина);
		КонецЕсли;
		
	Иначе
		ВыполнитьОбработкуОповещения(ПараметрыЗакрытия.ОповещениеЗавершения, Ложь);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработатьВыборПричиныОтменыЗаказа(ПричинаОтмены, ПараметрыЗакрытия) Экспорт
	
	Если ПричинаОтмены <> Неопределено Тогда
		ПараметрыЗакрытия.ОповещениеЗавершения.ДополнительныеПараметры.Вставить("ОтменаНеотработанныхСтрок", ПричинаОтмены);
		ВыполнитьОбработкуОповещения(ПараметрыЗакрытия.ОповещениеЗавершения, Истина);
	Иначе
		ВыполнитьОбработкуОповещения(ПараметрыЗакрытия.ОповещениеЗавершения, Ложь);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти // СлужебныеПроцедурыИФункции
