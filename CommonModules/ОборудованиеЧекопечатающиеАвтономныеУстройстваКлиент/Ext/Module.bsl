#Область ПрограммныйИнтерфейс

// Начать выполнение команды
//
// Параметры:
//  ОповещениеПриЗавершении - ОписаниеОповещения - событие описания оповещения.
//  ИдентификаторКлиента - УникальныйИдентификатор - уникальный идентификатор клиента.
//  ПараметрыОперации - Структура
//  ПараметрыВыполнениеКоманды - см. ПараметрыВыполненияОперацииНаАвтономнойККТ
//  ДополнительныеПараметры - Структура
//
Процедура НачатьВыполнениеКоманды(ОповещениеПриЗавершении, ИдентификаторКлиента, ПараметрыОперации, ПараметрыВыполнениеКоманды, ДополнительныеПараметры = Неопределено) Экспорт
	
	РезультатВыполнения = МенеджерОборудованияКлиентСервер.ПараметрыВыполненияОперацииНаОборудовании(Ложь, Неопределено, Неопределено);
	Команда = ПараметрыВыполнениеКоманды.Команда;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ПараметрыОперации", ПараметрыОперации);
	ДополнительныеПараметры.Вставить("ОповещениеПриЗавершении", ОповещениеПриЗавершении);
	ДополнительныеПараметры.Вставить("Команда", ПараметрыВыполнениеКоманды.Команда);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыполнитьКомандуЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	Отказ = Истина;
	СтандартнаяОбработка = Истина;

	Если Команда = "CheckFiscalization" Тогда
		
		ТекстВопроса = НСтр("ru='Подтвердите пробитие чека на устройстве'");
		ЗаголовокВопроса = НСтр("ru='Пробитие чека'");
		Отказ = Ложь;
		
	ИначеЕсли Команда = "PrintReceiptCorrection" Тогда
		
	ИначеЕсли Команда = "PrintCheckCopy" Тогда
		
	ИначеЕсли Команда = "PrintText" Тогда
		
	ИначеЕсли Команда = "PrintQRCode" Тогда
		
	ИначеЕсли Команда = "OpenShift"  Тогда
		
		ТекстВопроса = НСтр("ru='Подтвердите открытие смены на устройстве'");
		ЗаголовокВопроса = НСтр("ru='Открытие смены'");
		Отказ = Ложь;
		
	ИначеЕсли Команда = "CloseShift" Тогда
		
		ТекстВопроса = НСтр("ru='Подтвердите закрытие смены на устройстве'");
		ЗаголовокВопроса = НСтр("ru='Закрытие смены'");
		Отказ = Ложь;
		
	ИначеЕсли Команда = "ReportCurrentStatusOfSettlements" Или Команда = "GetCurrentStatus"  Тогда
		
	ИначеЕсли Команда = "PrintXReport"  Тогда
		
	ИначеЕсли Команда = "Encash" Тогда
		
		ТекстВопроса = НСтр("ru='Внесение выполнено на устройстве'");
		ЗаголовокВопроса = НСтр("ru='Внесение'");
		Отказ = Ложь;
		
	ИначеЕсли Команда = "OperationFN" Тогда
		
		
	ИначеЕсли Команда = "RequestKM" Тогда

	КонецЕсли;
	
	ОткрытьСтандартныйВопросОбработкиАвтономнойККТ(Отказ, СтандартнаяОбработка, ПараметрыВыполнениеКоманды, ДополнительныеПараметры);
	
	Если Не Отказ И СтандартнаяОбработка Тогда
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , , ЗаголовокВопроса);
	ИначеЕсли Отказ И СтандартнаяОбработка Тогда
		ВыполнитьОбработкуОповещения(ОписаниеОповещения, Истина);
	КонецЕсли;
	
КонецПроцедуры

// Завершает выполнение команды
//
// Параметры:
//  Результат - КодВозвратаДиалога
//  ДополнительныеПараметры - Структура
Процедура ВыполнитьКомандуЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(Результат) = Тип("КодВозвратаДиалога") Тогда
		Если Результат = КодВозвратаДиалога.Да Тогда
			РезультатПробития = Истина;
		Иначе
			РезультатПробития = Ложь;
		КонецЕсли;
	КонецЕсли; 
	
	Если ДополнительныеПараметры.Свойство("ОповещениеПриЗавершении") И ДополнительныеПараметры.ОповещениеПриЗавершении = Неопределено Тогда
		ДополнительныеПараметры.ОповещениеПриЗавершении = Новый ОписаниеОповещения("ФискализацияЧековВОчереди_Завершение", МенеджерОборудованияКлиент, ДополнительныеПараметры.ПараметрыОперации);
	КонецЕсли;
		
	РезультатВыполнения = МенеджерОборудованияКлиентСервер.ПараметрыВыполненияОперацииНаОборудовании(РезультатПробития, Неопределено, Неопределено);
	
	Если Не РезультатВыполнения.Результат Тогда
		
		РезультатВыполнения.Вставить("Результат"              , Ложь);
		РезультатВыполнения.Вставить("ОписаниеОшибки"         , НСтр("ru='Операция отменена на устройстве'"));
		ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеПриЗавершении, РезультатВыполнения);
		Возврат;
		
	КонецЕсли;
	
	Команда = ДополнительныеПараметры.Команда;
	ПараметрыОперации = ДополнительныеПараметры.ПараметрыОперации;
	
	Если Команда = "CheckFiscalization" Тогда
		ПробитиеЧека(РезультатВыполнения, ПараметрыОперации);
	ИначеЕсли Команда = "PrintReceiptCorrection" Тогда
		
	ИначеЕсли Команда = "PrintCheckCopy" Тогда
		
	ИначеЕсли Команда = "PrintText" Тогда
		
	ИначеЕсли Команда = "PrintQRCode" Тогда
		
	ИначеЕсли Команда = "OpenShift"  Тогда
		
		ОткрытиеСмены(РезультатВыполнения, ПараметрыОперации);
		
	ИначеЕсли Команда = "CloseShift" Тогда
		
		ЗакрытиеСмены(РезультатВыполнения, ПараметрыОперации);
		
	ИначеЕсли Команда = "ReportCurrentStatusOfSettlements" Или Команда = "GetCurrentStatus"  Тогда
		
	ИначеЕсли Команда = "PrintXReport"  Тогда
		
	ИначеЕсли Команда = "Encash" Тогда
		
	ИначеЕсли Команда = "OperationFN" Тогда
		
		
	ИначеЕсли Команда = "RequestKM" Тогда

	КонецЕсли;

	ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеПриЗавершении, РезультатВыполнения);
	
КонецПроцедуры

// Возвращает структуру для параметров операции
// 
// Возвращаемое значение:
//  Структура:
//   * ПараметрыОперации - Структура
//   * Команда - Строка
//   * ОповещениеПриЗавершении - ОписаниеОповещения
//   * ИспользуетсяОчередьПробития - Булево
//
Функция ПараметрыВыполненияОперацииНаАвтономнойККТ() Экспорт
	
	ПараметрыОперации = Новый Структура;
	
	ПараметрыОперации.Вставить("ПараметрыОперации", Новый Структура);
	ПараметрыОперации.Вставить("Команда", "");
	ПараметрыОперации.Вставить("ОповещениеПриЗавершении", Неопределено);
	ПараметрыОперации.Вставить("ИспользуетсяОчередьПробития", Ложь);
	
	Возврат ПараметрыОперации;
	
КонецФункции 

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОткрытьСтандартныйВопросОбработкиАвтономнойККТ(Отказ, СтандартнаяОбработка, ПараметрыОперации, ДополнительныеПараметры = Неопределено)
	
	СтандартнаяОбработка = Истина;
	Отказ = Ложь;
	ОборудованиеЧекопечатающиеАвтономныеУстройстваКлиентПереопределяемый.ОткрытьСтандартныйВопросОбработкиАвтономнойККТ(Отказ, СтандартнаяОбработка, ПараметрыОперации, ДополнительныеПараметры);
	
КонецПроцедуры

Процедура ЗакрытиеСмены(РезультатВыполнения, ПараметрыОперации)
	
	ПараметрыПодключения = Новый Структура("ИдентификаторУстройства", ПараметрыОперации.КассаККМ);
	ДанныеОперации = ОборудованиеЧекопечатающиеУстройстваВызовСервера.ПараметрыФискальнойОперации();
	Если ОборудованиеЧекопечатающиеУстройстваВызовСервера.ПередЗакрытиемКассовойСмены(ПараметрыПодключения, ДанныеОперации) Тогда
		
		РезультатВыполнения.Вставить("СтатусСмены"   , 1);
		РезультатВыполнения.Вставить("КассоваяСмена" , ДанныеОперации.КассоваяСмена);
		РезультатВыполнения.Результат = Истина;
		
		ОборудованиеЧекопечатающиеУстройстваВызовСервера.ПослеЗакрытияКассовойСмены(ПараметрыПодключения, РезультатВыполнения);
		
	Иначе
		
		РезультатВыполнения.ОписаниеОшибки = ДанныеОперации.ТекстОшибки;
		
	КонецЕсли;
КонецПроцедуры

Процедура ОткрытиеСмены(РезультатВыполнения, ПараметрыОперации)
	
	ПараметрыПодключения = Новый Структура("ИдентификаторУстройства", ПараметрыОперации.КассаККМ);
	ДанныеОперации = ОборудованиеЧекопечатающиеУстройстваВызовСервера.ПараметрыФискальнойОперации();
	Если ОборудованиеЧекопечатающиеУстройстваВызовСервера.ПередОткрытиемКассовойСмены(ПараметрыПодключения, ДанныеОперации) Тогда
		
		РезультатВыполнения.Вставить("СтатусСмены"   , 2);
		РезультатВыполнения.Вставить("КассоваяСмена" , ДанныеОперации.КассоваяСмена);
		РезультатВыполнения.Результат = Истина;
		
		ОборудованиеЧекопечатающиеУстройстваВызовСервера.ПослеОткрытияКассовойСмены(ПараметрыПодключения, РезультатВыполнения);
		
	Иначе
		
		РезультатВыполнения.ОписаниеОшибки = ДанныеОперации.ТекстОшибки;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПробитиеЧека(РезультатВыполнения, ПараметрыОперации)
	
	РезультатВыполнения.Вставить("НомерСменыККТ" , ПараметрыОперации.НомерСмены);
	РезультатВыполнения.Вставить("НомерЧекаККТ"  , ПараметрыОперации.НомерЧека);
	
	РезультатВыполнения.Вставить("СтатусСмены", 2);
	РезультатВыполнения.Вставить("ДатаВремяЧека"          , ПараметрыОперации.ДатаВремя);
	РезультатВыполнения.Вставить("ОперацияЗаписана"       , Истина);
	РезультатВыполнения.Вставить("Результат"       , Истина);
	
КонецПроцедуры

#КонецОбласти