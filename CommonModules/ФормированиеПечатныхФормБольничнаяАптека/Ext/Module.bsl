
////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС
#Область ПрограммныйИнтерфейс

// Возвращает строку с именами колонок, переданной таблицы, разделенных запятыми.
//
// Параметры:
//  Таблица - РезультатЗапроса,
//            ВыборкаИзРезультатаЗапроса,
//            ТаблицаЗначений,
//            СтрокаТаблицыЗначений - таблица, из которой будут получены имена колонок.
//
Функция ПолучитьИменаКолонокТаблицы(Таблица) Экспорт
	
	Если ТипЗнч(Таблица) = Тип("ВыборкаИзРезультатаЗапроса")
	 Или ТипЗнч(Таблица) = Тип("СтрокаТаблицыЗначений") Тогда
		Поля = Таблица.Владелец().Колонки;
	ИначеЕсли ТипЗнч(Таблица) = Тип("РезультатЗапроса")
		  Или ТипЗнч(Таблица) = Тип("ТаблицаЗначений") Тогда
		
		Поля = Таблица.Колонки;
	КонецЕсли;
	
	ИменаКолонок = "";
	Для Каждого Поле Из Поля Цикл
		ИменаКолонок = ИменаКолонок + "," + Поле.Имя;
	КонецЦикла;
	
	Возврат Сред(ИменаКолонок, 2);
	
КонецФункции

// Возвращает полный путь к макету в формате:
//  "Документ.<ИмяДокумента>.<ИмяМакета>"
//  "Обработка.<ИмяОбработки>.<ИмяМакета>"
//  "ОбщийМакет.<ИмяМакета>".
//
// Параметры:
//  МетаданныеМакета - ОбъектМетаданных: Макет - полное имя которого будет использовано
//                     для формирования полного пути к макету в необходимом формате.
//
Функция ПутьКМакету(МетаданныеМакета) Экспорт
	
	Возврат СтрЗаменить(МетаданныеМакета.ПолноеИмя(), ".Макет.", ".");
	
КонецФункции

// Выводит область, полученную из макета по имени, в результирующий табличный документ.
//
// Параметры:
//  ТабличныйДокумент - ТабличныйДокумента - результирующий табличный документ.
//  Макет             - ТабличныйДокумента - макет объекта печати.
//  ИмяОбласти        - Строка             - имя области макета объекта печати.
//  ДанныеОбласти     - Структура, СтрокаТаблицыЗначений - данные из которых будут заполнены параметры области макета.
//  Уровень           - Число              - уровень используется для автоматической группировки строк табличного документа.
//
Процедура ВывестиОбластьПоИмени(ТабличныйДокумент, Макет, ИмяОбласти, ДанныеОбласти = Неопределено, Уровень = Неопределено) Экспорт
	
	Область = Макет.ПолучитьОбласть(ИмяОбласти);
	ВывестиТабличныйДокумент(ТабличныйДокумент, Область, ДанныеОбласти, Уровень)
	
КонецПроцедуры

// Присоединяет область, полученную из макета по имени, в результирующий табличный документ.
//
// Параметры:
//  ТабличныйДокумент - ТабличныйДокумента - результирующий табличный документ.
//  Макет             - ТабличныйДокумента - макет объекта печати.
//  ИмяОбласти        - Строка             - имя области макета объекта печати.
//  ДанныеОбласти     - Структура, СтрокаТаблицыЗначений - данные из которых будут заполнены параметры области макета.
//  Уровень           - Число              - уровень используется для автоматической группировки строк табличного документа.
//
Процедура ПрисоединитьОбластьПоИмени(ТабличныйДокумент, Макет, ИмяОбласти, ДанныеОбласти = Неопределено, Уровень = Неопределено) Экспорт
	
	Область = Макет.ПолучитьОбласть(ИмяОбласти);
	
	Если ДанныеОбласти <> Неопределено Тогда
		Область.Параметры.Заполнить(ДанныеОбласти);
	КонецЕсли;
	
	Если Уровень = Неопределено Тогда
		ТабличныйДокумент.Присоединить(Область);
	Иначе
		ТабличныйДокумент.Присоединить(Область, Уровень);
	КонецЕсли;
	
КонецПроцедуры

// Выводит область, полученную из макета по имени, добавляя штрихкод,
// сформированный по передаваемой в данных области ссылке.
//
// Параметры:
//  ТабличныйДокумент - ТабличныйДокумента - результирующий табличный документ.
//  Макет             - ТабличныйДокумента - макет объекта печати.
//  ИмяОбласти        - Строка             - имя области макета объекта печати.
//  ДанныеОбласти     - Структура, СтрокаТаблицыЗначений - данные из которых будут заполнены параметры области макета.
//  Уровень           - Число              - уровень используется для автоматической группировки строк табличного документа.
//
Процедура ВывестиОбластьСоШтрихкодом(ТабличныйДокумент, Макет, ИмяОбласти, ДанныеОбласти, Уровень = Неопределено) Экспорт
	
	Область = Макет.ПолучитьОбласть(ИмяОбласти);
	
	ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ДанныеОбласти.Ссылка, ТабличныйДокумент, Макет, Область);
	
	ВывестиТабличныйДокумент(ТабличныйДокумент, Область, ДанныеОбласти, Уровень);
	
КонецПроцедуры

// Формирует область табличного документа по имени и данным области,
// и помещает ее в конец массива выводимых областей.
//
// Параметры:
//  Макет          - ТабличныйДокумента - макет объекта печати.
//  ИмяОбласти     - Строка             - имя области макета объекта печати.
//  МассивОбластей - Массив             - (возвращаемый) массив выводимых областей.
//  ДанныеОбласти  - Структура, СтрокаТаблицыЗначений - данные из которых будут заполнены параметры области макета.
//
Процедура ДобавитьОбластьВМассивПоОписанию(Макет, ИмяОбласти, МассивОбластей, ДанныеОбласти = Неопределено) Экспорт
	
	Область = Макет.ПолучитьОбласть(ИмяОбласти);
	Если ДанныеОбласти <> Неопределено Тогда
		Область.Параметры.Заполнить(ДанныеОбласти);
	КонецЕсли;
	
	МассивОбластей.Добавить(Область);
	
КонецПроцедуры

// Выполняет накопление итоговых показателей в структуре, для дальнейшего заполнения параметров области.
//
// Параметры:
//  Данные            - Структура, ВыборкаИзРезультатаЗапроса - объекты, из которых получаются данные.
//  РассчитанныеИтоги - Структура - (выходной параметр) заполняемая структура.
//
// Пример:
//  РассчитанныеИтоги = Новый Структура("ИтогоКоличество, ИтогоСумма", 0, 0);
//  Пока Выборка.Следующий() Цикл
//  	РассчитатьИтоги(РассчитанныеИтоги, Выборка);
//  КонецЦикла;
//
// Процедура на каждой итерации будет получать Выборка.Количество и Выборка.Сумма
// и прибавлять к значениям элементов структуры с соответствующими именами.
//
Процедура РассчитатьИтоги(Данные, РассчитанныеИтоги) Экспорт
	
	Если ТипЗнч(Данные) = Тип("Структура") Тогда
		Буфер = Данные;
	ИначеЕсли ТипЗнч(Данные) = Тип("ВыборкаИзРезультатаЗапроса") Тогда
		Буфер = Новый Структура;
		ОбластьПоиска = Данные.Владелец().Колонки;
		Для Каждого Итог Из РассчитанныеИтоги Цикл
			КлючПоиска = Итог.Ключ;
			Если ОбластьПоиска.Найти(КлючПоиска) <> Неопределено Тогда
				Буфер.Вставить(КлючПоиска, Данные[КлючПоиска]);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Для Каждого Итог Из РассчитанныеИтоги Цикл
		КлючПоиска = Итог.Ключ;
		Значение = Неопределено;
		Если Буфер.Свойство(КлючПоиска, Значение) Тогда
			РассчитанныеИтоги.Вставить(КлючПоиска, Итог.Значение + Значение);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Записывает нули во все значения переданной структуры итогов.
//
// Параметры:
//  ИтоговыеДанные - Структура - в значения которой будут записаны нули.
//
Процедура ОбнулитьИтоги(ИтоговыеДанные) Экспорт
	
	Для Каждого Итог Из ИтоговыеДанные Цикл
		ИтоговыеДанные[Итог.Ключ] = 0;
	КонецЦикла;
	
КонецПроцедуры

// Увеличивает счетчик номера в структуре номеров.
//
// Параметры:
//  Нумерация            - Структура - содержащая накопленные параметры нумерации.
//  ИменаКлючейНумерации - Строка - имена ключей нумерации.
//
Процедура УвеличитьНомер(Нумерация, Знач ИменаКлючейНумерации) Экспорт
	
	ИменаКлючейНумерации = СтрРазделить(ИменаКлючейНумерации, ", ", Ложь);
	
	Для Каждого ИмяКлюча Из ИменаКлючейНумерации Цикл
		Нумерация[ИмяКлюча] = Нумерация[ИмяКлюча] + 1;
	КонецЦикла;
	
КонецПроцедуры

// Сбрасывает счетчик нумерации к начальному номеру.
//
// Параметры:
//  Нумерация            - Структура - содержащая накопленные параметры нумерации.
//  ИменаКлючейНумерации - Строка - имена ключей нумерации.
//  НачальныйНомер       - Число - устанавливаемый номер.
//
Процедура УстановитьНачальныйНомер(Нумерация, Знач ИменаКлючейНумерации, НачальныйНомер = 0) Экспорт
	
	ИменаКлючейНумерации = СтрРазделить(ИменаКлючейНумерации, ", ", Ложь);
	
	Для Каждого ИмяКлюча Из ИменаКлючейНумерации Цикл
		Нумерация[ИмяКлюча] = НачальныйНомер;
	КонецЦикла;
	
КонецПроцедуры

// Возвращает параметры получения цен для печати по умолчанию.
//
// Возвращаемое значение:
//  Структура
//   * ИспользоватьЦеныПоВидуЦен       - Булево - Значение по умолчанию: Ложь.
//   * ТочноеСоответствиеЦеныПоВидуЦен - Булево - Значение по умолчанию: Истина.
//   * ИспользоватьЦеныПоСебестоимости - Булево - Значение по умолчанию: Ложь.
//
Функция ПараметрыПолученияЦен() Экспорт
	
	Параметры = Новый Структура;
	Параметры.Вставить("ИспользоватьЦеныПоВидуЦен"      , Ложь);
	Параметры.Вставить("ТочноеСоответствиеЦеныПоВидуЦен", Истина);
	Параметры.Вставить("ИспользоватьЦеныПоСебестоимости", Ложь);
	
	Возврат Параметры;
	
КонецФункции

// По параметрам получения цен, определяет указан ли хотя бы один источник цен.
//
// Параметры:
//  ПараметрыПолученияЦен - Структура - см. ФормированиеПечатныхФормБольничнаяАптека.ПараметрыПолученияЦен.
//
// Возвращаемое значение:
//  Булево - Истина, если хотя бы один источник выбран.
//
Функция ВыбранИсточникПолученияЦен(ПараметрыПолученияЦен) Экспорт
	
	Возврат ПараметрыПолученияЦен.ИспользоватьЦеныПоВидуЦен
	    Или ПараметрыПолученияЦен.ИспользоватьЦеныПоСебестоимости;
	
КонецФункции

// Возвращает текст запроса цен для документов.
//
// Параметры:
//  ПараметрыПолученияЦен - Структура - см. ФормированиеПечатныхФормБольничнаяАптека.ПараметрыПолученияЦен.
//
// Возвращаемое значение:
//  Строка - текст запроса цент для документов.
//
Функция ТекстЗапросаЦен(ПараметрыПолученияЦен) Экспорт
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Товары.Документ           КАК Документ,
	|	Товары.НомерСтроки        КАК НомерСтроки,
	|	Товары.ВидЦены            КАК ВидЦены,
	|	Товары.Номенклатура       КАК Номенклатура,
	|	Товары.СерияНоменклатуры  КАК СерияНоменклатуры,
	|	Товары.Партия             КАК Партия,
	|	Товары.ДатаПолученияЦены  КАК ДатаПолученияЦены
	|ПОМЕСТИТЬ ЦеныПоВидуЦенТовары
	|ИЗ
	|	втТовары КАК Товары
	|ГДЕ
	|	Товары.ИсточникИнформацииОЦенах = ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПоВидуЦен)
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПериодыЦенНоменклатуры.Документ                           КАК Документ,
	|	ПериодыЦенНоменклатуры.НомерСтроки                        КАК НомерСтроки,
	|	ПериодыЦенНоменклатуры.ДатаПолученияЦены                  КАК ДатаПолученияЦены,
	|	ЦеныНоменклатуры.Цена / КоэффициентыУпаковок.Коэффициент  КАК Цена,
	|	ЦеныНоменклатуры.Валюта                                   КАК Валюта
	|ПОМЕСТИТЬ ЦеныПоВидуЦенТочноеСовпадение
	|ИЗ
	|	(ВЫБРАТЬ
	|		Товары.Документ                     КАК Документ,
	|		Товары.НомерСтроки                  КАК НомерСтроки,
	|		Товары.ДатаПолученияЦены            КАК ДатаПолученияЦены,
	|		ЦеныНоменклатуры.ВидЦены            КАК ВидЦены,
	|		ЦеныНоменклатуры.Номенклатура       КАК Номенклатура,
	|		ЦеныНоменклатуры.СерияНоменклатуры  КАК СерияНоменклатуры,
	|		ЦеныНоменклатуры.Партия             КАК Партия,
	|		МАКСИМУМ(ЦеныНоменклатуры.Период)   КАК Период
	|	ИЗ
	|		ЦеныПоВидуЦенТовары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	|		ПО
	|			Товары.ВидЦены = ЦеныНоменклатуры.ВидЦены
	|			И Товары.Номенклатура = ЦеныНоменклатуры.Номенклатура
	|			И Товары.СерияНоменклатуры = ЦеныНоменклатуры.СерияНоменклатуры
	|			И Товары.Партия = ЦеныНоменклатуры.Партия
	|			И Товары.ДатаПолученияЦены >= ЦеныНоменклатуры.Период
	|	СГРУППИРОВАТЬ ПО
	|		Товары.Документ,
	|		Товары.НомерСтроки,
	|		Товары.ДатаПолученияЦены,
	|		ЦеныНоменклатуры.ВидЦены,
	|		ЦеныНоменклатуры.Номенклатура,
	|		ЦеныНоменклатуры.СерияНоменклатуры,
	|		ЦеныНоменклатуры.Партия
	|	) КАК ПериодыЦенНоменклатуры
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	|	ПО
	|		ПериодыЦенНоменклатуры.ВидЦены = ЦеныНоменклатуры.ВидЦены
	|		И ПериодыЦенНоменклатуры.Номенклатура = ЦеныНоменклатуры.Номенклатура
	|		И ПериодыЦенНоменклатуры.СерияНоменклатуры = ЦеныНоменклатуры.СерияНоменклатуры
	|		И ПериодыЦенНоменклатуры.Партия = ЦеныНоменклатуры.Партия
	|		И ПериодыЦенНоменклатуры.Период = ЦеныНоменклатуры.Период
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ЕдиницыИзмеренияНоменклатуры КАК КоэффициентыУпаковок
	|	ПО
	|		ПериодыЦенНоменклатуры.Номенклатура = КоэффициентыУпаковок.Номенклатура
	|		И ЦеныНоменклатуры.Упаковка = КоэффициентыУпаковок.ЕдиницаИзмерения
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ,
	|	НомерСтроки
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПериодыЦенНоменклатуры.Документ                                    КАК Документ,
	|	ПериодыЦенНоменклатуры.НомерСтроки                                 КАК НомерСтроки,
	|	ПериодыЦенНоменклатуры.ДатаПолученияЦены                           КАК ДатаПолученияЦены,
	|	СРЕДНЕЕ(ЦеныНоменклатуры.Цена / КоэффициентыУпаковок.Коэффициент)  КАК Цена,
	|	МАКСИМУМ(ЦеныНоменклатуры.Валюта)                                  КАК Валюта
	|ПОМЕСТИТЬ ЦеныПоВидуЦенУсредненныеПоСериям
	|ИЗ
	|	(ВЫБРАТЬ
	|		Товары.Документ                     КАК Документ,
	|		Товары.НомерСтроки                  КАК НомерСтроки,
	|		Товары.ДатаПолученияЦены            КАК ДатаПолученияЦены,
	|		ЦеныНоменклатуры.ВидЦены            КАК ВидЦены,
	|		ЦеныНоменклатуры.Номенклатура       КАК Номенклатура,
	|		ЦеныНоменклатуры.СерияНоменклатуры  КАК СерияНоменклатуры,
	|		ЦеныНоменклатуры.Партия             КАК Партия,
	|		МАКСИМУМ(ЦеныНоменклатуры.Период)   КАК Период
	|	ИЗ
	|		ЦеныПоВидуЦенТовары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			ЦеныПоВидуЦенТочноеСовпадение КАК ЦеныПоВидуЦен
	|		ПО
	|			Товары.Документ = ЦеныПоВидуЦен.Документ
	|			И Товары.НомерСтроки = ЦеныПоВидуЦен.НомерСтроки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	|		ПО
	|			Товары.ВидЦены = ЦеныНоменклатуры.ВидЦены
	|			И Товары.Номенклатура = ЦеныНоменклатуры.Номенклатура
	|			И ЦеныПоВидуЦен.Документ ЕСТЬ NULL
	|			И Товары.СерияНоменклатуры = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|			И Товары.Партия = ЦеныНоменклатуры.Партия
	|			И Товары.ДатаПолученияЦены >= ЦеныНоменклатуры.Период
	|	СГРУППИРОВАТЬ ПО
	|		Товары.Документ,
	|		Товары.НомерСтроки,
	|		Товары.ДатаПолученияЦены,
	|		ЦеныНоменклатуры.ВидЦены,
	|		ЦеныНоменклатуры.Номенклатура,
	|		ЦеныНоменклатуры.СерияНоменклатуры,
	|		ЦеныНоменклатуры.Партия
	|	) КАК ПериодыЦенНоменклатуры
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	|	ПО
	|		ПериодыЦенНоменклатуры.ВидЦены = ЦеныНоменклатуры.ВидЦены
	|		И ПериодыЦенНоменклатуры.Номенклатура = ЦеныНоменклатуры.Номенклатура
	|		И ПериодыЦенНоменклатуры.СерияНоменклатуры = ЦеныНоменклатуры.СерияНоменклатуры
	|		И ПериодыЦенНоменклатуры.Партия = ЦеныНоменклатуры.Партия
	|		И ПериодыЦенНоменклатуры.Период = ЦеныНоменклатуры.Период
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ЕдиницыИзмеренияНоменклатуры КАК КоэффициентыУпаковок
	|	ПО
	|		ПериодыЦенНоменклатуры.Номенклатура = КоэффициентыУпаковок.Номенклатура
	|		И ЦеныНоменклатуры.Упаковка = КоэффициентыУпаковок.ЕдиницаИзмерения
	|СГРУППИРОВАТЬ ПО
	|	ПериодыЦенНоменклатуры.Документ,
	|	ПериодыЦенНоменклатуры.НомерСтроки,
	|	ПериодыЦенНоменклатуры.ДатаПолученияЦены
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ,
	|	НомерСтроки
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПериодыЦенНоменклатуры.Документ                                    КАК Документ,
	|	ПериодыЦенНоменклатуры.НомерСтроки                                 КАК НомерСтроки,
	|	ПериодыЦенНоменклатуры.ДатаПолученияЦены                           КАК ДатаПолученияЦены,
	|	СРЕДНЕЕ(ЦеныНоменклатуры.Цена / КоэффициентыУпаковок.Коэффициент)  КАК Цена,
	|	МАКСИМУМ(ЦеныНоменклатуры.Валюта)                                  КАК Валюта
	|ПОМЕСТИТЬ ЦеныПоВидуЦенУсредненныеПоПартиям
	|ИЗ
	|	(ВЫБРАТЬ
	|		Товары.Документ                     КАК Документ,
	|		Товары.НомерСтроки                  КАК НомерСтроки,
	|		Товары.ДатаПолученияЦены            КАК ДатаПолученияЦены,
	|		ЦеныНоменклатуры.ВидЦены            КАК ВидЦены,
	|		ЦеныНоменклатуры.Номенклатура       КАК Номенклатура,
	|		ЦеныНоменклатуры.СерияНоменклатуры  КАК СерияНоменклатуры,
	|		ЦеныНоменклатуры.Партия             КАК Партия,
	|		МАКСИМУМ(ЦеныНоменклатуры.Период)   КАК Период
	|	ИЗ
	|		ЦеныПоВидуЦенТовары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			ЦеныПоВидуЦенТочноеСовпадение КАК ЦеныПоВидуЦен
	|		ПО
	|			Товары.Документ = ЦеныПоВидуЦен.Документ
	|			И Товары.НомерСтроки = ЦеныПоВидуЦен.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			ЦеныПоВидуЦенУсредненныеПоСериям КАК ЦеныПоВидуЦенУсредненныеПоСериям
	|		ПО
	|			Товары.Документ = ЦеныПоВидуЦенУсредненныеПоСериям.Документ
	|			И Товары.НомерСтроки = ЦеныПоВидуЦенУсредненныеПоСериям.НомерСтроки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	|		ПО
	|			Товары.ВидЦены = ЦеныНоменклатуры.ВидЦены
	|			И Товары.Номенклатура = ЦеныНоменклатуры.Номенклатура
	|			И ЦеныПоВидуЦен.Документ ЕСТЬ NULL
	|			И ЦеныПоВидуЦенУсредненныеПоСериям.Документ ЕСТЬ NULL
	|			И Товары.СерияНоменклатуры = ЦеныНоменклатуры.СерияНоменклатуры
	|			И Товары.Партия = ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка)
	|			И Товары.ДатаПолученияЦены >= ЦеныНоменклатуры.Период
	|	СГРУППИРОВАТЬ ПО
	|		Товары.Документ,
	|		Товары.НомерСтроки,
	|		Товары.ДатаПолученияЦены,
	|		ЦеныНоменклатуры.ВидЦены,
	|		ЦеныНоменклатуры.Номенклатура,
	|		ЦеныНоменклатуры.СерияНоменклатуры,
	|		ЦеныНоменклатуры.Партия
	|	) КАК ПериодыЦенНоменклатуры
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	|	ПО
	|		ПериодыЦенНоменклатуры.ВидЦены = ЦеныНоменклатуры.ВидЦены
	|		И ПериодыЦенНоменклатуры.Номенклатура = ЦеныНоменклатуры.Номенклатура
	|		И ПериодыЦенНоменклатуры.СерияНоменклатуры = ЦеныНоменклатуры.СерияНоменклатуры
	|		И ПериодыЦенНоменклатуры.Партия = ЦеныНоменклатуры.Партия
	|		И ПериодыЦенНоменклатуры.Период = ЦеныНоменклатуры.Период
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ЕдиницыИзмеренияНоменклатуры КАК КоэффициентыУпаковок
	|	ПО
	|		ПериодыЦенНоменклатуры.Номенклатура = КоэффициентыУпаковок.Номенклатура
	|		И ЦеныНоменклатуры.Упаковка = КоэффициентыУпаковок.ЕдиницаИзмерения
	|СГРУППИРОВАТЬ ПО
	|	ПериодыЦенНоменклатуры.Документ,
	|	ПериодыЦенНоменклатуры.НомерСтроки,
	|	ПериодыЦенНоменклатуры.ДатаПолученияЦены
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ,
	|	НомерСтроки
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПериодыЦенНоменклатуры.Документ                                    КАК Документ,
	|	ПериодыЦенНоменклатуры.НомерСтроки                                 КАК НомерСтроки,
	|	ПериодыЦенНоменклатуры.ДатаПолученияЦены                           КАК ДатаПолученияЦены,
	|	СРЕДНЕЕ(ЦеныНоменклатуры.Цена / КоэффициентыУпаковок.Коэффициент)  КАК Цена,
	|	МАКСИМУМ(ЦеныНоменклатуры.Валюта)                                  КАК Валюта
	|ПОМЕСТИТЬ ЦеныПоВидуЦенУсредненныеПоСериямИПартиям
	|ИЗ
	|	(ВЫБРАТЬ
	|		Товары.Документ                     КАК Документ,
	|		Товары.НомерСтроки                  КАК НомерСтроки,
	|		Товары.ДатаПолученияЦены            КАК ДатаПолученияЦены,
	|		ЦеныНоменклатуры.ВидЦены            КАК ВидЦены,
	|		ЦеныНоменклатуры.Номенклатура       КАК Номенклатура,
	|		ЦеныНоменклатуры.СерияНоменклатуры  КАК СерияНоменклатуры,
	|		ЦеныНоменклатуры.Партия             КАК Партия,
	|		МАКСИМУМ(ЦеныНоменклатуры.Период)   КАК Период
	|	ИЗ
	|		ЦеныПоВидуЦенТовары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			ЦеныПоВидуЦенТочноеСовпадение КАК ЦеныПоВидуЦен
	|		ПО
	|			Товары.Документ = ЦеныПоВидуЦен.Документ
	|			И Товары.НомерСтроки = ЦеныПоВидуЦен.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			ЦеныПоВидуЦенУсредненныеПоСериям КАК ЦеныПоВидуЦенУсредненныеПоСериям
	|		ПО
	|			Товары.Документ = ЦеныПоВидуЦенУсредненныеПоСериям.Документ
	|			И Товары.НомерСтроки = ЦеныПоВидуЦенУсредненныеПоСериям.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			ЦеныПоВидуЦенУсредненныеПоПартиям КАК ЦеныПоВидуЦенУсредненныеПоПартиям
	|		ПО
	|			Товары.Документ = ЦеныПоВидуЦенУсредненныеПоПартиям.Документ
	|			И Товары.НомерСтроки = ЦеныПоВидуЦенУсредненныеПоПартиям.НомерСтроки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	|		ПО
	|			Товары.ВидЦены = ЦеныНоменклатуры.ВидЦены
	|			И Товары.Номенклатура = ЦеныНоменклатуры.Номенклатура
	|			И ЦеныПоВидуЦен.Документ ЕСТЬ NULL
	|			И ЦеныПоВидуЦенУсредненныеПоСериям.Документ ЕСТЬ NULL
	|			И ЦеныПоВидуЦенУсредненныеПоПартиям.Документ ЕСТЬ NULL
	|			И Товары.СерияНоменклатуры = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|			И Товары.Партия = ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка)
	|			И Товары.ДатаПолученияЦены >= ЦеныНоменклатуры.Период
	|	СГРУППИРОВАТЬ ПО
	|		Товары.Документ,
	|		Товары.НомерСтроки,
	|		Товары.ДатаПолученияЦены,
	|		ЦеныНоменклатуры.ВидЦены,
	|		ЦеныНоменклатуры.Номенклатура,
	|		ЦеныНоменклатуры.СерияНоменклатуры,
	|		ЦеныНоменклатуры.Партия
	|	) КАК ПериодыЦенНоменклатуры
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	|	ПО
	|		ПериодыЦенНоменклатуры.ВидЦены = ЦеныНоменклатуры.ВидЦены
	|		И ПериодыЦенНоменклатуры.Номенклатура = ЦеныНоменклатуры.Номенклатура
	|		И ПериодыЦенНоменклатуры.СерияНоменклатуры = ЦеныНоменклатуры.СерияНоменклатуры
	|		И ПериодыЦенНоменклатуры.Партия = ЦеныНоменклатуры.Партия
	|		И ПериодыЦенНоменклатуры.Период = ЦеныНоменклатуры.Период
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ЕдиницыИзмеренияНоменклатуры КАК КоэффициентыУпаковок
	|	ПО
	|		ПериодыЦенНоменклатуры.Номенклатура = КоэффициентыУпаковок.Номенклатура
	|		И ЦеныНоменклатуры.Упаковка = КоэффициентыУпаковок.ЕдиницаИзмерения
	|СГРУППИРОВАТЬ ПО
	|	ПериодыЦенНоменклатуры.Документ,
	|	ПериодыЦенНоменклатуры.НомерСтроки,
	|	ПериодыЦенНоменклатуры.ДатаПолученияЦены
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЦеныПоВидуЦен.Документ           КАК Документ,
	|	ЦеныПоВидуЦен.НомерСтроки        КАК НомерСтроки,
	|	ЦеныПоВидуЦен.ДатаПолученияЦены  КАК ДатаПолученияЦены,
	|	ЦеныПоВидуЦен.Цена               КАК Цена,
	|	ЦеныПоВидуЦен.Валюта             КАК Валюта
	|ПОМЕСТИТЬ ЦеныПоВидуЦен
	|ИЗ
	|	ЦеныПоВидуЦенТочноеСовпадение КАК ЦеныПоВидуЦен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЦеныПоВидуЦен.Документ           КАК Документ,
	|	ЦеныПоВидуЦен.НомерСтроки        КАК НомерСтроки,
	|	ЦеныПоВидуЦен.ДатаПолученияЦены  КАК ДатаПолученияЦены,
	|	ЦеныПоВидуЦен.Цена               КАК Цена,
	|	ЦеныПоВидуЦен.Валюта             КАК Валюта
	|ИЗ
	|	ЦеныПоВидуЦенУсредненныеПоСериям КАК ЦеныПоВидуЦен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЦеныПоВидуЦен.Документ           КАК Документ,
	|	ЦеныПоВидуЦен.НомерСтроки        КАК НомерСтроки,
	|	ЦеныПоВидуЦен.ДатаПолученияЦены  КАК ДатаПолученияЦены,
	|	ЦеныПоВидуЦен.Цена               КАК Цена,
	|	ЦеныПоВидуЦен.Валюта             КАК Валюта
	|ИЗ
	|	ЦеныПоВидуЦенУсредненныеПоПартиям КАК ЦеныПоВидуЦен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЦеныПоВидуЦен.Документ           КАК Документ,
	|	ЦеныПоВидуЦен.НомерСтроки        КАК НомерСтроки,
	|	ЦеныПоВидуЦен.ДатаПолученияЦены  КАК ДатаПолученияЦены,
	|	ЦеныПоВидуЦен.Цена               КАК Цена,
	|	ЦеныПоВидуЦен.Валюта             КАК Валюта
	|ИЗ
	|	ЦеныПоВидуЦенУсредненныеПоСериямИПартиям КАК ЦеныПоВидуЦен
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ,
	|	НомерСтроки
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПериодыКурсовВалютПоДокументам.Документ КАК Документ,
	|	КурсыВалют.Курс                         КАК Курс,
	|	КурсыВалют.Кратность                    КАК Кратность
	|ПОМЕСТИТЬ ЦеныПоВидуЦенКурсыВалют
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЦеныПоВидуЦен.Документ      КАК Документ,
	|		ЦеныПоВидуЦен.Валюта        КАК Валюта,
	|		МАКСИМУМ(КурсыВалют.Период) КАК Период
	|	ИЗ
	|		ЦеныПоВидуЦен КАК ЦеныПоВидуЦен
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			РегистрСведений.КурсыВалют КАК КурсыВалют
	|		ПО
	|			ЦеныПоВидуЦен.Валюта = КурсыВалют.Валюта
	|			И ЦеныПоВидуЦен.ДатаПолученияЦены >= КурсыВалют.Период
	|	СГРУППИРОВАТЬ ПО
	|		ЦеныПоВидуЦен.Документ,
	|		ЦеныПоВидуЦен.Валюта
	|	) КАК ПериодыКурсовВалютПоДокументам
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			РегистрСведений.КурсыВалют КАК КурсыВалют
	|	ПО
	|		ПериодыКурсовВалютПоДокументам.Валюта = КурсыВалют.Валюта
	|		И ПериодыКурсовВалютПоДокументам.Период = КурсыВалют.Период
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Товары.Документ                           КАК Документ,
	|	Товары.Организация                        КАК Организация,
	|	Товары.Склад                              КАК Склад,
	|	Товары.РазделУчета                        КАК РазделУчета,
	|	Товары.Номенклатура                       КАК Номенклатура,
	|	Товары.СерияНоменклатурыДляСебестоимости  КАК СерияНоменклатуры,
	|	Товары.ПартияДляСебестоимости             КАК Партия,
	|	Товары.ИсточникФинансирования             КАК ИсточникФинансирования,
	|	Товары.ДатаПолученияЦены                  КАК ДатаПолученияЦены,
	|	Товары.ПредварительныйРасчет              КАК ПредварительныйРасчет
	|ПОМЕСТИТЬ ЦеныПоСебестоимостиТовары
	|ИЗ
	|	втТовары КАК Товары
	|ГДЕ
	|	Товары.ИсточникИнформацииОЦенах = ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПоСебестоимости)
	|	И НЕ Товары.ПредварительныйРасчет ЕСТЬ NULL
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПериодыСтоимостиТоваров.Документ                  КАК Документ,
	|	ПериодыСтоимостиТоваров.Организация               КАК Организация,
	|	ПериодыСтоимостиТоваров.Склад                     КАК Склад,
	|	ПериодыСтоимостиТоваров.РазделУчета               КАК РазделУчета,
	|	ПериодыСтоимостиТоваров.Номенклатура              КАК Номенклатура,
	|	ПериодыСтоимостиТоваров.СерияНоменклатуры         КАК СерияНоменклатуры,
	|	ПериодыСтоимостиТоваров.Партия                    КАК Партия,
	|	ПериодыСтоимостиТоваров.ИсточникФинансирования    КАК ИсточникФинансирования,
	|	СтоимостьТоваров.СтоимостьРегл                    КАК Стоимость
	|ПОМЕСТИТЬ ЦеныПоСебестоимости
	|ИЗ
	|	(ВЫБРАТЬ
	|		Товары.Документ                           КАК Документ,
	|		Товары.Организация                        КАК Организация,
	|		Товары.Склад                              КАК Склад,
	|		Товары.Номенклатура                       КАК Номенклатура,
	|		Товары.СерияНоменклатуры                  КАК СерияНоменклатуры,
	|		Товары.Партия                             КАК Партия,
	|		Товары.ИсточникФинансирования             КАК ИсточникФинансирования,
	|		Товары.РазделУчета                        КАК РазделУчета,
	|		АналитикиВидаУчета.КлючАналитики          КАК АналитикаВидаУчета,
	|		АналитикиУчетаНоменклатуры.КлючАналитики  КАК АналитикаУчетаНоменклатуры,
	|		МАКСИМУМ(СтоимостьТоваров.Период)         КАК Период
	|	ИЗ
	|		ЦеныПоСебестоимостиТовары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			РегистрСведений.АналитикаВидаУчета КАК АналитикиВидаУчета
	|		ПО
	|			Товары.Организация                = АналитикиВидаУчета.Организация
	|			И Товары.Склад                    = АналитикиВидаУчета.Склад
	|			И Товары.ИсточникФинансирования   = АналитикиВидаУчета.ИсточникФинансирования
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикиУчетаНоменклатуры
	|		ПО
	|			Товары.Номенклатура        = АналитикиУчетаНоменклатуры.Номенклатура
	|			И Товары.СерияНоменклатуры = АналитикиУчетаНоменклатуры.СерияНоменклатуры
	|			И Товары.Партия            = АналитикиУчетаНоменклатуры.Партия
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			РегистрСведений.СтоимостьТоваров КАК СтоимостьТоваров
	|		ПО
	|			АналитикиВидаУчета.КлючАналитики = СтоимостьТоваров.АналитикаВидаУчета
	|			И АналитикиУчетаНоменклатуры.КлючАналитики = СтоимостьТоваров.АналитикаУчетаНоменклатуры
	|			И Товары.РазделУчета = СтоимостьТоваров.РазделУчета
	|			И Товары.ДатаПолученияЦены >= СтоимостьТоваров.Период
	|			И Товары.ПредварительныйРасчет
	|	СГРУППИРОВАТЬ ПО
	|		Товары.Документ,
	|		Товары.Организация,
	|		Товары.Склад,
	|		Товары.Номенклатура,
	|		Товары.СерияНоменклатуры,
	|		Товары.Партия,
	|		Товары.ИсточникФинансирования,
	|		Товары.РазделУчета,
	|		АналитикиВидаУчета.КлючАналитики,
	|		АналитикиУчетаНоменклатуры.КлючАналитики
	|	) КАК ПериодыСтоимостиТоваров
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СтоимостьТоваров КАК СтоимостьТоваров
	|	ПО
	|		ПериодыСтоимостиТоваров.АналитикаВидаУчета = СтоимостьТоваров.АналитикаВидаУчета
	|		И ПериодыСтоимостиТоваров.АналитикаУчетаНоменклатуры = СтоимостьТоваров.АналитикаУчетаНоменклатуры
	|		И ПериодыСтоимостиТоваров.РазделУчета = СтоимостьТоваров.РазделУчета
	|		И ПериодыСтоимостиТоваров.Период = СтоимостьТоваров.Период
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Товары.Документ                  КАК Документ,
	|	Товары.Организация               КАК Организация,
	|	Товары.Склад                     КАК Склад,
	|	Товары.РазделУчета               КАК РазделУчета,
	|	Товары.Номенклатура              КАК Номенклатура,
	|	Товары.СерияНоменклатуры         КАК Серия,
	|	Товары.Партия                    КАК Партия,
	|	Товары.ИсточникФинансирования    КАК ИсточникФинансирования,
	|	ВЫБОР
	|		КОГДА СУММА(СебестоимостьТоваров.Количество) = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВЫРАЗИТЬ(СУММА(СебестоимостьТоваров.СтоимостьРегл) КАК ЧИСЛО(23, 10)) / СУММА(СебестоимостьТоваров.Количество)
	|	КОНЕЦ                          КАК Цена
	|ИЗ
	|	ЦеныПоСебестоимостиТовары КАК Товары
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаВидаУчета КАК АналитикиВидаУчета
	|	ПО
	|		Товары.Организация = АналитикиВидаУчета.Организация
	|		И Товары.Склад = АналитикиВидаУчета.Склад
	|		И Товары.ИсточникФинансирования = АналитикиВидаУчета.ИсточникФинансирования
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикиУчетаНоменклатуры
	|	ПО
	|		Товары.Номенклатура = АналитикиУчетаНоменклатуры.Номенклатура
	|		И Товары.СерияНоменклатуры = АналитикиУчетаНоменклатуры.СерияНоменклатуры
	|		И Товары.Партия = АналитикиУчетаНоменклатуры.Партия
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.СебестоимостьТоваров КАК СебестоимостьТоваров
	|	ПО
	|		СебестоимостьТоваров.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		И СебестоимостьТоваров.Активность
	|		И СебестоимостьТоваров.РазделУчета = Товары.РазделУчета
	|		И СебестоимостьТоваров.АналитикаВидаУчета = АналитикиВидаУчета.КлючАналитики
	|		И СебестоимостьТоваров.АналитикаУчетаНоменклатуры = АналитикиУчетаНоменклатуры.КлючАналитики
	|		И СебестоимостьТоваров.ДокументДвижения = Товары.Документ
	|		И НЕ Товары.ПредварительныйРасчет
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Документ,
	|	Товары.Организация,
	|	Товары.Склад,
	|	Товары.РазделУчета,
	|	Товары.Номенклатура,
	|	Товары.СерияНоменклатуры,
	|	Товары.Партия,
	|	Товары.ИсточникФинансирования
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЦеныПоВидуЦен.Документ     КАК Документ,
	|	ЦеныПоВидуЦен.НомерСтроки  КАК НомерСтроки,
	|	ЦеныПоВидуЦен.Цена * ЕСТЬNULL(КурсыВалют.Курс, 1) / ЕСТЬNULL(КурсыВалют.Кратность, 1)  КАК Цена
	|ПОМЕСТИТЬ ЦеныНоменклатуры
	|ИЗ
	|	ЦеныПоВидуЦен КАК ЦеныПоВидуЦен
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ЦеныПоВидуЦенКурсыВалют КАК КурсыВалют
	|	ПО
	|		ЦеныПоВидуЦен.Документ = КурсыВалют.Документ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	Товары.Документ                КАК Документ,
	|	Товары.НомерСтроки             КАК НомерСтроки,
	|	ЦеныПоСебестоимости.Стоимость  КАК Цена
	|ИЗ
	|	втТовары КАК Товары
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ЦеныПоСебестоимости КАК ЦеныПоСебестоимости
	|	ПО
	|		Товары.Документ = ЦеныПоСебестоимости.Документ
	|		И Товары.Организация = ЦеныПоСебестоимости.Организация
	|		И Товары.Склад =ЦеныПоСебестоимости.Склад
	|		И Товары.РазделУчета = ЦеныПоСебестоимости.РазделУчета
	|		И Товары.Номенклатура = ЦеныПоСебестоимости.Номенклатура
	|		И Товары.СерияНоменклатурыДляСебестоимости = ЦеныПоСебестоимости.СерияНоменклатуры
	|		И Товары.ПартияДляСебестоимости = ЦеныПоСебестоимости.Партия
	|		И Товары.ИсточникФинансирования = ЦеныПоСебестоимости.ИсточникФинансирования
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ,
	|	НомерСтроки
	|";
	
	Если Не ПараметрыПолученияЦен.ИспользоватьЦеныПоВидуЦен Тогда
		СхемаЗапроса = Новый СхемаЗапроса;
		СхемаЗапроса.УстановитьТекстЗапроса(ТекстЗапроса);
		Индекс = СхемаЗапроса.ПакетЗапросов.Количество() - 1;
		
		ПоследнийЗапрос = СхемаЗапроса.ПакетЗапросов[Индекс];
		ПоследнийЗапрос.Операторы.Удалить(0);
		
		Индекс = Индекс - 1;
		Пока Индекс >= 0 Цикл
			Если СтрНачинаетсяС(СхемаЗапроса.ПакетЗапросов[Индекс].ТаблицаДляПомещения, "ЦеныПоВидуЦен") Тогда
				СхемаЗапроса.ПакетЗапросов.Удалить(Индекс);
			КонецЕсли;
			Индекс = Индекс - 1;
		КонецЦикла;
		
		ТекстЗапроса = СхемаЗапроса.ПолучитьТекстЗапроса();
	Иначе
		Если ПараметрыПолученияЦен.ТочноеСоответствиеЦеныПоВидуЦен Тогда
			СхемаЗапроса = Новый СхемаЗапроса;
			СхемаЗапроса.УстановитьТекстЗапроса(ТекстЗапроса);
			
			УдаляемыеТаблицы = Новый Структура;
			УдаляемыеТаблицы.Вставить("ЦеныПоВидуЦенУсредненныеПоСериям");
			УдаляемыеТаблицы.Вставить("ЦеныПоВидуЦенУсредненныеПоПартиям");
			УдаляемыеТаблицы.Вставить("ЦеныПоВидуЦенУсредненныеПоСериямИПартиям");
			УдаляемыеТаблицы.Вставить("ЦеныПоВидуЦен");
			
			Индекс = СхемаЗапроса.ПакетЗапросов.Количество() - 1;
			Пока Индекс >= 0 Цикл
				ИмяТаблицы = СхемаЗапроса.ПакетЗапросов[Индекс].ТаблицаДляПомещения;
				Если УдаляемыеТаблицы.Свойство(ИмяТаблицы) Тогда
					СхемаЗапроса.ПакетЗапросов.Удалить(Индекс);
				КонецЕсли;
				Индекс = Индекс - 1;
			КонецЦикла;
			
			Для Каждого Запрос Из СхемаЗапроса.ПакетЗапросов Цикл
				Если Запрос.ТаблицаДляПомещения = "ЦеныПоВидуЦенТочноеСовпадение" Тогда
					Запрос.ТаблицаДляПомещения = "ЦеныПоВидуЦен";
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
			ТекстЗапроса = СхемаЗапроса.ПолучитьТекстЗапроса();
		КонецЕсли;
	КонецЕсли;
	
	Если Не ПараметрыПолученияЦен.ИспользоватьЦеныПоСебестоимости Тогда
		
		СхемаЗапроса = Новый СхемаЗапроса;
		СхемаЗапроса.УстановитьТекстЗапроса(ТекстЗапроса);
		Индекс = СхемаЗапроса.ПакетЗапросов.Количество() - 1;
		
		ПоследнийЗапрос = СхемаЗапроса.ПакетЗапросов[Индекс];
		Если ПоследнийЗапрос.Операторы.Количество() = 1 Тогда
			СхемаЗапроса.ПакетЗапросов.Удалить(Индекс);
		Иначе
			ПоследнийЗапрос.Операторы.Удалить(ПоследнийЗапрос.Операторы.Количество() - 1);
		КонецЕсли;
		
		Индекс = Индекс - 1;
		Пока Индекс >= 0 Цикл
			Если СтрНачинаетсяС(СхемаЗапроса.ПакетЗапросов[Индекс].ТаблицаДляПомещения, "ЦеныПоСебестоимости") Тогда
				СхемаЗапроса.ПакетЗапросов.Удалить(Индекс);
			КонецЕсли;
			Индекс = Индекс - 1;
		КонецЦикла;
		
		ТекстЗапроса = СхемаЗапроса.ПолучитьТекстЗапроса();
		
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Возвращает текст запроса дополненный текстом запроса цен и итоговой выборкой шапки и табличной части.
//
// Параметры:
//  ТекстЗапроса          - Строка - текст запроса, в который нужно добавить запрос цен.
//  ПараметрыПолученияЦен - Структура - см. ФормированиеПечатныхФормБольничнаяАптека.ПараметрыПолученияЦен.
//
// Возвращаемое значение:
//  Строка - текст запроса, дополненный ценами и выборкой шапки и товаров.
//
Функция ТекстЗапросаСЦенами(ТекстЗапроса, ПараметрыПолученияЦен = Неопределено) Экспорт
	
	Если ПараметрыПолученияЦен = Неопределено Тогда
		ПараметрыПолученияЦен = ПараметрыПолученияЦен();
	КонецЕсли;
	
	СхемаЗапроса = Новый СхемаЗапроса;
	СхемаЗапроса.УстановитьТекстЗапроса(ТекстЗапроса);
	
	Если Не ПравоДоступа("Чтение", Метаданные.Документы.РасчетСебестоимостиТоваров) Тогда
		ПараметрыПолученияЦен.ИспользоватьЦеныПоСебестоимости = Ложь;
		Для Каждого ЗапросПакета Из СхемаЗапроса.ПакетЗапросов Цикл
			Если ТипЗнч(ЗапросПакета) <> Тип("ЗапросВыбораСхемыЗапроса") Тогда
				Продолжить;
			КонецЕсли;
			Если ЗапросПакета.ТаблицаДляПомещения = "втШапка" Тогда
				КолонкаПредварительныйРасчет = ЗапросПакета.Колонки.Найти("ПредварительныйРасчет");
				Для Каждого Оператор Из ЗапросПакета.Операторы Цикл
					Источник = Оператор.Источники.НайтиПоИмени("Документ.РасчетСебестоимостиТоваров");
					Если Источник <> Неопределено Тогда
						Если КолонкаПредварительныйРасчет <> Неопределено Тогда
							Оператор.ВыбираемыеПоля.Установить(ЗапросПакета.Колонки.Индекс(КолонкаПредварительныйРасчет), Новый ВыражениеСхемыЗапроса("NULL"));
						КонецЕсли;
						Оператор.Источники.Удалить(Оператор.Источники.Индекс(Источник));
					КонецЕсли;
				КонецЦикла;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если ВыбранИсточникПолученияЦен(ПараметрыПолученияЦен) Тогда
		ТекстЗапросаЦен = ТекстЗапросаЦен(ПараметрыПолученияЦен);
		СхемаЗапросаЦен = Новый СхемаЗапроса;
		СхемаЗапросаЦен.УстановитьТекстЗапроса(ТекстЗапросаЦен);
		
		Для Каждого ЗапросПакета Из СхемаЗапросаЦен.ПакетЗапросов Цикл
			Запрос = СхемаЗапроса.ПакетЗапросов.Добавить(Тип("ЗапросВыбораСхемыЗапроса"));
			Запрос.УстановитьТекстЗапроса(ЗапросПакета.ПолучитьТекстЗапроса());
		КонецЦикла;
	Иначе
		Запрос = СхемаЗапроса.ПакетЗапросов.Добавить(Тип("ЗапросВыбораСхемыЗапроса"));
		Запрос.УстановитьТекстЗапроса("
		|ВЫБРАТЬ
		|	NULL КАК Документ,
		|	0    КАК НомерСтроки,
		|	0    КАК Цена
		|ПОМЕСТИТЬ ЦеныНоменклатуры
		|");
	КонецЕсли;
	
	Запрос = СхемаЗапроса.ПакетЗапросов.Добавить(Тип("ЗапросВыбораСхемыЗапроса"));
	Запрос.УстановитьТекстЗапроса("
	|ВЫБРАТЬ
	|	*
	|ИЗ
	|	втШапка");
	
	//Запрос = СхемаЗапроса.ПакетЗапросов.Добавить(Тип("ЗапросВыбораСхемыЗапроса"));
	//Запрос.УстановитьТекстЗапроса(
	СхемаЗапроса.УстановитьТекстЗапроса(СхемаЗапроса.ПолучитьТекстЗапроса() + ";
	|ВЫБРАТЬ
	|	Товары.*,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0) * Товары.Коэффициент КАК ЧИСЛО(15, 2)) КАК Цена,
	|	ВЫРАЗИТЬ(Товары.Количество * ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0) * Товары.Коэффициент КАК ЧИСЛО(15, 2)) КАК Сумма
	|ИЗ
	|	втТовары КАК Товары
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ЦеныНоменклатуры КАК ЦеныНоменклатуры
	|	ПО
	|		Товары.Документ = ЦеныНоменклатуры.Документ
	|		И Товары.НомерСтроки = ЦеныНоменклатуры.НомерСтроки
	|УПОРЯДОЧИТЬ ПО
	|	Товары.Документ,
	|	Товары.НомерСтроки
	|ИТОГИ ПО
	|	Товары.Документ
	|");
	
	Возврат СхемаЗапроса.ПолучитьТекстЗапроса();
	
КонецФункции

#КонецОбласти // ПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

Процедура ВывестиТабличныйДокумент(ТабличныйДокумент, Область, ДанныеОбласти, Уровень)
	
	Если ДанныеОбласти <> Неопределено Тогда
		Область.Параметры.Заполнить(ДанныеОбласти);
	КонецЕсли;
	
	Если Уровень = Неопределено Тогда
		ТабличныйДокумент.Вывести(Область);
	Иначе
		ТабличныйДокумент.Вывести(Область, Уровень);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти // СлужебныеПроцедурыИФункции
