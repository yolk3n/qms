#Область СлужебныеПроцедурыИФункции

#Область ДанныеСопоставленияНоменклатуры

Функция ТекстЗапросаДанныеНоменклатуры() Экспорт
	
	ТекстЗапроса = "";
	РаботаСНоменклатуройПереопределяемый.ИнициализацияЗапросаОтбораДанныхНоменклатуры(ТекстЗапроса);
	
	СхемаЗапроса = Новый СхемаЗапроса;
	СхемаЗапроса.УстановитьТекстЗапроса(ТекстЗапроса);
	
	ЗапросПакета = СхемаЗапроса.ПакетЗапросов[СхемаЗапроса.ПакетЗапросов.Количество() -1];
	Колонка = ЗапросПакета.Колонки.Найти("Номенклатура");
	
	Если Колонка = Неопределено Тогда
		ВызватьИсключение НСтр("ru = 'В запросе отсутствует обязательная колонка ""Номенклатура"".'");
	КонецЕсли;
	
	ИндексКолонки = ЗапросПакета.Колонки.Индекс(Колонка);
	
	Для Каждого ОператорыЗапроса Из ЗапросПакета.Операторы Цикл
		
		ТекстОтбора = СтрШаблон("%1 = &Номенклатура", ОператорыЗапроса.ВыбираемыеПоля[ИндексКолонки]);
		ОператорыЗапроса.Отбор.Добавить(ТекстОтбора);
		
	КонецЦикла;
	
	Возврат СхемаЗапроса.ПолучитьТекстЗапроса();
	
КонецФункции

#КонецОбласти

#Область КэшПутейКатегорий

// Инициализирует кэш путей категорий до корня.
// Используется для уменьшения запросов CategoryPathToRootRequest к сервису 1СН.
// Кэш представляет собой Соответствие, наполняется по мере выполнения запросов к сервису.
// Ключи - Строка - идентификаторы категорий 1СН.
// Значения - Структура:
//  * ТекущийПуть - Массив из Строка - идентификаторы вышестоящих по иерархии категорий, начиная с корня и не включая текущий узел.
//  * ДанныеУзла - Структура:
//   ** Наименование - Строка.
//   ** КоличествоПодчиненных - Число.
//   ** ЛистоваяКатегория - Булево - Истина для листовых категорий, в противном случае ключ отсутствует.
//   ** Ранг - Число - ключ присутствует только в том случае, если ответ от сервиса содержит ключ rank.
//  * ДочерниеПолучены - Булево - Истина для групповых категорий, если все дочерние получены из сервиса, в противном случае ключ отсутствует.
//
// Возвращаемое значение:
//  Структура:
//   * ПутиККорню - Соответствие - структура описана выше.
//   * КорневыеПолучены - Булево - Истина, если кэш уже содержит корневые категории.
// 
Функция КэшПутейКатегорий() Экспорт
	
	Возврат Новый Структура("ПутиККорню,КорневыеПолучены", Новый Соответствие, Ложь);
	
КонецФункции

#КонецОбласти

#Область ТоварныеГруппыИДополнительныеРеквизиты

// Возвращает перечень товарных групп сервиса в виде строки JSON
//
// Возвращаемое значение:
//  Строка
//
Функция ТоварныеГруппыСервиса() Экспорт
	
	Возврат РаботаСНоменклатуройСлужебный.СодержаниеФайлаСервисаПоАдресу("/sources/groups", "ТоварныеГруппыСервиса");
	
КонецФункции

// Возвращает структуру категорий 1С:Номенклатуры по товарным группам в виде строки JSON
//
// Возвращаемое значение:
//  Строка
//
Функция КатегорииТоварныхГрупп() Экспорт
	
	Возврат РаботаСНоменклатуройСлужебный.СодержаниеФайлаСервисаПоАдресу("/sources/categories", "КатегорииТоварнойГруппы");
	
КонецФункции

// Возвращает структуру доп.реквизитов 1С:Номенклатуры по товарным группам в виде строки JSON
//
// Возвращаемое значение:
//  Строка
//
Функция ДополнительныеРеквизитыТоварныхГрупп() Экспорт
	
	Возврат РаботаСНоменклатуройСлужебный.СодержаниеФайлаСервисаПоАдресу("/sources/attributes/nomenclature", "ДополнительныеРеквизитыТоварныхГрупп");
	
КонецФункции

#КонецОбласти

#КонецОбласти