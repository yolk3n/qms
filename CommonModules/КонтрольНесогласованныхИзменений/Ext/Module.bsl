
#Область ПрограммныйИнтерфейс

Процедура НастроитьКонтрольИзмененияДанных(Форма, ИменаЭлементов, Контролировать) Экспорт
	
	КонтрольИнициализирован = ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, ИмяРеквизитаНастройкиКонтроляИзмененияДанных());
	
	Если Контролировать Тогда
		
		Если Не КонтрольИнициализирован Тогда
			ИнициализироватьКонтрольИзмененияДанных(Форма);
		КонецЕсли;
		
		УстановитьКонтрольИзмененияДанных(Форма, ИменаЭлементов);
		
	ИначеЕсли КонтрольИнициализирован Тогда
		
		СнятьКонтрольИзмененияДанных(Форма, ИменаЭлементов);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти // ПрограммныйИнтерфейс

#Область СлужебныеПроцедурыИФункции

Процедура ИнициализироватьКонтрольИзмененияДанных(Форма)
	
	Реквизиты = Новый Массив;
	Реквизиты.Добавить(Новый РеквизитФормы(ИмяРеквизитаНастройкиКонтроляИзмененияДанных(), Новый ОписаниеТипов));
	
	Форма.ИзменитьРеквизиты(Реквизиты);
	
КонецПроцедуры

Процедура УстановитьКонтрольИзмененияДанных(Форма, ИменаЭлементов)
	
	Если Форма.Объект.Ссылка.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКонтроляИзмененияДанных = Форма[ИмяРеквизитаНастройкиКонтроляИзмененияДанных()];
	Если НастройкиКонтроляИзмененияДанных <> Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКонтроляИзмененияДанных = Новый Структура;
	НастройкиКонтроляИзмененияДанных.Вставить("ПриИзменении", Новый Структура);
	НастройкиКонтроляИзмененияДанных.Вставить("Нажатие", Новый Структура);
	НастройкиКонтроляИзмененияДанных.Вставить("ПередНачаломИзменения", Новый Структура);
	НастройкиКонтроляИзмененияДанных.Вставить("ПередНачаломДобавления", Новый Структура);
	НастройкиКонтроляИзмененияДанных.Вставить("ПередУдалением", Новый Структура);
	НастройкиКонтроляИзмененияДанных.Вставить("Команды", Новый Структура);
	
	НастройкиКонтроляИзмененияДанных.Вставить("ЗначенияРеквизитов", Новый Структура);
	НастройкиКонтроляИзмененияДанных.Вставить("ПутьКДанным", Новый Структура);
	
	Элементы = Форма.Элементы;
	
	ИменаКонтролируемыхЭлементов = Новый Массив;
	
	УникальноеЗначение = Новый УникальныйИдентификатор;
	
	Для Каждого ИмяЭлемента Из ИменаЭлементов Цикл
		
		Если ИменаКонтролируемыхЭлементов.Найти(ИмяЭлемента) <> Неопределено Тогда
			Продолжить;;
		КонецЕсли;
		
		Элемент = Элементы[ИмяЭлемента];
		Если Элемент = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ТипЭлементаФормы = ТипЗнч(Элемент);
		Если ТипЭлементаФормы = Тип("ПолеФормы") Тогда
			
			ПутьКДанным = Элемент.ПутьКДанным;
			Если ЗначениеЗаполнено(ПутьКДанным) Тогда
				
				ПутьКДаннымМассивом = СтрРазделить(ПутьКДанным, ".");
				Данные = Форма;
				Для Каждого ЧастьПути Из ПутьКДаннымМассивом Цикл
					
					ТипДанных = ТипЗнч(Данные);
					Если ТипДанных = Тип("ФормаКлиентскогоПриложения") Или ТипДанных = Тип("ДанныеФормыСтруктура") Тогда
						Данные = Данные[ЧастьПути];
					Иначе
						Данные = УникальноеЗначение;
						Прервать;
					КонецЕсли;
					
				КонецЦикла;
				
				Если Данные <> УникальноеЗначение Тогда
					НастройкиКонтроляИзмененияДанных.ЗначенияРеквизитов.Вставить(ИмяЭлемента, Данные);
				КонецЕсли;
				
				НастройкиКонтроляИзмененияДанных.ПутьКДанным.Вставить(ИмяЭлемента, ПутьКДанным);
				
				УстановитьНовоеДействие(Элемент, НастройкиКонтроляИзмененияДанных, "ПриИзменении");
				Если Элемент.Вид = ВидПоляФормы.ПолеНадписи Тогда
					УстановитьНовоеДействие(Элемент, НастройкиКонтроляИзмененияДанных, "Нажатие");
				КонецЕсли;
				
			КонецЕсли;
			
		ИначеЕсли ТипЭлементаФормы = Тип("ТаблицаФормы") Тогда
			
			УстановитьНовоеДействие(Элемент, НастройкиКонтроляИзмененияДанных, "ПередНачаломДобавления");
			УстановитьНовоеДействие(Элемент, НастройкиКонтроляИзмененияДанных, "ПередУдалением");
			
			ПодчиненныеЭлементы = ПоляФормыТаблицы(Элемент);
			Для Каждого ПолеТаблицы Из ПодчиненныеЭлементы Цикл
				Если ИменаЭлементов.Найти(ПолеТаблицы.Имя) <> Неопределено Тогда
					
					Если Не НастройкиКонтроляИзмененияДанных.ЗначенияРеквизитов.Свойство(Элемент.Имя) Тогда
						НастройкиКонтроляИзмененияДанных.ЗначенияРеквизитов.Вставить(Элемент.Имя, Новый Структура);
					КонецЕсли;
					
					ПутьКДанным = ПолеТаблицы.ПутьКДанным;
					ПозицияПоследнейТочки = СтрНайти(ПутьКДанным, ".", НаправлениеПоиска.СКонца);
					ПутьКДанным = Сред(ПутьКДанным, ПозицияПоследнейТочки + 1);
					НастройкиКонтроляИзмененияДанных.ЗначенияРеквизитов[Элемент.Имя].Вставить(ПутьКДанным);
					
				КонецЕсли;
			КонецЦикла;
			
			Если НастройкиКонтроляИзмененияДанных.ЗначенияРеквизитов.Свойство(Элемент.Имя) Тогда
				УстановитьНовоеДействие(Элемент, НастройкиКонтроляИзмененияДанных, "ПередНачаломИзменения");
			КонецЕсли;
			
		ИначеЕсли ТипЭлементаФормы = Тип("КнопкаФормы") Тогда
			
			ИмяКоманды = Элемент.ИмяКоманды;
			
			Если Не ЗначениеЗаполнено(ИмяКоманды) Тогда
				Продолжить;
			КонецЕсли;
			
			Если НастройкиКонтроляИзмененияДанных.Команды.Свойство(ИмяКоманды) Тогда
				Продолжить;
			КонецЕсли;
			
			Действие = Форма.Команды[ИмяКоманды].Действие;
			Если ЗначениеЗаполнено(Действие) Тогда
				НастройкиКонтроляИзмененияДанных.Команды.Вставить(ИмяКоманды, Действие);
			КонецЕсли;
			
			Форма.Команды[ИмяКоманды].Действие = ОбработчикСобытия("Команды");
			
		ИначеЕсли ТипЭлементаФормы = Тип("ДекорацияФормы") Тогда
			
			УстановитьНовоеДействие(Элемент, НастройкиКонтроляИзмененияДанных, "Нажатие");
			
		Иначе
			
			ВызватьИсключение НСтр("ru = 'Внутренняя ошибка'");
			
		КонецЕсли;
		
	КонецЦикла;
	
	Форма[ИмяРеквизитаНастройкиКонтроляИзмененияДанных()] = НастройкиКонтроляИзмененияДанных;
	
КонецПроцедуры

Процедура СнятьКонтрольИзмененияДанных(Форма, ИменаЭлементов)
	
	НастройкиКонтроляИзмененияДанных = Форма[ИмяРеквизитаНастройкиКонтроляИзмененияДанных()];
	Если НастройкиКонтроляИзмененияДанных = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Элементы = Форма.Элементы;
	
	Для Каждого ИмяЭлемента Из ИменаЭлементов Цикл
		
		Элемент = Элементы[ИмяЭлемента];
		Если Элемент = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ТипЭлемента = ТипЗнч(Элемент);
		Если ТипЭлемента = Тип("КнопкаФормы") Тогда
			
			Если Форма.Команды[Элемент.ИмяКоманды].Действие = ОбработчикСобытия("Команды") Тогда
				Действие = Неопределено;
				НастройкиКонтроляИзмененияДанных.Команды.Свойство(Элемент.ИмяКоманды, Действие);
				Форма.Команды[Элемент.ИмяКоманды].Действие = Действие;
			КонецЕсли;
			
		ИначеЕсли ТипЭлемента = Тип("ПолеФормы") Тогда
			
			ВосстановитьСтароеДействие(Элемент, НастройкиКонтроляИзмененияДанных, "ПриИзменении");
			ВосстановитьСтароеДействие(Элемент, НастройкиКонтроляИзмененияДанных, "Нажатие");
			
		ИначеЕсли ТипЭлемента = Тип("ТаблицаФормы") Тогда
			
			ВосстановитьСтароеДействие(Элемент, НастройкиКонтроляИзмененияДанных, "ПередНачаломИзменения");
			ВосстановитьСтароеДействие(Элемент, НастройкиКонтроляИзмененияДанных, "ПередНачаломДобавления");
			ВосстановитьСтароеДействие(Элемент, НастройкиКонтроляИзмененияДанных, "ПередУдалением");
			
		ИначеЕсли ТипЭлемента = Тип("ДекорацияФормы") Тогда
			
			ВосстановитьСтароеДействие(Элемент, НастройкиКонтроляИзмененияДанных, "Нажатие");
			
		КонецЕсли;
		
	КонецЦикла;
	
	Форма[ИмяРеквизитаНастройкиКонтроляИзмененияДанных()] = Неопределено;
	
КонецПроцедуры

Процедура ВосстановитьСтароеДействие(Элемент, НастройкиКонтроляИзмененияДанных, ИмяСобытия)
	
	ИмяОбработчика = ОбработчикСобытия(ИмяСобытия);
	
	Действие = Элемент.ПолучитьДействие(ИмяСобытия);
	Если Действие = ИмяОбработчика Тогда
		СтароеДействие = Неопределено;
		НастройкиКонтроляИзмененияДанных[ИмяСобытия].Свойство(Элемент.Имя, СтароеДействие);
		Элемент.УстановитьДействие(ИмяСобытия, СтароеДействие);
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьНовоеДействие(Элемент, НастройкиКонтроляИзмененияДанных, ИмяСобытия)
	
	СтароеДействие = Элемент.ПолучитьДействие(ИмяСобытия);
	Если ЗначениеЗаполнено(СтароеДействие) Тогда
		НастройкиКонтроляИзмененияДанных[ИмяСобытия].Вставить(Элемент.Имя, СтароеДействие);
	КонецЕсли;
	
	Элемент.УстановитьДействие(ИмяСобытия, ОбработчикСобытия(ИмяСобытия));
	
КонецПроцедуры

Функция ОбработчикСобытия(ИмяСобытия)
	
	Возврат "Подключаемый_" + ИмяСобытия + "_КонтрольНесогласованныхИзменений";
	
КонецФункции

Функция ПоляФормыТаблицы(ЭлементФормы)
	
	ПоляФормы = Новый Массив;
	
	ТипЭлементаФормы = ТипЗнч(ЭлементФормы);
	Если ТипЭлементаФормы = Тип("ТаблицаФормы")
	 Или ТипЭлементаФормы = Тип("ГруппаФормы") Тогда
		
		Для Каждого ПодчиненныйЭлемент Из ЭлементФормы.ПодчиненныеЭлементы Цикл
			ТипЗнчПодчиненныйЭлемент = ТипЗнч(ПодчиненныйЭлемент);
			Если ТипЗнчПодчиненныйЭлемент = Тип("ПолеФормы") Тогда
				ПоляФормы.Добавить(ПодчиненныйЭлемент);
			ИначеЕсли ТипЗнчПодчиненныйЭлемент = Тип("ГруппаФормы") Тогда
				ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ПоляФормы, ПоляФормыТаблицы(ПодчиненныйЭлемент));
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат ПоляФормы;
	
КонецФункции

Функция ИмяРеквизитаНастройкиКонтроляИзмененияДанных()
	
	Возврат "НастройкиКонтроляИзмененияДанных";
	
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции
