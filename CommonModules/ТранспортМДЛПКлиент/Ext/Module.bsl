
#Область ПрограммныйИнтерфейс

// Отправляет сообщение через транспортный модуль.
//
// Параметры:
//  ТранспортныйМодуль - Структура - транспортный модуль, через который нужно отправить сообщение.
//  Сообщение          - Строка - отправляемое сообщение.
//  ОповещениеПриЗавершении - ОписаниеОповещения - куда вернуть результат отправки.
//
Процедура ОтправитьСообщение(ТранспортныйМодуль, Сообщение, ОповещениеПриЗавершении) Экспорт
	
	МенеджерОбмена = ОбщегоНазначенияКлиент.ОбщийМодуль(ТранспортныйМодуль.МенеджерОбменаНаКлиенте);
	МенеджерОбмена.ОтправитьСообщение(ТранспортныйМодуль.ПараметрыПодключения, Сообщение, ОповещениеПриЗавершении);
	
КонецПроцедуры

// Получает входящие сообщения через транспортный модуль.
//
// Параметры:
//  ТранспортныйМодуль - Структура - транспортный модуль, через который нужно отправить сообщение.
//  ОповещениеПриЗавершении - ОписаниеОповещения - куда вернуть результат операции.
//  ПараметрыВыполненияОбмена - Структура - дополнительные параметры выполнения обмена
//                              (см. ИнтеграцияМДЛПКлиентСервер.ПараметрыВыполненияОбмена()).
//
Процедура ПолучитьВходящиеСообщения(ТранспортныйМодуль, ОповещениеПриЗавершении, ПараметрыВыполненияОбмена = Неопределено) Экспорт
	
	МенеджерОбмена = ОбщегоНазначенияКлиент.ОбщийМодуль(ТранспортныйМодуль.МенеджерОбменаНаКлиенте);
	МенеджерОбмена.ПолучитьВходящиеСообщения(ТранспортныйМодуль.ПараметрыПодключения, ОповещениеПриЗавершении, ПараметрыВыполненияОбмена);
	
КонецПроцедуры

// Проверяет подключение через транспортный модуль.
//
// Параметры:
//  ТранспортныйМодуль - Структура - транспортный модуль, для которого проверяется подключение.
//  ОповещениеПриЗавершении - ОписаниеОповещения - куда вернуть результат проверки.
//
Процедура ПроверитьПодключение(ПараметрыПодключения, ОповещениеПриЗавершении) Экспорт
	
	
	ВыполнитьОбработкуОповещения(ОповещениеПриЗавершении, Истина);
	
КонецПроцедуры

#КонецОбласти

