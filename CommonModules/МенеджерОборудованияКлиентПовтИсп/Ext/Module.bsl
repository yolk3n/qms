#Область СлужебныйПрограммныйИнтерфейс

// Возвращает имя компьютера клиента.
// При первом обращении получает имя компьютера из переменной сеанса.
//
// Возвращаемое значение:
//  СправочникСсылка.РабочиеМеста
//
Функция РабочееМестоКлиента() Экспорт
	
	Возврат МенеджерОборудованияВызовСервера.РабочееМестоКлиента();
	
КонецФункции

// Возвращает имя компьютера клиента.
// При первом обращении получает имя компьютера из переменной сеанса.
//
// Параметры:
//  ИдентификаторКлиента - Строка - идентификатор клиента для рабочего места
//
// Возвращаемое значение:
//  Массив.
Функция НайтиРабочиеМестаПоИдентификатору(ИдентификаторКлиента) Экспорт
	
	Возврат МенеджерОборудованияВызовСервера.НайтиРабочиеМестаПоИдентификатору(ИдентификаторКлиента);
	
КонецФункции

// Функция возвращает структуру с данными драйвера.
//
// Параметры:
//  ИдентификаторДрайвера - СправочникСсылка.ДрайверыОборудования - идентификатор драйвера.
//
// Возвращаемое значение:
//  Структура.
Функция ДанныеДрайвераОборудования(ИдентификаторДрайвера) Экспорт
	
	Возврат МенеджерОборудованияВызовСервера.ДанныеДрайвераОборудования(ИдентификаторДрайвера);
	
КонецФункции

// Создает структуру и заполняет параметры работы клиента на сервере
// Стандарт Минимизация количества серверных вызовов и трафика.
//
// Возвращаемое значение:
//   Структура:
//    * ИдентификаторКлиента - Строка - (входящий) идентификатор рабочего места клиента
//    * ИменаМакетовДляПереустановки - Массив из Строка - имена макетов для переустановки внешних компонент
//    * ИдентификаторОбсужденияРаспределеннойФискализации - ИдентификаторОбсужденияСистемыВзаимодействия -
Функция ПараметрыРаботыКлиентаПриЗапуске() Экспорт
	
	Параметры = Новый Структура();
	Параметры.Вставить("ИдентификаторКлиентаБПО", Неопределено);
	Параметры.Вставить("ИменаМакетовДляПереустановки", Неопределено);
	Параметры.Вставить("ИдентификаторОбсужденияРаспределеннойФискализации", Неопределено);
	
	Параметры.ИдентификаторКлиентаБПО = МенеджерОборудованияКлиентСервер.ИдентификаторКлиентаДляРабочегоМеста();
	МенеджерОборудованияВызовСервера.ПриДобавленииПараметровРаботыКлиентаПриЗапуске(Параметры);
	
	Возврат Параметры;
	
КонецФункции

// Возвращает Истина, если используется устройства ввода и эти подсистемы существует в конфигурации.
// Предназначена для реализации вызова необязательной подсистемы (условного вызова).
//
// Возвращаемое значение:
//  Булево.
//
Функция ИспользуетсяУстройстваВвода() Экспорт
	
	Возврат МенеджерОборудованияВызовСервера.ИспользуетсяУстройстваВвода();
	
КонецФункции

// Возвращает Истина, если используется устройства "Шаблоны магнитных карт" и эти подсистемы существует в конфигурации.
// Предназначена для реализации вызова необязательной подсистемы (условного вызова).
//
// Возвращаемое значение:
//  Булево.
//
Функция ИспользуетсяШаблоныМагнитныхКарт() Экспорт
	
	Возврат МенеджерОборудованияВызовСервера.ИспользуетсяШаблоныМагнитныхКарт();
	
КонецФункции

// Возвращает Истина, если используется подсистемы фискальных устройств и эти подсистемы существует в конфигурации.
// Предназначена для реализации вызова необязательной подсистемы (условного вызова).
//
// Возвращаемое значение:
//  Булево.
//
Функция ИспользуетсяЧекопечатающиеУстройства() Экспорт
	
	Возврат МенеджерОборудованияВызовСервера.ИспользуетсяЧекопечатающиеУстройства();
	
КонецФункции

// Возвращает Истина, если используется подсистема "Платежные системы" и эта подсистема существует в конфигурации.
// Предназначена для реализации вызова необязательной подсистемы (условного вызова).
//
// Возвращаемое значение:
//  Булево.
//
Функция ИспользуетсяПлатежныеСистемы() Экспорт
	
	Возврат МенеджерОборудованияВызовСервера.ИспользуетсяПлатежныеСистемы();
	
КонецФункции

// Возвращает Истина, если используется подсистема "Дисплеи покупателя" и эта подсистема существует в конфигурации.
// Предназначена для реализации вызова необязательной подсистемы (условного вызова).
//
// Возвращаемое значение:
//  Булево.
//
Функция ИспользуетсяДисплеиПокупателя() Экспорт
	
	Возврат МенеджерОборудованияВызовСервера.ИспользуетсяДисплеиПокупателя();
	
КонецФункции

// Возвращает Истина, если используется подсистема "Весовое оборудование" и эта подсистема существует в конфигурации.
// Предназначена для реализации вызова необязательной подсистемы (условного вызова).
//
// Возвращаемое значение:
//  Булево.
//
Функция ИспользуетсяВесовоеОборудование() Экспорт
	
	Возврат МенеджерОборудованияВызовСервера.ИспользуетсяВесовоеОборудование();
	
КонецФункции

// Возвращает Истина, если используется подсистема "Терминалы сбора данных" и эта подсистема существует в конфигурации.
// Предназначена для реализации вызова необязательной подсистемы (условного вызова).
//
// Возвращаемое значение:
//  Булево.
//
Функция ИспользуетсяТерминалыСбораДанных() Экспорт
	
	Возврат МенеджерОборудованияВызовСервера.ИспользуетсяТерминалыСбораДанных();
	
КонецФункции

// Возвращает Истина, если используется подсистема "Принтеры этикеток" и эта подсистема существует в конфигурации.
// Предназначена для реализации вызова необязательной подсистемы (условного вызова).
//
// Возвращаемое значение:
//  Булево.
//
Функция ИспользуетсяПринтерыЭтикеток() Экспорт
	
	Возврат МенеджерОборудованияВызовСервера.ИспользуетсяПринтерыЭтикеток();
	
КонецФункции

// Возвращает Истина, если используется подсистема "Считыватель RFID" и эта подсистема существует в конфигурации.
// Предназначена для реализации вызова необязательной подсистемы (условного вызова).
//
// Возвращаемое значение:
//  Булево.
//
Функция ИспользуетсяСчитывательRFID() Экспорт
	
	Возврат МенеджерОборудованияВызовСервера.ИспользуетсяСчитывательRFID();
	
КонецФункции

// Возвращает Истина, если используется подсистема "Офлайн-оборудование" и эта подсистема существует в конфигурации.
// Предназначена для реализации вызова необязательной подсистемы (условного вызова).
//
// Возвращаемое значение:
//  Булево.
//
Функция ИспользуетсяОфлайнОборудование() Экспорт
	
	Возврат МенеджерОборудованияВызовСервера.ИспользуетсяОфлайнОборудование();
	
КонецФункции

// Возвращает Истина, если используется подсистема "Печать этикеток и ценников" и эта подсистема существует в конфигурации.
// Предназначена для реализации вызова необязательной подсистемы (условного вызова).
//
// Возвращаемое значение:
//  Булево.
//
Функция ИспользуетсяПечатьЭтикетокИЦенников() Экспорт
	
	Возврат МенеджерОборудованияВызовСервера.ИспользуетсяПечатьЭтикетокИЦенников();
	
КонецФункции

// Возвращает Истина, если используется подсистема "Электронные сертификаты НСПК" и эта подсистема существует в конфигурации.
// Предназначена для реализации вызова необязательной подсистемы (условного вызова).
//
// Возвращаемое значение:
//  Булево.
//
Функция ИспользуетсяЭлектронныеСертификатыНСПК() Экспорт
	
	Возврат МенеджерОборудованияВызовСервера.ИспользуетсяЭлектронныеСертификатыНСПК();
	
КонецФункции

// Возвращает Истина, если используется "Кассовая смена" и эти подсистема существует в конфигурации.
// Предназначена для реализации вызова необязательной подсистемы (условного вызова).
//
// Возвращаемое значение:
//  Булево.
//
Функция ИспользуетсяКассоваяСмена() Экспорт
	
	Возврат МенеджерОборудованияВызовСервера.ИспользуетсяКассоваяСмена();
	
КонецФункции   

// Возвращает Истина если существует подсистема СтандартныеПодсистемы.ОценкаПроизводительности
// и можно выполнять оценку производительности.
Функция ИспользуетсяОценкаПроизводительности() Экспорт
	
	Возврат ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.ОценкаПроизводительности");
	
КонецФункции    

// Возвращает Истина если существует подсистема СтандартныеПодсистемы.БазоваяФункциональность
// 
Функция ИспользуетсяБазоваяФункциональность() Экспорт
	
	Возврат ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.БазоваяФункциональность");
	
КонецФункции    

// Возвращает Истина, если используется подсистема "Корневые сертификаты" и эта подсистема существует в конфигурации.
// Предназначена для реализации вызова необязательной подсистемы (условного вызова).
//
// Возвращаемое значение:
//  Булево.
//
Функция ИспользуетсяСертификатыНУЦМинцифры() Экспорт
	
	Возврат ОбщегоНазначенияКлиент.ПодсистемаСуществует("ПоддержкаОборудования.ЭлектронныеСертификаты.СертификатыНУЦМинцифры");
	
КонецФункции

// Возвращает Истина если существует подсистема ПоддержкаОборудования.СообщенияВСлужбуТехническойПоддержки
//
Функция ИспользуетсяСообщенияВСлужбуТехническойПоддержки() Экспорт
	
	Возврат ОбщегоНазначенияКлиент.ПодсистемаСуществует("ИнтернетПоддержкаПользователей.СообщенияВСлужбуТехническойПоддержки") 
		И ОбщегоНазначенияКлиент.ПодсистемаСуществует("ПоддержкаОборудования.СообщенияВСлужбуТехническойПоддержки");
	
КонецФункции

// Возвращает словарь реквизитов и возможных вариантов имен параметров производителя драйверов
//
// Возвращаемое значение:
//  Структура - возможные варианты определенных значений параметров оборудования:
//   * LogEnabled - Структура - флаг включен ли лог файл
//   * LogPath  - Структура - путь к лог файлу
//   * PrintDoc - Структура - Печатать документы на кассовой ленте
//   * PrintSlip - Структура - печатать слип чек на эквайринговом терминале
//   * OfdServer - Структура - адрес сервера оператора фискальных данных 
//   * OfdPort - Структура - порт сервера  оператора фискальных данных
Функция СловарьКлючевыхСвойств() Экспорт
	
	СловарьКлючевыхСвойств = Новый Структура();
	
	Словарь = Новый Структура();
	СловарьКлючевыхСвойств.Вставить("LogEnabled", Словарь);
	Словарь.Вставить("DebugLog");
	Словарь.Вставить("LogEnabled");
	Словарь.Вставить("DebugLogEnabled");
	Словарь.Вставить("SaveLog");
	Словарь.Вставить("Debug");
	Словарь.Вставить("DebugLogEnabled");
	Словарь.Вставить("EnableLog");
	Словарь.Вставить("log_use");
	Словарь.Вставить("EventLogging");
	Словарь.Вставить("EnableDebugLog");
	
	Словарь = Новый Структура();
	СловарьКлючевыхСвойств.Вставить("LogPath", Словарь);
	Словарь.Вставить("LogFilePath");
	Словарь.Вставить("LogErrorPath");
	Словарь.Вставить("LogPath");
	Словарь.Вставить("LogFilePath");
	Словарь.Вставить("LogFileName");
	
	Словарь = Новый Структура();
	СловарьКлючевыхСвойств.Вставить("PrintDoc", Словарь);
	Словарь.Вставить("PrintDoc");
	Словарь.Вставить("PrintDocOnReceiptPaper");
	Словарь.Вставить("NoRecPrint", "Инвертировать");
	
	Словарь = Новый Структура();
	СловарьКлючевыхСвойств.Вставить("PrintSlip", Словарь);
	Словарь.Вставить("PrintSlip");
	Словарь.Вставить("PrintSlipOnTerminal");
	Словарь.Вставить("pos_slip");
	Словарь.Вставить("TerminalPrintSlip");
	
	Словарь = Новый Структура();
	СловарьКлючевыхСвойств.Вставить("OfdServer", Словарь);
	Словарь.Вставить("OfdHostPort");
	Словарь.Вставить("OfdServer");
	Словарь.Вставить("DeviceOfdHost");
	Словарь.Вставить("OFDURL");
	Словарь.Вставить("ofdAddress");
	Словарь.Вставить("OFDAddr");
	
	Словарь = Новый Структура();
	СловарьКлючевыхСвойств.Вставить("OfdPort", Словарь);
	Словарь.Вставить("OfdServerPort");
	Словарь.Вставить("DeviceOfdPort");
	Словарь.Вставить("OFDPort");
	Словарь.Вставить("PortFDO");
	
	Возврат СловарьКлючевыхСвойств;
	
КонецФункции

#Область ПанельАдминистрирования

// Возвращает описание команды по имени элемента формы.
// 
// Параметры:
//  ИмяКомандыВФорме Имя команды в форме
//  АдресНастроек Адрес настроек
// 
// Возвращаемое значение:
//  ФиксированнаяСтруктура:
//   * Вид - Строка
//   * Идентификатор - Строка
//   * Представление - Строка
//   * Подменю - Строка
//   * Важность - Строка
//   * Порядок - Число
//   * Картинка - Картинка
//   * СочетаниеКлавиш - СочетаниеКлавиш
//   * ОтображениеКнопки - Неопределено
//   * ТолькоВоВсехДействиях - Булево
//   * ЗначениеПометки - Строка
//   * ТипПараметра - ОписаниеТипов
//   * ВидимостьВФормах - Строка
//   * Назначение - Строка
//   * ФункциональныеОпции - Строка
//   * УсловияВидимости - Массив
//   * ИзменяетВыбранныеОбъекты - Булево
//   * МножественныйВыбор - Булево, Неопределено
//   * РежимЗаписи - Строка
//   * ТребуетсяРаботаСФайлами - Булево
//   * Менеджер - Строка
//   * Обработчик - Строка
//   * ДополнительныеПараметры - Структура
//   * ИмяФормы - Строка
//   * ПараметрыФормы - Структура, Неопределено
//   * ИмяПараметраФормы - Строка
//   * ПорядокВажности - Число
//   * ИмяВФорме - Строка
//   * ЕстьУсловияВидимости - Булево
//   * КлючПараметровРазмещения - Строка
//
Функция ОписаниеКомандыПанелиАдминистрирования(ИмяКомандыВФорме, АдресНастроек) Экспорт
	Результат =  МенеджерОборудованияВызовСервера.ОписаниеКомандыПанелиАдминистрирования(ИмяКомандыВФорме, АдресНастроек);
	Возврат Результат;
КонецФункции

#КонецОбласти

// Доступны возвраты без карты.       
//
Функция ДоступноВозвратыБезКарты() Экспорт
	
	Возврат МенеджерОборудованияВызовСервера.ДоступноВозвратыБезКарты();
	
КонецФункции  

#КонецОбласти