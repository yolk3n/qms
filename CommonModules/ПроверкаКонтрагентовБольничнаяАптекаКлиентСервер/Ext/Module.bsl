////////////////////////////////////////////////////////////////////////////////
// Проверка контрагентов
// переопределяемые клиент - серверные процедуры УТ
//////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Процедура - Отображение результата проверки контрагента в справочнике.
//
// Параметры:
//  Форма                          - ФормаКлиентскогоПриложения - Форма справочника, в котором выполнялась проверка контрагента.
//      Результат проверки хранится в реквизите РеквизитыПроверкиКонтрагентов(Структура) формы контрагента.
//      Структуру полей РеквизитыПроверкиКонтрагентов см. в процедуре ИнициализироватьРеквизитыФормыКонтрагент ОМ
//      ПроверкаКонтрагентов.
//  ПредставлениеРезультатаПроверки - ФорматированнаяСтрока или пустая Строка - представление результата проверки
//                                    контрагента.
Процедура ОтобразитьРезультатПроверкиКонтрагентаВСправочнике(Форма, ПредставлениеРезультатаПроверки) Экспорт
	
	ПредставлениеРезультатаПроверки = ПредставлениеРезультатаПроверкиКонтрагента(Форма.РеквизитыПроверкиКонтрагентов.СостояниеКонтрагента,
	                                                                             ДополнительныеПараметрыКонтрагентаПоФорме(Форма));
	УстановитьСтраницуКартинкиРезультатаПроверки(Форма);
	Форма.РезультатПроверкиКонтрагента = ПредставлениеРезультатаПроверки;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПредставлениеРезультатаПроверкиКонтрагента(СостояниеКонтрагента, ДополнительныеПараметры, Знач ИсходныйТекст = "")
	
	Результат = ИсходныйТекст;
	
	ЦветТекста = ЦветНадписиРезультатаПроверкиПоСостояниюКонтрагента(СостояниеКонтрагента);
	
	// Формируем строку
	МассивПодстрок = Новый Массив;
	Если ЗначениеЗаполнено(ИсходныйТекст) Тогда
		МассивПодстрок.Добавить(Новый ФорматированнаяСтрока(ИсходныйТекст));
		МассивПодстрок.Добавить("   ");
	КонецЕсли;
	
	ТекстСостояниеКонтрагента = СтрокаСостояниеКонтрагента(СостояниеКонтрагента, ДополнительныеПараметры);
	
	МассивПодстрок.Добавить(Новый ФорматированнаяСтрока(Строка(ТекстСостояниеКонтрагента),,ЦветТекста,, ПроверкаКонтрагентовКлиентСервер.ПутьКИнструкции()));
	
	Результат = Новый ФорматированнаяСтрока(МассивПодстрок);
	
	Возврат Результат;
	
КонецФункции

Функция ЦветНадписиРезультатаПроверкиПоСостояниюКонтрагента(СостояниеКонтрагента)
	
	Цвета = ПроверкаКонтрагентовВызовСервера.ЦветаРезультатовПроверки();
	
	Если СостояниеКонтрагента = ПредопределенноеЗначение("Перечисление.СостоянияСуществованияКонтрагента.НеДействуетИлиИзмененКПП") Тогда
		ЦветТекста = Цвета.ЦветТекстаКонтрагентаПрекратившегоДеятельность;
	ИначеЕсли СостояниеКонтрагента = ПредопределенноеЗначение("Перечисление.СостоянияСуществованияКонтрагента.КонтрагентЕстьВБазеФНС") 
		ИЛИ СостояниеКонтрагента = ПредопределенноеЗначение("Перечисление.СостоянияСуществованияКонтрагента.КонтрагентНеПодлежитПроверке") Тогда
		ЦветТекста = Цвета.ЦветТекстаКонтрагентаДействующего;
	Иначе
		ЦветТекста = Цвета.ЦветТекстаНекорректногоКонтрагента;
	КонецЕсли;
	
	Возврат ЦветТекста;
	
КонецФункции

Функция СтрокаСостояниеКонтрагента(СостояниеКонтрагента, ДополнительныеПараметры)
	
	ТекстСостояние = Строка(СостояниеКонтрагента);
	
	Если      СостояниеКонтрагента = ПредопределенноеЗначение("Перечисление.СостоянияСуществованияКонтрагента.НеДействуетИлиИзмененКПП") Тогда
		
		ТекстСостояние = НСтр("ru = 'По данным ФНС контрагент не действует. Возможно был изменен КПП.'");
		
	ИначеЕсли СостояниеКонтрагента = ПредопределенноеЗначение("Перечисление.СостоянияСуществованияКонтрагента.ПустойИННИлиКПП") Тогда
		
		ТекстСостояние = НСтр("ru = 'Проверка контрагента по данным ФНС не осуществлялась.'");
		
		Если ДополнительныеПараметры.ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ЮрЛицо") Тогда
			
			ТекстПроблемы = "";
			
			Если ПустаяСтрока(ДополнительныеПараметры.ИНН) И ПустаяСтрока(ДополнительныеПараметры.КПП) Тогда
				ТекстПроблемы = НСтр("ru = 'Не заполнены ИНН и КПП.'");
			ИначеЕсли ПустаяСтрока(ДополнительныеПараметры.ИНН) Тогда
				ТекстПроблемы = НСтр("ru = 'Не заполнен ИНН.'");
			ИначеЕсли ПустаяСтрока(ДополнительныеПараметры.КПП) Тогда
				ТекстПроблемы = НСтр("ru = 'Не заполнен КПП.'");
			КонецЕсли;
			
		ИначеЕсли ДополнительныеПараметры.ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ИндивидуальныйПредприниматель") Тогда
			
			Если ПустаяСтрока(ДополнительныеПараметры.ИНН) Тогда
				ТекстПроблемы = НСтр("ru = 'Не заполнен ИНН.'");
			КонецЕсли;
			
		КонецЕсли;
		
		ТекстСостояние = ТекстСостояние + ?(ПустаяСтрока(ТекстПроблемы),"", " " + ТекстПроблемы);
		
	ИначеЕсли СостояниеКонтрагента = ПредопределенноеЗначение("Перечисление.СостоянияСуществованияКонтрагента.КонтрагентНеПодлежитПроверке") Тогда
		
		ТекстСостояние = НСтр("ru = 'Не подлежит проверке по данным ФНС'")
		
	ИначеЕсли СостояниеКонтрагента = ПредопределенноеЗначение("Перечисление.СостоянияСуществованияКонтрагента.КонтрагентСодержитОшибкиВДанных") Тогда
		
		ТекстПроблемы = ".";
		
		Если ДополнительныеПараметры.ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ЮрЛицо") Тогда
			
			ТекстПроблемы = " " + НСтр("ru = 'ИНН или КПП.'");
			
		ИначеЕсли ДополнительныеПараметры.ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ИндивидуальныйПредприниматель") Тогда
			
			ТекстПроблемы = " " + НСтр("ru = 'ИНН.'");
			
		КонецЕсли;
		
		ТекстСостояние = НСтр("ru = 'Проверка по данным ФНС закончилась неудачей'") + ". " + ТекстСостояние + ?(ПустаяСтрока(ТекстПроблемы),"", " " + ТекстПроблемы);
		
	КонецЕсли;
	
	Возврат ТекстСостояние;

КонецФункции

Функция ДополнительныеПараметрыКонтрагентаПоФорме(Форма)
	
	ДополнительныеПараметры = Новый Структура("ИНН, КПП, ЮрФизЛицо");
	
	Если Форма.ИмяФормы = "Справочник.Контрагенты.Форма.ФормаЭлемента" Тогда
		ЗаполнитьЗначенияСвойств(ДополнительныеПараметры, Форма.Объект);
	КонецЕсли;
	
	Возврат ДополнительныеПараметры;
	
КонецФункции

Функция УстановитьСтраницуКартинкиРезультатаПроверки(Форма)

	СостояниеКонтрагента = Форма.РеквизитыПроверкиКонтрагентов.СостояниеКонтрагента;
	
	Если      СостояниеКонтрагента = ПредопределенноеЗначение("Перечисление.СостоянияСуществованияКонтрагента.НеДействуетИлиИзмененКПП") Тогда
		Форма.Элементы.СтраницыКартинкиРезультатовПроверкиКонтрагента.ТекущаяСтраница = Форма.Элементы.СтраницаНеДействующийКонтрагент;
	ИначеЕсли СостояниеКонтрагента = ПредопределенноеЗначение("Перечисление.СостоянияСуществованияКонтрагента.ПустойИННИлиКПП") Тогда
		Форма.Элементы.СтраницыКартинкиРезультатовПроверкиКонтрагента.ТекущаяСтраница = Форма.Элементы.СтраницаКонтрагентНеДостаточноДанных;
	ИначеЕсли СостояниеКонтрагента = ПредопределенноеЗначение("Перечисление.СостоянияСуществованияКонтрагента.КонтрагентЕстьВБазеФНС") 
	      Или СостояниеКонтрагента = ПредопределенноеЗначение("Перечисление.СостоянияСуществованияКонтрагента.КонтрагентНеПодлежитПроверке")
	      Или Не ЗначениеЗаполнено(СостояниеКонтрагента) Тогда
		Форма.Элементы.СтраницыКартинкиРезультатовПроверкиКонтрагента.ТекущаяСтраница = Форма.Элементы.СтраницаКорректныйКонтрагент;
	Иначе
		Форма.Элементы.СтраницыКартинкиРезультатовПроверкиКонтрагента.ТекущаяСтраница = Форма.Элементы.СтраницаНеКорректныйКонтрагент;
	КонецЕсли;
	
	Форма.Элементы.СтраницыКартинкиРезультатовПроверкиКонтрагента.Видимость = 
		Не (Форма.Элементы.СтраницыКартинкиРезультатовПроверкиКонтрагента.ТекущаяСтраница = Форма.Элементы.СтраницаКорректныйКонтрагент);
		
КонецФункции 

#КонецОбласти



