
////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС
#Область ПрограммныйИнтерфейс

// Устанавливает отбор в списке по выбранному элементу фильтра по иерархии.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма, где используется фильтр.
//
Процедура УстановитьОтборПоИерархииНоменклатуры(Форма) Экспорт
	
	Если Не ФильтрыСписковКлиентСервер.ИспользоватьФильтры(Форма) Тогда
		Возврат;
	КонецЕсли;
	
	Если ФильтрыСписковКлиентСервер.ТекущийФильтр(Форма) <> Идентификатор() Тогда
		Возврат;
	КонецЕсли;
	
	СписокИерархии = ИерархияНоменклатуры(Форма);
	Если СписокИерархии.ТекущаяСтрока = Неопределено Тогда
		ОтборПоИерархииНоменклатуры = ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка");
	Иначе
		ОтборПоИерархииНоменклатуры = СписокИерархии.ТекущаяСтрока;
	КонецЕсли;
	
	СписокТоваров = ФильтрыСписковКлиентСервер.ФильтруемыйСписок(Форма);
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		СписокТоваров,
		"Родитель",
		ОтборПоИерархииНоменклатуры, 
		ВидСравненияКомпоновкиДанных.Равно,
		"Родитель",
		Истина);
	
	Форма[Идентификатор() + "ТекущаяИерархияНоменклатуры"] = СписокИерархии.ТекущаяСтрока;
	
КонецПроцедуры

// Возвращает элемент формы - таблицу фильтра по иерархии.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма, где используется фильтр.
//
// Возвращаемое значение:
//  ТаблицаФормы - таблица фильтра по иерархии.
//
Функция ИерархияНоменклатуры(Форма) Экспорт
	
	Возврат Форма.Элементы[Идентификатор() + "ИерархияНоменклатуры"];
	
КонецФункции

// Возвращает идентификатор фильтра по иерархии номенклатуры.
//
// Возвращаемое значение:
//  Строка - идентификатор фильтра по иерархии номенклатуры.
//
Функция Идентификатор() Экспорт
	
	Возврат "ФильтрНоменклатурыПоИерархии";
	
КонецФункции

#КонецОбласти // ПрограммныйИнтерфейс