
#Область СлужебныйПрограммныйИнтерфейс

// Вызывается при инициализации контекста диагностики.
// 
// Параметры:
// 	КонтекстДиагностики - см. ОбработкаНеисправностейБЭД.НовыйКонтекстДиагностики
//                      - см. ОбработкаНеисправностейБЭДКлиент.НовыйКонтекстДиагностики .
Процедура ПриИнициализацииКонтекстаДиагностики(КонтекстДиагностики) Экспорт
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЭлектронноеВзаимодействие.ОбменСКонтрагентами") Тогда
		МодульОбменСКонтрагентамиИнтеграцияСобытия = ОбщегоНазначения.ОбщийМодуль(
			"ОбменСКонтрагентамиИнтеграцияСобытия");
		МодульОбменСКонтрагентамиИнтеграцияСобытия.ПриИнициализацииКонтекстаДиагностики(КонтекстДиагностики);
	КонецЕсли;
	
КонецПроцедуры

// Вызывается при инициализации ошибки, свойства ошибки можно расширить дополнительными свойствами.
// 
// Параметры:
// 	Ошибка - см. ОбработкаНеисправностейБЭД.НоваяОшибка
Процедура ПриИнициализацииОшибки(Ошибка) Экспорт
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЭлектронноеВзаимодействие.ОбменСКонтрагентами") Тогда
		МодульОбменСКонтрагентамиИнтеграцияСобытия = ОбщегоНазначения.ОбщийМодуль(
			"ОбменСКонтрагентамиИнтеграцияСобытия");
		МодульОбменСКонтрагентамиИнтеграцияСобытия.ПриИнициализацииОшибки(Ошибка);
	КонецЕсли;
	
КонецПроцедуры

// Вызывается при добавлении ошибки в контекст диагностики.
// 
// Параметры:
// 	КонтекстДиагностики - см. ОбработкаНеисправностейБЭД.НовыйКонтекстДиагностики
// 	Ошибка - см. ОбработкаНеисправностейБЭД.НоваяОшибка
Процедура ПриДобавленииОшибки(КонтекстДиагностики, Ошибка) Экспорт
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЭлектронноеВзаимодействие.ОбменСКонтрагентами") Тогда
		МодульОбменСКонтрагентамиИнтеграцияСобытия = ОбщегоНазначения.ОбщийМодуль(
			"ОбменСКонтрагентамиИнтеграцияСобытия");
		МодульОбменСКонтрагентамиИнтеграцияСобытия.ПриДобавленииОшибки(КонтекстДиагностики, Ошибка);
	КонецЕсли;
	
КонецПроцедуры

// Вызывается при формировании файла с информацией для техподдержки.
//
// Параметры:
//  Текст                    - Строка - текст с описанием параметров системы, вида: "Имя параметра: [ЗначениеПараметра]".
//                                      Значения параметров заполняется из параметра ТехническаяИнформация.
//  ТехническаяИнформация    - Структура - содержит значения параметров для подстановки в текст с описанием
//                                      параметров системы, см. параметр Текст.
//
// Пример:
// Текст = Текст + "Дополнительный параметр: [ДополнительныйПараметр]";
// ТехническаяИнформация.Вставить("ДополнительныйПараметр", "значение дополнительного параметра").
Процедура ПриФормированииФайлаСИнформациейДляТехподдержки(Текст, ТехническаяИнформация) Экспорт
	
	// ОбменСКонтрагентами начало
	Если ОбщегоНазначения.ПодсистемаСуществует("ЭлектронноеВзаимодействие.ОбменСКонтрагентами") Тогда
		МодульОбменСКонтрагентамиИнтеграцияСобытия = ОбщегоНазначения.ОбщийМодуль(
			"ОбменСКонтрагентамиИнтеграцияСобытия");
		МодульОбменСКонтрагентамиИнтеграцияСобытия.ПриФормированииФайлаСИнформациейДляТехподдержки(Текст,
			ТехническаяИнформация);
	КонецЕсли;
	// ОбменСКонтрагентами конец
	
КонецПроцедуры

// Вызывается при формировании архива с информацией для техподдержки.
//
// Параметры:
//  ФайлыДляТехподдержки - Массив из см. РаботаСФайламиБЭДКлиентСервер.НовоеОписаниеФайла
//  КонтекстДиагностики - см. ОбработкаНеисправностейБЭД.НовыйКонтекстДиагностики
//
// Пример:
// ОписаниеФайла = РаботаСФайламиБЭДКлиентСервер.НовоеОписаниеФайла();
// ОписаниеФайла.ИмяФайла = "Контейнер.zip";
// ОписаниеФайла.ДвоичныеДанные = ДвоичныеДанные;
// ФайлыДляТехподдержки.Добавить(ОписаниеФайла).
Процедура ПриФормированииФайловДляТехподдержки(ФайлыДляТехподдержки, КонтекстДиагностики) Экспорт
	
	// ОбменСКонтрагентами начало
	Если ОбщегоНазначения.ПодсистемаСуществует("ЭлектронноеВзаимодействие.ОбменСКонтрагентами") Тогда
		МодульОбменСКонтрагентамиИнтеграцияСобытия = ОбщегоНазначения.ОбщийМодуль(
			"ОбменСКонтрагентамиИнтеграцияСобытия");
		МодульОбменСКонтрагентамиИнтеграцияСобытия.ПриФормированииФайловДляТехподдержки(ФайлыДляТехподдержки,
			КонтекстДиагностики);
	КонецЕсли;
	// ОбменСКонтрагентами конец
	
КонецПроцедуры

#КонецОбласти