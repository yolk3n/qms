
////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС
#Область ПрограммныйИнтерфейс

// Возвращает единицу измерения штук.
//
// Возвращаемое значение:
//  СправочникСсылка.ЕдиницыИзмерения - единица измерения штук.
//
Функция ЕдиницаИзмеренияШтук() Экспорт
	
	Возврат ЗначениеНастроекБольничнаяАптекаПовтИсп.ПолучитьЕдиницуИзмеренияШтук();
	
КонецФункции

// Возвращает единицу измерения доз.
//
// Возвращаемое значение:
//  СправочникСсылка.ЕдиницыИзмерения - единица измерения доз.
//
Функция ЕдиницаИзмеренияДоз() Экспорт
	
	Возврат ЗначениеНастроекБольничнаяАптекаПовтИсп.ПолучитьЕдиницуИзмеренияДоз();
	
КонецФункции

// Возвращает список единиц измерения соответствующих отбору.
//
// Параметры:
//  ПараметрыОтбора - Структура - должна содержать поле Номенклатура, если указанное поле не заполнено,
//                                то должны присутствовать поля ТорговоеНаименование, ДействующиеВеществаМНН, ФормаВыпуска.
//
// Возвращаемое значение:
//  Массив - список единиц измерения.
//
Функция ЕдиницыИзмеренияПоОтбору(Знач ПараметрыОтбора) Экспорт
	
	Возврат ОтборНоменклатуры.ЕдиницыИзмеренияПоОтбору(ПараметрыОтбора);
	
КонецФункции

// Возвращает вид номенклатуры если он единственный в справочнике.
//
Функция ВидНоменклатурыПоУмолчанию(Знач Тип) Экспорт
	
	Возврат Справочники.ВидыНоменклатуры.ВидНоменклатурыПоУмолчанию(Тип);
	
КонецФункции

Процедура ЗарегистрироватьШтрихкоды(ДанныеШтрихкодов, Перезаписывать = Ложь) Экспорт
	
	НоменклатураСервер.ЗарегистрироватьШтрихкоды(ДанныеШтрихкодов, Перезаписывать);
	
КонецПроцедуры

#КонецОбласти // ПрограммныйИнтерфейс
