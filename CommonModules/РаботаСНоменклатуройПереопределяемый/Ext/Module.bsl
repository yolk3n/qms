

////////////////////////////////////////////////////////////////////////////////
// Подсистема "Работа с номенклатурой".
// ОбщийМодуль.РаботаСНоменклатуройПереопределяемый.
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

#Область АвтоподборНоменклатуры

// Заполнение массива имен полей формы, по которым будет складываться поисковая строка
// для подбора 1С:Номенклатуры при заполнении номенклатуры информационной базы.
// Обрабатывается событие ИзменениеТекстаРедактирования.
//
// Параметры:
//  МассивПолей - Массив - (Строка) массив имен полей полей.
//
Процедура ЗаполнитьМассивПолейСобытияИзменениеТекстаРедактирования(МассивПолей) Экспорт
	
	// БольничнаяАптека
	РаботаСНоменклатуройБольничнаяАптека.ЗаполнитьМассивПолейСобытияИзменениеТекстаРедактирования(МассивПолей);
	// Конец БольничнаяАптека
	
КонецПроцедуры

// Заполнение массива имен полей формы, по которым будет складываться поисковая строка
// для подбора 1С:Номенклатуры при заполнении номенклатуры информационной базы.
// Обрабатывается событие ПриИзменении.
//
// Параметры:
//  МассивПолей - Массив - (Строка) массив имен полей полей.
//
Процедура ЗаполнитьМассивПолейСобытияПриИзменении(МассивПолей) Экспорт
	
	// БольничнаяАптека
	РаботаСНоменклатуройБольничнаяАптека.ЗаполнитьМассивПолейСобытияПриИзменении(МассивПолей);
	// Конец БольничнаяАптека
	
КонецПроцедуры

#КонецОбласти

#Область СозданиеОбъектовИнформационнойБазы

// Создание или обновление значения реквизита.
//
// Параметры:
//  ДополнительныйРеквизит           - ЛюбаяСсылка - ссылка на реквизит.
//  СтрокаДанных                     - СтрокаТаблицыЗначений - строка таблицы значений.
//                                                             Описание таблицы см. РаботаСНоменклатурой.ДанныеКатегорийСервиса, 
//                                                             поле ДополнительныеРеквизиты, колонка Значения.
//  ЗначениеРеквизитаСсылка          - ЛюбаяСсылка - ссылка на новое значение.
//
Процедура СоздатьОбновитьЗначениеРеквизита(ДополнительныйРеквизит, СтрокаДанных, ЗначениеРеквизитаСсылка) Экспорт
	
	// БольничнаяАптека
	РаботаСНоменклатуройБольничнаяАптека.СоздатьОбновитьЗначениеРеквизита(ДополнительныйРеквизит, СтрокаДанных, ЗначениеРеквизитаСсылка);
	// Конец БольничнаяАптека
	
КонецПроцедуры

// Создание или обновление дополнительного реквизита.
//
// Параметры:
//  ВидНоменклатуры  - СправочникСсылка - ссылка на вид номенклатуры.
//  СтрокаДанных     - Структура, СтрокаТаблицыЗначений - данные для заполнения реквизита.
//                                                        Описание таблицы см. РаботаСНоменклатурой.ДанныеКатегорийСервиса, 
//                                                        поле ДополнительныеРеквизиты.
//  РеквизитСсылка   - ЛюбаяСсылка - ссылка на новый реквизит.
//
Процедура СоздатьОбновитьДополнительныйРеквизит(ВидНоменклатуры, СтрокаДанных, РеквизитСсылка) Экспорт
	
	// БольничнаяАптека
	РаботаСНоменклатуройБольничнаяАптека.СоздатьОбновитьДополнительныйРеквизит(ВидНоменклатуры, СтрокаДанных, РеквизитСсылка);
	// Конец БольничнаяАптека
	
КонецПроцедуры

// Создание вида номенклатуры в информационной базе.
//
// Параметры:
//  ДанныеЗаполнения - СтрокаТаблицыЗначений - данные, на основании которых идет заполнение объекта. 
//                                             Описание таблицы значений см. РаботаСНоменклатурой.ДанныеКатегорийСервиса
//  ВидНоменклатурыСсылка - ОпределяемыйТип.ВидНоменклатурыРаботаСНоменклатурой - ссылка на новый элемент.
//
Процедура СоздатьВидНоменклатуры(ДанныеЗаполнения, ВидНоменклатурыСсылка) Экспорт
	
	// БольничнаяАптека
	РаботаСНоменклатуройБольничнаяАптека.СоздатьВидНоменклатуры(ДанныеЗаполнения, ВидНоменклатурыСсылка);
	// Конец БольничнаяАптека
	
КонецПроцедуры

// Создание группы видов номенклатуры.
//
// Параметры:
//  ДанныеЗаполнения				 - СтрокаТаблицыЗначений - Колонки: Идентификатор, Наименование, 
//                                                             ИдентификаторРодителя, Уровень, РодительИнформационнойБазы.
//  ГруппаВидовНоменклатурыСсылка	 - ОпределяемыйТип.ВидНоменклатурыРаботаСНоменклатурой - ссылка на новую группу.
//
Процедура СоздатьОбновитьГруппуВидовНоменклатуры(ДанныеЗаполнения, ГруппаВидовНоменклатурыСсылка) Экспорт
	
	// БольничнаяАптека
	РаботаСНоменклатуройБольничнаяАптека.СоздатьОбновитьГруппуВидовНоменклатуры(ДанныеЗаполнения, ГруппаВидовНоменклатурыСсылка);
	// Конец БольничнаяАптека
	
КонецПроцедуры

// Создание номенклатуры в информационной базе.
//
// Параметры:
//  ДанныеЗаполнения - СтрокаТаблицыЗначений - данные, на основании которых идет заполнение объекта.
//                                             Описание таблицы значений см. РаботаСНоменклатурой.ДанныеНоменклатурыСервиса
//  НоменклатураСсылка - ОпределяемыйТип.НоменклатураРаботаСНоменклатурой - ссылка на новый элемент.
//
Процедура СоздатьНоменклатуру(ДанныеЗаполнения, НоменклатураСсылка) Экспорт
	
	// БольничнаяАптека
	РаботаСНоменклатуройБольничнаяАптека.СоздатьНоменклатуру(ДанныеЗаполнения, НоменклатураСсылка);
	// Конец БольничнаяАптека
	
КонецПроцедуры

// Создание характеристики с заполнением дополнительных реквизитов.
//
// Параметры:
//  ДанныеЗаполнения     - СтрокаТаблицыЗначений - данные, на основании которых идет заполнение.
//                                                 Описание таблицы значений см. РаботаСНоменклатурой.ДанныеНоменклатурыСервиса, 
//                                                 поле Характеристики
//  Владелец             - СправочникСсылка - ссылка на владельца характеристики.
//  ХарактеристикаСсылка - ОпределяемыйТип.ХарактеристикаРаботаСНоменклатурой - ссылка на новый элемент.
//
Процедура СоздатьХарактеристикуСДополнительнымиРеквизитами(ДанныеЗаполнения, Владелец, ХарактеристикаСсылка) Экспорт
	
КонецПроцедуры

// Создание характеристики.
//
// Параметры:
//  ДанныеЗаполнения     - СтрокаТаблицыЗначений - данные, на основании которых идет заполнение.
//                                                 Описание таблицы значений см. РаботаСНоменклатурой.ДанныеНоменклатурыСервиса, 
//                                                 поле Характеристики.
//  Владелец             - СправочникСсылка - ссылка на владельца характеристики.
//  ХарактеристикаСсылка - ОпределяемыйТип.ХарактеристикаРаботаСНоменклатурой - ссылка на новый элемент.
//
Процедура СоздатьХарактеристику(ДанныеЗаполнения, Владелец, ХарактеристикаСсылка) Экспорт
	
КонецПроцедуры

// Создание дополнительных реквизитов номенклатуры.
//
// Параметры:
//  ДанныеЗаполнения - СтрокаТаблицыЗначений - данные, на основании которых идет заполнение.
//                                             Описание таблицы значений см. РаботаСНоменклатурой.ДанныеНоменклатурыСервиса, 
//                                             поле ДополнительныеРеквизиты.
//  НоменклатураСсылка - ОпределяемыйТип.НоменклатураРаботаСНоменклатурой - ссылка на элемент.
//
Процедура ЗаполнитьЗначенияДополнительныхРеквизитов(ДанныеЗаполнения, НоменклатураСсылка) Экспорт
	
	// БольничнаяАптека
	РаботаСНоменклатуройБольничнаяАптека.ЗаполнитьЗначенияДополнительныхРеквизитов(ДанныеЗаполнения, НоменклатураСсылка);
	// Конец БольничнаяАптека
	
КонецПроцедуры

// Сформировать наименование номенклатуры по характеристике.
//
// Параметры:
//  НаименованиеНоменклатуры	 - Строка - текущее наименование объекта.
//  ПредставлениеХарактеристики  - Строка - представление характеристики в сервисе.
//  НаименованиеХарактеристики	 - Строка - итоговое наименование.
//
Процедура СформироватьНаименованиеПоХарактеристике(НаименованиеНоменклатуры, ПредставлениеХарактеристики, НаименованиеХарактеристики) Экспорт
	
КонецПроцедуры

// Запись штрихкодов в информационную базу. Вызов метода идет в разрезе одной номенклатуры. 
// Процедура используется как для записи штрихкодов при загрузке номенклатуры, так и при обновлении. 
// Перед записью штрихкодов рекомендуется проверить их наличие в информационной базе.
//
// Параметры:
//  ДанныеПоШтрихкодам	 - ТаблицаЗначений - данные по штрихкодам.
//    Колонки:
//    * Номенклатура - ОпределяемыйТип.НоменклатураРаботаСНоменклатурой - ссылка на номенклатуру.
//    * Характеристика - ОпределяемыйТип.ХарактеристикаРаботаСНоменклатурой, Неопределено - ссылка на характеристику.
//    * Штрихкод - Строка - штрихкод.
//
Процедура ЗаписатьШтрихкоды(ДанныеПоШтрихкодам) Экспорт 
	
	// БольничнаяАптека
	РаботаСНоменклатуройБольничнаяАптека.ЗаписатьШтрихкоды(ДанныеПоШтрихкодам);
	// Конец БольничнаяАптека
	
КонецПроцедуры

// Присвоение новых дополнительных реквизитов виду номенклатуры, которому они должны принадлежать.
//
// Параметры:
//  ВидНоменклатуры         - СправочникСсылка - ссылка на вид номенклатуры.
//  ДополнительныеРеквизиты - Массив - (СправочникСсылка) массив ссылок на новые дополнительные реквизиты.
//  ЯвляетсяРеквизитомХарактеристики - Булево - признак принадлежности реквизитам характеристик. В зависимости от этого
//												параметра, может быть реализован разный алгоритм присвоения.
//
Процедура ПрисвоитьРеквизитыОбъекту(ВидНоменклатуры, ДополнительныеРеквизиты, ЯвляетсяРеквизитомХарактеристики) Экспорт
	
	// БольничнаяАптека
	РаботаСНоменклатуройБольничнаяАптека.ПрисвоитьРеквизитыОбъекту(ВидНоменклатуры, ДополнительныеРеквизиты, ЯвляетсяРеквизитомХарактеристики);
	// Конец БольничнаяАптека
	
КонецПроцедуры

// Сохранение изображений при загрузке номенклатуры.
//
// Параметры:
//  НоменклатураСсылка - ОпределяемыйТип.НоменклатураРаботаСНоменклатурой - владелец изображений.
//  Изображения - ТаблицаЗначений:
//   * ИзображениеURL - Строка - адрес изображения.
//
Процедура СохранитьИзображенияНоменклатуры(НоменклатураСсылка, Изображения) Экспорт
	
	// БольничнаяАптека
	РаботаСНоменклатуройБольничнаяАптека.СохранитьИзображенияНоменклатуры(НоменклатураСсылка, Изображения);
	// Конец БольничнаяАптека
	
КонецПроцедуры

#КонецОбласти

#Область ПолучениеДанныхИнформационнойБазы

// Получение штрихкодов в разрезе номенклатуры и характеристик номенклатуры. 
// Порядок строк должен порядку строк в исходной таблице (Номенклатура Возр, Характеристика Возр).
//
// Параметры:
//  НоменклатураИХарактеристики	 - ТаблицаЗначений - исходная таблица с номенклатурой и характеристиками.
//    Колонки:
//    * Номенклатура - ОпределяемыйТип.НоменклатураРаботаСНоменклатурой - ссылка на номенклатуру.
//    * Характеристика - ОпределяемыйТип.ХарактеристикаРаботаСНоменклатурой - ссылка на характеристику.
//  ДанныеПоШтрихкодам - ТаблицаЗначений - таблица с данными по штрихкодам.
//    Колонки:
//    * Номенклатура - ОпределяемыйТип.НоменклатураРаботаСНоменклатурой - ссылка на номенклатуру.
//    * Характеристика - ОпределяемыйТип.ХарактеристикаРаботаСНоменклатурой - ссылка на характеристику.
//    * Штрихкод - Строка - штрихкод.
//
Процедура ПолучитьШтрихкоды(НоменклатураИХарактеристики, ДанныеПоШтрихкодам) Экспорт
	
	// БольничнаяАптека
	РаботаСНоменклатуройБольничнаяАптека.ПолучитьШтрихкоды(НоменклатураИХарактеристики, ДанныеПоШтрихкодам);
	// Конец БольничнаяАптека
	
КонецПроцедуры

// Формирование текста запроса номенклатуры и характеристик для последующего чтение из информационной базы.
// На основании текста запроса, на стороне библиотеки будет подготовлен итоговый запрос, 
// для порционного чтения объектов из информационной базы.
//
// Требование к запросу:
// - в результате запроса строки должны быть уникальны
// - не должны использоваться временные таблицы
// - в результате выполнения запроса должны попадать два поля: 
//		- Номенклатура (ОпределяемыйТип.НоменклатураРаботаСНоменклатурой)
//		- Характеристика (ОпределяемыйТип.ХарактеристикаРаботаСНоменклатурой)
// - если характеристики для номенклатуры не используются, в поле характеристики должно 
//   содержаться пустое значение объекта ОпределяемыйТип.ХарактеристикаРаботаСНоменклатурой
//
// Параметры:
//  ТекстЗапроса - Строка - текст запроса.
//    Поля результата запроса:
//    * Номенклатура - ОпределяемыйТип.НоменклатураРаботаСНоменклатурой - ссылка на номенклатуру.
//    * Характеристика - ОпределяемыйТип.ХарактеристикаРаботаСНоменклатурой - ссылка на характеристику (в запросе следует заложить проверку на NULL).
//
Процедура ТекстЗапросаНоменклатурыИХарактеристик(ТекстЗапроса) Экспорт
	
	// БольничнаяАптека
	РаботаСНоменклатуройБольничнаяАптека.ТекстЗапросаНоменклатурыИХарактеристик(ТекстЗапроса);
	// Конец БольничнаяАптека
	
КонецПроцедуры

// Получение видов номенклатуры в разрезе номенклатуры.
//
// Параметры:
//  Номенклатура	 - Массив - (Ссылка) ссылки на номенклатуру.
//  ВидыНоменклатуры - ТаблицаЗначений - данные по видам номенклатуры.
//    Колонки:
//    * Номенклатура - ОпределяемыйТип.НоменклатураРаботаСНоменклатурой - ссылка на номенклатуру.
//    * ВидНоменклатуры - ОпределяемыйТип.ВидНоменклатурыРаботаСНоменклатурой - ссылка на вид номенклатуры.
//
Процедура ПолучитьВидыНоменклатурыПоНоменклатуре(Номенклатура, ВидыНоменклатуры) Экспорт
	
	// БольничнаяАптека
	РаботаСНоменклатуройБольничнаяАптека.ПолучитьВидыНоменклатурыПоНоменклатуре(Номенклатура, ВидыНоменклатуры);
	// Конец БольничнаяАптека
	
КонецПроцедуры

// Получение значений реквизитов из формы вида номенклатуры.
//
// Параметры:
//  Форма				 - ФормаКлиентскогоПриложения - форма вида номенклатуры.
//  ЗначенияРеквизитов	 - Структура - структура, где ключ - имя реквизита, значение - значение реквизита.
//
Процедура ПолучитьЗначенияРеквизитовВидаНоменклатурыИзФормы(Форма, ЗначенияРеквизитов) Экспорт
	
	// БольничнаяАптека
	РаботаСНоменклатуройБольничнаяАптека.ПолучитьЗначенияРеквизитовВидаНоменклатурыИзФормы(Форма, ЗначенияРеквизитов);
	// Конец БольничнаяАптека
	
КонецПроцедуры

// Получение значение свойств реквизитов характеристик информационной базы. Метод используется при поиске заведенных в базе
// характеристик. Поиск осуществляется по составу реквизитов и их значениям. Если характеристика с заданным набором
// реквизитов найдена, объект не создается.
//
// Параметры:
//  ВидНоменклатуры                  - СправочникСсылка - вид номенклатуры в разрезе которого
//                                                        анализируются характеристики.
//  ЗначенияХарактеристикТекущейБазы - ТаблицаЗначений - таблица данных информационной базы. Колонки:
//    * ХарактеристикаБазы - ОпределяемыйТип.ХарактеристикаРаботаСНоменклатурой - ссылка на характеристику.
//    * Свойство           - ЛюбаяСсылка - реквизит характеристики.
//    * Значение           - Произвольный - значение реквизита.
//
Процедура ЗаполнитьТаблицуХарактеристикПоВидуНоменклатуры(ВидНоменклатуры, ЗначенияХарактеристикТекущейБазы) Экспорт
	
КонецПроцедуры

// Получение используемых для вида номенклатуры дополнительных реквизитов.
//
// Параметры:
//  ВидНоменклатуры   - СправочникСсылка - вид номенклатуры в разрезе которого производится поиск данных.
//  ТаблицаРеквизитов - ТаблицаЗначений - таблица реквизитов. Колонки:
//    * РеквизитВидаНоменклатуры              - ЛюбаяСсылка - ссылка дополнительный реквизит.
//    * РеквизитВидаНоменклатурыПредставление - Строка - представление реквизита.
//    * ЯвляетсяХарактеристикой               - Булево - Истина, если реквизит является реквизитом характеристики.
//
Процедура ПолучитьДополнительныеРеквизитыВидаНоменклатуры(ВидНоменклатуры, ТаблицаРеквизитов) Экспорт
	
	// БольничнаяАптека
	РаботаСНоменклатуройБольничнаяАптека.ПолучитьДополнительныеРеквизитыВидаНоменклатуры(ВидНоменклатуры, ТаблицаРеквизитов);
	// Конец БольничнаяАптека
	
КонецПроцедуры

// Получение значений реквизитов вида номенклатуры. Используется для выявления расхождений в значениях реквизитов
// объектов информационной базы и объектов сервиса.
//
// Параметры:
//  ВидыНоменклатуры - ОпределяемыйТип.ВидНоменклатурыРаботаСНоменклатурой, Массив - виды номенклатуры по которым идет запрос значений реквизитов.
//  Результат        - ТаблицаЗначений - таблица значений реквизитов. Таблица обязательно должна содержать
//                                      колонку с ссылкой на вид номенклатуры и именем ВидНоменклатуры и иметь вид: 
//                                      ВидНоменклатуры, Реквизит1, Реквизит2...Реквизит N.
//
Процедура ПолучитьЗначенияРеквизитовВидовНоменклатуры(Знач ВидыНоменклатуры, Результат) Экспорт
	
	// БольничнаяАптека
	РаботаСНоменклатуройБольничнаяАптека.ПолучитьЗначенияРеквизитовВидовНоменклатуры(ВидыНоменклатуры, Результат);
	// Конец БольничнаяАптека
	
КонецПроцедуры

// Получение значений реквизитов номенклатуры. Используется для выявления расхождений в значениях реквизитов
// объектов информационной базы и объектов сервиса.
//
// Параметры:
//  Номенклатура - ОпределяемыйТип.НоменклатураРаботаСНоменклатурой, Массив - номенклатура по которым идет запрос значений реквизитов.
//  Результат       - ТаблицаЗначений - таблица значений реквизитов. Таблица обязательно должна содержать
//                                      колонку с ссылкой на номенклатуру и именем Номенклатура и иметь вид: 
//                                      Номенклатура, Реквизит1, Реквизит2...Реквизит N.
//
Процедура ПолучитьЗначенияРеквизитовНоменклатуры(Знач Номенклатура, Результат) Экспорт
	
	// БольничнаяАптека
	РаботаСНоменклатуройБольничнаяАптека.ПолучитьЗначенияРеквизитовНоменклатуры(Номенклатура, Результат);
	// Конец БольничнаяАптека
	
КонецПроцедуры

// Получение значений дополнительных реквизитов номенклатуры.
//
// Параметры:
//  Номенклатура         - Массив - (Ссылка) массив ссылок номенклатуры.
//  ЗначенияРеквизитов	 - ТаблицаЗначений - заполняемые данные значений свойство.
//    * ВладелецСвойств - ОпределяемыйТип.НоменклатураРаботаСНоменклатурой - ссылка на номенклатуру.
//    * Свойство - ЛюбаяСсылка - свойство номенклатуры.
//    * Значение - Произвольный - значение свойства.
//
Процедура ПолучитьЗначенияДополнительныхРеквизитов(Номенклатура, ЗначенияРеквизитов) Экспорт
	
	// БольничнаяАптека
	РаботаСНоменклатуройБольничнаяАптека.ПолучитьЗначенияДополнительныхРеквизитов(Номенклатура, ЗначенияРеквизитов);
	// Конец БольничнаяАптека
	
КонецПроцедуры

// Получение вида номенклатуры по номенклатуре.
//
// Параметры:
//  НоменклатураСсылка   - ОпределяемыйТип.НоменклатураРаботаСНоменклатурой - номенклатура.
//  ВидНоменклатуры	     - ОпределяемыйТип.ВидНоменклатурыРаботаСНоменклатурой - вид номенклатуры.
//
Процедура ПолучитьВидНоменклатуры(НоменклатураСсылка, ВидНоменклатуры) Экспорт
	
	// БольничнаяАптека
	РаботаСНоменклатуройБольничнаяАптека.ПолучитьВидНоменклатуры(НоменклатураСсылка, ВидНоменклатуры);
	// Конец БольничнаяАптека
	
КонецПроцедуры

// Получение вида номенклатуры из формы номенклатуры.
//
// Параметры:
//  Форма				 - ФормаКлиентскогоПриложения - форма номенклатуры.
//  ВидНоменклатуры	     - ОпределяемыйТип.ВидНоменклатурыРаботаСНоменклатурой - вид номенклатуры.
//
Процедура ПолучитьВидНоменклатурыИзФормы(Форма, ВидНоменклатуры) Экспорт
	
	// БольничнаяАптека
	РаботаСНоменклатуройБольничнаяАптека.ПолучитьВидНоменклатурыИзФормы(Форма, ВидНоменклатуры);
	// Конец БольничнаяАптека
	
КонецПроцедуры

// Получение значений реквизитов из формы номенклатуры.
//
// Параметры:
//  Форма				 - ФормаКлиентскогоПриложения - форма номенклатуры.
//  ЗначенияРеквизитов	 - Структура - структура, где ключ - имя реквизита, значение - значение реквизита.
//
Процедура ПолучитьЗначенияРеквизитовНоменклатурыИзФормы(Форма, ЗначенияРеквизитов) Экспорт
	
	// БольничнаяАптека
	РаботаСНоменклатуройБольничнаяАптека.ПолучитьЗначенияРеквизитовНоменклатурыИзФормы(Форма, ЗначенияРеквизитов);
	// Конец БольничнаяАптека
	
КонецПроцедуры

// Получение значений дополнительных реквизитов из формы.
//
// Параметры:
//  Форма				 - ФормаКлиентскогоПриложения - форма номенклатуры.
//  ЗначенияРеквизитов	 - ТаблицаЗначений - таблица значений дополнительных реквизитов. Колонки:
//    * Свойство           - ЛюбаяСсылка - дополнительный реквизит.
//    * Значение           - Произвольный - значение реквизита.
//
Процедура ПолучитьЗначенияДополнительныхРеквизитовИзФормы(Форма, ЗначенияРеквизитов) Экспорт
	
	// БольничнаяАптека
	РаботаСНоменклатуройБольничнаяАптека.ПолучитьЗначенияДополнительныхРеквизитовИзФормы(Форма, ЗначенияРеквизитов);
	// Конец БольничнаяАптека
	
КонецПроцедуры

// Получение номенклатуры по штрихкодам.
//
// Параметры:
//  Штрихкоды			 - Массив - массив штрихкодов (Строка).
//  ДанныеПоШтрихкодам	 - ТаблицаЗначений - итоговая таблица данных с колонками 
//                                           Штрихкод, Номенклатура, ЕдиницаИзмерения, Характеристика.
//
Процедура ПолучитьНоменклатуруПоШтрихкодам(Штрихкоды, ДанныеПоШтрихкодам) Экспорт
	
	// БольничнаяАптека
	РаботаСНоменклатуройБольничнаяАптека.ПолучитьНоменклатуруПоШтрихкодам(Штрихкоды, ДанныеПоШтрихкодам);
	// Конец БольничнаяАптека
	
КонецПроцедуры

#КонецОбласти

#Область ПриПолученииДанныхИзСервиса

// Процедура вызывается после получения данных номенклатуры из сервиса. Может использоваться
// для предварительной подготовки данных информационной базы 
// перед созданием, сравнением, заполнением объектов. Например на этом этапе можно 
// создать бренды, производителей, единицы измерения и так далее.
//
// Параметры:
//  ДанныеПоНоменклатуре - ТаблицаЗначений - см. РаботаСНоменклатурой.ДанныеНоменклатурыСервиса.
//
Процедура ПриПолученииДанныхИзСервисаПоНоменклатуре(ДанныеПоНоменклатуре) Экспорт
	
	// БольничнаяАптека
	РаботаСНоменклатуройБольничнаяАптека.ПриПолученииДанныхИзСервисаПоНоменклатуре(ДанныеПоНоменклатуре);
	// Конец БольничнаяАптека
	
КонецПроцедуры

// Процедура вызывается после получения данных категорий из сервиса. Может использоваться
// для предварительной подготовки данных информационной базы 
// перед созданием, сравнением, заполнением объектов.
//
// Параметры:
//  ДанныеПоКатегориям - ТаблицаЗначений - см. РаботаСНоменклатурой.ДанныеКатегорийСервиса.
//
Процедура ПриПолученииДанныхИзСервисаПоКатегориям(ДанныеПоКатегориям) Экспорт
	
	// БольничнаяАптека
	РаботаСНоменклатуройБольничнаяАптека.ПриПолученииДанныхИзСервисаПоКатегориям(ДанныеПоКатегориям);
	// Конец БольничнаяАптека
	
КонецПроцедуры

#КонецОбласти

#Область СопоставлениеДанных

// Сравнение значений реквизитов вида номенклатуры и категории.
//
// Параметры:
//  ДанныеКатегории       - СтрокаТаблицыЗначений - данные по категории. Описание таблицы значений см. РаботаСНоменклатурой.ДанныеКатегорийСервиса
//  ДанныеВидаНоменклатуры - СтрокаТаблицыЗначений, Структура - данные по виду номенклатуре. См. ПолучитьЗначенияРеквизитовВидовНоменклатуры
//  ТаблицаОтличийРеквизитов - ТаблицаЗначений - см. РаботаСНоменклатурой.ТаблицаОтличийРеквизитов.
//
Процедура ПолучитьОтличияВидаНоменклатурыИКатегории(ДанныеКатегории, ДанныеВидаНоменклатуры, ТаблицаОтличийРеквизитов) Экспорт
	
	// БольничнаяАптека
	РаботаСНоменклатуройБольничнаяАптека.ПолучитьОтличияВидаНоменклатурыИКатегории(ДанныеКатегории, ДанныеВидаНоменклатуры, ТаблицаОтличийРеквизитов);
	// Конец БольничнаяАптека
	
КонецПроцедуры

// Сравнение значений реквизитов номенклатуры информационной базы и номенклатуры сервиса.
//
// Параметры:
//  ДанныеНоменклатурыСервиса - СтрокаТаблицыЗначений - Данные по номенклатуре.
//                              Описание таблицы значений см. РаботаСНоменклатурой.ДанныеНоменклатурыСервиса.
//  ДанныеНоменклатурыБазы    - СтрокаТаблицыЗначений, Структура - данные по номенклатуре.
//                              См. процедуры ПолучитьЗначенияРеквизитовНоменклатуры,
//                              ПолучитьЗначенияДополнительныхРеквизитовИзФормы.
//  ТаблицаОтличийРеквизитов  - ТаблицаЗначений - см. РаботаСНоменклатурой.ТаблицаОтличийРеквизитов.
//
Процедура ПолучитьОтличияНоменклатуры(ДанныеНоменклатурыСервиса, ДанныеНоменклатурыБазы, ТаблицаОтличийРеквизитов) Экспорт
	
	// БольничнаяАптека
	РаботаСНоменклатуройБольничнаяАптека.ПолучитьОтличияНоменклатуры(ДанныеНоменклатурыСервиса, ДанныеНоменклатурыБазы, ТаблицаОтличийРеквизитов);
	// Конец БольничнаяАптека
	
КонецПроцедуры

#КонецОбласти

#Область ЗаполнениеДанных

// Процедура для интерактивного заполнения вида номенклатуры. Если параметр ТаблицаОтличий заполнен - 
// заполнение вида номенклатуры происходит после работы формы Обработка.РаботаСНоменклатурой.ЗаполнениеВидаНоменклатуры. 
// Если параметр ТаблицаОтличий не заполнен - происходит загрузка вида номенклатуры в интерактивном режиме.
//
// Параметры:
//  Форма							 - ФормаКлиентскогоПриложения - форма вида номенклатуры. 
//  ТаблицаОтличий					 - ТаблицаЗначений - таблица изменений реквизитов вида номенклатуры, 
//                                                       формируемая в методе РаботаСНоменклатуройПереопределяемый.ПолучитьОтличияВидаНоменклатурыИКатегории
//  ДанныеИнтерактивногоЗаполнения	 - ТаблицаЗначений - данные категории сервиса.
//
Процедура ЗаполнитьВидНоменклатурыВФорме(Форма, ТаблицаОтличий = Неопределено, ДанныеИнтерактивногоЗаполнения = Неопределено) Экспорт
	
	// БольничнаяАптека
	РаботаСНоменклатуройБольничнаяАптека.ЗаполнитьВидНоменклатурыВФорме(Форма, ТаблицаОтличий, ДанныеИнтерактивногоЗаполнения);
	// Конец БольничнаяАптека
	
КонецПроцедуры

// Заполнение реквизитов вида номенклатуры.
//
// Параметры:
//  ВидНоменклатурыСсылка - СправочникСсылка - ссылка на вид номенклатуры.
//  ТаблицаИзменений      - ТаблицаЗначений - реквизиты и значения для записи. Таблица должна быть 
//                                            сформирована в методе ПолучитьОтличияВидаНоменклатурыИКатегории.
//                                            см. РаботаСНоменклатурой.ТаблицаОтличийРеквизитов.
//
Процедура ЗаполнитьВидНоменклатуры(ВидНоменклатурыСсылка, ТаблицаИзменений) Экспорт
	
	// БольничнаяАптека
	РаботаСНоменклатуройБольничнаяАптека.ЗаполнитьВидНоменклатуры(ВидНоменклатурыСсылка, ТаблицаИзменений);
	// Конец БольничнаяАптека
	
КонецПроцедуры

// Заполнение реквизитов номенклатуры.
//
// Параметры:
//  НоменклатураСсылка - СправочникСсылка - ссылка на номенклатуру.
//  ТаблицаИзменений   - ТаблицаЗначений - реквизиты и значения для записи. Таблица должна быть 
//                                         сформирована в методе ПолучитьОтличияНоменклатуры.
//                                         см. РаботаСНоменклатурой.ТаблицаОтличийРеквизитов.
//
Процедура ЗаполнитьНоменклатуру(НоменклатураСсылка, ТаблицаИзменений) Экспорт
	
	// БольничнаяАптека
	РаботаСНоменклатуройБольничнаяАптека.ЗаполнитьНоменклатуру(НоменклатураСсылка, ТаблицаИзменений);
	// Конец БольничнаяАптека
	
КонецПроцедуры

// Заполнение дополнительных реквизитов номенклатуры.
//
// Параметры:
//  НоменклатураСсылка      - ОпределяемыйТип.НоменклатураРаботаСНоменклатурой - ссылка на номенклатуру.
//  ДополнительныеРеквизиты - ТаблицаЗначений - реквизиты для записи в структуре:
//    * РеквизитОбъекта - ЛюбаяСсылка - свойство реквизита.
//    * НовоеЗначение   - Произвольный - значение реквизита.
//
Процедура ЗаполнитьДополнительныеРеквизитыНоменклатуры(НоменклатураСсылка, ДополнительныеРеквизиты) Экспорт
	
	// БольничнаяАптека
	РаботаСНоменклатуройБольничнаяАптека.ЗаполнитьДополнительныеРеквизитыНоменклатуры(НоменклатураСсылка, ДополнительныеРеквизиты);
	// Конец БольничнаяАптека
	
КонецПроцедуры

// Интерактивное заполнение реквизитов номенклатуры. Если параметр ТаблицаИзменений заполнен - 
// заполнение номенклатуры происходит после работы формы Обработка.РаботаСНоменклатурой.ЗаполнениеНоменклатуры. 
// Если параметр ТаблицаИзменений не заполнен - происходит загрузка номенклатуры в интерактивном режиме.
//
// Параметры:
//  Форма                 - ФормаКлиентскогоПриложения - форма номенклатуры.
//  ТаблицаИзменений      - ТаблицаЗначений -  таблица изменений реквизитов номенклатуры. Таблица должна быть 
//                                            сформирована в методе ПолучитьОтличияНоменклатуры.
//                                            см. РаботаСНоменклатурой.ТаблицаОтличийРеквизитов.
//  ДанныеИнтерактивногоЗаполнения	 - ТаблицаЗначений - данные номенклатуры сервиса.
//
Процедура ЗаполнитьНоменклатуруВФорме(Форма, ТаблицаИзменений = Неопределено, ДанныеИнтерактивногоЗаполнения = Неопределено) Экспорт
	
	// БольничнаяАптека
	РаботаСНоменклатуройБольничнаяАптека.ЗаполнитьНоменклатуруВФорме(Форма, ТаблицаИзменений, ДанныеИнтерактивногоЗаполнения);
	// Конец БольничнаяАптека
	
КонецПроцедуры

// Интерактивное заполнение дополнительных реквизитов номенклатуры.
//
// Параметры:
//  Форма                 - ФормаКлиентскогоПриложения - форма номенклатуры.
//  ТаблицаИзменений      - ТаблицаЗначений - реквизиты и значения для записи. Таблица должна быть 
//                                            сформирована в методе ПолучитьОтличияВидаНоменклатурыИКатегории.
//                                            см. РаботаСНоменклатурой.ТаблицаОтличийРеквизитов.
//
Процедура ЗаполнитьДополнительныеРеквизитыНоменклатурыВФорме(Форма, ТаблицаИзменений) Экспорт
	
	// БольничнаяАптека
	РаботаСНоменклатуройБольничнаяАптека.ЗаполнитьДополнительныеРеквизитыНоменклатурыВФорме(Форма, ТаблицаИзменений);
	// Конец БольничнаяАптека
	
КонецПроцедуры

#КонецОбласти

#Область РаботаСХарактеристиками

// Текст запроса характеристик с отбором по владельцу.
// В полях запроса должна присутствовать ссылка на характеристику с псевдонимом Ссылка, таблица характеристик должна 
// иметь псевдоним Характеристики, при этом в качестве параметра отбора владельца характеристик
// использоваться параметр Владелец.
//
// Параметры:
//  ТекстЗапроса - Строка - текст запроса.
//
Процедура ТекстЗапросаХарактеристикПоВладельцу(ТекстЗапроса) Экспорт
	
КонецПроцедуры

// Вариант использования характеристик для вида номенклатуры.
//
// Параметры:
//  ВидНоменклатуры	 - Произвольный - вид номенклатуры.
//  Результат		 - Строка - вариант использования характеристик. Возможные значения: "Индивидуальные", "Общие", "НеВедутся".
//
Процедура ПолучитьВариантИспользованияХарактеристик(ВидНоменклатуры, Результат) Экспорт
	
КонецПроцедуры

// Получение количество характеристик для номенклатуры.
//
// Параметры:
//  Номенклатура - ОпределяемыйТип.НоменклатураРаботаСНоменклатурой - ссылка на номенклатуру информационной базы.
//  Результат	 - Число - число характеристик.
//
Процедура ПолучитьКоличествоХарактеристик(Номенклатура, Результат) Экспорт
		
КонецПроцедуры

#КонецОбласти

#Область ЗапретРедактированияРеквизитов

// Процедура позволяет переопределить перечень блокируемых реквизитов. Если используется подсистема запрета редактирования,
// и для объекта настроен список блокируемых реквизитов, перечень реквизитов будет передаваться в параметре БлокируемыеРеквизиты.
//
// Параметры:
//  ПолноеИмя			 - Строка - полное имя объекта метаданных.
//  БлокируемыеРеквизиты - Массив - (Строка) массив имен блокируемых реквизитов.
//
Процедура ПриФормированииСпискаБлокируемыхРеквизитов(ПолноеИмя, БлокируемыеРеквизиты) Экспорт
	
	// БольничнаяАптека
	РаботаСНоменклатуройБольничнаяАптека.ПриФормированииСпискаБлокируемыхРеквизитов(ПолноеИмя, БлокируемыеРеквизиты);
	// Конец БольничнаяАптека
	
КонецПроцедуры

// Процедура позволяет переопределить проверку наличие прав на редактирование блокируемых реквизитов. По умолчанию 
// право на редактирование имеет пользователь с полными правами, Администратор и 
// пользователь с ролью РедактированиеРеквизитовОбъектов.
//
// Параметры:
//  ЕстьПравоРедактированияРеквизитов - Булево - Истина, если текущий пользователь имеет возможность редактирования реквизитов.
//
Процедура ПриОпределенииПравНаРедактированиеРеквизитов(ЕстьПравоРедактированияРеквизитов) Экспорт
	
КонецПроцедуры

// Процедура позволяет переопределить алгоритм поиска ссылок на объект, перед включением возможности редактирования 
// заблокированных реквизитов.
//
// Параметры:
//  СсылкаНаОбъект		 - ЛюбаяСсылка - ссылка на проверяемый объект.
//  ИзмененныеРеквизиты	 - Массив - (Строка) массив заблокированных реквизитов.
//  РезультатПроверки	 - Структура - ключи структуры:
//                                     СсылкиОбнаружены - Булево - Истина, если ссылки на объект были обнаружены.
//                                     ТекстСообщения - Строка - текст сообщения, выводимое пользователю, в случае если
//                                                               были обнаружены ссылки на объект.
//  СтандартнаяОбработка - Булево - признак стандартной обработки.
//
Процедура ПриПроверкеИспользованияОбъекта(СсылкаНаОбъект, ИзмененныеРеквизиты, РезультатПроверки, СтандартнаяОбработка) Экспорт
	
	
КонецПроцедуры

#КонецОбласти

#Область Разное

// Процедура, вызываемая из обработчика события ПриСозданииНаСервере формы ПанельАдминистрирования.
//
// Параметры:
//  Форма  - ФормаКлиентскогоПриложения - форма ПанельАдминистрирования.
//
Процедура ПриСозданииНаСервереФормаПанельАдминистрирования(Форма) Экспорт
	
	// БольничнаяАптека
	РаботаСНоменклатуройБольничнаяАптека.ПриСозданииНаСервереФормаПанельАдминистрирования(Форма);
	// Конец БольничнаяАптека
	
КонецПроцедуры

// Переопределяет настройки подсистемы.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
//    Ключи:
//    * ИспользоватьВидыНоменклатуры - Булево - флаг использования видов номенклатуры.
//    * ИспользоватьХарактеристики - Булево - флаг использования характеристик.
//    * ИспользоватьПакетноеСозданиеНоменклатуры - Булево - флаг использования пакетного создания номенклатуры.
//    * ИспользоватьПоискПоШтрихкодуВСервисе - Булево - флаг использования поиска по штрихкоду в сервисе.
//    * СохранятьИерархиюКатегорийПриЗагрузке - Булево - создавать групповые категории по иерархии.
//    * РежимПредставленияНоменклатурыСХарактеристиками - Строка - вариант представления списка номенклатуры:
//                                                                 "БезХарактеристик", "Группировка", "Линейный", "Настраиваемый".
//    * ИспользоватьДополнительныеРеквизиты - Булево - флаг использования дополнительных реквизитов и свойств.
//    * ИспользоватьВыгрузкуВКаталог1С - Булево - использовать выгрузку в 1С:Номенклатуру
//    * ИспользоватьВыгрузкуВНациональныйКаталог - Булево - использовать выгрузку в "Национальный каталог"
//    * ИспользоватьПодборНоменклатурыСХарактеристиками - Булево - использовать характеристики при подборе номенклатуры к выгрузке 
//
Процедура ПриОпределенииНастроек(Настройки) Экспорт
	
	// БольничнаяАптека
	РаботаСНоменклатуройБольничнаяАптека.ПриОпределенииНастроек(Настройки);
	// Конец БольничнаяАптека
	
КонецПроцедуры

// Возвращает контакты пользователя для регистрации в сервисе.
//
// Параметры:
//   КонтактноеЛицо - СправочникСсылка - пользователь программы, контактное лицо.
//   Результат - Структура - информация о пользователе:
//     * ФИО - Строка - ФИО пользователя.
//     * Телефон - Строка - номер телефона.
//     * ЭлектроннаяПочта - Строка - адрес электронной почты пользователя.
//
Процедура ПолучитьКонтактнуюИнформациюПользователя(Знач КонтактноеЛицо, Результат) Экспорт
	
	// БольничнаяАптека
	РаботаСНоменклатуройБольничнаяАптека.ПолучитьКонтактнуюИнформациюПользователя(КонтактноеЛицо, Результат);
	// Конец БольничнаяАптека
	
КонецПроцедуры

// Заполняет читаемые/изменяемые методом данные. Информация используется для описания обработчиков обновления.
// Все указанные в методе объекты метаданных должны быть включены в состав плана обмена ОбновлениеИнформационнойБазы.
//
// Для обновления на версию 1.7.2 необходимо указать читаемые/изменяемые данные метода
//  РаботаСНоменклатуройПереопределяемый.ПолучитьВидыНоменклатурыПоНоменклатуре.
// 
// Параметры:
//  Метод - Строка - полное имя переопределяемого метода.
//  ЧитаемыеИзменяемыеДанные - Структура:
//   * Читаемые - Массив из Строка - полные имена читаемых объектов метаданных.
//   * Изменяемые - Массив из Строка - полные имена изменяемых объектов метаданных.
//
// Пример: 
// Если Метод = "РаботаСНоменклатуройПереопределяемый.ПолучитьВидыНоменклатурыПоНоменклатуре" Тогда
// 	ЧитаемыеИзменяемыеДанные.Читаемые.Добавить("Справочник.Номенклатура");
// ИначеЕсли Метод = "РаботаСНоменклатуройПереопределяемый.ПолучитьШтрихкоды" Тогда
// 	ЧитаемыеИзменяемыеДанные.Читаемые.Добавить("РегистрСведений.Штрихкоды");
// КонецЕсли;
//
Процедура ЗаполнитьЧитаемыеИзменяемыеДанныеМетода(Знач Метод, ЧитаемыеИзменяемыеДанные) Экспорт
	
	// БольничнаяАптека
	РаботаСНоменклатуройБольничнаяАптека.ЗаполнитьЧитаемыеИзменяемыеДанныеМетода(Метод, ЧитаемыеИзменяемыеДанные);
	// Конец БольничнаяАптека
	
КонецПроцедуры

#КонецОбласти

#Область ФормаПоискНоменклатурыПоШтрихкоду

// Процедура, вызываемая из обработчика события ПриСозданииНаСервере формы ПоискНоменклатурыПоШтрихкоду.
//
// Параметры:
//  Форма  - ФормаКлиентскогоПриложения - форма ПоискНоменклатурыПоШтрихкоду.
//
Процедура ПоискНоменклатурыПоШтрихкодуПриСозданииНаСервере(Форма) Экспорт
	
КонецПроцедуры

// Процедура, вызываемая из обработчика события ОбработкаПроверкиЗаполнения формы ПоискНоменклатурыПоШтрихкоду.
//
// Параметры:
//  Форма				 - ФормаКлиентскогоПриложения - форма ПоискНоменклатурыПоШтрихкоду.
//  Отказ				 - Булево - признак отказа.
//  ПроверяемыеРеквизиты - Массив - проверяемые реквизиты.
//
Процедура ПоискНоменклатурыПоШтрихкодуОбработкаПроверкиЗаполнения(Форма, Отказ, ПроверяемыеРеквизиты) Экспорт
	
КонецПроцедуры

// Запись штрихкодов в информационную базу.
//
// Параметры:
//  ШтрихкодыНоменклатуры - ТаблицаЗначений:
//   * ИдентификаторНоменклатуры - Строка
//   * Штрихкод - Строка
//   * Количество - Число
//   * Номенклатура - ОпределяемыйТип.НоменклатураРаботаСНоменклатурой
//   * Состояние - Строка
//   * ЕдиницаИзмерения - Произвольный
//   * Характеристика - ОпределяемыйТип.ХарактеристикаРаботаСНоменклатурой
//   * НоменклатураСервиса - Строка
//   * Зарегистрирован - Булево
//   * ХарактеристикиИспользуются - Булево
//   * ПоискВСервисеНеПроизводился - Булево
//   * НоменклатураНеНайденаВСервисе - Булево
//   * ИдентификаторХарактеристики - Строка
//   * ЗарегистрированОбработкой - Булево
//   * ХарактеристикаИспользуетсяВСервисе - Булево
//
Процедура ЗарегистрироватьШтрихкоды(ШтрихкодыНоменклатуры) Экспорт
	
КонецПроцедуры

// Метод вызывается после загрузки номенклатуры сервиса, найденной по штрихкоду, при заполнении
// таблицы штрихкодов.
//
// Параметры:
//  СтрокаТаблицыШтрихкодов	 - ДанныеФормыЭлементКоллекции - строка таблицы ШтрихкодыНоменклатуры.
//  НоменклатураСсылка		 - ОпределяемыйТип.НоменклатураРаботаСНоменклатурой - ссылка на созданную номенклатуру.
//
Процедура ПоискНоменклатурыПоШтрихкодуПослеЗагрузкиНоменклатуры(СтрокаТаблицыШтрихкодов, НоменклатураСсылка) Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область СопоставлениеНоменклатурыСРубрикатором

// Метод формирует текст запроса, на основе которого создается компоновщик настроек СКД. 
// Созданный компоновщик настроек используется для интерактивной настройки отбора номенклатуры.
//
// Требования к запросу:
//   Все поля отборов должны быть описаны в фигурных скобках {} секции инструкций компоновки.
// 
// Параметры:
//  ТекстЗапроса - Строка - текст запроса
//    Поля результата запроса:
//    * Номенклатура    - ОпределяемыйТип.НоменклатураРаботаСНоменклатурой - товар.
//    * ВидНоменклатуры - ОпределяемыйТип.ВидНоменклатурыРаботаСНоменклатурой - вид номенклатуры, указать NULL, если виды номенклатуры не используются.
//    * Родитель        - ОпределяемыйТип.НоменклатураРаботаСНоменклатурой - группа товара в иерархии, указать NULL, если справочник номенклатуры не иерархический.
//
Процедура ИнициализацияЗапросаОтбораДанныхНоменклатуры(ТекстЗапроса) Экспорт
	
КонецПроцедуры

// Получение публикуемых реквизитов номенклатуры.
// 
// Параметры:
//  ПубликуемыеРеквизиты - Соответствие - реквизиты справочника Номенклатура, публикуемые для торговых предложений.
//    * Ключ     - ОпределяемыйТип.ДополнительныеРеквизитыРаботаСНоменклатурой - значение реквизита сопоставления.
//    * Значение - Структура - свойства реквизита:
//      ** Представление    - Строка - наименование для отображения.
//      ** ПутьКДанным      - Строка - текст запроса для получения данных.
//      ** ТипЗначения      - ОписаниеТипов - описание типа данных.
//      ** ПустоеЗначение   - Произвольный - Значение реквизита, при котором, он считается не заполненным.
//
Процедура ПолучитьРеквизитыНоменклатурыДоступныеДляПубликации(ПубликуемыеРеквизиты) Экспорт
	
КонецПроцедуры 

// Инициализация запроса, описывающего источники данных заполнения дополнительных реквизитов номенклатуры ссылочного типа.
// Задача метода - описать соответствие доп. реквизита набору возможных значений этого доп. реквизита.
// Текст запроса должен содержать описание 2х полей:
//  РеквизитОбъекта - ОпределяемыйТип.РеквизитыСопоставленияРаботаСНоменклатурой - доп.реквизит.
//  Значение - ОпределяемыйТип.ЗначенияСвойствОбъектовРаботаСНоменклатурой - значение доп.реквизита.
// При использовании БСП в качестве значений доп. реквизитов используются справочники
//  ЗначенияСвойствОбъектов или ЗначенияСвойствОбъектовИерархия, для таких значений в запросе следует описать отбор по владельцу.
// Если для учета доп. реквизитов применяется какая-то иная механика, не БСП, либо модифицированная БСП,
//  нужно сформировать произвольный текст запроса, позволяющий получить значения доп.реквизитов.
// Для реквизитов метаданных, которые для сервиса 1С:Номенклатура представляются как дополнительные реквизиты,
//  нужно описать произвольный запрос, получающий значения свойств.
// Например: допустим, на уровне метаданных конфигурации существует реквизит Номенклатуры СтранаПроисхождения,
//  которому нет аналогов в реквизитах модели 1С:Номенклатуры, но есть аналоги в дополнительных реквизитах 1С:Номенклатуры.
// В этом случае реквизит СтранаПроисхождения должен быть описан в методе ПолучитьРеквизитыНоменклатурыДоступныеДляПубликации,
//  в составе ПубликуемыеРеквизиты, а так же в методе ИнициализацияЗапросаЗначенийДополнительныхРеквизитов нужно описать источник значений.
// Допустим, что реквизит СтранаПроисхождения имеет тип значения СправочникСсылка.СтраныМира.
// Тогда в запросе с использованием конструкции ОБЪЕДИНИТЬ ВСЕ добавляется подзапрос, где поле РеквизитОбъекта - константа,
//  устанавливается из параметра, а поле Значение - это ссылка на справочник СтраныМира.
// При этом может быть описана какая-то специфическая логика прикладного решения, например, могут выбираться не все значения
//  справочника, а с каким-то отбором, как например отбор по Владельцу для ЗначенияСвойствОбъектов БСП.
// ВАЖНО! Сам ссылочный тип данных, представляющий собой источник значений доп.реквизита должен быть включен в
//  определяемый тип ЗначенияСвойствОбъектовРаботаСНоменклатурой.
//
// Параметры:
//  Запрос - Запрос.
//  ДополнительныеРеквизиты - Массив из ОпределяемыйТип.РеквизитыСопоставленияРаботаСНоменклатурой, Неопределено - 
//   перечень доп.реквизитов, для которых нужно получить значения, если ДополнительныеРеквизиты = Неопределено,
//   то нужно получить значения для всех доп.реквизитов, включая и ПубликуемыеРеквизиты.
//
Процедура ИнициализацияЗапросаЗначенийДополнительныхРеквизитов(Запрос, Знач ДополнительныеРеквизиты) Экспорт 
	
КонецПроцедуры

#КонецОбласти

#Область ВыгрузкаНоменклатуры

// В запросе должны быть описаны временные таблицы с предопределенными полями (псевдонимами).
// На основании данных таблиц формируются файлы выгрузки номенклатуры.
//
// Если в прикладном решении отсутствуют данные для заполнения какого-то поля, либо целой таблицы, кроме обязательных,
// то это поле (или таблицу) следует исключить из запроса полностью, либо инициализировать значением(значениями) NULL.
// Обязательные таблицы и поля должны присутствовать в запросе даже если нет источников данных для их заполнения - в этом случае инициализировать поля значениями NULL
//
// На входе запрос содержит текст создания временной таблицы ОтборНоменклатуры, которая служит для ограничения выборки.
// Формируется на основе текста запроса, полученного методом ИнициализацияЗапросаОтбораДанныхНоменклатуры.
// Поля таблицы:
//  * Номенклатура   - ОпределяемыйТип.НоменклатураРаботаСНоменклатурой - ссылка на товар.
//  * Характеристика - ОпределяемыйТип.ХарактеристикаРаботаСНоменклатурой - ссылка на характеристику.
//      Если подбор номенклатуры с характеристиками не используется 
//       (т.е. РаботаСНоменклатурой.ИспользоватьПодборНоменклатурыСХарактеристиками() - Ложь), то
//      для выгрузки всех характеристик будет в ОтборНоменклатуры.Характеристика будет NULL
//      В этом случае нужно получить данные по всем характеристикам номенклатуры.
//  * ВидНоменклатуры - ОпределяемыйТип.ВидНоменклатурыРаботаСНоменклатурой - вид номенклатуры, может быть NULL, если виды номенклатуры не используются.
//  * Родитель        - ОпределяемыйТип.НоменклатураРаботаСНоменклатурой - группа товара в иерархии, может быть NULL, если справочник номенклатуры не иерархический.
// 
// Параметры запроса:
//  * ИсключенныеДополнительныеРеквизиты    - Массив - доп.реквизиты, запрещенные к выгрузке пользователем. Выгружать надо все доп.реквизиты кроме исключений, заданных этим параметром.
//  * ВыгружатьИндивидуальныеХарактеристики - Булево   - признак необходимости выгружать индивидуальные характеристики номенклатуры.
//  * ИсключенныеВидыНоменклатуры           - Массив - виды номенклатуры, по которым пользователь запретил выгружать характеристики. По всем остальным видам характеристики выгружаются.
//  * Организация                           - ОпределяемыйТип.Организация - организация, для которой выполняется выгрузка.
// * Параметры запроса - строковые константы:
// * Ставки НДС:
//  * НДС0  - Строка - без НДС (или НДС 0%).
//  * НДС10 - Строка - НДС 10%.
//  * НДС18 - Строка - НДС 18%.
//  * НДС20 - Строка - НДС 20%.
// * Типы номенклатуры:
//  * Товар  - Строка - тип номенклатуры "Товар".
//  * Услуга - Строка - тип номенклатуры "Услуга".
// * Типы измеряемых величин:
//  * Вес                - Строка
//  * Объем              - Строка
//  * Площадь            - Строка
//  * Длина              - Строка
//  * КоличествоШтук     - Строка
//  * Упаковка           - Строка
//  * Мощность           - Строка
//  * Энергия            - Строка
//  * ЭлектрическийЗаряд - Строка
//  * Время              - Строка
// Классификаторы:
//  * ОКПД2  - Строка
//  * ТНВЭД  - Строка
//  * ЕГАИС  - Строка
//  * ОКВЭД2 - Строка
//
// Временные таблицы и предопределенные поля:
// Товары
//  * Номенклатура                - ОпределяемыйТип.НоменклатураРаботаСНоменклатурой - ссылка на товар.
//  * Характеристика              - ОпределяемыйТип.ХарактеристикаРаботаСНоменклатурой - ссылка на характеристику.
//  * Наименование                - Строка - наименование товара.
//  * ХарактеристикаНаименование  - Строка - наименование характеристики.
//  * Артикул                     - Строка - артикул товара.
//  * СтавкаНДС                   - Строка - ставка НДС, значение из списка: &НДС0, &НДС10, &НДС18, &НДС20.
//  * ЕдиницаИзмерения                        - Строка - наименование базовой единицы измерения товара.
//  * ЕдиницаИзмеренияКодОКЕИ                 - Строка - код ОКЕИ единицы измерения товара.
//  * ЕдиницаИзмеренияТипИзмеряемойВеличины   - Строка - значение из списка: &Вес, &Объем, &Площадь, &Длина, &КоличествоШтук, &Упаковка, &Мощность, &Энергия, &ЭлектрическийЗаряд, &Время.
//  * ЕдиницаИзмеренияНаименованиеПолное      - Строка - полное наименование единицы измерения товара.
//  * ЕдиницаИзмеренияМеждународноеСокращение - Строка - международное сокращение единицы измерения товара.
//  * ЕдиницаИзмеренияБазоваяЕдиница          - Строка - код ОКЕИ базовой величины для единицы измерения товара.
//  * ЕдиницаИзмеренияЧислитель               - Число  - числитель отношения единицы измерения товара к базовой величине.
//  * ЕдиницаИзмеренияЗнаменатель             - Число  - знаменатель отношения единицы измерения товара к базовой величине.
//  * ТипНоменклатуры             - Строка - значение из списка: &Товар, &Услуга.
//  * Описание                    - Строка - текстовое описание товара.
//  * НаименованияДляПечатиЧека   - Строка - краткое наименование товара для печати чека.
//  * ВестиУчетПоГТД              - Булево - вести учет по ГТД.
//  * ПродукцияМаркируемаяДляГИСМ - Булево - продукция, маркируемая для ГИСМ.
//  * ПодакцизныйТовар            - Булево - подакцизный товар.
//  * СтранаПроисхождения         - Строка - код страны происхождения товара согласно ОКСМ.
//  * Производитель               - СправочникСсылка - ссылка (уникальный идентификатор) производителя.
//  * ПроизводительНаименование   - Строка - наименование производителя.
//  * ПроизводительИНН            - Строка - ИНН производителя.
//  * ПроизводительКПП            - Строка - КПП производителя.
//  * Марка                       - СправочникСсылка - ссылка (уникальный идентификатор) марки (бренда).
//  * МаркаНаименование           - Строка - наименование марки (бренда).
//  * КоличествоВУпаковке                                        - Число  - количество штук в 1 единице (упаковке) товара. Например: 1 пачка фломастеров содержит 10 штук фломастеров.
//  * КоличествоВУпаковкеЕдиницаИзмерения                        - Строка - наименование единицы измерения количества штук.
//  * КоличествоВУпаковкеЕдиницаИзмеренияКодОКЕИ                 - Строка - код ОКЕИ единицы измерения количества штук.
//  * КоличествоВУпаковкеЕдиницаИзмеренияТипИзмеряемойВеличины   - Строка - ожидаемое значение &КоличествоШтук.
//  * КоличествоВУпаковкеЕдиницаИзмеренияНаименованиеПолное      - Строка - полное наименование единицы измерения количества штук.
//  * КоличествоВУпаковкеЕдиницаИзмеренияМеждународноеСокращение - Строка - международное сокращение единицы измерения количества штук.
//  * КоличествоВУпаковкеЕдиницаИзмеренияБазоваяЕдиница          - Строка - код ОКЕИ базовой величины для единицы измерения количества штук.
//  * КоличествоВУпаковкеЕдиницаИзмеренияЧислитель               - Число  - числитель отношения единицы измерения количества штук к базовой величине.
//  * КоличествоВУпаковкеЕдиницаИзмеренияЗнаменатель             - Число  - знаменатель отношения единицы измерения количества штук к базовой величине.
//  * ВесЧислитель                               - Число  - числитель отношения единицы измерения веса к единице измерения товара.
//  * ВесЗнаменатель                             - Число  - знаменатель отношения единицы измерения веса к единице измерения товара.
//  * ВесЕдиницаИзмерения                        - Строка - наименование единицы измерения веса.
//  * ВесЕдиницаИзмеренияКодОКЕИ                 - Строка - код ОКЕИ единицы измерения веса.
//  * ВесЕдиницаИзмеренияТипИзмеряемойВеличины   - Строка - ожидаемое значение &Вес.
//  * ВесЕдиницаИзмеренияНаименованиеПолное      - Строка - полное наименование единицы измерения веса.
//  * ВесЕдиницаИзмеренияМеждународноеСокращение - Строка - международное сокращение единицы измерения веса.
//  * ВесЕдиницаИзмеренияБазоваяЕдиница          - Строка - код ОКЕИ базовой величины для единицы измерения веса.
//  * ВесЕдиницаИзмеренияЧислитель               - Число  - числитель отношения единицы измерения веса к базовой величине.
//  * ВесЕдиницаИзмеренияЗнаменатель             - Число  - знаменатель отношения единицы измерения веса к базовой величине.
//  * ДлинаЧислитель                               - Число  - числитель отношения единицы измерения длины к единице измерения товара.
//  * ДлинаЗнаменатель                             - Число  - знаменатель отношения единицы измерения длины к единице измерения товара.
//  * ДлинаЕдиницаИзмерения                        - Строка - наименование единицы измерения длины.
//  * ДлинаЕдиницаИзмеренияКодОКЕИ                 - Строка - код ОКЕИ единицы измерения длины.
//  * ДлинаЕдиницаИзмеренияТипИзмеряемойВеличины   - Строка - ожидаемое значение &Длина.
//  * ДлинаЕдиницаИзмеренияНаименованиеПолное      - Строка - полное наименование единицы измерения длины.
//  * ДлинаЕдиницаИзмеренияМеждународноеСокращение - Строка - международное сокращение единицы измерения длины.
//  * ДлинаЕдиницаИзмеренияБазоваяЕдиница          - Строка - код ОКЕИ базовой величины для единицы измерения длины.
//  * ДлинаЕдиницаИзмеренияЧислитель               - Число  - числитель отношения единицы измерения длины к базовой величине.
//  * ДлинаЕдиницаИзмеренияЗнаменатель             - Число  - знаменатель отношения единицы измерения длины к базовой величине.
//  * ОбъемЧислитель                               - Число  - числитель отношения единицы измерения объема к единице измерения товара.
//  * ОбъемЗнаменатель                             - Число  - знаменатель отношения единицы измерения объема к единице измерения товара.
//  * ОбъемЕдиницаИзмерения                        - Строка - наименование единицы измерения объема.
//  * ОбъемЕдиницаИзмеренияКодОКЕИ                 - Строка - код ОКЕИ единицы измерения объема.
//  * ОбъемЕдиницаИзмеренияТипИзмеряемойВеличины   - Строка - ожидаемое значение &Объем.
//  * ОбъемЕдиницаИзмеренияНаименованиеПолное      - Строка - полное наименование единицы измерения объема.
//  * ОбъемЕдиницаИзмеренияМеждународноеСокращение - Строка - международное сокращение единицы измерения объема.
//  * ОбъемЕдиницаИзмеренияБазоваяЕдиница          - Строка - код ОКЕИ базовой величины для единицы измерения объема.
//  * ОбъемЕдиницаИзмеренияЧислитель               - Число  - числитель отношения единицы измерения объема к базовой величине.
//  * ОбъемЕдиницаИзмеренияЗнаменатель             - Число  - знаменатель отношения единицы измерения объема к базовой величине.
//  * ПлощадьЧислитель                               - Число  - числитель отношения единицы измерения площади к единице измерения товара.
//  * ПлощадьЗнаменатель                             - Число  - знаменатель отношения единицы измерения площади к единице измерения товара.
//  * ПлощадьЕдиницаИзмерения                        - Строка - наименование единицы измерения площади.
//  * ПлощадьЕдиницаИзмеренияКодОКЕИ                 - Строка - код ОКЕИ единицы измерения площади.
//  * ПлощадьЕдиницаИзмеренияТипИзмеряемойВеличины   - Строка - &Площадь.
//  * ПлощадьЕдиницаИзмеренияНаименованиеПолное      - Строка - полное наименование единицы измерения площади.
//  * ПлощадьЕдиницаИзмеренияМеждународноеСокращение - Строка - международное сокращение единицы измерения площади.
//  * ПлощадьЕдиницаИзмеренияБазоваяЕдиница          - Строка - код ОКЕИ базовой величины для единицы измерения площади.
//  * ПлощадьЕдиницаИзмеренияЧислитель               - Число  - числитель отношения единицы измерения площади к базовой величине.
//  * ПлощадьЕдиницаИзмеренияЗнаменатель             - Число  - знаменатель отношения единицы измерения площади к базовой величине.
//  * <Псевдоним доп.реквизита> - тип значения соответствует типу доп.реквизита - значения доп. реквизитов,
//                                подробнее об использовании псевдонимов доп. реквизитов см. в документации по встраиванию,
//                                список поддерживаемых псевдонимов описан в документации по встраиванию.
// КРИТИЧЕСКИ ВАЖНО! Таблица Товары должна содержать ровно по 1 строке на сочетание Номенклатура + Характеристика
// Поддерживается выгрузка дополнительных свойств Номенклатуры, не включенных в указанный выше список полей.
// Это означает, что все поля таблицы Товары будут включены в пакет выгрузки, как описанные выше, так и прочие.
// Например, таким образом можно добавлять данные из регистров сведений.
//
// Категории:
//  * Номенклатура - ОпределяемыйТип.НоменклатураРаботаСНоменклатурой - ссылка на товар.
//  * Категория    - ОпределяемыйТип.НоменклатураРаботаСНоменклатурой ИЛИ ОпределяемыйТип.ВидНоменклатурыРаботаСНоменклатурой - ссылка на категорию.
//  * Наименование - Строка - наименование категории.
//  * Родитель     - ОпределяемыйТип.НоменклатураРаботаСНоменклатурой ИЛИ ОпределяемыйТип.ВидНоменклатурыРаботаСНоменклатурой - родитель категории в иерархии.
// Пояснение.
// Категории - это способ деления товаров на группы.
// В общем случае предполагается, что категорией может быть вид номенклатуры, либо родитель в иерархии номенклатуры.
// Наличие таблицы в запросе обязательно.
// Если в конфигурации нет возможности разделить номенклатуру на категории, следует инициализировать таблицу значениями NULL по всем полям.
// Минимально необходимо описать 2 уровня иерархии. 
// То есть если справочник Номенклатура иерархический, то в список категорий должны попасть Родитель и Родитель.Родитель.
// Если виды номенклатуры используются, то в списке категорий должны быть ВидНоменклатуры и ВидНоменклатуры.Родитель.
// Допускается и более глубокое описание иерархии - 3, 4 и т.д. уровней.
// 
// Свойства:
//  * Номенклатура           - ОпределяемыйТип.НоменклатураРаботаСНоменклатурой - ссылка на товар.
//  * Характеристика         - ОпределяемыйТип.ХарактеристикаРаботаСНоменклатурой - ссылка на характеристику.
//  * Свойство               - ЛюбаяСсылка - свойство товара.
//  * Значение               - Произвольный - значение свойства товара.
//  * РеквизитХарактеристики - Булево - признак свойства характеристики.
// ВАЖНО! В разрезе характеристик указать только свойства характеристик (СвойствоХарактеристики = ИСТИНА).
// Для свойств номенклатуры (СвойствоХарактеристики = ЛОЖЬ) характеристику не заполнять, указать NULL.
// Свойства номенклатуры не должны дублироваться (размножаться на количество различных характеристик номенклатуры).
//
// Штрихкоды:
//  * Номенклатура   - ОпределяемыйТип.НоменклатураРаботаСНоменклатурой - ссылка на товар.
//  * Характеристика - ОпределяемыйТип.ХарактеристикаРаботаСНоменклатурой - ссылка на характеристику.
//  * Упаковка       - СправочникСсылка - единица измерения упаковки товара.
//  * Штрихкод       - Строка - штрихкод.
//
// Упаковки:
//  * Номенклатура         - ОпределяемыйТип.НоменклатураРаботаСНоменклатурой - ссылка на товар.
//  * Характеристика       - ОпределяемыйТип.ХарактеристикаРаботаСНоменклатурой - ссылка на характеристику.
//  * Ссылка               - СправочникСсылка - ссылка (уникальный идентификатор) на упаковку.
//  * Наименование         - Строка - наименование упаковки.
//  * Родитель             - СправочникСсылка - «родительская» (внешняя, более крупная) упаковка.
//  * РодительНаименование - Строка - наименование «родительской» упаковки.
//  * ЕдиницаКодОКЕИ       - Строка - код ОКЕИ единицы измерения упаковки.
//  * ЕдиницаНаименование  - Строка - наименование единицы измерения упаковки.
//  * Числитель            - Число  - числитель отношения единицы измерения к упаковке.
//  * Знаменатель          - Число  - знаменатель отношения единицы измерения к упаковке.
//  * Вес                                        - Число  - вес упаковки (брутто).
//  * ВесЕдиницаИзмерения                        - Строка - наименование единицы измерения веса.
//  * ВесЕдиницаИзмеренияКодОКЕИ                 - Строка - код ОКЕИ единицы измерения веса.
//  * ВесЕдиницаИзмеренияТипИзмеряемойВеличины   - Строка - ожидаемое значение &Вес.
//  * ВесЕдиницаИзмеренияНаименованиеПолное      - Строка - полное наименование единицы измерения веса.
//  * ВесЕдиницаИзмеренияМеждународноеСокращение - Строка - международное сокращение единицы измерения веса.
//  * ВесЕдиницаИзмеренияБазоваяЕдиница          - Строка - код ОКЕИ базовой величины для единицы измерения веса.
//  * ВесЕдиницаИзмеренияЧислитель               - Число  - числитель отношения единицы измерения веса к базовой величине.
//  * ВесЕдиницаИзмеренияЗнаменатель             - Число  - знаменатель отношения единицы измерения веса к базовой величине.
//  * Объем                                        - Число  - объем упаковки.
//  * ОбъемЕдиницаИзмерения                        - Строка - наименование единицы измерения объема.
//  * ОбъемЕдиницаИзмеренияКодОКЕИ                 - Строка - код ОКЕИ единицы измерения объема.
//  * ОбъемЕдиницаИзмеренияТипИзмеряемойВеличины   - Строка - ожидаемое значение &Объем.
//  * ОбъемЕдиницаИзмеренияНаименованиеПолное      - Строка - полное наименование единицы измерения объема.
//  * ОбъемЕдиницаИзмеренияМеждународноеСокращение - Строка - международное сокращение единицы измерения объема.
//  * ОбъемЕдиницаИзмеренияБазоваяЕдиница          - Строка - код ОКЕИ базовой величины для единицы измерения объема.
//  * ОбъемЕдиницаИзмеренияЧислитель               - Число  - числитель отношения единицы измерения объема к базовой величине.
//  * ОбъемЕдиницаИзмеренияЗнаменатель             - Число  - знаменатель отношения единицы измерения объема к базовой величине.
//  * Высота                                        - Число  - высота упаковки.
//  * ВысотаЕдиницаИзмерения                        - Строка - наименование единицы измерения высоты.
//  * ВысотаЕдиницаИзмеренияКодОКЕИ                 - Строка - код ОКЕИ единицы измерения высоты.
//  * ВысотаЕдиницаИзмеренияТипИзмеряемойВеличины   - Строка - ожидаемое значение &Длина.
//  * ВысотаЕдиницаИзмеренияНаименованиеПолное      - Строка - полное наименование единицы измерения высоты.
//  * ВысотаЕдиницаИзмеренияМеждународноеСокращение - Строка - международное сокращение единицы измерения высоты.
//  * ВысотаЕдиницаИзмеренияБазоваяЕдиница          - Строка - код ОКЕИ базовой величины для единицы измерения высоты.
//  * ВысотаЕдиницаИзмеренияЧислитель               - Число  - числитель отношения единицы измерения высоты к базовой величине.
//  * ВысотаЕдиницаИзмеренияЗнаменатель             - Число  - знаменатель отношения единицы измерения высоты к базовой величине.
//  * Ширина                                        - Число  - ширина упаковки.
//  * ШиринаЕдиницаИзмерения                        - Строка - наименование единицы измерения ширины.
//  * ШиринаЕдиницаИзмеренияКодОКЕИ                 - Строка - код ОКЕИ единицы измерения ширины.
//  * ШиринаЕдиницаИзмеренияТипИзмеряемойВеличины   - Строка - ожидаемое значение &Длина.
//  * ШиринаЕдиницаИзмеренияНаименованиеПолное      - Строка - полное наименование единицы измерения ширины.
//  * ШиринаЕдиницаИзмеренияМеждународноеСокращение - Строка - международное сокращение единицы измерения ширины.
//  * ШиринаЕдиницаИзмеренияБазоваяЕдиница          - Строка - код ОКЕИ базовой величины для единицы измерения ширины.
//  * ШиринаЕдиницаИзмеренияЧислитель               - Число  - числитель отношения единицы измерения ширины к базовой величине.
//  * ШиринаЕдиницаИзмеренияЗнаменатель             - Число  - знаменатель отношения единицы измерения ширины к базовой величине.
//  * Глубина                                        - Число  - глубина упаковки.
//  * ГлубинаЕдиницаИзмерения                        - Строка - наименование единицы измерения глубины.
//  * ГлубинаЕдиницаИзмеренияКодОКЕИ                 - Строка - код ОКЕИ единицы измерения глубины.
//  * ГлубинаЕдиницаИзмеренияТипИзмеряемойВеличины   - Строка - ожидаемое значение &Длина.
//  * ГлубинаЕдиницаИзмеренияНаименованиеПолное      - Строка - полное наименование единицы измерения глубины.
//  * ГлубинаЕдиницаИзмеренияМеждународноеСокращение - Строка - международное сокращение единицы измерения глубины.
//  * ГлубинаЕдиницаИзмеренияБазоваяЕдиница          - Строка - код ОКЕИ базовой величины для единицы измерения глубины.
//  * ГлубинаЕдиницаИзмеренияЧислитель               - Число  - числитель отношения единицы измерения глубины к базовой величине.
//  * ГлубинаЕдиницаИзмеренияЗнаменатель             - Число  - знаменатель отношения единицы измерения глубины к базовой величине.
//
// Классификаторы:
//  * Номенклатура   - ОпределяемыйТип.НоменклатураРаботаСНоменклатурой - ссылка на товар.
//  * Характеристика - ОпределяемыйТип.ХарактеристикаРаботаСНоменклатурой - ссылка на характеристику.
//  * Наименование   - Строка - имя классификатора, значение из списка &ОКПД2, &ТНВЭД, &ЕГАИС, &КодПродукцииЕГАИС, &ИдентификаторВЕТИС.
//  * Код            - Строка - код элемента классификатора.
//  * Описание       - Строка - название кода.
// Список поддерживаемых классификаторов может меняться. Актуальный список содержится в схеме catalog-partners.xsd, ссылка на ИТС.
// Значения перечисленных выше параметров (Наименование классификатора) устанавливаются в коде библиотеки.
// Допускается добавление новых классификаторов в код при встраивании, для этого добавляются новые параметры.
// Значения таких новых параметров необходимо устанавливать на переопределяемой части, значение параметра должно соответствовать XSD схеме.
// Примеры:
// Запрос.УстановитьПараметр("КодПродукцииЕГАИС", "EGAIS_code");
// Запрос.УстановитьПараметр("ИдентификаторВЕТИС", "Mercury");
//
// Изображения:
//  * Номенклатура   - ОпределяемыйТип.НоменклатураРаботаСНоменклатурой - ссылка на товар.
//  * Характеристика - ОпределяемыйТип.ХарактеристикаРаботаСНоменклатурой - ссылка на характеристику.
//  * Файл           - ЛюбаяСсылка - ссылка (уникальный идентификатор) на файл.
//  * Наименование   - Строка - наименование файла.
//  * Гиперссылка    - Строка - URL файла.
//
// Вложения:
//  * Номенклатура   - ОпределяемыйТип.НоменклатураРаботаСНоменклатурой - ссылка на товар.
//  * Характеристика - ОпределяемыйТип.ХарактеристикаРаботаСНоменклатурой - ссылка на характеристику.
//  * Файл           - ЛюбаяСсылка - ссылка (уникальный идентификатор) на файл.
//  * Наименование   - Строка - наименование файла.
//  * Гиперссылка    - Строка - URL файла.
// 
// Сертификаты:
//  * Номенклатура               - ОпределяемыйТип.НоменклатураРаботаСНоменклатурой - ссылка на товар.
//  * Характеристика             - ОпределяемыйТип.ХарактеристикаРаботаСНоменклатурой - ссылка на характеристику.
//  * Сертификат                 - СправочникСсылка - ссылка на сертификат.
//  * Номер                      - Строка - номер.
//  * ДатаНачалаСрокаДействия    - ДатаВремя - дата выдачи.
//  * ДатаОкончанияСрокаДействия - ДатаВремя - дата окончания срока действия.
//  * ТипСертификата             - Строка - тип сертификата.
//  * ОрганВыдавшийДокумент      - Строка - орган выдавший документ.
//
// ВложенияСертификатов:
//  * Сертификат   - СправочникСсылка - ссылка на сертификат.
//  * Файл         - ЛюбаяСсылка - ссылка (уникальный идентификатор) на файл.
//  * Наименование - Строка - наименование файла.
//  * Гиперссылка  - Строка - URL файла.
//
// Обязательные таблицы и поля:
// Товары
//  * Номенклатура,
//  * Характеристика.
// Свойства: все поля.
// Категории: все поля.
// Штрихкоды: Номенклатура.
//
// При необходимости возможно добавление в пакет данных выгрузки произвольных дополнительных сведений общего характера, без привязки к товарной позиции.
// Для этого в тексте запроса можно описать любое нужное количество дополнительных запросов без создания временной таблицы.
// Важно, чтобы все эти запросы не использовали никакие вышеописанные временные таблицы, относящиеся к номенклатуре, так как
//  выполняться эти запросы будут отдельно от запроса по номенклатуре, поскольку речь идет о сведениях, общих для всего пакета данных в целом.
// Если добавляемые в пакет дополнительные сведения имеют сложную структуру (не одномерный массив полей, а многомерный массив), то 
//  имя таблицы источника данных нужно сформировать по шаблону ДополнительныеДанные_ИмяТаблицы.
// В этом случае в пакет добавится дополнительное свойство ИмяТаблицы, значение которого будет заполнено данными запроса.
// Если таблица с префиксом ДополнительныеДанные_ в секции ИЗ не найдена,
//  то все полученные запросом дополнительные сведения добавляются в пакет как одномерный массив пар значений <имя поля> - <значение поля>.
//
// Примечание: в случае, если данные дополнительной таблицы хранятся без разреза Характеристика, то эту колонку следует исключить из запроса.
// Актуально для дополнительных таблиц: Упаковки, Классификаторы, Изображения, Вложения и Сертификаты.
// В смешанных случаях - например, для таблицы Классификаторы возможна ситуация, что часть данных имеют разрез Характеристика, другие нет, - 
//  указывается значение характеристики там, где возможно, в остальных случаях указать NULL
// 
// Параметры:
//  Запрос - Запрос - запрос для получения данных номенклатуры.
//
Процедура ИнициализацияЗапросаВыборкиДанныхДляВыгрузки(Запрос) Экспорт
	
КонецПроцедуры

// Позволяет переопределить пользовательское представление формализованных реквизитов выгрузки номенклатуры,
//  а так же связать формализованные реквизиты с публикуемыми, см. ПолучитьРеквизитыНоменклатурыДоступныеДляПубликации.
// Множества ПубликуемыеРеквизиты и ФормализованныеРеквизиты решают различные задачи и могут пересекаться,
//  поэтому, для корректной работы библиотеки нужно указать их связь, если она есть.
// В этом случае в качестве значения ключа структуры ФормализованныеРеквизиты подставляется ключ из соответствия ПубликуемыеРеквизиты.
// То есть, если формализованный реквизит одновременно является публикуемым, то заполнение значения ключа обязательно.
// Для остальных реквизитов указание представления не обязательно.
// Если представление не переопределено, то при выводе в интерфейс будет поставлено библиотечное значение представления "по умолчанию".
// Представления формализованных реквизитов используются в форме ВыгружаемыеРеквизиты.
// Состав ключей параметра ФормализованныеРеквизиты ограничивается на основании текста запроса ИнициализацияЗапросаВыборкиДанныхДляВыгрузки.
// Например, если реквизит Производитель в запросе не описан, то 
//  * в форму ВыгружаемыеРеквизиты он не выводится;
//  * в составе параметра ФормализованныеРеквизиты ключа "Производитель" не будет.
//
// Параметры:
//  ФормализованныеРеквизиты - структура - см. РаботаСНоменклатуройСлужебный.ФормализованныеРеквизитыНоменклатурыДляВыгрузки
//
// Пример:
//  1. ФормализованныеРеквизиты.Артикул = Перечисления.РеквизитыСопоставленияНоменклатурыБизнесСеть.Артикул; - связывает формализованный
//       реквизит с публикуемым.
//  2. ФормализованныеРеквизиты.ТипНоменклатуры = НСтр("ru = 'Тип номенклатуры'")); - задает пользовательское представление реквизита.
//
Процедура ФормализованныеРеквизитыНоменклатурыДляВыгрузки(ФормализованныеРеквизиты) Экспорт
	
КонецПроцедуры

// Формирует перечень доступных для выгрузки дополнительных реквизитов Номенклатуры.
// Если в конфигурации поддерживается группировка доп. реквизитов по видам номенклатуры,
//  то это должно быть отражено в результатах работы метода путем заполнения соответствующих колонок. 
// В противном случае все доп. реквизиты возвращаются как общие, без указания вида номенклатуры.
// Общие доп. реквизиты должны быть описаны всегда, независимо от значения параметра ВидыНоменклатуры.
// 
// Параметры:
//  ДополнительныеРеквизиты - ТаблицаЗначений - дополнительные реквизиты номенклатуры.
//    Колонки:
//    * Свойство - Произвольный - доп. реквизит.
//    * Синоним - Строка - пользовательское представление доп.реквизита.
//    * ТипЗначения - ОписаниеТипов.
//    * ВидНоменклатуры - ОпределяемыйТип.ВидНоменклатурыРаботаСНоменклатурой - вид номенклатуры (соответствует набору доп.реквизитов). Для общих реквизитов не заполняется.
//    * ВидНоменклатурыНаименование - Строка - пользовательское представление набора доп.реквизитов. Пример: "Столы (вид номенклатуры)".
//    * ИспользоватьХарактеристики - Булево - признак использования характеристик по виду номенклатуры. Для общих реквизитов значение Ложь.
//    Если виды номенклатуры не используются, достаточно заполнить только первые 2 колонки.
//  ВидыНоменклатуры - СписокЗначений, Неопределено - виды номенклатуры, для которых нужно получить доп.реквизиты.
//                     Если передано Неопределено, то нужно получить доп.реквизиты по всем видам номенклатуры без отбора.
// 
Процедура ДополнительныеРеквизитыНоменклатурыДляВыгрузки(ДополнительныеРеквизиты, ВидыНоменклатуры) Экспорт
	
КонецПроцедуры

// Определяет товарную группу 1С:Номенклатуры для объектов информационной базы - номенклатуры или видов номенклатуры.
// 
// Параметры:
//  ТоварныеГруппыНоменклатуры - Соответствие - где:
//   * Ключ - ОпределяемыйТип.НоменклатураРаботаСНоменклатурой, ОпределяемыйТип.ВидНоменклатурыРаботаСНоменклатурой - номенклатура или вид номенклатуры.
//   * Значение - Строка - имя товарной группы 1С:Номенклатуры, например: "ЛегкаяПромышленность", "МолочнаяПродукция",
//                       так же см. ключи РаботаСНоменклатурой.ТоварныеГруппыСервиса()
//
Процедура ПолучитьТоварныеГруппыНоменклатуры(ТоварныеГруппыНоменклатуры) Экспорт
	
КонецПроцедуры

// Формирует пользовательское представление товарных групп сервиса 1С:Номенклатура
// 
// Параметры:
//  ЗаголовокТоварныхГрупп - Строка - представление самого термина "товарная группа" в именительном падеже единственном числе, например "особенность учета".
//  ТоварныеГруппыСервиса - Структура - ключи - имена товарных групп 1С:Номенклатуры, например: "ЛегкаяПромышленность", "МолочнаяПродукция",
//                                      значения - пользовательские представления товарных групп, например: "Товары легкой промышленности и одежда",
//                                      так же см. РаботаСНоменклатурой.ТоварныеГруппыСервиса()
//
Процедура ПредставлениеТоварныхГрупп(ЗаголовокТоварныхГрупп, ТоварныеГруппыСервиса) Экспорт 
	
КонецПроцедуры

// Формирует текст запроса, на основе которого создается компоновщик настроек СКД для отбора номенклатуры с характеристиками.
//
// Требования к запросу:
//   Все поля отборов должны быть описаны в фигурных скобках {} секции инструкций компоновки.
//
// Параметры:
//  ТекстЗапроса - Строка - текст запроса
//    Поля результата запроса:
//    * Номенклатура   - ОпределяемыйТип.НоменклатураРаботаСНоменклатурой - номенклатура.
//    * Характеристика - ОпределяемыйТип.ХарактеристикаРаботаСНоменклатурой - характеристика номенклатуры.
//
Процедура ИнициализацияЗапросаОтбораНоменклатурыСХарактеристиками(ТекстЗапроса) Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область УстаревшиеПроцедурыИФункции

// Устарела. Не используется
Процедура ИнициализацияСпискаСопоставленияПоНоменклатуре(Список) Экспорт
	
КонецПроцедуры

// Устарела. Не используется
Процедура ИнициализацияСпискаСопоставленияПоИерархии(Список) Экспорт
	
КонецПроцедуры

// Устарела. Не используется
Процедура ИнициализацияСпискаСопоставленияНоменклатуры(Список) Экспорт
	
КонецПроцедуры

// Устарела. Не используется
Процедура ПолучитьДоступныеТипыЗначенийСвойствДляСопоставления(ТипыЗначенийСвойств) Экспорт
	
КонецПроцедуры

// Устарела. Не используется
Процедура ПустаяСсылкаРеквизитаОбъектаДляСопоставления(Ссылка) Экспорт
	
КонецПроцедуры

// Устарела. Не используется
Процедура ПолучитьДанныеСопоставленияРеквизитов(ОбъектСопоставления, СопоставленныеРеквизиты, ДополнительныеРеквизиты, РасчетСоответствий) Экспорт
	
КонецПроцедуры

// Устарела. Не используется
Процедура ИнициализацияЗапросаСоответствияЗначенийРеквизитовВидаНоменклатуры(Запрос) Экспорт
	
КонецПроцедуры

// Устарела. Не используется
Процедура ПолучитьСопоставленныеЗначенияРеквизитаВидаНоменклатуры(Знач ОбъектСопоставления, Знач РеквизитОбъекта, Знач ТипЗначения, ЗначенияРеквизита) Экспорт
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
