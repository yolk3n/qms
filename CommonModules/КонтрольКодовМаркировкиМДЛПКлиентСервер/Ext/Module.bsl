
#Область ПрограммныйИнтерфейс

#Область ФормированиеПредставленийРезультатовПроверкиКМ

// Заполняет поля КодСтатусаПроверкиКМ и ПояснениеСтатусаПроверкиКМ элемента коллекции по данным РезультатПроверкиКМ.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма объекта подключенного к механизму проверки КМ.
//  ЭлементКоллекции - элемент коллекции, содержащий РезультатПроверкиКМ, КодСтатусаПроверкиКМ и ПояснениеСтатусаПроверкиКМ
//                     (см. КонтрольКодовМаркировкиСредствамиАПИМДЛПКлиент.НачатьПроверкуКМ,
//                     КонтрольКодовМаркировкиСредствамиРВМДЛПКлиент.НачатьПроверкуКМ
//                     и КонтрольКодовМаркировкиСредствамиККТМДЛПКлиент.НачатьПроверкуКМ).
//
Процедура ЗаполнитьПредставлениеРезультатаПроверкиКМ(Форма, ЭлементКоллекции) Экспорт
	
	КлючГруппыНастроекКонтроляКМ = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ЭлементКоллекции.РезультатПроверкиКМ, "КлючГруппыНастроекКонтроляКМ", "");
	Если Не ЗначениеЗаполнено(КлючГруппыНастроекКонтроляКМ) И ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "КлючГруппыНастроекКонтроляКМ") Тогда
		КлючГруппыНастроекКонтроляКМ = Форма.КлючГруппыНастроекКонтроляКМ;
	КонецЕсли;
	
	Представление = ПредставлениеРезультатаПроверкиКМ(КлючГруппыНастроекКонтроляКМ, ЭлементКоллекции);
	Если ЗначениеЗаполнено(Представление) Тогда
		ЗаполнитьЗначенияСвойств(ЭлементКоллекции, Представление);
	КонецЕсли;
	
КонецПроцедуры

// Расчитывает и заполняет итоговое значения полей КодСтатусаПроверкиКМ и ПояснениеСтатусаПроверкиКМ
// по данным РезультатПроверкиКМ каждого передаваемого ЭлементКоллекции
// методом накопления результата.
// Используется, например, для расчета полей КодСтатусаПроверкиКМ и ПояснениеСтатусаПроверкиКМ для транспортной упаковки
// по данным проверки КМ потребительских упаковок.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма объекта подключенного к механизму проверки КМ.
//  ИтоговыйЭлементКоллекции - элемент коллекции, куда помещается итоговые значения полей КодСтатусаПроверкиКМ и ПояснениеСтатусаПроверкиКМ.
//  ЭлементКоллекции - элемент коллекции, содержащий РезультатПроверкиКМ, КодСтатусаПроверкиКМ и ПояснениеСтатусаПроверкиКМ
//                     (см. КонтрольКодовМаркировкиСредствамиАПИМДЛПКлиент.НачатьПроверкуКМ, 
//                     КонтрольКодовМаркировкиСредствамиРВМДЛПКлиент.НачатьПроверкуКМ
//                     и КонтрольКодовМаркировкиСредствамиККТМДЛПКлиент.НачатьПроверкуКМ).
//
Процедура ЗаполнитьПредставлениеИтоговогоРезультатаПроверкиГруппыКМ(Форма, ИтоговыйЭлементКоллекции, ЭлементКоллекции) Экспорт
	
	КлючГруппыНастроекКонтроляКМ = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ЭлементКоллекции.РезультатПроверкиКМ, "КлючГруппыНастроекКонтроляКМ", "");
	Если Не ЗначениеЗаполнено(КлючГруппыНастроекКонтроляКМ) И ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "КлючГруппыНастроекКонтроляКМ") Тогда
		КлючГруппыНастроекКонтроляКМ = Форма.КлючГруппыНастроекКонтроляКМ;
	КонецЕсли;
	
	ПредставлениеЭлемента = ПредставлениеРезультатаПроверкиКМ(КлючГруппыНастроекКонтроляКМ, ЭлементКоллекции);
	Если ЗначениеЗаполнено(ПредставлениеЭлемента) Тогда
		
		ТекущееИтоговоеПредставление = Новый Структура("КодСтатусаПроверкиКМ, ПояснениеСтатусаПроверкиКМ");
		ЗаполнитьЗначенияСвойств(ТекущееИтоговоеПредставление, ИтоговыйЭлементКоллекции);
		
		НовоеИтоговоеПредставление = ПредставлениеИтоговогоРезультатаПроверкиГруппыКМ(ТекущееИтоговоеПредставление, ПредставлениеЭлемента);
		
		ЗаполнитьЗначенияСвойств(ИтоговыйЭлементКоллекции, НовоеИтоговоеПредставление);
		
	КонецЕсли;
	
КонецПроцедуры

// Расчитывает поля КодСтатусаПроверкиКМ и ПояснениеСтатусаПроверкиКМ по данным РезультатПроверкиКМ для отображения пользователю на форме.
//
// Параметры:
//  КлючГруппыНастроекКонтроляКМ - ключ подключенных настроек проверки КМ (см. ПодключитьМеханизмПроверкиКМ).
//  ЭлементКоллекции - элемент коллекции, содержащий РезультатПроверкиКМ
//                     (см. КонтрольКодовМаркировкиСредствамиАПИМДЛПКлиент.НачатьПроверкуКМ,
//                     КонтрольКодовМаркировкиСредствамиРВМДЛПКлиент.НачатьПроверкуКМ
//                     и КонтрольКодовМаркировкиСредствамиККТМДЛПКлиент.НачатьПроверкуКМ).
//
// Возвращаемое значение:
//  ФиксированнаяСтруктура содержащая КодСтатусаПроверкиКМ и ПояснениеСтатусаПроверкиКМ.
//
Функция ПредставлениеРезультатаПроверкиКМ(КлючГруппыНастроекКонтроляКМ, ЭлементКоллекции) Экспорт
	
	ГруппыНастроекКонтроляКМ = ГруппыНастроекКонтроляКМ();
	Если КлючГруппыНастроекКонтроляКМ = ГруппыНастроекКонтроляКМ.ПараметрыКонтроляСредствамиАПИМДЛП Тогда
		Возврат ПредставлениеРезультатаПроверкиКМСредствамиАПИМДЛП(ЭлементКоллекции.РезультатПроверкиКМ);
	ИначеЕсли КлючГруппыНастроекКонтроляКМ = ГруппыНастроекКонтроляКМ.ПараметрыКонтроляСредствамиРВ Тогда
		Возврат ПредставлениеРезультатаПроверкиКМСредствамиРВ(ЭлементКоллекции.РезультатПроверкиКМ);
	ИначеЕсли КлючГруппыНастроекКонтроляКМ = ГруппыНастроекКонтроляКМ.ПараметрыКонтроляСредствамиККТ Тогда
		Возврат ПредставлениеРезультатаПроверкиКМСредствамиККТ(ЭлементКоллекции.РезультатПроверкиКМ);
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

// Расчитывает итоговое значения полей КодСтатусаПроверкиКМ и ПояснениеСтатусаПроверкиКМ
// по значениям полей конкретного элемента, методом накопления результата.
// Используется, например, для расчета полей КодСтатусаПроверкиКМ и ПояснениеСтатусаПроверкиКМ для транспортной упаковки
// по данным проверки КМ потребительских упаковок.
//
// Параметры:
//  ТекущееИтоговоеПредставление - Структура, содержащая КодСтатусаПроверкиКМ и ПояснениеСтатусаПроверкиКМ конкретного элемента проверки КМ
//                                 (см. КонтрольКодовМаркировкиСредствамиАПИМДЛПКлиент.НачатьПроверкуКМ,
//                                 КонтрольКодовМаркировкиСредствамиРВМДЛПКлиент.НачатьПроверкуКМ
//                                 и КонтрольКодовМаркировкиСредствамиККТМДЛПКлиент.НачатьПроверкуКМ).
//  ПредставлениеРезультатаПроверкиКМ - Структура, содержащая итоговые значения полей КодСтатусаПроверкиКМ и ПояснениеСтатусаПроверкиКМ.
//
// Возвращаемое значение:
//  ФиксированнаяСтруктура содержащая КодСтатусаПроверкиКМ и ПояснениеСтатусаПроверкиКМ.
//
Функция ПредставлениеИтоговогоРезультатаПроверкиГруппыКМ(ТекущееИтоговоеПредставление, ПредставлениеРезультатаПроверкиКМ) Экспорт
	
	// Статус итоговой строки не меняем если статус подчиненной строки не менялся
	// или статус итоговой строки уже принял более критичное значение.
	
	Если ПредставлениеРезультатаПроверкиКМ.КодСтатусаПроверкиКМ = 0
	 Или ТекущееИтоговоеПредставление.КодСтатусаПроверкиКМ = 2
	 Или ПредставлениеРезультатаПроверкиКМ.КодСтатусаПроверкиКМ = 1 И ТекущееИтоговоеПредставление.КодСтатусаПроверкиКМ > 1 Тогда
		Возврат ТекущееИтоговоеПредставление;
	КонецЕсли;
	
	Пояснения = Новый Массив;
	Пояснения.Добавить("");
	Пояснения.Добавить(НСтр("ru = 'Вложенные КМ проверены, достоверны'"));
	Пояснения.Добавить(НСтр("ru = 'Вложенные КМ проверены, недостоверны'"));
	Пояснения.Добавить(НСтр("ru = 'Криптографическая проверка вложенных КМ не проводилась'"));
	
	НовоеИтоговоеПредставление = Новый Структура;
	НовоеИтоговоеПредставление.Вставить("КодСтатусаПроверкиКМ"      , ПредставлениеРезультатаПроверкиКМ.КодСтатусаПроверкиКМ);
	НовоеИтоговоеПредставление.Вставить("ПояснениеСтатусаПроверкиКМ", Пояснения[ПредставлениеРезультатаПроверкиКМ.КодСтатусаПроверкиКМ]);
	
	Возврат Новый ФиксированнаяСтруктура(НовоеИтоговоеПредставление);
	
КонецФункции

#Область ФормированиеПредставленийРезультатовПроверкиКМСредствамиАПИМДЛП

// Заполняет поля КодСтатусаПроверкиКМ и ПояснениеСтатусаПроверкиКМ элемента коллекции по данным РезультатПроверкиКМ средствами АПИ МДЛП.
//
// Параметры:
//  ЭлементКоллекции - элемент коллекции, содержащий РезультатПроверкиКМ, КодСтатусаПроверкиКМ и ПояснениеСтатусаПроверкиКМ
//                     (см. КонтрольКодовМаркировкиСредствамиАПИМДЛПКлиент.НачатьПроверкуКМ,
//                     КонтрольКодовМаркировкиСредствамиРВМДЛПКлиент.НачатьПроверкуКМ
//                     и КонтрольКодовМаркировкиСредствамиККТМДЛПКлиент.НачатьПроверкуКМ).
//
Процедура ЗаполнитьПредставлениеРезультатаПроверкиКМСредствамиАПИМДЛП(ЭлементКоллекции) Экспорт
	
	Представление = ПредставлениеРезультатаПроверкиКМСредствамиАПИМДЛП(ЭлементКоллекции.РезультатПроверкиКМ);
	Если ЗначениеЗаполнено(Представление) Тогда
		ЗаполнитьЗначенияСвойств(ЭлементКоллекции, Представление);
	КонецЕсли;
	
КонецПроцедуры

// Расчитывает и заполняет итоговое значения полей КодСтатусаПроверкиКМ и ПояснениеСтатусаПроверкиКМ
// по данным РезультатПроверкиКМ средствами АПИ МДЛП каждого передаваемого ЭлементКоллекции
// методом накопления результата.
// Используется, например, для расчета полей КодСтатусаПроверкиКМ и ПояснениеСтатусаПроверкиКМ для транспортной упаковки
// по данным проверки КМ потребительских упаковок.
//
// Параметры:
//  ИтоговыйЭлементКоллекции - элемент коллекции, куда помещается итоговые значения полей КодСтатусаПроверкиКМ и ПояснениеСтатусаПроверкиКМ.
//  ЭлементКоллекции - элемент коллекции, содержащий РезультатПроверкиКМ, КодСтатусаПроверкиКМ и ПояснениеСтатусаПроверкиКМ
//                     (см. КонтрольКодовМаркировкиСредствамиАПИМДЛПКлиент.НачатьПроверкуКМ,
//                     КонтрольКодовМаркировкиСредствамиРВМДЛПКлиент.НачатьПроверкуКМ
//                     и КонтрольКодовМаркировкиСредствамиККТМДЛПКлиент.НачатьПроверкуКМ).
//
Процедура ЗаполнитьПредставлениеИтоговогоРезультатаПроверкиГруппыКМСредствамиАПИМДЛП(ИтоговыйЭлементКоллекции, ЭлементКоллекции) Экспорт
	
	ПредставлениеЭлемента = ПредставлениеРезультатаПроверкиКМСредствамиАПИМДЛП(ЭлементКоллекции.РезультатПроверкиКМ);
	Если ЗначениеЗаполнено(ПредставлениеЭлемента) Тогда
		
		ТекущееИтоговоеПредставление = Новый Структура("КодСтатусаПроверкиКМ, ПояснениеСтатусаПроверкиКМ");
		ЗаполнитьЗначенияСвойств(ТекущееИтоговоеПредставление, ИтоговыйЭлементКоллекции);
		
		НовоеИтоговоеПредставление = ПредставлениеИтоговогоРезультатаПроверкиГруппыКМСредствамиАПИМДЛП(ТекущееИтоговоеПредставление, ПредставлениеЭлемента);
		
		ЗаполнитьЗначенияСвойств(ИтоговыйЭлементКоллекции, НовоеИтоговоеПредставление);
		
	КонецЕсли;
	
КонецПроцедуры

// Расчитывает поля КодСтатусаПроверкиКМ и ПояснениеСтатусаПроверкиКМ по данным РезультатПроверкиКМ средствами АПИ МДЛП для отображения пользователю на форме.
//
// Параметры:
//  РезультатПроверкиКМ - данные по которым будут расчитаны поля КодСтатусаПроверкиКМ и ПояснениеСтатусаПроверкиКМ
//                     (см. КонтрольКодовМаркировкиСредствамиАПИМДЛПКлиент.НачатьПроверкуКМ,
//                     КонтрольКодовМаркировкиСредствамиРВМДЛПКлиент.НачатьПроверкуКМ
//                     и КонтрольКодовМаркировкиСредствамиККТМДЛПКлиент.НачатьПроверкуКМ).
//
// Возвращаемое значение:
//  ФиксированнаяСтруктура содержащая КодСтатусаПроверкиКМ и ПояснениеСтатусаПроверкиКМ.
//
Функция ПредставлениеРезультатаПроверкиКМСредствамиАПИМДЛП(РезультатПроверкиКМ) Экспорт
	
	Если Не ЗначениеЗаполнено(РезультатПроверкиКМ) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	КонтрольВыполнен = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(РезультатПроверкиКМ, "КонтрольВыполнен", Ложь);
	Если КонтрольВыполнен <> Истина Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если РезультатПроверкиКМ.ЕстьОшибки Тогда
		КодСтатусаПроверкиКМ = 2;
	Иначе
		КодСтатусаПроверкиКМ = 1;
	КонецЕсли;
	
	ПредставлениеРезультата = Новый Структура;
	ПредставлениеРезультата.Вставить("КодСтатусаПроверкиКМ"      , КодСтатусаПроверкиКМ);
	ПредставлениеРезультата.Вставить("ПояснениеСтатусаПроверкиКМ", РезультатПроверкиКМ.ПредставлениеРезультата);
	
	Возврат Новый ФиксированнаяСтруктура(ПредставлениеРезультата);
	
КонецФункции

// Расчитывает итоговое значения полей КодСтатусаПроверкиКМ и ПояснениеСтатусаПроверкиКМ
// по значениям полей конкретного элемента, методом накопления результата.
// Используется, например, для расчета полей КодСтатусаПроверкиКМ и ПояснениеСтатусаПроверкиКМ для транспортной упаковки
// по данным проверки КМ потребительских упаковок.
//
// Параметры:
//  ТекущееИтоговоеПредставление - Структура, содержащая КодСтатусаПроверкиКМ и ПояснениеСтатусаПроверкиКМ конкретного элемента проверки КМ
//                                 (см. КонтрольКодовМаркировкиСредствамиАПИМДЛПКлиент.НачатьПроверкуКМ,
//                                 КонтрольКодовМаркировкиСредствамиРВМДЛПКлиент.НачатьПроверкуКМ
//                                 и КонтрольКодовМаркировкиСредствамиККТМДЛПКлиент.НачатьПроверкуКМ).
//  ПредставлениеРезультатаПроверкиКМ - Структура, содержащая итоговые значения полей КодСтатусаПроверкиКМ и ПояснениеСтатусаПроверкиКМ.
///
// Возвращаемое значение:
//  ФиксированнаяСтруктура содержащая КодСтатусаПроверкиКМ и ПояснениеСтатусаПроверкиКМ.
//
Функция ПредставлениеИтоговогоРезультатаПроверкиГруппыКМСредствамиАПИМДЛП(ТекущееИтоговоеПредставление, ПредставлениеРезультатаПроверкиКМ) Экспорт
	
	Возврат ПредставлениеИтоговогоРезультатаПроверкиГруппыКМ(ТекущееИтоговоеПредставление, ПредставлениеРезультатаПроверкиКМ);
	
КонецФункции

#КонецОбласти

#Область ФормированиеПредставленийРезультатовПроверкиКМСредствамиРВ

// Заполняет поля КодСтатусаПроверкиКМ и ПояснениеСтатусаПроверкиКМ элемента коллекции по данным РезультатПроверкиКМ средствами РВ.
//
// Параметры:
//  ЭлементКоллекции - элемент коллекции, содержащий РезультатПроверкиКМ, КодСтатусаПроверкиКМ и ПояснениеСтатусаПроверкиКМ
//                     (см. КонтрольКодовМаркировкиСредствамиРВМДЛПКлиент.НачатьПроверкуКМ и КонтрольКодовМаркировкиСредствамиККТМДЛПКлиент.НачатьПроверкуКМ).
//
Процедура ЗаполнитьПредставлениеРезультатаПроверкиКМСредствамиРВ(ЭлементКоллекции) Экспорт
	
	Представление = ПредставлениеРезультатаПроверкиКМСредствамиРВ(ЭлементКоллекции.РезультатПроверкиКМ);
	Если ЗначениеЗаполнено(Представление) Тогда
		ЗаполнитьЗначенияСвойств(ЭлементКоллекции, Представление);
	КонецЕсли;
	
КонецПроцедуры

// Расчитывает и заполняет итоговое значения полей КодСтатусаПроверкиКМ и ПояснениеСтатусаПроверкиКМ
// по данным РезультатПроверкиКМ средствами РВ каждого передаваемого ЭлементКоллекции
// методом накопления результата.
// Используется, например, для расчета полей КодСтатусаПроверкиКМ и ПояснениеСтатусаПроверкиКМ для транспортной упаковки
// по данным проверки КМ потребительских упаковок.
//
// Параметры:
//  ИтоговыйЭлементКоллекции - элемент коллекции, куда помещается итоговые значения полей КодСтатусаПроверкиКМ и ПояснениеСтатусаПроверкиКМ.
//  ЭлементКоллекции - элемент коллекции, содержащий РезультатПроверкиКМ, КодСтатусаПроверкиКМ и ПояснениеСтатусаПроверкиКМ
//                     (см. КонтрольКодовМаркировкиСредствамиРВМДЛПКлиент.НачатьПроверкуКМ и КонтрольКодовМаркировкиСредствамиККТМДЛПКлиент.НачатьПроверкуКМ).
//
Процедура ЗаполнитьПредставлениеИтоговогоРезультатаПроверкиГруппыКМСредствамиРВ(ИтоговыйЭлементКоллекции, ЭлементКоллекции) Экспорт
	
	ПредставлениеЭлемента = ПредставлениеРезультатаПроверкиКМСредствамиРВ(ЭлементКоллекции.РезультатПроверкиКМ);
	Если ЗначениеЗаполнено(ПредставлениеЭлемента) Тогда
		
		ТекущееИтоговоеПредставление = Новый Структура("КодСтатусаПроверкиКМ, ПояснениеСтатусаПроверкиКМ");
		ЗаполнитьЗначенияСвойств(ТекущееИтоговоеПредставление, ИтоговыйЭлементКоллекции);
		
		НовоеИтоговоеПредставление = ПредставлениеИтоговогоРезультатаПроверкиГруппыКМСредствамиРВ(ТекущееИтоговоеПредставление, ПредставлениеЭлемента);
		
		ЗаполнитьЗначенияСвойств(ИтоговыйЭлементКоллекции, НовоеИтоговоеПредставление);
		
	КонецЕсли;
	
КонецПроцедуры

// Расчитывает поля КодСтатусаПроверкиКМ и ПояснениеСтатусаПроверкиКМ по данным РезультатПроверкиКМ средствами РВ для отображения пользователю на форме.
//
// Параметры:
//  РезультатПроверкиКМ - данные по которым будут расчитаны поля КодСтатусаПроверкиКМ и ПояснениеСтатусаПроверкиКМ
//                     (см. КонтрольКодовМаркировкиСредствамиРВМДЛПКлиент.НачатьПроверкуКМ и КонтрольКодовМаркировкиСредствамиККТМДЛПКлиент.НачатьПроверкуКМ).
//
// Возвращаемое значение:
//  ФиксированнаяСтруктура содержащая КодСтатусаПроверкиКМ и ПояснениеСтатусаПроверкиКМ.
//
Функция ПредставлениеРезультатаПроверкиКМСредствамиРВ(РезультатПроверкиКМ) Экспорт
	
	Если Не ЗначениеЗаполнено(РезультатПроверкиКМ) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	КонтрольВыполнен = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(РезультатПроверкиКМ, "КонтрольВыполнен", Ложь);
	Если КонтрольВыполнен <> Истина Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если РезультатПроверкиКМ.ЕстьОшибки Тогда
		
		КодСтатусаПроверкиКМ = 2;
		
	Иначе
		
		КодСтатусаПроверкиКМ = 1;
		Если РезультатПроверкиКМ.ОнлайнПроверкаПроводилась Тогда
			Если ТранспортМДЛПРВКлиентСервер.КриптографическаяОнлайнПроверкаНеПроводилась(РезультатПроверкиКМ.КодРезультатаОнлайнПроверки) Тогда
				КодСтатусаПроверкиКМ = 3;
			КонецЕсли;
		Иначе
			Если ТранспортМДЛПРВКлиентСервер.ЛокальнаяПроверкаНеПроводилась(РезультатПроверкиКМ.КодРезультатаЛокальнойПроверки) Тогда
				КодСтатусаПроверкиКМ = 3;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	ПредставлениеРезультата = Новый Структура;
	ПредставлениеРезультата.Вставить("КодСтатусаПроверкиКМ"      , КодСтатусаПроверкиКМ);
	ПредставлениеРезультата.Вставить("ПояснениеСтатусаПроверкиКМ", РезультатПроверкиКМ.ПредставлениеРезультата);
	
	Возврат Новый ФиксированнаяСтруктура(ПредставлениеРезультата);
	
КонецФункции

// Расчитывает итоговое значения полей КодСтатусаПроверкиКМ и ПояснениеСтатусаПроверкиКМ
// по значениям полей конкретного элемента, методом накопления результата.
// Используется, например, для расчета полей КодСтатусаПроверкиКМ и ПояснениеСтатусаПроверкиКМ для транспортной упаковки
// по данным проверки КМ потребительских упаковок.
//
// Параметры:
//  ТекущееИтоговоеПредставление - Структура, содержащая КодСтатусаПроверкиКМ и ПояснениеСтатусаПроверкиКМ конкретного элемента проверки КМ
//                                 (см. КонтрольКодовМаркировкиСредствамиРВМДЛПКлиент.НачатьПроверкуКМ и КонтрольКодовМаркировкиСредствамиККТМДЛПКлиент.НачатьПроверкуКМ).
//  ПредставлениеРезультатаПроверкиКМ - Структура, содержащая итоговые значения полей КодСтатусаПроверкиКМ и ПояснениеСтатусаПроверкиКМ.
//
// Возвращаемое значение:
//  ФиксированнаяСтруктура содержащая КодСтатусаПроверкиКМ и ПояснениеСтатусаПроверкиКМ.
//
Функция ПредставлениеИтоговогоРезультатаПроверкиГруппыКМСредствамиРВ(ТекущееИтоговоеПредставление, ПредставлениеРезультатаПроверкиКМ) Экспорт
	
	Возврат ПредставлениеИтоговогоРезультатаПроверкиГруппыКМ(ТекущееИтоговоеПредставление, ПредставлениеРезультатаПроверкиКМ);
	
КонецФункции

#КонецОбласти

#Область ФормированиеПредставленийРезультатовПроверкиКМСредствамиККТ

// Заполняет поля КодСтатусаПроверкиКМ и ПояснениеСтатусаПроверкиКМ элемента коллекции по данным РезультатПроверкиКМ средствами ККТ.
//
// Параметры:
//  ЭлементКоллекции - элемент коллекции, содержащий РезультатПроверкиКМ, КодСтатусаПроверкиКМ и ПояснениеСтатусаПроверкиКМ
//                     (см. КонтрольКодовМаркировкиСредствамиРВМДЛПКлиент.НачатьПроверкуКМ и КонтрольКодовМаркировкиСредствамиККТМДЛПКлиент.НачатьПроверкуКМ).
//
Процедура ЗаполнитьПредставлениеРезультатаПроверкиКМСредствамиККТ(ЭлементКоллекции) Экспорт
	
	Представление = ПредставлениеРезультатаПроверкиКМСредствамиККТ(ЭлементКоллекции.РезультатПроверкиКМ);
	Если ЗначениеЗаполнено(Представление) Тогда
		ЗаполнитьЗначенияСвойств(ЭлементКоллекции, Представление);
	КонецЕсли;
	
КонецПроцедуры

// Расчитывает и заполняет итоговое значения полей КодСтатусаПроверкиКМ и ПояснениеСтатусаПроверкиКМ
// по данным РезультатПроверкиКМ средствами ККТ каждого передаваемого ЭлементКоллекции
// методом накопления результата.
// Используется, например, для расчета полей КодСтатусаПроверкиКМ и ПояснениеСтатусаПроверкиКМ для транспортной упаковки
// по данным проверки КМ потребительских упаковок.
//
// Параметры:
//  ИтоговыйЭлементКоллекции - элемент коллекции, куда помещается итоговые значения полей КодСтатусаПроверкиКМ и ПояснениеСтатусаПроверкиКМ.
//  ЭлементКоллекции - элемент коллекции, содержащий РезультатПроверкиКМ, КодСтатусаПроверкиКМ и ПояснениеСтатусаПроверкиКМ
//                     (см. КонтрольКодовМаркировкиСредствамиРВМДЛПКлиент.НачатьПроверкуКМ и КонтрольКодовМаркировкиСредствамиККТМДЛПКлиент.НачатьПроверкуКМ).
//
Процедура ЗаполнитьПредставлениеИтоговогоРезультатаПроверкиГруппыКМСредствамиККТ(ИтоговыйЭлементКоллекции, ЭлементКоллекции) Экспорт
	
	ПредставлениеЭлемента = ПредставлениеРезультатаПроверкиКМСредствамиККТ(ЭлементКоллекции.РезультатПроверкиКМ);
	Если ЗначениеЗаполнено(ПредставлениеЭлемента) Тогда
		
		ТекущееИтоговоеПредставление = Новый Структура("КодСтатусаПроверкиКМ, ПояснениеСтатусаПроверкиКМ");
		ЗаполнитьЗначенияСвойств(ТекущееИтоговоеПредставление, ИтоговыйЭлементКоллекции);
		
		НовоеИтоговоеПредставление = ПредставлениеИтоговогоРезультатаПроверкиГруппыКМСредствамиККТ(ТекущееИтоговоеПредставление, ПредставлениеЭлемента);
		
		ЗаполнитьЗначенияСвойств(ИтоговыйЭлементКоллекции, НовоеИтоговоеПредставление);
		
	КонецЕсли;
	
КонецПроцедуры

// Расчитывает поля КодСтатусаПроверкиКМ и ПояснениеСтатусаПроверкиКМ по данным РезультатПроверкиКМ средствами ККТ для отображения пользователю на форме.
//
// Параметры:
//  РезультатПроверкиКМ - данные по которым будут расчитаны поля КодСтатусаПроверкиКМ и ПояснениеСтатусаПроверкиКМ
//                     (см. КонтрольКодовМаркировкиСредствамиРВМДЛПКлиент.НачатьПроверкуКМ и КонтрольКодовМаркировкиСредствамиККТМДЛПКлиент.НачатьПроверкуКМ).
//
// Возвращаемое значение:
//  ФиксированнаяСтруктура содержащая КодСтатусаПроверкиКМ и ПояснениеСтатусаПроверкиКМ.
//
Функция ПредставлениеРезультатаПроверкиКМСредствамиККТ(РезультатПроверкиКМ) Экспорт
	
	Если Не ЗначениеЗаполнено(РезультатПроверкиКМ) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	КонтрольВыполнен = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(РезультатПроверкиКМ, "КонтрольВыполнен", Ложь);
	Если КонтрольВыполнен <> Истина Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если РезультатПроверкиКМ.ЕстьОшибки Тогда
		
		КодСтатусаПроверкиКМ = 2;
		
	Иначе
		
		Статус = СтатусыРезультатаПроверкиКМСредствамиККТПоКоду(РезультатПроверкиКМ.КодРезультатаПроверкиОИСМБинарный);
		ЗначенияСтатусов = ЗначенияСтатусовРезультатаПроверкиКМСредствамиККТ();
		
		Если Статус = ЗначенияСтатусов.ПроверенКорректный Тогда
			КодСтатусаПроверкиКМ = 1;
		Иначе
			КодСтатусаПроверкиКМ = 3;
		КонецЕсли;
		
	КонецЕсли;
	
	ПредставлениеРезультата = Новый Структура;
	ПредставлениеРезультата.Вставить("КодСтатусаПроверкиКМ"      , КодСтатусаПроверкиКМ);
	ПредставлениеРезультата.Вставить("ПояснениеСтатусаПроверкиКМ", РезультатПроверкиКМ.ПредставлениеРезультата);
	
	Возврат Новый ФиксированнаяСтруктура(ПредставлениеРезультата);
	
КонецФункции

// Расчитывает итоговое значения полей КодСтатусаПроверкиКМ и ПояснениеСтатусаПроверкиКМ
// по значениям полей конкретного элемента, методом накопления результата.
// Используется, например, для расчета полей КодСтатусаПроверкиКМ и ПояснениеСтатусаПроверкиКМ для транспортной упаковки
// по данным проверки КМ потребительских упаковок.
//
// Параметры:
//  ТекущееИтоговоеПредставление - Структура, содержащая КодСтатусаПроверкиКМ и ПояснениеСтатусаПроверкиКМ конкретного элемента проверки КМ
//                                 (см. КонтрольКодовМаркировкиСредствамиРВМДЛПКлиент.НачатьПроверкуКМ и КонтрольКодовМаркировкиСредствамиККТМДЛПКлиент.НачатьПроверкуКМ).
//  ПредставлениеРезультатаПроверкиКМ - Структура, содержащая итоговые значения полей КодСтатусаПроверкиКМ и ПояснениеСтатусаПроверкиКМ.
//
// Возвращаемое значение:
//  ФиксированнаяСтруктура содержащая КодСтатусаПроверкиКМ и ПояснениеСтатусаПроверкиКМ.
//
Функция ПредставлениеИтоговогоРезультатаПроверкиГруппыКМСредствамиККТ(ТекущееИтоговоеПредставление, ПредставлениеРезультатаПроверкиКМ) Экспорт
	
	Возврат ПредставлениеИтоговогоРезультатаПроверкиГруппыКМ(ТекущееИтоговоеПредставление, ПредставлениеРезультатаПроверкиКМ);
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область НастройкиКонтроляКМ

Функция НастройкиКонтроляКМ() Экспорт
	
	Возврат КонтрольКодовМаркировкиМДЛПВызовСервера.НастройкиКонтроляКМ();
	
КонецФункции

Функция ГруппыНастроекКонтроляКМ() Экспорт
	
	ГруппыНастроекКонтроляКМ = Новый Структура;
	ГруппыНастроекКонтроляКМ.Вставить("ПараметрыКонтроляСредствамиАПИМДЛП", "ПараметрыКонтроляСредствамиАПИМДЛП");
	ГруппыНастроекКонтроляКМ.Вставить("ПараметрыКонтроляСредствамиРВ"     , "ПараметрыКонтроляСредствамиРВ");
	ГруппыНастроекКонтроляКМ.Вставить("ПараметрыКонтроляСредствамиККТ"    , "ПараметрыКонтроляСредствамиККТ");
	
	Возврат ГруппыНастроекКонтроляКМ;
	
КонецФункции

#КонецОбласти

Функция МеханизмПроверкиКМПодключен(Форма) Экспорт
	
	Возврат ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "МеханизмПроверкиКМПодключен") И Форма.МеханизмПроверкиКМПодключен;
	
КонецФункции

Функция МеханизмПроверкиКМИспользуется(Форма) Экспорт
	
	Возврат ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "МеханизмПроверкиКМИспользуется") И Форма.МеханизмПроверкиКМИспользуется;
	
КонецФункции


Функция ЗначениеГруппыНастроекКонтроляКМ(НастройкиКонтроляКМ = Неопределено, КлючГруппыНастроекКонтроляКМ) Экспорт
	
	Если НастройкиКонтроляКМ = Неопределено Тогда
		НастройкиКонтроляКМ = НастройкиКонтроляКМ();
	КонецЕсли;
	
	ВозвращаемоеЗначение = НоваяГруппаНастроекКонтроляКМ(КлючГруппыНастроекКонтроляКМ);
	ТекущееЗначение      = НастройкиКонтроляКМ[КлючГруппыНастроекКонтроляКМ];
	
	Если ТекущееЗначение <> Неопределено Тогда
		ЗаполнитьЗначенияСвойств(ВозвращаемоеЗначение, ТекущееЗначение);
	КонецЕсли;
	
	НастройкиКонтроляКМ[КлючГруппыНастроекКонтроляКМ] = ВозвращаемоеЗначение;
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

Функция НоваяГруппаНастроекКонтроляКМ(КлючГруппыНастроекКонтроляКМ) Экспорт
	
	ВозвращаемоеЗначение = Новый Структура;
	ВозвращаемоеЗначение.Вставить("Включено"  ,   Ложь);
	ВозвращаемоеЗначение.Вставить("Исключения", Новый Соответствие());
	ВозвращаемоеЗначение.Вставить("Ключ"      , КлючГруппыНастроекКонтроляКМ);
	
	ПараметрыУдаленияРезультатовПроверки = Новый Структура;
	ПараметрыУдаленияРезультатовПроверки.Вставить("УдалятьСтарыеРезультатыПроверкиКМКонтрольНеВыполнен"                , Истина);
	ПараметрыУдаленияРезультатовПроверки.Вставить("КоличествоДнейХраненияСтарыхРезультатовПроверкиКМКонтрольНеВыполнен", 30);
	
	ВозвращаемоеЗначение.Вставить("ПараметрыУдаленияРезультатовПроверки", ПараметрыУдаленияРезультатовПроверки);
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции


Функция ПодключаемыеСвойстваФормыДляКонтроляКМ(КлючГруппыНастроекКонтроляКМ) Экспорт
	
	Свойства = Новый Структура;
	Свойства.Вставить("Реквизиты", Новый Структура);
	
	ИменаСвойствРеквизитов = "Имя, ОписаниеТипа, Заголовок";
	
	Свойства.Реквизиты.Вставить("МеханизмПроверкиКМПодключен", Новый Структура(ИменаСвойствРеквизитов,
		"МеханизмПроверкиКМПодключен",
		Новый ОписаниеТипов("Булево"),
		НСтр("ru = 'Механизм проверки КМ подключен'")));
	
	Свойства.Реквизиты.Вставить("МеханизмПроверкиКМИспользуется", Новый Структура(ИменаСвойствРеквизитов,
		"МеханизмПроверкиКМИспользуется",
		Новый ОписаниеТипов("Булево"),
		НСтр("ru = 'Механизм проверки КМ используется'")));
	
	Свойства.Реквизиты.Вставить("КлючГруппыНастроекКонтроляКМ", Новый Структура(ИменаСвойствРеквизитов,
		"КлючГруппыНастроекКонтроляКМ",
		Новый ОписаниеТипов("Строка"),
		НСтр("ru = 'Ключ группы настроек контроля КМ'")));
	
	Свойства.Реквизиты.Вставить("КонтрольВыполнятьВФормеВыборочногоКонтроляКМ", Новый Структура(ИменаСвойствРеквизитов,
		"КонтрольВыполнятьВФормеВыборочногоКонтроляКМ",
		Новый ОписаниеТипов("Булево"),
		НСтр("ru = 'Контроль выполняется в форме выборочного контроля КМ'")));
	
	ГруппыНастроекКонтроляКМ = ГруппыНастроекКонтроляКМ();
	Если КлючГруппыНастроекКонтроляКМ = ГруппыНастроекКонтроляКМ.ПараметрыКонтроляСредствамиАПИМДЛП Тогда
		
		Свойства.Реквизиты.Вставить("КешТранспорта", Новый Структура(ИменаСвойствРеквизитов,
			"КешТранспорта",
			Новый ОписаниеТипов(),
			НСтр("ru = 'Кэш транспорта'")));
		
	ИначеЕсли КлючГруппыНастроекКонтроляКМ = ГруппыНастроекКонтроляКМ.ПараметрыКонтроляСредствамиРВ Тогда
		
		Свойства.Реквизиты.Вставить("КешТранспортаРВ", Новый Структура(ИменаСвойствРеквизитов,
			"КешТранспортаРВ",
			Новый ОписаниеТипов(),
			НСтр("ru = 'Кэш транспорта РВ'")));
		
	ИначеЕсли КлючГруппыНастроекКонтроляКМ = ГруппыНастроекКонтроляКМ.ПараметрыКонтроляСредствамиККТ Тогда
		
		Свойства.Реквизиты.Вставить("КешККТФФД12МДЛП", Новый Структура(ИменаСвойствРеквизитов,
			"КешККТФФД12МДЛП",
			Новый ОписаниеТипов(),
			НСтр("ru = 'Кэш ККТ ФФД 1.2'")));
		
	КонецЕсли;
	
	Возврат Свойства;
	
КонецФункции


Функция СтатусыРезультатаПроверкиКМСредствамиККТПоКоду(БинарныйКод) Экспорт
	
	ЗначенияСтатусов = ЗначенияСтатусовРезультатаПроверкиКМСредствамиККТ();
	
	ВозвращаемоеЗначение = Новый Соответствие;
	ВозвращаемоеЗначение.Вставить("00000000", ЗначенияСтатусов.НеПроверен);
	ВозвращаемоеЗначение.Вставить("00000001", ЗначенияСтатусов.ПроверенНекорректный);
	ВозвращаемоеЗначение.Вставить("00000011", ЗначенияСтатусов.НеПроверен);
	ВозвращаемоеЗначение.Вставить("00010000", ЗначенияСтатусов.НеПроверен);
	ВозвращаемоеЗначение.Вставить("00010001", ЗначенияСтатусов.ПроверенНекорректный);
	ВозвращаемоеЗначение.Вставить("00010011", ЗначенияСтатусов.НеПроверен);
	ВозвращаемоеЗначение.Вставить("00000101", ЗначенияСтатусов.ПроверенНекорректный);
	ВозвращаемоеЗначение.Вставить("00000111", ЗначенияСтатусов.ПроверенНекорректный);
	ВозвращаемоеЗначение.Вставить("00001111", ЗначенияСтатусов.ПроверенКорректный);
	
	Возврат ВозвращаемоеЗначение[БинарныйКод];
	
КонецФункции

Функция ЗначенияСтатусовРезультатаПроверкиКМСредствамиККТ() Экспорт
	
	ВозвращаемоеЗначение = Новый Структура;
	ВозвращаемоеЗначение.Вставить("ПроверенКорректный"  , "ПроверенКорректный");
	ВозвращаемоеЗначение.Вставить("ПроверенНекорректный", "ПроверенНекорректный");
	ВозвращаемоеЗначение.Вставить("НеПроверен"          , "НеПроверен");
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

Функция ПредставленияРезультатаПроверкиКМСредствамиККТВЧеке() Экспорт
	
	ВозвращаемоеЗначение = Новый Структура;
	ВозвращаемоеЗначение.Вставить("Отсутствует", "[М] отсутствует");
	ВозвращаемоеЗначение.Вставить("МПлюс",       "[М+]");
	ВозвращаемоеЗначение.Вставить("ММинус",      "[М-]");
	ВозвращаемоеЗначение.Вставить("М",           "[М]");
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

#КонецОбласти
