////////////////////////////////////////////////////////////////////////////////
// Модуль содержит процедуры и функции для обработки действий пользователя
// в процессе работы с ценами.
//
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС
#Область ПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// Процедуры и функции работы с НДС
#Область ПроцедурыИФункцииРаботыСНДС

// Рассчитывает сумму НДС от суммы в зависимости от включения НДС в цену
//
// Параметры:
//  ЦенаВключаетНДС - Булево - Признак включения НДС в цену
//  ПроцентНДС      - Число - Ставка НДС числом
//  Сумма           - Число - Сумма, от которой необходимо рассчитать сумму НДС
//
Функция РассчитатьСуммуНДС(Сумма, ПроцентНДС, ЦенаВключаетНДС = Истина) Экспорт
	
	Если ЦенаВключаетНДС Тогда
		СуммаНДС = Сумма * ПроцентНДС / (ПроцентНДС + 1);
	Иначе
		СуммаНДС = Сумма * ПроцентНДС;
	КонецЕсли;
	
	Возврат СуммаНДС;
	
КонецФункции

// Возвращает числовое значение ставки НДС по значению перечисления
//
// Параметры:
//  СтавкаНДС - ПеречислениеСсылка.СтавкиНДС - значение перечисления СтавкиНДС
//
// Возвращаемое значение:
//  Число - Значение ставки НДС числом
//
Функция ПолучитьСтавкуНДСЧислом(Знач СтавкаНДС, НДСпоСтавкам4и2 = Ложь) Экспорт
	
	Если СтавкаНДС = ПредопределенноеЗначение("Перечисление.СтавкиНДС.НДС10")
	 Или СтавкаНДС = ПредопределенноеЗначение("Перечисление.СтавкиНДС.НДС10_110") Тогда
		
		Возврат ?(НДСпоСтавкам4и2, 0.02, 0.1);
		
	ИначеЕсли СтавкаНДС = ПредопределенноеЗначение("Перечисление.СтавкиНДС.НДС18")
	 Или СтавкаНДС = ПредопределенноеЗначение("Перечисление.СтавкиНДС.НДС18_118") Тогда
		
		Возврат ?(НДСпоСтавкам4и2, 0.04, 0.18);
		
	ИначеЕсли СтавкаНДС = ПредопределенноеЗначение("Перечисление.СтавкиНДС.НДС20")
	 Или СтавкаНДС = ПредопределенноеЗначение("Перечисление.СтавкиНДС.НДС20_120") Тогда
		
		Возврат 0.2;
		
	Иначе
		
		Возврат 0;
		
	КонецЕсли;
	
КонецФункции

Процедура ПолучитьСтавкуНДСЧисломВЗапросе(ТекстЗапроса, ИмяТаблицы = "Товары", ИмяПараметраЗамены = "&СтавкаНДСЧислом") Экспорт
	
	ТекстПолученияСтавкиНДСЧислом = "
	|	ВЫБОР
	|		КОГДА Товары.СтавкаНДС В (ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10), ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10_110))
	|			ТОГДА 0.1
	|		КОГДА Товары.СтавкаНДС В (ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18), ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118))
	|			ТОГДА 0.18
	|		КОГДА Товары.СтавкаНДС В (ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20), ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20_120))
	|			ТОГДА 0.2
	|		ИНАЧЕ 0
	|	КОНЕЦ
	|";
	
	ТекстПолученияСтавкиНДСЧислом = СтрЗаменить(ТекстПолученияСтавкиНДСЧислом, "Товары", ИмяТаблицы);
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ИмяПараметраЗамены, ТекстПолученияСтавкиНДСЧислом);
	
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// Процедуры и функции работы с итогами документов
#Область ПроцедурыИФункцииРаботыСИтогамиДокументов

// Возвращает сумму документа с учетом НДС
//
// Параметры:
//  Товары          - тч документа для подсчета суммы документа
//  ЦенаВключаетНДС - Признак включения НДС в цену документа
//
// Возвращаемое значение:
//  Число - сумма документа с учетом НДС
//
Функция ПолучитьСуммуДокумента(Товары, Знач ЦенаВключаетНДС = Истина) Экспорт
	
	СуммаДокумента = Товары.Итог("Сумма");
	
	Если Не ЦенаВключаетНДС Тогда
		СуммаДокумента = СуммаДокумента + Товары.Итог("СуммаНДС");
	КонецЕсли;
	
	Возврат СуммаДокумента;
	
КонецФункции

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// Процедуры и функции для выполнения округления
#Область ПроцедурыИФункцииДляВыполненияОкругления

// Округляет число по заданному порядку 
//
// Параметры:
//  Число              - исходное число
//  ТочностьОкругления - Число, определяет точность округления
//  ВариантОкругления  - Перечисление.ВариантыОкругления, определяет способ округления
//
// Возвращаемое значение:
//  Число
//  Исходное число, округленное с заданной точностью
//
Функция ОкруглитьЦену(Число, ТочностьОкругления, ВариантОкругления) Экспорт
	Перем Результат;
	
	// вычислим количество интервалов, входящих в число
	Если ТочностьОкругления <> 0 Тогда
		КоличествоИнтервалов = Число / ТочностьОкругления;
	Иначе
		КоличествоИнтервалов = 0;
	КонецЕсли;
	
	// вычислим целое количество интервалов.
	КоличествоЦелыхИнтервалов = Цел(КоличествоИнтервалов);
		
	Если КоличествоИнтервалов = КоличествоЦелыхИнтервалов Тогда
		// Числа поделились нацело. Округлять не нужно.
		Результат = Число;
	Иначе
		Если ВариантОкругления = ПредопределенноеЗначение("Перечисление.ВариантыОкругления.ВсегдаВБольшуюСторону") Тогда
			// При порядке округления "0.05" 0.371 должно округлится до 0.4
			Результат = ТочностьОкругления * (КоличествоЦелыхИнтервалов + 1);
		ИначеЕсли ВариантОкругления = ПредопределенноеЗначение("Перечисление.ВариантыОкругления.ВсегдаВМеньшуюСторону") Тогда
			// При порядке округления "0.05" 0.371 должно округлится до 0.35
			Результат = ТочностьОкругления * (КоличествоЦелыхИнтервалов);
		Иначе
			// При порядке округления "0.05" 0.371 должно округлится до 0.35,
			// а 0.376 до 0.4
			Результат = ТочностьОкругления * Окр(КоличествоИнтервалов, 0, РежимОкругления.Окр15как20);
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Применяет "психологическое округление" к числу
//
// Параметры:
//  Число                     - Число, к которому применяется округление
//  ПсихологическоеОкругление - Число, значение "психологического округления"
//
// Возвращаемое значение:
//  Число - результат применения "психологического округления" к числу
//
Функция ПрименитьПсихологическоеОкругление(Число, ПсихологическоеОкругление) Экспорт
	
	Если Число = 0 ИЛИ ПсихологическоеОкругление = 0 Тогда
		Возврат Число;
	Иначе
		РезультатОкругления = Число - ПсихологическоеОкругление;
		Возврат ?(РезультатОкругления < Число, РезультатОкругления, Число);
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#КонецОбласти
