
////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС
#Область ПрограммныйИнтерфейс

// Функция определяет аналитику для подстановки в документ по статье.
//
// Параметры:
//  СтатьяДоходов - ПланВидовХарактеристикСсылка.СтатьиДоходов, ПланВидовХарактеристикСсылка.СтатьиРасходов - Ссылка на статью
//  Объект - ДанныеФормыСтруктура - Текущий объект
//
// Возвращаемое значение:
//  СправочникСсылка, ДокументСсылка - значение аналитики
//
Функция ПолучитьАналитикуПоУмолчанию(Статья, Объект) Экспорт
	
	ОписаниеТипов = Новый ОписаниеТипов(Статья.ТипЗначения);
	Аналитика = ОписаниеТипов.ПривестиЗначение();
	Если ОписаниеТипов.СодержитТип(Тип("СправочникСсылка.Склады"))
			И (Объект.Свойство("Склад") Или Объект.Свойство("СкладОтправитель")) Тогда
		
		Аналитика = ?(Объект.Свойство("Склад"), Объект.Склад, Объект.СкладОтправитель);
		
	ИначеЕсли ОписаниеТипов.СодержитТип(Тип("ДокументСсылка.ЗаказПоставщику"))
			И Объект.Свойство("ЗаказПоставщику") Тогда
		
		Аналитика = Объект.ЗаказПоставщику;
		
	ИначеЕсли ОписаниеТипов.СодержитТип(Тип("ДокументСсылка.ПоступлениеТоваров"))
			И ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.ПоступлениеТоваров") Тогда
		
		Аналитика = Объект.Ссылка;
		
	ИначеЕсли ОписаниеТипов.СодержитТип(Тип("СправочникСсылка.Контрагенты"))
			И Объект.Свойство("Контрагент") Тогда
		
		Аналитика = Объект.Контрагент;
		
	ИначеЕсли ОписаниеТипов.СодержитТип(Тип("СправочникСсылка.Организации"))
			И Объект.Свойство("Организация") Тогда
		
		Аналитика = Объект.Организация;
		
	ИначеЕсли ОписаниеТипов.СодержитТип(Тип("СправочникСсылка.ОтделенияОрганизаций"))
			И Объект.Свойство("Отделение") Тогда
		
		Аналитика = Объект.Отделение;
		
	ИначеЕсли ОписаниеТипов.СодержитТип(Тип("СправочникСсылка.ПодразделенияОрганизаций"))
			И Объект.Свойство("ПодразделениеОрганизации") Тогда
		
		Аналитика = Объект.ПодразделениеОрганизации;
		
	ИначеЕсли ОписаниеТипов.СодержитТип(Тип("СправочникСсылка.ФизическиеЛица"))
		И Объект.Свойство("ПодотчетноеЛицо") Тогда
		
		Аналитика = Объект.ПодотчетноеЛицо;
		
	ИначеЕсли ОписаниеТипов.СодержитТип(Тип("ДокументСсылка.ПеремещениеТоваров")) Тогда
		
		Аналитика = Документы.ПеремещениеТоваров.ПустаяСсылка();
		
	КонецЕсли;
	
	Возврат Аналитика;
	
КонецФункции

#КонецОбласти // ПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЙ ПРОГРАММНЫЙ ИНТЕРФЕЙС
#Область СлужебныйПрограммныйИнтерфейс

// Заполняет служебные реквизиты статьи в табличной части
//
// Параметры:
//  ТабличнаяЧасть - табличная часть в которой нужно заполнить служебные реквизиты статей
//
Процедура ЗаполнитьСлужебныеРеквизитыСтатей(МетаданныеСтатей, ТабличнаяЧасть, Реквизиты, РеквизитыПоУмолчанию, ЗначенияПоУмолчанию) Экспорт
	
	Если ТабличнаяЧасть.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(Таблица.НомерСтроки КАК ЧИСЛО) КАК НомерСтроки%ПоляСтатьи%
	|ПОМЕСТИТЬ Таблица
	|ИЗ
	|	&Таблица КАК Таблица
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таблица.НомерСтроки КАК НомерСтроки%ПоляФлаги%
	|ИЗ
	|	Таблица КАК Таблица%Соединения%
	|";
	
	ШаблонСтатья = ",
	|	Таблица.%1 КАК %1";
	ШаблонФлага = ",
	|	ПВХ%2.%1 КАК %3%1";
	ШаблонСоединения = "
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			" + МетаданныеСтатей.ПолноеИмя() + " КАК ПВХ%1
	|		ПО
	|			Таблица.%1 = ПВХ%1.Ссылка";
	
	ПоляСтатьи = "";
	ПоляФлаги = "";
	Соединения = "";
	
	СтруктураРеквизитов = ДоходыРасходыКлиентСервер.СвязатьСтатьюИАналитику(Реквизиты, РеквизитыПоУмолчанию);
	Для Каждого КлючИЗначение Из СтруктураРеквизитов Цикл
		ПоляСтатьи = ПоляСтатьи + СтрШаблон(ШаблонСтатья, КлючИЗначение.Ключ);
		Для Каждого Значение Из ЗначенияПоУмолчанию Цикл
			ПоляФлаги = ПоляФлаги
				+ СтрШаблон(ШаблонФлага, Значение.Ключ, КлючИЗначение.Ключ, КлючИЗначение.Значение);
		КонецЦикла;
		Соединения = Соединения + СтрШаблон(ШаблонСоединения, КлючИЗначение.Ключ);
	КонецЦикла;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ПоляСтатьи%", ПоляСтатьи);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ПоляФлаги%", ПоляФлаги);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%Соединения%", Соединения);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Таблица", ТабличнаяЧасть.Выгрузить(,"НомерСтроки, " + ?(ПустаяСтрока(Реквизиты), РеквизитыПоУмолчанию, Реквизиты)));
	
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	УстановитьПривилегированныйРежим(Ложь);
	
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ТабличнаяЧасть[Выборка.НомерСтроки-1], Выборка,, "НомерСтроки");
	КонецЦикла;
	
КонецПроцедуры

// Заполняет служебные реквизиты статьи в строке табличной части
//
// Параметры:
//  ТекущаяСтрока - 
//
Процедура ЗаполнитьСлужебныеРеквизитыВСтроке(ТекущаяСтрока, КэшированныеЗначения, Реквизиты, РеквизитыПоУмолчанию, ЗначенияПоУмолчанию) Экспорт
	
	ЗапрашиваемыеРеквизиты = ОбщегоНазначенияКлиентСервер.КлючиСтруктурыВСтроку(ЗначенияПоУмолчанию);
	
	СтруктураРеквизитов = ДоходыРасходыКлиентСервер.СвязатьСтатьюИАналитику(Реквизиты, РеквизитыПоУмолчанию);
	Для Каждого КлючИЗначение Из СтруктураРеквизитов Цикл
		
		Статья = ТекущаяСтрока[КлючИЗначение.Ключ];
		Если ЗначениеЗаполнено(Статья) Тогда
			СлужебныеРеквизитыСтроки = КэшированныеЗначения.Получить(Статья);
			Если СлужебныеРеквизитыСтроки = Неопределено Тогда
				СлужебныеРеквизитыСтроки = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Статья, ЗапрашиваемыеРеквизиты);
				КэшированныеЗначения.Вставить(Статья, СлужебныеРеквизитыСтроки);
			КонецЕсли;
		Иначе
			СлужебныеРеквизитыСтроки = ЗначенияПоУмолчанию;
		КонецЕсли;
		
		Для Каждого Данные Из СлужебныеРеквизитыСтроки Цикл
			ТекущаяСтрока[КлючИЗначение.Значение + Данные.Ключ] = Данные.Значение;
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

// Производит заполнение условного оформления формы
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - формы объекта
//  Реквизиты - Строка, Структура, Массив - Реквизиты статей и их аналитик для оформления
//              <Строка> Перечисление пар реквизитов в формате "Статья1, Аналитика1, Статья2, Аналитика2, ..."
//                       Пустая строка трактуется как "Статья, Аналитика"
//              <Структура> Ключ: Строка с именем табличной части; Значение - Строка в нотации как у параметра типа <Строка>
//              <Массив> Массив, элементы которого либо структуры в нотации как у параметра с типа <Структура>, либо строки в нотации <Строка>
//
Процедура УстановитьУсловноеОформлениеАналитик(Форма, Реквизиты, РеквизитыПоУмолчанию, ТекстСтатьяНеЗаполнена) Экспорт
	
	МассивОбработки = Новый Массив;
	Если ТипЗнч(Реквизиты) = Тип("Массив") Тогда
		МассивОбработки = Реквизиты;
	Иначе
		МассивОбработки.Добавить(Реквизиты);
	КонецЕсли;
	
	УсловноеОформление = Форма.УсловноеОформление;
	ПоляФормы = Новый Структура("Объект");
	ЗаполнитьЗначенияСвойств(ПоляФормы, Форма);
	ЭтоФормаОбъекта = ПоляФормы.Объект <> Неопределено;
	
	Для Каждого ЭлементМассива Из МассивОбработки Цикл
		
		Если ТипЗнч(ЭлементМассива) = Тип("Структура") Тогда
			
			Для Каждого КлючИЗначение Из ЭлементМассива Цикл
				
				СтруктураРеквизитов = ДоходыРасходыКлиентСервер.СвязатьСтатьюИАналитику(КлючИЗначение.Значение, РеквизитыПоУмолчанию);
				УстановитьУсловноеОформление(УсловноеОформление, СтруктураРеквизитов, ЭтоФормаОбъекта, ТекстСтатьяНеЗаполнена, КлючИЗначение.Ключ)
				
			КонецЦикла;
			
		Иначе
			
			СтруктураРеквизитов = ДоходыРасходыКлиентСервер.СвязатьСтатьюИАналитику(ЭлементМассива, РеквизитыПоУмолчанию);
			УстановитьУсловноеОформление(УсловноеОформление, СтруктураРеквизитов, ЭтоФормаОбъекта, ТекстСтатьяНеЗаполнена)
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Производит проверку заполнения реквизитов аналитик статей в переданном объекте
//
// Параметры:
//  Объект - СправочникОбъект, ДокументОбъект, ДанныеФормыСтруктура - Объект ИБ предназначенный для проверки
//  Реквизиты - Строка, Структура, Массив - Реквизиты статей доходов для проверки
//      <Строка> Перечисление пар реквизитов для проверки в формате "Статья1, Аналитика1, Статья2, Аналитика2, ..."
//               Пустая строка трактуется как "Статья, Аналитика"
//      <Структура> Ключ: Строка с именем табличной части; Значение - Строка в нотации как у параметра типа <Строка>
//      <Массив> Массив, элементы которого либо структуры в нотации как у параметра с типа <Структура>, либо строки в нотации <Строка>
//  НепроверяемыеРеквизиты - Массив - Массив для накопления не проверяемых реквизитов переданного объекта
//  Отказ - Булево - Признак наличия ошибок заполнения аналитик доходов переданного объекта
//  ДополнительныеПараметры - Структура - При наличии свойства "ПрограммнаяПроверка", ошибки записываются в эту структуру, пользователю не выводятся
//
Процедура ПроверитьЗаполнениеАналитик(Объект, РеквизитыПоУмолчанию, ТекстАналитикаНеЗаполнена, Реквизиты = "", НепроверяемыеРеквизиты = Неопределено, Отказ = Ложь, ДополнительныеПараметры = Неопределено) Экспорт
	
	Ошибки = Новый Структура;
	Ошибки.Вставить("СписокОшибок", Новый Массив);
	Ошибки.Вставить("ГруппыОшибок", Новый Соответствие);
	Ошибки.Вставить("ПрефиксОбъекта", ?(ТипЗнч(Объект)=Тип("ФормаКлиентскогоПриложения"), "", "Объект."));
	
	МассивОбработки = Новый Массив;
	Если ТипЗнч(Реквизиты) = Тип("Массив") Тогда
		МассивОбработки = Реквизиты;
	Иначе
		МассивОбработки.Добавить(Реквизиты);
	КонецЕсли;
	
	Для Каждого ЭлементМассива Из МассивОбработки Цикл
		
		Если ТипЗнч(ЭлементМассива) = Тип("Структура") Тогда
			ПроверкаЗаполненияАналитикТабличнойЧастиОбъекта(Объект, ЭлементМассива, НепроверяемыеРеквизиты, Ошибки, ТекстАналитикаНеЗаполнена, РеквизитыПоУмолчанию);
		Иначе
			ПроверкаЗаполненияАналитикОбъекта(Объект, ЭлементМассива, НепроверяемыеРеквизиты, Ошибки, ТекстАналитикаНеЗаполнена, РеквизитыПоУмолчанию);
		КонецЕсли;
		
	КонецЦикла;
	
	Если ТипЗнч(ДополнительныеПараметры) = Тип("Структура")
		И ДополнительныеПараметры.Свойство("ПрограммнаяПроверка") Тогда
		ДополнительныеПараметры.Вставить("Ошибки", Ошибки);
	Иначе
		Если Ошибки.СписокОшибок.Количество() <> 0 Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки, Отказ);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Обрабатывает изменение статьи
//
// Параметры:
//  Объект - 
//  ТекущаяСтрока - 
//
Процедура ОбработатьИзменениеСтатьи(Объект, ТекущаяСтрока, Реквизиты, РеквизитыПоУмолчанию) Экспорт
	
	СтруктураРеквизитов = ДоходыРасходыКлиентСервер.СвязатьСтатьюИАналитику(Реквизиты, РеквизитыПоУмолчанию);
	
	Для Каждого КлючИЗначение Из СтруктураРеквизитов Цикл
		Статья = ТекущаяСтрока[КлючИЗначение.Ключ];
		Если ЗначениеЗаполнено(Статья) Тогда
			Аналитика = ТекущаяСтрока[КлючИЗначение.Значение];
			Если ЗначениеЗаполнено(Аналитика) Тогда
				ОписаниеТипов = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Статья, "ТипЗначения");
				Если Не ОписаниеТипов.СодержитТип(ТипЗнч(Аналитика)) Тогда
					Аналитика = Неопределено;
				КонецЕсли;
			КонецЕсли;
			Если Не ЗначениеЗаполнено(Аналитика) Тогда
				Аналитика = ПолучитьАналитикуПоУмолчанию(Статья, Объект);
			ИначеЕсли ТипЗнч(Аналитика) = Тип("СправочникСсылка.ПрочиеРасходы") Тогда
				Запрос = Новый Запрос("
				|ВЫБРАТЬ
				|	ИСТИНА КАК ОчиститьАналитику
				|ИЗ
				|	Справочник.ПрочиеРасходы КАК ДанныеСправочника
				|ГДЕ
				|	ДанныеСправочника.Ссылка = &АналитикаРасходов
				|	И ДанныеСправочника.Владелец <> &СтатьяРасходов
				|");
				Запрос.УстановитьПараметр("СтатьяРасходов", Статья);
				Запрос.УстановитьПараметр("АналитикаРасходов", Аналитика);
				
				Выборка = Запрос.Выполнить().Выбрать();
				Если Выборка.Следующий() Тогда
					Если Выборка.ОчиститьАналитику Тогда
						Аналитика = Справочники.ПрочиеРасходы.ПустаяСсылка();
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			ТекущаяСтрока[КлючИЗначение.Значение] = Аналитика;
		Иначе
			ТекущаяСтрока[КлючИЗначение.Значение] = Неопределено;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти // СлужебныйПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

Процедура УстановитьУсловноеОформление(УсловноеОформление, СтруктураРеквизитов, ФормаОбъекта, ТекстСтатьяНеЗаполнена, ИмяТабличнойЧасти = "")
	
	ПрефиксТЧ = ?(ПустаяСтрока(ИмяТабличнойЧасти), "", ИмяТабличнойЧасти + ".");
	ПрефиксАналитики = ?(ФормаОбъекта, "Объект.", "") + ПрефиксТЧ;
	ПрефиксКонтроля  = ?(ФормаОбъекта И Не ПустаяСтрока(ПрефиксТЧ), "Объект.", "") + ПрефиксТЧ;
	
	Для Каждого КлючИЗначение Из СтруктураРеквизитов Цикл
		
		ИмяАналитики = КлючИЗначение.Значение;
		ИмяСтатьи = КлючИЗначение.Ключ;
		ИмяКонтроля = ИмяАналитики + "КонтролироватьЗаполнениеАналитики";
		
		Элемент = УсловноеОформление.Элементы.Добавить();
		Элемент.Поля.Элементы.Добавить().Поле = Новый ПолеКомпоновкиДанных(ИмяТабличнойЧасти + ИмяАналитики);
		
		ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ПрефиксКонтроля + ИмяКонтроля);
		ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно;
		ОтборЭлемента.ПравоеЗначение = Истина;
		
		Элемент.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);
		
		Если ПустаяСтрока(ИмяТабличнойЧасти) Тогда
			
			Элемент = УсловноеОформление.Элементы.Добавить();
			Элемент.Поля.Элементы.Добавить().Поле = Новый ПолеКомпоновкиДанных(ИмяАналитики);
			
			ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ПрефиксКонтроля + ИмяКонтроля);
			ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
			ОтборЭлемента.ПравоеЗначение = Истина;
			
			ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ПрефиксАналитики + ИмяАналитики);
			ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
			
			Элемент.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Истина);
			
		КонецЕсли;
		
		Элемент = УсловноеОформление.Элементы.Добавить();
		Элемент.Поля.Элементы.Добавить().Поле = Новый ПолеКомпоновкиДанных(ИмяТабличнойЧасти + ИмяАналитики);
		
		ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ПрефиксАналитики + ИмяСтатьи);
		ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
		
		Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
		Если Не ПустаяСтрока(ИмяТабличнойЧасти) Тогда
			Элемент.Оформление.УстановитьЗначениеПараметра("Текст", ТекстСтатьяНеЗаполнена);
			Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаЗаполненияАналитикОбъекта(Объект, Реквизиты, НепроверяемыеРеквизиты, Ошибки, ТекстАналитикаНеЗаполнена, РеквизитыПоУмолчанию)
	
	СтруктураРеквизитов = ДоходыРасходыКлиентСервер.СвязатьСтатьюИАналитику(Реквизиты, РеквизитыПоУмолчанию);
	МассивСтатей = Новый Массив;
	
	// Определим список статей для контроля
	Для Каждого КлючИЗначение Из СтруктураРеквизитов Цикл
		
		НепроверяемыеРеквизиты.Добавить(КлючИЗначение.Значение);
		
		Статья = Объект[КлючИЗначение.Ключ];
		Если ЗначениеЗаполнено(Статья) Тогда
			МассивСтатей.Добавить(Статья);
		КонецЕсли;
		
	КонецЦикла;
	
	// Проверим заполнение аналитики
	ОбязательныеСтатьи = ОбязательныеСтатьи(МассивСтатей);
	Для Каждого КлючИЗначение Из СтруктураРеквизитов Цикл
		
		Статья = Объект[КлючИЗначение.Ключ];
		Аналитика = Объект[КлючИЗначение.Значение];
		
		Если ОбязательныеСтатьи.Найти(Статья) <> Неопределено И Не ЗначениеЗаполнено(Аналитика) Тогда
			
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(
				Ошибки,
				Ошибки.ПрефиксОбъекта + КлючИЗначение.Значение,
				ТекстАналитикаНеЗаполнена, "");
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаЗаполненияАналитикТабличнойЧастиОбъекта(Объект, Реквизиты, НепроверяемыеРеквизиты, Ошибки, ТекстАналитикаНеЗаполнена, РеквизитыПоУмолчанию)
	
	// Определим список статей для контроля
	ОбщийМассивСтатей = Новый Массив;
	Для Каждого ОписаниеТабличнойЧасти Из Реквизиты Цикл
		
		ИмяТабличнойЧасти = ОписаниеТабличнойЧасти.Ключ;
		ТабличнаяЧасть = Объект[ИмяТабличнойЧасти];
		
		СтруктураРеквизитов = ДоходыРасходыКлиентСервер.СвязатьСтатьюИАналитику(ОписаниеТабличнойЧасти.Значение, РеквизитыПоУмолчанию);
		Для Каждого КлючИЗначение Из СтруктураРеквизитов Цикл
			
			НепроверяемыеРеквизиты.Добавить(ИмяТабличнойЧасти + "." + КлючИЗначение.Значение);
			
			МассивСтатей = ТабличнаяЧасть.ВыгрузитьКолонку(КлючИЗначение.Ключ);
			Для Каждого Статья Из МассивСтатей Цикл
				ОбщийМассивСтатей.Добавить(Статья);
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;
	
	// Проверим заполнение аналитики
	ОбязательныеСтатьи = ОбязательныеСтатьи(ОбщийМассивСтатей);
	Для Каждого ОписаниеТабличнойЧасти Из Реквизиты Цикл // Табличные части
		
		ИмяТабличнойЧасти = ОписаниеТабличнойЧасти.Ключ;
		ТабличнаяЧасть = Объект[ИмяТабличнойЧасти];
		
		СтруктураРеквизитов = ДоходыРасходыКлиентСервер.СвязатьСтатьюИАналитику(ОписаниеТабличнойЧасти.Значение, РеквизитыПоУмолчанию);
		
		Для Индекс = 0 По ТабличнаяЧасть.Количество() - 1 Цикл
			
			ТекущаяСтрока = ТабличнаяЧасть[Индекс];
			
			Для Каждого КлючИЗначение Из СтруктураРеквизитов Цикл
				
				Статья = ТекущаяСтрока[КлючИЗначение.Ключ];
				Аналитика = ТекущаяСтрока[КлючИЗначение.Значение];
				
				Если ОбязательныеСтатьи.Найти(Статья) <> Неопределено И Не ЗначениеЗаполнено(Аналитика) Тогда
					
					ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(
						Ошибки,
						Ошибки.ПрефиксОбъекта + ИмяТабличнойЧасти + "[%1]." + КлючИЗначение.Значение,
						ТекстАналитикаНеЗаполнена,
						ИмяТабличнойЧасти,
						Индекс,
						ТекстАналитикаНеЗаполнена + " " + НСтр("ru='в строке %1'"));
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ОбязательныеСтатьи(МассивСтатей)
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	Статьи.Ссылка КАК Ссылка
	|ИЗ
	|	ПланВидовХарактеристик.СтатьиДоходов КАК Статьи
	|ГДЕ
	|	Статьи.Ссылка В (&МассивСтатей)
	|	И Статьи.КонтролироватьЗаполнениеАналитики
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Статьи.Ссылка КАК Ссылка
	|ИЗ
	|	ПланВидовХарактеристик.СтатьиРасходов КАК Статьи
	|ГДЕ
	|	Статьи.Ссылка В (&МассивСтатей)
	|	И Статьи.КонтролироватьЗаполнениеАналитики
	|");
	
	Запрос.УстановитьПараметр("МассивСтатей", МассивСтатей);
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции
