
// Профрешение 29.12.2023 {
Процедура had_ЗапретРедактированияПередЗаписью(Источник, Отказ) Экспорт
	Если Не Источник.ОбменДанными.Загрузка Тогда 	
		ОбщегоНазначения.СообщитьПользователю("Элементы справочника корректируются, создаются в базе 1С:Бухгалтерия предприятия.", , , , Отказ);	
	КонецЕсли;
КонецПроцедуры
// } Профрешение  

// Профрешение Сурина 15.01.24 {
Процедура had_ДоступКГруппеНоменклатурыПередЗаписью(Источник, Отказ) Экспорт
	
	Если Источник.ОбменДанными.Загрузка Тогда
		Возврат;	
	КонецЕсли;                               
	
	Если Не Источник.ЭтоГруппа Тогда
		
		Если Не ЗначениеЗаполнено(Источник.Родитель) Тогда
			
			ОбщегоНазначения.СообщитьПользователю("Необходимо указать группу списка номенклатуры.", , , , Отказ);  
			
		Иначе  
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	Номенклатура.Ссылка КАК Ссылка
			|ИЗ
			|	Справочник.Номенклатура КАК Номенклатура
			|ГДЕ
			|	Номенклатура.Ссылка В ИЕРАРХИИ(&Ссылка)
			|	И Номенклатура.Ссылка <> &Ссылка
			|	И Номенклатура.ЭтоГруппа";
			Запрос.УстановитьПараметр("Ссылка", Источник.Родитель);
			Результат = Запрос.Выполнить();  
			
			Если Не Результат.Пустой() Тогда       
		//		ОбщегоНазначения.СообщитьПользователю("Необходимо указать группу списка номенклатуры самого нижнего уровня.", , , , Отказ); 
			КонецЕсли;
			
		КонецЕсли; 
		
	КонецЕсли;
	
	Возврат;
	
	Если Не Пользователи.РолиДоступны("had_ДобавлениеИзменениеНоменклатурыБезОграниченияДоступа") Тогда
		
		Пользователь = Пользователи.ТекущийПользователь(); 
		Запрос = Новый Запрос;
		Запрос.Текст =  
		"ВЫБРАТЬ
		|	Номенклатура.Ссылка КАК Ссылка, 
		|	Номенклатура.Родитель КАК Родитель
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	Номенклатура.Ссылка В ИЕРАРХИИ
		|			(ВЫБРАТЬ
		|				had_СоотношениеГруппыНоменклатурыИПользователя.had_ГруппаНоменклатуры КАК had_ГруппаНоменклатуры
		|			ИЗ
		|				РегистрСведений.had_СоотношениеГруппыНоменклатурыИПользователя КАК had_СоотношениеГруппыНоменклатурыИПользователя
		|			ГДЕ
		|				had_СоотношениеГруппыНоменклатурыИПользователя.had_Пользователь = &Пользователь)
		|	И Номенклатура.Ссылка = &Ссылка";
		Запрос.УстановитьПараметр("Ссылка", Источник.Ссылка);
		Запрос.УстановитьПараметр("Пользователь", Пользователь); 	
		
		РезультатЗапроса = Запрос.Выполнить();
		Если РезультатЗапроса.Пустой() Тогда
			Текст = СтрШаблон("У пользователя %1 нет прав на содание/редактирование элементов из группы %2.", Пользователь, Источник.Родитель);
			ОбщегоНазначения.СообщитьПользователю(Текст, , , , Отказ);
		КонецЕсли;  
		
	КонецЕсли;
	
КонецПроцедуры

Процедура had_ПередЗаписьюКонтрагентаКонтрольГруппыПередЗаписью(Источник, Отказ) Экспорт
	
	Если Источник.ОбменДанными.Загрузка 
		ИЛИ Источник.ЭтоГруппа Тогда
		
		Возврат;	
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Источник.Родитель) Тогда
	
		ОбщегоНазначения.СообщитьПользователю("Необходимо указать группу списка для контрагента.", , , , Отказ);
	
	КонецЕсли;
	
КонецПроцедуры
// } Сурина



