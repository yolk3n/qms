
////////////////////////////////////////////////////////////////////////////////
//
// ИнвентаризацияМДЛПКлиентСервер: процедуры и функции подсистемы "ИнтеграцияМДЛП.Инвентаризация"
//
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает признак того, создано уведомление на основании документа Инвентаризации потребительских упаковок или нет.
//
// Параметры:
//  Объект - ДокументОбъект, ДанныеФормыСтруктура - проверяемое уведомление.
//
// Возвращаемое значение:
//  Булево
//
Функция УведомлениеСозданоНаОснованииИнвентаризации(Объект) Экспорт
	
	Возврат ЗначениеЗаполнено(Объект.ДокументИнвентаризации);
	
КонецФункции

#Область РаботаСРезультатамиИДальнейшимиДействиямиИнвентаризации

Процедура ОбработатьИзменениеФактическогоНаличияУпаковкиВСтроке(СтрокаУпаковки, КэшированныеРезультатыАнализа, ЭтоРежимСверки) Экспорт
	
	Если СтрокаУпаковки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаУпаковки.ФактическоеНаличиеДоИзменения = СтрокаУпаковки.ФактическоеНаличие;
	
	Если Не ЗначениеЗаполнено(СтрокаУпаковки.РезультатАнализаУпаковок) Тогда
		Возврат;
	КонецЕсли;
	
	Описание = ОписаниеРезультатаАнализаИнвентаризируемыхУпаковок(СтрокаУпаковки.РезультатАнализаУпаковок, КэшированныеРезультатыАнализа);
	Если Не ЗначениеЗаполнено(Описание) Тогда
		Возврат;
	КонецЕсли;
	
	Если Описание.ФактическоеНаличие <> СтрокаУпаковки.ФактическоеНаличие Тогда
		СтрокаУпаковки.РезультатАнализаУпаковок = Описание.ИнвертированныйРезультатАнализа;
		Описание = ОписаниеРезультатаАнализаИнвентаризируемыхУпаковок(СтрокаУпаковки.РезультатАнализаУпаковок, КэшированныеРезультатыАнализа);
	КонецЕсли;
	
	Если ЭтоРежимСверки Тогда
		СтрокаУпаковки.ДействиеПоСверкеОстатков = Описание.ДействиеПоСверкеОстатков;
	КонецЕсли;
	СтрокаУпаковки.ДействиеПоОформлениюУведомлений = Описание.ДействиеПоОформлениюУведомлений;
	
КонецПроцедуры

Функция СформироватьСписокДальнейшихДействий(РезультатАнализаУпаковок, ИмяСписка, КэшированныеРезультатыАнализа) Экспорт
	
	Описание = ОписаниеРезультатаАнализаИнвентаризируемыхУпаковок(РезультатАнализаУпаковок, КэшированныеРезультатыАнализа);
	СписокДействий = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Описание, ИмяСписка);
	Если Не ЗначениеЗаполнено(СписокДействий) Тогда
		СписокДействий = Новый СписокЗначений;
	КонецЕсли;
	
	Возврат СписокДействий;
	
КонецФункции

#КонецОбласти

#Область ДальнейшиеДействияИнвентаризации

Функция ДействияПоСверкеОстатков() Экспорт
	
	ВозвращаемоеЗначение = Новый Массив;
	ВозвращаемоеЗначение.Добавить(ПредопределенноеЗначение("Перечисление.ДальнейшиеДействияИнвентаризацииМДЛП.ВыполнитьСверкуОстатков"));
	ВозвращаемоеЗначение.Добавить(ПредопределенноеЗначение("Перечисление.ДальнейшиеДействияИнвентаризацииМДЛП.НеВыполнятьСверкуОстатков"));
	ВозвращаемоеЗначение.Добавить(ПредопределенноеЗначение("Перечисление.ДальнейшиеДействияИнвентаризацииМДЛП.ВыполнятьСверкуОстатковНеТребуется"));
	ВозвращаемоеЗначение.Добавить(ПредопределенноеЗначение("Перечисление.ДальнейшиеДействияИнвентаризацииМДЛП.ПереместитьВАрхив"));
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

Функция ДействияПоОформлениюУведомлений() Экспорт
	
	ВозвращаемоеЗначение = Новый Массив;
	ВозвращаемоеЗначение.Добавить(ПредопределенноеЗначение("Перечисление.ДальнейшиеДействияИнвентаризацииМДЛП.ОформитьУведомлениеОбОприходовании"));
	ВозвращаемоеЗначение.Добавить(ПредопределенноеЗначение("Перечисление.ДальнейшиеДействияИнвентаризацииМДЛП.ОформитьУведомлениеОПовторномВводеВОборот"));
	ВозвращаемоеЗначение.Добавить(ПредопределенноеЗначение("Перечисление.ДальнейшиеДействияИнвентаризацииМДЛП.ОформитьУведомлениеОВыбытии"));
	ВозвращаемоеЗначение.Добавить(ПредопределенноеЗначение("Перечисление.ДальнейшиеДействияИнвентаризацииМДЛП.ОформитьУведомлениеОВыдачеВОтделения"));
	ВозвращаемоеЗначение.Добавить(ПредопределенноеЗначение("Перечисление.ДальнейшиеДействияИнвентаризацииМДЛП.ОформитьУведомлениеОбОтпускеПоЛьготномуРецепту"));
	ВозвращаемоеЗначение.Добавить(ПредопределенноеЗначение("Перечисление.ДальнейшиеДействияИнвентаризацииМДЛП.ОформитьУведомлениеОРозничнойПродаже"));
	ВозвращаемоеЗначение.Добавить(ПредопределенноеЗначение("Перечисление.ДальнейшиеДействияИнвентаризацииМДЛП.ОформитьУведомлениеОбОтпускеЛППоДокументамОтличнымОтЧека"));
	ВозвращаемоеЗначение.Добавить(ПредопределенноеЗначение("Перечисление.ДальнейшиеДействияИнвентаризацииМДЛП.НеОформлятьУведомление"));
	ВозвращаемоеЗначение.Добавить(ПредопределенноеЗначение("Перечисление.ДальнейшиеДействияИнвентаризацииМДЛП.ОформлятьУведомлениеНеТребуется"));
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

Функция ДействияНеТребующиеОформленияУведомлений() Экспорт
	
	ВозвращаемоеЗначение = Новый Массив;
	ВозвращаемоеЗначение.Добавить(ПредопределенноеЗначение("Перечисление.ДальнейшиеДействияИнвентаризацииМДЛП.НеОформлятьУведомление"));
	ВозвращаемоеЗначение.Добавить(ПредопределенноеЗначение("Перечисление.ДальнейшиеДействияИнвентаризацииМДЛП.ОформлятьУведомлениеНеТребуется"));
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

Функция СоответствиеТиповДокументовДействиямИнвентаризации() Экспорт
	
	ВозвращаемоеЗначение = Новый Соответствие;
	ВозвращаемоеЗначение.Вставить(ПредопределенноеЗначение("Перечисление.ДальнейшиеДействияИнвентаризацииМДЛП.ОформитьУведомлениеОбОприходовании"),
		ПредопределенноеЗначение("Документ.УведомлениеОбОприходованииМДЛП.ПустаяСсылка"));
	ВозвращаемоеЗначение.Вставить(ПредопределенноеЗначение("Перечисление.ДальнейшиеДействияИнвентаризацииМДЛП.ОформитьУведомлениеОбОтпускеЛППоДокументамОтличнымОтЧека"),
		ПредопределенноеЗначение("Документ.УведомлениеОбОтпускеЛППоДокументамОтличнымОтЧекаМДЛП.ПустаяСсылка"));
	ВозвращаемоеЗначение.Вставить(ПредопределенноеЗначение("Перечисление.ДальнейшиеДействияИнвентаризацииМДЛП.ОформитьУведомлениеОбОтпускеПоЛьготномуРецепту"),
		ПредопределенноеЗначение("Документ.УведомлениеОбОтпускеПоЛьготномуРецептуМДЛП.ПустаяСсылка"));
	ВозвращаемоеЗначение.Вставить(ПредопределенноеЗначение("Перечисление.ДальнейшиеДействияИнвентаризацииМДЛП.ОформитьУведомлениеОВыбытии"),
		ПредопределенноеЗначение("Документ.УведомлениеОВыбытииМДЛП.ПустаяСсылка"));
	ВозвращаемоеЗначение.Вставить(ПредопределенноеЗначение("Перечисление.ДальнейшиеДействияИнвентаризацииМДЛП.ОформитьУведомлениеОВыдачеВОтделения"),
		ПредопределенноеЗначение("Документ.УведомлениеОВыдачеВОтделенияМДЛП.ПустаяСсылка"));
	ВозвращаемоеЗначение.Вставить(ПредопределенноеЗначение("Перечисление.ДальнейшиеДействияИнвентаризацииМДЛП.ОформитьУведомлениеОПовторномВводеВОборот"),
		ПредопределенноеЗначение("Документ.УведомлениеОПовторномВводеВОборотМДЛП.ПустаяСсылка"));
	ВозвращаемоеЗначение.Вставить(ПредопределенноеЗначение("Перечисление.ДальнейшиеДействияИнвентаризацииМДЛП.ОформитьУведомлениеОРозничнойПродаже"),
		ПредопределенноеЗначение("Документ.УведомлениеОРозничнойПродажеМДЛП.ПустаяСсылка"));
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область РаботаСРезультатамиИДальнейшимиДействиямиИнвентаризацииСлужебные

Функция ОписаниеРезультатаАнализаИнвентаризируемыхУпаковок(РезультатАнализаУпаковок, КэшированныеРезультатыАнализа)
	
	Если Не ЗначениеЗаполнено(РезультатАнализаУпаковок) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Описание = КэшированныеРезультатыАнализа[РезультатАнализаУпаковок];
	Если Описание = Неопределено Тогда
		
		ПараОписаний = ИнвентаризацияМДЛПВызовСервера.ПолучитьПаруОписанийРезультатовАнализаИнвентаризируемыхУпаковок(РезультатАнализаУпаковок);
		Если Не ЗначениеЗаполнено(ПараОписаний) Тогда
			Возврат Неопределено;
		КонецЕсли;
		
		Описание = ПараОписаний.ОписаниеРезультата;
		КэшированныеРезультатыАнализа.Вставить(РезультатАнализаУпаковок, Описание);
		КэшированныеРезультатыАнализа.Вставить(Описание.ИнвертированныйРезультатАнализа, ПараОписаний.ОписаниеИнвертированногоРезультата);
		
	КонецЕсли;
	
	Возврат Описание;
	
КонецФункции

#КонецОбласти

#КонецОбласти
