////////////////////////////////////////////////////////////////////////////////
// Подсистема "Регистрация ошибок".
//
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС
#Область ПрограммныйИнтерфейс

// Определяет адрес сервера регистрации ошибок.
//
// Параметры:
//
// Возврат:
//		Строка - Адрес сервиса регистрации
//
Функция АдресСервисаРегистрацииОшибок() Экспорт
	
	Возврат "http://infomed.med.1c.ru/a/pult";
	
КонецФункции

Функция ПолучитьНастройкиРегистрацииОшибок() Экспорт
	
	ТекущиеНастройки = ОбработкаОшибок.ПолучитьОбщиеНастройки();
	
	ОписаниеНастроек = РегистрацияОшибок.ОписаниеНастроекРегистрацииОшибок();
	
	ЗначенияРеквизитов = Новый Структура;
	Для Каждого КлючИЗначение Из ОписаниеНастроек Цикл
		
		ИмяНастройки      = КлючИЗначение.Ключ;
		ЗначениеНастройки = ТекущиеНастройки[ИмяНастройки];
		ОписаниеНастройки = КлючИЗначение.Значение;
		ИмяРеквизита      = ОписаниеНастройки.Имя;
		
		ЗначенияРеквизитов.Вставить(ИмяРеквизита, КонвертироватьЗначениеНастройкиВЗначениеРеквизита(ЗначениеНастройки, ТипЗнч(ЗначениеНастройки)));
		
	КонецЦикла;
	
	Возврат ЗначенияРеквизитов;
	
КонецФункции

Функция ПолучитьНастройкиРегистрацииОшибокПоУмолчанию() Экспорт
	
	ОписаниеНастроек = ОписаниеНастроекРегистрацииОшибок();
	
	ЗначенияРеквизитов = Новый Структура;
	Для Каждого КлючИЗначение Из ОписаниеНастроек Цикл
		
		ОписаниеНастройки = КлючИЗначение.Значение;
		ЗначениеНастройки = ОписаниеНастройки.ЗначениеПоУмолчанию;
		ИмяРеквизита      = ОписаниеНастройки.Имя;
		
		ЗначенияРеквизитов.Вставить(ИмяРеквизита, КонвертироватьЗначениеНастройкиВЗначениеРеквизита(ЗначениеНастройки, ТипЗнч(ЗначениеНастройки)));
		
	КонецЦикла;
	
	Возврат ЗначенияРеквизитов;
	
КонецФункции

Процедура СохранитьНастройкиРегистрацииОшибок(НастройкиРегистрацииОшибок) Экспорт
	
	ТекущиеНастройки = ОбработкаОшибок.ПолучитьОбщиеНастройки();
	
	ОписаниеНастроек = ОписаниеНастроекРегистрацииОшибок();
	
	ЗначенияНастроек = Новый Структура;
	Для Каждого КлючИЗначение Из ОписаниеНастроек Цикл
		
		ИмяНастройки      = КлючИЗначение.Ключ;
		ОписаниеНастройки = КлючИЗначение.Значение;
		ИмяРеквизита      = ОписаниеНастройки.Имя;
		ЗначениеРеквизита = НастройкиРегистрацииОшибок[ИмяРеквизита];
		
		ЗначенияНастроек.Вставить(ИмяНастройки, КонвертироватьЗначениеРеквизитаВЗначениеНастройки(ЗначениеРеквизита, ТипЗнч(ОписаниеНастройки.ЗначениеПоУмолчанию)));
		
	КонецЦикла;
	
	ЗаполнитьЗначенияСвойств(ТекущиеНастройки, ЗначенияНастроек);
	
	ОбработкаОшибок.УстановитьОбщиеНастройки(ТекущиеНастройки);
	
КонецПроцедуры

#КонецОбласти // ПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЙ ПРОГРАММНЫЙ ИНТЕРФЕЙС
#Область СлужебныйПрограммныйИнтерфейс

Функция ОписаниеНастроекРегистрацииОшибок() Экспорт
	
	ТекущаяВерсияПлатформы = ВерсияПлатформы();
	ВерсииПлатформы = ПроверяемыеВерсииПлатформы();
	
	ОписаниеДействия = Новый Структура("ИмяСобытия, Действие", "ПриИзменении", "Подключаемый_ПриИзмененииНастроекРегистрацииОшибок");
	ОписаниеДействий = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ОписаниеДействия);
	
	СписокВыбораРежимаОтправки = Новый СписокЗначений;
	СписокВыбораРежимаОтправкиНаСервере = Новый СписокЗначений;
	Для Каждого Значение Из РежимОтправкиИнформацииОбОшибке Цикл
		ЗначениеРеквизита = КонвертироватьЗначениеНастройкиВЗначениеРеквизита(Значение, ТипЗнч(Значение));
		СписокВыбораРежимаОтправки.Добавить(ЗначениеРеквизита, Строка(Значение));
		Если Значение <> РежимОтправкиИнформацииОбОшибке.СпрашиватьПользователя Тогда
			СписокВыбораРежимаОтправкиНаСервере.Добавить(ЗначениеРеквизита, Строка(Значение));
		КонецЕсли;
	КонецЦикла;
	
	// К имени нужно добавлять префикс (например Реквизит_), т.к. платформа некорректно реагирует, когда создает элементы формы.
	
	ОписаниеНастроек = Новый Структура;
	
	Если ВерсияПлатформыДостиглаВерсии(ТекущаяВерсияПлатформы, ВерсииПлатформы.Версия_8_3_21) Тогда
		
		ОписаниеНастроек.Вставить("АдресСервисаОбработкиОшибок", Новый Структура("Имя, Заголовок, ЗначениеПоУмолчанию, Действия",
			"Реквизит_АдресСервисаОбработкиОшибок",
			НСтр("ru = 'Адрес сервиса обработки ошибок'"),
			АдресСервисаРегистрацииОшибок(),
			ОписаниеДействий
			));
		
	Иначе
		
		ОписаниеНастроек.Вставить("АдресСервисаРегистрацииОшибок", Новый Структура("Имя, Заголовок, ЗначениеПоУмолчанию, Действия",
			"Реквизит_АдресСервисаРегистрацииОшибок",
			НСтр("ru = 'Адрес сервиса регистрации ошибок'"),
			АдресСервисаРегистрацииОшибок(),
			ОписаниеДействий,
			));
		
	КонецЕсли;
	
	Если ВерсияПлатформыДостиглаВерсии(ТекущаяВерсияПлатформы, ВерсииПлатформы.Версия_8_3_21) Тогда
		
		ОписаниеНастроек.Вставить("ОтправлятьОтчетНаКлиенте", Новый Структура("Имя, Заголовок, ЗначениеПоУмолчанию, Действия, СписокВыбора",
			"Реквизит_ОтправлятьОтчетНаКлиенте",
			НСтр("ru = 'Отправлять отчет (на клиенте)'"),
			РежимОтправкиИнформацииОбОшибке.Отправлять,
			ОписаниеДействий,
			СписокВыбораРежимаОтправки
			));
		
		ОписаниеНастроек.Вставить("ОтправлятьОтчетНаСервере", Новый Структура("Имя, Заголовок, ЗначениеПоУмолчанию, Действия, СписокВыбора",
			"Реквизит_ОтправлятьОтчетНаСервере",
			НСтр("ru = 'Отправлять отчет (на сервере)'"),
			РежимОтправкиИнформацииОбОшибке.Отправлять,
			ОписаниеДействий,
			СписокВыбораРежимаОтправкиНаСервере
			));
		
	Иначе
		
		ОписаниеНастроек.Вставить("ОтправлятьОчет", Новый Структура("Имя, Заголовок, ЗначениеПоУмолчанию, Действия, СписокВыбора",
			"Реквизит_ОтправлятьОчет",
			НСтр("ru = 'Отправлять отчет'"),
			РежимОтправкиИнформацииОбОшибке.Отправлять,
			ОписаниеДействий,
			СписокВыбораРежимаОтправки
			));
		
	КонецЕсли;
	
	Если ВерсияПлатформыДостиглаВерсии(ТекущаяВерсияПлатформы, ВерсииПлатформы.Версия_8_3_21) Тогда
		
		ОписаниеНастроек.Вставить("ВключатьИмяПользователяВОтчетНаКлиенте", Новый Структура("Имя, Заголовок, ЗначениеПоУмолчанию, Действия, СписокВыбора",
			"Реквизит_ВключатьИмяПользователяВОтчетНаКлиенте",
			НСтр("ru = 'Включать имя пользователя в отчет (на клиенте)'"),
			РежимОтправкиИнформацииОбОшибке.НеОтправлять,
			ОписаниеДействий,
			СписокВыбораРежимаОтправки
			));
		
		ОписаниеНастроек.Вставить("ВключатьИмяПользователяВОтчетНаСервере", Новый Структура("Имя, Заголовок, ЗначениеПоУмолчанию, Действия, СписокВыбора",
			"Реквизит_ВключатьИмяПользователяВОтчетНаСервере",
			НСтр("ru = 'Включать имя пользователя в отчет (на сервере)'"),
			РежимОтправкиИнформацииОбОшибке.НеОтправлять,
			ОписаниеДействий,
			СписокВыбораРежимаОтправкиНаСервере
			));
		
	Иначе
		
		ОписаниеНастроек.Вставить("ВключатьИмяПользователяВОтчет", Новый Структура("Имя, Заголовок, ЗначениеПоУмолчанию, Действия, СписокВыбора",
			"Реквизит_ВключатьИмяПользователяВОтчет",
			НСтр("ru = 'Включать имя пользователя в отчет'"),
			РежимОтправкиИнформацииОбОшибке.НеОтправлять,
			ОписаниеДействий,
			СписокВыбораРежимаОтправки
			));
		
	КонецЕсли;
	
	Если ВерсияПлатформыДостиглаВерсии(ТекущаяВерсияПлатформы, ВерсииПлатформы.Версия_8_3_21) Тогда
		
		ОписаниеНастроек.Вставить("ВключатьСведенияОбИнформационнойБазеВОтчетНаКлиенте", Новый Структура("Имя, Заголовок, ЗначениеПоУмолчанию, Действия, СписокВыбора",
			"Реквизит_ВключатьСведенияОбИнформационнойБазеВОтчетНаКлиенте",
			НСтр("ru = 'Включать сведения об информационной базе в отчет (на клиенте)'"),
			РежимОтправкиИнформацииОбОшибке.Отправлять,
			ОписаниеДействий,
			СписокВыбораРежимаОтправки
			));
		
		ОписаниеНастроек.Вставить("ВключатьСведенияОбИнформационнойБазеВОтчетНаСервере", Новый Структура("Имя, Заголовок, ЗначениеПоУмолчанию, Действия, СписокВыбора",
			"Реквизит_ВключатьСведенияОбИнформационнойБазеВОтчетНаСервере",
			НСтр("ru = 'Включать сведения об информационной базе в отчет (на сервере)'"),
			РежимОтправкиИнформацииОбОшибке.Отправлять,
			ОписаниеДействий,
			СписокВыбораРежимаОтправкиНаСервере
			));
		
	Иначе
		
		ОписаниеНастроек.Вставить("ВключатьСведенияОбИнформационнойБазеВОтчет", Новый Структура("Имя, Заголовок, ЗначениеПоУмолчанию, Действия, СписокВыбора",
			"Реквизит_ВключатьСведенияОбИнформационнойБазеВОтчет",
			НСтр("ru = 'Включать сведения об информационной базе в отчет'"),
			РежимОтправкиИнформацииОбОшибке.Отправлять,
			ОписаниеДействий,
			СписокВыбораРежимаОтправки
			));
		
	КонецЕсли;
	
	Если ВерсияПлатформыДостиглаВерсии(ТекущаяВерсияПлатформы, ВерсииПлатформы.Версия_8_3_21) Тогда
		
		ОписаниеНастроек.Вставить("ВключатьИнформациюОСистемеВОтчетНаКлиенте", Новый Структура("Имя, Заголовок, ЗначениеПоУмолчанию, Действия, СписокВыбора",
			"Реквизит_ВключатьИнформациюОСистемеВОтчетНаКлиенте",
			НСтр("ru = 'Включать информацию о системе в отчет'"),
			РежимОтправкиИнформацииОбОшибке.Отправлять,
			ОписаниеДействий,
			СписокВыбораРежимаОтправки
			));
		
	Иначе
		
		ОписаниеНастроек.Вставить("ВключатьИнформациюОСистемеВОтчет", Новый Структура("Имя, Заголовок, ЗначениеПоУмолчанию, Действия, СписокВыбора",
			"Реквизит_ВключатьИнформациюОСистемеВОтчет",
			НСтр("ru = 'Включать информацию о системе в отчет'"),
			РежимОтправкиИнформацииОбОшибке.Отправлять,
			ОписаниеДействий,
			СписокВыбораРежимаОтправки
			));
		
	КонецЕсли;
	
	Если ВерсияПлатформыДостиглаВерсии(ТекущаяВерсияПлатформы, ВерсииПлатформы.Версия_8_3_21) Тогда
		
		ОписаниеНастроек.Вставить("ВключатьПодробныйТекстОшибкиВОтчетНаКлиенте", Новый Структура("Имя, Заголовок, ЗначениеПоУмолчанию, Действия, СписокВыбора",
			"Реквизит_ВключатьПодробныйТекстОшибкиВОтчетНаКлиенте",
			НСтр("ru = 'Включать подробный текст ошибки в отчет (на клиенте)'"),
			РежимОтправкиИнформацииОбОшибке.Отправлять,
			ОписаниеДействий,
			СписокВыбораРежимаОтправки
			));
		
		ОписаниеНастроек.Вставить("ВключатьПодробныйТекстОшибкиВОтчетНаСервере", Новый Структура("Имя, Заголовок, ЗначениеПоУмолчанию, Действия, СписокВыбора",
			"Реквизит_ВключатьПодробныйТекстОшибкиВОтчетНаСервере",
			НСтр("ru = 'Включать подробный текст ошибки в отчет (на сервере)'"),
			РежимОтправкиИнформацииОбОшибке.Отправлять,
			ОписаниеДействий,
			СписокВыбораРежимаОтправкиНаСервере
			));
		
	Иначе
		
		ОписаниеНастроек.Вставить("ВключатьПодробныйТекстОшибкиВОтчет", Новый Структура("Имя, Заголовок, ЗначениеПоУмолчанию, Действия, СписокВыбора",
			"Реквизит_ВключатьПодробныйТекстОшибкиВОтчет",
			НСтр("ru = 'Включать подробный текст ошибки в отчет'"),
			РежимОтправкиИнформацииОбОшибке.Отправлять,
			ОписаниеДействий,
			СписокВыбораРежимаОтправки
			));
		
	КонецЕсли;
	
	Если ВерсияПлатформыДостиглаВерсии(ТекущаяВерсияПлатформы, ВерсииПлатформы.Версия_8_3_21) Тогда
		
		ОписаниеНастроек.Вставить("ВключатьСнимокОконВОтчетНаКлиенте", Новый Структура("Имя, Заголовок, ЗначениеПоУмолчанию, Действия, СписокВыбора",
			"Реквизит_ВключатьСнимокОконВОтчетНаКлиенте",
			НСтр("ru = 'Включать снимок окон в отчет'"),
			РежимОтправкиИнформацииОбОшибке.СпрашиватьПользователя,
			ОписаниеДействий,
			СписокВыбораРежимаОтправки
			));
		
	Иначе
		
		ОписаниеНастроек.Вставить("ВключатьСнимокОконВОтчет", Новый Структура("Имя, Заголовок, ЗначениеПоУмолчанию, Действия, СписокВыбора",
			"Реквизит_ВключатьСнимокОконВОтчет",
			НСтр("ru = 'Включать снимок окон в отчет'"),
			РежимОтправкиИнформацииОбОшибке.СпрашиватьПользователя,
			ОписаниеДействий,
			СписокВыбораРежимаОтправки
			));
		
	КонецЕсли;
	
	Возврат ОписаниеНастроек;
	
КонецФункции

Процедура СоздатьНастройкиОбработкиОшибок(Форма, ГруппаНастроек) Экспорт
	
	ЭлементыФормы = Форма.Элементы;
	
	ОписаниеНастроек = ОписаниеНастроекРегистрацииОшибок();
	
	ДобавляемыеРеквизиты = Новый Массив;
	ДобавляемыеЭлементы  = Новый Массив;
	Для Каждого КлючИЗначение Из ОписаниеНастроек Цикл
		
		ОписаниеНастройки = КлючИЗначение.Значение;
		ИмяРеквизита      = ОписаниеНастройки.Имя;
		
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(ИмяРеквизита, Новый ОписаниеТипов("Строка"),, ОписаниеНастройки.Заголовок, Истина));
		
		ЭлементФормы = ЭлементыФормы.Добавить(ИмяРеквизита, Тип("ПолеФормы"), ГруппаНастроек);
		ЭлементФормы.Вид = ВидПоляФормы.ПолеВвода;
		
		СписокВыбора = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ОписаниеНастройки, "СписокВыбора");
		Если ЗначениеЗаполнено(СписокВыбора) Тогда
			ЭлементФормы.РежимВыбораИзСписка = Истина;
			ЭлементФормы.СписокВыбора.Очистить();
			Для Каждого ЭлементСписка Из СписокВыбора Цикл
				ЭлементФормы.СписокВыбора.Добавить(ЭлементСписка.Значение, ЭлементСписка.Представление);
			КонецЦикла;
		КонецЕсли;
		
		ОписаниеДействий = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ОписаниеНастройки, "Действия");
		Если ЗначениеЗаполнено(ОписаниеДействий) Тогда
			Для Каждого ОписаниеДействия Из ОписаниеДействий Цикл
				ЭлементФормы.УстановитьДействие(ОписаниеДействия.ИмяСобытия, ОписаниеДействия.Действие);
			КонецЦикла;
		КонецЕсли;
		
		ДобавляемыеЭлементы.Добавить(ЭлементФормы);
		
	КонецЦикла;
	
	Форма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
	Для Каждого ЭлементФормы Из ДобавляемыеЭлементы Цикл
		ЭлементФормы.ПутьКДанным = ЭлементФормы.Имя;
	КонецЦикла;
	
КонецПроцедуры

Процедура СоздатьНастройкиОбработкиОшибокПоУмолчанию(Форма, ГруппаНастроек) Экспорт
	
	ЭлементыФормы = Форма.Элементы;
	
	ОписаниеНастроек = ОписаниеНастроекРегистрацииОшибок();
	
	ДобавляемыеРеквизиты = Новый Массив;
	ДобавляемыеЭлементы  = Новый Массив;
	Для Каждого КлючИЗначение Из ОписаниеНастроек Цикл
		
		ОписаниеНастройки = КлючИЗначение.Значение;
		ИмяРеквизита = ОписаниеНастройки.Имя + "ПоУмолчанию";
		
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(ИмяРеквизита, Новый ОписаниеТипов("Строка"),, ОписаниеНастройки.Заголовок, Ложь));
		
		ЭлементФормы = ЭлементыФормы.Добавить(ИмяРеквизита, Тип("ПолеФормы"), ГруппаНастроек);
		ЭлементФормы.Вид = ВидПоляФормы.ПолеВвода;
		ЭлементФормы.Доступность = Ложь;
		ЭлементФормы.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		
		ДобавляемыеЭлементы.Добавить(ЭлементФормы);
		
	КонецЦикла;
	
	Форма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
	Для Каждого ЭлементФормы Из ДобавляемыеЭлементы Цикл
		ЭлементФормы.ПутьКДанным = ЭлементФормы.Имя;
	КонецЦикла;
	
КонецПроцедуры

Процедура СохранитьПараметрыЦентраМониторинга() Экспорт
	
	ПараметрыЦентраМониторинга = ЦентрМониторингаСлужебный.ПолучитьПараметрыЦентраМониторинга();
	
	ПараметрыЦентраМониторинга.Вставить("Сервер",              "infomed.med.1c.ru");
	ПараметрыЦентраМониторинга.Вставить("АдресРесурса",        "a/pult");
	ПараметрыЦентраМониторинга.Вставить("Порт", 80);
	ПараметрыЦентраМониторинга.Вставить("ЗащищенноеСоединение", Ложь);
	
	ПараметрыЦентраМониторинга.Вставить("АдресСервисаРегистрацииОшибок", "http://infomed.med.1c.ru/a/pult");
	ПараметрыЦентраМониторинга.Вставить("ОтправлятьОтчет", "Отправлять");
	ПараметрыЦентраМониторинга.Вставить("ВключатьПодробныйТекстОшибкиВОтчет", "Отправлять");
	ПараметрыЦентраМониторинга.Вставить("ВключатьСведенияОбИнформационнойБазеВОтчет", "Отправлять");
	
	ЦентрМониторингаСлужебный.УстановитьПараметрыЦентраМониторингаВнешнийВызов(ПараметрыЦентраМониторинга);
	
КонецПроцедуры

#КонецОбласти // СлужебныйПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

Функция КонвертироватьЗначениеНастройкиВЗначениеРеквизита(ЗначениеНастройки, ТипЗначения)
	
	Если ТипЗначения = Тип("РежимОтправкиИнформацииОбОшибке") Тогда
		ЗначениеРеквизита = ИмяЗначенияРежимаОтправкиИнформацииОбОшибке(ЗначениеНастройки);
	Иначе
		ЗначениеРеквизита = ЗначениеНастройки;
	КонецЕсли;
	
	Возврат ЗначениеРеквизита;
	
КонецФункции

Функция КонвертироватьЗначениеРеквизитаВЗначениеНастройки(ЗначениеРеквизита, ТипЗначения)
	
	Если ТипЗначения = Тип("РежимОтправкиИнформацииОбОшибке") Тогда
		ЗначениеНастройки = РежимОтправкиИнформацииОбОшибке[ЗначениеРеквизита];
	Иначе
		ЗначениеНастройки = ЗначениеРеквизита;
	КонецЕсли;
	
	Возврат ЗначениеНастройки;
	
КонецФункции

Функция ИмяЗначенияРежимаОтправкиИнформацииОбОшибке(Значение)
	
	Возврат СтрЗаменить(ТРег(Значение), " ", "");
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Версии платформы
#Область ВерсииПлатформы

Функция ВерсияПлатформы()
	
	СистемнаяИнформация = Новый СистемнаяИнформация;
	Возврат ОбщегоНазначенияКлиентСервер.ВерсияКонфигурацииБезНомераСборки(СистемнаяИнформация.ВерсияПриложения);
	
КонецФункции

Функция ПроверяемыеВерсииПлатформы()
	
	Версии = Новый Структура;
	Версии.Вставить("Версия_8_3_21", "8.3.21");
	
	Возврат Версии;
	
КонецФункции

Функция ВерсияПлатформыДостиглаВерсии(ПроверяемаяВерсия, ЭталоннаяВерсия)
	
	Возврат ОбщегоНазначенияКлиентСервер.СравнитьВерсииБезНомераСборки(ПроверяемаяВерсия, ЭталоннаяВерсия) >= 0;
	
КонецФункции

#КонецОбласти // ВерсииПлатформы

#КонецОбласти // СлужебныеПроцедурыИФункции

