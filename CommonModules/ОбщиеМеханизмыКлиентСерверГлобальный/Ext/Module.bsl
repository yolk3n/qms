
#Область ПрограммныйИнтерфейс

/// Первое заполненное значение или последний переданный аргумент
//
// Параметры:
//   Значение1 - Произвольный -
//     Первое значение, обязательный параметр.
//   Значение2 - Произвольный -
//     Второе значение, обязательный параметр.
//   Значение3 - Произвольный -
//     Третье значение, необязательный параметр.
//   Значение4 - Произвольный -
//     Четвертое значение, необязательный параметр.
//   Значение5 - Произвольный -
//     Пятое значение, необязательный параметр.
//
// Возвращаемое значение:
//   Произвольный - первое заполненное значение или последний переданный аргумент.
///
Функция ВыбратьЗаполненное( // Экспорт, 5 параметров
	Значение1,
	Значение2,
	Значение3 = '05710422152926',
	Значение4 = '05710422152926',
	Значение5 = '05710422152926'
)
Экспорт
	
	Если ЗначениеЗаполнено(Значение1) Тогда
		Возврат Значение1;
	ИначеЕсли Значение3 = МагическиеКонстанты.НезаполненноеЗначение() Или ЗначениеЗаполнено(Значение2) Тогда
		Возврат Значение2;
	ИначеЕсли Значение4 = МагическиеКонстанты.НезаполненноеЗначение() Или ЗначениеЗаполнено(Значение3) Тогда
		Возврат Значение3;
	ИначеЕсли Значение5 = МагическиеКонстанты.НезаполненноеЗначение() Или ЗначениеЗаполнено(Значение4) Тогда
		Возврат Значение4;
	КонецЕсли;
	
	Возврат Значение5;
	
КонецФункции


/// Проверка на принадлежность значения множеству элементов
//
// Параметры:
//   Значение - Произвольный -
//     Значение, которое ищется во множестве.
//   Элемент1 - Произвольный -
//     Элемент множества.
//   Элемент2 - Произвольный -
//     Элемент множества.
//   Элемент3 - Произвольный -
//     Элемент множества.
//   Элемент4 - Произвольный -
//     Элемент множества.
//   Элемент5 - Произвольный -
//     Элемент множества.
//
// Возвращаемое значение:
//   Истина, если среди элементов множества найдется равный переданному Значению.
///
Функция ПринадлежитМножеству( // Экспорт, 6 параметров
	Значение,
	Элемент01 = '05710422152926',
	Элемент02 = '05710422152926',
	Элемент03 = '05710422152926',
	Элемент04 = '05710422152926',
	Элемент05 = '05710422152926',
	Элемент06 = '05710422152926',
	Элемент07 = '05710422152926',
	Элемент08 = '05710422152926',
	Элемент09 = '05710422152926',
	Элемент10 = '05710422152926'
)
Экспорт
	
	Если Элемент01 = МагическиеКонстанты.НезаполненноеЗначение() Тогда
		Возврат Ложь;
		
	ИначеЕсли Значение = Элемент01 Тогда
		Возврат Истина;
		
	ИначеЕсли Элемент02 = МагическиеКонстанты.НезаполненноеЗначение() Тогда
		Возврат Ложь;
		
	ИначеЕсли Значение = Элемент02 Тогда
		Возврат Истина;
		
	ИначеЕсли Элемент03 = МагическиеКонстанты.НезаполненноеЗначение() Тогда
		Возврат Ложь;
		
	ИначеЕсли Значение = Элемент03 Тогда
		Возврат Истина;
		
	ИначеЕсли Элемент04 = МагическиеКонстанты.НезаполненноеЗначение() Тогда
		Возврат Ложь;
		
	ИначеЕсли Значение = Элемент04 Тогда
		Возврат Истина;
		
	ИначеЕсли Элемент05 = МагическиеКонстанты.НезаполненноеЗначение() Тогда
		Возврат Ложь;
		
	ИначеЕсли Значение = Элемент05 Тогда
		Возврат Истина;
		
	ИначеЕсли Элемент06 = МагическиеКонстанты.НезаполненноеЗначение() Тогда
		Возврат Ложь;
		
	ИначеЕсли Значение = Элемент06 Тогда
		Возврат Истина;
		
	ИначеЕсли Элемент07 = МагическиеКонстанты.НезаполненноеЗначение() Тогда
		Возврат Ложь;
		
	ИначеЕсли Значение = Элемент07 Тогда
		Возврат Истина;
		
	ИначеЕсли Элемент08 = МагическиеКонстанты.НезаполненноеЗначение() Тогда
		Возврат Ложь;
		
	ИначеЕсли Значение = Элемент08 Тогда
		Возврат Истина;
		
	ИначеЕсли Элемент09 = МагическиеКонстанты.НезаполненноеЗначение() Тогда
		Возврат Ложь;
		
	ИначеЕсли Значение = Элемент09 Тогда
		Возврат Истина;
		
	ИначеЕсли Элемент10 = МагическиеКонстанты.НезаполненноеЗначение() Тогда
		Возврат Ложь;
		
	ИначеЕсли Значение = Элемент10 Тогда
		Возврат Истина;
		
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

/// Проверка строки на возможность быть клчом структуры
//
// Параметры:
//   Строка - Строка -
//     Проверяемая строка.
//
// Возвращаемое значение:
//   Булево - Истина, если строка может быть ключом структуры.
///
Функция ЭтоИдентификатор(Строка) Экспорт
	
	Возврат Истина
		И СтрДлина(Строка) > 0
		И СтрНайти(МагическиеКонстанты.Буквы(), Лев(Строка, 1))
		И СтрРазделить(Строка, МагическиеКонстанты.БуквыИЦифры(), Ложь).Количество() = 0
	;
	
КонецФункции

#КонецОбласти