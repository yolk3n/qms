#Область ПрограммныйИнтерфейс

// Возвращает список доступных типов оборудования.
// 
// Параметры:
//   СписокТиповОборудования - Массив из ПеречислениеСсылка.ТипыПодключаемогоОборудования - 
//                             доступные типы подключаемого оборудования в конфигурации.
//   СтандартнаяОбработка - Булево - признак выполнения стандартной обработки.
// Пример:
//   СписокТиповОборудования.Добавить(Перечисления.ТипыПодключаемогоОборудования.ККТ).
//
Процедура ДоступныеТипыОборудования(СписокТиповОборудования, СтандартнаяОбработка) Экспорт
	
	// БольничнаяАптека
	// Сканеры штрихкода
	СписокТиповОборудования.Добавить(Перечисления.ТипыПодключаемогоОборудования.СканерШтрихкода);
	// Конец Сканеры штрихкода
	
	// Считыватели магнитных карт
	СписокТиповОборудования.Добавить(Перечисления.ТипыПодключаемогоОборудования.СчитывательМагнитныхКарт);
	// Конец Считыватели магнитных карт.
	
	// Считыватели RFID
	СписокТиповОборудования.Добавить(Перечисления.ТипыПодключаемогоОборудования.СчитывательRFID);
	// Конец Считыватели RFID.
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьРозничныеПродажи") Тогда
		
		// ККТ с передачей данных ОФД
		СписокТиповОборудования.Добавить(Перечисления.ТипыПодключаемогоОборудования.ККТ);
		// Конец ККТ с передачей данных ОФД.
		
		// Принтеры чеков
		СписокТиповОборудования.Добавить(Перечисления.ТипыПодключаемогоОборудования.ПринтерЧеков);
		// Конец принтеры чеков.
		
		// Дисплеи покупателя
		СписокТиповОборудования.Добавить(Перечисления.ТипыПодключаемогоОборудования.ДисплейПокупателя);
		// Конец Дисплеи покупателя
		
		// Эквайринговые терминалы
		СписокТиповОборудования.Добавить(Перечисления.ТипыПодключаемогоОборудования.ЭквайринговыйТерминал);
		// Конец Эквайринговые терминалы.
		
	КонецЕсли;
	
	// Терминалы сбора данных
	СписокТиповОборудования.Добавить(Перечисления.ТипыПодключаемогоОборудования.ТерминалСбораДанных);
	// Конец Терминалы сбора данных.
	
	// Электронные весы
	СписокТиповОборудования.Добавить(Перечисления.ТипыПодключаемогоОборудования.ЭлектронныеВесы);
	// Конец Электронные весы
	
	// Весы с печатью этикеток
	//СписокТиповОборудования.Добавить(Перечисления.ТипыПодключаемогоОборудования.ВесыСПечатьюЭтикеток);
	// Конец Весы с печатью этикеток.
	
	// Принтер этикеток
	СписокТиповОборудования.Добавить(Перечисления.ТипыПодключаемогоОборудования.ПринтерЭтикеток);
	// Конец Принтер этикеток
	
	// ККМ offline
	//СписокТиповОборудования.Добавить(Перечисления.ТипыПодключаемогоОборудования.ККМОфлайн);
	// Конец ККМ offline
	// Конец БольничнаяАптека
	
КонецПроцедуры

// Возвращает флаг возможности добавления новых драйверов оборудования в справочник.
// Параметры:
//   ДобавлениеНовыхДрайверовДоступно - Булево - Флаг возможности добавления новых компонент подключения оборудования.
//   СтандартнаяОбработка - Булево - Признак выполнения стандартной обработки.
// Пример:
//   ДобавлениеНовыхДрайверовДоступно = Ложь;
//   СтандартнаяОбработка = Ложь. 
//
Процедура ДоступноДобавлениеНовыхДрайверов(ДобавлениеНовыхДрайверовДоступно, СтандартнаяОбработка) Экспорт
	
	// БольничнаяАптека
	ДобавлениеНовыхДрайверовДоступно = Истина;
	// Конец БольничнаяАптека
	
КонецПроцедуры

// Возвращает доступность сетевого оборудования.
//
// Параметры:
//  СетевоеОборудованиеДоступно - Булево - Сетевое оборудование доступно.
//  СтандартнаяОбработка - Булево - Стандартная обработка.
//
Процедура ДоступноСетевоеОборудование(СетевоеОборудованиеДоступно, СтандартнаяОбработка) Экспорт
	
	// БольничнаяАптека
	СтандартнаяОбработка = Ложь;
	СетевоеОборудованиеДоступно = Ложь;
	// Конец БольничнаяАптека
	
КонецПроцедуры

// Возвращает доступность распределенной фискализации.
//  
// Параметры:
//  РаспределеннаяФискализацииДоступна - Булево - Доступность распределенной фискализации.
//  СтандартнаяОбработка - Булево - Стандартная обработка.
//
Процедура ДоступноРаспределеннаяФискализация(РаспределеннаяФискализацииДоступна, СтандартнаяОбработка) Экспорт
	
	// БольничнаяАптека
	РаспределеннаяФискализацииДоступна = Истина;
	// Конец БольничнаяАптека
	
КонецПроцедуры

// Возвращает доступность инкассации в форме управление фискальным устройством.
//  
// Параметры:
//  ИнкассацияДоступна - Булево - Доступность инкассации.
//  СтандартнаяОбработка - Булево - Стандартная обработка.
//
Процедура ДоступноИнкассацияВУправлениеФискальнымУстройством(ИнкассацияДоступна, СтандартнаяОбработка) Экспорт
	
КонецПроцедуры

// Доступны возвраты без карты.       
//
// Параметры:
//  ВозвратыБезКарты - Структура - Доступны возвраты без карты:
//   * ВозвратПоПлатежнойКарте - Булево
//   * ВозвратЭлектроннымСертификатом - Булево
//
Процедура ДоступноВозвратыБезКарты(ВозвратыБезКарты) Экспорт
	
КонецПроцедуры  

// Переопределяемая процедура для подсистемы управление доступом СтандартныеПодсистемы
// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
//
// Параметры:
//  Менеджер - Строка 
//  Ограничение - Структура:
//    * Текст                             - Строка - ограничение доступа для пользователей.
//                                          Если пустая строка, значит, доступ разрешен.
//    * ТекстДляВнешнихПользователей      - Строка - ограничение доступа для внешних пользователей.
//                                          Если пустая строка, значит, доступ запрещен.
//    * ПоВладельцуБезЗаписиКлючейДоступа - Неопределено - определить автоматически.
//                                        - Булево - если Ложь, то всегда записывать ключи доступа,
//                                          если Истина, тогда не записывать ключи доступа,
//                                          а использовать ключи доступа владельца (требуется,
//                                          чтобы ограничение было строго по объекту-владельцу).
//   * ПоВладельцуБезЗаписиКлючейДоступаДляВнешнихПользователей - Неопределено, Булево - также
//                                          как у параметра ПоВладельцуБезЗаписиКлючейДоступа.
//
Процедура ПриЗаполненииОграниченияДоступа(Менеджер, Ограничение) Экспорт
	
КонецПроцедуры

#Область Обновление

// Переопределяемая часть процедуры обновления с БПО 3
//  
// Параметры:
//  СсылкаПодключаемоеОборудование - СправочникСсылка.ПодключаемоеОборудование - оборудование для обновления перехода с БПО 3
//
Процедура ОбновитьСправочникПодключаемогоОборудования(СсылкаПодключаемоеОборудование) Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область ОборудованиеККТ

// Процедура заполняет реквизиты организации для регистрации ФН.
//  
// Параметры:
//  Организация - ОпределяемыйТип.ОрганизацияБПО - организация для заполнения реквизитов.
//  ПараметрыРегистрации - Структура - параметры регистрации ФН.
//
Процедура ЗаполнитьРеквизитыОрганизацииДляРегистрацииФН(Организация, ПараметрыРегистрации) Экспорт
	
	// БольничнаяАптека
	Реквизиты = Справочники.Организации.ПолучитьРеквизитыОрганизации(Организация);
	ПараметрыРегистрации.ОрганизацияНазвание = Реквизиты.Наименование;
	ПараметрыРегистрации.ОрганизацияИНН      = Реквизиты.ИНН;
	// Конец БольничнаяАптека
	
КонецПроцедуры

// Переопределяет формируемый шаблон чека.
//
// Параметры:
//  ОбщиеПараметры - см. ОборудованиеЧекопечатающиеУстройстваКлиентСервер.ПараметрыОперацииФискализацииЧека
//  ДополнительныйТекст - Строка - Дополнительный текст шаблона чека.
//  СтандартнаяОбработка - Булево - Признак стандартной обработки.
//  ТипОборудования - Строка - Типы оборудования строкой.
//
// Возвращаемое Значение:
//  Булево
Функция СформироватьШаблонЧека(ОбщиеПараметры, ДополнительныйТекст, СтандартнаяОбработка, ТипОборудования = "") Экспорт

КонецФункции

// Возвращает для каких типов идентификаторов будет заполняться тег 1162 (код товара).
//
// Параметры:
//  ТипыИдентификаторов - Массив из ПеречислениеСсылка.ТипыИдентификаторовТовараККТ
//  СтандартнаяОбработка - Булево - Стандартная обработка
//
Процедура КодТовараЗаполняетсяДляТиповИдентификаторов(ТипыИдентификаторов, СтандартнаяОбработка) Экспорт
	
КонецПроцедуры

// Возвращает, для каких типов товаров будет заполняться отраслевой реквизит.
//
// Параметры:
//  ТипыТоваров - Структура:
//  * ИзделияИзНатуральногоМеха - Булево - Заполнения для изделия из натурального меха. 
//  * ОбъемноСортовойУчет - Булево - Заполнения для товаров объемно сортового учета.
//
Процедура ОтраслевойРеквизитЗаполняетсяДляТиповТоваров(ТипыТоваров) Экспорт
	

	
КонецПроцедуры

 // Ведется учет ИСМП в конфигурации
// Параметры:
//  УчетПродукцииИСМП - Булево - Ведется учет ИСМП в конфигурации 
//  СтандартнаяОбработка - Булево - Выполнение стандартной обработки
//
Процедура ВедетсяУчетПродукцииИСМП(УчетПродукцииИСМП, СтандартнаяОбработка) Экспорт
	
КонецПроцедуры

// Ведется объемно сортовой учет в конфигурации
// Параметры:
//  ОбъемноСортовойУчет - Булево - Ведется объемно сортовой учет в конфигурации 
//  СтандартнаяОбработка - Булево - Выполнение стандартной обработки
//
Процедура ВедетсяОбъемноСортовойУчет(ОбъемноСортовойУчет, СтандартнаяОбработка) Экспорт
	

	
КонецПроцедуры

// Процедура где можно добавить любой текст при формировании чека в формате PDF.
//
// Параметры:
//   ТекстЗаголовка - Строка - Текст который будет выведен при формировании кассового чека в формате PDF
//   ТекстПодвала - Строка - Текст который будет выведен при формировании кассового чека в формате PDF
Процедура ДополнительныйТекстПриФормированииЧекаPDF(ТекстЗаголовка, ТекстПодвала) Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область РаботаСФормойЭкземпляра

// Дополнительные переопределяемые действия с управляемой формой в Экземпляре оборудования
// при событии "ПриСозданииНаСервере".
//
// Параметры:
//  Объект - СправочникОбъект.ПодключаемоеОборудование - Объект подключаемого оборудования.
//  ЭтаФорма - ФормаКлиентскогоПриложения - Форма настройки оборудования
//  Отказ - Булево - Отказ создания
//  Параметры - Структура - Параметры операции
//  СтандартнаяОбработка - Булево - Стандартная обработка
//
Процедура ЭкземплярОборудованияПриСозданииНаСервере(Объект, ЭтаФорма, Отказ, Параметры, СтандартнаяОбработка) Экспорт

КонецПроцедуры

// Дополнительные переопределяемые действия с управляемой формой в Экземпляре оборудования
// при событии "ПриЧтенииНаСервере".
//
// Параметры:
//  ТекущийОбъект - СправочникОбъект.ПодключаемоеОборудование - Объект подключаемого оборудования.
//  ЭтаФорма - ФормаКлиентскогоПриложения - Форма настройки оборудования
//
Процедура ЭкземплярОборудованияПриЧтенииНаСервере(ТекущийОбъект, ЭтаФорма) Экспорт

КонецПроцедуры

// Дополнительные переопределяемые действия с управляемой формой в Экземпляре оборудования
// при событии "ПередЗаписьюНаСервере".
//
// Параметры:
//  Отказ - Булево - Отказ операции
//  ТекущийОбъект - СправочникОбъект.ПодключаемоеОборудование - Объект подключаемого оборудования.
//  ПараметрыЗаписи - Структура - Параметры операции
//
Процедура ЭкземплярОборудованияПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи) Экспорт

КонецПроцедуры

// Дополнительные переопределяемые действия с управляемой формой в Экземпляре оборудования
// при событии "ПриЗаписиНаСервере".
//
// Параметры:
//  Отказ - Булево - Отказ операции
//  ТекущийОбъект - СправочникОбъект.ПодключаемоеОборудование - Объект подключаемого оборудования.
//  ПараметрыЗаписи - Структура - Параметры операции
//
Процедура ЭкземплярОборудованияПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи) Экспорт

КонецПроцедуры

// Дополнительные переопределяемые действия с управляемой формой в Экземпляре оборудования
// при событии "ПослеЗаписиНаСервере".
//
// Параметры:
//  ТекущийОбъект - СправочникОбъект.ПодключаемоеОборудование - Объект подключаемого оборудования.
//  ПараметрыЗаписи - Структура - Параметры операции
//
Процедура ЭкземплярОборудованияПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи) Экспорт

КонецПроцедуры

// Дополнительные переопределяемые действия с управляемой формой в Экземпляре оборудования
// при событии "ОбработкаПроверкиЗаполненияНаСервере".
//
// Параметры:
//  Объект - СправочникОбъект.ПодключаемоеОборудование - Объект подключаемого оборудования.
//  ЭтаФорма - ФормаКлиентскогоПриложения - Форма настройки оборудования
//  Отказ - Булево - Отказ создания
//  ПроверяемыеРеквизиты - Структура - Проверяемые реквизиты
//
Процедура ЭкземплярОборудованияОбработкаПроверкиЗаполненияНаСервере(Объект, ЭтаФорма, Отказ, ПроверяемыеРеквизиты) Экспорт

КонецПроцедуры

// Дополнительные переопределяемые действия с управляемой формой в Экземпляре Фискальные операции
// при событии "ПриСозданииНаСервере".
//
// Параметры:
//  Запись - РегистрСведенийЗапись.ФискальныеОперации - Запись фискальные операции.
//  ЭтаФорма - ФормаКлиентскогоПриложения - Форма настройки оборудования
//  Отказ - Булево - Отказ создания
//  Параметры - Структура - Параметры операции
//  СтандартнаяОбработка - Булево - Стандартная обработка
//
Процедура ЭкземплярФискальныеОперацииПриСозданииНаСервере(Запись, ЭтаФорма, Отказ, Параметры, СтандартнаяОбработка) Экспорт

КонецПроцедуры

// Дополнительные переопределяемые действия с управляемой формой в Экземпляре Фискальные операции
// при событии "ПриСозданииНаСервере".
//
// Параметры:
//  Запись - РегистрСведенийЗапись.ФискальныеОперации - Запись фискальные операции.
//  ЭтаФорма - ФормаКлиентскогоПриложения - Форма настройки оборудования
//  Отказ - Булево - Отказ создания
//  СтандартнаяОбработка - Булево - Стандартная обработка
//
Процедура ЭкземплярПлатежныеОперацииПриСозданииНаСервере(Запись, ЭтаФорма, Отказ, СтандартнаяОбработка) Экспорт

КонецПроцедуры

#КонецОбласти

#Область РаботаСФормойСписка

// Дополнительные переопределяемые действия с управляемой формой в Список Фискальные операции
// при событии "ПриСозданииНаСервере".
//
// Параметры:
//  ЭтаФорма - ФормаКлиентскогоПриложения - Форма настройки оборудования
//  Отказ - Булево - Отказ создания
//  Параметры - Структура - Параметры операции
//  СтандартнаяОбработка - Булево - Стандартная обработка
//
Процедура СписокФискальныеОперацииПриСозданииНаСервере(ЭтаФорма, Отказ, Параметры, СтандартнаяОбработка) Экспорт

КонецПроцедуры

// Дополнительные переопределяемые действия с управляемой формой в Список платежные операции
// при событии "ПриСозданииНаСервере".
//
// Параметры:
//  ЭтаФорма - ФормаКлиентскогоПриложения - Форма настройки оборудования
//  Параметры - Структура - Параметры операции
//  Отказ - Булево - Отказ создания.
//  СтандартнаяОбработка - Булево - Стандартная обработка.
//
Процедура СписокПлатежныеОперацииПриСозданииНаСервере(ЭтаФорма, Отказ, Параметры, СтандартнаяОбработка) Экспорт

КонецПроцедуры

#КонецОбласти 

#Область РаботаСФормойПанельАдминистрирования

// Дополнительные переопределяемые действия с управляемой формой в Панели администрирования БПО
// при событии "ПриСозданииНаСервере".
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - Форма настройки оборудования
//  Отказ - Булево - Отказ создания
//  Параметры - Структура - Параметры операции
//  СтандартнаяОбработка - Булево - Стандартная обработка
//
Процедура ПанельАдминистрированияПриСозданииНаСервере(Форма, Отказ, Параметры, СтандартнаяОбработка) Экспорт
	
	// БольничнаяАптека
	Элементы = Форма.Элементы;
	
	Если Форма.ИмяФормы = Метаданные.Обработки.ПанельАдминистрированияБПО.Формы.Настройки.ПолноеИмя() Тогда
		
		// Выключение видимости неиспользуемой функциональности.
		Элемент = Элементы.Найти("ГруппаПечатьЭтикетокИЦенников");
		Если Элемент <> Неопределено Тогда
			Элемент.Видимость = Ложь;
		КонецЕсли;
		
		ДобавляемыеРеквизиты = Новый Массив;
		ДобавляемыеЭлементы  = Новый Массив;
		
		// Добавление флага ИспользоватьПодключаемоеОборудование.
		МетаданныеРеквизита = Метаданные.Константы.ИспользоватьПодключаемоеОборудование;
		
		ИмяРеквизита = МетаданныеРеквизита.Имя;
		ТипРеквизита = МетаданныеРеквизита.Тип;
		Заголовок    = МетаданныеРеквизита.Представление();
		
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(ИмяРеквизита, ТипРеквизита,, Заголовок));
		
		Элемент = Элементы.Вставить(ИмяРеквизита, Тип("ПолеФормы"), Элементы.ГруппаУправлениеПодключаемымОборудованием, Элементы.ГруппаУправлениеПодключаемымОборудованиемПерваяСтрока);
		Элемент.Вид                  = ВидПоляФормы.ПолеФлажка;
		Элемент.ПоложениеЗаголовка   = ПоложениеЗаголовкаЭлементаФормы.Право;
		Элемент.ОтображениеПодсказки = ОтображениеПодсказки.ОтображатьСнизу;
		Элемент.Подсказка            = НСтр("ru = 'Использование внешнего оборудования - электронные весы, сканеры штрихкода, эквайринговые терминалы и т.д.'");
		Элемент.УстановитьДействие("ПриИзменении", "Подключаемый_ПриИзмененииРеквизита");
		ДобавляемыеЭлементы.Добавить(Новый Структура("Элемент, ЗначениеРеквизита", Элемент, Константы[ИмяРеквизита].Получить()));
		
		// Добавление настроек использования мобильного приложения БА.
		ГруппаФормы = Элементы.Добавить("ГруппаИнтеграцияСМобильнымПриложением", Тип("ГруппаФормы"));
		ГруппаФормы.Вид                   = ВидГруппыФормы.ОбычнаяГруппа;
		ГруппаФормы.Заголовок             = НСтр("ru = 'Мобильное приложение'");
		ГруппаФормы.Отображение           = ОтображениеОбычнойГруппы.ОбычноеВыделение;
		ГруппаФормы.Поведение             = ПоведениеОбычнойГруппы.Свертываемая;
		ГруппаФормы.ОтображениеУправления = ОтображениеУправленияОбычнойГруппы.Картинка;
		
		МетаданныеРеквизита = Метаданные.Константы.ИспользоватьИнтеграциюСМобильнымПриложением;
		
		ИмяРеквизита = МетаданныеРеквизита.Имя;
		ТипРеквизита = МетаданныеРеквизита.Тип;
		Заголовок    = МетаданныеРеквизита.Представление();
		
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(ИмяРеквизита, ТипРеквизита,, Заголовок));
		
		Элемент = Элементы.Добавить(ИмяРеквизита, Тип("ПолеФормы"), ГруппаФормы);
		Элемент.Вид                  = ВидПоляФормы.ПолеФлажка;
		Элемент.ПоложениеЗаголовка   = ПоложениеЗаголовкаЭлементаФормы.Право;
		Элемент.ОтображениеПодсказки = ОтображениеПодсказки.ОтображатьСнизу;
		Элемент.Подсказка            = НСтр("ru = 'Использование мобильного приложения для интеграции с информационной базой.'");
		Элемент.УстановитьДействие("ПриИзменении", "Подключаемый_ПриИзмененииРеквизита");
		ДобавляемыеЭлементы.Добавить(Новый Структура("Элемент, ЗначениеРеквизита", Элемент, Константы[ИмяРеквизита].Получить()));
		
		Элемент = Элементы.Добавить("НастройкаИнтеграцииСМобильнымПриложением", Тип("ДекорацияФормы"), ГруппаФормы);
		Элемент.Заголовок = Новый ФорматированнаяСтрока(НСтр("ru = 'Настройки интеграции с мобильным приложением'"),,,,
			"e1cib/app/Обработка." + Метаданные.Обработки.НастройкаИнтеграцииСМобильнымПриложением.Имя);
		
		// Добавление группы ФЗ54
		ГруппаФормы = Элементы.Добавить("ГруппаФЗ54", Тип("ГруппаФормы"));
		ГруппаФормы.Вид                   = ВидГруппыФормы.ОбычнаяГруппа;
		ГруппаФормы.Заголовок             = НСтр("ru = 'Изменения 54-ФЗ'");
		ГруппаФормы.Отображение           = ОтображениеОбычнойГруппы.ОбычноеВыделение;
		ГруппаФормы.Поведение             = ПоведениеОбычнойГруппы.Свертываемая;
		ГруппаФормы.ОтображениеУправления = ОтображениеУправленияОбычнойГруппы.Картинка;
		
		Элемент = Элементы.Добавить("ПодключитьКассыКОператоруФискальныхДанных", Тип("ДекорацияФормы"), ГруппаФормы);
		Элемент.Заголовок = Новый ФорматированнаяСтрока(НСтр("ru = 'Подключить кассы к оператору фискальных данных'"),,,, "https://portal.1c.ru/applications/56");
		Элемент.ОтображениеПодсказки = ОтображениеПодсказки.ОтображатьСнизу;
		Элемент.Подсказка = НСтр("ru = 'Сервис  «1С-ОФД» обеспечит удобное подключение ваших касс к оператору фискальных данных без наценок к официальной стоимости услуг ОФД'");
		
		Элемент = Элементы.Добавить("ВсеО54ФЗ", Тип("ДекорацияФормы"), ГруппаФормы);
		Элемент.Заголовок = Новый ФорматированнаяСтрока(НСтр("ru = 'Все о 54-ФЗ и переходе на онлайн-ККТ'"),,,, "http://v8.1c.ru/kkt/");
		Элемент.ОтображениеПодсказки = ОтображениеПодсказки.ОтображатьСнизу;
		Элемент.Подсказка = НСтр("ru = 'С 1 июля 2017 года можно будет использовать только те ККТ, которые передают данные о продажах в ФНС через оператора фискальных данных (Федеральный закон 54-ФЗ).'");
		
		// Добавление реквизитов.
		Форма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
		
		// Установка свойства ПутьКДанным добавленным элементам формы.
		Для Каждого ДобавляемыйЭлемент Из ДобавляемыеЭлементы Цикл
			
			Элемент = ДобавляемыйЭлемент.Элемент;
			Элемент.ПутьКДанным = Элемент.Имя;
			
			Форма[Элемент.ПутьКДанным] = ДобавляемыйЭлемент.ЗначениеРеквизита;
			
		КонецЦикла;
		
	КонецЕсли;
	// Конец БольничнаяАптека
	
КонецПроцедуры

// Дополнительная настройка доступности при изменении реквизита формы
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения
//  РеквизитПутьКДанным - Строка
//
Процедура ПанельАдминистрированияУстановкаДоступности(Форма, РеквизитПутьКДанным) Экспорт
	
	// БольничнаяАптека
	Элементы = Форма.Элементы;
	
	Если Форма.ИмяФормы = Метаданные.Обработки.ПанельАдминистрированияБПО.Формы.Настройки.ПолноеИмя() Тогда
		
		ИмяИспользоватьПодключаемоеОборудование = Метаданные.Константы.ИспользоватьПодключаемоеОборудование.Имя;
		Если РеквизитПутьКДанным = ИмяИспользоватьПодключаемоеОборудование Или Не ЗначениеЗаполнено(РеквизитПутьКДанным) Тогда
			
			ЗначениеИспользоватьПодключаемоеОборудование = Форма[ИмяИспользоватьПодключаемоеОборудование];
			
			ИменаЭлементовДоступность = Новый Массив;
			ИменаЭлементовДоступность.Добавить(Элементы.ГруппаРабочиеМестаПерваяСтрока.Имя);
			ИменаЭлементовДоступность.Добавить(Элементы.ГруппаОборудование.Имя);
			ИменаЭлементовДоступность.Добавить(Элементы.ГруппаФискальныеОперации.Имя);
			ИменаЭлементовДоступность.Добавить(Элементы.ГруппаПлатежныеОперации.Имя);
			
			Для Каждого ИмяЭлемента Из ИменаЭлементовДоступность Цикл
				ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, ИмяЭлемента, "Доступность", ЗначениеИспользоватьПодключаемоеОборудование);
			КонецЦикла;
			
		КонецЕсли;
		
		ИмяИспользоватьИнтеграциюСМобильнымПриложением = Метаданные.Константы.ИспользоватьИнтеграциюСМобильнымПриложением.Имя;
		Если РеквизитПутьКДанным = ИмяИспользоватьИнтеграциюСМобильнымПриложением Или Не ЗначениеЗаполнено(РеквизитПутьКДанным) Тогда
			
			ЗначениеИспользоватьИнтеграциюСМобильнымПриложением = Форма[ИмяИспользоватьИнтеграциюСМобильнымПриложением];
			
			ИменаЭлементовДоступность = Новый Массив;
			ИменаЭлементовДоступность.Добавить(Элементы.НастройкаИнтеграцииСМобильнымПриложением.Имя);
			
			Для Каждого ИмяЭлемента Из ИменаЭлементовДоступность Цикл
				ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, ИмяЭлемента, "Доступность", ЗначениеИспользоватьИнтеграциюСМобильнымПриложением);
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	// Конец БольничнаяАптека
	
КонецПроцедуры

// Позволяет заполнить пользовательские команды на Панели администрирования
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения
//  Команды - ТаблицаЗначений:
//   * Идентификатор - Строка
//   * Представление - Строка
//   * Подсказка - Строка
//   * ГруппаФормы - Неопределено, 
//                 - ГруппаФормы
//   * Важность - Строка
//   * Порядок - Число
//   * ФункциональныеОпции - Строка
//   * Менеджер - Строка
//   * Обработчик - Строка
//   * ДополнительныеПараметры - Структура
//   * ИмяФормы - Строка
//   * ПараметрыФормы - Структура
//                    - Неопределено
//   * ИмяПараметраФормы - Строка
//
Процедура ПриЗаполненииКомандПанелиАдминистрирования(Форма, Команды) Экспорт
	

	
КонецПроцедуры

#КонецОбласти 

#Область ОчередьФискальныхЧеков

// Завершение фискализация чека в очереди
//
// Параметры:
//  ИдентификаторФискальнойЗаписи - Строка - Идентификатор фискальной записи
//  ПараметрыФискализации - Структура - Параметры операции
//  ОборудованиеККТ - СправочникСсылка.ПодключаемоеОборудование -
//  РезультатФискализации - Структура - Результат Фискализации
//  РезультатВыполненияПакетнойОперации - Структура:
//    * Результат - Булево - Результат выполнения пакета операций.
//    * ОписаниеОшибки - ИнформацияОбОшибке - Описание ошибки выполнения пакета операции.
//    * РезультатВыполненияЭквайринговойОперации - См. МенеджерОборудованияКлиентСервер.ПараметрыВыполненияОперацииНаОборудовании
//    * РезультатФискализацииЧека - См. МенеджерОборудованияКлиентСервер.ПараметрыВыполненияОперацииНаОборудовании
//    * РезультатФискализацииЧекаВыдачи - См. МенеджерОборудованияКлиентСервер.ПараметрыВыполненияОперацииНаОборудовании
//    * РезультатФискализацииЧекаКоррекции - См. МенеджерОборудованияКлиентСервер.ПараметрыВыполненияОперацииНаОборудовании
//    * РезультатАварийнойОтменыОперации - См. МенеджерОборудованияКлиентСервер.ПараметрыВыполненияОперацииНаОборудовании
//    * ПараметрыЭквайринговойОперации - См. ОборудованиеЧекопечатающиеУстройстваКлиентСервер.ПараметрыПакетнойОперацииВОчередиЧеков
//    * ПараметрыПродажаСВыдачейНаличных - См. ОборудованиеЧекопечатающиеУстройстваКлиентСервер.ПараметрыПакетнойОперацииВОчередиЧеков
Процедура ФискализацияЧекаВОчереди(ИдентификаторФискальнойЗаписи, ПараметрыФискализации, ОборудованиеККТ, РезультатФискализации, РезультатВыполненияПакетнойОперации) Экспорт
	
КонецПроцедуры

// Завершение фискализация чека в очереди
//
// Параметры:
//  РеквизитыЧека - Структура - Данные документа основания.
//  СтатусДокументаИзменен - Булево - признак изменения статуса документа.
//
Процедура ПроверитьСтатусДокументаОснования(РеквизитыЧека, СтатусДокументаИзменен) Экспорт
	
	// БольничнаяАптека
	СтатусДокументаИзменен = Ложь;
	// Конец БольничнаяАптека
	
КонецПроцедуры

#КонецОбласти

// Обработчик события заполнения персональных данных.
//
// Параметры:
//  ПерсональныеДанные - Структура - Возвращаемый параметр, персональные данные.
//  СубъектПерсональныхДанных - ОпределяемыйТип.СубъектПерсональныхДанныхБПО - субъект персональных данных. 
//  ТипПерсональныхДанных - ПеречислениеСсылка.ТипыПерсональныхДанныхККТ - Тип персональных данных
//  НаДату - Дата - Дата, на которую необходимо получать персональные данные
//
Процедура ОбработкаЗаполненияПерсональныхДанных(ПерсональныеДанные, СубъектПерсональныхДанных, ТипПерсональныхДанных, НаДату) Экспорт
	
КонецПроцедуры

#Область ПродажаСВыдачейНаличных

// Процедура где требуется проверить достаточность наличных денежных средств в кассовом аппарате
//
// Параметры:
//   ИдентификаторККТ - СправочникСсылка.ПодключаемоеОборудование - ссылка на элемент КТТ
//   Сумма - Число - требуемая сумма для выдачи наличных
//   Отказ - Булево - если установить в Истина, тогда выдача наличных осуществляться не будет
Процедура ПроверитьДостаточностьНаличныхСредств(ИдентификаторККТ, Сумма, Отказ) Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область РаботаСФормойТоваровНСПК

// Процедура, где требуется заполнить дерево товаров по кодам ТРУ.
//
// Параметры:
//   ДеревоСертификатовЗначение - ДеревоЗначений - дерево значений для заполнения
//   КодыТоваровТРУ - ТаблицаЗначений - таблица значений с товарами и кодами ТРУ для поиска сопоставлений
Процедура ЗаполнитьДеревоТоваровПоКодамТРУ(ДеревоСертификатовЗначение, КодыТоваровТРУ) Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область ЛогированиеПлатежныхОпераций

// Возвращает доступность логирования платежных операций
//  
// Параметры:
//  ЛогированиеДоступно - Булево - Доступность логирования.
//  СтандартнаяОбработка - Булево - Стандартная обработка.
//
Процедура ДоступноЛогированиеПлатежныхОпераций(ЛогированиеДоступно, СтандартнаяОбработка) Экспорт
	
КонецПроцедуры

// Устанавливает период хранения платежных операций в регистре сведений
//
// Параметры:
//   ПериодХранения - ПеречислениеСсылка.ПериодХраненияИсторииПлатежныхОпераций
Процедура ПериодХраненияИсторииПлатежныхОпераций(ПериодХранения) Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область УстаревшиеПроцедурыИФункции

#Область ОборудованиеККТ

// Устарела. Перенесена в модуль МенеджерОборудованияКлиент
// Переопределяет доступное ККТ для фискализации чека.
//
// Параметры:
//  РеквизитыЧека - Структура - реквизиты фискального чека
//  СписокУстройств - Массив - Список доступных ККТ для фискализации
//  ИдентификаторУстройстваККТ - СправочникСсылка.ПодключаемоеОборудование - выбранное ККТ для фискализации
//
Процедура ДоступноеККТДляФискализации(РеквизитыЧека, СписокУстройств, ИдентификаторУстройстваККТ) Экспорт

КонецПроцедуры

#КонецОбласти

#Область РаботаСЭлементомФормы

// Устарела. Больше не используется
// Дополнительные переопределяемые действия с элементом формы 
// служит для учета специфики визуального отображения в зависимости от типа клиента.
//
// Параметры:
//  ЭлементУправления - ЭлементУправленияИнтерфейсом - элемент управления.
//  СтандартнаяОбработка - Булево - Стандартная обработка.
//
Процедура ПодготовитьЭлементУправления(ЭлементУправления, СтандартнаяОбработка) Экспорт
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецОбласти