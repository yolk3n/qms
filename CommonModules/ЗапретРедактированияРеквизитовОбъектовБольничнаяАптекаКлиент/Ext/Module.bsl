
////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС
#Область ПрограммныйИнтерфейс

// Вызывается в формах объектов для разблокировки заблокированных реквизитов.
// 
// Параметры:
//  Форма                    - Форма объекта
//  ИмяФормыРазблокировки    - Имя формы разблокировки
//  ОповещениеОРазблокировке - Описание оповещения после разблокировки
//
Процедура РазрешитьРедактированиеРеквизитовОбъекта(Форма, Знач ИмяФормыРазблокировки = "", ОповещениеОРазблокировке = Неопределено) Экспорт
	
	Если Форма.Объект.Ссылка.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	ЗаблокированныеРеквизиты = ЗапретРедактированияРеквизитовОбъектовКлиент.Реквизиты(Форма);
	Если ЗаблокированныеРеквизиты.Количество() > 0 Тогда
		
		Если ПустаяСтрока(ИмяФормыРазблокировки) Тогда
			ЧастиИмениФормы = СтрРазделить(Форма.ИмяФормы, ".");
			ЧастиИмениФормы[3] = "РазблокированиеРеквизитов";
			ИмяФормыРазблокировки = СтрСоединить(ЧастиИмениФормы, ".");
		КонецЕсли;
		
		ПараметрыРазблокировки = Новый Структура;
		ПараметрыРазблокировки.Вставить("Объект", Форма.Объект.Ссылка);
		ПараметрыРазблокировки.Вставить("ЗаблокированныеРеквизиты", ЗаблокированныеРеквизиты);
		
		ОткрытьФорму(
			ИмяФормыРазблокировки,
			ПараметрыРазблокировки,
			Форма,
			,
			,
			,
			ОповещениеОРазблокировке,
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	Иначе
		ЗапретРедактированияРеквизитовОбъектовКлиент.ПоказатьПредупреждениеВсеВидимыеРеквизитыРазблокированы();
	КонецЕсли;
	
КонецПроцедуры

// Запускает проверку использования объекта из форму разблокировки реквизитов объекта
//
// Параметры:
//  Форма - Управляемая форма - форма разблокировки реквизитов объекта
//  ПараметрыОбработчикаОжидания - возвращаемый параметр, заполняется параметрами обработчика ожидания
//  ИспользоватьЛокальнуюФункциюПроверки - Булево - если Истина, то будет вызван метод ПроверитьИспользованиеОбъекта, из менеджера объекта
//
Процедура ПроверитьИспользованиеОбъекта(Форма, ИспользоватьЛокальнуюФункциюПроверки = Ложь) Экспорт
	
	ДлительнаяОперация = ЗапретРедактированияРеквизитовОбъектовБольничнаяАптекаВызовСервера.ПроверитьИспользованиеОбъекта(
		Форма.Параметры.Объект,
		Форма.УникальныйИдентификатор,
		ИспользоватьЛокальнуюФункциюПроверки);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	ПараметрыОжидания.ПолучатьРезультат = Истина;
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ПроверитьИспользованиеОбъектаЗавершение", ЭтотОбъект, Форма);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
	
КонецПроцедуры

// Продолжение ПроверитьИспользованиеОбъекта
Процедура ПроверитьИспользованиеОбъектаЗавершение(РезультатЗадания, Форма) Экспорт
	
	Если РезультатЗадания = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если РезультатЗадания.Статус = "Ошибка" Тогда
		ВызватьИсключение РезультатЗадания.КраткоеПредставлениеОшибки;
	КонецЕсли;
	
	Если РезультатЗадания.Статус = "Выполнено" Тогда
		ОтобразитьРезультатПроверки(Форма, ПолучитьИзВременногоХранилища(РезультатЗадания.АдресРезультата));
	КонецЕсли;
	
КонецПроцедуры

// Разблокирует выбранные реквизиты в форме объекта
//
// Параметры:
//  Форма - Управляемая форма - форма разблокировки реквизитов объекта
//  РазблокируемыеРеквизиты - Массив - имена разблокируемых реквизитов, если Неопределено, то разблокируются все реквизиты
//
Процедура РазрешитьРедактирование(Форма, РазблокируемыеРеквизиты = Неопределено) Экспорт
	
	Если РазблокируемыеРеквизиты = Неопределено Тогда
		
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "ИменаРазблокируемыхРеквизитов") Тогда
			РазблокируемыеРеквизиты = Новый Массив;
			Для Каждого Реквизит Из Форма.ИменаРазблокируемыхРеквизитов Цикл
				
				Если Форма[Реквизит.Значение] Тогда
					РазблокируемыеРеквизиты.Добавить(Реквизит.Представление);
				КонецЕсли;
				
			КонецЦикла;
		ИначеЕсли ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "ЗаблокированныеРеквизиты") Тогда
			РазблокируемыеРеквизиты = Форма.ЗаблокированныеРеквизиты.ВыгрузитьЗначения();
		КонецЕсли;
	КонецЕсли;
	
	ВладелецФормы = Форма.ВладелецФормы;
	Если ВладелецФормы <> Неопределено И СтрНачинаетсяС(ВладелецФормы.ИмяФормы, СтрЗаменить(Форма.ИмяФормы, ".РазблокированиеРеквизитов", "")) Тогда
		Если РазблокируемыеРеквизиты = Неопределено Тогда
			РазблокируемыеРеквизиты = ЗапретРедактированияРеквизитовОбъектовКлиент.Реквизиты(ВладелецФормы);
		КонецЕсли;
		Если РазблокируемыеРеквизиты.Количество() > 0 Тогда
			ЗапретРедактированияРеквизитовОбъектовКлиент.УстановитьДоступностьЭлементовФормы(ВладелецФормы, РазблокируемыеРеквизиты);
		КонецЕсли;
	Иначе
		Если РазблокируемыеРеквизиты = Неопределено Тогда
			РазблокируемыеРеквизиты = Новый Массив;
			БлокируемыеРеквизиты = ЗапретРедактированияРеквизитовОбъектовБольничнаяАптекаВызовСервера.ПолучитьБлокируемыеРеквизитыОбъекта(Форма.ИмяФормы);
			Для Каждого Реквизит Из БлокируемыеРеквизиты Цикл
				Позиция = СтрНайти(Реквизит, ";");
				Если Позиция > 0 Тогда
					Реквизит = Лев(Реквизит, Позиция - 1);
				КонецЕсли;
				РазблокируемыеРеквизиты.Добавить(СокрЛП(Реквизит));
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	Форма.ЗакрыватьПриВыборе = Ложь;
	Форма.ОповеститьОВыборе(РазблокируемыеРеквизиты);
	Форма.Закрыть(РазблокируемыеРеквизиты);
	
КонецПроцедуры

#КонецОбласти // ПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

Процедура ОтобразитьРезультатПроверки(Форма, ЕстьСсылки)
	
	Если ЕстьСсылки Тогда
		ТекущаяСтраница = Форма.Элементы.ГруппаОбъектИспользуетсяОбъектИспользуется;
	Иначе
		ТекущаяСтраница = Форма.Элементы.ГруппаОбъектИспользуетсяОбъектНеИспользуется;
	КонецЕсли;
	
	Форма.Элементы.ГруппаОбъектИспользуетсяСтраницы.ТекущаяСтраница = ТекущаяСтраница;
	
КонецПроцедуры

#КонецОбласти // СлужебныеПроцедурыИФункции
