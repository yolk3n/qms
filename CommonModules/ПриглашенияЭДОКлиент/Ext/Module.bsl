
#Область СлужебныйПрограммныйИнтерфейс

Процедура ПринятьПриглашения(Приглашения, Форма, Оповещение) Экспорт
	
	ПриглашенияЭДОСлужебныйКлиент.ПринятьПриглашения(Приглашения, Форма, Оповещение);
	
КонецПроцедуры

Процедура ОтклонитьПриглашения(Приглашения, Форма, Оповещение) Экспорт
	
	ПриглашенияЭДОСлужебныйКлиент.ОтклонитьПриглашения(Приглашения, Форма, Оповещение);
	
КонецПроцедуры

Процедура ОтозватьПриглашения(Приглашения, Форма, Оповещение) Экспорт
	
	ПриглашенияЭДОСлужебныйКлиент.ОтозватьПриглашения(Приглашения, Форма, Оповещение);
	
КонецПроцедуры

// Открывает приглашение к обмену электронными документами.
// 
// Параметры:
// 	ИдентификаторОрганизации - Строка
// 	ИдентификаторКонтрагента - Строка
// 	Владелец - Произвольный
Процедура ОткрытьПриглашение(НатуральныеКлючиПриглашения, Владелец = Неопределено, Организация = Неопределено, Контрагент = Неопределено) Экспорт
	
	ПараметрыФормы = ПриглашенияЭДОСлужебныйКлиент.НовыеПараметрыФормыПриглашения();
	
	КлючПриглашения = ПриглашенияЭДОКлиентСервер.НовыйКлючПриглашения();
	КлючПриглашения.Ключ = ПриглашенияЭДОСлужебныйВызовСервера.КлючПриглашенияПоНатуральнымКлючам(НатуральныеКлючиПриглашения);
	КлючПриглашения.ИдентификаторОрганизации = НатуральныеКлючиПриглашения.ИдентификаторОрганизации;
	
	ПараметрыФормы.Ключ = ПриглашенияЭДОСлужебныйКлиент.КлючЗаписиПриглашения(КлючПриглашения);
	Если Не ЗначениеЗаполнено(ПараметрыФормы.Ключ) Тогда
		ПараметрыФормы.Вставить("Пригласить", Истина);
		ПараметрыФормы.Вставить("Организация", Организация);
		ПараметрыФормы.Вставить("Контрагент", Контрагент);
		ПараметрыФормы.Вставить("ИдентификаторОрганизации", НатуральныеКлючиПриглашения.ИдентификаторОрганизации);
		ПараметрыФормы.Вставить("ИдентификаторКонтрагента", НатуральныеКлючиПриглашения.ИдентификаторКонтрагента);
	КонецЕсли;
	ОткрытьФорму("РегистрСведений.ПриглашенияКОбменуЭлектроннымиДокументами.ФормаЗаписи", ПараметрыФормы);
	
КонецПроцедуры

// Открывает помощник отправки приглашения.
// 
// Параметры:
// 	ПараметрыОткрытия - см. НовыеПараметрыОткрытияПомощникаОтправкиПриглашения
Процедура ОткрытьПомощникОтправкиПриглашения(ПараметрыОткрытия, Оповещение) Экспорт
	
	ПриглашенияЭДОСлужебныйКлиент.ОткрытьПомощникОтправкиПриглашения(ПараметрыОткрытия, Оповещение);
	
КонецПроцедуры

// Возвращает параметры открытия помощника отправки приглашения.
// 
// Возвращаемое значение:
// 	Структура:
// * Абоненты - СписокЗначений
// * ОператорКонтрагента - Строка
// * ЭлектроннаяПочта - Строка
// * ИдентификаторКонтрагента - Строка
// * EmailОрганизации - Строка
// * ТекстПриглашения - Строка
// * Контрагент - ОпределяемыйТип.КонтрагентБЭД
// * ИдентификаторОрганизации - Строка
// * Организация - ОпределяемыйТип.Организация
// * РежимНастройки - Булево
// * РежимОткрытия - РежимОткрытияОкнаФормы
Функция НовыеПараметрыОткрытияПомощникаОтправкиПриглашения() Экспорт
	
	Возврат ПриглашенияЭДОСлужебныйКлиент.НовыеПараметрыОткрытияПомощникаОтправкиПриглашения();
	
КонецФункции

// Отправляет приглашения к обмену электронными документами.
// 
// Параметры:
// 	Приглашения - Массив из см. НовоеИсходящееПриглашение
// 	Форма - ФормаКлиентскогоПриложения - форма, из которой выполняется отправка
// 	Оповещение - ОписаниеОповещения - содержит описание процедуры, которая будет выполнена после отправки приглашений
//                                    со следующими параметрами:
//               * РезультатОтправки - Структура:
//                  ** Успех - Булево - было отправлено хотя бы одно приглашение
//                  ** КоличествоОтправленных - Число - количество отправленных приглашений
//                  ** КонтекстДиагностики - см. ОбработкаНеисправностейБЭДКлиент.НовыйКонтекстДиагностики
//               * ДополнительныеПараметры - Произвольный - значение, которое было указано при создании
//                                                          объекта ОписаниеОповещения.
Процедура ОтправитьПриглашения(Приглашения, Форма, Оповещение = Неопределено) Экспорт
	
	ПриглашенияЭДОСлужебныйКлиент.ОтправитьПриглашения(Приглашения, Форма, Оповещение);
	
КонецПроцедуры

// см. НовоеИсходящееПриглашение
Функция НовоеПриглашениеНаИдентификатор() Экспорт
	
	ТипПриглашения = ПредопределенноеЗначение("Перечисление.ТипыПриглашений.НаИдентификатор");
	Результат = НовоеИсходящееПриглашение(ТипПриглашения);
	Возврат Результат;
	
КонецФункции

// см. НовоеИсходящееПриглашение
Функция НовоеШироковещательноеПриглашение() Экспорт
	
	ТипПриглашения = ПредопределенноеЗначение("Перечисление.ТипыПриглашений.Широковещательное");
	Результат = НовоеИсходящееПриглашение(ТипПриглашения);
	Возврат Результат;
	
КонецФункции

// см. НовоеИсходящееПриглашение
Функция НоваяЗаявкаНаРоуминг() Экспорт
	
	ТипПриглашения = ПредопределенноеЗначение("Перечисление.ТипыПриглашений.ЗаявкаНаРоуминг");
	Результат = НовоеИсходящееПриглашение(ТипПриглашения);
	Возврат Результат;
	
КонецФункции

// Возвращает входящее приглашение.
// 
// Возвращаемое значение:
// 	Структура:
// * Статус - ПеречислениеСсылка.СтатусыПриглашений
// * ПричинаОтказа - Строка
// * СпособОбмена - ПеречислениеСсылка.СпособыОбменаЭД
// * Контрагент - ОпределяемыйТип.КонтрагентБЭД
// * ИдентификаторКонтрагента - Строка
// * ИдентификаторОрганизации - Строка
Функция НовоеВходящееПриглашение(КлючПриглашения = "") Экспорт
	
	Приглашение = ПриглашенияЭДОСлужебныйКлиент.НовоеПриглашение(
		ПриглашенияЭДОСлужебныйКлиентСервер.ВидПриглашенияВходящее());
	Приглашение.Вставить("КлючПриглашения", "");
	Приглашение.Вставить("СпособОбмена", ПредопределенноеЗначение("Перечисление.СпособыОбменаЭД.ПустаяСсылка"));
	Приглашение.Вставить("ПричинаОтказа", "");
	Приглашение.Вставить("Статус", ПредопределенноеЗначение("Перечисление.СтатусыПриглашений.ПустаяСсылка"));
	Приглашение.Вставить("НовыйКонтрагент", 0);
	Приглашение.Вставить("ГотовоКПринятию", Ложь);
	
	Возврат Приглашение;
	
КонецФункции

// Актуализирует ключ приглашения.
// 
// Параметры:
//  Приглашение - см. СинхронизацияЭДОКлиент.НовоеПриглашениеНаИдентификатор
Процедура АктуализироватьКлючПриглашенияПоНатуральнымКлючам(Приглашение) Экспорт
	
	ПриглашенияЭДОСлужебныйКлиент.АктуализироватьКлючПриглашенияПоНатуральнымКлючам(Приглашение);
	
КонецПроцедуры

#Область ОбработкаНеисправностей

Функция ЭтоОшибкаНенастроеннойСвязиСКонтрагентом(Ошибка) Экспорт
	
	Возврат ОбработкаНеисправностейБЭДКлиентСервер.ЭтоОшибкаДанногоВида(Ошибка,
		ПриглашенияЭДОСлужебныйКлиентСервер.ВидОшибкиНеНастроенаСвязьСКонтрагентом(
			ПредопределенноеЗначение("Перечисление.СтатусыПриглашений.Отклонено"), "Отправка"));
	
КонецФункции

#КонецОбласти

#Область ДляВызоваИзДругихПодсистем

// ЭлектронноеВзаимодействие.БазоваяФункциональность.ОбработкаНеисправностей

Процедура ОткрытьПриглашения(КонтекстДиагностики, ДополнительныеПараметры) Экспорт
	
	Ошибки = ОбработкаНеисправностейБЭДКлиентСервер.ПолучитьОшибки(КонтекстДиагностики);
	ДополнительныеДанные = ОбработкаНеисправностейБЭДКлиентСервер.ЗначенияСвойствОшибок(Ошибки, "ДополнительныеДанные");
	
	Приглашения = Новый Массив;
	Группировать = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ДополнительныеПараметры, "Группировать", Ложь);
	
	Для каждого Данные Из ДополнительныеДанные Цикл
		Если Группировать Тогда
			Если Приглашения.Найти(Данные.Приглашение) = Неопределено Тогда
				Приглашения.Добавить(Данные.Приглашение);
			КонецЕсли;
		Иначе 
			Приглашения.Добавить(Данные.Приглашение);
		КонецЕсли;
	КонецЦикла;
	
	СоответствиеОшибокДанным = Новый Соответствие;
	Для каждого Ошибка Из Ошибки Цикл
		Если СоответствиеОшибокДанным[Ошибка.ДополнительныеДанные.Приглашение] = Неопределено Тогда
			СоответствиеОшибокДанным.Вставить(Ошибка.ДополнительныеДанные.Приглашение,
				ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Ошибка));
		Иначе 
			СоответствиеОшибокДанным[Ошибка.ДополнительныеДанные.Приглашение].Добавить(Ошибка);
		КонецЕсли;
	КонецЦикла;
	
	ПараметрыИсправленияОшибок = ОбработкаНеисправностейБЭДКлиент.НовыеПараметрыИсправленияОшибок();
	ПараметрыИсправленияОшибок.СкрытьКнопкуПросмотреть = Истина;
	
	Если Ошибки.Количество() > 0 Тогда
		ПараметрыИсправленияОшибок.Заголовок = Ошибки[0].ВидОшибки.ЗаголовокПроблемы;
	КонецЕсли;
	
	Команда = ОбработкаНеисправностейБЭДКлиент.НовоеОписаниеКомандыФормыИсправленияОшибок();
	Команда.Заголовок = НСтр("ru = 'Открыть приглашение'");
	Команда.Обработчик = "ПриглашенияЭДОКлиент.ОткрытьПриглашениеНажатие";
	
	ПараметрыИсправленияОшибок.Команды.Добавить(Команда);
	
	ПараметрыИсправленияОшибок.ОбработчикСобытияВыбор = Команда;
	ПараметрыИсправленияОшибок.ДополнительныеПараметрыОбработчиков = СоответствиеОшибокДанным;
	
	ПараметрыПредставленияДанных = Новый Структура;
	ПараметрыПредставленияДанных.Вставить("ОбработчикПолученияПредставлений",
		"ПриглашенияЭДОСлужебный.ДанныеПриглашенийДляВыводаОшибок");
	
	ОбработкаНеисправностейБЭДКлиент.ИсправитьОшибки(Приглашения, ПараметрыИсправленияОшибок,
		ПараметрыПредставленияДанных);
	
КонецПроцедуры

Процедура ОткрытьПриглашениеНажатие(Приглашение, СоответствиеОшибокДанным) Экспорт
	
	Если ТипЗнч(Приглашение) = Тип("Массив") И Приглашение.Количество() Тогда
		Приглашение = Приглашение[0];
	КонецЕсли;
	
	ПараметрыИсправленияОшибок = Новый Структура;
	ПараметрыИсправленияОшибок.Вставить("ИсправленныеОшибки", СоответствиеОшибокДанным[Приглашение]);
	
	ПараметрыФормы = ПриглашенияЭДОСлужебныйКлиент.НовыеПараметрыФормыПриглашения();
	ПараметрыФормы.Ключ = Приглашение;
	ПараметрыФормы.ПараметрыИсправленияОшибок = ПараметрыИсправленияОшибок;
	ПриглашенияЭДОСлужебныйКлиент.ОткрытьПриглашение(ПараметрыФормы);
	
КонецПроцедуры

Процедура ВключитьОпциюАвтоматическогоСозданияКонтрагентов(КонтекстДиагностики, ДополнительныеПараметры) Экспорт
	
	Если НастройкиЭДОСлужебныйВызовСервера.ЕстьПравоНастройкиАвтоматическогоСозданияКонтрагентов() Тогда
		ПараметрыФормы = Новый Структура();
		ПараметрыФормы.Вставить("Раздел", "НастройкиЭДО");
		
		ОткрытаяФорма = ОткрытьФорму(
			"Обработка.ПанельАдминистрированияБЭД.Форма.ОбщиеНастройки",
			ПараметрыФормы,,Истина);
		
		ОткрытаяФорма.ТекущийЭлемент = ОткрытаяФорма.Элементы.Константа_СоздаватьКонтрагентовАвтоматически;
	Иначе
		ТекстПредупреждения =
			НСтр("ru = 'Недостаточно прав для включения опции. Обратитесь к администратору.'");
		ПоказатьПредупреждение(, ТекстПредупреждения, 30);
	КонецЕсли;
	
КонецПроцедуры

// Конец ЭлектронноеВзаимодействие.БазоваяФункциональность.ОбработкаНеисправностей

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Возвращает набор параметров нового приглашения.
// 
// Параметры:
//  ТипПриглашения - ПеречислениеСсылка.ТипыПриглашений - влияет на набор возвращаемых параметров. 
//  КлючПриглашения - Строка - если не указан, присваивается новый.
// 
// Возвращаемое значение:
// 	Структура:
// * ИдентификаторОрганизации - Строка
// * ИдентификаторКонтрагента - Строка
// * Организация - ОпределяемыйТип.Организация
// * Контрагент - ОпределяемыйТип.КонтрагентБЭД
// * EmailОрганизации - Строка
// * EmailКонтрагента - Строка
// * ПолучательКПП - Строка
// * ПолучательИНН - Строка
// * ОператорЭДО - Строка
// * СоздаватьНастройкиЭДО - Булево
// * ТребуетсяСоглашение - Булево
// * ТекстПриглашения - Строка
Функция НовоеИсходящееПриглашение(ТипПриглашения)
	
	Результат = Новый Структура;
	Результат.Вставить("КлючПриглашения", Строка(Новый УникальныйИдентификатор));
	Результат.Вставить("Вид", ПриглашенияЭДОСлужебныйКлиентСервер.ВидПриглашенияИсходящее());
	Результат.Вставить("Тип", ТипПриглашения);

	ТипыПриглашений = ПриглашенияЭДОСлужебныйКлиентСервер.ТипыПриглашений();
	Если ТипПриглашения = ТипыПриглашений.НаИдентификатор Тогда
		Результат.Вставить("ИдентификаторКонтрагента", "");
	ИначеЕсли ТипПриглашения = ТипыПриглашений.Широковещательное Тогда
		Результат.Вставить("EmailКонтрагента", "");
	ИначеЕсли ТипПриглашения = ТипыПриглашений.ЗаявкаНаРоуминг Тогда
		Результат.Вставить("ОператорЭДО", "");
		Результат.Вставить("ТребуетсяСоглашение", Ложь);
	КонецЕсли;

	Результат.Вставить("ИдентификаторОрганизации", "");
	Результат.Вставить("Организация");
	Результат.Вставить("Контрагент", Неопределено);
	Результат.Вставить("ПолучательИНН", "");
	Результат.Вставить("ПолучательКПП", "");
	Результат.Вставить("EmailОрганизации", "");
	Результат.Вставить("ТекстПриглашения", "");
	Результат.Вставить("СоздаватьНастройкиЭДО", Ложь);
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти