
////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС
#Область ПрограммныйИнтерфейс

// Проверяет необходимость обработки оповещения в форме
//
// Параметры
//	Форма - ФормаКлиентскогоПриложения
//	Источник - источник оповещения
//
// Возвращаемое значение
//	Булево - Истина, если требуется обработать оповещение от подключаемого оборудования
//
Функция ОбрабатыватьОповещение(Форма, Источник) Экспорт
	
	Возврат Источник = "ПодключаемоеОборудование" И Форма.ВводДоступен();
	
КонецФункции

// Определяет, поступило ли событие от сканера штрихкода и преобразует полученные данные к общему виду
//
// Параметры
//	Форма - ФормаКлиентскогоПриложения
//	ИмяСобытия
//	Параметр
//	Источник
//
// Возвращаемое значение
//	Булево - истина, если произошло сканирование штрихкода
//
Функция ОбработатьПолучениеДанныхОтСканераШтрихкода(Форма, ИмяСобытия, Параметр) Экспорт
	
	Если ИмяСобытия = "ScanData" Тогда
		
		Если Параметр[1] = Неопределено Тогда
			Штрихкод = Параметр[0]; // Достаем штрихкод из основных данных
		Иначе
			Штрихкод = Параметр[1][1]; // Достаем штрихкод из дополнительных данных
		КонецЕсли;
		
		Параметр = Штрихкод;
		
		Возврат Истина;
		
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

// Проверяет по идентификатору устройства, что оборудование подключено.
//
// Параметры:
//  ИдентификаторУстройства - Строка - идентификатор подключаемого оборудования.
//
// Возвращаемое значение:
//  УстройствоПодключено - Булево - признак того, что оборудование подключено.
//
Функция ОборудованиеПодключено(ИдентификаторУстройства) Экспорт
	
	ПодключенноеУстройство = МенеджерОборудованияКлиент.ПолучитьПодключенноеУстройство(ИдентификаторУстройства);
	
	УстройствоПодключено = ПодключенноеУстройство <> Неопределено;
	Возврат УстройствоПодключено;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Эквайринговый терминал
#Область ЭквайринговыйТерминал

// Подготовка параметров авторизации эквайрингового терминала.
//
// Параметры:
//  Сумма                - Число - сумма платежа.
//  ПределСуммы          - Число - максимальная сумма оплаты.
//  СписокВидовКарт      - СписокЗначений - вид платежной карты, обслуживаемой по договору эквайринга.
//  ПоказыватьНомерКарты - Булево - признак отображения номера карты.
//  Оповещение           - ОписаниеОповещения - содержит описание процедуры, которая будет вызвана при закрытии формы авторизации.
//
Процедура ВыполнитьАвторизациюЭТ(Сумма, ПределСуммы, СписокВидовКарт, ПоказыватьНомерКарты = Ложь, Оповещение) Экспорт
	
	// Предварительно авторизуем операцию
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("Сумма"               , Сумма);
	ПараметрыФормы.Вставить("ПределСуммы"         , ПределСуммы);
	ПараметрыФормы.Вставить("СписокТиповКарт"     , СписокВидовКарт);
	ПараметрыФормы.Вставить("ПоказыватьНомерКарты", ПоказыватьНомерКарты);
	
	ОткрытьФорму("Справочник.ПодключаемоеОборудование.Форма.ФормаАвторизацииЭТ", ПараметрыФормы,,,,, Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

#КонецОбласти // ЭквайринговыйТерминал

#КонецОбласти // ПрограммныйИнтерфейс
