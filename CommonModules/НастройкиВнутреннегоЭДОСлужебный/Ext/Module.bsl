
#Область СлужебныеПроцедурыИФункции

Функция ЗапросНастроекВнутреннегоЭДО(ИмяВременнойТаблицы, Отбор = Неопределено) Экспорт
	
	Если Отбор = Неопределено Тогда
		Отбор = НовыйОтборНастроекВнутреннегоЭДО();
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	НастройкиВнутреннегоЭДО.Организация,
	|	НастройкиВнутреннегоЭДО.ВидВнутреннегоДокумента,
	|	НастройкиВнутреннегоЭДО.Формировать,
	|	НастройкиВнутреннегоЭДО.ВидПодписи,
	|	НастройкиВнутреннегоЭДО.МаршрутПодписания,
	|	НастройкиВнутреннегоЭДО.ЭтоОсновнойВидДокумента
	|ПОМЕСТИТЬ ИмяВременнойТаблицы
	|ИЗ
	|	РегистрСведений.НастройкиВнутреннегоЭДО КАК НастройкиВнутреннегоЭДО
	|ГДЕ
	|	&ПоляУсловия";
	
	ПоляУсловия = Новый Массив;
	Если ЗначениеЗаполнено(Отбор.Организация) Тогда
		ПоляУсловия.Добавить(СтрШаблон("НастройкиВнутреннегоЭДО.Организация В (%1)", Отбор.Организация));
	КонецЕсли;
	
	ТекстЗапроса = ОбщегоНазначенияБЭД.ТекстЗапросаИзШаблона(ТекстЗапроса, ИмяВременнойТаблицы,
		"", ПоляУсловия);
	ОписаниеЗапроса = ОбщегоНазначенияБЭД.НовоеОписаниеЗапроса();
	ОписаниеЗапроса.Текст = ТекстЗапроса;
	
	Возврат ОписаниеЗапроса;
	
КонецФункции

Функция НовыйОтборНастроекВнутреннегоЭДО() Экспорт
	
	Отбор = Новый Структура;
	Отбор.Вставить("Организация", "");
	
	Возврат Отбор;
	
КонецФункции

Функция НастройкаВнутреннегоЭДО(Организация, ВидВнутреннегоДокумента = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НастройкиВнутреннегоЭДО.ВидПодписи КАК ВидПодписи,
		|	НастройкиВнутреннегоЭДО.ЭтоОсновнойВидДокумента КАК ЭтоОсновнойВидДокумента
		|ИЗ
		|	РегистрСведений.НастройкиВнутреннегоЭДО КАК НастройкиВнутреннегоЭДО
		|ГДЕ
		|	НастройкиВнутреннегоЭДО.Организация = &Организация
		|	И НастройкиВнутреннегоЭДО.ВидВнутреннегоДокумента = &ВидВнутреннегоДокумента";
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Если ЗначениеЗаполнено(ВидВнутреннегоДокумента) Тогда
		Запрос.УстановитьПараметр("ВидВнутреннегоДокумента", ВидВнутреннегоДокумента);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И НастройкиВнутреннегоЭДО.ВидВнутреннегоДокумента = &ВидВнутреннегоДокумента", "");
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Неопределено; 
	КонецЕсли;
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Настройка = Новый Структура;
	Настройка.Вставить("ВидПодписи");
	Настройка.Вставить("ЭтоОсновнойВидДокумента");
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Настройка, ВыборкаДетальныеЗаписи);
	КонецЦикла;
	
	Возврат Настройка;
	
КонецФункции

Функция ВидПодписиВнутреннегоЭДО(Организация) Экспорт
	
	Результат = Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	НастройкиВнутреннегоЭДО.Организация КАК Организация,
		|	СУММА(ВЫБОР
		|		КОГДА НастройкиВнутреннегоЭДО.Формировать
		|		И НастройкиВнутреннегоЭДО.ВидПодписи = ЗНАЧЕНИЕ(Перечисление.ВидыЭлектронныхПодписей.Простая)
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ) КАК ЕстьПростаяПодпись,
		|	СУММА(ВЫБОР
		|		КОГДА НастройкиВнутреннегоЭДО.Формировать
		|		И НастройкиВнутреннегоЭДО.ВидПодписи = ЗНАЧЕНИЕ(Перечисление.ВидыЭлектронныхПодписей.УсиленнаяКвалифицированная)
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ) КАК ЕстьУсиленнаяПодпись
		|ИЗ
		|	РегистрСведений.НастройкиВнутреннегоЭДО КАК НастройкиВнутреннегоЭДО
		|ГДЕ
		|	НастройкиВнутреннегоЭДО.Организация = &Организация
		|СГРУППИРОВАТЬ ПО
		|	НастройкиВнутреннегоЭДО.Организация";
	
	Запрос.УстановитьПараметр("Организация", Организация);
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		ВыборкаДетальныеЗаписи.Следующий();
		
		Если ВыборкаДетальныеЗаписи.ЕстьПростаяПодпись И ВыборкаДетальныеЗаписи.ЕстьУсиленнаяПодпись Тогда
			//ПоВидамДокументов
			Результат = Перечисления.ВидыЭлектронныхПодписей.ПустаяСсылка();
		ИначеЕсли ВыборкаДетальныеЗаписи.ЕстьПростаяПодпись Тогда
			Результат = Перечисления.ВидыЭлектронныхПодписей.Простая;
		ИначеЕсли ВыборкаДетальныеЗаписи.ЕстьУсиленнаяПодпись Тогда
			Результат = Перечисления.ВидыЭлектронныхПодписей.УсиленнаяКвалифицированная;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Процедура ЗаписатьНастройкиВнутреннегоЭДО(Организация, Настройки, НеактуальныеВидыДокументов = Неопределено, Отказ = Ложь) Экспорт 
	
	Если НеактуальныеВидыДокументов = Неопределено Тогда
		НеактуальныеВидыДокументов = Новый Массив;
	КонецЕсли;
	
	НаборЗаписей = РегистрыСведений.НастройкиВнутреннегоЭДО.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Организация.Установить(Организация);
		
	НачатьТранзакцию();
	
	Попытка
		ОбщегоНазначенияБЭД.УстановитьУправляемуюБлокировкуПоНаборуЗаписей(НаборЗаписей);
		
		НовыеНастройки = НаборЗаписей.ВыгрузитьКолонки();
		Для каждого Настройка Из Настройки Цикл
			ВидВнутреннегоДокумента = ЭлектронныеДокументыЭДО.НайтиСоздатьВидВнутреннегоДокумента(
				Настройка.ИдентификаторОбъектаУчета, Настройка.КомандаПечати);
			НоваяСтрока = НовыеНастройки.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Настройка);
			НоваяСтрока.ВидВнутреннегоДокумента = ВидВнутреннегоДокумента;
		КонецЦикла; 
		
		НаборЗаписей.Загрузить(НовыеНастройки);
		НаборЗаписей.Записать();
		
		Для каждого ВидДокумента Из НеактуальныеВидыДокументов Цикл
			ОбщегоНазначенияБЭД.УстановитьУправляемуюБлокировкуПоСсылке(ВидДокумента);
			ВидДокументаОбъект = ВидДокумента.ПолучитьОбъект();
			ВидДокументаОбъект.УстановитьПометкуУдаления(Истина, Ложь);
		КонецЦикла;
		ЗафиксироватьТранзакцию();
		
	Исключение
		ОтменитьТранзакцию();
		Отказ = Истина;
		ИмяСобытия = НСтр("ru = 'Запись настроек внутреннего электронного документооборота'", ОбщегоНазначения.КодОсновногоЯзыка());
		ЗаписьЖурналаРегистрации(ИмяСобытия,
			УровеньЖурналаРегистрации.Ошибка,,, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры

Процедура УдалитьНастройкуВнутреннегоЭДО(Организация) Экспорт
	
	НаборЗаписей = РегистрыСведений.НастройкиВнутреннегоЭДО.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Организация.Установить(Организация);
	
	НачатьТранзакцию();
	
	Попытка
		// Попытка удаления. Управляемую блокировку устанавливать нет необходимости.
		НаборЗаписей.Записать();
		
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ИмяСобытия = НСтр("ru = 'Удаление настройки внутреннего документооборота'", ОбщегоНазначения.КодОсновногоЯзыка());
		ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Ошибка,,, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры

Функция НоваяТаблицаНастроекВнутреннегоЭДО() Экспорт 
	
	Таблица = РегистрыСведений.НастройкиВнутреннегоЭДО.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	Таблица.Колонки.Добавить("КомандаПечати");
	Таблица.Колонки.Добавить("ИдентификаторОбъектаУчета");
	
	Таблица.Колонки.Удалить("ВидВнутреннегоДокумента");
	
	Возврат Таблица;
	
КонецФункции

Функция ДобавитьНастройкуВнутреннегоЭДО(ПараметрыНастройки) Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("Организация");
	Результат.Вставить("ВидВнутреннегоДокумента");
	Результат.Вставить("ВидПодписи");
	Результат.Вставить("МаршрутПодписания");
	Результат.Вставить("Формировать");
	Результат.Вставить("ЭтоОсновнойВидДокумента");
	
	НачатьТранзакцию();
	Попытка
		
		ВидВнутреннегоДокумента = ЭлектронныеДокументыЭДО.НайтиСоздатьВидВнутреннегоДокумента(
			ПараметрыНастройки.ИдентификаторОбъектаУчета, ПараметрыНастройки.КомандаПечати);
		
		НаборЗаписей = РегистрыСведений.НастройкиВнутреннегоЭДО.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Организация.Установить(ПараметрыНастройки.Организация);
		
		ОбщегоНазначенияБЭД.УстановитьУправляемуюБлокировкуПоНаборуЗаписей(НаборЗаписей);
		
		НаборЗаписей.Прочитать();
		
		Если ПараметрыНастройки.ЭтоОсновнойВидДокумента Тогда
			
			ВидыВнутреннихДокументов = Новый Массив;
			Для каждого Запись Из НаборЗаписей Цикл
				Если ВидыВнутреннихДокументов.Найти(Запись.ВидВнутреннегоДокумента) = Неопределено Тогда
					ОбщегоНазначенияБЭД.УстановитьУправляемуюБлокировкуПоСсылке(Запись.ВидВнутреннегоДокумента);
					ВидыВнутреннихДокументов.Добавить(Запись.ВидВнутреннегоДокумента);
				КонецЕсли;
			КонецЦикла;
			
			ВидыВнутреннихДокументов.Добавить(ВидВнутреннегоДокумента);
			ОбщегоНазначенияБЭД.УстановитьУправляемуюБлокировкуПоСсылке(ВидВнутреннегоДокумента);
			
			ВыборкаВидыДокументов = ДанныеВидовВнутреннихДокументов(ВидыВнутреннихДокументов);
			ВыборкаВидыДокументов.НайтиСледующий(ВидВнутреннегоДокумента, "Ссылка");
			ВыборкаВидыДокументов.Сбросить();
			
			ИдентификаторОбъектаУчетаНовойНастройки = ВыборкаВидыДокументов.ИдентификаторОбъектаУчета;
			Для каждого Запись Из НаборЗаписей Цикл
				ВыборкаВидыДокументов.НайтиСледующий(Запись.ВидВнутреннегоДокумента, "Ссылка");
				Если ВыборкаВидыДокументов.ИдентификаторОбъектаУчета = ИдентификаторОбъектаУчетаНовойНастройки Тогда
					Запись.ЭтоОсновнойВидДокумента = Ложь;
				КонецЕсли;
				ВыборкаВидыДокументов.Сбросить();
			КонецЦикла;
		КонецЕсли;
		
		Запись = НаборЗаписей.Добавить();
		Запись.Организация = ПараметрыНастройки.Организация;
		Запись.ВидВнутреннегоДокумента = ВидВнутреннегоДокумента;
		Запись.ВидПодписи = ПараметрыНастройки.ВидПодписи;
		Запись.МаршрутПодписания = ПараметрыНастройки.МаршрутПодписания;
		Запись.Формировать = Истина;
		Запись.ЭтоОсновнойВидДокумента = ПараметрыНастройки.ЭтоОсновнойВидДокумента;
		НаборЗаписей.Записать();
		
		ЗаполнитьЗначенияСвойств(Результат, Запись);
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		Информация = ИнформацияОбОшибке();
		ЭлектронноеВзаимодействие.ОбработатьОшибку(НСтр("ru = 'Создание настроек внутреннего электронного документооборота'"),
			ПодробноеПредставлениеОшибки(Информация), КраткоеПредставлениеОшибки(Информация));
		ВызватьИсключение;
	КонецПопытки;
	
	Возврат Результат;
	
КонецФункции

Функция ДанныеВидовВнутреннихДокументов(ВидыВнутреннихДокументов) Экспорт
	
	Запросы = Новый Массив;
	
	Отбор = ЭлектронныеДокументыЭДО.НовыйОтборВидовДокументов();
	Отбор.Ссылка = "&Ссылка";
	ЗапросВидовДокументов = ЭлектронныеДокументыЭДО.ЗапросВидовДокументов("ВидыДокументовЭДО", Отбор);
	Запросы.Добавить(ЗапросВидовДокументов);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВидыДокументовЭДО.Ссылка,
	|	ВидыДокументовЭДО.ИдентификаторОбъектаУчета,
	|	ВидыДокументовЭДО.ИдентификаторКомандыПечати
	|ИЗ
	|	ВидыДокументовЭДО КАК ВидыДокументовЭДО";
			
	ИтоговыйЗапрос = ОбщегоНазначенияБЭД.СоединитьЗапросы(Запрос, Запросы);
	ИтоговыйЗапрос.УстановитьПараметр("Ссылка", ВидыВнутреннихДокументов);
	
	ВыборкаВидыДокументов = ИтоговыйЗапрос.Выполнить().Выбрать();
	
	Возврат ВыборкаВидыДокументов;
	
КонецФункции

Функция ШаблонУведомленияОбИспользованииПЭП(Организация, СписокПользователей) Экспорт
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	Макет = Обработки.НастройкиВнутреннегоЭДО.ПолучитьМакет(СтрШаблон("ШаблонУведомленияОбИспользованииПЭП_%1", 
		ОбщегоНазначения.КодОсновногоЯзыка()));	
	
	ДанныеОрганизации = ИнтеграцияЭДО.РегистрационныеДанныеОрганизации(Организация);

	ДанныеОрганизацииПараметры = ЗначенияПараметровШаблонаПоложенияОбИспользованииПЭП(ДанныеОрганизации);
	
	Попытка
		Область = Макет.ПолучитьОбласть("Уведомление");
		
		ДатаВступленияВСилу = Формат(ТекущаяДатаСеанса(), "ДЛФ=D");

		Для Каждого Пользователь Из СписокПользователей Цикл
			
			Если Не ЗначениеЗаполнено(Пользователь) Тогда
				Продолжить;	
			КонецЕсли;
			
			ДанныеСотрудника = ИнтеграцияЭДО.СведенияФизЛицаПользователя(Пользователь, Организация);
			
			ЗначенияПараметров = Новый Структура;
			ЗначенияПараметров.Вставить("ФИОСотрудника", ФизическиеЛицаКлиентСервер.ФамилияИнициалы(
				ДанныеСотрудника.ИмяПолное));
			ЗначенияПараметров.Вставить("НаименованиеОрганизации", ДанныеОрганизацииПараметры.НаименованиеОрганизации);
			ЗначенияПараметров.Вставить("ДатаВступленияВСилу", ДатаВступленияВСилу);
			
			ЗаполнитьЗначенияСвойств(Область.Параметры, ЗначенияПараметров);
			
			ТабличныйДокумент.Вывести(Область);
			
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
		КонецЦикла;
		
	Исключение
		ТекстОшибки = НСтр("ru = 'Не удалось заполнить значения параметров шаблона положения об использовании простой ЭП причине:'")
			+ Символы.ПС + ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ВызватьИсключение ТекстОшибки;
	КонецПопытки;

	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ЗначенияПараметровШаблонаПоложенияОбИспользованииПЭП(ДанныеОрганизации)
	
	НаименованиеОрганизации = "";

	ЗначениеСвойства = Неопределено;
	Если ДанныеОрганизации.Свойство("Наименование", ЗначениеСвойства)
		И ЗначениеЗаполнено(ЗначениеСвойства) Тогда;
		НаименованиеОрганизации = ЗначениеСвойства;
	КонецЕсли;
	
	ЧастиИмени = Новый Структура;
	ЧастиИмени.Вставить("Фамилия",  ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ДанныеОрганизации, "Фамилия", ""));
	ЧастиИмени.Вставить("Имя",      ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ДанныеОрганизации, "Имя", ""));
	ЧастиИмени.Вставить("Отчество", ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ДанныеОрганизации, "Отчество", ""));
	
	РуководительФИО = ФизическиеЛицаКлиентСервер.ФамилияИнициалы(ЧастиИмени);
	
	ТекущаяДата = Формат(ТекущаяДатаСеанса(), "ДФ='дд.ММ.гггг'");
	
	ЗначенияПараметров = Новый Структура;
	ЗначенияПараметров.Вставить("НаименованиеОрганизации", НаименованиеОрганизации); 
	ЗначенияПараметров.Вставить("РуководительДолжность",
		ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ДанныеОрганизации, "Должность", ""));
	ЗначенияПараметров.Вставить("РуководительФИО", РуководительФИО);
	ЗначенияПараметров.Вставить("ТекущаяДата", ТекущаяДата);
	ЗначенияПараметров.Вставить("НазваниеКонфигурации", Метаданные.Представление());
	
	Возврат ЗначенияПараметров;
	
КонецФункции

Функция ШаблонПоложенияОбИспользованииПЭП(Параметры) Экспорт
	
	ПечатныеФормы = Новый Соответствие;
	
	Макет = Обработки.НастройкиВнутреннегоЭДО.ПолучитьМакет(СтрШаблон("ШаблонПоложенияОбИспользованииПЭП_%1", 
		ОбщегоНазначения.КодОсновногоЯзыка()));
	
	МакетУведомления = Обработки.НастройкиВнутреннегоЭДО.ПолучитьМакет(СтрШаблон("ШаблонУведомленияОбИспользованииПЭП_%1", 
		ОбщегоНазначения.КодОсновногоЯзыка()));	
	
	ДанныеОрганизации = ИнтеграцияЭДО.РегистрационныеДанныеОрганизации(Параметры.Организация);
	
	Попытка
		
		ТабличныйДокумент = Новый ТабличныйДокумент;
		Область = Макет.ПолучитьОбласть("Приказ");
		ЗаполнитьЗначенияСвойств(Область.Параметры, Параметры);
		ТабличныйДокумент.Вывести(Область);	
		ПечатныеФормы.Вставить("Приказ", ТабличныйДокумент);
		
		ТабличныйДокумент = Новый ТабличныйДокумент;
		Область = Макет.ПолучитьОбласть("ПриложениеКПриказу");
		ЗаполнитьЗначенияСвойств(Область.Параметры, Параметры);
		ТабличныйДокумент.Вывести(Область);	
		ПечатныеФормы.Вставить("ПриложениеКПриказу", ТабличныйДокумент);
		
		ТабличныйДокумент = Новый ТабличныйДокумент;
		Область = Макет.ПолучитьОбласть("Приложение1");
		ЗаполнитьЗначенияСвойств(Область.Параметры, Параметры);
		ТабличныйДокумент.Вывести(Область);	
		ПечатныеФормы.Вставить("Приложение1", ТабличныйДокумент);

		ТабличныйДокумент = Новый ТабличныйДокумент;
		Область = МакетУведомления.ПолучитьОбласть("Уведомление");
		
		ДатаВступленияВСилу = Формат(ТекущаяДатаСеанса(), "ДЛФ=D");
		ЗначенияПараметров = Новый Структура;
		ЗначенияПараметров.Вставить("ФИОСотрудника", НСтр("ru = 'Ф.И.О. сотрудника'"));
		ЗначенияПараметров.Вставить("НаименованиеОрганизации", ДанныеОрганизации.Наименование);
		ЗначенияПараметров.Вставить("ДатаВступленияВСилу", ДатаВступленияВСилу);
		
		ЗаполнитьЗначенияСвойств(Область.Параметры, ЗначенияПараметров); 
		ТабличныйДокумент.Вывести(Область);	
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		ПечатныеФормы.Вставить("Приложение2", ТабличныйДокумент);

	Исключение
		ТекстОшибки = НСтр("ru = 'Не удалось заполнить значения параметров шаблона положения об использовании простой ЭП причине:'") + Символы.ПС + ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ВызватьИсключение ТекстОшибки;
	КонецПопытки;
	
	Возврат ПечатныеФормы;
	
КонецФункции

#КонецОбласти