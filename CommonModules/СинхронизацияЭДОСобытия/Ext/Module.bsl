
#Область СлужебныйПрограммныйИнтерфейс

// Вызывается при удалении учетной записи электронного документооборота.
// 
// Параметры:
// 	ИдентификаторУчетнойЗаписи - Строка
Процедура ПриУдаленииУчетнойЗаписи(ИдентификаторУчетнойЗаписи) Экспорт
	
	НастройкиЭДО.ПриУдаленииУчетнойЗаписи(ИдентификаторУчетнойЗаписи);
	СинхронизацияЭДО.ПриУдаленииУчетнойЗаписи(ИдентификаторУчетнойЗаписи);
	РаботаСАбонентамиЭДО.ПриУдаленииУчетнойЗаписи(ИдентификаторУчетнойЗаписи);
	ПриглашенияЭДО.ПриУдаленииУчетнойЗаписи(ИдентификаторУчетнойЗаписи);
	ОповещенияОСобытияхЭДО.ПриУдаленииУчетнойЗаписи(ИдентификаторУчетнойЗаписи);
	
КонецПроцедуры

// Вызывается после отправки объекта электронного документооборота.
// 
// Параметры:
// 	Объект - Произвольный - см. свойство Объект элемента коллекции СинхронизацияЭДО.НовыеДанныеОбъектов
// 	ТранспортныйКонтейнер - ДокументСсылка.ТранспортныйКонтейнерЭДО
// 	ОшибкаПередачи - Неопределено, См. СинхронизацияЭДО.НоваяОшибкаПередачи
// 	КонтекстДиагностики - см. ОбработкаНеисправностейБЭД.НовыйКонтекстДиагностики
// 	Отказ - Булево
// 	ДополнительныеПараметры - см. СинхронизацияЭДО.ОтправитьОбъекты.ДополнительныеПараметры
Процедура ПослеОтправкиОбъекта(Объект, ТранспортныйКонтейнер, ОшибкаПередачи, КонтекстДиагностики, Отказ,
	ДополнительныеПараметры) Экспорт
	
	НачатьТранзакцию();
	Попытка
		
		ЭлектронныеДокументыЭДО.ПослеОтправкиОбъекта(Объект, ТранспортныйКонтейнер, ОшибкаПередачи,
			КонтекстДиагностики, Отказ, ДополнительныеПараметры);
		
		СинхронизацияЭДО.ПослеОтправкиОбъекта(Объект, ТранспортныйКонтейнер, ОшибкаПередачи,
			КонтекстДиагностики, Отказ);
			
		Если ОбщегоНазначения.ПодсистемаСуществует("ЭлектронноеВзаимодействие.ОбменСГИСЭПД") Тогда
			МодульОбменСГИСЭПД = ОбщегоНазначения.ОбщийМодуль("ОбменСГИСЭПД");	
			МодульОбменСГИСЭПД.ПослеОтправкиОбъекта(Объект, ТранспортныйКонтейнер, ОшибкаПередачи, КонтекстДиагностики, Отказ,
				ДополнительныеПараметры);
		КонецЕсли;
		
		Если Отказ Тогда
			ОтменитьТранзакцию();
		Иначе
			ЗафиксироватьТранзакцию();
		КонецЕсли;
	Исключение
		ОтменитьТранзакцию();
		ИмяСобытия = НСтр("ru = 'Выполнение обработчиков подписки ""СинхронизацияЭДОСобытия.ПослеОтправкиОбъекта""'",
			ОбщегоНазначения.КодОсновногоЯзыка());
		ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Ошибка, , ,
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры

// Вызывается после отправки всех объектов электронного документооборота.
// 
// Параметры:
// 	РезультатОтправки - см. СинхронизацияЭДОКлиентСервер.НовыйРезультатОтправкиОбъектов
// 	КонтекстДиагностики - см. ОбработкаНеисправностейБЭД.НовыйКонтекстДиагностики
Процедура ПослеОтправкиОбъектов(РезультатОтправки, КонтекстДиагностики) Экспорт
	
	ЭлектронныеДокументыЭДО.ПослеОтправкиОбъектов(РезультатОтправки, КонтекстДиагностики);
	
КонецПроцедуры

Процедура ПослеИзмененияСтатусаПриглашения(ИдентификаторОрганизации, ИдентификаторКонтрагента, Статус, КонтекстДиагностики) Экспорт
	
	ЭлектронныеДокументыЭДО.ПослеИзмененияСтатусаПриглашения(ИдентификаторОрганизации, ИдентификаторКонтрагента,
		Статус, КонтекстДиагностики);
	
КонецПроцедуры

// Вызывается в момент исправления ошибки передачи, выполняется в транзакции с удалением ошибки.
// 
// Параметры:
// 	ИдентификаторДокументооборота - Строка
// 	КонтекстДиагностики - см. ОбработкаНеисправностейБЭД.НовыйКонтекстДиагностики
Процедура ПриИсправленииОшибкиПередачи(ИдентификаторДокументооборота, КонтекстДиагностики) Экспорт
	
	ЭлектронныеДокументыЭДО.ПриИсправленииОшибкиПередачи(ИдентификаторДокументооборота, КонтекстДиагностики);
	
КонецПроцедуры

// См. ОбменСКонтрагентамиИнтеграцияСобытия.ПриДобавленииОбработчиковОбновления.
Процедура ПриДобавленииОбработчиковОбновления(Обработчики) Экспорт
	
	СинхронизацияЭДОСлужебный.ПриДобавленииОбработчиковОбновления(Обработчики);
	ТранспортныеКонтейнерыЭДО.ПриДобавленииОбработчиковОбновления(Обработчики);
	
КонецПроцедуры

// Вызывается при изменении статуса транспортного контейнера, выполняется в транзакции.
// 
// Параметры:
// 	Контейнер - ДокументСсылка.ТранспортныйКонтейнерЭДО
// 	НовыйСтатус - ПеречислениеСсылка.СтатусыТранспортныхСообщенийБЭД
// 	КонтекстДиагностики - см. ОбработкаНеисправностейБЭД.НовыйКонтекстДиагностики
Процедура ПриИзмененииСтатусаТранспортногоКонтейнера(Контейнер, НовыйСтатус, КонтекстДиагностики) Экспорт
	
	ЭлектронныеДокументыЭДО.ПриИзмененииСтатусаТранспортногоКонтейнера(Контейнер, НовыйСтатус, КонтекстДиагностики);
	
КонецПроцедуры

#КонецОбласти
