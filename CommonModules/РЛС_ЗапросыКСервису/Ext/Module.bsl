//комментарий

#Область CLASSES

    //Возвращает список, относящийся к классификатору, указанному в classcode
	Функция GET_classes(classcode) Экспорт 
		АдресДанных = РЛС_Служебный.ПолучитьАдресДанных("/api/classes?classcode=", classcode);
		ДП = РЛС_Служебный.ПодготовитьАрхивДляПолученияОтвета(РЛС_Служебный.УстановитьДанныеПодключения());
		Ответ = КлиентHTTPКлиентСервер.Получить(АдресДанных, , ДП);	
		Возврат РЛС_Служебный.ПрочитатьФайлИзАрхива(ДП);	
	КонецФункции
	
	//Возвращает особые признаки препарата prep_id
	Функция GET_classes_prep(prep_id) Экспорт
		АдресДанных = РЛС_Служебный.ПолучитьАдресДанных("/api/classes_prep?prep_id="+prep_id);
		ДП = РЛС_Служебный.УстановитьДанныеПодключения();
		КлиентHTTPКлиентСервер.ТелоОтветаКакJSON(ДП);
		Ответ = КлиентHTTPКлиентСервер.Получить(АдресДанных, , ДП);
		Возврат Ответ.Тело;
	КонецФункции
	
	//Классификация препарата, определяемого по prep_id из номенклатурного блока Inventory, с указанием кодов и названий узлов классификаторов.
	Функция GET_classes_prep_marks(prep_id) Экспорт
		АдресДанных = РЛС_Служебный.ПолучитьАдресДанных("/api/classes_prep_marks?prep_id="+Формат(prep_id,"ЧГ=0"));
		ДП = РЛС_Служебный.УстановитьДанныеПодключения();
		КлиентHTTPКлиентСервер.ТелоОтветаКакJSON(ДП);
		Ответ = КлиентHTTPКлиентСервер.Получить(АдресДанных, , ДП);
		Возврат Ответ.Тело;
	КонецФункции
	

#КонецОбласти

#Область INVENTORY

    //Возвращает подробно структурированную информацию по packing_id, или по всей номенклатуре, если параметры не указаны
	Функция GET_inventory_complete(НазваниеПараметра="", ЗначениеПараметра="") Экспорт
		АдресДанных = РЛС_Служебный.ПолучитьАдресДанных("/api/inventory_complete");
		Если НазваниеПараметра = "packing_id" Тогда
			АдресДанных = АдресДанных + "?packing_id="+ЗначениеПараметра;
		ИначеЕсли НазваниеПараметра = "OnDate" Тогда
			АдресДанных = АдресДанных + "?OnDate="+ЗначениеПараметра;
		ИначеЕсли НазваниеПараметра = "tn_like" Тогда
			АдресДанных = АдресДанных + "?tn_like="+ЗначениеПараметра;
		ИначеЕсли НазваниеПараметра = "packing_id" Тогда
			АдресДанных = АдресДанных + "?packing_id="+ЗначениеПараметра;
		ИначеЕсли НазваниеПараметра = "ean" Тогда
			АдресДанных = АдресДанных + "?ean="+ЗначениеПараметра; 
		ИначеЕсли НазваниеПараметра = "regnum" Тогда
			АдресДанных = АдресДанных + "?regnum="+ЗначениеПараметра;
		Иначе 
			ДП = РЛС_Служебный.ПодготовитьАрхивДляПолученияОтвета(РЛС_Служебный.УстановитьДанныеПодключения());
			Ответ = КлиентHTTPКлиентСервер.Получить(АдресДанных, , ДП);	
			Возврат РЛС_Служебный.ПрочитатьФайлИзАрхива(ДП);
		КонецЕсли;
		ДП = РЛС_Служебный.УстановитьДанныеПодключения();
		КлиентHTTPКлиентСервер.ТелоОтветаКакJSON(ДП);
		Ответ = КлиентHTTPКлиентСервер.Получить(АдресДанных, , ДП);
		Возврат Ответ.Тело;
	КонецФункции
	
	//Возвращает список видов упаковок
	Функция GET_dict_pack() Экспорт
		АдресДанных = РЛС_Служебный.ПолучитьАдресДанных("/api/dict_pack");
		ДП = РЛС_Служебный.ПодготовитьАрхивДляПолученияОтвета(РЛС_Служебный.УстановитьДанныеПодключения());
		Ответ = КлиентHTTPКлиентСервер.Получить(АдресДанных, , ДП);	
		Возврат РЛС_Служебный.ПрочитатьФайлИзАрхива(ДП);
	КонецФункции
	
	//Вовзращает список единиц имзерения
	Функция GET_dict_units() Экспорт
		АдресДанных = РЛС_Служебный.ПолучитьАдресДанных("/api/dict_units");
		ДП = РЛС_Служебный.ПодготовитьАрхивДляПолученияОтвета(РЛС_Служебный.УстановитьДанныеПодключения());
		Ответ = КлиентHTTPКлиентСервер.Получить(АдресДанных, , ДП);	
		Возврат РЛС_Служебный.ПрочитатьФайлИзАрхива(ДП);
	КонецФункции
			
#КонецОбласти 

#Область MAPPING

 	Функция GET_mapping_esklp(klp) Экспорт
		АдресДанных = РЛС_Служебный.ПолучитьАдресДанных("/api/mapping_esklp?klp="+klp);
		ДП = РЛС_Служебный.УстановитьДанныеПодключения();
		КлиентHTTPКлиентСервер.ТелоОтветаКакJSON(ДП);
		Ответ = КлиентHTTPКлиентСервер.Получить(АдресДанных, , ДП);
		Возврат Ответ.Тело;
	КонецФункции	

#КонецОбласти   

Функция GET_operational_lp_prices(ШтрихКод) Экспорт
		АдресДанных = РЛС_Служебный.ПолучитьАдресДанных("/api/operational_lp_prices?ean="+ШтрихКод);
		ДП = РЛС_Служебный.УстановитьДанныеПодключения();
		КлиентHTTPКлиентСервер.ТелоОтветаКакJSON(ДП);
		Ответ = КлиентHTTPКлиентСервер.Получить(АдресДанных, , ДП);
		Возврат Ответ.Тело;
КонецФункции
	
Функция GET_operational_rejectedseries(НомерРЛС) Экспорт
		АдресДанных = РЛС_Служебный.ПолучитьАдресДанных("/api/operational_rejectedseries?packing_id="+НомерРЛС);
		ДП = РЛС_Служебный.УстановитьДанныеПодключения();
		КлиентHTTPКлиентСервер.ТелоОтветаКакJSON(ДП);
		Ответ = КлиентHTTPКлиентСервер.Получить(АдресДанных, , ДП);
		Возврат Ответ.Тело;
КонецФункции 
	
Функция GET_inventory_pics(ИмяКартинки) Экспорт
	
	АдресДанных = РЛС_Служебный.ПолучитьАдресДанных("/api/inventory_pics?picname="+ИмяКартинки);
	ДП = РЛС_Служебный.УстановитьДанныеПодключения();
	ИмяФайла = ПолучитьИмяВременногоФайла(ОбщегоНазначенияКлиентСервер.ПолучитьРасширениеИмениФайла(ИмяКартинки));
	КлиентHTTPКлиентСервер.УстановитьИмяВыходногоФайла(ДП, ИмяФайла); 
	Ответ = КлиентHTTPКлиентСервер.Получить(АдресДанных, , ДП);
    Возврат Ответ; 
	
КонецФункции  

Функция GET_inventory_components(prep_id) Экспорт
		АдресДанных = РЛС_Служебный.ПолучитьАдресДанных("/api/inventory_components?prep_id="+Формат(prep_id,"ЧГ=0"));
		ДП = РЛС_Служебный.УстановитьДанныеПодключения();
		КлиентHTTPКлиентСервер.ТелоОтветаКакJSON(ДП);
		Ответ = КлиентHTTPКлиентСервер.Получить(АдресДанных, , ДП);
		Возврат Ответ.Тело;
КонецФункции 

Функция GET_library_solid_description(desc_id) Экспорт
	АдресДанных = РЛС_Служебный.ПолучитьАдресДанных("/api/library_description?desc_id="+desc_id);
	ДП = РЛС_Служебный.УстановитьДанныеПодключения();
	КлиентHTTPКлиентСервер.ТелоОтветаКакJSON(ДП);
	Ответ = КлиентHTTPКлиентСервер.Получить(АдресДанных, , ДП);
	Возврат Ответ.Тело;
КонецФункции

Функция GET_dict_active_substances() Экспорт
	АдресДанных = РЛС_Служебный.ПолучитьАдресДанных("/api/dict_active_substances");
	ДП = РЛС_Служебный.ПодготовитьАрхивДляПолученияОтвета(РЛС_Служебный.УстановитьДанныеПодключения());
	Ответ = КлиентHTTPКлиентСервер.Получить(АдресДанных, , ДП);	
	Возврат РЛС_Служебный.ПрочитатьФайлИзАрхива(ДП);
	
КонецФункции

//комментарий32
