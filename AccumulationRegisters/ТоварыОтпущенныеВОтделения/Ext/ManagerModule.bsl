#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	И (ЗначениеРазрешено(ПодразделениеОрганизации, Отключено КАК Ложь)
	|		ИЛИ ЗначениеРазрешено(Отделение, Отключено КАК Ложь))
	|";
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЙ ПРОГРАММНЫЙ ИНТЕРФЕЙС
#Область СлужебныйПрограммныйИнтерфейс

#Область РасчетСебестоимостиТоваров

Функция ХозяйственныеОперацииКорректировки() Экспорт
	
	Операции = Новый Массив;
	Операции.Добавить(Перечисления.ХозяйственныеОперации.ОтпускТоваровВОтделение);
	Операции.Добавить(Перечисления.ХозяйственныеОперации.СписаниеТоваровПоТребованию);
	
	Возврат Операции;
	
КонецФункции

Процедура СформироватьДвижениеКорректировки(ПараметрыРасчета, Выборка) Экспорт
	
	Если ТипЗнч(Выборка.ДокументДвижения) <> Тип("ДокументСсылка.ОтпускТоваровВОтделение")
	 Или Не ЗначениеЗаполнено(Выборка.ПодразделениеОрганизации) Тогда
		Возврат;
	КонецЕсли;
	
	ИмяРегистра = СоздатьНаборЗаписей().Метаданные().Имя;
	ЗаполняемыеПоля = Новый Структура;
	ЗаполняемыеПоля.Вставить("Период");
	ЗаполняемыеПоля.Вставить("Организация");
	ЗаполняемыеПоля.Вставить("ПодразделениеОрганизации");
	ЗаполняемыеПоля.Вставить("Отделение");
	ЗаполняемыеПоля.Вставить("ИсточникФинансирования");
	ЗаполняемыеПоля.Вставить("АналитикаУчетаНоменклатуры");
	ЗаполняемыеПоля.Вставить("АналитикаОписанияОтбораНоменклатуры");
	ЗаполняемыеПоля.Вставить("ЕдиницаИзмерения");
	ЗаполняемыеПоля.Вставить("КодСтроки");
	ЗаполняемыеПоля = ОбщегоНазначенияКлиентСервер.КлючиСтруктурыВСтроку(ЗаполняемыеПоля);
	
	Запись = Документы.РасчетСебестоимостиТоваров.ДобавитьЗаписьВТаблицуДвижений(ПараметрыРасчета, ИмяРегистра, Выборка, ЗаполняемыеПоля);
	Запись.ДокументОтпуска     = Выборка.ДокументДвижения;
	Запись.ТребованиеОтделения = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Запись.ДокументОтпуска, "ТребованиеОтделения");
	Запись.Стоимость           = Выборка.СтоимостьКорректировка + Выборка.СуммаДопРасходовКорректировка;
	Запись.СтоимостьБезНДС     = Выборка.СтоимостьБезНДСКорректировка + Выборка.СуммаДопРасходовБезНДСКорректировка;
	Запись.СтоимостьРегл       = Выборка.СтоимостьРеглКорректировка;
	
КонецПроцедуры

#КонецОбласти // РасчетСебестоимостиТоваров

#КонецОбласти // СлужебныйПрограммныйИнтерфейс

#КонецЕсли