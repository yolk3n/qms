#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС
#Область ПрограммныйИнтерфейс

// Текст запроса получает остаток по ресурсам КОформлению и Заказано
// Остаток дополняется движениями, сделанными накладной заданной в параметре Регистратор
//
// Параметры:
//  ИмяВременнойТаблицы  - Строка - Поместить результат во временную таблицу с заданным именем. 
//  ОтборПоИзмерениям    - Структура - Ключ - имя измерения, Значение - имя параметра в запросе, например:
//                                      Новый Структура("Номенклатура", "Товар") будет преобразовано в тексте запроса в:
//                                      Номенклатура В(&Товар)
//  Выражение            - Строка - Условие для секции ИМЕЮЩИЕ по ресурсам.
//                                  Например, строка вида "КОформлению <> 0" будет преобразована в тексте запроса в:
//                                  СУММА(Набор.КОформлению) <> 0
// 
// Возвращаемое значение:
//   - Строка
//
Функция ТекстЗапросаОстатки(ИмяВременнойТаблицы = "", ОтборПоИзмерениям = Неопределено, Выражение = "") Экспорт
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Таблица.ЗаказНаПеремещение  КАК ЗаказНаПеремещение,
	|	Таблица.ОтборНоменклатуры   КАК ОтборНоменклатуры,
	|	Таблица.ЕдиницаИзмерения    КАК ЕдиницаИзмерения,
	|	Таблица.КодСтроки           КАК КодСтроки,
	|	Таблица.ЗаказаноОстаток     КАК Заказано,
	|	Таблица.КОформлениюОстаток  КАК КОформлению
	|ПОМЕСТИТЬ ОстаткиЗаказов
	|ИЗ
	|	РегистрНакопления.ЗаказыНаПеремещение.Остатки(,
	|//&ОтборПоИзмерениямРегистр
	|		) КАК Таблица
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Таблица.ЗаказНаПеремещение  КАК ЗаказНаПеремещение,
	|	Таблица.ОтборНоменклатуры   КАК ОтборНоменклатуры,
	|	Таблица.ЕдиницаИзмерения    КАК ЕдиницаИзмерения,
	|	Таблица.КодСтроки           КАК КодСтроки,
	|	Таблица.Заказано            КАК Заказано,
	|	Таблица.КОформлению         КАК КОформлению
	|ИЗ
	|	РегистрНакопления.ЗаказыНаПеремещение КАК Таблица
	|ГДЕ
	|	Активность
	|	И Регистратор В(&Регистратор)
	|	И ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|//&ОтборПоИзмерениямСторно
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Набор.ЗаказНаПеремещение  КАК Заказ,
	|	Набор.ОтборНоменклатуры   КАК НоменклатураЗаказа,
	|	Набор.ЕдиницаИзмерения    КАК ЕдиницаИзмеренияЗаказа,
	|	Набор.КодСтроки           КАК КодСтроки,
	|	СУММА(Набор.Заказано)     КАК Заказано,
	|	СУММА(Набор.КОформлению)  КАК КОформлению
	|//&ПОМЕСТИТЬ
	|ИЗ
	|	ОстаткиЗаказов КАК Набор
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказНаПеремещение,
	|	ОтборНоменклатуры,
	|	ЕдиницаИзмерения,
	|	КодСтроки
	|
	|//&ИМЕЮЩИЕ
	|";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ОстаткиЗаказов", "ОстаткиЗаказов_" + ОбщегоНазначенияБольничнаяАптекаКлиентСервер.СформироватьУникальныйИдентификатор());
	
	Если Не ПустаяСтрока(ИмяВременнойТаблицы) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//&ПОМЕСТИТЬ", "ПОМЕСТИТЬ " + ИмяВременнойТаблицы);
		ТекстЗапроса = ТекстЗапроса + "
		|ИНДЕКСИРОВАТЬ ПО
		|	ЗаказНаПеремещение,
		|	КодСтроки
		|";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОтборПоИзмерениям) Тогда
		
		ТекстОтбораПоИзмерениям = "";
		
		Для Каждого КлючЗначение Из ОтборПоИзмерениям Цикл
			
			ТекстОтбораПоИзмерениям = 
				ТекстОтбораПоИзмерениям
				+ ?(ПустаяСтрока(ТекстОтбораПоИзмерениям), "", " И ")
				+ КлючЗначение.Ключ
				+ " В(&"
				+ КлючЗначение.Значение
				+ ")";
			
		КонецЦикла;
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//&ОтборПоИзмерениямРегистр", ТекстОтбораПоИзмерениям);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//&ОтборПоИзмерениямСторно", Символы.ПС + "И " + ТекстОтбораПоИзмерениям);
		
	КонецЕсли;
	
	Если Не ПустаяСтрока(Выражение) Тогда
		
		Если СтрНайти(Выражение, "КОформлению") <> 0 Тогда
			Выражение = СтрЗаменить(Выражение, "КОформлению", "СУММА(Набор.КОформлению)");
		КонецЕсли;
		Если СтрНайти(Выражение, "Заказано") <> 0 Тогда
			Выражение = СтрЗаменить(Выражение, "Заказано", "СУММА(Набор.Заказано)");
		КонецЕсли;
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//&ИМЕЮЩИЕ", "ИМЕЮЩИЕ " + Выражение);
		
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЧтениеОбъектаРазрешено(ЗаказНаПеремещение)
	|";
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти // ПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЙ ПРОГРАММНЫЙ ИНТЕРФЕЙС
#Область СлужебныйПрограммныйИнтерфейс

// Процедура сообщает пользователю об ошибках проведения по регистру ЗаказыНаПеремещение
//
// Параметры:
//  Объект           - проводимый документ
//  Отказ            - признак отказа от проведения документа
//  РезультатЗапроса - информация об ошибках проведения по регистру
//
Процедура СообщитьОбОшибкахПроведения(Объект, Отказ, РезультатЗапроса) Экспорт
	
	ШаблонСообщения = НСтр("ru = '%ОписаниеТребования% - отрицательный остаток.
		|По строке %КодСтроки% отпущено больше, чем указано в требовании на %Количество% %Единица%'");
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%КодСтроки%", Выборка.КодСтроки);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеТребования%", Выборка.ОтборНоменклатуры);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Количество%", Строка(-Выборка.Количество));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Единица%", Строка(Выборка.ЕдиницаИзмерения));
		
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Объект,,, Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти // СлужебныйПрограммныйИнтерфейс

#КонецЕсли