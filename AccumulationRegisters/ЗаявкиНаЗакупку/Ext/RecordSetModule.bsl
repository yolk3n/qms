#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ
#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка Или Не ПроведениеБольничнаяАптека.РассчитыватьИзменения(ДополнительныеСвойства) Тогда
		Возврат;
	КонецЕсли;
	
	БлокироватьДляИзменения = Истина;
	
	// Текущее состояние набора помещается во временную таблицу "ДвиженияЗаказыНаПеремещениеПередЗаписью",
	// чтобы при записи получить изменение нового набора относительно текущего.
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
	Запрос.УстановитьПараметр("ЭтоНовый"   , ДополнительныеСвойства.ЭтоНовый);
	Запрос.МенеджерВременныхТаблиц = ПроведениеБольничнаяАптека.ПолучитьМенеджерВременныхТаблицДляКонтроляПроведения(ДополнительныеСвойства);
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	Таблица.ЗаказНаПеремещение КАК ЗаказНаПеремещение,
	|	Таблица.ОтборНоменклатуры  КАК ОтборНоменклатуры,
	|	Таблица.ЕдиницаИзмерения   КАК ЕдиницаИзмерения,
	|	Таблица.КодСтроки          КАК КодСтроки,
	|	ВЫБОР КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
	|			Таблица.КОформлению
	|		ИНАЧЕ
	|			-Таблица.КОформлению
	|	КОНЕЦ                      КАК КОформлениюПередЗаписью
	|ПОМЕСТИТЬ ДвиженияЗаказыНаПеремещениеПередЗаписью
	|ИЗ
	|	РегистрНакопления.ЗаказыНаПеремещение КАК Таблица
	|ГДЕ
	|	Таблица.Регистратор = &Регистратор
	|	И НЕ &ЭтоНовый
	|";
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка Или Не ПроведениеБольничнаяАптека.РассчитыватьИзменения(ДополнительныеСвойства) Тогда
		Возврат;
	КонецЕсли;
	
	// Рассчитывается изменение нового набора относительно текущего с учетом накопленных изменений
	// и помещается во временную таблицу.
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
	Запрос.МенеджерВременныхТаблиц = ПроведениеБольничнаяАптека.ПолучитьМенеджерВременныхТаблицДляКонтроляПроведения(ДополнительныеСвойства);
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	Таблица.ЗаказНаПеремещение      КАК ЗаказНаПеремещение,
	|	Таблица.ОтборНоменклатуры       КАК ОтборНоменклатуры,
	|	Таблица.ЕдиницаИзмерения        КАК ЕдиницаИзмерения,
	|	Таблица.КодСтроки               КАК КодСтроки,
	|	Таблица.КОформлениюПередЗаписью КАК КОформлениюИзменение
	|ПОМЕСТИТЬ ТаблицаИзменений
	|ИЗ
	|	ДвиженияЗаказыНаПеремещениеПередЗаписью КАК Таблица
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Таблица.ЗаказНаПеремещение      КАК ЗаказНаПеремещение,
	|	Таблица.ОтборНоменклатуры       КАК ОтборНоменклатуры,
	|	Таблица.ЕдиницаИзмерения        КАК ЕдиницаИзмерения,
	|	Таблица.КодСтроки               КАК КодСтроки,
	|	ВЫБОР КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
	|			-Таблица.КОформлению
	|		ИНАЧЕ
	|			Таблица.КОформлению
	|	КОНЕЦ                           КАК КОформлениюИзменение
	|ИЗ
	|	РегистрНакопления.ЗаказыНаПеремещение КАК Таблица
	|ГДЕ
	|	Таблица.Регистратор = &Регистратор
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаИзменений.ЗаказНаПеремещение          КАК ЗаказНаПеремещение,
	|	ТаблицаИзменений.ОтборНоменклатуры           КАК ОтборНоменклатуры,
	|	ТаблицаИзменений.ЕдиницаИзмерения            КАК ЕдиницаИзмерения,
	|	ТаблицаИзменений.КодСтроки                   КАК КодСтроки,
	|	СУММА(ТаблицаИзменений.КОформлениюИзменение) КАК КОформлениюИзменение
	|ПОМЕСТИТЬ ДвиженияЗаказыНаПеремещениеИзменение
	|ИЗ
	|	ТаблицаИзменений КАК ТаблицаИзменений
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаИзменений.ЗаказНаПеремещение,
	|	ТаблицаИзменений.ОтборНоменклатуры,
	|	ТаблицаИзменений.ЕдиницаИзмерения,
	|	ТаблицаИзменений.КодСтроки
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаИзменений.КОформлениюИзменение) > 0
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ДвиженияЗаказыНаПеремещениеПередЗаписью
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаИзменений
	|";
	
	Выборка = Запрос.ВыполнитьПакет()[1].Выбрать();
	Выборка.Следующий();
	
	// Новые изменения были помещены во временную таблицу "ДвиженияЗаказыНаПеремещениеИзменение".
	// Добавляется информация о ее существовании и наличии в ней записей об изменении.
	Если Выборка.Количество > 0 Тогда
		ПроведениеБольничнаяАптека.ДобавитьПараметрыКонтроля(
			ДополнительныеСвойства,
			ТекстЗапросаПроверки(),
			РегистрыНакопления.ЗаказыНаПеремещение);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытий

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

Функция ТекстЗапросаПроверки()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаОстатков.ЗаказНаПеремещение КАК ЗаказНаПеремещение,
	|	ТаблицаОстатков.ОтборНоменклатуры  КАК ОтборНоменклатуры,
	|	ТаблицаОстатков.ЕдиницаИзмерения   КАК ЕдиницаИзмерения,
	|	ТаблицаОстатков.КодСтроки          КАК КодСтроки,
	|	ТаблицаОстатков.КОформлениюОстаток КАК Количество
	|ИЗ
	|	РегистрНакопления.ЗаказыНаПеремещение.Остатки(,
	|			(ЗаказНаПеремещение, ОтборНоменклатуры, ЕдиницаИзмерения, КодСтроки) В
	|				(ВЫБРАТЬ
	|					Таблица.ЗаказНаПеремещение,
	|					Таблица.ОтборНоменклатуры,
	|					Таблица.ЕдиницаИзмерения,
	|					Таблица.КодСтроки
	|				ИЗ
	|					ДвиженияЗаказыНаПеремещениеИзменение КАК Таблица)) КАК ТаблицаОстатков
	|ГДЕ
	|	ТаблицаОстатков.КОформлениюОстаток < 0
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции

#КонецЕсли