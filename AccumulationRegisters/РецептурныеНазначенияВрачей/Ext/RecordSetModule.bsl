#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ
#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка Или Не ПроведениеБольничнаяАптека.РассчитыватьИзменения(ДополнительныеСвойства) Тогда
		Возврат;
	КонецЕсли;
	
	БлокироватьДляИзменения = Истина;
	
	// Текущее состояние набора помещается во временную таблицу "ДвиженияЗаказыПоставщикамПередЗаписью",
	// чтобы при записи получить изменение нового набора относительно текущего.
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
	Запрос.УстановитьПараметр("ЭтоНовый",    ДополнительныеСвойства.ЭтоНовый);
	Запрос.МенеджерВременныхТаблиц = ПроведениеБольничнаяАптека.ПолучитьМенеджерВременныхТаблицДляКонтроляПроведения(ДополнительныеСвойства);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Таблица.НазначениеВрача                         КАК НазначениеВрача,
	|	Таблица.ИсточникФинансирования                  КАК ИсточникФинансирования,
	|	Таблица.АналитикаОписанияОтбораНоменклатуры     КАК АналитикаОписанияОтбораНоменклатуры,
	|	Таблица.ЕдиницаИзмерения                        КАК ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
	|			Таблица.КОформлению
	|		ИНАЧЕ
	|			-Таблица.КОформлению
	|	КОНЕЦ                                           КАК КОформлениюПередЗаписью
	|ПОМЕСТИТЬ ДвиженияНазначенияВрачейПередЗаписью
	|ИЗ
	|	РегистрНакопления.РецептурныеНазначенияВрачей КАК Таблица
	|ГДЕ
	|	Таблица.Регистратор = &Регистратор
	|	И НЕ &ЭтоНовый
	|	И Таблица.Назначено = 0
	|";
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка Или Не ПроведениеБольничнаяАптека.РассчитыватьИзменения(ДополнительныеСвойства) Тогда
		Возврат;
	КонецЕсли;
	
	// Рассчитывается изменение нового набора относительно текущего с учетом накопленных изменений
	// и помещается во временную таблицу.
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
	Запрос.МенеджерВременныхТаблиц = ПроведениеБольничнаяАптека.ПолучитьМенеджерВременныхТаблицДляКонтроляПроведения(ДополнительныеСвойства);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Таблица.НазначениеВрача                     КАК НазначениеВрача,
	|	Таблица.ИсточникФинансирования              КАК ИсточникФинансирования,
	|	Таблица.АналитикаОписанияОтбораНоменклатуры КАК АналитикаОписанияОтбораНоменклатуры,
	|	Таблица.ЕдиницаИзмерения                    КАК ЕдиницаИзмерения,
	|	Таблица.КОформлениюПередЗаписью             КАК КОформлениюИзменение
	|ПОМЕСТИТЬ ТаблицаИзменений
	|ИЗ
	|	ДвиженияНазначенияВрачейПередЗаписью КАК Таблица
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Таблица.НазначениеВрача                     КАК НазначениеВрача,
	|	Таблица.ИсточникФинансирования              КАК ИсточникФинансирования,
	|	Таблица.АналитикаОписанияОтбораНоменклатуры КАК АналитикаОписанияОтбораНоменклатуры,
	|	Таблица.ЕдиницаИзмерения                    КАК ЕдиницаИзмерения,
	|	ВЫБОР КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
	|			-Таблица.КОформлению
	|		ИНАЧЕ
	|			Таблица.КОформлению
	|	КОНЕЦ                                       КАК КОформлениюИзменение
	|ИЗ
	|	РегистрНакопления.РецептурныеНазначенияВрачей КАК Таблица
	|ГДЕ
	|	Таблица.Регистратор = &Регистратор
	|	И Таблица.Назначено = 0
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаИзменений.НазначениеВрача                        КАК НазначениеВрача,
	|	ТаблицаИзменений.ИсточникФинансирования                 КАК ИсточникФинансирования,
	|	ТаблицаИзменений.АналитикаОписанияОтбораНоменклатуры    КАК АналитикаОписанияОтбораНоменклатуры,
	|	ТаблицаИзменений.ЕдиницаИзмерения                       КАК ЕдиницаИзмерения,
	|	СУММА(ТаблицаИзменений.КОформлениюИзменение)            КАК КОформлениюИзменение
	|ПОМЕСТИТЬ ДвиженияНазначенияВрачейИзменение
	|ИЗ
	|	ТаблицаИзменений КАК ТаблицаИзменений
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаИзменений.НазначениеВрача,
	|	ТаблицаИзменений.ИсточникФинансирования,
	|	ТаблицаИзменений.АналитикаОписанияОтбораНоменклатуры,
	|	ТаблицаИзменений.ЕдиницаИзмерения
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаИзменений.КОформлениюИзменение) > 0
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ДвиженияНазначенияВрачейПередЗаписью
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаИзменений
	|";
	
	Выборка = Запрос.ВыполнитьПакет()[1].Выбрать();
	Выборка.Следующий();
	
	// Новые изменения были помещены во временную таблицу "ДвиженияНазначенияВрачейИзменение".
	// Добавляется информация о ее существовании и наличии в ней записей об изменении.
	Если Выборка.Количество > 0 Тогда
		ПроведениеБольничнаяАптека.ДобавитьПараметрыКонтроля(
			ДополнительныеСвойства,
			ТекстЗапросаПроверки(),
			РегистрыНакопления.РецептурныеНазначенияВрачей);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти // ОбработчикиСобытий

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

Функция ТекстЗапросаПроверки()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаОстатков.НазначениеВрача                     КАК НазначениеВрача,
	|	ТаблицаОстатков.АналитикаОписанияОтбораНоменклатуры КАК АналитикаОписанияОтбораНоменклатуры,
	|	ТаблицаОстатков.ЕдиницаИзмерения                    КАК ЕдиницаИзмерения,
	|	ТаблицаОстатков.КОформлениюОстаток                  КАК КОформлению
	|ИЗ
	|	РегистрНакопления.РецептурныеНазначенияВрачей.Остатки(,
	|			(НазначениеВрача, АналитикаОписанияОтбораНоменклатуры, ЕдиницаИзмерения) В
	|				(ВЫБРАТЬ
	|					Таблица.НазначениеВрача,
	|					Таблица.АналитикаОписанияОтбораНоменклатуры,
	|					Таблица.ЕдиницаИзмерения
	|				ИЗ
	|					ДвиженияНазначенияВрачейИзменение КАК Таблица)
	|	) КАК ТаблицаОстатков
	|
	|ГДЕ
	|	ТаблицаОстатков.КОформлениюОстаток < 0
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции

#КонецЕсли
