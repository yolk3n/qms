////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Форма параметризуется:
//  УзелИнформационнойБазы - ПланОбменаСсылка - узел обмена, для которого происходит настройка
//  ПериодОтбора           - СтандартныйПериод - общий период отбора
//  Отбор                  - ДанныеФормыКолелкция, ТаблицаЗначений - описание отбора для редактирования.
//                           При описании отбора используются колонки:
//                             * ПолноеИмяМетаданных - Строка                - имя метаданных, для отбора.
//                             * Отбор               - ОтборКомпоновкиДанных - описание отбора.
//                             * ВыборПериода        - Булево                - Истина, если применим общий период отбора.
//                             * Период              - СтандартныйПериод     - общий период отбора для строки.
//
// Форма должна вернуть результат выбора - структуру с полями:
//  ПериодОтбора        - СтандартныйПериод - общий период выбора, если используется
//  Отбор               - ДанныеФормыКоллекция - заполненные данные.
//                        Используются колонки аналогичные входному параметру:
//                          * ПолноеИмяМетаданных - Строка                - имя метаданных, для отбора.
//                          * Отбор               - ОтборКомпоновкиДанных - описание отбора.
//                          * ВыборПериода        - Булево                - Истина, если применим общий период отбора.
//                          * Период              - СтандартныйПериод     - общий период отбора для строки.
//  ПредставлениеОтбора - Строка - текстовое описание отбора.
//
// Примечание:
//  Реквизит формы ТаблицаОтбора типа ДанныеФормыКоллекция
//  используется для передачи коллекции Отбор, с возможностью сериализации,
//  т.к. возврат результата выполняется на клиент.

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УзелИнформационнойБазы = Параметры.УзелИнформационнойБазы;
	ПериодОтбора           = Параметры.ПериодОтбора;
	
	ИнициализироватьСписокОрганизаций(УзелИнформационнойБазы, Параметры.Отбор);
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ
#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыбратьОтмеченные(Команда)
	
	ОповеститьОВыборе(РезультатВыбора());
	
КонецПроцедуры

#КонецОбласти // ОбработчикиКомандФормы

//////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ИнициализироватьСписокОрганизаций(УзелИнформационнойБазы, Знач ТаблицаОтбора)
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ПланОбмена.Ссылка                           КАК Ссылка,
	|	ПланОбмена.ИспользоватьОтборПоОрганизациям  КАК ИспользоватьОтборПоОрганизациям
	|ПОМЕСТИТЬ ПланОбмена
	|ИЗ
	|	#ПланОбмена КАК ПланОбмена
	|ГДЕ
	|	ПланОбмена.Ссылка = &Получатель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОрганизацииПланаОбмена.Организация  КАК Организация
	|ИЗ
	|	ПланОбмена КАК ПланОбмена
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			#ОрганизацииПланаОбмена КАК ОрганизацииПланаОбмена
	|		ПО
	|			ОрганизацииПланаОбмена.Ссылка = ПланОбмена.Ссылка
	|			И ПланОбмена.ИспользоватьОтборПоОрганизациям
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Организации.Ссылка  КАК Организация
	|ИЗ
	|	ПланОбмена КАК ПланОбмена
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			Справочник.Организации КАК Организации
	|		ПО
	|			НЕ ПланОбмена.ИспользоватьОтборПоОрганизациям
	|";
	
	ПолноеИмяПланаОбмена = УзелИнформационнойБазы.Метаданные().ПолноеИмя();
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#ПланОбмена", ПолноеИмяПланаОбмена);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#ОрганизацииПланаОбмена", ПолноеИмяПланаОбмена + ".Организации");
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Получатель", УзелИнформационнойБазы);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	СписокОрганизаций.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Организация"));
	
	Менеджер = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(ПолноеИмяПланаОбмена);
	ОтмеченныеОрганизации = Менеджер.ОрганизацииИзОтбораИнтерактивнойВыгрузки(ТаблицаОтбора);
	
	Для Каждого ЭлементСписка Из СписокОрганизаций Цикл
		ЭлементСписка.Пометка = ОтмеченныеОрганизации.НайтиПоЗначению(ЭлементСписка.Значение) <> Неопределено;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция РезультатВыбора()
	
	ТаблицаОтбора.Очистить();
	
	СписокОтмеченныхОрганизаций = Новый СписокЗначений;
	СписокОтмеченныхОрганизаций.ЗагрузитьЗначения(ОбщегоНазначенияКлиентСервер.ОтмеченныеЭлементы(СписокОрганизаций));
	
	Менеджер = ОбщегоНазначения.МенеджерОбъектаПоСсылке(УзелИнформационнойБазы);
	Менеджер.ДобавитьСтрокуОтбораОрганизацийИнтерактивнойВыгрузки(ТаблицаОтбора, ПериодОтбора, СписокОтмеченныхОрганизаций);
	
	НастройкиВыгрузки = Новый Структура;
	НастройкиВыгрузки.Вставить("ПериодОтбора"            , ПериодОтбора);
	НастройкиВыгрузки.Вставить("Отбор"                   , ТаблицаОтбора);
	НастройкиВыгрузки.Вставить("ИспользоватьПериодОтбора", ЗначениеЗаполнено(ПериодОтбора));
	НастройкиВыгрузки.Вставить("ПредставлениеОтбора"     , Менеджер.ПредставлениеОтбораИнтерактивнойВыгрузки(УзелИнформационнойБазы, НастройкиВыгрузки));
	
	НастройкиВыгрузки.Удалить("ИспользоватьПериодОтбора");
	
	Возврат НастройкиВыгрузки;
	
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции