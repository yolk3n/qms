
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	СоставНабораКонстантФормы    = ОбщегоНазначенияБольничнаяАптека.ПолучитьСоставНабораКонстант(НаборКонстант);
	ВнешниеРодительскиеКонстанты = ОбщегоНазначенияБольничнаяАптекаПовтИсп.ПолучитьРодительскиеКонстанты(СоставНабораКонстантФормы);
	
	// Значения реквизитов формы
	РежимРаботы = Новый Структура;
	
	РежимРаботы.Вставить("ВнешниеРодительскиеКонстанты", Новый ФиксированнаяСтруктура(ВнешниеРодительскиеКонстанты));
	
	РежимРаботы = Новый ФиксированнаяСтруктура(РежимРаботы);
	
	// Обновление состояния элементов
	УстановитьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия <> "Запись_НаборКонстант" Тогда
		Возврат; // такие событие не обрабатываются
	КонецЕсли;
	
	// Если это изменена константа, расположенная в другой форме и влияющая на значения констант этой формы,
	// то прочитаем значения констант и обновим элементы этой формы.
	Если РежимРаботы.ВнешниеРодительскиеКонстанты.Свойство(Источник) Тогда
		
		Прочитать();
		УстановитьДоступность();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	ОбновитьИнтерфейсПрограммы();
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОткрытьВалюты(Команда)
	
	ОткрытьФорму("Справочник.Валюты.ФормаСписка",, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыВалюты(Команда)
	
	ОткрытьФорму("Справочник.Валюты.ФормаОбъекта", Новый Структура("Ключ", НаборКонстант.ВалютаРегламентированногоУчета));
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьДействующийСправочникЛС(Команда)
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("Отбор", Новый Структура("Владелец", НаборКонстант.КонтрагентДляПроектаОперативныйМониторингЛС));
	ОткрытьФорму("Справочник.НоменклатураКонтрагентов.ФормаСписка", ПараметрыОткрытия, ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти // ОбработчикиКомандФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ
#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура БюджетноеУчреждениеПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьНесколькоОрганизацийПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьОбособленныеПодразделенияВыделенныеНаБалансПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьНесколькоВалютПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ВалютаРегламентированногоУчетаПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ОсновнойКалендарьПредприятияПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура УчаствоватьВПроектеОперативныйМониторингЛСПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентДляПроектаОперативныйМониторингЛСПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьФормулярныеСпискиНоменклатурыПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьСтатусыФормулярныхСписокНоменклатурыПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьБизнесПроцессыФормуляровПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийЭлементовФормы

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура Подключаемый_ПриИзмененииРеквизита(Элемент, ОбновлятьИнтерфейс = Истина)
	
	КонстантаИмя = ПриИзмененииРеквизитаСервер(Элемент.Имя);
	
	ОбновитьПовторноИспользуемыеЗначения();
	
	Если ОбновлятьИнтерфейс Тогда
		ОбновитьИнтерфейс = Истина;
		ПодключитьОбработчикОжидания("ОбновитьИнтерфейсПрограммы", 2, Истина);
	КонецЕсли;
	
	Если КонстантаИмя <> "" Тогда
		Оповестить("Запись_НаборКонстант", Новый Структура, КонстантаИмя);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИнтерфейсПрограммы()
	
	Если ОбновитьИнтерфейс = Истина Тогда
		ОбновитьИнтерфейс = Ложь;
		ОбщегоНазначенияКлиент.ОбновитьИнтерфейсПрограммы();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПриИзмененииРеквизитаСервер(ИмяЭлемента)
	
	РеквизитПутьКДанным = Элементы[ИмяЭлемента].ПутьКДанным;
	
	КонстантаИмя = СохранитьЗначениеРеквизита(РеквизитПутьКДанным);
	
	УстановитьДоступность(РеквизитПутьКДанным);
	
	ОбновитьПовторноИспользуемыеЗначения();
	
	Возврат КонстантаИмя;
	
КонецФункции

&НаСервере
Функция СохранитьЗначениеРеквизита(РеквизитПутьКДанным)
	
	// Определение имени константы.
	КонстантаИмя = "";
	Если НРег(Лев(РеквизитПутьКДанным, 14)) = НРег("НаборКонстант.") Тогда
		// Если путь к данным реквизита указан через "НаборКонстант".
		КонстантаИмя = Сред(РеквизитПутьКДанным, 15);
	Иначе
		// Определение имени и запись значения реквизита в соответствующей константе из "НаборКонстант".
		// Используется для тех реквизитов формы, которые связаны с константами напрямую (в отношении один-к-одному).
	КонецЕсли;
	
	// Сохранения значения константы.
	Если КонстантаИмя <> "" Тогда
		КонстантаМенеджер = Константы[КонстантаИмя];
		КонстантаЗначение = НаборКонстант[КонстантаИмя];
		
		Если КонстантаМенеджер.Получить() <> КонстантаЗначение Тогда
			Попытка
				КонстантаМенеджер.Установить(КонстантаЗначение);
			Исключение
				Прочитать();
				ВызватьИсключение;
			КонецПопытки;
			
			Если ОбщегоНазначенияБольничнаяАптекаПовтИсп.ЕстьПодчиненныеКонстанты(КонстантаИмя, КонстантаЗначение) Тогда
				Прочитать();
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат КонстантаИмя;
	
КонецФункции

&НаСервере
Процедура УстановитьДоступность(РеквизитПутьКДанным = "")
	
	Если РеквизитПутьКДанным = "НаборКонстант.ИспользоватьНесколькоОрганизаций" ИЛИ РеквизитПутьКДанным = "" Тогда
		
		ЗначениеКонстанты = НаборКонстант.ИспользоватьНесколькоОрганизаций;
		Если ЗначениеКонстанты Тогда
			Элементы.ГруппаСтраницыИспользоватьНесколькоОрганизаций.ТекущаяСтраница = Элементы.ГруппаНесколькоОрганизаций;
		Иначе
			Элементы.ГруппаСтраницыИспользоватьНесколькоОрганизаций.ТекущаяСтраница = Элементы.ГруппаОднаОрганизация;
		КонецЕсли;
		
		Элементы.ИспользоватьОбособленныеПодразделенияВыделенныеНаБаланс.Доступность = ЗначениеКонстанты;
		
	КонецЕсли;
	
	Если РеквизитПутьКДанным = "НаборКонстант.ВалютаРегламентированногоУчета" Или РеквизитПутьКДанным = "" Тогда
		Элементы.ВалютаРегламентированногоУчета.ОтображениеПредупрежденияПриРедактировании =
			ОтображениеПредупреждения(ЗначениеЗаполнено(НаборКонстант.ВалютаРегламентированногоУчета));
	КонецЕсли;
	
	Если РеквизитПутьКДанным = "НаборКонстант.ИспользоватьФормулярныеСпискиНоменклатуры" Или РеквизитПутьКДанным = "" Тогда
		Элементы.ИспользоватьБизнесПроцессыФормуляров.Доступность = НаборКонстант.ИспользоватьФормулярныеСпискиНоменклатуры;
	КонецЕсли;
	
	Если РеквизитПутьКДанным = "НаборКонстант.ИспользоватьНесколькоВалют" ИЛИ РеквизитПутьКДанным = "" Тогда
		
		ЗначениеКонстанты = НаборКонстант.ИспользоватьНесколькоВалют;
		
		Если ЗначениеКонстанты Тогда
			Элементы.ГруппаСтраницыВалюты.ТекущаяСтраница = Элементы.ГруппаОткрытьВалюты;
		Иначе
			Элементы.ГруппаСтраницыВалюты.ТекущаяСтраница = Элементы.ГруппаПараметрыВалюты;
		КонецЕсли;
		
		Элементы.ВалютаРегламентированногоУчета.Доступность = ЗначениеКонстанты;
		
	КонецЕсли;
	
	Если РеквизитПутьКДанным = "НаборКонстант.УчаствоватьВПроектеОперативныйМониторингЛС" ИЛИ РеквизитПутьКДанным = "" Тогда
		
		Элементы.КонтрагентДляПроектаОперативныйМониторингЛС.Доступность = НаборКонстант.УчаствоватьВПроектеОперативныйМониторингЛС;
		
		Элементы.ОткрытьДействующийСправочникЛС.Доступность = НаборКонстант.УчаствоватьВПроектеОперативныйМониторингЛС
			И ЗначениеЗаполнено(НаборКонстант.КонтрагентДляПроектаОперативныйМониторингЛС);
		
	КонецЕсли;
	
	Если РеквизитПутьКДанным = "НаборКонстант.КонтрагентДляПроектаОперативныйМониторингЛС" ИЛИ РеквизитПутьКДанным = "" Тогда
		
		Элементы.ОткрытьДействующийСправочникЛС.Доступность = НаборКонстант.УчаствоватьВПроектеОперативныйМониторингЛС
			И ЗначениеЗаполнено(НаборКонстант.КонтрагентДляПроектаОперативныйМониторингЛС);
		Элементы.КонтрагентДляПроектаОперативныйМониторингЛС.ОтображениеПредупрежденияПриРедактировании =
			ОтображениеПредупреждения(ЗначениеЗаполнено(НаборКонстант.КонтрагентДляПроектаОперативныйМониторингЛС));
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ОтображениеПредупреждения(Знач Отображать)
	
	Если Отображать Тогда
		Возврат ОтображениеПредупрежденияПриРедактировании.Отображать;
	КонецЕсли;
	
	Возврат ОтображениеПредупрежденияПриРедактировании.НеОтображать;
	
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции
