
&НаСервере
Процедура ПопытатьсяСинхронизироватьНаСервере(СпрК)
		Если НЕ СпрК.ПодключенБитФинанс Тогда
			Если СпрК.ЮрФизЛицо=Перечисления.ЮрФизЛицо.ЮрЛицоНеРезидент Тогда
				ОбщегоНазначенияклиентСервер.СообщитьПользователю("Контрагент: "+СпрК.Ссылка+" является иностранным агентом и не может быть синхронизирован с бит-финанс.",СпрК.Ссылка);
				Возврат;
			КонецЕсли;	
			
			Если СпрК.ЮрФизЛицо=Перечисления.ЮрФизЛицо.ЮрЛицо Тогда
				Если СтрДлина(СпрК.ИНН)<>10 Тогда
					ОбщегоНазначенияклиентСервер.СообщитьПользователю("Контрагент: "+СпрК.Ссылка+" имеет длину ИНН отличающуюусю от 10 и не может быть синхронизирован с бит-финанс.",СпрК.Ссылка);
					Возврат;
				КонецЕсли;
				
				Если СтрДлина(СпрК.КПП)<>9 Тогда
					ОбщегоНазначенияклиентСервер.СообщитьПользователю("Контрагент: "+СпрК.Ссылка+" имеет длину КПП отличающуюусю от 9 и не может быть синхронизирован с бит-финанс.",СпрК.Ссылка);
					Возврат;
				КонецЕсли;
				
			КонецЕсли;
			
			Если СпрК.ЮрФизЛицо=Перечисления.ЮрФизЛицо.ИндивидуальныйПредприниматель Тогда
				Если СтрДлина(СпрК.ИНН)<>12 Тогда
					ОбщегоНазначенияклиентСервер.СообщитьПользователю("Контрагент: "+СпрК.Ссылка+" имеет длину ИНН отличающуюусю от 12 и не может быть синхронизирован с бит-финанс.",СпрК.Ссылка);
					Возврат;
				КонецЕсли;
			КонецЕсли;
			
			Если СпрК.ЮрФизЛицо=Перечисления.ЮрФизЛицо.ФизЛицо Тогда
				Если СтрДлина(СпрК.ИНН)<>12 Тогда
					ОбщегоНазначенияклиентСервер.СообщитьПользователю("Контрагент: "+СпрК.Ссылка+" имеет длину ИНН отличающуюусю от 12 и не может быть синхронизирован с бит-финанс.",СпрК.Ссылка);
					Возврат;
				КонецЕсли;
			КонецЕсли;
			
			Элемент=СпрК.Ссылка.ПолучитьОбъект();
			Сок_Веб.ОтправитьЗапросНаПодключениеКонтрагента(Элемент);
			Если Элемент.ПодключенБитФинанс Тогда
				Элемент.ОбменДанными.Загрузка=Истина;                        
				попытка
					Элемент.Записать();
					ОбщегоНазначенияклиентСервер.СообщитьПользователю("Контрагент: "+СпрК.Ссылка+" синхронизирован с бит-финанс.",СпрК.Ссылка);
				Исключение
					ОбщегоНазначенияклиентСервер.СообщитьПользователю("Контрагент: "+СпрК.Ссылка+" есть возможность синхронизировать с бит-финанс, но не удалось записать справочник.",СпрК.Ссылка);
					Возврат;
				КонецПопытки;
			Иначе
				ОбщегоНазначенияклиентСервер.СообщитьПользователю("Контрагент: "+СпрК.Ссылка+" не удалось синхронизирован с бит-финанс.",СпрК.Ссылка);
				Возврат;
			КонецЕсли;	
			
		КонецЕсли;
		
		Если СпрК.ПодключенБитФинанс Тогда
			СпрД = Справочники.ДоговорыКонтрагентов.Выбрать(,СпрК.Ссылка);
			Пока СпрД.Следующий() Цикл
				Если СпрД.ЭтоГруппа Тогда 
					Продолжить;
				КонецЕсли;
				Если НЕ СпрД.ПодключенБитФинанс Тогда     
					Элемент=СпрД.Ссылка.ПолучитьОбъект();
					Сок_Веб.ОтправитьЗапросНаПодключениеДоговора(Элемент);
					Если Элемент.ПодключенБитФинанс Тогда
						Элемент.ОбменДанными.Загрузка=Истина;                        
						попытка
							Элемент.Записать();
							ОбщегоНазначенияклиентСервер.СообщитьПользователю("Контрагент: "+СпрК.Ссылка+" договор "+СпрД.Ссылка+" синхронизирован с бит-финанс.",СпрК.Ссылка);
						Исключение
							ОбщегоНазначенияклиентСервер.СообщитьПользователю("Контрагент: "+СпрК.Ссылка+" договор "+СпрД.Ссылка+" есть возможность синхронизировать с бит-финанс, но не удалось записать справочник.",СпрК.Ссылка);
						КонецПопытки;
					Иначе
						ОбщегоНазначенияклиентСервер.СообщитьПользователю("Контрагент: "+СпрК.Ссылка+" договор "+СпрД.Ссылка+" не удалось синхронизирован с бит-финанс.",СпрК.Ссылка);
					КонецЕсли;	
				КонецЕсли;	
			КонецЦикла;	
			
			СпрБ=Справочники.БанковскиеСчетаКонтрагентов.Выбрать(,СпрК.Ссылка);
			Пока СпрБ.Следующий() Цикл
				Если НЕ СпрБ.ПодключенБитФинанс Тогда     
					Элемент=СпрБ.Ссылка.ПолучитьОбъект();
					Сок_Веб.ОтправитьЗапросНаПодключениеБаковскогоСчетаКонтрагента(Элемент);
					Если Элемент.ПодключенБитФинанс Тогда
						Элемент.ОбменДанными.Загрузка=Истина;                        
						попытка
							Элемент.Записать();
							ОбщегоНазначенияклиентСервер.СообщитьПользователю("Контрагент: "+СпрК.Ссылка+" счет "+СпрБ.Ссылка+" синхронизирован с бит-финанс.",СпрК.Ссылка);
						Исключение
							ОбщегоНазначенияклиентСервер.СообщитьПользователю("Контрагент: "+СпрК.Ссылка+" счет "+СпрБ.Ссылка+" есть возможность синхронизировать с бит-финанс, но не удалось записать справочник.",СпрК.Ссылка);
						КонецПопытки;
					Иначе
						ОбщегоНазначенияклиентСервер.СообщитьПользователю("Контрагент: "+СпрК.Ссылка+" счет "+СпрБ.Ссылка+" не удалось синхронизирован с бит-финанс.",СпрК.Ссылка);
					КонецЕсли;	
				КонецЕсли;	
			КонецЦикла;	
			
		КонецЕсли;	
КонецПроцедуры

&НаСервере
Функция ПолучитьМассивКонтрагентов()
	Запрос = Новый Запрос;
	Запрос.Текст=
	"ВЫБРАТЬ
	|	Контрагенты.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|ГДЕ
	|	НЕ Контрагенты.ЭтоГруппа
	|	И НЕ Контрагенты.ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО
	|	Контрагенты.Наименование";
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
КонецФункции	
&НаКлиенте
Процедура ПопытатьсяСинхронизировать(Команда)
	Состояние("Получение списка контрагентов ");
	Масс= ПолучитьМассивКонтрагентов();
	НПП=1;
	КС=Масс.Количество();
	Для Каждого Стр из Масс Цикл
		Состояние("Проверяю "+НПП+" из "+КС,НПП/КС*100);
		НПП=НПП+1;
		ПопытатьсяСинхронизироватьНаСервере(Стр);
		//Если НПП=10 Тогда
		//	Прервать;
		//Конецесли;	
	КонецЦикла;
	ПоказатьПредупреждение(,"Попытка синхронизации выполнена.");
КонецПроцедуры
