
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("НаборСопоставлений") Тогда
		НаборСопоставлений = Параметры.НаборСопоставлений;
		ПеренестиСопоставлениеВТаблицуФормы(НаборСопоставлений);
	КонецЕсли;
	
	Если Параметры.Свойство("ОткрыватьФормуДляИзмененияСопоставления") Тогда
		ОткрыватьСтраницуРедактированияДокумента =
			Параметры.ОткрыватьФормуДляИзмененияСопоставления;
	КонецЕсли;

	УстановитьУсловноеОформление();
	
	ОтображатьТолькоСтраницуРедактирования = ТаблицаДокументов.Количество() = 1 И ОткрыватьСтраницуРедактированияДокумента;
	
	Если ТаблицаДокументов.Количество() Тогда
		ТекущийДокумент = ТаблицаДокументов[0].СсылкаНаДокумент;
	КонецЕсли;
	
	УстановитьСвойстваПереопределяемыхЭлементовФормы();

	ИзменитьОтображениеСтраницы(Элементы, Ложь, Не ОтображатьТолькоСтраницуРедактирования, Заголовок,
		ВладелецНоменклатурыВРодительномПадеже, ОтображатьТолькоСтраницуРедактирования, ОткрыватьСтраницуРедактированияДокумента);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблицаДокументов

&НаКлиенте
Процедура ТаблицаДокументовПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.ТаблицаДокументов.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущийДокумент = ТекущиеДанные.СсылкаНаДокумент;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаДокументовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
		
	Если ОткрыватьСтраницуРедактированияДокумента Тогда
		ИзменитьОтображениеСтраницы(Элементы, ВсеДокументыСопоставлены, Ложь, Заголовок,
			ВладелецНоменклатурыВРодительномПадеже, ОтображатьТолькоСтраницуРедактирования, Истина);
		УстановитьОтборПоДокументуРедактирования(ТекущийДокумент, Элементы);
	Иначе
		
		ТекущиеДанные = Элемент.ТекущиеДанные;
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", ТекущиеДанные.СсылкаНаДокумент);
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("СсылкаНаДокумент", ТекущиеДанные.СсылкаНаДокумент);
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ТаблицаДокументовВыборЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		
		ПутьКФорме = СтрШаблон("Документ.%1.Форма.ФормаДокумента", ТекущиеДанные.ИмяМетаданныхДокумента);
		Форма = ОткрытьФорму(ПутьКФорме, ПараметрыФормы, ЭтаФорма, , , , ОписаниеОповещения);
		
		ОчиститьСообщения();
		
		Если ТекущиеДанные.Обработано Тогда
			Возврат;
		КонецЕсли;
		
		СопоставленияПоДокументу = ТаблицаСопоставлений.НайтиСтроки(ДополнительныеПараметры);
		
		СопоставлениеНоменклатурыКонтрагентовСлужебныйКлиент.ВывестиСообщениеОбОшибкиСПозиционированиемНаСтрокеДокумента(
			СопоставленияПоДокументу, Форма.УникальныйИдентификатор);
			
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблицаСопоставлений

&НаКлиенте
Процедура ТаблицаСопоставленийПриАктивизацииЯчейки(Элемент)
	
	Если Элемент.ТекущийЭлемент = Неопределено Тогда
		Возврат;
	ИначеЕсли Элемент.ТекущийЭлемент.Имя = "ТаблицаСопоставленийНоменклатураКонтрагента" Тогда
		
		ТекущиеДанные = Элементы.ТаблицаСопоставлений.ТекущиеДанные;
		
		Если ТекущиеДанные = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		ЗначенияНоменклатурыКонтрагентов = СопоставлениеНоменклатурыКонтрагентовКлиент.СформироватьСписокВыбораНоменклатурыКонтрагента(
			ТекущиеДанные.Владелец, ТекущиеДанные.Номенклатура, ТекущиеДанные.Характеристика, ТекущиеДанные.Упаковка);
			
		Элементы.ТаблицаСопоставленийНоменклатураКонтрагента.СписокВыбора.ЗагрузитьЗначения(ЗначенияНоменклатурыКонтрагентов);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ГиперссылкаДокументНажатие(Элемент)
	
	ПоказатьЗначение(, ТекущийДокумент);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьРедактирование(Команда)
	
	ОчиститьСообщения();
	
	Если Элементы.СтраницыРедактированияСопоставления.ТекущаяСтраница = Элементы.СтраницаРедактированияДокумента Тогда
		ПроверитьСопоставлениеНоменклатуры();
		Если ВсеДокументыСопоставлены И ОтображатьТолькоСтраницуРедактирования Тогда
			ЗакрытьРедактированиеСопоставления();
		КонецЕсли;
	Иначе
		ЗакрытьРедактированиеСопоставления();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Назад(Команда)
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("СсылкаНаДокумент", ТекущийДокумент);
	ПараметрыОтбора.Вставить("Сопоставлено"    , Ложь);
	НесопоставленныеСтроки = ТаблицаСопоставлений.НайтиСтроки(ПараметрыОтбора);
	
	Если ЗначениеЗаполнено(НесопоставленныеСтроки) Тогда
		
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьВопросОВозвратеНаСтраницуДокументов", ЭтотОбъект);
		
		ТекстВопроса = НСтр("ru = 'Изменения по сопоставлению номенклатуры не сохранены. Продолжить?'");
		
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
	Иначе
		
		ИзменитьОтображениеСтраницы(Элементы, ВсеДокументыСопоставлены, Истина, Заголовок,
			ВладелецНоменклатурыВРодительномПадеже, Ложь, ОткрыватьСтраницуРедактированияДокумента);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьРедактирование(Команда)
	
	ТекстВопроса = НСтр("ru = 'Формирование электронных документов будет прервано. Продолжить?'");
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОтменитьРедактированиеЗавершение", ЭтотОбъект);
	
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	// Изменение цвета текста и текста в колонке Проблемы.
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.РезультатУспехЦвет);
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = 'Сопоставлено'"));
		
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ТаблицаДокументов.Обработано");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТаблицаДокументовПроблемы.Имя);
	
	// Отображение подсказки, характеристик не используются.
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = '<характеристики не используются>'"));
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветТекстаПодсказкиВвода);
		
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ТаблицаСопоставлений.ТаблицаСопоставленийХарактеристика");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТаблицаСопоставленийХарактеристика.Имя);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСвойстваПереопределяемыхЭлементовФормы()
	
	МетаданныеСопоставления = СопоставлениеНоменклатурыКонтрагентовСлужебный.МетаданныеСопоставленияНоменклатуры();
	
	ВладелецНоменклатурыВРодительномПадеже = НРег(МетаданныеСопоставления.ВладелецНоменклатурыВРодительномПадеже);

	Элементы.НадписьПодсказкиСпискаДокументов.Заголовок = 
		СтрШаблон(НСтр("ru = 'В документах не установлено соответствие с номенклатурой %1.'"), ВладелецНоменклатурыВРодительномПадеже);
	Элементы.НадписьПодсказка.Заголовок = 
		СтрШаблон(НСтр("ru = 'Укажите номенклатуру %1 для документа'"), ВладелецНоменклатурыВРодительномПадеже);
		
	ПредставлениеКолонкиНоменклатураКонтрагента = МетаданныеСопоставления.НоменклатураКонтрагентаПредставлениеСписка;

	Элементы.ТаблицаСопоставленийНоменклатураКонтрагента.Заголовок = ПредставлениеКолонкиНоменклатураКонтрагента;
	
	Элементы.ТаблицаДокументовВладелец.Заголовок          = МетаданныеСопоставления.ВладелецНоменклатурыПредставлениеОбъекта;
	Элементы.ТаблицаСопоставленийНоменклатура.Заголовок   = МетаданныеСопоставления.НоменклатураПредставлениеОбъекта;
	Элементы.ТаблицаСопоставленийХарактеристика.Заголовок = МетаданныеСопоставления.ХарактеристикаПредставлениеОбъекта;
	Элементы.ТаблицаСопоставленийУпаковка.Заголовок       = МетаданныеСопоставления.УпаковкаПредставлениеОбъекта;
	
	Элементы.ГиперссылкаДокумент.Заголовок = ТекущийДокумент;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ИзменитьЗаголовокСтраницы(Элементы, Заголовок, ВладелецНоменклатурыВРодительномПадеже)
	
	Если Элементы.СтраницыРедактированияСопоставления.ТекущаяСтраница = Элементы.СтраницаСпискаДокументов Тогда
		Заголовок = НСтр("ru = 'Проблемы при формировании электронных документов'");
	Иначе
		Заголовок = СтрШаблон(НСтр("ru = 'Сопоставление с номенклатурой %1'"), ВладелецНоменклатурыВРодительномПадеже);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ИзменитьОтображениеСтраницы(Элементы, ВсеДокументыСопоставлены, ЭтоСтраницаДокументов, Заголовок,
		ВладелецНоменклатурыВРодительномПадеже, ОтображатьТолькоСтраницуРедактирования, ОткрыватьСтраницуРедактированияДокумента)
		
	Если ЭтоСтраницаДокументов Тогда
		Элементы.СтраницыРедактированияСопоставления.ТекущаяСтраница = Элементы.СтраницаСпискаДокументов;
	Иначе
		Элементы.СтраницыРедактированияСопоставления.ТекущаяСтраница = Элементы.СтраницаРедактированияДокумента;
	КонецЕсли;
	
	Если (ОтображатьТолькоСтраницуРедактирования Или ЭтоСтраницаДокументов
		Или Не ОткрыватьСтраницуРедактированияДокумента)
		И Элементы.Назад.Видимость Тогда
		Элементы.Назад.Видимость = Ложь;
	ИначеЕсли Не Элементы.Назад.Видимость Тогда
		Элементы.Назад.Видимость = Истина;
	КонецЕсли;
	
	Если ОтображатьТолькоСтраницуРедактирования Или Не ОткрыватьСтраницуРедактированияДокумента 
		Или Не ЭтоСтраницаДокументов Тогда
		Элементы.ЗавершитьРедактирование.Заголовок = НСтр("ru = 'Готово'");
	Иначе
		ИзменитьЗаголовокКоманды(Элементы, ВсеДокументыСопоставлены);
	КонецЕсли;
	
	ИзменитьЗаголовокСтраницы(Элементы, Заголовок, ВладелецНоменклатурыВРодительномПадеже);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ИзменитьЗаголовокКоманды(Элементы, ВсеДокументыСопоставлены)
	
	Если ВсеДокументыСопоставлены Тогда
		Элементы.ЗавершитьРедактирование.Заголовок = НСтр("ru = 'Готово'");
	Иначе
		Элементы.ЗавершитьРедактирование.Заголовок = НСтр("ru = 'Продолжить'");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПеренестиСопоставлениеВТаблицуФормы(НаборСопоставлений)
	
	Для Каждого Сопоставление Из НаборСопоставлений Цикл;
		
		Если Сопоставление.Сопоставлено Тогда
			Продолжить;
		КонецЕсли;
		
		ПараметрыОтбора = Новый Структура("СсылкаНаДокумент", Сопоставление.СсылкаНаДокумент);
		НайденныеСтроки = ТаблицаДокументов.НайтиСтроки(ПараметрыОтбора);
		Если Не ЗначениеЗаполнено(НайденныеСтроки)Тогда
			НоваяСтрокаДокументов = ТаблицаДокументов.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаДокументов, Сопоставление);
			НоваяСтрокаДокументов.НеСопоставлено         = 1;
			НоваяСтрокаДокументов.ИмяМетаданныхДокумента = Сопоставление.СсылкаНаДокумент.Метаданные().Имя;
		Иначе
			НоваяСтрокаДокументов = НайденныеСтроки[0];
			НоваяСтрокаДокументов.НеСопоставлено = НоваяСтрокаДокументов.НеСопоставлено + 1;
		КонецЕсли;
		
		НоваяСтрока = ТаблицаСопоставлений.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Сопоставление);
		
	КонецЦикла;
	
	Для Каждого Строка Из ТаблицаДокументов Цикл
		Строка.Проблемы = СтрШаблон(НСтр("ru = 'Не сопоставлено %1'"), Строка.НеСопоставлено);
	КонецЦикла;
	
	ТаблицаСопоставлений.Сортировать("НомерСтроки");
	
КонецПроцедуры

&НаСервере
Процедура ПерезаполнитьСопоставлениеПоДокументу(НаборСопоставлений, СсылкаНаДокумент, КоличествоНеСопоставленных)
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("СсылкаНаДокумент", СсылкаНаДокумент);
	НеСопоставленныеСтроки = ТаблицаСопоставлений.НайтиСтроки(ПараметрыОтбора);

	Для Каждого ЭлементКоллекции Из НаборСопоставлений Цикл;
				
		ПараметрыОтбора.Вставить("НомерСтроки", ЭлементКоллекции.НомерСтроки);
		Сопоставления = ТаблицаСопоставлений.НайтиСтроки(ПараметрыОтбора);
		ЕстьВТаблицеСопоставления = Ложь;
		
		Если ЗначениеЗаполнено(Сопоставления) И ЭлементКоллекции.Сопоставлено Тогда
			ТаблицаСопоставлений.Удалить(Сопоставления[0]);
			ЕстьВТаблицеСопоставления = Истина;
		ИначеЕсли ЭлементКоллекции.Сопоставлено Тогда
			Продолжить;
		ИначеЕсли Не ЗначениеЗаполнено(Сопоставления) Тогда
			НоваяСтрока = ТаблицаСопоставлений.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ЭлементКоллекции);
			КоличествоНеСопоставленных = КоличествоНеСопоставленных + 1;
		Иначе
			ЗаполнитьЗначенияСвойств(Сопоставления[0], ЭлементКоллекции);
			Если Не ЭлементКоллекции.Сопоставлено Тогда
				Сопоставления[0].НоменклатураКонтрагента = Справочники.НоменклатураКонтрагентов.ПустаяСсылка();
			КонецЕсли;
			КоличествоНеСопоставленных = КоличествоНеСопоставленных + 1;
			ЕстьВТаблицеСопоставления = Истина;
		КонецЕсли;
		
		Если ЕстьВТаблицеСопоставления Тогда
			ИндексСтроки = НеСопоставленныеСтроки.Найти(Сопоставления[0]);
			НеСопоставленныеСтроки.Удалить(ИндексСтроки);
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого Строка Из НеСопоставленныеСтроки Цикл
		ТаблицаСопоставлений.Удалить(Строка);
	КонецЦикла;
	
	ТаблицаСопоставлений.Сортировать("НомерСтроки");
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборПоДокументуРедактирования(ТекущийДокумент, Элементы)
	
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("СсылкаНаДокумент", ТекущийДокумент);
	
	Элементы.ТаблицаСопоставлений.ОтборСтрок = Новый ФиксированнаяСтруктура(СтруктураПоиска);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаДокументовВыборЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Не Открыта() Тогда
		Возврат;
	КонецЕсли;
	
	СсылкаНаДокумент = ДополнительныеПараметры.СсылкаНаДокумент;
	
	РезультатПроверки = СопоставлениеНоменклатурыКонтрагентовСлужебныйВызовСервера.ПроверкаСопоставленияНоменклатурыКонтрагентовВДокументах(СсылкаНаДокумент);
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("СсылкаНаДокумент", СсылкаНаДокумент);

	СопоставленияДокументов = ТаблицаДокументов.НайтиСтроки(ПараметрыОтбора);
	
	Если Не ЗначениеЗаполнено(СопоставленияДокументов) Тогда
		Возврат;
	КонецЕсли;
	
	СопоставлениеДокумента = СопоставленияДокументов[0];
	
	Если РезультатПроверки.ЕстьОшибкиСопоставления Тогда
		КоличествоНеСопоставленных = 0;
		ПерезаполнитьСопоставлениеПоДокументу(РезультатПроверки.НаборСопоставлений, СсылкаНаДокумент, КоличествоНеСопоставленных);
		СопоставлениеДокумента.НеСопоставлено = КоличествоНеСопоставленных;
		СопоставлениеДокумента.Проблемы       = СтрШаблон(НСтр("ru = 'Не сопоставлено %1'"), КоличествоНеСопоставленных);
		СопоставлениеДокумента.Обработано     = Ложь;
	Иначе
		СопоставлениеДокумента.НеСопоставлено = 0;
		СопоставлениеДокумента.Обработано     = Истина;
	КонецЕсли;
	
	ПроверитьСопоставлениеВсехДокументовНаФорме();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьРедактированиеЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		Закрыть();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ОбработатьРедактированиеСопоставленияНоменклатуры()
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Сопоставлено", Истина);
	КолонкиКопирования = "СсылкаНаДокумент, НомерСтроки, Номенклатура, Характеристика, Упаковка, НоменклатураКонтрагента";
	ТаблицаСопоставленныхНоменклатур = ТаблицаСопоставлений.Выгрузить(ПараметрыОтбора, КолонкиКопирования);
	
	Если ТаблицаСопоставленныхНоменклатур = Неопределено Тогда
		Возврат;
	КонецЕсли;

	СопоставлениеНоменклатурыКонтрагентовПереопределяемый.ПеренестиИзмененияСопоставленияНоменклатурыКонтрагентовВДокументы(
		ТаблицаСопоставленныхНоменклатур);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВопросОВозвратеНаСтраницуДокументов(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ИзменитьОтображениеСтраницы(Элементы, ВсеДокументыСопоставлены, Истина, Заголовок,
			ВладелецНоменклатурыВРодительномПадеже, Ложь, ОткрыватьСтраницуРедактированияДокумента);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьСопоставлениеНоменклатуры()
	
	Отказ = Ложь;
	
	ПроверитьДублирующиеСтрокиПоНеСопоставленнойНоменклатуреКонтрагента(Отказ);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("СсылкаНаДокумент", ТекущийДокумент);
	СтрокиСопоставленияПоДокументу = ТаблицаСопоставлений.НайтиСтроки(ПараметрыОтбора);
	СопоставленияДокументов = ТаблицаДокументов.НайтиСтроки(ПараметрыОтбора);
	
	Если Не ЗначениеЗаполнено(СопоставленияДокументов) Тогда
		Возврат;
	КонецЕсли;
	
	СопоставлениеДокумента = СопоставленияДокументов[0];
	
	ТаблицаТоваров = НоваяТаблицаТоваровСопоставления(СопоставлениеДокумента.ИмяМетаданныхДокумента);
	Для Каждого Строка Из СтрокиСопоставленияПоДокументу Цикл
		НоваяСтрока = ТаблицаТоваров.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
	КонецЦикла;
	
	СопоставлениеНоменклатурыКонтрагентов.ЗаполнитьПустоеСопоставлениеВНоменклатуреКонтрагентаПоНоменклатуреИБ(ТаблицаТоваров, Отказ, Истина);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	РезультатПроверки = СопоставлениеНоменклатурыКонтрагентовСлужебный.РезультатПроверкиКорректностиСопоставленияНоменклатуры(ТаблицаТоваров);
	ОбработатьРезультатПроверкиРедактированияСопоставления(РезультатПроверки, СопоставлениеДокумента);
	
КонецПроцедуры

&НаСервере
Функция НоваяТаблицаТоваровСопоставления(ИмяМетаданныхДокумента)
	
	Строка100 = Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(100));
	ТипДокумента = СтрШаблон("ДокументСсылка.%1", ИмяМетаданныхДокумента);
	
	ТаблицаТоваров = Новый ТаблицаЗначений;
	ТаблицаТоваров.Колонки.Добавить("СсылкаНаДокумент", Новый ОписаниеТипов(ТипДокумента));
	ТаблицаТоваров.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 0, ДопустимыйЗнак.Неотрицательный)));
	ТаблицаТоваров.Колонки.Добавить("Номенклатура", Метаданные.ОпределяемыеТипы.НоменклатураБЭД.Тип);
	ТаблицаТоваров.Колонки.Добавить("Характеристика", Метаданные.ОпределяемыеТипы.ХарактеристикаНоменклатурыБЭД.Тип);
	ТаблицаТоваров.Колонки.Добавить("Упаковка", Метаданные.ОпределяемыеТипы.УпаковкаНоменклатурыБЭД.Тип);
	ТаблицаТоваров.Колонки.Добавить("НоменклатураПоиск", Метаданные.ОпределяемыеТипы.НоменклатураБЭД.Тип);
	ТаблицаТоваров.Колонки.Добавить("ХарактеристикаПоиск", Метаданные.ОпределяемыеТипы.ХарактеристикаНоменклатурыБЭД.Тип);
	ТаблицаТоваров.Колонки.Добавить("УпаковкаПоиск", Метаданные.ОпределяемыеТипы.УпаковкаНоменклатурыБЭД.Тип);
	ТаблицаТоваров.Колонки.Добавить("НоменклатураКонтрагента", Новый ОписаниеТипов("СправочникСсылка.НоменклатураКонтрагентов"));
	ТаблицаТоваров.Колонки.Добавить("Владелец", Метаданные.ОпределяемыеТипы.ВладелецНоменклатурыБЭД.Тип);
	ТаблицаТоваров.Колонки.Добавить("ИмяТабличнойЧасти", Строка100);
	ТаблицаТоваров.Колонки.Добавить("ИмяКолонкиНоменклатурыКонтрагента", Строка100);
	ТаблицаТоваров.Колонки.Добавить("ПредставлениеНоменклатурыКонтрагента", Строка100);
	ТаблицаТоваров.Колонки.Добавить("КоличествоНоменклатурыКонтрагентов", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(4, 0, ДопустимыйЗнак.Неотрицательный)));
	
	Возврат ТаблицаТоваров;
	
КонецФункции

&НаСервере
Процедура ОбработатьРезультатПроверкиРедактированияСопоставления(РезультатПроверки, СопоставлениеДокумента)
	
	Если РезультатПроверки.ЕстьОшибкиСопоставления Тогда
		КоличествоНеСопоставленных = 0;
		СообщитьОбОшибкахРедактированияСопоставления(РезультатПроверки.НаборСопоставлений, КоличествоНеСопоставленных);
		СопоставлениеДокумента.НеСопоставлено = КоличествоНеСопоставленных;
		СопоставлениеДокумента.Проблемы       = СтрШаблон(НСтр("ru = 'Не сопоставлено %1'"), КоличествоНеСопоставленных);
		СопоставлениеДокумента.Обработано     = Ложь;
	Иначе
		
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("СсылкаНаДокумент", ТекущийДокумент);
		Сопоставления = ТаблицаСопоставлений.НайтиСтроки(ПараметрыОтбора);
		Для Каждого Сопоставление Из Сопоставления Цикл
			Сопоставление.Сопоставлено = Истина;
		КонецЦикла;
		
		СопоставлениеДокумента.НеСопоставлено = 0;
		СопоставлениеДокумента.Обработано     = Истина;
		
		ПроверитьСопоставлениеВсехДокументовНаФорме();
		Если Не ОтображатьТолькоСтраницуРедактирования Тогда
			ИзменитьОтображениеСтраницы(Элементы, ВсеДокументыСопоставлены, Истина, Заголовок,
				ВладелецНоменклатурыВРодительномПадеже, ОтображатьТолькоСтраницуРедактирования, ОткрыватьСтраницуРедактированияДокумента);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СообщитьОбОшибкахРедактированияСопоставления(НаборСопоставлений, КоличествоНеСопоставленных)

	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("СсылкаНаДокумент", ТекущийДокумент);
	Для Каждого ЭлементКоллекции Из НаборСопоставлений Цикл;
		
		ПараметрыОтбора.Вставить("НомерСтроки", ЭлементКоллекции.НомерСтроки);
		Сопоставления = ТаблицаСопоставлений.НайтиСтроки(ПараметрыОтбора);
		Сопоставление = Сопоставления[0];
		ИндексСтроки  = ТаблицаСопоставлений.Индекс(Сопоставление);
		
		Если ЭлементКоллекции.Сопоставлено Тогда
			Сопоставление.Сопоставлено = Истина;
		Иначе
			Сопоставление.Сопоставлено = Ложь;
			КоличествоНеСопоставленных = КоличествоНеСопоставленных + 1;
			
			Если ЗначениеЗаполнено(Сопоставление.НоменклатураКонтрагента) Тогда
				ТекстСообщения = СтрШаблон(НСтр("ru = 'Не совпадает сопоставление с данными документа в колонке ""%1"" в строке %2.'"),
				ПредставлениеКолонкиНоменклатураКонтрагента, Сопоставление.НомерСтроки);
			Иначе
				ТекстСообщения = СтрШаблон(НСтр("ru = 'Не заполнена колонка ""%1"" в строке %2.'"),
				ПредставлениеКолонкиНоменклатураКонтрагента, Сопоставление.НомерСтроки);
			КонецЕсли;
			
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ,
				СтрШаблон("ТаблицаСопоставлений[%1].НоменклатураКонтрагента", ИндексСтроки));
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьДублирующиеСтрокиПоНеСопоставленнойНоменклатуреКонтрагента(Отказ)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаСопоставлений", ТаблицаСопоставлений.Выгрузить());
	Запрос.УстановитьПараметр("СсылкаНаДокумент"    , ТекущийДокумент);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаСопоставлений.Номенклатура КАК Номенклатура,
	|	ТаблицаСопоставлений.Характеристика КАК Характеристика,
	|	ТаблицаСопоставлений.Упаковка КАК Упаковка,
	|	ТаблицаСопоставлений.НомерСтроки КАК НомерСтроки,
	|	ТаблицаСопоставлений.НоменклатураКонтрагента КАК НоменклатураКонтрагента
	|ПОМЕСТИТЬ ТаблицаСопоставлений
	|ИЗ
	|	&ТаблицаСопоставлений КАК ТаблицаСопоставлений
	|ГДЕ
	|	ТаблицаСопоставлений.СсылкаНаДокумент = &СсылкаНаДокумент";

	Запрос.УстановитьПараметр("ПустаяНоменклатура", СопоставлениеНоменклатурыКонтрагентовСлужебный.ПустаяСсылкаНоменклатурыБЭД());
	ТекстЗапроса = СопоставлениеНоменклатурыКонтрагентов.ТекстЗапросаПоискаДублирующихСтрокНесопоставленнойНоменклатурыКонтрагентов("ТаблицаСопоставлений");
	
	Запрос.Текст = Запрос.Текст + ОбщегоНазначения.РазделительПакетаЗапросов() + ТекстЗапроса;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ТекстОшибки = НСтр("ru = 'В строке не может быть выбрана ""%1"", т.к. в предыдущих строках она соответствует другой номенклатуре.'");
		ТекстОшибки = СтрШаблон(ТекстОшибки, Выборка.НоменклатураКонтрагента);
		
		ПараметрОтбора = Новый Структура;
		ПараметрОтбора.Вставить("НомерСтроки"     , Выборка.НомерСтроки);
		ПараметрОтбора.Вставить("СсылкаНаДокумент", ТекущийДокумент);
		НайденныеСтроки = ТаблицаСопоставлений.НайтиСтроки(ПараметрОтбора);
		ИндексСтроки = ТаблицаСопоставлений.Индекс(НайденныеСтроки[0]);
		
		ОбщегоНазначения.СообщитьПользователю(
			ТекстОшибки,
			,
			ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ТаблицаСопоставлений", ИндексСтроки + 1, "НоменклатураКонтрагента"),
			,
			Отказ);
		
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ПроверитьСопоставлениеВсехДокументовНаФорме()
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Обработано", Ложь);
	СтрокиДокументов = ТаблицаДокументов.НайтиСтроки(ПараметрыОтбора);
	
	ВсеДокументыСопоставлены = Не ЗначениеЗаполнено(СтрокиДокументов);

КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьРедактированиеСопоставления()
	
	Если ОткрыватьСтраницуРедактированияДокумента Тогда
		ОбработатьРедактированиеСопоставленияНоменклатуры();
	КонецЕсли;
	
	СписокСопоставленныхДокументов = Новый Массив;
	Для Каждого ДокументСопоставления Из ТаблицаДокументов Цикл
		Если ДокументСопоставления.Обработано Тогда
			СписокСопоставленныхДокументов.Добавить(ДокументСопоставления.СсылкаНаДокумент);
		КонецЕсли;
	КонецЦикла;
	
	Если ЗначениеЗаполнено(СписокСопоставленныхДокументов) Тогда
		Закрыть(СписокСопоставленныхДокументов);
	Иначе
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Необходимо обработать документы для продолжения формирования электронных документов.'"));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

