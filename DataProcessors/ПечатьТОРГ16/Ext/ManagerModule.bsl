#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС
#Область ПрограммныйИнтерфейс

// Функция возвращает элемент таблицы доступных печатных форм объекта печати
//
Функция ДобавитьПечатнуюФорму(ПечатныеФормы) Экспорт
	
	МетаданныеМакета = МетаданныеМакета();
	МенеджерПечати = МетаданныеМакета.Родитель().ПолноеИмя();
	
	ПечатнаяФорма = УправлениеПечатьюБольничнаяАптека.ДобавитьПечатнуюФорму(ПечатныеФормы, "ТОРГ16", МенеджерПечати);
	ПечатнаяФорма.ПутьКМакету = ФормированиеПечатныхФормБольничнаяАптека.ПутьКМакету(МетаданныеМакета);
	ПечатнаяФорма.Представление = МетаданныеМакета.Представление();
	
	УправлениеПечатьюБольничнаяАптека.ДобавитьКомандуПечати(ПечатнаяФорма);
	
	Возврат ПечатнаяФорма;
	
КонецФункции

// Функция формирует печатную форму требование накладная ТОРГ-16
//
Функция ПечатьТОРГ16(МассивОбъектов, ОбъектыПечати) Экспорт
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.АвтоМасштаб        = Истина;
	
	ПолноеИмяМакета = ФормированиеПечатныхФормБольничнаяАптека.ПутьКМакету(МетаданныеМакета());
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_" + ПолноеИмяМакета;
	Макет = УправлениеПечатью.МакетПечатнойФормы(ПолноеИмяМакета);
	
	СтруктураТипов = ОбщегоНазначенияБольничнаяАптека.РазложитьМассивСсылокПоТипам(МассивОбъектов);
	
	НомерТипаДокумента = 0;
	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
		
		НомерТипаДокумента = НомерТипаДокумента + 1;
		Если НомерТипаДокумента > 1 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(СтруктураОбъектов.Ключ);
		
		ПараметрыПечати = Новый Структура;
		ПараметрыПечати.Вставить("ПолучатьЦены");
		ДанныеДляПечати = МенеджерОбъекта.ПолучитьДанныеДляПечати(СтруктураОбъектов.Значение, ПараметрыПечати);
		
		СформироватьТабличныйДокумент(ТабличныйДокумент, Макет, ДанныеДляПечати, ОбъектыПечати);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

#КонецОбласти // ПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

Процедура СформироватьТабличныйДокумент(ТабличныйДокумент, Макет, ДанныеДляПечати, ОбъектыПечати)
	
	ВалютаПечати = ЗначениеНастроекБольничнаяАптекаПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	
	Шапка = ДанныеДляПечати.РезультатПоШапке.Выбрать();
	ВыборкаПоДокументам = ДанныеДляПечати.РезультатПоТабличнойЧасти.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	РезультатПоСоставуКомиссии = Неопределено;
	ВыборкаПоКомиссиямДокументов = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ДанныеДляПечати, "РезультатПоСоставуКомиссии");
	Если ДанныеДляПечати.Свойство("РезультатПоСоставуКомиссии") Тогда
		ВыборкаПоКомиссиямДокументов = ДанныеДляПечати.РезультатПоСоставуКомиссии.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Иначе
		ВыборкаПоКомиссиямДокументов = Неопределено;
	КонецЕсли;
	
	ПервыйДокумент = Истина;
	Пока Шапка.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		Иначе
			ПервыйДокумент = Ложь;
		КонецЕсли;
		
		Если Шапка.ИсточникИнформацииОЦенах = Перечисления.ИсточникиИнформацииОЦенахДляПечати.ПоСебестоимости Тогда
			Если Шапка.ПредварительныйРасчет = Null Тогда
				ТекстСообщения = НСтр("ru = 'Не удалось получить цены по себестоимости для документа %Документ%: на %Период% не произведен расчет себестоимости.'");
				
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Документ%", Шапка.Ссылка);
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Период%", Формат(НачалоМесяца(Шапка.ДатаДокумента),"ДЛФ=DD"));
				
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
				
				Продолжить;
			ИначеЕсли Шапка.ПредварительныйРасчет Тогда
				ТекстСообщения = НСтр("ru = 'При печати документа %Документ% использовались данные предварительного расчета себестоимости.'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Документ%", Шапка.Ссылка);
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			КонецЕсли;
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		// Получение параметров для заполнения
		ДанныеШапки = ПолучитьДанныеШапкиДокумента(Шапка);
		
		// Вывод области Заголовок
		ФормированиеПечатныхФормБольничнаяАптека.ВывестиОбластьСоШтрихкодом(ТабличныйДокумент, Макет, "Заголовок", ДанныеШапки);
		
		// Формирование области ШапкаТаблицыПервогоЛиста
		ОбластьШапкаТаблицыПервогоЛиста = Новый Массив;
		ФормированиеПечатныхФормБольничнаяАптека.ДобавитьОбластьВМассивПоОписанию(Макет, "ШапкаТаблицыПервогоЛиста", ОбластьШапкаТаблицыПервогоЛиста);
		
		// Формирование области ШапкаТаблицыВторогоЛиста
		ОбластьШапкаТаблицыВторогоЛиста = Новый Массив;
		ФормированиеПечатныхФормБольничнаяАптека.ДобавитьОбластьВМассивПоОписанию(Макет, "ШапкаТаблицыВторогоЛиста", ОбластьШапкаТаблицыВторогоЛиста, ДанныеШапки);
		
		// Инициализация итогов по документу
		ПараметрыИтого = Новый Структура;
		ПараметрыИтого.Вставить("Сумма", 0);
		
		// Формирование многострочной части
		ВыборкаПоДокументам.Сбросить();
		ПараметрыПоиска = Новый Структура("Документ", Шапка.Ссылка);
		Если ВыборкаПоДокументам.НайтиСледующий(ПараметрыПоиска) Тогда
			ВыборкаСтрокТовары = ВыборкаПоДокументам.Выбрать();
			
			КлючиПараметров = ФормированиеПечатныхФормБольничнаяАптека.ПолучитьИменаКолонокТаблицы(ВыборкаСтрокТовары);
			
			ОбластиСтрокаПервогоЛиста = Новый Массив;
			ОбластиСтрокаВторогоЛиста = Новый Массив;
			
			КоличествоСтрок = ВыборкаСтрокТовары.Количество();
			Пока ВыборкаСтрокТовары.Следующий() Цикл
				
				// Формирование области СтрокаПервогоЛиста
				ФормированиеПечатныхФормБольничнаяАптека.ДобавитьОбластьВМассивПоОписанию(Макет, "СтрокаПервогоЛиста", ОбластиСтрокаПервогоЛиста, ДанныеШапки);
				
				// Формирование области СтрокаВторогоЛиста
				ДанныеСтрокиВторогоЛиста = Новый Структура(КлючиПараметров);
				ЗаполнитьЗначенияСвойств(ДанныеСтрокиВторогоЛиста, ВыборкаСтрокТовары);
				
				ТоварНаименование = ОбщегоНазначенияБольничнаяАптека.ПолучитьПредставлениеНоменклатурыДляПечати(
					ВыборкаСтрокТовары.ТоварНаименование,
					ВыборкаСтрокТовары.СерияНоменклатуры,
					ВыборкаСтрокТовары.Партия);
				
				ДанныеСтрокиВторогоЛиста.Вставить("ТоварНаименование", ТоварНаименование);
				
				ФормированиеПечатныхФормБольничнаяАптека.ДобавитьОбластьВМассивПоОписанию(Макет, "СтрокаВторогоЛиста", ОбластиСтрокаВторогоЛиста, ДанныеСтрокиВторогоЛиста);
				
				ФормированиеПечатныхФормБольничнаяАптека.РассчитатьИтоги(ДанныеСтрокиВторогоЛиста, ПараметрыИтого);
				
			КонецЦикла;
		КонецЕсли;
		
		ОбластиПодвала = Новый Массив;
		
		// Формирование области Итого
		ФормированиеПечатныхФормБольничнаяАптека.ДобавитьОбластьВМассивПоОписанию(Макет, "Итого", ОбластиПодвала, ПараметрыИтого);
		
		// Формирование области СуммаПрописью
		ПараметрыСуммаПрописью = Новый Структура("СуммаПрописью", РаботаСКурсамиВалют.СформироватьСуммуПрописью(ПараметрыИтого.Сумма, ВалютаПечати));
		ФормированиеПечатныхФормБольничнаяАптека.ДобавитьОбластьВМассивПоОписанию(Макет, "СуммаПрописью", ОбластиПодвала, ПараметрыСуммаПрописью);
		
		// Формирование области ЧленыКомиссииШапка
		ФормированиеПечатныхФормБольничнаяАптека.ДобавитьОбластьВМассивПоОписанию(Макет, "КомментарииПодписи", ОбластиПодвала);
		
		// Формирование области Комиссии
		ОбластиКомиссии = СформироватьОбластиКомиссии(Макет, Шапка, ВыборкаПоКомиссиямДокументов);
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ОбластиПодвала, ОбластиКомиссии);
		
		// Формирование области МОЛ
		ОбластиМОЛ = СформироватьОбластиМОЛ(Макет, Шапка);
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ОбластиПодвала, ОбластиМОЛ);
		
		// Формирование области Подписи
		ФормированиеПечатныхФормБольничнаяАптека.ДобавитьОбластьВМассивПоОписанию(Макет, "КомментарииПодписи2", ОбластиПодвала, ДанныеШапки);
		
		// Вывод области ШапкаТаблицыПервогоЛиста
		ТабличныйДокумент.Вывести(ОбластьШапкаТаблицыПервогоЛиста[0]);
		
		// Вывод области СтрокаПервогоЛиста
		ВывестиПакетОбластейСПроверкой(ТабличныйДокумент, ОбластиСтрокаПервогоЛиста, ОбластьШапкаТаблицыПервогоЛиста);
		
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		// Вывод области ШапкаТаблицыПервогоЛиста
		ТабличныйДокумент.Вывести(ОбластьШапкаТаблицыВторогоЛиста[0]);
		
		// Вывод области СтрокаВторогоЛиста
		Нумерация = Новый Структура("НомерСтраницы", 1);
		ВывестиПакетОбластейСПроверкой(ТабличныйДокумент, ОбластиСтрокаВторогоЛиста, ОбластьШапкаТаблицыВторогоЛиста,, ОбластиПодвала, Нумерация);
		
		// Вывод областей подвала
		ВывестиПакетОбластейСПроверкой(ТабличныйДокумент, ОбластиПодвала);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьДанныеШапкиДокумента(Шапка)
	
	КлючиПараметров = ФормированиеПечатныхФормБольничнаяАптека.ПолучитьИменаКолонокТаблицы(Шапка);
	
	Параметры = Новый Структура(КлючиПараметров);
	ЗаполнитьЗначенияСвойств(Параметры, Шапка);
	
	СведенияОбОрганизации    = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Шапка.Организация, Шапка.ДатаДокумента);
	ОрганизацияПредставление = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации);
	
	ОтветственныеЛица = ОтветственныеЛицаСервер.ПолучитьОтветственныеЛицаОрганизации(Шапка.Организация, Шапка.ДатаДокумента);
	МОЛ = РегистрыСведений.МатериальноОтветственныеЛица.ПолучитьДанныеОтветственного(Шапка.Склад, Шапка.ДатаДокумента);
	
	// Данные области Заголовок
	Параметры.Вставить("НомерДокумента"          , ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Шапка.НомерДокумента));
	Параметры.Вставить("РуководительФИО"         , ОтветственныеЛица.РуководительНаименование);
	Параметры.Вставить("РуководительДолжность"   , ОтветственныеЛица.РуководительДолжность);
	Параметры.Вставить("ОрганизацияПредставление", ОрганизацияПредставление);
	Параметры.Вставить("ОрганизацияОКПО"         , СведенияОбОрганизации.КодПоОКПО);
	Параметры.Вставить("МОЛ"                     , МОЛ.Ответственный);
	
	// Данные области СтрокаПервогоЛиста
	Параметры.Вставить("ДатаСписанияТовара", Шапка.ДатаДокумента);
	
	// Инициализация данных шапки таблицы
	Параметры.Вставить("НомерСтраницы", 1);
	
	Возврат Параметры;
	
КонецФункции

Функция СформироватьОбластиКомиссии(Макет, Шапка, ВыборкаПоКомиссиямДокументов)
	
	ОбластиКомиссии = Новый Массив;
	
	КоличествоЧленовКомиссии = 0;
	ПустыеСтроки = 4;
	ПредседательВСоставе = Истина;
	
	ПараметрыПоиска = Новый Структура("Документ", Шапка.Ссылка);
	Если ВыборкаПоКомиссиямДокументов <> Неопределено Тогда
		ВыборкаПоКомиссиямДокументов.Сбросить();
		Если ВыборкаПоКомиссиямДокументов.НайтиСледующий(ПараметрыПоиска) Тогда
			Комиссия = ВыборкаПоКомиссиямДокументов.Выбрать();
			КоличествоЧленовКомиссии = Комиссия.Количество();
		КонецЕсли;
	КонецЕсли;
	
	Для НомерЧленаКомиссии = 1 По Макс(КоличествоЧленовКомиссии, ПустыеСтроки) Цикл
		
		Параметры = Новый Структура;
		
		Если НомерЧленаКомиссии > КоличествоЧленовКомиссии Тогда
			ЧленКомиссииСтатус = ?(НомерЧленаКомиссии = 1, НСтр("ru = 'Председатель комиссии'"), ?(НомерЧленаКомиссии = 2, НСтр("ru = 'Члены комиссии'"), ""));
			Параметры.Вставить("Статус", ЧленКомиссииСтатус);
		Иначе
			
			Комиссия.Следующий();
			
			Если Комиссия.Председатель И НомерЧленаКомиссии = 1 Тогда
				Параметры.Вставить("Статус", НСтр("ru = 'Председатель комиссии'"));
				ПредседательВСоставе = Истина;
			ИначеЕсли ПредседательВСоставе И НомерЧленаКомиссии = 2
				  Или НомерЧленаКомиссии = 1 Тогда
				Параметры.Вставить("Статус", НСтр("ru = 'Члены комиссии'"));
			КонецЕсли;
			
			Параметры.Вставить("ПодписьФИО"      , ФизическиеЛицаКлиентСервер.ФамилияИнициалы(СокрЛП(Комиссия.Представление)));
			Параметры.Вставить("ПодписьДолжность", Комиссия.Должность);
			
		КонецЕсли;
		
		ФормированиеПечатныхФормБольничнаяАптека.ДобавитьОбластьВМассивПоОписанию(Макет, "Подписи", ОбластиКомиссии, Параметры);
		
	КонецЦикла;
	
	Возврат ОбластиКомиссии;
	
КонецФункции

Функция СформироватьОбластиМОЛ(Макет, Шапка)
	
	ОбластиМОЛ = Новый Массив;
	МОЛ = РегистрыСведений.МатериальноОтветственныеЛица.ПолучитьДанныеОтветственного(Шапка.Склад, Шапка.ДатаДокумента);
	
	ПустыеСтроки = 0;
	Для ИндексПодписи = 0 По ПустыеСтроки Цикл
		
		Параметры = Новый Структура;
		
		Если ИндексПодписи = 0 Тогда
			Параметры.Вставить("Статус"          , НСтр("ru = 'Материально ответственное лицо'"));
			Параметры.Вставить("ПодписьФИО"      , МОЛ.ФИО);
			Параметры.Вставить("ПодписьДолжность", МОЛ.Должность);
		КонецЕсли;
		
		ФормированиеПечатныхФормБольничнаяАптека.ДобавитьОбластьВМассивПоОписанию(Макет, "Подписи", ОбластиМОЛ, Параметры);
		
	КонецЦикла;
	
	Возврат ОбластиМОЛ;
	
КонецФункции

Процедура ВывестиПакетОбластейСПроверкой(ТабличныйДокумент,
										ВыводимыеОбласти,
										ОбластиСверху = Неопределено,
										ОбластиСнизу = Неопределено,
										ОбластиПривязки = Неопределено,
										ДанныеЗаполнения = Неопределено)
	
	МассивВыводимыхОбластей = Новый Массив;
	
	ГраницаОбластей = ВыводимыеОбласти.ВГраница();
	Для ИндексОбласти = 0 По ГраницаОбластей Цикл
		
		Область = ВыводимыеОбласти[ИндексОбласти];
		
		МассивВыводимыхОбластей.Добавить(Область);
		
		Если ОбластиСнизу <> Неопределено Тогда
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивВыводимыхОбластей, ОбластиСнизу);
		КонецЕсли;
		
		Если ОбластиПривязки <> Неопределено И ИндексОбласти = ГраницаОбластей Тогда
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивВыводимыхОбластей, ОбластиПривязки);
		КонецЕсли;
		
		Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабличныйДокумент, МассивВыводимыхОбластей) Тогда
			
			ВывестиПовторяемыеОбласти(ТабличныйДокумент, ОбластиСнизу, ДанныеЗаполнения);
			
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
			Если ДанныеЗаполнения <> Неопределено И ДанныеЗаполнения.Свойство("НомерСтраницы") Тогда
				ДанныеЗаполнения.НомерСтраницы = ДанныеЗаполнения.НомерСтраницы + 1;
			КонецЕсли;
			
			ВывестиПовторяемыеОбласти(ТабличныйДокумент, ОбластиСверху, ДанныеЗаполнения);
			
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(Область);
		МассивВыводимыхОбластей.Очистить();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ВывестиПовторяемыеОбласти(ТабличныйДокумент, ПовторяемыеОбласти, ДанныеЗаполнения)
	
	Если ПовторяемыеОбласти <> Неопределено Тогда
		
		Для Каждого Область Из ПовторяемыеОбласти Цикл
			Если ДанныеЗаполнения <> Неопределено Тогда
				Область.Параметры.Заполнить(ДанныеЗаполнения);
			КонецЕсли;
			ТабличныйДокумент.Вывести(Область);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Функция МетаданныеМакета()
	
	Возврат Метаданные.Обработки.ПечатьТОРГ16.Макеты.ПФ_MXL_ТОРГ16;
	
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции

#КонецЕсли
