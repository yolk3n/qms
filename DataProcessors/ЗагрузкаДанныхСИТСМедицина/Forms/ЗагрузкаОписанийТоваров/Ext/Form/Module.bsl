
////////////////////////////////////////////////////////////////////////////////
// ОПИСАНИЕ ПЕРЕМЕННЫХ
#Область ОписаниеПеременных

&НаКлиенте
Перем НачалоЗагрузки;

&НаКлиенте
Перем РезультатЗагрузки;

#КонецОбласти // ОписаниеПеременных

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ОтменятьРучныеКорректировки = Параметры.ОтменятьРучныеКорректировки;
	ОжидаютсяДанныеОтИТС = Истина;
	НомераРЛС.ЗагрузитьЗначения(Параметры.НомераРЛС.ВыгрузитьЗначения());
	Штрихкоды.ЗагрузитьЗначения(Параметры.Штрихкоды.ВыгрузитьЗначения());
	
	ОбщееКоличествоШтрихкодов = Штрихкоды.Количество();
	ПоискШтрихкодов = (ОбщееКоличествоШтрихкодов > 0);
	
	ОткрытьРезультатРаботыПриЗакрытии = Истина;
	
	ИнициализироватьЗагрузкуОписанийТоваров();
	ИнициализироватьОтображениеСостояния();
	
	АдресРезультатовВХранилище = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
	ПоместитьРезультатыВХранилище();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	#Если ВебКлиент Тогда
		Оповещение = Новый ОписаниеОповещения("ЗакрытьФорму", ОбщегоНазначенияБольничнаяАптекаКлиент, ЭтотОбъект);
		ПоказатьПредупреждение(Оповещение, НСтр("ru='Работа с ИТС:Медицина в веб-клиенте не поддерживается.'"));
	#Иначе
		
		НачалоЗагрузки = ТекущаяУниверсальнаяДатаВМиллисекундах();
		
		Если ПоискШтрихкодов Тогда
			ИмяОбработчика = "Подключаемый_ОбработатьПоискПоШтрихкодам";
			ИмяФайлаСРезультатамиПоиска = ПолучитьИмяВременногоФайла("qwr");
		Иначе
			ИмяОбработчика = "Подключаемый_ОбработатьПолучениеДанныхОтИТСМедицина";
		КонецЕсли;
		
		ПодключитьОбработчикОжидания(ИмяОбработчика, 0.1, Истина);
		
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИТСМедицина_ЗагрузкаДанныхСДискаИТС" Тогда
		Параметр.ЗагрузкаЗапрещена = Параметр.ЗагрузкаЗапрещена Или ОжидаютсяДанныеОтИТС;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ОжидаютсяДанныеОтИТС И КоличествоОжидаемыхФайлов > 0 Тогда
		ТекстСообщения = НСтр("ru='Ожидается получение данных с диска ИТС:Медицина. Возможно еще не все данные получены.
		                          |При закрытии формы, ожидание данных будет остановлено. Закрыть?'");
		ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияПроизвольнойФормы(ЭтотОбъект, Отказ, ЗавершениеРаботы, ТекстСообщения, "ЗакрытьФормуБезПодтверждения");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	Если ОткрытьРезультатРаботыПриЗакрытии И Объект.РезультатыЗагрузкиТоваров.Количество() > 0 Тогда
		ПоказатьРезультатРаботы();
	КонецЕсли;
	
	Оповестить("ЗакрытиеФормыЗагрузкиОписанийТоваров",, ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ
#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОткрытьРезультатРаботы(Команда)
	
	ПоказатьРезультатРаботы();
	
КонецПроцедуры

#КонецОбласти // ОбработчикиКомандФормы

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ИнициализироватьОтображениеСостояния()
	
	Если ПоискШтрихкодов Тогда
		Элементы.ГруппаКартинкиСтатусаОперации.ТекущаяСтраница = Элементы.ГруппаПоискПоШтрихкодам;
	Иначе
		Элементы.ГруппаКартинкиСтатусаОперации.ТекущаяСтраница = Элементы.ГруппаДлительнаяОперация;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьЗагрузкуОписанийТоваров()
	
	Если НомераРЛС.Количество() = 0 Тогда
		Если Штрихкоды.Количество() = 0 Тогда
			НомераРЛС.Добавить("*");
		КонецЕсли;
	Иначе
		Для Каждого НомерРЛС Из НомераРЛС Цикл
			Обработки.ЗагрузкаДанныхСИТСМедицина.УстановитьРезультатЗагрузки(
				Объект.РезультатыЗагрузкиТоваров,
				НомерРЛС.Значение,
				"НетДанных",
				"",
				"");
		КонецЦикла;
		КоличествоОжидаемыхФайлов = НомераРЛС.Количество();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьРезультатРаботы()
	
	РезультатРаботы = Новый Структура("АдресРезультатовВХранилище", АдресРезультатовВХранилище);
	РезультатЗагрузки = ОткрытьФорму("Обработка.ЗагрузкаДанныхСИТСМедицина.Форма.РезультатыЗагрузкиОписанийТоваров", РезультатРаботы);
	
КонецПроцедуры

&НаСервере
Процедура ПоместитьРезультатыВХранилище()
	
	ПоместитьВоВременноеХранилище(Объект.РезультатыЗагрузкиТоваров.Выгрузить(), АдресРезультатовВХранилище);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Отображение состояния загрузки
#Область Состояние

&НаКлиенте
Процедура ОбновитьСостояниеПолученияДанных()
	
	ОбновитьСостояние();
	ОбновитьВремяРаботы();
	ОбновитьКартинкуСостояния();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСостояние()
	
	Если ПоискШтрихкодов Тогда
		ШаблонСостояния = НСтр("ru= 'Поиск штрихкодов: %1 из %2'");
		Состояние = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ШаблонСостояния,
			КоличествоОбработанныхШтрихкодов,
			ОбщееКоличествоШтрихкодов);
		
	Иначе
		ШаблонСостояния = НСтр("ru= 'Получено: %1
		                            |Успешно обработано: %2
		                            |Ошибок: %3'");
		
		Состояние = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ШаблонСостояния,
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				?(КоличествоОжидаемыхФайлов > 0, НСтр("ru='%1 из %2'"), НСтр("ru='%1'")),
				КоличествоПринятыхФайлов,
				КоличествоОжидаемыхФайлов),
			КоличествоУспешноОбработанныхФайлов,
			КоличествоОшибок);
		
	КонецЕсли;
	
	Элементы.ОткрытьРезультатРаботы.Доступность = Не ПоискШтрихкодов;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьВремяРаботы()
	
	ПрошлоВремени = ОбщегоНазначенияБольничнаяАптекаКлиентСервер.ПрошлоВремени(НачалоЗагрузки);
	ТекущееВремяРаботы = ОбщегоНазначенияБольничнаяАптекаКлиентСервер.ПредставлениеВремени(ПрошлоВремени);
	Если ВремяРаботы <> ТекущееВремяРаботы Тогда
		ВремяРаботы = ТекущееВремяРаботы;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьКартинкуСостояния()
	
	Если ОжидаютсяДанныеОтИТС Тогда
		Если ПоискШтрихкодов Тогда
			СтраницаКартинки = Элементы.ГруппаПоискПоШтрихкодам;
		Иначе
			СтраницаКартинки = Элементы.ГруппаДлительнаяОперация;
		КонецЕсли;
	Иначе
		Если КоличествоОшибок Тогда
			СтраницаКартинки = Элементы.ГруппаЗавершеноСОшибками;
		Иначе
			СтраницаКартинки = Элементы.ГруппаУспешноеЗавершение;
		КонецЕсли;
	КонецЕсли;
	
	Если Элементы.ГруппаКартинкиСтатусаОперации.ТекущаяСтраница <> СтраницаКартинки Тогда
		Элементы.ГруппаКартинкиСтатусаОперации.ТекущаяСтраница = СтраницаКартинки;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти // Состояние

////////////////////////////////////////////////////////////////////////////////
// Загрузка описаний
#Область Загрузка

&НаКлиенте
Процедура Подключаемый_ОбработатьПолучениеДанныхОтИТСМедицина()
	
	ПомещенныеФайлы = ИТСМедицинаКлиент.ПолучитьОписанияТоваров(НомераРЛС.ВыгрузитьЗначения());
	
	Если ПомещенныеФайлы.Количество() Тогда
		
		КоличествоПринятыхФайлов = КоличествоПринятыхФайлов + ПомещенныеФайлы.Количество();
		
		Если НомераРЛС[0].Значение <> "*" Тогда
			Для Каждого ПомещенныйФайл Из ПомещенныеФайлы Цикл
				ЭлементСписка = НомераРЛС.НайтиПоЗначению(ПомещенныйФайл.НомерРЛС);
				Если ЭлементСписка <> Неопределено Тогда
					НомераРЛС.Удалить(ЭлементСписка);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		Если ОбработатьПомещенныеФайлы(ПомещенныеФайлы) Тогда
			ОповеститьОбИзменении(Тип("СправочникСсылка.РегистрЛекарственныхСредств"));
		КонецЕсли;
		
		Если РезультатЗагрузки <> Неопределено И РезультатЗагрузки.Открыта() Тогда
			РезультатЗагрузки.ПодключитьОбработчикОжидания("ОбновитьРезультатЗагрузки", 0.2, Истина);
		КонецЕсли;
		
	КонецЕсли;
	
	Если НомераРЛС.Количество() Тогда
		ПодключитьОбработчикОжидания(
			"Подключаемый_ОбработатьПолучениеДанныхОтИТСМедицина",
			СтандартныеПодсистемыКлиент.ПараметрыРаботыКлиента().НастройкиИТСМедицина.ПериодичностьПроверкиКаталогаОбмена,
			Истина);
	Иначе
		ОжидаютсяДанныеОтИТС = Ложь;
	КонецЕсли;
	
	ОбновитьСостояниеПолученияДанных();
	
КонецПроцедуры

&НаСервере
Функция ОбработатьПомещенныеФайлы(Знач ПомещенныеФайлы)
	
	ЕстьУспешноОбработанныеФайлы = Ложь;
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла("rls");
	Для Каждого ПомещенныйФайл Из ПомещенныеФайлы Цикл
		
		ИсходныеДанные = Неопределено;
		Попытка
			Файл = ПомещенныйФайл.Файл;
			Данные = ПолучитьИзВременногоХранилища(Файл.Хранение);
			Данные.Записать(ИмяВременногоФайла);
			
			Текст = Новый ТекстовыйДокумент;
			Текст.Прочитать(ИмяВременногоФайла);
			
			ИсходныеДанные = Текст.ПолучитьТекст();
			Описание = РаботаСРЛС.РазобратьСообщениеСДискаИТС(ИсходныеДанные);
			Если Описание.ТипСообщения <> "ОписаниеТовара" Тогда
				ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru='Некорректный тип сообщения: %1'"),
					Описание.ТипСообщения);
			КонецЕсли;
			
			Результат = Обработки.ЗагрузкаДанныхСИТСМедицина.ЗагрузитьОписаниеТовара(Описание, ОтменятьРучныеКорректировки);
			
			Обработки.ЗагрузкаДанныхСИТСМедицина.УстановитьРезультатЗагрузки(
				Объект.РезультатыЗагрузкиТоваров,
				Описание.НомерРЛС,
				Результат,
				"",
				ИсходныеДанные);
			КоличествоУспешноОбработанныхФайлов = КоличествоУспешноОбработанныхФайлов + 1;
			ЕстьУспешноОбработанныеФайлы = Истина;
		Исключение
			Обработки.ЗагрузкаДанныхСИТСМедицина.УстановитьРезультатЗагрузки(
				Объект.РезультатыЗагрузкиТоваров,
				?(ЗначениеЗаполнено(Описание) И Описание.Свойство("НомерРЛС"), Описание.НомерРЛС, ПомещенныйФайл.НомерРЛС),
				"Ошибка",
				ОбработкаОшибок.КраткоеПредставлениеОшибки(ИнформацияОбОшибке()),
				?(ИсходныеДанные = Неопределено, "", ИсходныеДанные));
			КоличествоОшибок = КоличествоОшибок + 1;
		КонецПопытки;
		
	КонецЦикла;
	
	ПоместитьРезультатыВХранилище();
	
	ФайловыеФункцииБольничнаяАптекаСервер.УдалитьФайлКаталог(ИмяВременногоФайла);
	
	Возврат ЕстьУспешноОбработанныеФайлы;
	
КонецФункции

#КонецОбласти // Загрузка

////////////////////////////////////////////////////////////////////////////////
// Поиск по штрихкодам
#Область ПоискПоШтрихкодам

&НаКлиенте
Процедура Подключаемый_ОбработатьПоискПоШтрихкодам()
	
	Если ОжидаютсяДанныеПоШтрихкодамОтИТС Тогда
		
		Если ОбработатьРезультатПоискаПоШтрихкодам() Тогда
			ОжидаютсяДанныеПоШтрихкодамОтИТС = Ложь;
		КонецЕсли;
		
	ИначеЕсли Штрихкоды.Количество() Тогда
		
		КоличествоШтрихкодовВЗапросе = ЗапуститьПоискПоШтрихкодам();
		Если КоличествоШтрихкодовВЗапросе Тогда
			ОжидаютсяДанныеПоШтрихкодамОтИТС = Истина;
			КоличествоОбработанныхШтрихкодов = КоличествоОбработанныхШтрихкодов + КоличествоШтрихкодовВЗапросе;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ОжидаютсяДанныеПоШтрихкодамОтИТС Или Штрихкоды.Количество() Тогда
		ПодключитьОбработчикОжидания(
			"Подключаемый_ОбработатьПоискПоШтрихкодам",
			СтандартныеПодсистемыКлиент.ПараметрыРаботыКлиента().НастройкиИТСМедицина.ПериодичностьПроверкиКаталогаОбмена,
			Истина);
	Иначе
		ПоискШтрихкодов = Ложь;
		Если НайденныеПрепараты.Количество() > 0 Тогда
			ИТСМедицинаКлиент.ВыгрузитьОписанияПрепаратовИзБазыРЛС(НайденныеПрепараты.ВыгрузитьЗначения());
			ИнициализироватьЗагрузкуОписанийТоваров();
			ПодключитьОбработчикОжидания("Подключаемый_ОбработатьПолучениеДанныхОтИТСМедицина", 0.1, Истина);
		Иначе
			ПоказатьПредупреждение(ОбщегоНазначенияБольничнаяАптекаКлиент.ЗакрытьФормуПослеПредупреждения(ЭтотОбъект), НСтр("ru='По штрихкодам информация отсутствует.'"));
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ОбновитьСостояниеПолученияДанных();
	
КонецПроцедуры

&НаКлиенте
Функция ЗапуститьПоискПоШтрихкодам()
	
	МаксимальнаяДлинаЗапроса = 250;
	КоличествоШтрихкодовВЗапросе = 0;
	
	Разделитель = " | ";
	ДлинаРазделителя = СтрДлина(Разделитель);
	ТекстЗапроса = "";
	КоличествоШтрихкодов = Штрихкоды.Количество();
	Для Индекс = 1 По КоличествоШтрихкодов Цикл
		Штрихкод = Штрихкоды[КоличествоШтрихкодов - Индекс].Значение;
		Если СтрДлина(ТекстЗапроса) + СтрДлина(Штрихкод) + ДлинаРазделителя > МаксимальнаяДлинаЗапроса Тогда
			Прервать;
		КонецЕсли;
		ТекстЗапроса = ТекстЗапроса + Разделитель + Штрихкод;
		Штрихкоды.Удалить(КоличествоШтрихкодов - Индекс);
		КоличествоШтрихкодовВЗапросе = КоличествоШтрихкодовВЗапросе + 1;
	КонецЦикла;
	
	Если КоличествоШтрихкодовВЗапросе Тогда
		ТекстЗапроса = Сред(ТекстЗапроса, ДлинаРазделителя + 1);
		ПараметрыПоиска = Новый Структура("ТЕКСТ", Новый Структура("Включить", ТекстЗапроса));
		ИТСМедицинаКлиент.НайтиВБазеРЛС(ПараметрыПоиска, ИмяФайлаСРезультатамиПоиска);
	КонецЕсли;
	
	Возврат КоличествоШтрихкодовВЗапросе;
	
КонецФункции

&НаКлиенте
Функция ОбработатьРезультатПоискаПоШтрихкодам()
	
	ФайлСРезультатамиПоиска = Новый Файл(ИмяФайлаСРезультатамиПоиска);
	Если Не ФайлСРезультатамиПоиска.Существует() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Данные = Новый ДвоичныеДанные(ИмяФайлаСРезультатамиПоиска);
	РазобратьРезультатыПоиска(ПоместитьВоВременноеХранилище(Данные));
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Процедура РазобратьРезультатыПоиска(Знач АдресФайла)
	
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла();
	ДанныеФайла = ПолучитьИзВременногоХранилища(АдресФайла);
	ДанныеФайла.Записать(ИмяВременногоФайла);
	
	Текст = Новый ТекстовыйДокумент;
	Текст.Прочитать(ИмяВременногоФайла);
	
	ТекстСообщения = Текст.ПолучитьТекст();
	Если ПустаяСтрока(ТекстСообщения) Тогда
		Возврат;
	КонецЕсли;
	
	РезультатыПоиска = РаботаСРЛС.РазобратьСообщениеСДискаИТС(ТекстСообщения);
	
	Если РезультатыПоиска.ТипСообщения <> "РезультатыПоискаЛС" Тогда
		ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Некорректный тип сообщения: %1'"),
			РезультатыПоиска.ТипСообщения);
	КонецЕсли;
		
	Для Каждого Результат Из РезультатыПоиска.Результаты Цикл
		
		СсылкаНаОписание = Сред(Результат.path, СтрДлина("src/") + 1);
		НомерРЛС = РаботаСРЛС.ПолучитьНомерРЛСИзПутиКОписаниюЛС(СсылкаНаОписание);
		
		НайденныеПрепараты.Добавить(СсылкаНаОписание);
		НомераРЛС.Добавить(НомерРЛС);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти // ПоискПоШтрихкодам

#КонецОбласти // СлужебныеПроцедурыИФункции
