
////////////////////////////////////////////////////////////////////////////////
// ОПИСАНИЕ ПЕРЕМЕННЫХ
#Область ОписаниеПеременных

&НаКлиенте
Перем НачалоЗагрузки;

&НаКлиенте
Перем РезультатЗагрузки;

#КонецОбласти // ОписаниеПеременных

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ОткрытьРезультатРаботыПриЗакрытии = Истина;
	
	ОтменятьРучныеКорректировки = Параметры.ОтменятьРучныеКорректировки;
	НомераРЛС.ЗагрузитьЗначения(Параметры.НомераРЛС.ВыгрузитьЗначения());
	Штрихкоды.ЗагрузитьЗначения(Параметры.Штрихкоды.ВыгрузитьЗначения());
	
	ОбщееКоличествоШтрихкодов = Штрихкоды.Количество();
	ПоискШтрихкодов = (ОбщееКоличествоШтрихкодов > 0);
	
	ИнициализироватьЗагрузкуОписанийТоваров();
	ИнициализироватьОтображениеСостояния();
	
	АдресРезультатовВХранилище = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
	ПоместитьРезультатыВХранилище();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПолучитьДанныеССайтаИТС();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(ИдентификаторЗадания) Тогда
		
		ТекстСообщения = НСтр("ru='Идет обработка данных с сайта 1С:ИТС. Возможно еще не все данные обработаны.
		                          |При закрытии формы, обработка данных будет остановлена. Закрыть?'");
		ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияПроизвольнойФормы(ЭтотОбъект, Отказ, ЗавершениеРаботы, ТекстСообщения, "ЗакрытьФормуБезПодтверждения");
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	Если ОткрытьРезультатРаботыПриЗакрытии И Объект.РезультатыЗагрузкиТоваров.Количество() > 0 Тогда
		ПоказатьРезультатРаботы();
	КонецЕсли;
	
	Оповестить("ЗакрытиеФормыЗагрузкиОписанийТоваров",, ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ
#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОткрытьРезультатРаботы(Команда)
	
	ПоказатьРезультатРаботы();
	
КонецПроцедуры

#КонецОбласти // ОбработчикиКомандФормы

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ИнициализироватьОтображениеСостояния()
	
	Если ПоискШтрихкодов Тогда
		Элементы.ГруппаКартинкиСтатусаОперации.ТекущаяСтраница = Элементы.ГруппаПоискПоШтрихкодам;
	Иначе
		Элементы.ГруппаКартинкиСтатусаОперации.ТекущаяСтраница = Элементы.ГруппаДлительнаяОперация;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьЗагрузкуОписанийТоваров()
	
	Если НомераРЛС.Количество() = 0 Тогда
		Если Штрихкоды.Количество() = 0 Тогда
			НомераРЛС.Добавить("*");
		КонецЕсли;
	Иначе
		Для Каждого НомерРЛС Из НомераРЛС Цикл
			Обработки.ЗагрузкаДанныхСИТСМедицина.УстановитьРезультатЗагрузки(
				Объект.РезультатыЗагрузкиТоваров,
				НомерРЛС.Значение,
				"НетДанных",
				"",
				"");
		КонецЦикла;
		ОжидаемоеКоличество = НомераРЛС.Количество();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьРезультатРаботы()
	
	РезультатРаботы = Новый Структура("АдресРезультатовВХранилище", АдресРезультатовВХранилище);
	РезультатЗагрузки = ОткрытьФорму("Обработка.ЗагрузкаДанныхСИТСМедицина.Форма.РезультатыЗагрузкиОписанийТоваров", РезультатРаботы);
	
КонецПроцедуры

&НаСервере
Процедура ПоместитьРезультатыВХранилище()
	
	ПоместитьВоВременноеХранилище(Объект.РезультатыЗагрузкиТоваров.Выгрузить(), АдресРезультатовВХранилище);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Отображение состояния загрузки
#Область Состояние

&НаКлиенте
Процедура ОбновитьСостояниеПолученияДанных()
	
	ОбновитьСостояние();
	ОбновитьВремяРаботы();
	ОбновитьКартинкуСостояния();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСостояние()
	
	Если ПоискШтрихкодов Тогда
		ШаблонСостояния = НСтр("ru= 'Поиск штрихкодов: %1 из %2'");
		Состояние = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ШаблонСостояния,
			КоличествоОбработанных,
			ОбщееКоличествоШтрихкодов);
		
	Иначе
		
		ШаблонСостояния = НСтр("ru= 'Получено: %1
		                            |Успешно: %2
		                            |Ошибок: %3'");
		
		Состояние = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ШаблонСостояния,
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				?(ОжидаемоеКоличество > 0, НСтр("ru='%1 из %2'"), НСтр("ru='%1'")),
				КоличествоОбработанных,
				ОжидаемоеКоличество),
			КоличествоУспешноОбработанных,
			КоличествоОшибок);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьВремяРаботы()
	
	ПрошлоВремени = ОбщегоНазначенияБольничнаяАптекаКлиентСервер.ПрошлоВремени(НачалоЗагрузки);
	ТекущееВремяРаботы = ОбщегоНазначенияБольничнаяАптекаКлиентСервер.ПредставлениеВремени(ПрошлоВремени);
	Если ВремяРаботы <> ТекущееВремяРаботы Тогда
		ВремяРаботы = ТекущееВремяРаботы;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьКартинкуСостояния()
	
	Если ЗначениеЗаполнено(ИдентификаторЗадания) Тогда
		Если ПоискШтрихкодов Тогда
			СтраницаКартинки = Элементы.ГруппаПоискПоШтрихкодам;
		Иначе
			СтраницаКартинки = Элементы.ГруппаДлительнаяОперация;
		КонецЕсли;
	Иначе
		Если КоличествоОшибок Тогда
			СтраницаКартинки = Элементы.ГруппаЗавершеноСОшибками;
		Иначе
			СтраницаКартинки = Элементы.ГруппаУспешноеЗавершение;
		КонецЕсли;
	КонецЕсли;
	
	Если Элементы.ГруппаКартинкиСтатусаОперации.ТекущаяСтраница <> СтраницаКартинки Тогда
		Элементы.ГруппаКартинкиСтатусаОперации.ТекущаяСтраница = СтраницаКартинки;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти // Состояние

////////////////////////////////////////////////////////////////////////////////
// Получение описаний
#Область Получение

&НаКлиенте
Процедура ПолучитьДанныеССайтаИТС()
	
	Если Аутентификация = Неопределено Тогда
		Аутентификация = ИТСМедицинаВызовСервера.ПараметрыАутентификацииНаСайте();
	КонецЕсли;
	
	Если ПустаяСтрока(Аутентификация.Логин) Или ПустаяСтрока(Аутентификация.Пароль) Тогда
		// Проходим через форму авторизации принудительно.
		Оповещение = Новый ОписаниеОповещения("ПолучитьДанныеССайтаИТСПослеВводаПароля", ЭтотОбъект);
		ИТСМедицинаКлиент.АвторизоватьсяНаСайтеИТС(ЭтотОбъект, Оповещение);
	Иначе
		ПолучитьДанныеССайтаИТСЗавершение();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьДанныеССайтаИТСПослеВводаПароля(ЗапросАутентификации, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(ЗапросАутентификации) = Тип("Структура") Тогда
		Аутентификация = ЗапросАутентификации;
		
		Если ПустаяСтрока(Аутентификация.Логин) Или ПустаяСтрока(Аутентификация.Пароль) Тогда
			// На повторный ввод пароля
			ПолучитьДанныеССайтаИТС();
			Возврат;
		КонецЕсли;
	Иначе
		ЗакрытьФормуБезПодтверждения = Истина;
		Закрыть();
		Возврат;
	КонецЕсли;
	
	ПолучитьДанныеССайтаИТСЗавершение();
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьДанныеССайтаИТСЗавершение()
	
	ОчиститьСообщения();
	
	НачалоЗагрузки = ТекущаяУниверсальнаяДатаВМиллисекундах();
	Задание = ЗапуститьФоновуюЗагрузкуССайтаНаСервере();
	
	ОбновитьСостояниеПолученияДанных();
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Истина;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	ПараметрыОжидания.ОповещениеОПрогрессеВыполнения = Новый ОписаниеОповещения("ОтобразитьПрогресс", ЭтотОбъект);
	
	ОповеститьОЗавершении = Новый ОписаниеОповещения("ОбработатьЗавершениеЗагрузки", ЭтотОбъект);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(Задание, ОповеститьОЗавершении, ПараметрыОжидания);
	
КонецПроцедуры

&НаСервере
Функция ЗапуститьФоновуюЗагрузкуССайтаНаСервере()
	
	ПараметрыЗадания = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыЗадания.НаименованиеФоновогоЗадания = НСтр("ru = 'Загрузка описаний товаров РЛС'");
	
	ПараметрыЗагрузки = Новый Структура;
	ПараметрыЗагрузки.Вставить("НомераРЛС", НомераРЛС.ВыгрузитьЗначения());
	ПараметрыЗагрузки.Вставить("Штрихкоды", Штрихкоды.ВыгрузитьЗначения());
	ПараметрыЗагрузки.Вставить("ОтменятьРучныеКорректировки", ОтменятьРучныеКорректировки);
	ПараметрыЗагрузки.Вставить("Аутентификация", Аутентификация);
	
	Задание = ДлительныеОперации.ВыполнитьВФоне(
		"Обработки.ЗагрузкаДанныхСИТСМедицина.ЗагрузитьОписаниеТоваров", ПараметрыЗагрузки, ПараметрыЗадания);
	
	ИдентификаторЗадания = Задание.ИдентификаторЗадания;
	Возврат Задание;
	
КонецФункции

#КонецОбласти // Получение

////////////////////////////////////////////////////////////////////////////////
// Загрузка описаний
#Область Загрузка

&НаКлиенте
Процедура ОтобразитьПрогресс(Прогресс, ДополнительныеПараметры) Экспорт
	
	Если Прогресс = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Прогресс.Прогресс <> Неопределено Тогда
		ДанныеПрогресса = Прогресс.Прогресс.ДополнительныеПараметры;
		ПоискШтрихкодов = ДанныеПрогресса.Свойство("ПоискШтрихкодов");
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеПрогресса);
	КонецЕсли;
	
	ОбновитьСостояниеПолученияДанных();
	
	Если Прогресс.Сообщения.Количество() > 0 Тогда
		Если ЗаполнитьПрогресс(Прогресс.Сообщения) Тогда
			Если РезультатЗагрузки <> Неопределено И РезультатЗагрузки.Открыта() Тогда
				РезультатЗагрузки.ПодключитьОбработчикОжидания("ОбновитьРезультатЗагрузки", 0.2, Истина);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьЗавершениеЗагрузки(Результат, ДополнительныеПараметры) Экспорт
	
	ИдентификаторЗадания = Неопределено;
	
	Если Результат = Неопределено Тогда
		Возврат; // Задание отменено
	КонецЕсли;
	
	Если Результат.Статус = "Ошибка" Тогда
		
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Ошибка загрузки описаний товаров с сайта 1С:ИТС.
			         |%1'"), 
			Результат.КраткоеПредставлениеОшибки);
		Оповещение = Новый ОписаниеОповещения("ПовторитьАвторизациюНаСайтеИТС", ЭтотОбъект);
		ПоказатьПредупреждение(Оповещение, ТекстОшибки);
		
	Иначе // Результат.Статус = "Выполнено"
		
		ОбработатьЗавершениеЗагрузкиСервер(Результат.АдресРезультата);
		Если РезультатЗагрузки <> Неопределено И РезультатЗагрузки.Открыта() Тогда
			РезультатЗагрузки.ПодключитьОбработчикОжидания("ОбновитьРезультатЗагрузки", 0.2, Истина);
		КонецЕсли;
		Если КоличествоПринятых > 0 Тогда
			ОповеститьОбИзменении(Тип("СправочникСсылка.РегистрЛекарственныхСредств"));
		Иначе
			Закрыть();
			ВызватьИсключение НСтр("ru = 'Нет данных для обработки.'");
		КонецЕсли;
		
	КонецЕсли;
	
	ОбновитьСостояниеПолученияДанных();
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьЗавершениеЗагрузкиСервер(Знач АдресРезультата)
	
	Результат = ПолучитьИзВременногоХранилища(АдресРезультата);
	Если Результат <> Неопределено Тогда
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Результат);
		ОбновитьРезультатыЗагрузки(Результат.РезультатыЗагрузкиТоваров);
		ПоместитьРезультатыВХранилище();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ЗаполнитьПрогресс(Знач Сообщения)
	
	ДанныеОбновлены = Ложь;
	
	Для Каждого Сообщение Из Сообщения Цикл
		Если СтрНачинаетсяС(Сообщение.Текст, "{РезультатыЗагрузкиТоваров}") Тогда
			РезультатыЗагрузкиТоваров = ОбщегоНазначения.ЗначениеИзСтрокиXML(Сред(Сообщение.Текст, СтрДлина("{РезультатыЗагрузкиТоваров}") + 1));
			Если РезультатыЗагрузкиТоваров.Количество() > 0 Тогда
				ОбновитьРезультатыЗагрузки(РезультатыЗагрузкиТоваров);
				ДанныеОбновлены = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если ДанныеОбновлены Тогда
		ПоместитьРезультатыВХранилище();
	КонецЕсли;
	
	Возврат ДанныеОбновлены;
	
КонецФункции

&НаСервере
Процедура ОбновитьРезультатыЗагрузки(РезультатыЗагрузкиТоваров)
	
	Для Каждого СтрокаРезультата Из РезультатыЗагрузкиТоваров Цикл
		НайденныеСтроки = Объект.РезультатыЗагрузкиТоваров.НайтиСтроки(Новый Структура("НомерРЛС", СтрокаРезультата.НомерРЛС));
		Если НайденныеСтроки.Количество() > 0 Тогда
			ЗаполняемаяСтрока = НайденныеСтроки[0];
		Иначе
			ЗаполняемаяСтрока = Объект.РезультатыЗагрузкиТоваров.Добавить();
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(ЗаполняемаяСтрока, СтрокаРезультата);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПовторитьАвторизациюНаСайтеИТС(НеИспользуется) Экспорт
	
	Аутентификация.Пароль = "";
	ПолучитьДанныеССайтаИТС();
	
КонецПроцедуры

#КонецОбласти // Загрузка

#КонецОбласти // СлужебныеПроцедурыИФункции
