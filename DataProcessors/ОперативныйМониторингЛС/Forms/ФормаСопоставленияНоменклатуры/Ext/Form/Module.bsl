
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформлениеФормы();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Росздравнадзор = Константы.КонтрагентДляПроектаОперативныйМониторингЛС.Получить();
	Если Не ЗначениеЗаполнено(Росздравнадзор) Тогда
		ВызватьИсключение НСтр("ru = 'Не настроены параметры проекта оперативного мониторинга ЛС. Для настройки параметров перейдите Администрирование - Предприятие - Оперативный мониторинг ЛС.'");
	КонецЕсли;
	
	// заполняем список отборов
	СписокВыбора = Элементы.ОтборПоСтатусуСопоставления.СписокВыбора;
	СписокВыбора.Добавить("ВсеОбъекты",                          НСтр("ru = 'Все объекты'"));
	СписокВыбора.Добавить("СопоставленныеОбъектыНеутвержденные", НСтр("ru = 'Изменения'"));
	СписокВыбора.Добавить("НесопоставленныеОбъекты",             НСтр("ru = 'Несопоставленные объекты'"));
	СписокВыбора.Добавить("СопоставленныеОбъекты",               НСтр("ru = 'Сопоставленные объекты'"));
	СписокВыбора.Добавить("СопоставленныеОбъектыПоСсылке",       НСтр("ru = 'Сопоставленные объекты (жестко)'"));
	// установка отбора по умолчанию
	ОтборПоСтатусуСопоставления = "ВсеОбъекты";
	
	ЗаполнитьТаблицуСопоставления();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Не ЗакрытьФормуБезПодтверждения И ТаблицаНеутвержденныхСвязей.Количество() > 0 Тогда
		Отказ = Истина;
		Если Не ЗавершениеРаботы = Истина Тогда
			Оповещение = Новый ОписаниеОповещения("СохранитьНеутвержденныеСвязиПриЗакрытии", ЭтотОбъект);
			ТекстВопроса = НСтр("ru = 'Данные были изменены. Сохранить изменения?'");
			ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена, ,КодВозвратаДиалога.Да);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ
#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	Если ТаблицаНеутвержденныхСвязей.Количество() > 0 Тогда
		ЗаписатьНеутвержденныеСвязи();
	КонецЕсли;
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИОбновить(Команда)
	
	Если ТаблицаНеутвержденныхСвязей.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ЗаписатьНеутвержденныеСвязиИОбновить();
	
	// устанавливаем текущий отбор в табличной части сопоставления
	УстановитьОтборТабличныхЧастей();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСвязь(Команда)
	
	ТекущаяСтрока = Элементы.ТаблицаСопоставления.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущаяСтрока.СтатусСопоставленияДополнительный = 0 Тогда
		
		ТекстСообщения = НСтр("ru='Связь уже установлена.'");
		ПоказатьПредупреждение(, ТекстСообщения, 10);
		Возврат;
		
	КонецЕсли;
	
	Отбор = Новый Структура;
	Отбор.Вставить("Владелец", Росздравнадзор);
	Отбор.Вставить("DrugID", ТекущаяСтрока.УникальныйКодРосздравнадзора);
	Отбор.Вставить("PackNX", ТекущаяСтрока.КодРосздравнадзора);
	Отбор.Вставить("НесопоставленнаяНоменклатураСегмента");
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Отбор", Отбор);
	
	Оповещение = Новый ОписаниеОповещения("УстановитьСвязьЗавершение", ЭтотОбъект, ТекущаяСтрока);
	ОткрытьФорму("Справочник.НоменклатураКонтрагентов.ФормаВыбора", ПараметрыФормы, ЭтотОбъект,,,, Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСвязьЗавершение(Ответ, ТекущаяСтрока) Экспорт
	
	Если Ответ <> Неопределено Тогда
		ДобавитьСоответствие(ТекущаяСтрока, Ответ);
		УстановитьОтборТабличныхЧастей();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РазорватьСвязь(Команда)
	
	ВыделенныеСтроки = Элементы.ТаблицаСопоставления.ВыделенныеСтроки;
	
	ОтменитьСопоставлениеНаСервере(ВыделенныеСтроки);
	
	// обновляем отбор в табличных частях
	УстановитьОтборТабличныхЧастей();
	
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	
	Если ТаблицаНеутвержденныхСвязей.Количество() > 0 Тогда
		Оповещение = Новый ОписаниеОповещения("ОбновитьЗавершение", ЭтотОбъект);
		ТекстВопроса = НСтр("ru = 'Данные были изменены. При обновлении изменения будут потеряны. Продолжить?'");
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	Иначе
		ЗаполнитьТаблицуСопоставления();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ТаблицаНеутвержденныхСвязей.Очистить();
		ЗаполнитьТаблицуСопоставления();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьАвтоматическоеСопоставление(Команда)
	
	АвтоматическоеСопоставление();
	
КонецПроцедуры

#КонецОбласти // ОбработчикиКомандФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ
#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ОтборПоСтатусуСопоставленияПриИзменении(Элемент)
	
	УстановитьОтборТабличныхЧастей();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборЖНВЛСПриИзменении(Элемент)
	
	УстановитьОтборТабличныхЧастей();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборЖНВЛСКонтрольЦенПриИзменении(Элемент)
	
	УстановитьОтборТабличныхЧастей();
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаСопоставленияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле = Элементы.ТаблицаСопоставленияНоменклатура
	 Или Поле = Элементы.ТаблицаСопоставленияЕдиницаИзмерения
	 Или Поле = Элементы.ТаблицаСопоставленияУникальныйКодРосздравнадзора
	 Или Поле = Элементы.ТаблицаСопоставленияНоменклатураЭлементКАТКодРосЗдравНадзора Тогда
		Данные = Элементы.ТаблицаСопоставления.ДанныеСтроки(ВыбраннаяСтрока);
		Если ЗначениеЗаполнено(Данные.Номенклатура) Тогда
			ПоказатьЗначение(Неопределено, Данные.Номенклатура);
		КонецЕсли;
	Иначе
		Данные = Элементы.ТаблицаСопоставления.ДанныеСтроки(ВыбраннаяСтрока);
		Если ЗначениеЗаполнено(Данные.НоменклатураПоставщика) Тогда
			ПоказатьЗначение(Неопределено, Данные.НоменклатураПоставщика);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийЭлементовФормы

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформлениеФормы()
	
	// Цвет фона строк таблицы ТаблицаСопоставления
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТаблицаСопоставления.Имя);
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(Элемент.Отбор,
		"ТаблицаСопоставления.СтатусСопоставления", ВидСравненияКомпоновкиДанных.Равно, 2);
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветФона", ЦветаСтиля.ДобавленныйРеквизитФон);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборТабличныхЧастей()
	
	Если      ОтборПоСтатусуСопоставления = "ВсеОбъекты"                          			Тогда СтруктураОтбора = Новый Структура;
	ИначеЕсли ОтборПоСтатусуСопоставления = "НесопоставленныеОбъекты"             			Тогда СтруктураОтбора = Новый Структура("СтатусСопоставленияДополнительный", 1);
	ИначеЕсли ОтборПоСтатусуСопоставления = "СопоставленныеОбъекты"               			Тогда СтруктураОтбора = Новый Структура("СтатусСопоставленияДополнительный", 0);
	ИначеЕсли ОтборПоСтатусуСопоставления = "СопоставленныеОбъектыПоСсылке"        			Тогда СтруктураОтбора = Новый Структура("СтатусСопоставления",  0);
	ИначеЕсли ОтборПоСтатусуСопоставления = "СопоставленныеОбъектыНеутвержденные" 			Тогда СтруктураОтбора = Новый Структура("СтатусСопоставления",  2);
	КонецЕсли;
	
	Если ОтборЖНВЛСКонтрольЦен Тогда
		СтруктураОтбора.Вставить("ЖНВЛПКонтрольЦен", Истина);
	ИначеЕсли ОтборЖНВЛС Тогда
		СтруктураОтбора.Вставить("ЖНВЛП", Истина);
	КонецЕсли;
	
	Элементы.ТаблицаСопоставления.ОтборСтрок = ?(СтруктураОтбора.Количество(), Новый ФиксированнаяСтруктура(СтруктураОтбора), Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСоответствие(ТекущаяСтрока, НоменклатураПоставщика)
	
	ТекущаяСтрока.НоменклатураПоставщика = НоменклатураПоставщика;
	ТекущаяСтрока.СтатусСопоставления = 2;
	ТекущаяСтрока.СтатусСопоставленияДополнительный = 0;
	
	РанееИзмененныеСвязи = ТаблицаНеутвержденныхСвязей.НайтиСтроки(Новый Структура("НоменклатураПоставщика", НоменклатураПоставщика));
	
	Если РанееИзмененныеСвязи.Количество() = 0 Тогда
		
		НеутвержденнаяСвязь = ТаблицаНеутвержденныхСвязей.Добавить();
		
	Иначе
		
		НеутвержденнаяСвязь =  РанееИзмененныеСвязи[0];
		
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(НеутвержденнаяСвязь, ТекущаяСтрока, "Номенклатура, ЕдиницаИзмерения, НоменклатураПоставщика");
	ЗаполнитьЗначенияСвойств(ТекущаяСтрока, ПолучитьКодыНоменклатурыСегмента(НоменклатураПоставщика));
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьКодыНоменклатурыСегмента(НоменклатураПоставщика)
	Возврат РегистрыСведений.ДанныеДействующегоСправочникаЛС.ПолучитьКодыНоменклатурыСегмента(НоменклатураПоставщика);
КонецФункции

&НаСервере
Процедура ОтменитьСопоставлениеНаСервере(ВыделенныеСтроки)
	
	Для Каждого ИдентификаторСтроки Из ВыделенныеСтроки Цикл
		
		ТекущиеДанные = ТаблицаСопоставления.НайтиПоИдентификатору(ИдентификаторСтроки);
		
		Если ТекущиеДанные.СтатусСопоставленияДополнительный = 0 Тогда
			
			ОтменитьСопоставлениеДанных(ТекущиеДанные);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОтменитьСопоставлениеДанных(ТекущиеДанные)
	
	Отбор = Новый Структура;
	Отбор.Вставить("Номенклатура", ТекущиеДанные.Номенклатура);
	Отбор.Вставить("ЕдиницаИзмерения", ТекущиеДанные.ЕдиницаИзмерения);
	Отбор.Вставить("НоменклатураПоставщика", ТекущиеДанные.НоменклатураПоставщика);
	
	НайденныеСтроки = ТаблицаНеутвержденныхСвязей.НайтиСтроки(Отбор);
	
	Если НайденныеСтроки.Количество() > 0 Тогда
		
		// удаляем неутвержденную связь в таблице неутвержденных связей
		ТаблицаНеутвержденныхСвязей.Удалить(НайденныеСтроки[0]);
		
	Иначе
		
		РазрывСуществующейСвязи = ТаблицаНеутвержденныхСвязей.Добавить();
		РазрывСуществующейСвязи.НоменклатураПоставщика = ТекущиеДанные.НоменклатураПоставщика;
		
	КонецЕсли;
	
	// добавляем в таблицу сопоставления две строки: источника и приемника
	ТекущиеДанные.НоменклатураПоставщика = Неопределено;
	ТекущиеДанные.DrugID = Неопределено;
	ТекущиеДанные.PackNX = Неопределено;
	
	ТекущиеДанные.СтатусСопоставления = 2;
	ТекущиеДанные.СтатусСопоставленияДополнительный = 1; // несопоставленные объекты
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьНеутвержденныеСвязиПриЗакрытии(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ЗаписатьНеутвержденныеСвязи();
	ИначеЕсли Ответ = КодВозвратаДиалога.Нет Тогда
		ЗакрытьФормуБезПодтверждения = Истина;
	Иначе
		Возврат;
	КонецЕсли;
	
	Закрыть();
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьНеутвержденныеСвязиИОбновить()
	
	ЗаписатьНеутвержденныеСвязи();
	ЗаполнитьТаблицуСопоставления();
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьНеутвержденныеСвязи()
	
	НачатьТранзакцию();
	
	Попытка
		
		Для Каждого СтрокаТаблицы Из ТаблицаНеутвержденныхСвязей Цикл
			
			НоменклатураПоставщика = СтрокаТаблицы.НоменклатураПоставщика.ПолучитьОбъект();
			НоменклатураПоставщика.Номенклатура = СтрокаТаблицы.Номенклатура;
			НоменклатураПоставщика.ЕдиницаИзмерения = СтрокаТаблицы.ЕдиницаИзмерения;
			
			НоменклатураПоставщика.Записать();
			
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		ВызватьИсключение;
		
	КонецПопытки;
	
	ТаблицаНеутвержденныхСвязей.Очистить();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуСопоставления()
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ЗаполнитьИсходныеТаблицы(МенеджерВременныхТаблиц, Росздравнадзор);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СопоставляемаяНоменклатура.Номенклатура                  КАК Номенклатура,
	|	ЕСТЬNULL(НоменклатураПоставщиков.ЕдиницаИзмерения, СопоставляемаяНоменклатура.ЕдиницаИзмерения)  КАК ЕдиницаИзмерения,
	|	СопоставляемаяНоменклатура.КодРосздравнадзора            КАК КодРосздравнадзора,
	|	СопоставляемаяНоменклатура.УникальныйКодРосздравнадзора  КАК УникальныйКодРосздравнадзора,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СопоставляемаяНоменклатура.Номенклатура.ЭлементКАТ.ЖНВЛП, ЗНАЧЕНИЕ(Перечисление.СпискиЖНВЛП.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.СпискиЖНВЛП.ПустаяСсылка)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ                                                    КАК ЖНВЛП,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СопоставляемаяНоменклатура.Номенклатура.ЭлементКАТ.ЖНВЛП, ЗНАЧЕНИЕ(Перечисление.СпискиЖНВЛП.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.СпискиЖНВЛП.ВключеноВКонтрольЦен)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                                                    КАК ЖНВЛПКонтрольЦен,
	|	ВЫБОР
	|		КОГДА СопоставляемаяНоменклатура.Номенклатура.ЭлементКАТ.ЖНВЛП = ЗНАЧЕНИЕ(Перечисление.СпискиЖНВЛП.ВключеноВКонтрольЦен)
	|			ТОГДА 2
	|		КОГДА ЕСТЬNULL(СопоставляемаяНоменклатура.Номенклатура.ЭлементКАТ.ЖНВЛП, ЗНАЧЕНИЕ(Перечисление.СпискиЖНВЛП.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.СпискиЖНВЛП.ПустаяСсылка)
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ                                                    КАК НомерКартинки,
	|	НоменклатураПоставщиков.НоменклатураПоставщика           КАК НоменклатураПоставщика,
	|	НоменклатураПоставщиков.DrugID                           КАК DrugID,
	|	НоменклатураПоставщиков.PackNX                           КАК PackNX,
	|	ВЫБОР
	|		КОГДА НоменклатураПоставщиков.Номенклатура ЕСТЬ NULL
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ                                                    КАК СтатусСопоставления,
	|	ВЫБОР
	|		КОГДА НоменклатураПоставщиков.Номенклатура ЕСТЬ NULL
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ                                                    КАК СтатусСопоставленияДополнительный
	|ИЗ
	|	СопоставляемаяНоменклатура КАК СопоставляемаяНоменклатура
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		НоменклатураПоставщика КАК НоменклатураПоставщиков
	|	ПО
	|		СопоставляемаяНоменклатура.Номенклатура = НоменклатураПоставщиков.Номенклатура
	|";
	
	ТаблицаСопоставления.Загрузить(Запрос.Выполнить().Выгрузить());
	
	СортироватьТаблицуСопоставленияНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура АвтоматическоеСопоставление()
	
	ТаблицаУстановленныхСоответствий = ТаблицаСопоставления.Выгрузить(Новый Структура("СтатусСопоставленияДополнительный", 0));
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ЗаполнитьИсходныеТаблицы(МенеджерВременныхТаблиц, Росздравнадзор);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ТаблицаУстановленныхСоответствий", ТаблицаУстановленныхСоответствий);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	УстановленныеСвязи.Номенклатура            КАК Номенклатура,
	|	УстановленныеСвязи.ЕдиницаИзмерения        КАК ЕдиницаИзмерения,
	|	УстановленныеСвязи.НоменклатураПоставщика  КАК НоменклатураПоставщика
	|ПОМЕСТИТЬ УстановленныеСвязи
	|ИЗ
	|	&ТаблицаУстановленныхСоответствий КАК УстановленныеСвязи
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СопоставляемаяНоменклатура.Номенклатура                  КАК Номенклатура,
	|	СопоставляемаяНоменклатура.ЕдиницаИзмерения              КАК ЕдиницаИзмерения,
	|	СопоставляемаяНоменклатура.КодРосздравнадзора            КАК КодРосздравНадзора,
	|	СопоставляемаяНоменклатура.УникальныйКодРосздравнадзора  КАК УникальныйКодРосздравнадзора
	|ПОМЕСТИТЬ НесопоставленнаяНоменклатура
	|ИЗ
	|	СопоставляемаяНоменклатура КАК СопоставляемаяНоменклатура
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		УстановленныеСвязи КАК УстановленныеСвязи
	|	ПО
	|		СопоставляемаяНоменклатура.Номенклатура = УстановленныеСвязи.Номенклатура
	|ГДЕ
	|	УстановленныеСвязи.Номенклатура ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СопоставляемаяНоменклатураПоставщика.НоменклатураПоставщика          КАК НоменклатураПоставщика,
	|	СопоставляемаяНоменклатураПоставщика.НоменклатураПоставщика.Артикул  КАК Артикул,
	|	СопоставляемаяНоменклатураПоставщика.DrugID                          КАК DrugID,
	|	СопоставляемаяНоменклатураПоставщика.PackNX                          КАК PackNX
	|ПОМЕСТИТЬ НесопоставленнаяНоменклатураПоставщика
	|ИЗ
	|	НоменклатураПоставщика КАК СопоставляемаяНоменклатураПоставщика
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		УстановленныеСвязи КАК УстановленныеСвязи
	|	ПО
	|		СопоставляемаяНоменклатураПоставщика.НоменклатураПоставщика = УстановленныеСвязи.НоменклатураПоставщика
	|ГДЕ
	|	УстановленныеСвязи.НоменклатураПоставщика ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НесопоставленнаяНоменклатура.Номенклатура                      КАК Номенклатура,
	|	НесопоставленнаяНоменклатура.ЕдиницаИзмерения                  КАК ЕдиницаИзмерения,
	|	НесопоставленнаяНоменклатураПоставщика.НоменклатураПоставщика  КАК НоменклатураПоставщика
	|ПОМЕСТИТЬ АвтоматическоеСопоставлениеПолное
	|ИЗ
	|	НесопоставленнаяНоменклатура КАК НесопоставленнаяНоменклатура
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		НесопоставленнаяНоменклатураПоставщика КАК НесопоставленнаяНоменклатураПоставщика
	|	ПО
	|		ВЫБОР
	|			КОГДА НесопоставленнаяНоменклатураПоставщика.DrugID <> 0
	|					И НесопоставленнаяНоменклатура.УникальныйКодРосздравНадзора <> 0 ТОГДА
	|				НесопоставленнаяНоменклатураПоставщика.DrugID = НесопоставленнаяНоменклатура.УникальныйКодРосздравНадзора
	|			ИНАЧЕ ВЫБОР
	|				КОГДА НесопоставленнаяНоменклатура.КодРосздравНадзора <> 0 ТОГДА
	|					НесопоставленнаяНоменклатураПоставщика.PackNX = НесопоставленнаяНоменклатура.КодРосздравНадзора
	|			ИНАЧЕ
	|				ЛОЖЬ
	|			КОНЕЦ
	|		КОНЕЦ
	|ГДЕ
	|	(НЕ НесопоставленнаяНоменклатураПоставщика.НоменклатураПоставщика ЕСТЬ NULL)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДублиНоменклатуры.Номенклатура  КАК Номенклатура
	|ПОМЕСТИТЬ ТаблицаНеправильноСопоставленныхОбъектовНоменклатуры
	|ИЗ
	|	(ВЫБРАТЬ
	|		АвтоматическоеСопоставлениеПолное.Номенклатура КАК Номенклатура
	|	ИЗ
	|		АвтоматическоеСопоставлениеПолное КАК АвтоматическоеСопоставлениеПолное
	|	
	|	СГРУППИРОВАТЬ ПО
	|		АвтоматическоеСопоставлениеПолное.Номенклатура
	|	
	|	ИМЕЮЩИЕ
	|		СУММА(1) > 1) КАК ДублиНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДублиНоменклатурыПоставщика.НоменклатураПоставщика  КАК НоменклатураПоставщика
	|ПОМЕСТИТЬ ТаблицаНеправильноСопоставленныхОбъектовНоменклатурыПоставщика
	|ИЗ
	|	(ВЫБРАТЬ
	|		АвтоматическоеСопоставлениеПолное.НоменклатураПоставщика КАК НоменклатураПоставщика
	|	ИЗ
	|		АвтоматическоеСопоставлениеПолное КАК АвтоматическоеСопоставлениеПолное
	|	
	|	СГРУППИРОВАТЬ ПО
	|		АвтоматическоеСопоставлениеПолное.НоменклатураПоставщика
	|	
	|	ИМЕЮЩИЕ
	|		СУММА(1) > 1) КАК ДублиНоменклатурыПоставщика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура            КАК Номенклатура,
	|	ВложенныйЗапрос.ЕдиницаИзмерения        КАК ЕдиницаИзмерения,
	|	ВложенныйЗапрос.НоменклатураПоставщика  КАК НоменклатураПоставщика,
	|	2                                       КАК СтатусСопоставления
	|//ПОМЕСТИТЬ ТаблицаАвтоматическиСопоставленныхОбъектов
	|ИЗ
	|	(ВЫБРАТЬ
	|		АвтоматическоеСопоставлениеПолное.Номенклатура КАК Номенклатура,
	|		АвтоматическоеСопоставлениеПолное.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		АвтоматическоеСопоставлениеПолное.НоменклатураПоставщика КАК НоменклатураПоставщика
	|	ИЗ
	|		АвтоматическоеСопоставлениеПолное КАК АвтоматическоеСопоставлениеПолное
	|			ЛЕВОЕ СОЕДИНЕНИЕ
	|				ТаблицаНеправильноСопоставленныхОбъектовНоменклатуры КАК ТаблицаНеправильноСопоставленныхОбъектовНоменклатуры
	|			ПО
	|				АвтоматическоеСопоставлениеПолное.Номенклатура = ТаблицаНеправильноСопоставленныхОбъектовНоменклатуры.Номенклатура
	|			ЛЕВОЕ СОЕДИНЕНИЕ
	|				ТаблицаНеправильноСопоставленныхОбъектовНоменклатурыПоставщика КАК ТаблицаНеправильноСопоставленныхОбъектовНоменклатурыПоставщика
	|			ПО
	|				АвтоматическоеСопоставлениеПолное.НоменклатураПоставщика = ТаблицаНеправильноСопоставленныхОбъектовНоменклатурыПоставщика.НоменклатураПоставщика
	|	ГДЕ
	|		ТаблицаНеправильноСопоставленныхОбъектовНоменклатуры.Номенклатура ЕСТЬ NULL
	|		И ТаблицаНеправильноСопоставленныхОбъектовНоменклатурыПоставщика.НоменклатураПоставщика ЕСТЬ NULL
	|) КАК ВложенныйЗапрос
	|";
	
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СтрокаСопоставления = ТаблицаУстановленныхСоответствий.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаСопоставления, Выборка);
		
		ДобавленнаяСвязь = ТаблицаНеутвержденныхСвязей.Добавить();
		ЗаполнитьЗначенияСвойств(ДобавленнаяСвязь, Выборка, "Номенклатура, ЕдиницаИзмерения, НоменклатураПоставщика");
		
	КонецЦикла;
	
	Запрос.УстановитьПараметр("ТаблицаУстановленныхСоответствий", ТаблицаУстановленныхСоответствий);
	Запрос.Текст = 
	"УНИЧТОЖИТЬ УстановленныеСвязи
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ НесопоставленнаяНоменклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ НесопоставленнаяНоменклатураПоставщика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(УстановленныеСвязи.Номенклатура КАК Справочник.Номенклатура)  КАК Номенклатура,
	|	УстановленныеСвязи.ЕдиницаИзмерения                                    КАК ЕдиницаИзмерения,
	|	УстановленныеСвязи.НоменклатураПоставщика                              КАК НоменклатураПоставщика,
	|	УстановленныеСвязи.СтатусСопоставления                                 КАК СтатусСопоставления
	|ПОМЕСТИТЬ УстановленныеСвязи
	|ИЗ
	|	&ТаблицаУстановленныхСоответствий КАК УстановленныеСвязи
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(СопоставляемаяНоменклатура.Номенклатура КАК Справочник.Номенклатура)  КАК Номенклатура,
	|	СопоставляемаяНоменклатура.ЕдиницаИзмерения                                    КАК ЕдиницаИзмерения
	|ПОМЕСТИТЬ НесопоставленнаяНоменклатура
	|ИЗ
	|	СопоставляемаяНоменклатура КАК СопоставляемаяНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			УстановленныеСвязи КАК УстановленныеСвязи
	|		ПО
	|			СопоставляемаяНоменклатура.Номенклатура = УстановленныеСвязи.Номенклатура
	|ГДЕ
	|	УстановленныеСвязи.Номенклатура ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УстановленныеСвязи.Номенклатура            КАК Номенклатура,
	|	УстановленныеСвязи.ЕдиницаИзмерения        КАК ЕдиницаИзмерения,
	|	ЕстьNULL(УстановленныеСвязи.Номенклатура.ЭлементКАТ.КодРосздравнадзора, 0)            КАК КодРосздравнадзора,
	|	ЕстьNULL(УстановленныеСвязи.Номенклатура.ЭлементКАТ.УникальныйКодРосздравнадзора, 0)  КАК УникальныйКодРосздравнадзора,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(УстановленныеСвязи.Номенклатура.ЭлементКАТ.ЖНВЛП, ЗНАЧЕНИЕ(Перечисление.СпискиЖНВЛП.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.СпискиЖНВЛП.ПустаяСсылка)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ                                      КАК ЖНВЛП,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(УстановленныеСвязи.Номенклатура.ЭлементКАТ.ЖНВЛП, ЗНАЧЕНИЕ(Перечисление.СпискиЖНВЛП.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.СпискиЖНВЛП.ВключеноВКонтрольЦен)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                                      КАК ЖНВЛПКонтрольЦен,
	|	ВЫБОР
	|		КОГДА УстановленныеСвязи.Номенклатура.ЭлементКАТ.ЖНВЛП = ЗНАЧЕНИЕ(Перечисление.СпискиЖНВЛП.ВключеноВКонтрольЦен)
	|			ТОГДА 2
	|		КОГДА ЕСТЬNULL(УстановленныеСвязи.Номенклатура.ЭлементКАТ.ЖНВЛП, ЗНАЧЕНИЕ(Перечисление.СпискиЖНВЛП.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.СпискиЖНВЛП.ПустаяСсылка)
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ                                      КАК НомерКартинки,
	|	УстановленныеСвязи.НоменклатураПоставщика  КАК НоменклатураПоставщика,
	|	КодыНоменклатуры.DrugID                    КАК DrugID,
	|	КодыНоменклатуры.PackNX                    КАК PackNX,
	|	УстановленныеСвязи.СтатусСопоставления     КАК СтатусСопоставления,
	|	0                                          КАК СтатусСопоставленияДополнительный
	|ИЗ
	|	УстановленныеСвязи КАК УстановленныеСвязи
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ДанныеДействующегоСправочникаЛС КАК КодыНоменклатуры
	|	ПО
	|		УстановленныеСвязи.НоменклатураПоставщика = КодыНоменклатуры.Номенклатура
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	НесопоставленнаяНоменклатура.Номенклатура      КАК Номенклатура,
	|	НесопоставленнаяНоменклатура.ЕдиницаИзмерения  КАК ЕдиницаИзмерения,
	|	ЕстьNULL(НесопоставленнаяНоменклатура.Номенклатура.ЭлементКАТ.КодРосздравнадзора, 0)            КАК КодРосздравнадзора,
	|	ЕстьNULL(НесопоставленнаяНоменклатура.Номенклатура.ЭлементКАТ.УникальныйКодРосздравнадзора, 0)  КАК УникальныйКодРосздравнадзора,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(НесопоставленнаяНоменклатура.Номенклатура.ЭлементКАТ.ЖНВЛП, ЗНАЧЕНИЕ(Перечисление.СпискиЖНВЛП.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.СпискиЖНВЛП.ПустаяСсылка)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ                                          КАК ЖНВЛП,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(НесопоставленнаяНоменклатура.Номенклатура.ЭлементКАТ.ЖНВЛП, ЗНАЧЕНИЕ(Перечисление.СпискиЖНВЛП.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.СпискиЖНВЛП.ВключеноВКонтрольЦен)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                                          КАК ЖНВЛПКонтрольЦен,
	|	ВЫБОР
	|		КОГДА НесопоставленнаяНоменклатура.Номенклатура.ЭлементКАТ.ЖНВЛП = ЗНАЧЕНИЕ(Перечисление.СпискиЖНВЛП.ВключеноВКонтрольЦен)
	|			ТОГДА 2
	|		КОГДА ЕСТЬNULL(НесопоставленнаяНоменклатура.Номенклатура.ЭлементКАТ.ЖНВЛП, ЗНАЧЕНИЕ(Перечисление.СпискиЖНВЛП.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.СпискиЖНВЛП.ПустаяСсылка)
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ                                          КАК НомерКартинки,
	|	НЕОПРЕДЕЛЕНО                                   КАК НоменклатураПоставщика,
	|	НЕОПРЕДЕЛЕНО                                   КАК DrugID,
	|	НЕОПРЕДЕЛЕНО                                   КАК PackNX,
	|	1                                              КАК СтатусСопоставления,
	|	1                                              КАК СтатусСопоставленияДополнительный
	|ИЗ
	|	НесопоставленнаяНоменклатура КАК НесопоставленнаяНоменклатура
	|";
	
	ТаблицаСопоставления.Загрузить(Запрос.Выполнить().Выгрузить());
	
	СортироватьТаблицуСопоставленияНаСервере();
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаполнитьИсходныеТаблицы(МенеджерВременныхТаблиц, Поставщик)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Поставщик", Поставщик);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	Номенклатура.Ссылка                                                КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА Номенклатура.Упаковка = ЗНАЧЕНИЕ(Справочник.ЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА Номенклатура.ОсновнаяЕдиницаУчета
	|		ИНАЧЕ Номенклатура.Упаковка
	|	КОНЕЦ                                                              КАК ЕдиницаИзмерения,
	|	ЕстьNULL(Номенклатура.ЭлементКАТ.КодРосЗдравНадзора, 0)            КАК КодРосздравнадзора,
	|	ЕстьNULL(Номенклатура.ЭлементКАТ.УникальныйКодРосЗдравНадзора, 0)  КАК УникальныйКодРосЗдравНадзора
	|ПОМЕСТИТЬ СопоставляемаяНоменклатура
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	(НЕ Номенклатура.ЭтоГруппа)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НоменклатураПоставщиков.Ссылка            КАК НоменклатураПоставщика,
	|	НоменклатураПоставщиков.Номенклатура      КАК Номенклатура,
	|	НоменклатураПоставщиков.ЕдиницаИзмерения  КАК ЕдиницаИзмерения,
	|	КодыНоменклатуры.DrugID                   КАК DrugID,
	|	КодыНоменклатуры.PackNX                   КАК PackNX,
	|	КодыНоменклатуры.Штрихкод                 КАК Штрихкод
	|ПОМЕСТИТЬ НоменклатураПоставщика
	|ИЗ
	|	Справочник.НоменклатураКонтрагентов КАК НоменклатураПоставщиков
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ДанныеДействующегоСправочникаЛС КАК КодыНоменклатуры
	|	ПО
	|		НоменклатураПоставщиков.Ссылка = КодыНоменклатуры.Номенклатура
	|
	|ГДЕ
	|	НоменклатураПоставщиков.Владелец = &Поставщик
	|	И НЕ НоменклатураПоставщиков.ЭтоГруппа
	|	И НЕ НоменклатураПоставщиков.ПометкаУдаления
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|";
	
	Запрос.Выполнить();
	
КонецПроцедуры

&НаСервере
Процедура СортироватьТаблицуСопоставленияНаСервере()
	
	ТаблицаСопоставления.Сортировать("СтатусСопоставленияДополнительный, СтатусСопоставления, Номенклатура, НоменклатураПоставщика");
	
КонецПроцедуры

#КонецОбласти // СлужебныеПроцедурыИФункции
