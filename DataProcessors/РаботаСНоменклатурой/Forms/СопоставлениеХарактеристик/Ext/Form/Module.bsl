
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Не Параметры.Свойство("Номенклатура", НоменклатураСсылка) Тогда
		ВызватьИсключение НСтр("ru = 'Не указана номенклатура'");
	КонецЕсли;
	
	РаботаСНоменклатуройПереопределяемый.ПолучитьВидНоменклатуры(НоменклатураСсылка, ВидНоменклатуры);
	
	Параметры.Свойство("ИдентификаторНоменклатуры",       ИдентификаторНоменклатуры);
	Параметры.Свойство("НаименованиеНоменклатурыСервиса", НаименованиеНоменклатурыСервиса);
	Параметры.Свойство("ЭтоРежимВыбораХарактеристики",    ЭтоРежимВыбораХарактеристики);
	
	ЗаполнитьРеквизитыФормы();
	
	ЗаполнитьХарактеристикиНоменклатуры();
	
	ЗаполнитьПодсказкиФормы();
	
	ЗаполнитьКоличествоХарактеристик();
	
	ОбновитьКоличествоСопоставленныхЗначений();
	
	НастроитьФормуПриСоздании();
	
	КлючСохраненияПоложенияОкна = СтрШаблон("%1", ЭтоРежимВыбораХарактеристики);
	
	НастроитьФормуПриДлительнойОперации(Истина, "Заполнение");
		
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Не ЭтоРежимВыбораХарактеристики Тогда
		ПолучитьХарактеристикиСервиса();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыХарактеристикиСервиса

&НаКлиенте
Процедура ХарактеристикиСервисаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле = Элементы.ХарактеристикиСервисаХарактеристикаИнформационнойБазы Тогда
		
		СтандартнаяОбработка = Ложь;
				
		ОтвязатьХарактеристику(Элементы.ХарактеристикиСервиса.ТекущаяСтрока);
				
		ОбновитьДоступностьКнопкиЗагрузки();	
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыХарактеристикиИнформационнойБазы

&НаКлиенте
Процедура ХарактеристикиИнформационнойБазыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если ЭтоРежимВыбораХарактеристики Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ОповеститьОВыборе(ВыбраннаяСтрока);
		
	Иначе
		
		СтандартнаяОбработка = Ложь;
		
		ПривязатьХарактеристику(Элементы.ХарактеристикиИнформационнойБазы.ТекущаяСтрока,
		Элементы.ХарактеристикиСервиса.ТекущаяСтрока);
		
		СпозиционироватьНаНовойСтроке();
		
		ОбновитьДоступностьКнопкиЗагрузки();
	
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура УбратьЗначение(Команда)
	
	ОтвязатьХарактеристику(Элементы.ХарактеристикиСервиса.ТекущаяСтрока);
	
	ОбновитьДоступностьКнопкиЗагрузки();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьЗначение(Команда)
		
	ПривязатьХарактеристику(Элементы.ХарактеристикиИнформационнойБазы.ТекущаяСтрока,
		Элементы.ХарактеристикиСервиса.ТекущаяСтрока);
	
	СпозиционироватьНаНовойСтроке();
	
	ОбновитьДоступностьКнопкиЗагрузки();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьХарактеристику(Команда)
	
	Если Элементы.ГруппаДекорацииДлительнойОперации.Видимость Тогда
		Возврат;
	КонецЕсли;
	
	ЗаписатьСоответствиеХарактеристик();
	
	СоздатьХарактеристику(Элементы.ХарактеристикиСервиса.ТекущиеДанные);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура НастроитьФормуПриДлительнойОперации(ЭтоНачалоДлительнойОперации, Режим)
	
	Если Режим = "Загрузка" Тогда
		Элементы.НадписьДлительнойОперации.Заголовок = НСтр("ru = 'Загрузка характеристики...'");
	ИначеЕсли Режим = "Заполнение" Тогда		
		
		Если ЭтоНачалоДлительнойОперации Тогда
			Элементы.ГруппаСтраницДлительнойОперации.ТекущаяСтраница = Элементы.СтраницаДлительнойОперации;
		Иначе
			Элементы.ГруппаСтраницДлительнойОперации.ТекущаяСтраница = Элементы.СтраницаДанных;
		КонецЕсли;
		
	КонецЕсли;
	
	Элементы.ГруппаДекорацииДлительнойОперации.Видимость = ЭтоНачалоДлительнойОперации И Режим = "Загрузка";	
	Элементы.ГруппаТаблицыРеквизитов.Доступность         = Не ЭтоНачалоДлительнойОперации;
	Элементы.ЗагрузитьХарактеристику.Доступность         = Не ЭтоНачалоДлительнойОперации;
	Элементы.Закрыть.Доступность                         = Не ЭтоНачалоДлительнойОперации;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьХарактеристикиСервиса()
		
	Оповещение = Новый ОписаниеОповещения("ПолучитьХарактеристикиЗавершение", ЭтотОбъект, 
		Новый Структура);		
	
	ПараметрыМетода = РаботаСНоменклатуройСлужебныйКлиентСервер.ПараметрыЗапросаХарактеристик();
	
	ПараметрыМетода.Вставить("ИдентификаторНоменклатуры", ИдентификаторНоменклатуры);
	ПараметрыМетода.Вставить("НаборПолей",                "Минимальный");
	ПараметрыМетода.Вставить("ЗаполнитьПризнакЗагрузки",  Истина);
	ПараметрыМетода.Вставить("НомерСтраницыДанных",       НомерСтраницыДанных);
	ПараметрыМетода.Вставить("ИсключитьЗагруженные",      Истина);
	ПараметрыМетода.Вставить("НоменклатураИсключение",    НоменклатураСсылка);
	
	РаботаСНоменклатуройКлиент.ПолучитьДанныеХарактеристикСервиса(
		Оповещение, 
		ПараметрыМетода, 
		ЭтотОбъект, 
		Неопределено, 
		Элементы.ГруппаДекорацииДлительнойОперации);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРеквизитыФормы()
	
	Если ЗначениеЗаполнено(ИдентификаторНоменклатуры)
		И ЗначениеЗаполнено(НаименованиеНоменклатурыСервиса) Тогда
		
		Возврат;
	КонецЕсли;
	
	ДанныеПоСсылке = РаботаСНоменклатурой.
		ПолучитьСоответствиеНоменклатурыПоСсылкамНоменклатуры(НоменклатураСсылка);
	
	Если ЗначениеЗаполнено(ДанныеПоСсылке) Тогда
		ИдентификаторНоменклатуры       = ДанныеПоСсылке[0].ИдентификаторНоменклатурыСервиса;
		НаименованиеНоменклатурыСервиса = ДанныеПоСсылке[0].ПредставлениеНоменклатурыСервиса;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьХарактеристикиЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ЗаполнитьСопоставленныеХарактеристики(Результат.АдресРезультата);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = 'Выберите характеристику или создайте новую'"));
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", Новый Цвет(200, 200, 200));
	
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ХарактеристикиСервиса.ХарактеристикаИнформационнойБазы");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ХарактеристикиСервисаХарактеристикаИнформационнойБазы.Имя);
	
	// Гиперссылка запроса данных.
	
	РаботаСНоменклатурой.УсловноеОформлениеГиперссылкиЗапросаДанных(ЭтотОбъект, "ХарактеристикиСервиса");
		
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьХарактеристикиНоменклатуры()
	
	ТекстЗапроса = "";
	
	РаботаСНоменклатуройПереопределяемый.ТекстЗапросаХарактеристикПоВладельцу(ТекстЗапроса);
	
	ТекстЗапроса = ТекстЗапроса + " ОБЪЕДИНИТЬ " + ТекстЗапроса;
	
	СхемаЗапроса = Новый СхемаЗапроса;
	
	СхемаЗапроса.УстановитьТекстЗапроса(ТекстЗапроса);
		
	ПакетЗапроса = СхемаЗапроса.ПакетЗапросов[0];
	ОператорЗапроса = ПакетЗапроса.Операторы[0];	
	
	ПакетЗапроса.Операторы[0].ВыбиратьРазличные = Истина;
	
	ОператорЗапроса.Отбор.Добавить("НЕ Характеристики.Ссылка В (&ВыбранныеОбъекты)");	
	ОператорЗапроса.Отбор.Добавить("НЕ Характеристики.Ссылка В (&УбранныеОбъекты)");	
	
	ТаблицаХарактеристик = ОператорЗапроса.Источники[0];
	СоответствиеНоменклатуры = ОператорЗапроса.Источники.
		Добавить("РегистрСведений.СоответствиеНоменклатурыРаботаСНоменклатурой","СоответствиеНоменклатуры");
		
	СоответствиеНоменклатуры.Соединения[0].ТипСоединения = ТипСоединенияСхемыЗапроса.ПравоеВнешнее;
	СоответствиеНоменклатуры.Соединения[0].Условие = 
		Новый ВыражениеСхемыЗапроса("Характеристики.Ссылка = СоответствиеНоменклатуры.Характеристика 
			|И СоответствиеНоменклатуры.Номенклатура = &Номенклатура
			|И СоответствиеНоменклатуры.Характеристика <> &ПустаяХарактеристика
			|И СоответствиеНоменклатуры.СтатусСопоставления = ЗНАЧЕНИЕ(Перечисление.СтатусыСопоставленияРаботаСНоменклатурой.Сопоставлено)");
	
	ОператорЗапроса.Отбор.Добавить("СоответствиеНоменклатуры.ИдентификаторХарактеристикиСервиса ЕСТЬ NULL");
	
	ОператорЗапроса = ПакетЗапроса.Операторы[1];
	
	ОператорЗапроса.Отбор.Добавить("Характеристики.Ссылка В (&УбранныеОбъекты)");	
	
	ПакетЗапроса.Колонки[0].Псевдоним = "Характеристика";
	
	СвойстваСписка = ОбщегоНазначения.СтруктураСвойствДинамическогоСписка();
	
	СвойстваСписка.ДинамическоеСчитываниеДанных = Истина;
	СвойстваСписка.ТекстЗапроса    = СхемаЗапроса.ПолучитьТекстЗапроса();
	СвойстваСписка.ОсновнаяТаблица = 
		РаботаСНоменклатурой.ПустаяСсылкаНаХарактеристику().Метаданные().ПолноеИмя();
	ОбщегоНазначения.УстановитьСвойстваДинамическогоСписка(Элементы.ХарактеристикиИнформационнойБазы, СвойстваСписка);
	
	ВариантИспользованияХарактеристик = РаботаСНоменклатурой.ВариантИспользованияХарактеристик(ВидНоменклатуры);	
	
	Владелец = ВидНоменклатуры;
	
	Если ВариантИспользованияХарактеристик = "Индивидуальные" Тогда
		Владелец = НоменклатураСсылка;
	КонецЕсли;
		
	ХарактеристикиИнформационнойБазы.Параметры.УстановитьЗначениеПараметра("ПустаяХарактеристика", РаботаСНоменклатурой.ПустаяСсылкаНаХарактеристику());
	ХарактеристикиИнформационнойБазы.Параметры.УстановитьЗначениеПараметра("Владелец",             Владелец);
	ХарактеристикиИнформационнойБазы.Параметры.УстановитьЗначениеПараметра("Номенклатура",         НоменклатураСсылка);
	ХарактеристикиИнформационнойБазы.Параметры.УстановитьЗначениеПараметра("ВыбранныеОбъекты",     ВыбранныеОбъекты);
	ХарактеристикиИнформационнойБазы.Параметры.УстановитьЗначениеПараметра("УбранныеОбъекты",      УбранныеОбъекты);
			
КонецПроцедуры

&НаСервере
Процедура НастроитьФормуПриСоздании()
	
	Элементы.ПояснениеКОперации.Видимость            = Не ЭтоРежимВыбораХарактеристики;
	Элементы.ГруппаОсталосьСопоставить.Видимость     = Не ЭтоРежимВыбораХарактеристики;
	Элементы.ХарактеристикиСервиса.Видимость         = Не ЭтоРежимВыбораХарактеристики;
	Элементы.ГруппаКнопкиТаблиц.Видимость            = Не ЭтоРежимВыбораХарактеристики;
	Элементы.ГруппаКнопокУправленияСписком.Видимость = Не ЭтоРежимВыбораХарактеристики;
	Элементы.ХарактеристикиИнформационнойБазы.МножественныйВыбор = Не ЭтоРежимВыбораХарактеристики;
	Элементы.ГруппаКнопокУправленияСписком.Видимость             = Не ЭтоРежимВыбораХарактеристики;
	
	Если ЭтоРежимВыбораХарактеристики Тогда
		Элементы.Закрыть.Заголовок                       = НСтр("ru = 'Выбрать'");
		Заголовок                                        = НСтр("ru = 'Характеристики'");
		Элементы.ХарактеристикиИнформационнойБазы.Ширина = 100;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСопоставленныеХарактеристики(АдресДанных)
	
	НастроитьФормуПриДлительнойОперации(Ложь, "Заполнение");
	
	ДанныеХарактеристик = РаботаСНоменклатурой.ДанныеВременногоХранилища(АдресДанных);
	
	Если Не ЗначениеЗаполнено(ДанныеХарактеристик) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	СоответствиеНоменклатурыРаботаСНоменклатурой.Характеристика КАК ХарактеристикаИнформационнойБазы,
	|	СоответствиеНоменклатурыРаботаСНоменклатурой.ИдентификаторХарактеристикиСервиса КАК ИдентификаторХарактеристики,
	|	СоответствиеНоменклатурыРаботаСНоменклатурой.ПредставлениеХарактеристикиСервиса КАК НаименованиеХарактеристикиСервиса
	|ИЗ
	|	РегистрСведений.СоответствиеНоменклатурыРаботаСНоменклатурой КАК СоответствиеНоменклатурыРаботаСНоменклатурой
	|ГДЕ
	|	СоответствиеНоменклатурыРаботаСНоменклатурой.Номенклатура = &Номенклатура
	|	И СоответствиеНоменклатурыРаботаСНоменклатурой.ИдентификаторХарактеристикиСервиса В(&ИдентификаторыХарактеристик)";
	
	Запрос.УстановитьПараметр("Номенклатура", НоменклатураСсылка);	
	Запрос.УстановитьПараметр("ИдентификаторыХарактеристик", ДанныеХарактеристик.ВыгрузитьКолонку("Идентификатор"));
	
	УстановитьПривилегированныйРежим(Истина);
	Выгрузка = Запрос.Выполнить().Выгрузить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Для каждого ЭлементКоллекции Из ДанныеХарактеристик Цикл
				
		НоваяСтрока = ХарактеристикиСервиса.Добавить();
		
		НоваяСтрока.ИдентификаторХарактеристики = ЭлементКоллекции.Идентификатор;
		НоваяСтрока.НаименованиеХарактеристикиСервиса = ЭлементКоллекции.Наименование;
		
		СтрокиХарактеристик = Выгрузка.НайтиСтроки(Новый Структура("ИдентификаторХарактеристики", ЭлементКоллекции.Идентификатор));
		
		Если СтрокиХарактеристик.Количество() > 0 Тогда
			НоваяСтрока.ХарактеристикаИнформационнойБазы = СтрокиХарактеристик[0].ХарактеристикаИнформационнойБазы;
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПодсказкиФормы()
		
	Элементы.ПояснениеКОперации.Заголовок = СтроковыеФункции.ФорматированнаяСтрока(
		НСтр("ru = 'Сопоставьте характеристики номенклатуры <b>%1</b> с характеристиками 1С:Номенклатуры <a href = ""Ссылка"">%2</a>'"), 
		НоменклатураСсылка, НаименованиеНоменклатурыСервиса);
	
КонецПроцедуры

&НаСервере
Процедура ОтвязатьХарактеристику(ТекущаяСтрока)
	
	Модифицированность = Истина;
	
	ТекущиеДанные = ХарактеристикиСервиса.НайтиПоИдентификатору(ТекущаяСтрока);
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	Если НЕ ЗначениеЗаполнено(ТекущиеДанные.ХарактеристикаИнформационнойБазы) Тогда
		Возврат;
	КонецЕсли;
		
	СтрокаДанных = ВыбранныеОбъекты.НайтиПоЗначению(ТекущиеДанные.ХарактеристикаИнформационнойБазы);
	
	Если СтрокаДанных <> Неопределено Тогда
		ВыбранныеОбъекты.Удалить(СтрокаДанных);
	Иначе
		УбранныеОбъекты.Добавить(ТекущиеДанные.ХарактеристикаИнформационнойБазы);	
	КонецЕсли;
	
	ТекущиеДанные.ХарактеристикаИнформационнойБазы = Неопределено;
	
	ОбновитьКоличествоСопоставленныхЗначений();
	
	ОбновитьПараметрыДинамическогоСписка();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьПараметрыДинамическогоСписка()
	
	ХарактеристикиИнформационнойБазы.Параметры.УстановитьЗначениеПараметра("УбранныеОбъекты", УбранныеОбъекты);
	ХарактеристикиИнформационнойБазы.Параметры.УстановитьЗначениеПараметра("ВыбранныеОбъекты", ВыбранныеОбъекты);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьКоличествоСопоставленныхЗначений()
	
	ОсталосьСопоставитьХарактеристик = КоличествоНеСопоставленныхХарактеристик + УбранныеОбъекты.Количество() - ВыбранныеОбъекты.Количество();
	
КонецПроцедуры

&НаСервере
Процедура ПривязатьХарактеристику(ТекущаяХарактеристика, ТекущаяСтрокаПриемник)
	
	Модифицированность = Истина;
	
	Если ТекущаяХарактеристика = Неопределено
		ИЛИ ТекущаяСтрокаПриемник = Неопределено Тогда
		
		Возврат;
	КонецЕсли;
		
	ТекущиеДанныеПриемник = ХарактеристикиСервиса.НайтиПоИдентификатору(ТекущаяСтрокаПриемник);
	
	Если ТекущиеДанныеПриемник = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	Если ЗначениеЗаполнено(ТекущиеДанныеПриемник.ХарактеристикаИнформационнойБазы) Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанныеПриемник.ХарактеристикаИнформационнойБазы = ТекущаяХарактеристика;
	
	СтрокаУбранных = УбранныеОбъекты.НайтиПоЗначению(ТекущаяХарактеристика);
	
	Если СтрокаУбранных <> Неопределено Тогда
		УбранныеОбъекты.Удалить(СтрокаУбранных);
	Иначе
		ВыбранныеОбъекты.Добавить(ТекущаяХарактеристика);	
	КонецЕсли;
	
	ОбновитьКоличествоСопоставленныхЗначений();
	
	ОбновитьПараметрыДинамическогоСписка();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьКоличествоХарактеристик()
	
	КоличествоХарактеристикВсего = 0;
	
	РаботаСНоменклатуройПереопределяемый.ПолучитьКоличествоХарактеристик(НоменклатураСсылка, КоличествоХарактеристикВсего);
	КоличествоСопоставленныхХарактеристик = РаботаСНоменклатурой.КоличествоСопоставленныхХарактеристикПоНоменклатуре(НоменклатураСсылка);
	
	КоличествоНеСопоставленныхХарактеристик = КоличествоХарактеристикВсего - КоличествоСопоставленныхХарактеристик;
			
КонецПроцедуры

&НаКлиенте
Процедура СпозиционироватьНаНовойСтроке()
	
	Для каждого ЭлементКоллекции Из ХарактеристикиСервиса Цикл
		Если НЕ ЗначениеЗаполнено(ЭлементКоллекции.ХарактеристикаИнформационнойБазы) Тогда
			Элементы.ХарактеристикиСервиса.ТекущаяСтрока = ЭлементКоллекции.ПолучитьИдентификатор();
			Прервать;
		КонецЕсли;
	КонецЦикла;
		
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	Если ЭтоРежимВыбораХарактеристики Тогда
		ОповеститьОВыборе(Элементы.ХарактеристикиИнформационнойБазы.ТекущаяСтрока);
	Иначе
		
		ЗаписатьСоответствиеХарактеристик();
				
		Закрыть(ДанныеОКоличествеХарактеристик());
		
		Оповестить(РаботаСНоменклатуройКлиент.ОписаниеОповещенийПодсистемы().СопоставлениеНоменклатуры);
	
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Функция ДанныеОКоличествеХарактеристик()
	
	Результат = Новый Структура("КоличествоХарактеристикВсего, КоличествоСопоставленныхХарактеристик", 0, 0);
	
	КоличествоХарактеристикВсего = 0;
	
	РаботаСНоменклатуройПереопределяемый.ПолучитьКоличествоХарактеристик(НоменклатураСсылка, КоличествоХарактеристикВсего);

	Результат.КоличествоСопоставленныхХарактеристик = РаботаСНоменклатурой.КоличествоСопоставленныхХарактеристикПоНоменклатуре(НоменклатураСсылка);
	Результат.КоличествоХарактеристикВсего          = КоличествоХарактеристикВсего;
		
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура УдалитьУбранныеХарактеристики()
	
	Для каждого Характеристика Из УбранныеОбъекты Цикл
		РаботаСНоменклатурой.УдалитьСоответствиеНоменклатурыИХарактеристики(НоменклатураСсылка, Характеристика.Значение);		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьСоответствиеХарактеристик()
	
	УдалитьУбранныеХарактеристики();
	
	СопоставленныеХарактеристики = Новый Массив;
	
	Для каждого Характеристика Из ВыбранныеОбъекты Цикл
		
		СтрокиДанных = ХарактеристикиСервиса.НайтиСтроки(Новый Структура("ХарактеристикаИнформационнойБазы", Характеристика.Значение));
		
		Для каждого ЭлементКоллекции Из СтрокиДанных Цикл
			СопоставленныеХарактеристики.Добавить(
				Новый Структура("Характеристика, ПредставлениеХарактеристики, ИдентификаторХарактеристики", 
				ЭлементКоллекции.ХарактеристикаИнформационнойБазы,
				ЭлементКоллекции.НаименованиеХарактеристикиСервиса,
				ЭлементКоллекции.ИдентификаторХарактеристики));		
		КонецЦикла;
	КонецЦикла;
	
	Для каждого ЭлементКоллекции Из СопоставленныеХарактеристики Цикл
		
		ЗаписатьСоответствие(ЭлементКоллекции.Характеристика, 
			ЭлементКоллекции.ИдентификаторХарактеристики, 
			ЭлементКоллекции.ПредставлениеХарактеристики);
			
	КонецЦикла;
		
КонецПроцедуры

&НаКлиенте
Процедура СоздатьХарактеристику(ТекущиеДанные)
	
	НастроитьФормуПриДлительнойОперации(Истина, "Загрузка");
		
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	ИдентификаторХарактеристики = ТекущиеДанные.ИдентификаторХарактеристики;
		
	ПараметрыСоздания = РаботаСНоменклатуройСлужебныйКлиентСервер.ПараметрыЗагрузкиХарактеристик();
	
	ПараметрыСоздания.Номенклатура              = НоменклатураСсылка;
	ПараметрыСоздания.ЗаполнитьСозданныеОбъекты = Истина;
	ПараметрыСоздания.ИдентификаторыХарактеристик.Добавить(ИдентификаторХарактеристики);
	
	Оповещение = Новый ОписаниеОповещения("ЗагрузитьХарактеристикиПродолжение", ЭтотОбъект, 
		Новый Структура("ТекущаяСтрока", Элементы.ХарактеристикиСервиса.ТекущаяСтрока));
	
	РаботаСНоменклатуройКлиент.ЗагрузитьХарактеристики(
		Оповещение, 
		ПараметрыСоздания, 
		ЭтотОбъект, 
		Неопределено, 
		Элементы.ГруппаДекорацииДлительнойОперации);
		
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьХарактеристикиПродолжение(Результат, ДополнительныеПараметры) Экспорт
	
	СсылкаНаХарактеристику = Неопределено;
	
	ЗагрузитьХарактеристикиЗавершение(Результат.АдресРезультата, ДополнительныеПараметры, СсылкаНаХарактеристику);	
	
	ПоказатьУведомлениеОСоздании(СсылкаНаХарактеристику);
		
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьХарактеристикиЗавершение(АдресРезультата, ДополнительныеПараметры, СсылкаНаХарактеристику)
	
	НастроитьФормуПриДлительнойОперации(Ложь, "Загрузка");
	
	Результат = РаботаСНоменклатурой.ДанныеВременногоХранилища(АдресРезультата);
	
	Если Не ЗначениеЗаполнено(Результат) Тогда
		Возврат;
	КонецЕсли;
	
	СозданныеОбъекты = Результат.СозданныеОбъекты;
	
	Если СозданныеОбъекты.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = ХарактеристикиСервиса.НайтиПоИдентификатору(ДополнительныеПараметры.ТекущаяСтрока);
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные.ХарактеристикаИнформационнойБазы = СозданныеОбъекты[0].Характеристика;	
	
	ЗаписатьСоответствие(СозданныеОбъекты[0].Характеристика, 
		СозданныеОбъекты[0].ИдентификаторХарактеристики, ТекущиеДанные.НаименованиеХарактеристикиСервиса);
		
	СсылкаНаХарактеристику = СозданныеОбъекты[0].Характеристика;
		
	ОбновитьКоличествоСопоставленныхЗначений();	
		
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьУведомлениеОСоздании(СсылкаНаХарактеристику)
	
	Если Не ЗначениеЗаполнено(СсылкаНаХарактеристику) Тогда
		ПоказатьОповещениеПользователя(НСтр("ru = 'Загрузка характеристик'"), ,
			НСтр("ru = 'Не удалось создать характеристику'"));
	Иначе
		ПоказатьОповещениеПользователя(НСтр("ru = 'Загрузка характеристик'"), ,
			СтрШаблон(
				НСтр("ru = 'Создана характеристика %1'"), СсылкаНаХарактеристику), 
			БиблиотекаКартинок.Успешно32);	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьСоответствие(Характеристика, ИдентификаторХарактеристики, ПредставлениеХарактеристики)
	
	ПараметрыЗаписи = РаботаСНоменклатурой.ПараметрыЗаписиСоответствияНоменклатуры();
			
	ПараметрыЗаписи.ИдентификаторНоменклатурыСервиса   = ИдентификаторНоменклатуры;
	ПараметрыЗаписи.ПредставлениеНоменклатурыСервиса   = НаименованиеНоменклатурыСервиса;
	ПараметрыЗаписи.ИдентификаторХарактеристикиСервиса = ИдентификаторХарактеристики;
	ПараметрыЗаписи.ПредставлениеХарактеристикиСервиса = ПредставлениеХарактеристики;
	ПараметрыЗаписи.ДатаОбновления                     = ТекущаяДатаСеанса();
	
	Отказ = Ложь;
	
	РаботаСНоменклатурой.ЗаписатьСоответствиеНоменклатурыИХарактеристик(НоменклатураСсылка, Характеристика, ПараметрыЗаписи, Отказ);
	
	Если Отказ Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Не удалось выполнить привязку характеристики'"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПояснениеКОперацииОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	РаботаСНоменклатуройКлиент.ОткрытьФормуКарточкиНоменклатуры(
		ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ИдентификаторНоменклатуры), ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ХарактеристикиСервисаПриАктивизацииСтроки(Элемент)
	
	ОбновитьДоступностьКнопкиЗагрузки();
	
КонецПроцедуры
	
&НаКлиенте
Процедура ОбновитьДоступностьКнопкиЗагрузки()
	
	Элементы.ЗагрузитьХарактеристику.Доступность = Элементы.ХарактеристикиСервиса.ТекущиеДанные = Неопределено
		ИЛИ (Не ЗначениеЗаполнено(Элементы.ХарактеристикиСервиса.ТекущиеДанные.ХарактеристикаИнформационнойБазы)
			И Не Элементы.ГруппаДекорацииДлительнойОперации.Видимость);
		
КонецПроцедуры

#КонецОбласти
