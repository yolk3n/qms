
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	////////////////////////////////////////////////////////////////////////////////
	
	Если Не Параметры.Свойство("ИдентификаторыКатегорий", ИдентификаторыКатегорий)
		ИЛИ ИдентификаторыКатегорий.Количество() = 0 Тогда
		
		ВызватьИсключение НСтр("ru = 'Не заданы идентификаторы категорий'");
	КонецЕсли;
		
	Если Не Параметры.Свойство("ВидНоменклатуры", ВидНоменклатуры) Тогда
		ВызватьИсключение НСтр("ru = 'Не задан вид номенклатуры'");
	КонецЕсли;
	
	Параметры.Свойство("ЭтоВнешняяПривязка",              ЭтоВнешняяПривязка);                  // привязка из форм подсистемы, кроме привязки из вида номенклатуры
	Параметры.Свойство("ЭтоПривязка",                     ЭтоПривязка);                         // привязка из вида номенклатуры
	Параметры.Свойство("ЭтоРежимСопоставленияРеквизитов", ЭтоРежимСопоставленияРеквизитов);     // категория сопоставлена , а реквизиты - не все
	Параметры.Свойство("ВызовИзПомощникаОбновления",      ВызовИзПомощникаОбновления);          // открытие формы из помощника обновления
	Параметры.Свойство("ДанныеИнтерактивногоЗаполнения",  АдресДанныхИнтерактивногоЗаполнения); // данные вида номенклатуры при привязке его к категории
	Параметры.Свойство("РежимЗагрузкиХарактеристик",      РежимЗагрузкиХарактеристик);
	
	// Инициализация реквизитов формы
	
	НаименованиеКатегории               = ИдентификаторыКатегорий[0].Представление;
	ЭтоПервичноеЗаполнение              = Не ЗначениеЗаполнено(ВидНоменклатуры);
	ИспользуютсяДополнительныеРеквизиты = РаботаСНоменклатурой.ИспользуютсяДополнительныеРеквизиты();

	Если Не ЗначениеЗаполнено(РежимЗагрузкиХарактеристик) Тогда
		ЗаполнитьРежимЗагрузкиХарактеристик();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ВидНоменклатуры) Тогда
		ВариантИспользованияХарактеристик = РаботаСНоменклатурой.ВариантИспользованияХарактеристик(ВидНоменклатуры);
	КонецЕсли;
	
	ЗаполнитьПодсказкиФормы();
	
	НастроитьФормуПриСоздании();
	
	КлючСохраненияПоложенияОкна = СтрШаблон("%1_%2",
		Элементы.ГруппаАвтоматическоеОбновление.Видимость, 
		Элементы.ДополнительныеРеквизитыСоздатьРеквизит.Видимость);	
		
	НастроитьФормуПриДлительнойОперации(Истина);
		
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПолучитьДанныеПоКатегории();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПояснениеКОперацииОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	РаботаСНоменклатуройКлиент.ОткрытьФормуКарточкиКатегории(ИдентификаторыКатегорий, ВидНоменклатуры, ЭтотОбъект);
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыОсновныеРеквизиты

&НаКлиенте
Процедура ОсновныеРеквизитыПередНачаломИзменения(Элемент, Отказ)
	
	Если Элемент.ТекущийЭлемент <> Элементы.ОсновныеРеквизитыНоменклатурыПометка Тогда
		Отказ = Истина
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОсновныеРеквизитыПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДополнительныеРеквизиты

&НаКлиенте
Процедура ДополнительныеРеквизитыПередНачаломИзменения(Элемент, Отказ)
	
	Если Элемент.ТекущийЭлемент <> Элементы.ДополнительныеРеквизитыРеквизитВидаНоменклатуры Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеРеквизитыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле = Элементы.ДополнительныеРеквизитыСопоставленоЗначений Тогда
		
		СтандартнаяОбработка = Ложь;
		
		Оповещение = Новый ОписаниеОповещения("ПриЗакрытииФормыСопоставленияЗначений", ЭтотОбъект, Новый Структура("ВыбраннаяСтрока", ВыбраннаяСтрока));
		
		ТекущаяСтрока = ДополнительныеРеквизиты.НайтиПоИдентификатору(ВыбраннаяСтрока);
		
		ПараметрыФормы = Новый Структура;
		
		ПараметрыФормы.Вставить("ТекущийРеквизит",                 ТекущаяСтрока.РеквизитВидаНоменклатуры);
		ПараметрыФормы.Вставить("ИдентификаторРеквизитаКатегории", ТекущаяСтрока.ИдентификаторРеквизитаКатегории);
		ПараметрыФормы.Вставить("ВидНоменклатуры",                 ВидНоменклатуры);
		ПараметрыФормы.Вставить("НаименованиеКатегории",           НаименованиеКатегории);
		ПараметрыФормы.Вставить("ИдентификаторыКатегорий",         ИдентификаторыКатегорий);
		
		ОткрытьФорму("Обработка.РаботаСНоменклатурой.Форма.СопоставлениеЗначенийРеквизита", ПараметрыФормы, ЭтаФорма,,,,Оповещение);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеРеквизитыПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеРеквизитыРеквизитВидаНоменклатурыПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ДополнительныеРеквизиты.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьСписокВыбораРеквизитовВидаНоменклатуры();
	
	ЗаполнитьИнформациюПоСопоставленнымЗначениям(Элементы.ДополнительныеРеквизиты.ТекущаяСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеРеквизитыПриАктивизацииСтроки(Элемент)
	
	ЗаполнитьСписокВыбораРеквизитовВидаНоменклатуры();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	
	Для Каждого ЭлементКоллекции Из ОсновныеРеквизиты Цикл
		Если Не ЭлементКоллекции.ТолькоПросмотр Тогда
			ЭлементКоллекции.Пометка = Истина;	
		КонецЕсли;
	КонецЦикла;
		
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)
	
	Для Каждого ЭлементКоллекции Из ОсновныеРеквизиты Цикл
		Если Не ЭлементКоллекции.ТолькоПросмотр Тогда
			ЭлементКоллекции.Пометка = Ложь;
		КонецЕсли;	
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновлятьВсеАвтоматически(Команда)
	
	РаботаСНоменклатуройКлиент.ПоказатьВопросПриВключенииАвтообновленияВидаНоменклатуры(ВидНоменклатуры, 
		ИдентификаторыКатегорий.ВыгрузитьЗначения(), ЭтотОбъект, БлокируемыеРеквизиты.Количество() = 0);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьРеквизит(Команда)
	
	ПараметрыФормы = Новый Структура;
	
	РаботаСНоменклатуройКлиентПереопределяемый.ОткрытьФормуДополнительногоРеквизита(ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьРеквизитыАвтоматически(Команда)
	
	КоличествоПустыхРеквизитов = 0;
	КоличествоУстановленныхРеквизитов = 0;	
	
	ЗаполнитьРеквизитыАвтоматическиСервер(КоличествоПустыхРеквизитов, КоличествоУстановленныхРеквизитов);
	
	ТекстСообщения = "";
	
	Если КоличествоУстановленныхРеквизитов = 0 И КоличествоПустыхРеквизитов <> 0 Тогда
		ТекстСообщения = НСтр("ru = 'Ни один подходящий реквизит не найден'")
	Иначе
		ТекстСообщения = СтрШаблон(
			НСтр("ru = 'Заполнено реквизитов: %1'"), КоличествоУстановленныхРеквизитов);
	КонецЕсли;
	
	ПоказатьОповещениеПользователя(НСтр("ru = 'Заполнение реквизитов'") , , ТекстСообщения);
	
КонецПроцедуры

&НаКлиенте
Процедура РежимЗагрузкиХарактеристикПриИзменении(Элемент)
	
	УбратьНекорректныеСопоставления();
	
	ЗаполнитьСписокВыбораРеквизитовВидаНоменклатуры();
	
КонецПроцедуры

&НаКлиенте
Процедура Готово(Команда)
			
	Если ЗначениеЗаполнено(АдресДанныхИнтерактивногоЗаполнения) Тогда
		
		// Если форма была открыта после выбора категорий из формы загрузки категорий.
		
		Если Не ЭтоПервичноеЗаполнение Тогда
			ЗаписатьСоответствиеРеквизитов();
		КонецЕсли;
		
		ЗакрытьСРасширеннымиПараметрами();
		
	Иначе
		
		// Если форма была открыта из сторонних форм или помощника обновления.
		
		ОбновитьРеквизитыИЗаписатьНастройкуСоответствия();
		
		ОповеститьОбИзменении(ВидНоменклатуры);
		
		ПараметрыЗакрытия = Новый Структура;
		
		ПараметрыЗакрытия.Вставить("АвтоматическийРежимОбновления", Ложь);
		ПараметрыЗакрытия.Вставить("РежимЗагрузкиХарактеристик",    РежимЗагрузкиХарактеристик);
		ПараметрыЗакрытия.Вставить("ИдентификаторыКатегорий",       ИдентификаторыКатегорий);
		
		Закрыть(ПараметрыЗакрытия);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьСРасширеннымиПараметрами()
	
	ПараметрыЗакрытия = Новый Структура;
	
	ДанныеДляСозданияРеквизитов = 
		?(ДополнительныеРеквизиты.Количество() > 0 И ЭтоПервичноеЗаполнение, АдресДанныхКатегории, АдресДанныхКатегории);
	
	ПараметрыЗакрытия.Вставить("АдресДанныхКатегории",          ДанныеДляСозданияРеквизитов);
	ПараметрыЗакрытия.Вставить("АвтоматическийРежимОбновления", Ложь);
	ПараметрыЗакрытия.Вставить("ТаблицаОтличий",                ПоместитьДанныеВХранилище());
	ПараметрыЗакрытия.Вставить("РежимЗагрузкиХарактеристик",    РежимЗагрузкиХарактеристик);
	ПараметрыЗакрытия.Вставить("ИдентификаторыКатегорий",       ИдентификаторыКатегорий);
	
	Закрыть(ПараметрыЗакрытия);
			
КонецПроцедуры

&НаСервере
Функция ПоместитьДанныеВХранилище()
	
	Возврат ПоместитьВоВременноеХранилище(
		ОсновныеРеквизиты.Выгрузить(), Новый УникальныйИдентификатор);
	
КонецФункции

&НаКлиенте
Процедура Далее(Команда)
	
	Элементы.СтраницыРеквизитов.ТекущаяСтраница = Элементы.СтраницаДополнительныеРеквизиты;
	
	УправлениеВидимостьюДоступностью(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура Назад(Команда)
	
	Элементы.СтраницыРеквизитов.ТекущаяСтраница = Элементы.СтраницаОсновныеРеквизиты;
	
	УправлениеВидимостьюДоступностью(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбработчикиОповещений

&НаКлиенте
Процедура ПриЗакрытииФормыСопоставленияЗначений(ДанныеПоСопоставленнымЗначениям, ДополнительныеПараметры) Экспорт
	
	ЗаполнитьИнформациюПоСопоставленнымЗначениям(ДополнительныеПараметры.ВыбраннаяСтрока);	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаЗаписиНового(НовыйОбъект, Источник, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.ДополнительныеРеквизиты.ТекущиеДанные;
	
	Если ТипЗнч(НовыйОбъект) <> ТипДополнительногоРеквизита() Тогда
		Возврат;
	КонецЕсли;	
		
	ЯвляетсяРеквизитомХарактеристики = ТекущиеДанные <> Неопределено 
		И ТекущиеДанные.ЯвляетсяРеквизитомХарактеристики 
		И СтрСравнить(РежимЗагрузкиХарактеристик, "ВХарактеристики") = 0;
	
	Отказ = Ложь;
	
	ДобавитьНовыеРеквизитыВВидНоменклатуры(НовыйОбъект, ЯвляетсяРеквизитомХарактеристики, Отказ);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные <> Неопределено 
		И НЕ ЗначениеЗаполнено(Элементы.ДополнительныеРеквизиты.ТекущиеДанные.РеквизитВидаНоменклатуры) Тогда
		
		Элементы.ДополнительныеРеквизиты.ТекущиеДанные.РеквизитВидаНоменклатуры = НовыйОбъект;
	КонецЕсли;
	
	ЗаполнитьСписокВыбораРеквизитовВидаНоменклатуры();
		
КонецПроцедуры

&НаСервереБезКонтекста
Функция ТипДополнительногоРеквизита()
	
	Возврат Метаданные.ОпределяемыеТипы.ДополнительныеРеквизитыРаботаСНоменклатурой.Тип.Типы()[0];
	
КонецФункции

&НаКлиенте
Процедура ПолучитьДанныеПоКатегорииЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если ИдентификаторЗадания <> ДополнительныеПараметры.ИдентификаторЗадания Тогда 
		Возврат;
	КонецЕсли;
	
	ИдентификаторЗадания = Неопределено;
	
	ЗаполнитьТаблицыФормы(Результат.АдресРезультата, УникальныйИдентификаторДляВременногоХранилища());
	
КонецПроцедуры

&НаКлиенте
Функция УникальныйИдентификаторДляВременногоХранилища()
	
	Результат = ?(ЭтотОбъект.ВладелецФормы = Неопределено, 
		ЭтотОбъект.УникальныйИдентификатор, ЭтотОбъект.ВладелецФормы.УникальныйИдентификатор);
			
	Возврат	Результат;	
			
КонецФункции

#КонецОбласти

#Область СтроковыеКонстанты

&НаСервере
Функция ТекстПоясненияКФорме()
	
	МассивПодстрок = Новый Массив;
	
	Если ЭтоПривязка ИЛИ ЭтоВнешняяПривязка ИЛИ ЭтоРежимСопоставленияРеквизитов Тогда
		МассивПодстрок.Добавить(НСтр("ru = 'Заполнение нового вида номенклатуры'"));
	Иначе
		МассивПодстрок.Добавить(НСтр("ru = 'Обновление вида номенклатуры'") + " ");
		МассивПодстрок.Добавить(Новый ФорматированнаяСтрока(Строка(ВидНоменклатуры),Новый Шрифт(,,Истина)));
	КонецЕсли;
	
	Если ИдентификаторыКатегорий.Количество() = 1 Тогда
		МассивПодстрок.Добавить(" " + НСтр("ru = 'на основании категории 1С:Номенклатуры'") + " ");
		МассивПодстрок.Добавить(Новый ФорматированнаяСтрока(ИдентификаторыКатегорий[0].Представление,,,,ИдентификаторыКатегорий[0].Значение));
	ИначеЕсли ИдентификаторыКатегорий.Количество() > 1 Тогда	
		
		КоличествоКатегорий = ИдентификаторыКатегорий.Количество();
		
		СогласованнаяСтрока = СтрокаСЧислом(";категории;;категорий;категорий;категорий", 
			КоличествоКатегорий, ВидЧисловогоЗначения.Количественное);
			
		СтрокаДляЗаголовка = Новый ФорматированнаяСтрока(
			СтрШаблон(НСтр("ru = '%1 %2'"), КоличествоКатегорий, СогласованнаяСтрока),,,,
				СтрСоединить(ИдентификаторыКатегорий.ВыгрузитьЗначения(), "; "));
			
		МассивПодстрок.Добавить(" " + НСтр("ru = 'на основании'") + " ");
		МассивПодстрок.Добавить(СтрокаДляЗаголовка);
		
	КонецЕсли;

	Возврат МассивПодстрок;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ТекстНеЗаполненРеквизитВидаНоменклатуры()
	
	Возврат НСтр("ru = '<Выберите реквизит или создайте новый>'");
	
КонецФункции

&НаКлиенте
Процедура СоздатьРеквизитыАвтоматически(Команда)
	
	СоздатьРеквизитыАвтоматическиНаСервере();
	
	ПоказатьОповещениеПользователя(НСтр("ru = 'Создание реквизитов'")
		,, НСтр("ru = 'Создание реквизитов завершено'"));
		
КонецПроцедуры

&НаСервере
Процедура СоздатьРеквизитыАвтоматическиНаСервере()
	
	// Предварительное заполнение реквизитов необходимо для исключения повторного создания одноименных реквизитов.
	
	ЗаполнитьРеквизитыАвтоматическиСервер(0, 0);
	
	Если Не ЭтоПервичноеЗаполнение Тогда
		ЗаписатьСоответствиеКатегорий();
		ЗаписатьСоответствиеРеквизитов();
	КонецЕсли;
	
	ДанныеПоКатегории = РаботаСНоменклатурой.ПолучитьДанныеИзВременногоХранилища(АдресДанныхКатегории, Тип("ТаблицаЗначений"));
	
	// Объединение пересекающихся реквизитов.
		
	ОбъединенныеРеквизиты = РаботаСНоменклатурой.ОбъединитьДанныеДополнительныхРеквизитов(ДанныеПоКатегории);
	
	РаботаСНоменклатурой.ЗаполнитьСоответствияРеквизитовИЗначений(ОбъединенныеРеквизиты, ВидНоменклатуры);
	
	// Создание реквизитов.
		
	РаботаСНоменклатуройСлужебный.ДополнитьРеквизитыИЗначения(
		ВидНоменклатуры,
		ОбъединенныеРеквизиты.ДополнительныеРеквизиты,
		Ложь,
		Неопределено,
		Истина);
		
	РаботаСНоменклатуройСлужебный.ДополнитьРеквизитыИЗначения(
		ВидНоменклатуры,
		ОбъединенныеРеквизиты.Характеристики.ДополнительныеРеквизиты,
		РежимЗагрузкиХарактеристик = "ВХарактеристики",
		Неопределено,
		Истина);
		
	// Обновление соответствия реквизитов.
		
	РаботаСНоменклатурой.ЗаполнитьСоответствияРеквизитовИЗначений(ОбъединенныеРеквизиты, ВидНоменклатуры);
		
	ЗаполнитьТаблицуДополнительныхРеквизитов(ОбъединенныеРеквизиты);
	
КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура НастроитьФормуПриДлительнойОперации(ЭтоНачалоДлительнойОперации)
	
	Если ЭтоНачалоДлительнойОперации Тогда
		Элементы.СтраницыРеквизитов.ТекущаяСтраница = Элементы.СтраницаДлительнойОперации;
	Иначе
		
		// В зависимости от условий открытия формы, по окончании операции будет открываться
		// или страница основных реквизитов, или дополнительных.
		
		Если ИдентификаторыКатегорий.Количество() > 1 
			ИЛИ ЭтоРежимСопоставленияРеквизитов Тогда
			
			Элементы.СтраницыРеквизитов.ТекущаяСтраница = Элементы.СтраницаДополнительныеРеквизиты;
		Иначе
			Элементы.СтраницыРеквизитов.ТекущаяСтраница = Элементы.СтраницаОсновныеРеквизиты;
		КонецЕсли;
	КонецЕсли;
	
	Элементы.ГруппаАвтоматическоеОбновление.Доступность  = Не ЭтоНачалоДлительнойОперации;
	Элементы.СтраницаОсновныеРеквизиты.Доступность       = Не ЭтоНачалоДлительнойОперации;
	Элементы.ГруппаКнопкиНавигации.Доступность           = Не ЭтоНачалоДлительнойОперации;
		
КонецПроцедуры

&НаСервере
Процедура НастроитьФормуПриСоздании()
	
	Если ИдентификаторыКатегорий.Количество() > 1 
		ИЛИ ЭтоРежимСопоставленияРеквизитов Тогда
		
		Элементы.СтраницыРеквизитов.ТекущаяСтраница = Элементы.СтраницаДополнительныеРеквизиты;
	КонецЕсли;
	
	ПрятатьАвтоматическоеОбновление = Не ЭтоПривязка И Не ЭтоРежимСопоставленияРеквизитов И Не ЭтоВнешняяПривязка;
	
	Если Не ЗначениеЗаполнено(ВидНоменклатуры) Тогда
		ПрятатьАвтоматическоеОбновление = Ложь;
	КонецЕсли;
	
	Элементы.Назад.Видимость                                                  = Ложь;
	Элементы.Далее.Видимость                                                  = Ложь;
	Элементы.ДополнительныеРеквизитыСоздатьРеквизит.Видимость                 = Не ЭтоПервичноеЗаполнение;
	Элементы.ДополнительныеРеквизитыСоздатьРеквизитыАвтоматически.Видимость   = Не ЭтоПервичноеЗаполнение;
	Элементы.ДополнительныеРеквизитыЗаполнитьРеквизитыАвтоматически.Видимость = Не ЭтоПервичноеЗаполнение;
	Элементы.ДополнительныеРеквизитыРеквизитВидаНоменклатуры.Видимость        = Не ЭтоПервичноеЗаполнение;
	Элементы.ДополнительныеРеквизитыСопоставленоЗначений.Видимость            = Не ЭтоПервичноеЗаполнение;
	Элементы.РежимЗагрузкиХарактеристик.Видимость                             = Не ЭтоПервичноеЗаполнение;
	Элементы.ГруппаАвтоматическоеОбновление.Видимость                         = ПрятатьАвтоматическоеОбновление;
	Элементы.ГруппаРеквизитыЗаблокированы.Видимость                           = Ложь;
	
	Если ЭтоПривязка ИЛИ ЭтоПервичноеЗаполнение Тогда
		Элементы.НадписьДлительнойОперации.Заголовок  = НСтр("ru = 'Проверка наличия расхождений в данных...'");
		Элементы.НадписьОтсутствияИзменений.Заголовок = НСтр("ru = 'Данные вида номенклатуры актуальны'");
	Иначе
		Элементы.НадписьДлительнойОперации.Заголовок  = НСтр("ru = 'Проверка наличия обновлений...'");
		Элементы.НадписьОтсутствияИзменений.Заголовок = НСтр("ru = 'Данные вида номенклатуры актуальны, обновление не требуется'");
	КонецЕсли;	
		
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРеквизитыАвтоматическиСервер(КоличествоПустыхРеквизитов, КоличествоУстановленныхРеквизитов)
		
	Для каждого ЭлементКоллекции Из ДополнительныеРеквизиты Цикл
		
		Если НЕ ЗначениеЗаполнено(ЭлементКоллекции.РеквизитКатегории) Тогда
			Продолжить;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ЭлементКоллекции.РеквизитВидаНоменклатуры) Тогда
			Продолжить;
		КонецЕсли;
		
		КоличествоПустыхРеквизитов = КоличествоПустыхРеквизитов + 1;
		
		ЭлементКоллекции.РеквизитВидаНоменклатуры = Неопределено;
		
		СтрокиРеквизитов = 
			ДополнительныеРеквизитыВидаНоменклатуры.НайтиСтроки(
				Новый Структура("РеквизитВидаНоменклатурыПредставление", ЭлементКоллекции.РеквизитКатегории));
		
		Если СтрокиРеквизитов.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		// Обход ситуации, когда есть одноименные реквизиты для номенклатуры и для характеристик. 
		
		Для каждого СтрокаРеквизита Из СтрокиРеквизитов Цикл
		
			Если ДополнительныеРеквизиты.НайтиСтроки(
				Новый Структура("РеквизитВидаНоменклатуры", 
					СтрокаРеквизита.РеквизитВидаНоменклатуры)).Количество() > 0 Тогда
					
				// Если дополнительный реквизит уже задействован- пропускаем.
				Продолжить;
			КонецЕсли;
			
			ВидНоменклатурыПоддерживаетХарактеристики = ВариантИспользованияХарактеристик <> "НеВедутся";
			
			Если ВидНоменклатурыПоддерживаетХарактеристики
				И СтрокаРеквизита.ЯвляетсяХарактеристикой <> ЭлементКоллекции.ЯвляетсяРеквизитомХарактеристики Тогда
				
				Продолжить;
			КонецЕсли;
			
			ЭлементКоллекции.РеквизитВидаНоменклатуры = СтрокаРеквизита.РеквизитВидаНоменклатуры;
			
			КоличествоУстановленныхРеквизитов = КоличествоУстановленныхРеквизитов + 1;
			
			ЗаполнитьИнформациюПоСопоставленнымЗначениям(ЭлементКоллекции.ПолучитьИдентификатор());
			
			ОсталосьСопоставитьРеквизитов = ОсталосьСопоставитьРеквизитов - 1;
			
		КонецЦикла;
				
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРежимЗагрузкиХарактеристик()
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	СоответствиеВидовНоменклатуры.ЗагружатьХарактеристикиВХарактеристики КАК ЗагружатьХарактеристикиВХарактеристики
	|ИЗ
	|	РегистрСведений.СоответствиеВидовНоменклатурыРаботаСНоменклатурой КАК СоответствиеВидовНоменклатуры
	|ГДЕ
	|	СоответствиеВидовНоменклатуры.ВидНоменклатуры = &ВидНоменклатуры";
	
	Запрос.УстановитьПараметр("ВидНоменклатуры", ВидНоменклатуры);
	
	Выгрузка = Запрос.Выполнить().Выгрузить();
	
	РежимЗагрузкиХарактеристик = Элементы.РежимЗагрузкиХарактеристик.СписокВыбора[0].Значение;
	
	Если Выгрузка.Количество() > 0 Тогда
		Если Выгрузка[0].ЗагружатьХарактеристикиВХарактеристики Тогда
			РежимЗагрузкиХарактеристик = "ВХарактеристики";
		Иначе
			РежимЗагрузкиХарактеристик = "ВНоменклатуру";
		КонецЕсли;		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьРеквизитыИЗаписатьНастройкуСоответствия()
	
	Если ИдентификаторыКатегорий.Количество() = 1 Тогда
		РаботаСНоменклатуройПереопределяемый.ЗаполнитьВидНоменклатуры(
			ВидНоменклатуры, ОсновныеРеквизиты.Выгрузить(Новый Структура("Пометка", Истина)));
	КонецЕсли;
		
	Если ЭтоВнешняяПривязка Тогда
		
		// Привязка категории - необходимо при привязке налету, в момент создания/заполнения номенклатуры
		
		ЗаписатьСоответствиеКатегорий();
	КонецЕсли;
	
	// Привязка реквизитов
	
	Если ИспользуютсяДополнительныеРеквизиты Тогда
		ЗаписатьСоответствиеРеквизитов();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьСоответствиеКатегорий()
	
	ПараметрыЗаписи = РаботаСНоменклатурой.ПараметрыЗаписиСоответствияВидаНоменклатуры();
	
	ПараметрыЗаписи.Вставить("ВидНоменклатуры",                        ВидНоменклатуры);
	ПараметрыЗаписи.Вставить("ИдентификаторыКатегорий",                ИдентификаторыКатегорий);
	ПараметрыЗаписи.Вставить("ЗагружатьХарактеристикиВХарактеристики", РежимЗагрузкиХарактеристик = "ВХарактеристики");
	
	РаботаСНоменклатурой.ЗаписатьСоответствиеВидаНоменклатуры(ПараметрыЗаписи);
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьСоответствиеРеквизитов()
	
	РеквизитыДляЗаписи = РаботаСНоменклатурой.ПустаяТаблицаСоответствияРеквизитов();
	
	Для каждого ЭлементКоллекции Из ДополнительныеРеквизиты Цикл
		Если ЗначениеЗаполнено(ЭлементКоллекции.РеквизитВидаНоменклатуры) Тогда
			
			НоваяСтрока = РеквизитыДляЗаписи.Добавить();
			
			НоваяСтрока.РеквизитОбъекта                  = ЭлементКоллекции.РеквизитВидаНоменклатуры;
			НоваяСтрока.ПредставлениеРеквизитаКатегории  = ЭлементКоллекции.РеквизитКатегории;
			НоваяСтрока.ЯвляетсяРеквизитомХарактеристики = ЭлементКоллекции.ЯвляетсяРеквизитомХарактеристики;
			НоваяСтрока.ИдентификаторРеквизитаКатегории  = ЭлементКоллекции.ИдентификаторРеквизитаКатегории;
			
		КонецЕсли;
	КонецЦикла;	
	
	РаботаСНоменклатурой.ЗаписатьСоответствиеРеквизитов(ВидНоменклатуры, РеквизитыДляЗаписи);
	
КонецПроцедуры

&НаКлиенте
Процедура УбратьНекорректныеСопоставления()
	
	ПоддерживатьХарактеристики = СтрСравнить(РежимЗагрузкиХарактеристик, "ВХарактеристики") = 0;
	
	Для каждого ЭлементКоллекции Из ДополнительныеРеквизиты Цикл
		
		Если Не ЗначениеЗаполнено(ЭлементКоллекции.РеквизитВидаНоменклатуры) Тогда
			Продолжить;
		КонецЕсли;
		
		РеквизитыВидаНоменклатуры = 
			ДополнительныеРеквизитыВидаНоменклатуры.НайтиСтроки(
				Новый Структура("РеквизитВидаНоменклатуры", ЭлементКоллекции.РеквизитВидаНоменклатуры)); 
				
		ТекущийРеквизит = РеквизитыВидаНоменклатуры[0];
		
		Если ПоддерживатьХарактеристики 
			И ТекущийРеквизит.ЯвляетсяХарактеристикой <> ЭлементКоллекции.ЯвляетсяРеквизитомХарактеристики Тогда
			
			ЭлементКоллекции.РеквизитВидаНоменклатуры = Неопределено;
		КонецЕсли;
		
		Если НЕ ПоддерживатьХарактеристики 
			И ТекущийРеквизит.ЯвляетсяХарактеристикой Тогда
			
			ЭлементКоллекции.РеквизитВидаНоменклатуры = Неопределено;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьКоличествоСопоставленныхРеквизитов(КоличествоВыбранных, КоличествоДоступныхДляВыбораРеквизитов)
	
	ОсталосьСопоставитьРеквизитов = КоличествоДоступныхДляВыбораРеквизитов - КоличествоВыбранных;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьНовыеРеквизитыВВидНоменклатуры(НовыеРеквизиты, ЯвляетсяРеквизитомХарактеристики, Отказ)
	
	РеквизитыКДобавлению = Новый Массив;
	
	Если ТипЗнч(НовыеРеквизиты) <> Тип("Массив") И ЗначениеЗаполнено(НовыеРеквизиты) Тогда
		РеквизитыКДобавлению.Добавить(НовыеРеквизиты);
	Иначе
		РеквизитыКДобавлению = НовыеРеквизиты;
	КонецЕсли;
	
	Если РеквизитыКДобавлению.Количество() = 0 Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	РаботаСНоменклатуройПереопределяемый.ПрисвоитьРеквизитыОбъекту(ВидНоменклатуры, РеквизитыКДобавлению, ЯвляетсяРеквизитомХарактеристики);
	
	ЗаполнитьРеквизитыВидаНоменклатуры();
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьДанныеПоКатегории()
	
	ПараметрыЗавершения = Новый Структура;
	
	ПолучитьНоменклатуруЗавершение = Новый ОписаниеОповещения("ПолучитьДанныеПоКатегорииЗавершение", ЭтотОбъект, ПараметрыЗавершения);
	
	ПараметрыМетода = Новый Структура;
	
	ПараметрыМетода.Вставить("ВидНоменклатуры",                      ВидНоменклатуры);
	ПараметрыМетода.Вставить("ИдентификаторыКатегорий",              ИдентификаторыКатегорий.ВыгрузитьЗначения());
	ПараметрыМетода.Вставить("АктуализироватьВспомогательныеДанные", Истина);
	
	РаботаСНоменклатуройКлиент.ПолучитьДанныеКатегорийСервиса(
		ПолучитьНоменклатуруЗавершение, 
		ПараметрыМетода, 
		ЭтотОбъект, 
		ИдентификаторЗадания,
		Элементы.КартинкаДлительнойОперации);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицыФормы(АдресРезультата, УникальныйИдентификаторДляХраненияДанных)
	
	НастроитьФормуПриДлительнойОперации(Ложь);
	
	Если НЕ ЭтоАдресВременногоХранилища(АдресРезультата) Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеПоКатегории = ПолучитьИзВременногоХранилища(АдресРезультата);
	
	// Пересохранение для обхода ошибки платформы.
	АдресДанныхКатегории = ПоместитьВоВременноеХранилище(ДанныеПоКатегории, УникальныйИдентификаторДляХраненияДанных);
	
	Если ТипЗнч(ДанныеПоКатегории) <> Тип("ТаблицаЗначений") Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеПоТекущейКатегории = ДанныеПоКатегории[0];
	
	Если ИдентификаторыКатегорий.Количество() = 1 Тогда
		ЗаполнитьТаблицуОсновныхРеквизитов(ДанныеПоТекущейКатегории);
	КонецЕсли;
	
	ОбъединенныеДанныеПоКатегориям = РаботаСНоменклатурой.ОбъединитьДанныеДополнительныхРеквизитов(ДанныеПоКатегории);
	
	РаботаСНоменклатурой.ЗаполнитьСоответствияРеквизитовИЗначений(ОбъединенныеДанныеПоКатегориям, ВидНоменклатуры);
	
	ЗаполнитьТаблицуДополнительныхРеквизитов(ОбъединенныеДанныеПоКатегориям);
	
	УправлениеВидимостьюДоступностью(ЭтотОбъект);
	
	НастроитьВидимостьРежимаЗагрузки();
	
	Если НЕ ЭтоПервичноеЗаполнение Тогда
		РаботаСНоменклатурой.ЗаблокироватьРеквизиты(ЭтотОбъект, ОсновныеРеквизиты, ВидНоменклатуры);
	КонецЕсли;
	
	ВсеРеквизитыИЗначенияСопоставлены = Истина;
	
	Для Каждого ЭлементКоллекции Из ДополнительныеРеквизиты Цикл
		Если (ЗначениеЗаполнено(ЭлементКоллекции.РеквизитКатегории)
			И НЕ ЗначениеЗаполнено(ЭлементКоллекции.РеквизитВидаНоменклатуры))
				ИЛИ ЭлементКоллекции.ЕстьНесопоставленныеЗначения Тогда
				
			ВсеРеквизитыИЗначенияСопоставлены = Ложь;
			Прервать;
			
		КонецЕсли;
	КонецЦикла;
	
	Если ОсновныеРеквизиты.Количество() = 0 И ВсеРеквизитыИЗначенияСопоставлены И Не ЭтоВнешняяПривязка Тогда
		
		Если ЭтоПривязка ИЛИ ЭтоПервичноеЗаполнение Тогда
			Элементы.НадписьОтсутствияИзменений.Заголовок = НСтр("ru = 'Данные вида номенклатуры соответствуют данным сервиса'");
		КонецЕсли;
		
		Элементы.СтраницыРеквизитов.ТекущаяСтраница = Элементы.СтраницаОтсутствияИзменений;
		Элементы.Далее.Видимость = Ложь;
		
	КонецЕсли;
			
КонецПроцедуры

&НаСервере
Процедура НастроитьВидимостьРежимаЗагрузки()
	
	// Если используются характеристики в сервисе и при этом 
	// это первоначальное заполнение или заполняемый вид номенклатуры поддерживает характеристики,
	// элемент формы отображается.
	
	Если ИспользуютсяХарактеристикиВСервисе Тогда
		Если ЭтоПервичноеЗаполнение Тогда
			Элементы.РежимЗагрузкиХарактеристик.Видимость = Истина;
		ИначеЕсли Не ЭтоРежимСопоставленияРеквизитов 
			И Не ЭтоВнешняяПривязка
			И Не ВызовИзПомощникаОбновления
			И (ВариантИспользованияХарактеристик = "Общие" 
				ИЛИ ВариантИспользованияХарактеристик = "Индивидуальные") Тогда
			
			Элементы.РежимЗагрузкиХарактеристик.Видимость = Истина;
		Иначе
			Элементы.РежимЗагрузкиХарактеристик.Видимость = Ложь;
		КонецЕсли;
	Иначе
		Элементы.РежимЗагрузкиХарактеристик.Видимость = Ложь;	
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуОсновныхРеквизитов(ДанныеПоКатегории)
	
	Если ДанныеПоКатегории= Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	////////////////////////////////////////////////////////////////////////////////
	
	Если ЗначениеЗаполнено(АдресДанныхИнтерактивногоЗаполнения) Тогда
		ЗначенияРеквизитовОбъекта = ПолучитьИзВременногоХранилища(АдресДанныхИнтерактивногоЗаполнения);
	Иначе
		ЗначенияРеквизитовОбъекта = Новый ТаблицаЗначений;
		РаботаСНоменклатуройПереопределяемый.ПолучитьЗначенияРеквизитовВидовНоменклатуры(ВидНоменклатуры, ЗначенияРеквизитовОбъекта);
		ЗначенияРеквизитовОбъекта = ЗначенияРеквизитовОбъекта[0];	
	КонецЕсли;
	
	ТаблицаОтличий = РаботаСНоменклатурой.ТаблицаОтличийРеквизитов();
	
	РаботаСНоменклатуройПереопределяемый.ПолучитьОтличияВидаНоменклатурыИКатегории(ДанныеПоКатегории, ЗначенияРеквизитовОбъекта, ТаблицаОтличий);
	
	ОсновныеРеквизиты.Загрузить(ТаблицаОтличий);
			
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуДополнительныхРеквизитов(ДанныеПоКатегории)
	
	Если ДанныеПоКатегории = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	РаботаСНоменклатурой.ЗаполнитьДополнительныеРеквизиты(ДанныеПоКатегории, ДополнительныеРеквизиты);
	
	ИспользуютсяХарактеристикиВСервисе = ДанныеПоКатегории.Характеристики.ДополнительныеРеквизиты.Количество() > 0;

	ЗаполнитьРеквизитыВидаНоменклатуры();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСписокВыбораРеквизитовВидаНоменклатуры()
	
	// Заполнение привязано к активации строки, поскольку в зависимости от режима работы с характеристиками
	// нужно отслеживать является ли реквизит категории характеристикой.
	
	ТекущиеДанные = Элементы.ДополнительныеРеквизиты.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СписокВыбора = Элементы.ДополнительныеРеквизитыРеквизитВидаНоменклатуры.СписокВыбора;
	
	ИспользоватьХарактеристики = СтрСравнить(РежимЗагрузкиХарактеристик, "ВХарактеристики") = 0;
	
	КоличествоВыбранных = 0;
	КоличествоДоступныхДляВыбораРеквизитов = ДополнительныеРеквизиты.Количество();
				
	// Заполнение списка выбора
				
	СписокВыбора.Очистить();
	
	// Добавляем реквизит текущей строки, чтобы его можно было видеть в списке выбора
	Если ЗначениеЗаполнено(ТекущиеДанные.РеквизитВидаНоменклатуры) Тогда
		СписокВыбора.Добавить(ТекущиеДанные.РеквизитВидаНоменклатуры);
	КонецЕсли;
	
	Для Каждого ЭлементКоллекции Из ДополнительныеРеквизитыВидаНоменклатуры Цикл
		
		РеквизитВыбран = ДополнительныеРеквизиты.НайтиСтроки(
			Новый Структура("РеквизитВидаНоменклатуры", ЭлементКоллекции.РеквизитВидаНоменклатуры)).Количество() <> 0;
			
		Если РеквизитВыбран Тогда
			КоличествоВыбранных = КоличествоВыбранных + 1;
			Продолжить;
		КонецЕсли;
				
		Если НЕ ИспользоватьХарактеристики И ЭлементКоллекции.ЯвляетсяХарактеристикой Тогда
			Продолжить;
		КонецЕсли;
		
		Если ИспользоватьХарактеристики 
			И ТекущиеДанные <> Неопределено 
			И ТекущиеДанные.ЯвляетсяРеквизитомХарактеристики <> ЭлементКоллекции.ЯвляетсяХарактеристикой Тогда
			
			Продолжить;
		КонецЕсли;
		
		СписокВыбора.Добавить(ЭлементКоллекции.РеквизитВидаНоменклатуры);
		
	КонецЦикла;
	
	ОбновитьКоличествоСопоставленныхРеквизитов(КоличествоВыбранных, КоличествоДоступныхДляВыбораРеквизитов);
		
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРеквизитыВидаНоменклатуры()
	
	ТаблицаРеквизитов = Новый ТаблицаЗначений;
	
	РаботаСНоменклатуройПереопределяемый.ПолучитьДополнительныеРеквизитыВидаНоменклатуры(ВидНоменклатуры, ТаблицаРеквизитов);
	
	Если ТаблицаРеквизитов.Количество() > 0 Тогда
		ДополнительныеРеквизитыВидаНоменклатуры.Загрузить(ТаблицаРеквизитов);
	КонецЕсли;
	
	// Очистка реквизитов, которые были удалены из вида номенклатуры, при этом ранее были сопоставлены.
	
	Для каждого ЭлементКоллекции Из ДополнительныеРеквизиты Цикл
		Если ЗначениеЗаполнено(ЭлементКоллекции.РеквизитВидаНоменклатуры)
			И ТаблицаРеквизитов.Найти(ЭлементКоллекции.РеквизитВидаНоменклатуры) = Неопределено Тогда
			
			ЭлементКоллекции.РеквизитВидаНоменклатуры = Неопределено;
			ЭлементКоллекции.СопоставленоЗначений     = "";
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеВидимостьюДоступностью(Форма)
	
	Элементы = Форма.Элементы;
	
	ЭтоОсобыйРежим 
		= Форма.ЭтоРежимСопоставленияРеквизитов ИЛИ Форма.ИдентификаторыКатегорий.Количество() > 1;
	
	ЭтоСтраницаОсновныхРеквизитов                      = Элементы.СтраницыРеквизитов.ТекущаяСтраница = Элементы.СтраницаОсновныеРеквизиты;
	ЭтоСтраницаДополнительныхРеквизитов                = Элементы.СтраницыРеквизитов.ТекущаяСтраница = Элементы.СтраницаДополнительныеРеквизиты;

	// Если дополнительные реквизиты в системе не используются, кнопка для перехода на страницу их настройки не отображается
	
	Элементы.Далее.Видимость                           = ЭтоСтраницаОсновныхРеквизитов И Форма.ИспользуютсяДополнительныеРеквизиты;
	Элементы.Далее.КнопкаПоУмолчанию                   = ЭтоСтраницаОсновныхРеквизитов И Форма.ИспользуютсяДополнительныеРеквизиты;

	Элементы.Назад.Видимость                           = ЭтоСтраницаДополнительныхРеквизитов И Не ЭтоОсобыйРежим;
	Элементы.Готово.КнопкаПоУмолчанию                  = ЭтоСтраницаДополнительныхРеквизитов ИЛИ Не Форма.ИспользуютсяДополнительныеРеквизиты;

	Элементы.ГруппаДополнительныеРеквизиты.Доступность = Форма.ДополнительныеРеквизиты.Количество() > 0;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьИнформациюПоСопоставленнымЗначениям(ИдентификаторСтроки)
	
	ТекущаяСтрока = ДополнительныеРеквизиты.НайтиПоИдентификатору(ИдентификаторСтроки);
	
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущаяСтрока.СопоставленоЗначений = РаботаСНоменклатуройСлужебный.ТекстКоличествоСопоставленныхЗначений(
		КоличествоСопоставленныхЗначений(ТекущаяСтрока.РеквизитВидаНоменклатуры), ТекущаяСтрока.КоличествоЗначенийВСервисе);
			
КонецПроцедуры

&НаСервере
Функция КоличествоСопоставленныхЗначений(РеквизитВидаНоменклатуры)
	
	Если НЕ ЗначениеЗаполнено(РеквизитВидаНоменклатуры) Тогда
		Возврат 0;
	КонецЕсли;
	
	ТипДополнительныхЗначений = Метаданные.ОпределяемыеТипы.ЗначенияСвойствОбъектовРаботаСНоменклатурой.Тип.Типы()[0];
	
	Если НЕ РеквизитВидаНоменклатуры.ТипЗначения.СодержитТип(ТипДополнительныхЗначений) Тогда
		Возврат 0;
	КонецЕсли;
	
	////////////////////////////////////////////////////////////////////////////////
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	СоответствиеЗначенийРеквизитовРаботаСНоменклатурой.Значение КАК Значение
	|ИЗ
	|	РегистрСведений.СоответствиеЗначенийРеквизитовРаботаСНоменклатурой КАК СоответствиеЗначенийРеквизитовРаботаСНоменклатурой
	|ГДЕ
	|	СоответствиеЗначенийРеквизитовРаботаСНоменклатурой.ОбъектСопоставления = &ВидНоменклатуры
	|	И СоответствиеЗначенийРеквизитовРаботаСНоменклатурой.РеквизитОбъекта = &РеквизитВидаНоменклатуры";
	
	Запрос.УстановитьПараметр("РеквизитВидаНоменклатуры", РеквизитВидаНоменклатуры);
	Запрос.УстановитьПараметр("ВидНоменклатуры", ВидНоменклатуры);
	
	Возврат Запрос.Выполнить().Выбрать().Количество();
	
КонецФункции

&НаСервере
Процедура ЗаполнитьПодсказкиФормы()
	
	Элементы.ПояснениеКОперации.Заголовок = Новый ФорматированнаяСтрока(ТекстПоясненияКФорме());
	
	Если ЭтоПервичноеЗаполнение Тогда
		Элементы.ПояснениеКТаблицеДополнительныхРеквизитов.Заголовок 
			= НСтр("ru = 'Следующие реквизиты будут созданы после записи вида номенклатуры:'");
			
		Элементы.НадписьОсталосьСопоставить.Заголовок = НСтр("ru = 'Будет создано реквизитов:'");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	// Блокировка реквизитов
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ОсновныеРеквизиты.ТолькоПросмотр");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ОсновныеРеквизиты.Имя);
		
	// Если реквизит не выбран
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Доступность", Ложь);
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = 'Не выбран реквизит'"));
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", Новый Цвет(200, 200, 200));
	
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ДополнительныеРеквизиты.РеквизитВидаНоменклатуры");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ДополнительныеРеквизитыСопоставленоЗначений.Имя);
	
	// Если тип не Список сопоставление значений не доступно
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Доступность", Ложь);
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = 'Автоматически'"));
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", Новый Цвет(200, 200, 200));
	
	ГруппаОтбора = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	
	ОтборЭлемента = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ДополнительныеРеквизиты.ТипРеквизитаКатегории");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.НеРавно;
	ОтборЭлемента.ПравоеЗначение = "Список";
	
	ОтборЭлемента = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ДополнительныеРеквизиты.РеквизитВидаНоменклатуры");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Заполнено;
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ДополнительныеРеквизитыСопоставленоЗначений.Имя);	
	
	// Колонка Реквизит вида номенклатуры
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Текст", ТекстНеЗаполненРеквизитВидаНоменклатуры());
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", Новый Цвет(200, 200, 200));
	
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ДополнительныеРеквизиты.РеквизитВидаНоменклатуры");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ДополнительныеРеквизитыРеквизитВидаНоменклатуры.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьРеквизитыЗаблокированыОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	РаботаСНоменклатуройКлиент.ПроверитьИспользованиеОбъекта(ЭтотОбъект, ОсновныеРеквизиты, ВидНоменклатуры);
		
КонецПроцедуры

#КонецОбласти

