
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Параметры.Свойство("НоменклатураДляАнализа", АдресДанныхНоменклатуры);
	
	Если НЕ ЗначениеЗаполнено(АдресДанныхНоменклатуры) 
		ИЛИ НЕ ЭтоАдресВременногоХранилища(АдресДанныхНоменклатуры) Тогда
		
		ВызватьИсключение НСтр("ru = 'Ошибка передачи данных номенклатуры'");
	КонецЕсли;
	
	ДанныеНоменклатуры = ПолучитьИзВременногоХранилища(АдресДанныхНоменклатуры);
	
	Если ДанныеНоменклатуры.Количество() = 0 Тогда
		ВызватьИсключение НСтр("ru = 'Ошибка передачи данных номенклатуры'");
	КонецЕсли;
	
	ЗаполнитьРеквизитыФормы(ДанныеНоменклатуры);
	
	НастроитьФормуПриСоздании();
	
	КлючСохраненияПоложенияОкна = Строка(Новый УникальныйИдентификатор)
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	КлючСохраненияПоложенияОкна = "";
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОтборСХарактеристикамиНажатие(Элемент)
	
	РежимОтбораНоменклатуры = "НоменклатураСХарактеристиками";
	
	ИзменитьОтборНоменклатуры();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборВсяНоменклатураНажатие(Элемент)
	
	РежимОтбораНоменклатуры = "ВсяНоменклатура";
	
	ИзменитьОтборНоменклатуры();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СоздатьВидыНоменклатурыАвтоматически(Команда)
	
	ОчиститьСообщения();
	
	СоздатьВидНоменклатуры(ПолучитьИдентификаторыКатегорийДляЗагрузки(), Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура Далее(Команда)
	
	Если ЕстьПустыеВидыНоменклатуры() Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не все виды номенклатуры заполнены'"));
		Возврат;
	КонецЕсли;
	
	// Отработка нажатия кнопки Далее
	
	Если ИспользуютсяХарактеристикиВСервисе 
		И ИспользуютсяХарактеристикиВСистеме Тогда
		
		Если Элементы.СтраницыПомощникаСозданияНоменклатуры.ТекущаяСтраница = Элементы.СтраницаВидыНоменклатуры Тогда
			Элементы.СтраницыПомощникаСозданияНоменклатуры.ТекущаяСтраница = Элементы.СтраницаХарактеристики;
			ЗаполнитьДанныеСтраницыХарактеристик();
		ИначеЕсли Элементы.СтраницыПомощникаСозданияНоменклатуры.ТекущаяСтраница = Элементы.СтраницаХарактеристики Тогда	
			ЗагрузитьНоменклатуру();	
		КонецЕсли;
	Иначе
		ЗаполнитьДанныеСтраницыХарактеристик();
		ЗагрузитьНоменклатуру();
	КонецЕсли;
	
	НастроитьОтображениеКнопок(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеСтраницыХарактеристик()
	
	ОбновитьВидыНоменклатурыНаСтраницеХарактеристик();
	БылиИзмененияВидовНоменклатуры = Ложь;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьВидыНоменклатурыНаСтраницеХарактеристик()
	
	Для каждого ЭлементКоллекции Из ВидыНоменклатуры Цикл
		СтрокаНоменклатуры = Характеристики.НайтиСтроки(
			Новый Структура("ИдентификаторНоменклатуры", ЭлементКоллекции.ИдентификаторНоменклатуры));
		
		Для каждого ТекущаяНоменклатуры Из СтрокаНоменклатуры Цикл
			
			ТекущаяНоменклатуры.ВидНоменклатуры = ЭлементКоллекции.ВидНоменклатуры;
			
			Если ЭлементКоллекции.ИспользуютсяХарактеристикиВСервисе Тогда
				ТекущаяНоменклатуры.ВсеРеквизитыСопоставлены = ЭлементКоллекции.КоличествоДополнительныхРеквизитов
					= ЭлементКоллекции.КоличествоСопоставленныхРеквизитов;
			КонецЕсли;
						
			ТекущаяНоменклатуры.СтатусВеденияУчетаХарактеристик 
				= РаботаСНоменклатурой.ВариантИспользованияХарактеристик(ТекущаяНоменклатуры.ВидНоменклатуры);
							
			Если Не ЗначениеЗаполнено(ТекущаяНоменклатуры.РежимЗагрузкиХарактеристик) Тогда
				ЗаполнитьРежимыЗагрузкиХарактеристик(ТекущаяНоменклатуры);
			КонецЕсли;
				
			СформироватьПодсказкуКХарактеристикам(ТекущаяНоменклатуры, ТекущаяНоменклатуры.Комментарий);	
						
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура СформироватьСписокВыбораХарактеристик(Данные, СписокВыбораХарактеристик)
	
	РаботаСНоменклатуройСлужебныйКлиентСервер.СформироватьСписокВыбораХарактеристик(Данные, СписокВыбораХарактеристик);
			
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРежимыЗагрузкиХарактеристик(ТекущиеДанные)
	
	Если ТекущиеДанные.ИспользуютсяХарактеристикиВСервисе
		И ТекущиеДанные.ВсеРеквизитыСопоставлены Тогда
		
		ТекущиеДанные.РежимЗагрузкиХарактеристик = "ВсеХарактеристики";
	Иначе
		ТекущиеДанные.РежимЗагрузкиХарактеристик = "БезХарактеристик";
	КонецЕсли;
	
	ВозможныеЗначения = Новый СписокЗначений;
	
	СформироватьСписокВыбораХарактеристик(ТекущиеДанные, ВозможныеЗначения);
	
	ПредставлениеЗначения = ВозможныеЗначения.НайтиПоЗначению(ТекущиеДанные.РежимЗагрузкиХарактеристик);
	
	Если ПредставлениеЗначения <> Неопределено Тогда
		ТекущиеДанные.ПредставлениеРежимаЗагрузкиХарактеристик = ПредставлениеЗначения.Представление;
	КонецЕсли;
				
КонецПроцедуры

&НаКлиенте
Процедура Назад(Команда)
	
	Если Элементы.СтраницыПомощникаСозданияНоменклатуры.ТекущаяСтраница = Элементы.СтраницаХарактеристики Тогда
		Элементы.СтраницыПомощникаСозданияНоменклатуры.ТекущаяСтраница = Элементы.СтраницаВидыНоменклатуры;
	КонецЕсли;	
	
	НастроитьОтображениеКнопок(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область НастройкаВнешнегоВидаФормы

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьОтображениеКнопок(Форма)
	
	Элементы = Форма.Элементы;
	
	Элементы.Назад.Видимость 
		= Элементы.СтраницыПомощникаСозданияНоменклатуры.ТекущаяСтраница = Элементы.СтраницаХарактеристики;
		
	Если Форма.ИспользуютсяХарактеристикиВСервисе Тогда
		Если Элементы.СтраницыПомощникаСозданияНоменклатуры.ТекущаяСтраница = Элементы.СтраницаВидыНоменклатуры Тогда
			Элементы.Далее.Заголовок = НСтр("ru = 'Далее'") + " >";	
		ИначеЕсли Элементы.СтраницыПомощникаСозданияНоменклатуры.ТекущаяСтраница = Элементы.СтраницаХарактеристики Тогда
			Элементы.Далее.Заголовок = НСтр("ru = 'ОК'");
		КонецЕсли;
	Иначе
		Элементы.Далее.Заголовок = НСтр("ru = 'ОК'");	
	КонецЕсли;	
		
КонецПроцедуры

&НаСервере
Процедура НастроитьФормуПриСоздании()
	
	Элементы.ГруппаДекорацииДлительнойОперации.Видимость         = Ложь;
	Элементы.ГруппаДекорацииДлительнойОперацииЗагрузка.Видимость = Ложь;
		
	РежимОтбораНоменклатуры = "ВсяНоменклатура";
	
	ИзменитьОтборНоменклатуры();
	
	УстановитьЗаголовокФормы();
	
	СформироватьЗаголовкиПодсказок();
	
	Элементы.Назад.Видимость = Ложь;
	
	Если Не ИспользуютсяХарактеристикиВСервисе 
		ИЛИ Не ИспользуютсяХарактеристикиВСистеме Тогда
		
		Элементы.Далее.Заголовок = НСтр("ru = 'ОК'");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСписокВыбора(СтрокаДанных)
	
	СписокВыбора = Элементы.ВидыНоменклатурыВидНоменклатуры.СписокВыбора;
	
	СписокВыбора.Очистить();
	
	Для каждого ЭлементКоллекции Из СтрокаДанных.ВидыНоменклатурыКатегории Цикл
		СписокВыбора.Добавить(ЭлементКоллекции.Значение, , , БиблиотекаКартинок.Реквизит);
	КонецЦикла;
	
	РезультатПоиска = Новый СписокЗначений;
	
	ЗаполнитьВидыНоменклатурыПоСтрокеПоиска(РезультатПоиска, СтрокаДанных.НаименованиеКатегории);
	
	Для каждого ЭлементКоллекции Из РезультатПоиска Цикл
		СписокВыбора.Добавить(ЭлементКоллекции.Значение, ЭлементКоллекции.Представление);
	КонецЦикла;
	
	Если СтрокаДанных.ВидыНоменклатурыКатегории.Количество() = 0 Тогда
		СоздатьВидНоменклатуры = Новый ФорматированнаяСтрока(НСтр("ru = 'Создать вид номенклатуры'"),,,,"СоздатьВидНоменклатуры");
		СписокВыбора.Добавить("СоздатьВидНоменклатуры", СоздатьВидНоменклатуры,, БиблиотекаКартинок.ИконкаБелыйФонРаботаСНоменклатурой);
	КонецЕсли;	
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаполнитьВидыНоменклатурыПоСтрокеПоиска(СписокВыбора, Знач СтрокаПоиска)
	
	РаботаСНоменклатурой.ЗаполнитьВидыНоменклатурыПоСтрокеПоиска(СписокВыбора, СтрокаПоиска);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();
	
	////////////////////////////////////////////////////////////////////////////////
	
	// Подсказка ввода для вида номенклатуры
	
	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ВидыНоменклатурыВидНоменклатуры.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ВидыНоменклатуры.ВидНоменклатуры");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;

	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет);
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = '<Выберите вид номенклатуры>'"));

	// Видимость колонок со статусом (гиперссылка, обычный текст)
	
	// Видимость обычного статуса
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);	
	
	// Отбор
	
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	
	ОтборЭлемента.ЛевоеЗначение   = Новый ПолеКомпоновкиДанных("ВидыНоменклатуры.СтатусВеденияУчетаХарактеристик");
	ОтборЭлемента.ВидСравнения    = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение  = СтатусыВеденияУчетаХарактеристик().Общие;
		
	// Оформляемое поле
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ВидыНоменклатурыКомментарий.Имя);
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Видимость", Истина);	
	
	// Отбор
	
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	
	ОтборЭлемента.ЛевоеЗначение   = Новый ПолеКомпоновкиДанных("ВидыНоменклатуры.СтатусВеденияУчетаХарактеристик");
	ОтборЭлемента.ВидСравнения    = ВидСравненияКомпоновкиДанных.НеРавно;
	ОтборЭлемента.ПравоеЗначение  = СтатусыВеденияУчетаХарактеристик().Общие;
		
	// Оформляемое поле
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ВидыНоменклатурыКомментарий.Имя);
	
	// Видимость гиперссылки
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);	
	
	// Отбор
	
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	
	ОтборЭлемента.ЛевоеЗначение   = Новый ПолеКомпоновкиДанных("ВидыНоменклатуры.СтатусВеденияУчетаХарактеристик");
	ОтборЭлемента.ВидСравнения    = ВидСравненияКомпоновкиДанных.НеРавно;
	ОтборЭлемента.ПравоеЗначение  = СтатусыВеденияУчетаХарактеристик().Общие;
		
	// Оформляемое поле
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ВидыНоменклатурыКомментарийГиперссылка.Имя);
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Видимость", Истина);	
	
	// Отбор
	
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	
	ОтборЭлемента.ЛевоеЗначение   = Новый ПолеКомпоновкиДанных("ВидыНоменклатуры.СтатусВеденияУчетаХарактеристик");
	ОтборЭлемента.ВидСравнения    = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение  = СтатусыВеденияУчетаХарактеристик().Общие;
		
	// Оформляемое поле
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ВидыНоменклатурыКомментарийГиперссылка.Имя);	
		
КонецПроцедуры

&НаСервере
Процедура УстановитьЗаголовокФормы()
	
	Заголовок = НСтр("ru = 'Загрузка номенклатуры'");
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьОтборНоменклатуры()
	
	ЦветСерый = Новый Цвет(242, 242, 242);
	ЦветБелый = Новый Цвет(255, 255, 255);
	
	Элементы.ОтборСХарактеристиками.Гиперссылка = РежимОтбораНоменклатуры <> "НоменклатураСХарактеристиками";
	Элементы.ОтборВсяНоменклатура.Гиперссылка   = РежимОтбораНоменклатуры <> "ВсяНоменклатура";
	
	Элементы.ГруппаОтборСХарактеристиками.ЦветФона  = ?(НЕ Элементы.ОтборСХарактеристиками.Гиперссылка,      ЦветСерый, ЦветБелый);
	Элементы.ГруппаОтборВсяНоменклатура.ЦветФона    = ?(НЕ Элементы.ОтборВсяНоменклатура.Гиперссылка, ЦветСерый, ЦветБелый);
	
	Если РежимОтбораНоменклатуры = "НоменклатураСХарактеристиками" Тогда
		Элементы.Характеристики.ОтборСтрок = 
			Новый ФиксированнаяСтруктура(
				Новый Структура("ИспользуютсяХарактеристикиВСервисе", Истина));		
	Иначе
		Элементы.Характеристики.ОтборСтрок = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьЗаголовкиПодсказок()
	
	Если Не ИспользуютсяХарактеристикиВСервисе Тогда
		Элементы.ПодсказкаФормы.Заголовок =
			НСтр("ru = 'Категории некоторых позиций номенклатуры необходимо загрузить или сопоставить с существующими видами номенклатуры.'");
			
		Элементы.ПодсказкаКВидамНоменклатурыОдностраничная.Видимость = Истина;
		Элементы.ПодсказкаКВидамНоменклатуры.Видимость               = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ВыборХарактеристик

&НаКлиенте
Процедура ВыбратьХарактеристикиДляЗагрузки(ТекущиеДанные)
	
	Оповещение = Новый ОписаниеОповещения("ПослеВыбораХарактеристик", ЭтотОбъект, 
		Новый Структура("ТекущаяСтрока", Элементы.Характеристики.ТекущаяСтрока));
		
	РаботаСНоменклатуройКлиент.ОткрытьФормуПодбораХарактеристик(ТекущиеДанные.ИдентификаторНоменклатуры,
		АдресДанныхНоменклатуры, ТекущиеДанные.АдресВыбранныхХарактеристик, Ложь, ЭтотОбъект, Оповещение);
		
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораХарактеристик(Результат, ДополнительныеПараметры) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Результат) Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Характеристики.НайтиПоИдентификатору(ДополнительныеПараметры.ТекущаяСтрока);
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные.АдресВыбранныхХарактеристик      = Результат.АдресВыбранныхХарактеристик;
	ТекущиеДанные.КоличествоВыбранныхХарактеристик = Результат.КоличествоВыбранныхХарактеристик;
		
	СписокВыбораЗначение = Элементы.ХарактеристикиРежимЗагрузкиХарактеристик.СписокВыбора;
	СписокВыбораПредставление = Элементы.ХарактеристикиПредставлениеРежимаЗагрузкиХарактеристик.СписокВыбора;
	
	СформироватьСписокВыбораХарактеристик(ТекущиеДанные, СписокВыбораЗначение);
		
	СформироватьПредставлениеСпискаВыбораХарактеристик(СписокВыбораЗначение, СписокВыбораПредставление, ТекущиеДанные);	
	
	СформироватьПодсказкуКХарактеристикам(ТекущиеДанные, ТекущиеДанные.Комментарий);
	
	СформироватьРасширеннуюПодсказку(ТекущиеДанные);
	
КонецПроцедуры

#КонецОбласти

#Область ПодсказкиИСпискиВыбора

&НаКлиентеНаСервереБезКонтекста
Процедура СформироватьПодсказкуКХарактеристикам(Данные, РеквизитХраненияПодсказки)
	
	РаботаСНоменклатуройСлужебныйКлиентСервер.СформироватьПодсказкуКХарактеристикам(Данные, РеквизитХраненияПодсказки);
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьРасширеннуюПодсказку(ТекущиеДанные)
	
	ТекстПодсказки      = "";
	ВидНоменклатуры     = ТекущиеДанные.ВидНоменклатуры;
	КоличествоВсего     = ТекущиеДанные.КоличествоХарактеристик;
	КоличествоВыбранных = ТекущиеДанные.КоличествоВыбранныхХарактеристик;
	
	Если ТекущиеДанные.ИспользуютсяХарактеристикиВСервисе Тогда
		
		// В сервисе используются характеристики.
		
		Если ТекущиеДанные.СтатусВеденияУчетаХарактеристик = "НеВедутся" Тогда
			
			// Для вида номенклатуры характеристики не используются. На каждую характеристику создается номенклатура.
			
			Если ТекущиеДанные.РежимЗагрузкиХарактеристик = "ВыбранныеХарактеристики" Тогда
				ТекстПодсказки = СтрШаблон(
					НСтр("ru = 'Для вида номенклатуры %1 характеристики не ведутся. Будет создано: %2 %3 номенклатуры.'"), 
						ВидНоменклатуры, КоличествоВыбранных, СогласованнаяСтрока("Элемент", КоличествоВыбранных));
									
			ИначеЕсли ТекущиеДанные.РежимЗагрузкиХарактеристик = "ВсеХарактеристики" Тогда
				ТекстПодсказки = СтрШаблон(
					НСтр("ru = 'Для вида номенклатуры %1 характеристики не ведутся. Будет создано: %2 %3 номенклатуры.'"), 
						ВидНоменклатуры, КоличествоВсего, СогласованнаяСтрока("Элемент", КоличествоВсего));
						
			ИначеЕсли ТекущиеДанные.РежимЗагрузкиХарактеристик = "БезХарактеристик" Тогда
				ТекстПодсказки = СтрШаблон(
					НСтр("ru = 'Характеристики не выбраны. Будет создана 1 номенклатура, характеристики созданы не будут.'"));
					
			КонецЕсли;
		Иначе
			
			// Для вида номенклатуры характеристики используются. На каждую характеристику создается характеристика.
			
			Если ТекущиеДанные.РежимЗагрузкиХарактеристик = "ВыбранныеХарактеристики" Тогда
				Если КоличествоВыбранных = 0 Тогда
					ТекстПодсказки = СтрШаблон(
						НСтр("ru = 'Для вида номенклатуры %1 ведутся характеристики. Будет создана 1 номенклатура, характеристики не выбраны.'"), 
							ВидНоменклатуры);
				Иначе
					ТекстПодсказки = СтрШаблон(
						НСтр("ru = 'Для вида номенклатуры %1 ведутся характеристики. Будет создана 1 номенклатура, %2 %3.'"),
							ВидНоменклатуры, КоличествоВыбранных, СогласованнаяСтрока("Характеристика", КоличествоВыбранных));
				КонецЕсли;
				
			ИначеЕсли ТекущиеДанные.РежимЗагрузкиХарактеристик = "ВсеХарактеристики" Тогда
				ТекстПодсказки = СтрШаблон(
					НСтр("ru = 'Для вида номенклатуры %1 ведутся характеристики. Будет создана 1 номенклатура, %2 %3.'"),
						ВидНоменклатуры, КоличествоВсего, СогласованнаяСтрока("Характеристика", КоличествоВсего));
						
			ИначеЕсли ТекущиеДанные.РежимЗагрузкиХарактеристик = "БезХарактеристик" Тогда
				ТекстПодсказки = НСтр("ru = 'Характеристики не выбраны. Будет создана 1 номенклатура, характеристики созданы не будут.'");
			КонецЕсли;
		КонецЕсли;
	Иначе 
		
		// В сервисе не используются характеристики.
		
		ТекстПодсказки = СтрШаблон(
			НСтр("ru = 'Для номенклатуры %1 не ведутся характеристики. Будет создана 1 номенклатура.'"), 
				ТекущиеДанные.НаименованиеНоменклатуры);
	КонецЕсли;
	
	Элементы.ПодсказкаПоТекущейСтроке.Заголовок = ТекстПодсказки;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция СогласованнаяСтрока(СогласуемаяСтрока, ЧислоДляСогласования)
	
	Возврат РаботаСНоменклатуройСлужебныйКлиентСервер.СогласованнаяСтрока(СогласуемаяСтрока, ЧислоДляСогласования);
	
КонецФункции

&НаСервере
Функция СтатусыВеденияУчетаХарактеристик()
	
	Возврат РаботаСНоменклатурой.СтатусыВеденияУчетаХарактеристик();
	
КонецФункции

&НаСервере
Процедура СформироватьПодсказкуКВидуНоменклатуры(Данные, РеквизитХраненияПодсказки)
	
	РаботаСНоменклатурой.СформироватьПодсказкуКВидуНоменклатуры(Данные, РеквизитХраненияПодсказки);
	
	Данные.КомментарийГиперссылка = Данные.Комментарий;
	
КонецПроцедуры

#КонецОбласти

#Область СозданиеНоменклатуры

&НаКлиенте
Процедура ЗагрузитьНоменклатуру()
	
	НастроитьФормуПриДлительнойОперации(Истина, "Номенклатура");
	
	Идентификаторы = Новый Массив;
	ДополнительныеПараметры = Новый Соответствие;
	
	ЗаполнитьПараметрыСозданияНоменклатурыПоХарактеристикам(Идентификаторы, ДополнительныеПараметры);
		
	ПараметрыЗавершения = Новый Структура;
	ПараметрыЗавершения.Вставить("ИдентификаторЗадания", Неопределено);
	
	СоздатьНоменклатуруПродолжение = Новый ОписаниеОповещения("ЗагрузитьНоменклатуруПродолжение",
		ЭтотОбъект, ПараметрыЗавершения);
	
	РаботаСНоменклатуройКлиент.ЗагрузитьНоменклатуруИХарактеристики(
		СоздатьНоменклатуруПродолжение, 
		Идентификаторы, 
		ЭтотОбъект, 
		ДополнительныеПараметры,
		Неопределено,
		Элементы.ГруппаДекорацииДлительнойОперацииЗагрузка);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьНоменклатуруПродолжение(Результат, ДополнительныеПараметры) Экспорт
	
	НастроитьФормуПриДлительнойОперации(Ложь, "Номенклатура");
	
	Закрыть(Результат);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПараметрыСозданияНоменклатурыПоХарактеристикам(Идентификаторы, ДополнительныеПараметрыСоздания)	
	
	Для каждого ТекущаяХарактеристика Из Характеристики Цикл
		
		Идентификаторы.Добавить(Новый Структура("ИдентификаторНоменклатуры, ИдентификаторХарактеристики", 
				ТекущаяХарактеристика.ИдентификаторНоменклатуры, ""));
		
		ДополнительныеПараметры = РаботаСНоменклатуройСлужебныйКлиентСервер.ДополнительныеПараметрыЗагрузкиНоменклатуры();

		ДополнительныеПараметры.ВидНоменклатуры = ТекущаяХарактеристика.ВидНоменклатуры;	

		Если ТекущаяХарактеристика.ИспользуютсяХарактеристикиВСервисе Тогда
			
			ДополнительныеПараметры.ХарактеристикиВыбраны      = Истина;
			ДополнительныеПараметры.ЗагружатьВсеХарактеристики = ТекущаяХарактеристика.РежимЗагрузкиХарактеристик = "ВсеХарактеристики";			
			
			Если ЗначениеЗаполнено(ТекущаяХарактеристика.АдресВыбранныхХарактеристик) Тогда
				ДополнительныеПараметры.ВыбранныеХарактеристики = ПолучитьИзВременногоХранилища(ТекущаяХарактеристика.АдресВыбранныхХарактеристик);
			КонецЕсли;
			
			Если ТекущаяХарактеристика.РежимЗагрузкиХарактеристик = "БезХарактеристик" Тогда
				ДополнительныеПараметры.РежимЗагрузкиХарактеристик = "НеЗагружать";
			Иначе
				Если ТекущаяХарактеристика.СтатусВеденияУчетаХарактеристик <> "НеВедутся" Тогда		
					ДополнительныеПараметры.РежимЗагрузкиХарактеристик = "ВХарактеристики";
				Иначе
					ДополнительныеПараметры.РежимЗагрузкиХарактеристик = "ВДополнительныеРеквизиты";
				КонецЕсли;	
			КонецЕсли;
				
		Иначе 
			ДополнительныеПараметры.РежимЗагрузкиХарактеристик = "НеЗагружать";
		КонецЕсли;

		ДополнительныеПараметрыСоздания.Вставить(ТекущаяХарактеристика.ИдентификаторНоменклатуры, ДополнительныеПараметры);
					
	КонецЦикла;
		
КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура НастроитьФормуПриДлительнойОперации(ЭтоНачалоДлительнойОперации, Режим)
	
	Если Режим = "ВидНоменклатуры" Тогда
		Элементы.ГруппаДекорацииДлительнойОперации.Видимость      = ЭтоНачалоДлительнойОперации;	
	ИначеЕсли Режим = "Номенклатура" Тогда	
		Элементы.ГруппаДекорацииДлительнойОперацииЗагрузка.Видимость      = ЭтоНачалоДлительнойОперации;	
	КонецЕсли;
		
	Элементы.СоздатьВидыНоменклатурыАвтоматически.Доступность = Не ЭтоНачалоДлительнойОперации И Не ВсеКатегорииЗагружены();
	Элементы.Далее.Доступность                                = Не ЭтоНачалоДлительнойОперации;
	
КонецПроцедуры

&НаСервере
Функция ВсеКатегорииЗагружены()
	
	ВсеКатегорииЗагружены = Истина;
	
	Для каждого ЭлементКоллекции Из ВидыНоменклатуры Цикл
		Если Не ЗначениеЗаполнено(ЭлементКоллекции.ВидНоменклатуры) Тогда
			ВсеКатегорииЗагружены = Ложь;
			Прервать;
		КонецЕсли;
	КонецЦикла;

	Возврат ВсеКатегорииЗагружены;
	
КонецФункции

&НаКлиенте
Функция ПолучитьИдентификаторыКатегорийДляЗагрузки()
	
	Идентификаторы = Новый Массив;
	
	Для каждого ЭлементКоллекции Из ВидыНоменклатуры Цикл
		Если Не ЗначениеЗаполнено(ЭлементКоллекции.ВидНоменклатуры)
			И Идентификаторы.Найти(ЭлементКоллекции.ИдентификаторКатегории) = Неопределено Тогда
			
			Идентификаторы.Добавить(ЭлементКоллекции.ИдентификаторКатегории);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Идентификаторы;
	
КонецФункции

&НаКлиенте
Функция ЕстьПустыеВидыНоменклатуры()
	
	Для каждого ЭлементКоллекции Из ВидыНоменклатуры Цикл
		Если Не ЗначениеЗаполнено(ЭлементКоллекции.ВидНоменклатуры) Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьРеквизитыФормы(ДанныеНоменклатуры)
	
	ИспользуютсяХарактеристикиВСистеме = РаботаСНоменклатурой.НастройкиПодсистемы().ИспользоватьХарактеристики;
	
	Для каждого ЭлементКоллекции Из ДанныеНоменклатуры Цикл
		
		ДобавитьСтрокуВТаблицуВидовНоменклатуры(ЭлементКоллекции);
		
		ДобавитьСтрокуВТаблицуХарактеристик(ЭлементКоллекции);
		
		Если ЭлементКоллекции.Характеристики.Количество() > 0 Тогда
			ИспользуютсяХарактеристикиВСервисе = Истина;
		КонецЕсли;
		
		Если ЭлементКоллекции.Категория.ВидыНоменклатурыИнформационнойБазы <> 1 Тогда
			ЕстьПустыеВидыНоменклатуры = Истина;
		КонецЕсли;
				
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьСтрокуВТаблицуВидовНоменклатуры(ДанныеНоменклатуры)
	
	НоваяСтрока = ВидыНоменклатуры.Добавить();
	
	НоваяСтрока.НаименованиеНоменклатуры           = ДанныеНоменклатуры.Наименование;
	НоваяСтрока.НаименованиеКатегории              = ДанныеНоменклатуры.Категория.Наименование;
	НоваяСтрока.ИдентификаторНоменклатуры          = ДанныеНоменклатуры.Идентификатор;
	НоваяСтрока.ИдентификаторКатегории             = ДанныеНоменклатуры.Категория.Идентификатор;
	НоваяСтрока.ИспользуютсяХарактеристикиВСервисе = ДанныеНоменклатуры.Характеристики.Количество() > 0;
	
	ПодсчитатьКоличествоДополнительныхРеквизитов(ДанныеНоменклатуры, НоваяСтрока);
	
	ВидыНоменклатурыИнформационнойБазы = ДанныеНоменклатуры.Категория.ВидыНоменклатурыИнформационнойБазы;
	
	НоваяСтрока.ВидыНоменклатурыКатегории.ЗагрузитьЗначения(ВидыНоменклатурыИнформационнойБазы);
		
	Если ВидыНоменклатурыИнформационнойБазы.Количество() = 1 Тогда
		НоваяСтрока.ВидНоменклатуры = ВидыНоменклатурыИнформационнойБазы[0];
	КонецЕсли;
	
	СформироватьПодсказкуКВидуНоменклатуры(НоваяСтрока, НоваяСтрока.Комментарий);
		
КонецПроцедуры

&НаСервере
Процедура ДобавитьСтрокуВТаблицуХарактеристик(ДанныеНоменклатуры)
	
	НоваяСтрока = Характеристики.Добавить();
	
	НоваяСтрока.НаименованиеНоменклатуры      = ДанныеНоменклатуры.Наименование;
	НоваяСтрока.ИдентификаторНоменклатуры     = ДанныеНоменклатуры.Идентификатор;
	НоваяСтрока.КоличествоХарактеристик       = ДанныеНоменклатуры.КоличествоХарактеристик 
		- РаботаСНоменклатурой.КоличествоСопоставленныхХарактеристикПоИдентификатору(ДанныеНоменклатуры.Идентификатор);
	
	Если ДанныеНоменклатуры.Характеристики.Количество() > 0 Тогда
		НоваяСтрока.ИспользуютсяХарактеристикиВСервисе = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПодсчитатьКоличествоДополнительныхРеквизитов(ТекущаяНоменклатура, СтрокаДанных)
	
	РаботаСНоменклатурой.ПодсчитатьКоличествоДополнительныхРеквизитов(ТекущаяНоменклатура, СтрокаДанных);
		
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВидНоменклатурыСопоставленСКатегорией(ВидНоменклатуры, ИдентификаторКатегории)
	
	Идентификаторы = РаботаСНоменклатурой.ПолучитьСоответствиеВидовНоменклатурыПоСсылкам(ВидНоменклатуры);
	
	Возврат Идентификаторы.Найти(ИдентификаторКатегории, "ИдентификаторКатегории") <> Неопределено;
		
КонецФункции

&НаКлиенте
Процедура ВидыНоменклатурыВидНоменклатурыОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.ВидыНоменклатуры.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	Если ВыбранноеЗначение = "СоздатьВидНоменклатуры" Тогда
		СтандартнаяОбработка = Ложь;
		БылиИзмененияВидовНоменклатуры = Истина;
		СоздатьВидНоменклатуры(ТекущиеДанные.ИдентификаторКатегории);		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьВидНоменклатуры(Знач ИдентификаторыКатегорий, ЭтоАвтоматическоеСоздание = Ложь)
	
	Если Не ЗначениеЗаполнено(ИдентификаторыКатегорий) Тогда
		ОбщегоНазначенияКлиентСервер.
			СообщитьПользователю(НСтр("ru = 'Отсутствуют категории для загрузки.'"));
		Возврат;	
	КонецЕсли;
	
	НастроитьФормуПриДлительнойОперации(Истина, "ВидНоменклатуры");
	
	Если ТипЗнч(ИдентификаторыКатегорий) <> Тип("Массив") Тогда
		ИдентификаторыКатегорий = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ИдентификаторыКатегорий);
	КонецЕсли;
	
	Для Счетчик = 0 По ИдентификаторыКатегорий.ВГраница() Цикл
		ИдентификаторыКатегорий[Счетчик] = 
			Новый Структура("Идентификатор, КоличествоПодчиненных", ИдентификаторыКатегорий[Счетчик] , 0);
	КонецЦикла;
		
	ПараметрыЗавершения = Новый Структура;
	
	ПараметрыЗавершения.Вставить("ИдентификаторЗадания",      Неопределено);
	ПараметрыЗавершения.Вставить("КатегорииКЗагрузке",        ИдентификаторыКатегорий);
	ПараметрыЗавершения.Вставить("ТекущаяСтрока",             Элементы.ВидыНоменклатуры.ТекущаяСтрока);
	ПараметрыЗавершения.Вставить("ЭтоАвтоматическоеСоздание", ЭтоАвтоматическоеСоздание);
	
	ЗагрузитьКатегорииЗавершение = Новый ОписаниеОповещения("ЗагрузитьКатегорииЗавершение",
		ЭтотОбъект, ПараметрыЗавершения);
	
	РаботаСНоменклатуройКлиент.ЗагрузитьКатегории(
		ЗагрузитьКатегорииЗавершение, 
		ИдентификаторыКатегорий, 
		ЭтотОбъект, 
		Неопределено, 
		Элементы.ГруппаДекорацииДлительнойОперации);
		
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьКатегорииЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	НастроитьФормуПриДлительнойОперации(Ложь, "ВидНоменклатуры");
	
	Если Результат.Сообщения <> Неопределено Тогда
		Для каждого Сообщение Из Результат.Сообщения Цикл
			Сообщение.Сообщить();
		КонецЦикла;
	КонецЕсли;
	
	Ошибка = Ложь;
	
	Если ЭтоАдресВременногоХранилища(Результат.АдресРезультата) Тогда 
		РезультатЗагрузки = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
		Если РезультатЗагрузки = Неопределено Тогда 
			Ошибка = Истина;
		КонецЕсли;
	Иначе
		Ошибка = Истина;
	КонецЕсли;
	
	НажатиеОповещенияПользователя = Неопределено;
	
	Если Ошибка Тогда 
		
		КартинкаОповещения = БиблиотекаКартинок.Ошибка32;
		ТекстОповещения = НСтр("ru = 'Создать не удалось'");
		
	Иначе
		
		Если РезультатЗагрузки.НовыеЭлементы.Количество() = 0 Тогда
			Возврат;
		КонецЕсли;	
		
		Если ДополнительныеПараметры.ЭтоАвтоматическоеСоздание Тогда
			
			ЗаполнитьВидыНоменклатурыПослеСоздания(РезультатЗагрузки.НовыеЭлементы);
			
			Если РезультатЗагрузки.НовыеЭлементы.Количество() = 1 Тогда
				ТекстОповещения = СтрШаблон(НСтр("ru = 'Создан вид номенклатуры ""%1""'"), РезультатЗагрузки.НовыеЭлементы[0]);
			Иначе
				ТекстОповещения = СтрШаблон(НСтр("ru = 'Создано видов номенклатуры: %1'"), РезультатЗагрузки.НовыеЭлементы.Количество());
			КонецЕсли;
			
		Иначе
			НовыйВидНоменклатуры = РезультатЗагрузки.НовыеЭлементы[0].ВидНоменклатуры;
			ТекстОповещения = СтрШаблон(НСтр("ru = 'Создан вид номенклатуры ""%1""'"), НовыйВидНоменклатуры);
			
			ЗаполнитьВидыНоменклатурыПослеСозданияДляСтроки(ДополнительныеПараметры.ТекущаяСтрока, НовыйВидНоменклатуры);
		КонецЕсли;
		
		КартинкаОповещения = БиблиотекаКартинок.Успешно32;
		
		НовыеЭлементы = ВидыНоменклатурыИзРезультатаСоздания(РезультатЗагрузки.НовыеЭлементы);
		
		НажатиеОповещенияПользователя = Новый ОписаниеОповещения("НажатиеОповещенияПользователя",
			ЭтотОбъект, НовыеЭлементы);
				
		Оповестить(РаботаСНоменклатуройКлиент.ОписаниеОповещенийПодсистемы().ЗагрузкаКатегорий, НовыеЭлементы);
			
	КонецЕсли;
		
	ПоказатьОповещениеПользователя(НСтр("ru = 'Загрузка категорий'"), 
		НажатиеОповещенияПользователя,
		ТекстОповещения, 
		КартинкаОповещения, 
		СтатусОповещенияПользователя.Информация, 
		УникальныйИдентификатор);		
		
	ЗаполнитьСписокВыбора(Элементы.ВидыНоменклатуры.ТекущиеДанные);
	
	Элементы.СоздатьВидыНоменклатурыАвтоматически.Доступность = Не ВсеКатегорииЗагружены();
		
КонецПроцедуры

&НаКлиенте
Функция ВидыНоменклатурыИзРезультатаСоздания(НовыеЭлементы)
	
	Результат = Новый Массив;
	
	Для каждого ЭлементКоллекции Из НовыеЭлементы Цикл
		Результат.Добавить(ЭлементКоллекции.ВидНоменклатуры);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура НажатиеОповещенияПользователя(ДополнительныеПараметры) Экспорт 
	
	Если ДополнительныеПараметры.Количество() = 1 Тогда
		
		ИмяФормыВидаНоменклатуры = РаботаСНоменклатуройСлужебныйВызовСервера.ИмяФормыЭлементаВидаНоменклатуры();
		Если НЕ ЗначениеЗаполнено(ИмяФормыВидаНоменклатуры) Тогда
			Возврат;
		КонецЕсли;
		
		ОткрытьФорму(ИмяФормыВидаНоменклатуры, Новый Структура("Ключ", ДополнительныеПараметры[0]), ЭтотОбъект);		
		
	Иначе
		РаботаСНоменклатуройКлиентПереопределяемый.ОткрытьФормуСпискаВидаНоменклатуры(ДополнительныеПараметры, ЭтотОбъект);
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВидыНоменклатурыПослеСозданияДляСтроки(ИдентификаторСтроки, НовыйВидНоменклатуры)
	
	СтрокаДанных = ВидыНоменклатуры.НайтиПоИдентификатору(ИдентификаторСтроки);
	
	Если СтрокаДанных = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаДанных.ВидНоменклатуры = НовыйВидНоменклатуры;
	
	СтрокаДанных.ВидыНоменклатурыКатегории.Добавить(НовыйВидНоменклатуры);
	
	ПриИзмененииВидаНоменклатуры(СтрокаДанных);	
	
	УстановитьВидНоменклатурыКатегориям(СтрокаДанных);
		
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВидыНоменклатурыПослеСоздания(НовыеЭлементы)
	
	Для каждого ЭлементКоллекции Из НовыеЭлементы Цикл		
		
		СтрокиПоКатегории = ВидыНоменклатуры.НайтиСтроки(Новый Структура("ИдентификаторКатегории", ЭлементКоллекции.ИдентификаторКатегории));
		
		Для каждого СтрокаКатегории Из СтрокиПоКатегории Цикл
			
			СтрокаКатегории.ВидНоменклатуры = ЭлементКоллекции.ВидНоменклатуры;
			
			СтрокаКатегории.ВидыНоменклатурыКатегории.Добавить(ЭлементКоллекции.ВидНоменклатуры);
			
			ПриИзмененииВидаНоменклатуры(СтрокаКатегории);
						
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидыНоменклатурыПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.ВидыНоменклатуры.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли; 

	ЗаполнитьСписокВыбора(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ХарактеристикиПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.Характеристики.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	СписокВыбораЗначение = Элементы.ХарактеристикиРежимЗагрузкиХарактеристик.СписокВыбора;
	СписокВыбораПредставление = Элементы.ХарактеристикиПредставлениеРежимаЗагрузкиХарактеристик.СписокВыбора;
	
	СформироватьСписокВыбораХарактеристик(ТекущиеДанные, СписокВыбораЗначение);
		
	СформироватьПредставлениеСпискаВыбораХарактеристик(СписокВыбораЗначение, СписокВыбораПредставление, ТекущиеДанные);	
	
	СформироватьРасширеннуюПодсказку(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьПредставлениеСпискаВыбораХарактеристик(СписокВыбораИсходящий, СписокВыбораВходящий, ТекущиеДанные)
	
	// Метод используется для обхода проблемы представления строки списка значения в таблице формы.
	
	СписокВыбораВходящий.Очистить();
	
	Для каждого ЭлементКоллекции Из СписокВыбораИсходящий Цикл
		
		СписокВыбораВходящий.Добавить(ЭлементКоллекции.Представление, ЭлементКоллекции.Представление);
		
		Если ЭлементКоллекции.Значение = ТекущиеДанные.РежимЗагрузкиХарактеристик Тогда
			ТекущиеДанные.ПредставлениеРежимаЗагрузкиХарактеристик = ЭлементКоллекции.Представление;
		КонецЕсли;
		
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура ВидыНоменклатурыВидНоменклатурыПриИзменении(Элемент)
		
	ВидыНоменклатурыВидНоменклатурыПриИзмененииНаСервере(Элементы.ВидыНоменклатуры.ТекущаяСтрока);
		
КонецПроцедуры

&НаСервере
Процедура ВидыНоменклатурыВидНоменклатурыПриИзмененииНаСервере(ИдентификаторСтроки)
	
	БылиИзмененияВидовНоменклатуры = Истина;
		
	СтрокаДанных = ВидыНоменклатуры.НайтиПоИдентификатору(ИдентификаторСтроки);
	
	ПриИзмененииВидаНоменклатуры(СтрокаДанных);	
	
	УстановитьВидНоменклатурыКатегориям(СтрокаДанных);
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьДанныеПоВидуНоменклатуры(СтрокаДанных)
	
	СтрокаДанных.Комментарий                         = "";
	СтрокаДанных.КоличествоДополнительныхРеквизитов  = 0;
	СтрокаДанных.КоличествоСопоставленныхРеквизитов  = 0;
	СтрокаДанных.СтатусВеденияУчетаХарактеристик     = "";
	СтрокаДанных.КомментарийГиперссылка              = "";

КонецПроцедуры

&НаСервере
Процедура ПриИзмененииВидаНоменклатуры(СтрокаДанных)
	
	ОчиститьДанныеПоВидуНоменклатуры(СтрокаДанных);
	
	Если Не ЗначениеЗаполнено(СтрокаДанных.ВидНоменклатуры) Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаДанных.ВидНоменклатурыСопоставлен
		= ВидНоменклатурыСопоставленСКатегорией(СтрокаДанных.ВидНоменклатуры, СтрокаДанных.ИдентификаторКатегории);
		
	Если СтрокаДанных.ВидНоменклатурыСопоставлен
		И СтрокаДанных.ВидыНоменклатурыКатегории.НайтиПоЗначению(СтрокаДанных.ВидНоменклатуры) = Неопределено Тогда
			
		СтрокаДанных.ВидыНоменклатурыКатегории.Вставить(0, СтрокаДанных.ВидНоменклатуры);
	КонецЕсли;	
		
	ЗаполнитьКоличествоРеквизитов(СтрокаДанных);
	
	ПолучитьВариантИспользованияХарактеристик(СтрокаДанных.ВидНоменклатуры, СтрокаДанных.СтатусВеденияУчетаХарактеристик);	
	
	СформироватьПодсказкуКВидуНоменклатуры(СтрокаДанных, СтрокаДанных.Комментарий);	
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьКоличествоРеквизитов(СтрокаДанных)
	
	ДанныеПоНоменклатуре = ПолучитьИзВременногоХранилища(АдресДанныхНоменклатуры);
	
	СтрокаНоменклатуры = ДанныеПоНоменклатуре.Найти(СтрокаДанных.ИдентификаторКатегории, "ИдентификаторКатегории");
	
	Если СтрокаНоменклатуры = Неопределено Тогда
		Возврат;
	КонецЕсли;	
		
	СоответствиеРеквизитовИЗначений = Неопределено;
	
	РаботаСНоменклатурой.ПолучитьСоответствиеРеквизитовИЗначений(
		ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(СтрокаНоменклатуры.ИдентификаторКатегории), СоответствиеРеквизитовИЗначений);
	
	РаботаСНоменклатурой.ЗаполнитьСоответствиеРеквизитовИЗначенийНоменклатуры(СоответствиеРеквизитовИЗначений, СтрокаНоменклатуры);
	
	ПодсчитатьКоличествоДополнительныхРеквизитов(СтрокаНоменклатуры, СтрокаДанных);
			
КонецПроцедуры

&НаСервере
Процедура УстановитьВидНоменклатурыКатегориям(СтрокаДанных)
	
	СтрокиПоКатегории = ВидыНоменклатуры.
		НайтиСтроки(Новый Структура("ИдентификаторКатегории", СтрокаДанных.ИдентификаторКатегории));
		
	Для каждого ЭлементКоллекции Из СтрокиПоКатегории Цикл
		ЗаполнитьЗначенияСвойств(ЭлементКоллекции, СтрокаДанных, 
			"ВидНоменклатуры, СтатусВеденияУчетаХарактеристик, Комментарий, КомментарийГиперссылка, 
				|КоличествоДополнительныхРеквизитов, КоличествоСопоставленныхРеквизитов");
		
		ЭлементКоллекции.ВидыНоменклатурыКатегории.ЗагрузитьЗначения(СтрокаДанных.ВидыНоменклатурыКатегории.ВыгрузитьЗначения());
	КонецЦикла;
		
КонецПроцедуры

&НаСервере
Процедура ПолучитьВариантИспользованияХарактеристик(ВидНоменклатуры, СтатусВеденияУчетаХарактеристик)
	
	Если Не ЗначениеЗаполнено(ВидНоменклатуры) Тогда
		Возврат;
	КонецЕсли;
	
	СтатусВеденияУчетаХарактеристик = РаботаСНоменклатурой.ВариантИспользованияХарактеристик(ВидНоменклатуры);
		
КонецПроцедуры

&НаКлиенте
Процедура ХарактеристикиРежимЗагрузкиХарактеристикПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Характеристики.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	УстановитьЗначениеРежимаЗагрузкиХарактеристик(ТекущиеДанные);
	
	Если ТекущиеДанные.РежимЗагрузкиХарактеристик = "ВыбранныеХарактеристики" Тогда
		ВыбратьХарактеристикиДляЗагрузки(ТекущиеДанные);
	КонецЕсли;
	
	СформироватьПодсказкуКХарактеристикам(ТекущиеДанные, ТекущиеДанные.Комментарий);
	
	СформироватьРасширеннуюПодсказку(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьЗначениеРежимаЗагрузкиХарактеристик(ТекущиеДанные)
	
	СписокВыбора = Элементы.ХарактеристикиРежимЗагрузкиХарактеристик.СписокВыбора;
	
	Для каждого ЭлементКоллекции Из СписокВыбора Цикл
		Если ЭлементКоллекции.Представление = ТекущиеДанные.ПредставлениеРежимаЗагрузкиХарактеристик Тогда
			ТекущиеДанные.РежимЗагрузкиХарактеристик = ЭлементКоллекции.Значение;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидыНоменклатурыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.ВидыНоменклатуры.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	Если Поле = Элементы.ВидыНоменклатурыКомментарийГиперссылка Тогда
		
		// Открытие формы сопоставления реквизитов
		
		СтандартнаяОбработка = Ложь;
		
		Идентификаторы = Новый СписокЗначений;
		
		Идентификаторы.Добавить(ТекущиеДанные.ИдентификаторКатегории);
		
		ПараметрыФормы = Новый Структура;
		
		ПараметрыФормы.Вставить("ВидНоменклатуры",         ТекущиеДанные.ВидНоменклатуры);
		ПараметрыФормы.Вставить("ИдентификаторыКатегорий", Идентификаторы);
		ПараметрыФормы.Вставить("НаименованиеКатегории",   ТекущиеДанные.НаименованиеКатегории);
		ПараметрыФормы.Вставить("ЭтоВнешняяПривязка",      Не ТекущиеДанные.ВидНоменклатурыСопоставлен);
		ПараметрыФормы.Вставить("ЭтоРежимСопоставленияРеквизитов", ТекущиеДанные.ВидНоменклатурыСопоставлен);
		
		Оповещение = Новый ОписаниеОповещения("ПослеСопоставленияРеквизитов", ЭтотОбъект, Новый Структура("ТекущаяСтрока", Элементы.ВидыНоменклатуры.ТекущаяСтрока));
		
		ОткрытьФорму("Обработка.РаботаСНоменклатурой.Форма.ЗаполнениеВидаНоменклатуры", ПараметрыФормы, ЭтотОбъект,,,, Оповещение);
				
	ИначеЕсли Поле = Элементы.ВидыНоменклатурыНаименованиеНоменклатуры Тогда
		
		// Открытие карточки номенклатуры.
		
		СтандартнаяОбработка = Ложь;
		
		ПараметрыФормы = РаботаСНоменклатуройКлиент.ПараметрыФормыКарточкиНоменклатурыСервиса();
		
		ПараметрыФормы.ИдентификаторыНоменклатуры.Добавить(ТекущиеДанные.ИдентификаторНоменклатуры);
		ПараметрыФормы.ЭтоРежимПросмотра = Истина;
		
		РаботаСНоменклатуройКлиент.ОткрытьФормуКарточкиНоменклатурыСервиса(ПараметрыФормы, ЭтотОбъект);
		
	ИначеЕсли Поле = Элементы.ВидыНоменклатурыНаименованиеКатегории Тогда	
	
		// Открытие карточки категории.
		
		СтандартнаяОбработка = Ложь;
		
		РаботаСНоменклатуройКлиент.ОткрытьФормуКарточкиКатегории(ТекущиеДанные.ИдентификаторКатегории, Неопределено, ЭтотОбъект);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеСопоставленияРеквизитов(Результат, ДополнительныеПараметры) Экспорт
	
	ПослеСопоставленияРеквизитовНаСервере(ДополнительныеПараметры.ТекущаяСтрока);
						
КонецПроцедуры

&НаСервере
Процедура ПослеСопоставленияРеквизитовНаСервере(ТекущаяСтрока)
	
	СтрокаДанных = ВидыНоменклатуры.НайтиПоИдентификатору(ТекущаяСтрока);
	
	ПриИзмененииВидаНоменклатуры(СтрокаДанных);
		
КонецПроцедуры

&НаКлиенте
Процедура ВидыНоменклатурыВидНоменклатурыОткрытие(Элемент, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.ВидыНоменклатуры.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	СтандартнаяОбработка = Ложь;
	
	Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВидаНоменклатуры", ЭтотОбъект, 
		Новый Структура("ТекущаяСтрока", Элементы.ВидыНоменклатуры.ТекущаяСтрока));
	
	ИмяФормыВидаНоменклатуры = РаботаСНоменклатуройСлужебныйВызовСервера.ИмяФормыЭлементаВидаНоменклатуры();
	
	Если НЕ ЗначениеЗаполнено(ИмяФормыВидаНоменклатуры) Тогда
		Возврат;
	КонецЕсли;
	
	ОткрытьФорму(ИмяФормыВидаНоменклатуры, 
		Новый Структура("Ключ", ТекущиеДанные.ВидНоменклатуры), ЭтотОбъект,,,,Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВидаНоменклатуры(Результат, ДополнительныеПараметры) Экспорт
	
	ПослеЗакрытияВидаНоменклатурыНаСервере(Результат, ДополнительныеПараметры);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗакрытияВидаНоменклатурыНаСервере(Результат, ДополнительныеПараметры)
	
	СтрокаДанных = ВидыНоменклатуры.НайтиПоИдентификатору(ДополнительныеПараметры.ТекущаяСтрока);
	
	ПриИзмененииВидаНоменклатуры(СтрокаДанных);
	
	УстановитьВидНоменклатурыКатегориям(СтрокаДанных);
		
КонецПроцедуры

#КонецОбласти