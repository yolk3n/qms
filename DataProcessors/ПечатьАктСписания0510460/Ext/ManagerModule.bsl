#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС
#Область ПрограммныйИнтерфейс

// Функция возвращает элемент таблицы доступных печатных форм объекта печати
//
Функция ДобавитьПечатнуюФорму(ПечатныеФормы) Экспорт
	
	МетаданныеМакета = МетаданныеМакета();
	МенеджерПечати = МетаданныеМакета.Родитель().ПолноеИмя();
	
	ПечатнаяФорма = УправлениеПечатьюБольничнаяАптека.ДобавитьПечатнуюФорму(ПечатныеФормы, "АктСписания0510460", МенеджерПечати);
	ПечатнаяФорма.ПутьКМакету = ФормированиеПечатныхФормБольничнаяАптека.ПутьКМакету(МетаданныеМакета);
	ПечатнаяФорма.Представление = МетаданныеМакета.Представление();
	
	УправлениеПечатьюБольничнаяАптека.ДобавитьКомандуПечати(ПечатнаяФорма);
	
	Возврат ПечатнаяФорма;
	
КонецФункции

// Функция формирует печатную форму требование накладная ф.0510460
//
Функция ПечатьАктСписания0510460(МассивОбъектов, ОбъектыПечати) Экспорт
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.АвтоМасштаб        = Истина;
	
	ПолноеИмяМакета = ФормированиеПечатныхФормБольничнаяАптека.ПутьКМакету(МетаданныеМакета());
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_" + ПолноеИмяМакета;
	Макет = УправлениеПечатью.МакетПечатнойФормы(ПолноеИмяМакета);
	
	СтруктураТипов = ОбщегоНазначенияБольничнаяАптека.РазложитьМассивСсылокПоТипам(МассивОбъектов);
	
	НомерТипаДокумента = 0;
	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
		
		НомерТипаДокумента = НомерТипаДокумента + 1;
		Если НомерТипаДокумента > 1 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(СтруктураОбъектов.Ключ);
		
		ПараметрыПечати = Новый Структура;
		ПараметрыПечати.Вставить("ПолучатьЦены");
		ДанныеДляПечати = МенеджерОбъекта.ПолучитьДанныеДляПечати(СтруктураОбъектов.Значение, ПараметрыПечати);
		
		СформироватьТабличныйДокумент(ТабличныйДокумент, Макет, ДанныеДляПечати, ОбъектыПечати);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

#КонецОбласти // ПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

Процедура СформироватьТабличныйДокумент(ТабличныйДокумент, Макет, ДанныеДляПечати, ОбъектыПечати)
	
	МассивВыводимыхОбластей = Новый Массив;
	
	ВалютаПечати = ЗначениеНастроекБольничнаяАптекаПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	
	Шапка = ДанныеДляПечати.РезультатПоШапке.Выбрать();
	ВыборкаПоДокументам = ДанныеДляПечати.РезультатПоТабличнойЧасти.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ВыборкаПоКомиссиямДокументов = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ДанныеДляПечати, "РезультатПоСоставуКомиссии");
	Если ДанныеДляПечати.Свойство("РезультатПоСоставуКомиссии") Тогда
		ВыборкаПоКомиссиямДокументов = ДанныеДляПечати.РезультатПоСоставуКомиссии.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Иначе
		ВыборкаПоКомиссиямДокументов = Неопределено;
	КонецЕсли;
	
	ПервыйДокумент = Истина;
	Пока Шапка.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		Иначе
			ПервыйДокумент = Ложь;
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		// Получение параметров для заполнения
		ДанныеШапки = ПолучитьДанныеШапкиДокумента(Шапка);
		
		// Подготовка данных состава комиссии
		ОбластиКомиссии = СформироватьОбластиКомиссии(Макет, Шапка, ВыборкаПоКомиссиямДокументов, ДанныеШапки);
		
		ФормированиеПечатныхФормБольничнаяАптека.ВывестиОбластьСоШтрихкодом(ТабличныйДокумент, Макет, "Заголовок", ДанныеШапки);
		
		ФормированиеПечатныхФормБольничнаяАптека.ВывестиОбластьПоИмени(ТабличныйДокумент, Макет, "ШапкаТаблицы");
		
		// Инициализация итогов по документу
		ПараметрыИтого = Новый Структура;
		ПараметрыИтого.Вставить("Сумма"     , 0);
		ПараметрыИтого.Вставить("Количество", 0);
		
		// Вывод многострочной части
		ВыборкаПоДокументам.Сбросить();
		ПараметрыПоиска = Новый Структура("Документ", Шапка.Ссылка);
		Если ВыборкаПоДокументам.НайтиСледующий(ПараметрыПоиска) Тогда
			ВыборкаСтрокТовары = ВыборкаПоДокументам.Выбрать();
			
			КлючиПараметров = ФормированиеПечатныхФормБольничнаяАптека.ПолучитьИменаКолонокТаблицы(ВыборкаСтрокТовары);
			
			ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
			
			КоличествоСтрок = ВыборкаСтрокТовары.Количество();
			НомерСтроки = 0;
			Пока ВыборкаСтрокТовары.Следующий() Цикл
				
				НомерСтроки = НомерСтроки + 1;
				
				ДанныеСтроки = Новый Структура(КлючиПараметров);
				ЗаполнитьЗначенияСвойств(ДанныеСтроки, ВыборкаСтрокТовары);
				
				ТоварНаименование = ОбщегоНазначенияБольничнаяАптека.ПолучитьПредставлениеНоменклатурыДляПечати(
					ВыборкаСтрокТовары.ТоварНаименование,
					ВыборкаСтрокТовары.СерияНоменклатуры,
					ВыборкаСтрокТовары.Партия);
				
				ДанныеСтроки.Вставить("ТоварНаименование", ТоварНаименование);
				
				ДанныеСтроки.Вставить("ПричинаСписания", ПолучитьПричинуСписания(ВыборкаСтрокТовары));
				
				ОбластьСтрока.Параметры.Заполнить(ДанныеСтроки);
				
				ЭтоПоследняяСтрока = НомерСтроки = КоличествоСтрок;
				ПроверитьВыводСтроки(ТабличныйДокумент, Макет, МассивВыводимыхОбластей, ОбластьСтрока, ЭтоПоследняяСтрока);
				
				// Вывод области Строка
				ТабличныйДокумент.Вывести(ОбластьСтрока);
				
				ФормированиеПечатныхФормБольничнаяАптека.РассчитатьИтоги(ДанныеСтроки, ПараметрыИтого);
				
			КонецЦикла;
		КонецЕсли;
		
		// Вывод области Итого
		ФормированиеПечатныхФормБольничнаяАптека.ВывестиОбластьПоИмени(ТабличныйДокумент, Макет, "Итого", ПараметрыИтого);
		
		// Вывод области Сноски
		ФормированиеПечатныхФормБольничнаяАптека.ВывестиОбластьПоИмени(ТабличныйДокумент, Макет, "Сноски");
		
		// Вывод области ПодписиКомиссии
		Для Каждого ОбластьПодписиКомиссии Из ОбластиКомиссии Цикл
			ТабличныйДокумент.Вывести(ОбластьПодписиКомиссии);
		КонецЦикла;
		
		ФормированиеПечатныхФормБольничнаяАптека.ВывестиОбластьПоИмени(ТабличныйДокумент, Макет, "Дата", ДанныеШапки);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьДанныеШапкиДокумента(Шапка)
	
	КлючиПараметров = ФормированиеПечатныхФормБольничнаяАптека.ПолучитьИменаКолонокТаблицы(Шапка);
	
	Параметры = Новый Структура(КлючиПараметров);
	ЗаполнитьЗначенияСвойств(Параметры, Шапка);
	
	СведенияОбОрганизации    = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Шапка.Организация, Шапка.ДатаДокумента);
	ОрганизацияПредставление = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации);
	
	ОтветственныеЛица = ОтветственныеЛицаСервер.ПолучитьОтветственныеЛицаОрганизации(Шапка.Организация, Шапка.ДатаДокумента);
	МОЛ = РегистрыСведений.МатериальноОтветственныеЛица.ПолучитьДанныеОтветственного(Шапка.Склад, Шапка.ДатаДокумента);
	
	// Данные области Заголовок
	Параметры.Вставить("Дата"                    , Формат(Шапка.ДатаДокумента, "ДЛФ=D"));
	Параметры.Вставить("ДатаЗаголовка"           , Формат(Шапка.ДатаДокумента, "ДЛФ=DD"));
	Параметры.Вставить("НомерДокумента"          , ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Шапка.НомерДокумента));
	Параметры.Вставить("РуководительФИО"         , ОтветственныеЛица.РуководительНаименование);
	Параметры.Вставить("ГлавБухФИО"              , ОтветственныеЛица.ГлавныйБухгалтерНаименование);
	Параметры.Вставить("ОрганизацияПредставление", ОрганизацияПредставление);
	Параметры.Вставить("ОрганизацияИНН"          , СведенияОбОрганизации.ИНН);
	Параметры.Вставить("ОрганизацияОКПО"         , СведенияОбОрганизации.КодПоОКПО);
	Параметры.Вставить("ОрганизацияКПП"          , СведенияОбОрганизации.КПП);
	Параметры.Вставить("МОЛ"                     , МОЛ.Ответственный);
	
	// Данные области Приказ
	ДанныеПриказа = Новый Структура("ДатаПриказа, НомерПриказа");
	ЗаполнитьЗначенияСвойств(ДанныеПриказа, Шапка);
	
	Если ЗначениеЗаполнено(ДанныеПриказа.ДатаПриказа) Тогда
		ДатаПриказа = Формат(ДанныеПриказа.ДатаПриказа, "ДЛФ=D");
	Иначе
		ДатаПриказа = СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов("_", 10);
	КонецЕсли;
	Параметры.Вставить("ДатаПриказа" , ДатаПриказа);
	
	НомерПриказа = ДанныеПриказа.НомерПриказа;
	Если Не ЗначениеЗаполнено(НомерПриказа) Тогда
		НомерПриказа = СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов("_", 10);
	КонецЕсли;
	Параметры.Вставить("НомерПриказа", НомерПриказа);
	
	Возврат Параметры;
	
КонецФункции

Функция СформироватьОбластиКомиссии(Макет, Шапка, ВыборкаПоКомиссиямДокументов, ДанныеШапки)
	
	ОбластиКомиссии = Новый Массив;
	
	ФормированиеПечатныхФормБольничнаяАптека.ДобавитьОбластьВМассивПоОписанию(Макет, "КомиссияЗаголовок", ОбластиКомиссии);
	
	КоличествоЧленовКомиссии = 0;
	ПустыеСтроки             = 4;
	СтрокаКомиссия           = "";
	
	ПараметрыПоиска = Новый Структура("Документ", Шапка.Ссылка);
	
	Если ВыборкаПоКомиссиямДокументов <> Неопределено Тогда
		ВыборкаПоКомиссиямДокументов.Сбросить();
		Если ВыборкаПоКомиссиямДокументов.НайтиСледующий(ПараметрыПоиска) Тогда
			Комиссия = ВыборкаПоКомиссиямДокументов.Выбрать();
			КоличествоЧленовКомиссии = Комиссия.Количество();
		КонецЕсли;
	КонецЕсли;
	
	ПредседательВСоставе = Ложь;
	Для НомерЧленаКомиссии = 1 По Макс(КоличествоЧленовКомиссии, ПустыеСтроки) Цикл
		
		Параметры = Новый Структура("Дата, ГлавБухФИО");
		ЗаполнитьЗначенияСвойств(Параметры, ДанныеШапки);
		
		Если НомерЧленаКомиссии > КоличествоЧленовКомиссии Тогда
			ЧленКомиссииСтатус = ?(НомерЧленаКомиссии = 1, НСтр("ru = 'Председатель комиссии'"), ?(НомерЧленаКомиссии = 2, НСтр("ru = 'Члены комиссии'"), ""));
			Параметры.Вставить("Статус", ЧленКомиссииСтатус);
		Иначе
			
			Комиссия.Следующий();
			
			Если Комиссия.Председатель И НомерЧленаКомиссии = 1 Тогда
				Параметры.Вставить("Статус", НСтр("ru = 'Председатель комиссии'"));
				ПредседательВСоставе = Истина;
			ИначеЕсли НомерЧленаКомиссии = 1
				  Или НомерЧленаКомиссии = 2 И ПредседательВСоставе Тогда
				Параметры.Вставить("Статус", НСтр("ru = 'Члены комиссии'"));
			КонецЕсли;
			
			Параметры.Вставить("ПодписьФИО"      , ФизическиеЛицаКлиентСервер.ФамилияИнициалы(СокрЛП(Комиссия.Представление)));
			Параметры.Вставить("ПодписьДолжность", Комиссия.Должность);
			
			СтрокаКомиссия = СтрокаКомиссия + ", " + ?(ЗначениеЗаполнено(Параметры.ПодписьДолжность), Параметры.ПодписьДолжность + " ", "");
			СтрокаКомиссия = СтрокаКомиссия + Параметры.ПодписьФИО;
			
		КонецЕсли;
		
		Если НомерЧленаКомиссии <= ПустыеСтроки Тогда
			ИмяОбласти = "Комиссия" + НомерЧленаКомиссии;
		Иначе
			ИмяОбласти = "Комиссия";
		КонецЕсли;
		
		ФормированиеПечатныхФормБольничнаяАптека.ДобавитьОбластьВМассивПоОписанию(Макет, ИмяОбласти, ОбластиКомиссии, Параметры);
		
	КонецЦикла;
	
	ДанныеШапки.Вставить("СоставКомиссии", Сред(СтрокаКомиссия, 3));
	
	Возврат ОбластиКомиссии;
	
КонецФункции

Функция ПолучитьПричинуСписания(Данные)
	
	ПричинаСписания = "";
	
	ДанныеПричиныСписания = Новый Структура("СтатьяРасходов, АналитикаРасходов");
	ЗаполнитьЗначенияСвойств(ДанныеПричиныСписания, Данные);
	
	Если ЗначениеЗаполнено(ДанныеПричиныСписания.СтатьяРасходов) Тогда
		ПричинаСписания = Строка(ДанныеПричиныСписания.СтатьяРасходов);
		ПричинаСписания = ПричинаСписания + ": " + ОбщегоНазначения.ПредметСтрокой(ДанныеПричиныСписания.АналитикаРасходов);
	КонецЕсли;
	
	Возврат ПричинаСписания;
	
КонецФункции

Процедура ПроверитьВыводСтроки(ТабличныйДокумент, Макет, МассивВыводимыхОбластей, ТекущаяОбласть, ЭтоПоследняяСтрока)
	
	МассивВыводимыхОбластей.Очистить();
	МассивВыводимыхОбластей.Добавить(ТекущаяОбласть);
	Если ЭтоПоследняяСтрока Тогда
		МассивВыводимыхОбластей.Добавить(Макет.ПолучитьОбласть("Итого"));
	КонецЕсли;
	
	Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабличныйДокумент, МассивВыводимыхОбластей) Тогда
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		ТабличныйДокумент.Вывести(Макет.ПолучитьОбласть("ШапкаТаблицы"));
	КонецЕсли;
	
КонецПроцедуры

Функция МетаданныеМакета()
	
	Возврат Метаданные.Обработки.ПечатьАктСписания0510460.Макеты.ПФ_MXL_АктСписания0510460;
	
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции

#КонецЕсли
