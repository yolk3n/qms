#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС
#Область ПрограммныйИнтерфейс

// Функция возвращает элемент таблицы доступных печатных форм объекта печати
//
Функция ДобавитьПечатнуюФорму(ПечатныеФормы) Экспорт
	
	МетаданныеМакета = МетаданныеМакета();
	МенеджерПечати = МетаданныеМакета.Родитель().ПолноеИмя();
	
	ПечатнаяФорма = УправлениеПечатьюБольничнаяАптека.ДобавитьПечатнуюФорму(ПечатныеФормы, "ТребованиеНакладная0504204", МенеджерПечати);
	ПечатнаяФорма.ПутьКМакету = ФормированиеПечатныхФормБольничнаяАптека.ПутьКМакету(МетаданныеМакета);
	ПечатнаяФорма.Представление = МетаданныеМакета.Представление();
	
	ПечатнаяФорма.Параметризуемая = Истина;
	ПечатнаяФорма.ДополнительныеПараметры.Вставить("ВыводитьИсполнение", Ложь);
	ПечатнаяФорма.ДополнительныеПараметры.Вставить("ПредставлениеИзДействующегоВещества", Ложь);
	ПечатнаяФорма.ДополнительныеПараметры.Вставить("ПредставлениеИзТорговогоНаименования", Ложь);
	ПечатнаяФорма.ДополнительныеПараметры.Вставить("ВыводитьПациентов", Ложь);
	
	Возврат ПечатнаяФорма;
	
КонецФункции

// Функция формирует печатную форму требование накладная ф.0504204
//
Функция ПечатьТребованиеНакладная0504204(МассивОбъектов, ОбъектыПечати, ПараметрыПечати) Экспорт
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.АвтоМасштаб        = Истина;
	
	ПолноеИмяМакета = ФормированиеПечатныхФормБольничнаяАптека.ПутьКМакету(МетаданныеМакета());
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_" + ПолноеИмяМакета;
	Макет = УправлениеПечатью.МакетПечатнойФормы(ПолноеИмяМакета);
	
	СтруктураТипов = ОбщегоНазначенияБольничнаяАптека.РазложитьМассивСсылокПоТипам(МассивОбъектов);
	
	НомерТипаДокумента = 0;
	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
		
		НомерТипаДокумента = НомерТипаДокумента + 1;
		Если НомерТипаДокумента > 1 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(СтруктураОбъектов.Ключ);
		
		Если ТипЗнч(ПараметрыПечати) = Неопределено Тогда
			ПараметрыПечати = Новый Структура;
		КонецЕсли;
		ПараметрыПечати.Вставить("ПолучатьЦены");
		ДанныеДляПечати = МенеджерОбъекта.ПолучитьДанныеДляПечати(СтруктураОбъектов.Значение, ПараметрыПечати);
		
		СформироватьТабличныйДокумент(ТабличныйДокумент, Макет, ДанныеДляПечати, ОбъектыПечати, ПараметрыПечати);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

#КонецОбласти // ПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

Процедура СформироватьТабличныйДокумент(ТабличныйДокумент, Макет, ДанныеДляПечати, ОбъектыПечати, ПараметрыПечати)
	
	// Действующее вещество.
	ПредставлениеИзДействующегоВещества = Ложь;
	
	// Торговое наименование.
	ПредставлениеИзТорговогоНаименования = Ложь;
	
	ВыводитьИсполнение = Неопределено;
	ВыводитьПациентов = Неопределено;
	
	Если ПараметрыПечати <> Неопределено Тогда
		
		// Если параметр ПредставлениеИзДействующегоВещества не передается, тогда ПредставлениеИзДействующегоВещества = Ложь.
		Если Не ПараметрыПечати.Свойство("ПредставлениеИзДействующегоВещества", ПредставлениеИзДействующегоВещества) Тогда
			ПредставлениеИзДействующегоВещества = Ложь;
		КонецЕсли;
		
		// Если параметр ПредставлениеИзТорговогоНаименования не передается, тогда ПредставлениеИзТорговогоНаименования = Ложь.
		Если Не ПараметрыПечати.Свойство("ПредставлениеИзТорговогоНаименования", ПредставлениеИзТорговогоНаименования) Тогда
			ПредставлениеИзТорговогоНаименования = Ложь;
		КонецЕсли;
		
		Если ПараметрыПечати.Свойство("ВыводитьИсполнение", ВыводитьИсполнение) И ВыводитьИсполнение Тогда
			ТаблицаИсполнения = ДанныеДляПечати.ТаблицаИсполнения;
		КонецЕсли;
		
		ПараметрыПечати.Свойство("ВыводитьПациентов", ВыводитьПациентов);
		
	КонецЕсли;
	
	МассивВыводимыхОбластей = Новый Массив;
	
	Шапка = ДанныеДляПечати.РезультатПоШапке.Выбрать();
	ВыборкаПоДокументам = ДанныеДляПечати.РезультатПоТабличнойЧасти.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	Пока Шапка.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		Иначе
			ПервыйДокумент = Ложь;
		КонецЕсли;
		
		ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(Шапка.Ссылка, ТабличныйДокумент, Макет);
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Если ВыводитьПациентов = Истина Тогда
			ТаблицаПациенты = Шапка.Пациенты.Выгрузить();
		КонецЕсли;
		
		// Получение параметров для заполнения
		ДанныеШапки = ПолучитьДанныеШапкиДокумента(Шапка);
		
		// Вывод области Заголовок
		ФормированиеПечатныхФормБольничнаяАптека.ВывестиОбластьПоИмени(ТабличныйДокумент, Макет, "Заголовок", ДанныеШапки);
		
		// Вывод области ИсточникФинансирования
		Если ЗначениеЗаполнено(Шапка.ИсточникФинансирования) Тогда
			ФормированиеПечатныхФормБольничнаяАптека.ВывестиОбластьПоИмени(ТабличныйДокумент, Макет, "ИсточникФинансирования", ДанныеШапки);
		КонецЕсли;
		
		// Вывод области ПодписиЗаголовка
		ФормированиеПечатныхФормБольничнаяАптека.ВывестиОбластьПоИмени(ТабличныйДокумент, Макет, "ПодписиЗаголовка", ДанныеШапки);
		
		// Инициализация нумерации
		Нумерация = ИнициализироватьНумерацию();
		
		// Вывод области ШапкаТаблицы
		ФормированиеПечатныхФормБольничнаяАптека.ВывестиОбластьПоИмени(ТабличныйДокумент, Макет, "ШапкаТаблицы", Нумерация);
		
		// Инициализация итогов по документу
		ПараметрыИтого = Новый Структура;
		ПараметрыИтого.Вставить("Сумма", 0);
		
		ВыборкаПоДокументам.Сбросить();
		ПараметрыПоиска = Новый Структура("Документ", Шапка.Ссылка);
		Если ВыборкаПоДокументам.НайтиСледующий(ПараметрыПоиска) Тогда
			ВыборкаСтрокТовары = ВыборкаПоДокументам.Выбрать();
			
			КоличествоСтрок = ВыборкаСтрокТовары.Количество();
			НомерСтроки = 0;
			
			ДанныеСтроки = Новый Структура;
			
			ТабличныйДокумент.НачатьАвтогруппировкуСтрок();
			Пока ВыборкаСтрокТовары.Следующий() Цикл
				
				ОбластьСтрока  = Макет.ПолучитьОбласть("Строка");
				
				ФормированиеПечатныхФормБольничнаяАптека.УвеличитьНомер(Нумерация, "НомерСтроки");
				
				КлючиПараметров = ФормированиеПечатныхФормБольничнаяАптека.ПолучитьИменаКолонокТаблицы(ВыборкаСтрокТовары);
				ДанныеСтроки = Новый Структура(КлючиПараметров);
				ЗаполнитьЗначенияСвойств(ДанныеСтроки, ВыборкаСтрокТовары);
				
				// Вывод пациентов
				МассивСтрокПациентов = Новый Массив;
				Если ВыводитьПациентов = Истина Тогда
					
					Если ВыборкаСтрокТовары.КлючСвязиПациентов > 0 Тогда
						
						ВыборкаПациент = ТаблицаПациенты.НайтиСтроки(Новый Структура("КлючСвязиПациентов", ВыборкаСтрокТовары.КлючСвязиПациентов));
						Для Каждого ПараметрыПациент Из ВыборкаПациент Цикл
							ОбластьСтрокаПациент = Макет.ПолучитьОбласть("СтрокаПациент");
							ОбластьСтрокаПациент.Параметры.Заполнить(ВыборкаСтрокТовары);
							ОбластьСтрокаПациент.Параметры.Заполнить(ПараметрыПациент);
							МассивСтрокПациентов.Добавить(ОбластьСтрокаПациент);
						КонецЦикла;
						
					КонецЕсли;
					
				КонецЕсли;
				
				// Вывод исполнения
				МассивИсполнения = Новый Массив;
				Если ВыводитьИсполнение = Истина Тогда
					
					ОтборИсполнения = Новый Структура("ДокументТребование, ОтборНоменклатуры, ЕдиницаИзмерения, КодСтроки");
					ЗаполнитьЗначенияСвойств(ОтборИсполнения, ВыборкаСтрокТовары);
					ОтборИсполнения.ДокументТребование = Шапка.Ссылка;
					
					СтрокиИсполнения = ТаблицаИсполнения.НайтиСтроки(ОтборИсполнения);
					
					Если СтрокиИсполнения.Количество() = 1
					   И СтрокиИсполнения[0].Номенклатура = ВыборкаСтрокТовары.Номенклатура
					   И СтрокиИсполнения[0].Упаковка = ВыборкаСтрокТовары.ЕдиницаИзмерения Тогда
						
						Исполнение = СтрокиИсполнения[0];
						ДанныеСтроки.Вставить("Отпущено", Исполнение.Отпущено);
						ДанныеСтроки.Вставить("Цена",     Исполнение.Цена);
						ДанныеСтроки.Вставить("Сумма",    Исполнение.Сумма);
						
					Иначе
						
						Для Каждого Исполнение Из СтрокиИсполнения Цикл
							
							ПараметрыИсполнения = Новый Структура(КлючиПараметров);
							ЗаполнитьЗначенияСвойств(ПараметрыИсполнения, Исполнение);
							
							ОтборЦеныПоИсполнению = Новый Структура("Ссылка", Исполнение.Документ);
							
							ПараметрыИсполнения.Вставить("ТоварНаименование", ПолучитьПредставлениеНоменклатуры(Исполнение, ПредставлениеИзДействующегоВещества, ПредставлениеИзТорговогоНаименования));
							ПараметрыИсполнения.Вставить("Цена",              Исполнение.Цена);
							ПараметрыИсполнения.Вставить("Отпущено",          Исполнение.Отпущено);
							ПараметрыИсполнения.Вставить("ЕдиницаИзмерения",  Исполнение.Упаковка);
							ПараметрыИсполнения.Вставить("Сумма",             Исполнение.Сумма);
							
							ОбластьСтрокаИсполнение = Макет.ПолучитьОбласть("СтрокаИсполнение");
							ОбластьСтрокаИсполнение.Параметры.Заполнить(ПараметрыИсполнения);
							МассивИсполнения.Добавить(ОбластьСтрокаИсполнение);
							
							ПараметрыИтогоПоСтроке = Новый Структура;
							ПараметрыИтогоПоСтроке.Вставить("Отпущено", Исполнение.КоличествоЗаказа);
							ПараметрыИтогоПоСтроке.Вставить("Сумма",    Исполнение.Сумма);
							ФормированиеПечатныхФормБольничнаяАптека.РассчитатьИтоги(ПараметрыИтогоПоСтроке, ДанныеСтроки);
							
						КонецЦикла;
						
					КонецЕсли;
					
				КонецЕсли;
				
				ДанныеСтроки.Вставить("НомерСтроки", Нумерация.НомерСтроки);
				ДанныеСтроки.Вставить("ТоварНаименование", ПолучитьПредставлениеНоменклатуры(ВыборкаСтрокТовары, ПредставлениеИзДействующегоВещества, ПредставлениеИзТорговогоНаименования));
				
				ОбластьСтрока.Параметры.Заполнить(ДанныеСтроки);
				
				ЭтоПоследняяСтрока = Нумерация.НомерСтроки = КоличествоСтрок;
				ПроверитьВыводСтроки(ТабличныйДокумент, Макет, МассивВыводимыхОбластей, ОбластьСтрока, ЭтоПоследняяСтрока, Нумерация);
				
				// Вывод области Строка
				ТабличныйДокумент.Вывести(ОбластьСтрока, 1);
				
				// Вывод области СтрокаПациент
				Для Каждого ОбластьСтрокаПациент Из МассивСтрокПациентов Цикл
					ПроверитьВыводСтроки(ТабличныйДокумент, Макет, МассивВыводимыхОбластей, ОбластьСтрокаПациент, ЭтоПоследняяСтрока, Нумерация);
					ТабличныйДокумент.Вывести(ОбластьСтрокаПациент, 2);
				КонецЦикла;
				
				// Вывод области СтрокаИсполнения
				Для каждого ОбластьСтрокаИсполнения Из МассивИсполнения Цикл
					ПроверитьВыводСтроки(ТабличныйДокумент, Макет, МассивВыводимыхОбластей, ОбластьСтрокаИсполнения, ЭтоПоследняяСтрока, Нумерация);
					ТабличныйДокумент.Вывести(ОбластьСтрокаИсполнения, 2);
				КонецЦикла;
				
				ФормированиеПечатныхФормБольничнаяАптека.РассчитатьИтоги(ДанныеСтроки, ПараметрыИтого);
				
			КонецЦикла;
			
			// Вывод сверх заказа
			Если ВыводитьИсполнение = Истина Тогда
				ОтборИсполнения = Новый Структура("ДокументТребование, КодСтроки");
				ОтборИсполнения.ДокументТребование = Шапка.Ссылка;
				ОтборИсполнения.КодСтроки = 0;
				
				СтрокиИсполнения = ТаблицаИсполнения.НайтиСтроки(ОтборИсполнения);
				
				Для Каждого Исполнение Из СтрокиИсполнения Цикл
					
					НомерСтроки = НомерСтроки + 1;
					
					ПараметрыСверхЗаказ = Новый Структура;
					ПараметрыСверхЗаказ.Вставить("НомерСтроки"      , НомерСтроки);
					ПараметрыСверхЗаказ.Вставить("ТоварНаименование", ПолучитьПредставлениеНоменклатуры(Исполнение, ПредставлениеИзДействующегоВещества, ПредставлениеИзТорговогоНаименования));
					ПараметрыСверхЗаказ.Вставить("ОтборНоменклатуры", Исполнение.Номенклатура);
					ПараметрыСверхЗаказ.Вставить("ЕдиницаИзмерения" , Исполнение.Упаковка);
					ПараметрыСверхЗаказ.Вставить("КодПоОКЕИ"        , Исполнение.КодПоОКЕИ);
					ПараметрыСверхЗаказ.Вставить("Затребовано"      , Исполнение.Отпущено);
					ПараметрыСверхЗаказ.Вставить("Отпущено"         , Исполнение.Отпущено);
					ПараметрыСверхЗаказ.Вставить("Цена"             , Исполнение.Цена);
					ПараметрыСверхЗаказ.Вставить("Сумма"            , Исполнение.Сумма);
					
					ОбластьСверхЗаказ = Макет.ПолучитьОбласть("Строка");
					ОбластьСверхЗаказ.Параметры.Заполнить(ПараметрыСверхЗаказ);
					ПроверитьВыводСтроки(ТабличныйДокумент, Макет, МассивВыводимыхОбластей, ОбластьСверхЗаказ, ЭтоПоследняяСтрока, Нумерация);
					ТабличныйДокумент.Вывести(ОбластьСверхЗаказ, 1);
					
					ФормированиеПечатныхФормБольничнаяАптека.РассчитатьИтоги(ПараметрыСверхЗаказ, ПараметрыИтого);
					
				КонецЦикла;
			КонецЕсли;
			
		КонецЕсли;
		
		ТабличныйДокумент.ЗакончитьАвтогруппировкуСтрок();
		
		// Вывод области Итого
		ФормированиеПечатныхФормБольничнаяАптека.ВывестиОбластьПоИмени(ТабличныйДокумент, Макет, "Итого", ПараметрыИтого);
		
		// Вывод области Подписи
		ФормированиеПечатныхФормБольничнаяАптека.ВывестиОбластьПоИмени(ТабличныйДокумент, Макет, "Подписи", ДанныеШапки);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьДанныеШапкиДокумента(Шапка)
	
	КлючиПараметров = ФормированиеПечатныхФормБольничнаяАптека.ПолучитьИменаКолонокТаблицы(Шапка);
	
	Параметры = Новый Структура(КлючиПараметров);
	
	ЗаполнитьЗначенияСвойств(Параметры, Шапка);
	
	// Данные заголовка
	СведенияОбОрганизации = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Шапка.Организация, Шапка.ДатаДокумента);
	
	Параметры.Вставить("НомерДокумента",           ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Шапка.НомерДокумента));
	Параметры.Вставить("ОрганизацияПредставление", ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации));
	Параметры.Вставить("ОрганизацияКодПоОКПО",     СведенияОбОрганизации.КодПоОКПО);
	
	// Данные подписей заголовка
	ЗатребовалФИО = ФизическиеЛицаКлиентСервер.ФамилияИнициалы(СокрЛП(Шапка.Затребовал));
	РазрешилФИО   = ФизическиеЛицаКлиентСервер.ФамилияИнициалы(СокрЛП(Шапка.Разрешил));
	
	Параметры.Вставить("ЗатребовалФИО",       ЗатребовалФИО);
	Параметры.Вставить("ЗатребовалДолжность", Шапка.ЗатребовалДолжность);
	Параметры.Вставить("РазрешилФИО",         РазрешилФИО);
	Параметры.Вставить("РазрешилДолжность",   Шапка.РазрешилДолжность);
	
	// Данные подписей документа
	МОЛОтправителя = РегистрыСведений.МатериальноОтветственныеЛица.ПолучитьДанныеОтветственного(Шапка.СкладОтправитель, Шапка.ДатаДокумента);
	МОЛПолучателя = РегистрыСведений.МатериальноОтветственныеЛица.ПолучитьДанныеОтветственного(Шапка.СкладПолучатель, Шапка.ДатаДокумента);
	
	Параметры.Вставить("ОтправительФИО",       МОЛОтправителя.ФИО);
	Параметры.Вставить("ОтправительДолжность", МОЛОтправителя.Должность);
	Параметры.Вставить("ПолучательФИО",        МОЛПолучателя.ФИО);
	Параметры.Вставить("ПолучательДолжность",  МОЛПолучателя.Должность);
	
	Возврат Параметры;
	
КонецФункции

Функция ПолучитьПредставлениеНоменклатуры(СтрокаТовары, ПредставлениеИзДействующегоВещества, ПредставлениеИзТорговогоНаименования)
	
	Если ЗначениеЗаполнено(СтрокаТовары.Номенклатура) Тогда
		ТоварНаименование = ОбщегоНазначенияБольничнаяАптека.ПолучитьПредставлениеНоменклатурыДляПечати(
			СтрокаТовары.ТоварНаименование,
			СтрокаТовары.СерияНоменклатуры,
			СтрокаТовары.Партия);
	Иначе
		
		Если ЗначениеЗаполнено(СтрокаТовары.ТорговоеНаименование) Тогда
			ТоварНаименование = СокрЛП(СтрокаТовары.ТорговоеНаименование);
		Иначе
			ТоварНаименование = СокрЛП(СтрокаТовары.ДействующиеВеществаМНН);
		КонецЕсли;
		
		УпаковкаПрепарата = ?(СтрокаТовары.ТипЕдиницы = Перечисления.ТипыЕдиницИзмерения.Упаковка, ", " + СокрЛП(СтрокаТовары.ЕдиницаИзмеренияНаименование), "");
		ТоварНаименование = ТоварНаименование + ", " + СокрЛП(СтрокаТовары.ФормаВыпуска) + УпаковкаПрепарата;
		
	КонецЕсли;
	
	Если ПредставлениеИзДействующегоВещества Или ПредставлениеИзТорговогоНаименования Тогда
		ЛатинскаяТранскрипция = ПолучитьЛатинскоеПредставление(СтрокаТовары, ПредставлениеИзДействующегоВещества, ПредставлениеИзТорговогоНаименования);
		ТоварНаименование = ТоварНаименование + ?(ЗначениеЗаполнено(ЛатинскаяТранскрипция), " (" + ЛатинскаяТранскрипция + ")", "");
	КонецЕсли;
	
	Возврат ТоварНаименование;
	
КонецФункции

Функция ПолучитьЛатинскоеПредставление(СтрокаТовары, ПредставлениеИзДействующегоВещества, ПредставлениеИзТорговогоНаименования)
	
	Если ЗначениеЗаполнено(СтрокаТовары.Номенклатура) Тогда
		ЛатинскаяТранскрипция = АптечныеТовары.ЛатинскоеПредставлениеНоменклатуры(СтрокаТовары.Номенклатура, ПредставлениеИзДействующегоВещества, ПредставлениеИзТорговогоНаименования);
	ИначеЕсли ЗначениеЗаполнено(СтрокаТовары.ТорговоеНаименование) И ПредставлениеИзТорговогоНаименования Тогда
		ЛатинскаяТранскрипция = АптечныеТовары.ЛатинскоеПредставлениеТорговогоНаименования(СтрокаТовары.ТорговоеНаименование, СтрокаТовары.ФормаВыпуска);
	ИначеЕсли ЗначениеЗаполнено(СтрокаТовары.ДействующиеВеществаМНН) И ПредставлениеИзДействующегоВещества Тогда
		ЛатинскаяТранскрипция = АптечныеТовары.ЛатинскоеПредставлениеДействующихВеществМНН(СтрокаТовары.ДействующиеВеществаМНН, СтрокаТовары.ФормаВыпуска);
	КонецЕсли;
	
	Возврат ЛатинскаяТранскрипция;
	
КонецФункции

Функция ИнициализироватьНумерацию()
	
	Нумерация = Новый Структура;
	Нумерация.Вставить("НомерСтроки"  , 0);
	Нумерация.Вставить("НомерСтраницы", 1);
	
	Возврат Нумерация;
	
КонецФункции

Процедура ПроверитьВыводСтроки(ТабличныйДокумент, Макет, МассивВыводимыхОбластей, ТекущаяОбласть, ЭтоПоследняяСтрока, Нумерация)
	
	МассивВыводимыхОбластей.Очистить();
	МассивВыводимыхОбластей.Добавить(ТекущаяОбласть);
	Если ЭтоПоследняяСтрока Тогда
		МассивВыводимыхОбластей.Добавить(Макет.ПолучитьОбласть("Итого"));
		МассивВыводимыхОбластей.Добавить(Макет.ПолучитьОбласть("Подписи"));
	КонецЕсли;
	
	Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабличныйДокумент, МассивВыводимыхОбластей) Тогда
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		ФормированиеПечатныхФормБольничнаяАптека.УвеличитьНомер(Нумерация, "НомерСтраницы");
		ФормированиеПечатныхФормБольничнаяАптека.ВывестиОбластьПоИмени(ТабличныйДокумент, Макет, "ШапкаТаблицы", Нумерация, 1);
	КонецЕсли;
	
КонецПроцедуры

Функция МетаданныеМакета()
	
	Возврат Метаданные.Обработки.ПечатьТребованиеНакладная0504204.Макеты.ПФ_MXL_ТребованиеНакладная0504204;
	
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции

#КонецЕсли
