&НаСервере
Процедура ЗагрузитьАТХНаСервере()
	Данные = РЛС_ЗапросыКСервису.GET_classes("atc");
	
	Для Каждого Элемент из Данные Цикл
		НайденныйЭлемент = Справочники.АТХКлассификация.НайтиПоКоду(Элемент.id);
		Если НайденныйЭлемент = Справочники.АТХКлассификация.ПустаяСсылка() Тогда
			НовыйЭлемент = Справочники.АТХКлассификация.СоздатьЭлемент();
			НовыйЭлемент.Наименование = Элемент.atc_name;
			НовыйЭлемент.Код = Формат(Элемент.id,"ЧГ=");
			НовыйЭлемент.КодЕСКЛП = Элемент.atc_code;
			НовыйЭлемент.Записать();
		Иначе
			НайденныйЭлементОбъект = НайденныйЭлемент.ПолучитьОбъект(); 
			НайденныйЭлементОбъект.Наименование = Элемент.atc_name;
			НайденныйЭлементОбъект.КодЕСКЛП = Элемент.atc_code;
			НайденныйЭлементОбъект.Записать();
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры


&НаКлиенте
Процедура ЗагрузитьАТХ(Команда)
	ЗагрузитьАТХНаСервере();
	Сообщить("Загрузка АТХ завершена");
КонецПроцедуры


&НаСервере
Процедура ЗагрузитьФармакологическиеГруппыНаСервере()
	Данные = РЛС_ЗапросыКСервису.GET_classes("phg");
	
	Для Каждого Элемент из Данные Цикл
		НайденныйЭлемент = Справочники.ФармакологическиеГруппы.НайтиПоКоду(Элемент.id);
		Если НайденныйЭлемент = Справочники.ФармакологическиеГруппы.ПустаяСсылка() Тогда
			НовыйЭлемент = Справочники.ФармакологическиеГруппы.СоздатьЭлемент();
			НовыйЭлемент.Наименование = Элемент.phg_name;
			НовыйЭлемент.Код = Формат(Элемент.id,"ЧГ=");
			НовыйЭлемент.Записать();
		Иначе
			НайденныйЭлементОбъект = НайденныйЭлемент.ПолучитьОбъект(); 
			НайденныйЭлементОбъект.Наименование = Элемент.phg_name;
			НайденныйЭлементОбъект.Записать();
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры


&НаКлиенте
Процедура ЗагрузитьФармакологическиеГруппы(Команда)
	ЗагрузитьФармакологическиеГруппыНаСервере();
	Сообщить("Загрузка фармакологических групп завершена");
КонецПроцедуры


&НаСервере
Процедура ЗагрузитьОКПД2НаСервере()
	Данные = РЛС_ЗапросыКСервису.GET_classes("okpd2");
	
	Для Каждого Элемент из Данные Цикл
		НайденныйЭлемент = Справочники.КлассификаторОКПД2.НайтиПоКоду(Элемент.okpd2_code);
		Если НайденныйЭлемент = Справочники.КлассификаторОКПД2.ПустаяСсылка() Тогда
			НовыйЭлемент = Справочники.КлассификаторОКПД2.СоздатьЭлемент();
			НовыйЭлемент.НаименованиеПолное = Элемент.okpd2_name;
			НовыйЭлемент.Код = Элемент.okpd2_code;
			НовыйЭлемент.Записать();
		Иначе
			НайденныйЭлементОбъект = НайденныйЭлемент.ПолучитьОбъект(); 
			НайденныйЭлементОбъект.НаименованиеПолное = Элемент.okpd2_name;
			НайденныйЭлементОбъект.Записать();
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры


&НаКлиенте
Процедура ЗагрузитьОКПД2(Команда)
	ЗагрузитьОКПД2НаСервере();
	Сообщить("Загрузка ОКПД2 завершена");
КонецПроцедуры


&НаСервере
Процедура ЗагрузитьТоварыАптечногоАссортиментаНаСервере()
	Данные = РЛС_ЗапросыКСервису.GET_classes("apt");
	
	Для Каждого Элемент из Данные Цикл
		НайденныйЭлемент = Справочники.ТоварыФармацевтическогоРынка.НайтиПоКоду(Элемент.apt_code);
		Если НайденныйЭлемент = Справочники.ТоварыФармацевтическогоРынка.ПустаяСсылка() Тогда
			НовыйЭлемент = Справочники.ТоварыФармацевтическогоРынка.СоздатьЭлемент();
			НовыйЭлемент.Код = Элемент.apt_code;
			НовыйЭлемент.Наименование = Элемент.apt_name;
			НовыйЭлемент.Записать();
		Иначе
			НайденныйЭлементОбъект = НайденныйЭлемент.ПолучитьОбъект(); 
			НайденныйЭлементОбъект.Наименование = Элемент.apt_name;
			НайденныйЭлементОбъект.Записать();
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры


&НаКлиенте
Процедура ЗагрузитьТоварыАптечногоАссортимента(Команда)
	ЗагрузитьТоварыАптечногоАссортиментаНаСервере();
	Сообщить("Загрузка товаров аптечного ассортимента завершена");
КонецПроцедуры


&НаСервере
Процедура ЗагрузитьНоменклатуруНаСервере()
	Данные = РЛС_ЗапросыКСервису.GET_inventory_complete(); 
	РЛС_Служебный.ЗагрузитьОсновныеРеквизитыНоменклатуры(Данные);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Номенклатура.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(Номенклатура.ЭлементКАТ) = ТИП(Справочник.КЛП)";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ЭлементКЛП = Выборка.Ссылка.ЭлементКАТ;
		СоответствиеРЛС = РЛС_ЗапросыКСервису.GET_mapping_esklp(ЭлементКЛП.КодЕСКЛП);
		Если СоответствиеРЛС <> Неопределено Тогда
			НомерРЛС = СоответствиеРЛС[0].packing_id;
			ЭлементРЛС = Справочники.РегистрЛекарственныхСредств.НайтиПоРеквизиту("НомерРЛС", НомерРЛС);
			ОбъектНоменклатура = Выборка.Ссылка.ПолучитьОбъект();
			ОбъектНоменклатура.ЭлементКАТ = ЭлементРЛС;
			ОбъектНоменклатура.Записать();
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры


&НаКлиенте
Процедура ЗагрузитьНоменклатуру(Команда)
	ЗагрузитьНоменклатуруНаСервере();
	Сообщить("Загрузка номенклатуры завершена");
КонецПроцедуры


&НаСервере
Процедура ОбновитьРЛСНаСервере()
	РЛС_Служебный.ОбновитьСправочникРЛС();
КонецПроцедуры


&НаКлиенте
Процедура ОбновитьРЛС(Команда)
	ОбновитьРЛСНаСервере();
КонецПроцедуры


&НаКлиенте
Процедура ОбновитьТекущиеДанныеРЛС(Команда)
	РЛС_Служебный.ОбновитьТекущиеДанныеРЛСНаСервереДоп(Первые);
КонецПроцедуры


&НаСервере
Процедура ЗагрузитьСтраныНаСервере()
	Данные = РЛС_ЗапросыКСервису.GET_classes("dict_countries");
	
	Для Каждого Элемент из Данные Цикл
		НайденныйЭлемент = Справочники.СтраныМира.НайтиПоКоду(Элемент.oksm_code);
		Если ЗначениеЗаполнено(НайденныйЭлемент) Тогда
			
			СправочникОбъект = НайденныйЭлемент.ПолучитьОбъект();
			СправочникОбъект.КодРЛС = Элемент.id;
			СправочникОбъект.Записать();
			
		КонецЕсли;	
	КонецЦикла;
	
	
	
КонецПроцедуры


&НаКлиенте
Процедура ЗагрузитьСтраны(Команда)
	ЗагрузитьСтраныНаСервере();
КонецПроцедуры


&НаСервереБезКонтекста
Процедура ЗагрузитьДВПНаСервере()
	
	РЛС_Служебный.ЗагрузитьДВП();
	
КонецПроцедуры


&НаКлиенте
Процедура ЗагрузитьДВП(Команда)
	ЗагрузитьДВПНаСервере();
КонецПроцедуры


&НаСервере
Процедура ОбновитьРЛСНаДатуНаСервере()
	РЛС_Служебный.ОбновитьТекущиеДанныеРЛСНаСервере();
КонецПроцедуры


&НаКлиенте
Процедура ОбновитьРЛСНаДату(Команда)
	ОбновитьРЛСНаДатуНаСервере();
КонецПроцедуры

