////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформлениеФормы();
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Свойство("ОтборЗабракованныхСерий") Тогда
		СписокЗабракованныхСерий.ЗагрузитьЗначения(Параметры.ОтборЗабракованныхСерий);
	КонецЕсли;
	
	// кнопка перейти доступна только в автономном режиме.
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ФормаПерейтиНаПоискПоСериям",
		"Видимость",
		СписокЗабракованныхСерий.Количество() = 0);
		
	ЗаполнитьТаблицуЗабраковкиСерий();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Не ЗакрытьФормуБезПодтверждения И ЕстьИзменения() Тогда
		
		Отказ = Истина;
		Если Не ЗавершениеРаботы = Истина Тогда
			Оповещение = Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект);
			ПоказатьВопрос(Оповещение, НСтр("ru = 'Сохранить изменения?'"), РежимДиалогаВопрос.ДаНетОтмена,, КодВозвратаДиалога.Да);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ЗаписатьИзменения();
		Закрыть();
	ИначеЕсли Ответ = КодВозвратаДиалога.Нет Тогда
		ЗакрытьФормуБезПодтверждения = Истина;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ
#Область ОбработкаКомандФормы

&НаКлиенте
Процедура ПеречитатьДанные(Команда)
	
	ЗаполнитьТаблицуЗабраковкиСерий();
	
КонецПроцедуры

&НаКлиенте
Процедура Записать(Команда)
	
	ЗаписатьИзменения(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	ЗаписатьИзменения();
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСериюНоменклатуры(Команда)
	
	СтрокаЗабраковки = Элементы.ЗабракованныеСерии.ТекущиеДанные;
	Если СтрокаЗабраковки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ЗабраковкаСерийНоменклатуры = СтрокаЗабраковки.ЗабраковкаСерии;
	
	ПараметрыФормы = СформироватьПараметрыПоискаЗабракованныхСерий(ЗабраковкаСерийНоменклатуры);
	
	Оповещение = Новый ОписаниеОповещения("ДобавитьСериюНоменклатурыЗавершение", ЭтотОбъект, СтрокаЗабраковки);
	ОткрытьФорму(
		"Справочник.ЗабракованныеСерии.Форма.ФормаВыбораСерииНоменклатуры", 
		ПараметрыФормы, 
		Элементы.СерииНоменклатуры,
		,
		,
		,
		Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСериюНоменклатурыЗавершение(Серия, СтрокаЗабраковки) Экспорт
	
	Если ТипЗнч(Серия) = Тип("СправочникСсылка.СерииНоменклатуры") Тогда
		
		ЗабраковкаСерийНоменклатуры = СтрокаЗабраковки.ЗабраковкаСерии;
		НайденныеСтроки = СерииНоменклатуры.НайтиСтроки(
					Новый Структура("СерияНоменклатуры, ЗабраковкаСерии",
									Серия, ЗабраковкаСерийНоменклатуры));
		Если НайденныеСтроки.Количество() = 0 Тогда
			
			СтрокаСерии = СерииНоменклатуры.Добавить();
			СтрокаСерии.СерияНоменклатуры = Серия;
			СтрокаСерии.ЗабраковкаСерии = ЗабраковкаСерийНоменклатуры;
			СтрокаСерии.УстановитьСвязь = Истина;
			СтрокаСерии.ЗначениеИзменено = Истина;
			
			СтрокаЗабраковки.ЕстьИзменения = Истина;
			
		Иначе
			
			СтрокаСерии = НайденныеСтроки[0];
			Если Не СтрокаСерии.УстановитьСвязь Тогда
				СтрокаСерии.УстановитьСвязь = Истина;
				СтрокаСерии.ЗначениеИзменено = Не СтрокаСерии.СвязьПрисутствуетВРегистре;
				СтрокаЗабраковки.ЕстьИзменения = СтрокаСерии.ЗначениеИзменено
					Или СерииНоменклатуры.НайтиСтроки(
							Новый Структура("ЗабраковкаСерии, ЗначениеИзменено", ЗабраковкаСерийНоменклатуры, Истина)
						).Количество();
			КонецЕсли;
			
		КонецЕсли;
		
		Элементы.СерииНоменклатуры.ТекущаяСтрока = СтрокаСерии.ПолучитьИдентификатор();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтобратьЗабраковкиСВозможнымиСовпадениями(Команда)
	
	ОтобратьЗабраковкиСВозможнымиСовпадениями = Не Элементы.ЗабракованныеСерииОтобратьЗабраковкиСВозможнымиСовпадениями.Пометка;
	Элементы.ЗабракованныеСерииОтобратьЗабраковкиСВозможнымиСовпадениями.Пометка = ОтобратьЗабраковкиСВозможнымиСовпадениями;
	Если ОтобратьЗабраковкиСВозможнымиСовпадениями Тогда
		ОтборСтрок = Новый ФиксированнаяСтруктура("ЕстьНепривязанные", Истина);
	Иначе
		ОтборСтрок = Новый ФиксированнаяСтруктура;
	КонецЕсли;
	
	Элементы.ЗабракованныеСерии.ОтборСтрок = ОтборСтрок;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсключитьИзАвтоматическогоПоиска(Команда)
	
	ТекущаяСтрокаСерии = Элементы.СерииНоменклатуры.ТекущиеДанные;
	Если ТекущаяСтрокаСерии = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ТекущаяСтрокаСерии.АвтоматическиНайденнаяСвязь Тогда
		Возврат;
	КонецЕсли;
	
	Оповещение = Новый ОписаниеОповещения("ИсключитьИзАвтоматическогоПоискаЗавершение", ЭтотОбъект, ТекущаяСтрокаСерии);
	ТекстВопроса = НСтр("ru='Выбранная серия будет исключена из автоматического поиска для текущей забраковки.'");
	ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
	
КонецПроцедуры

&НаКлиенте
Процедура ИсключитьИзАвтоматическогоПоискаЗавершение(Ответ, ТекущаяСтрокаСерии) Экспорт
	
	Если Ответ = КодВозвратаДиалога.ОК Тогда
		
		ИсключитьЗабраковкуИСериюИзАвтоматическогоПоиска(
			ТекущаяСтрокаСерии.ЗабраковкаСерии,
			ТекущаяСтрокаСерии.СерияНоменклатуры);
			
		СерииНоменклатуры.Удалить(ТекущаяСтрокаСерии);
		ТекущаяСтрокаЗабраковки = Элементы.ЗабракованныеСерии.ТекущиеДанные;
		ТекущаяСтрокаЗабраковки.ЕстьНепривязанные = 
			СерииНоменклатуры.НайтиСтроки(
					Новый Структура("ЗабраковкаСерии, АвтоматическиНайденнаяСвязь",
						ТекущаяСтрокаЗабраковки.ЗабраковкаСерии, Истина)
				).Количество();
		ТекущаяСтрокаЗабраковки.ЕстьИзменения = 
			СерииНоменклатуры.НайтиСтроки(
					Новый Структура("ЗабраковкаСерии, ЗначениеИзменено",
						ТекущаяСтрокаЗабраковки.ЗабраковкаСерии, Истина)
				).Количество();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиНаПоискПоСериям(Команда)
	
	Если ЕстьИзменения() Тогда
		Оповещение = Новый ОписаниеОповещения("ПерейтиНаПоискПоСериямЗавершение", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, НСтр("ru = 'Сохранить изменения?'"), РежимДиалогаВопрос.ДаНетОтмена);
	Иначе
		Закрыть();
		ОткрытьФорму("Обработка.ПоискЗабракованныхСерий.Форма.Форма",, ВладелецФормы);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиНаПоискПоСериямЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ЗаписатьИзменения();
	ИначеЕсли Ответ = КодВозвратаДиалога.Нет Тогда
		ЗакрытьФормуБезПодтверждения = Истина;
	Иначе
		Возврат;
	КонецЕсли;
	
	Закрыть();
	ОткрытьФорму("Обработка.ПоискЗабракованныхСерий.Форма.Форма",, ВладелецФормы);
	
КонецПроцедуры

#КонецОбласти // ОбработкаКомандФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ
#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ЗабракованныеСерииПриАктивизацииСтроки(Элемент)
	
	ПодключитьОбработчикОжидания("УстановитьОтборСерийНоменклатуры", 0.1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗабракованныеСерииВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущаяСтрока = Элементы.ЗабракованныеСерии.ТекущиеДанные;
	ПоказатьЗначение(, ТекущаяСтрока.ЗабраковкаСерии);
	
КонецПроцедуры

&НаКлиенте
Процедура СерииНоменклатурыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущаяСтрока = Элементы.СерииНоменклатуры.ТекущиеДанные;
	ПоказатьЗначение(, ТекущаяСтрока.СерияНоменклатуры);
	
КонецПроцедуры

&НаКлиенте
Процедура СерииНоменклатурыУстановитьСвязьПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.СерииНоменклатуры.ТекущиеДанные;
	ТекущаяСтрока.ЗначениеИзменено = Не ТекущаяСтрока.СвязьПрисутствуетВРегистре = ТекущаяСтрока.УстановитьСвязь;
	
	ТекущаяСтрокаЗабраковки = Элементы.ЗабракованныеСерии.ТекущиеДанные;
	ТекущаяСтрокаЗабраковки.ЕстьИзменения = ТекущаяСтрока.ЗначениеИзменено
		Или СерииНоменклатуры.НайтиСтроки(
				Новый Структура("ЗабраковкаСерии, ЗначениеИзменено", ТекущаяСтрокаЗабраковки.ЗабраковкаСерии, Истина)
			).Количество();
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийЭлементовФормы

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформлениеФормы()
	
	// Цвет текста поля ЗабракованныеСерии
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ЗабракованныеСерии.Имя);
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(Элемент.Отбор,
		"ЗабракованныеСерии.Статус", ВидСравненияКомпоновкиДанных.Равно, Перечисления.СтатусыЗабраковкиСерий.Отменена);
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветТекстаОтмененнойСтрокиДокумента);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборСерийНоменклатуры()
	
	ТекущаяСтрока = Элементы.ЗабракованныеСерии.ТекущиеДанные;
	
	Если ТекущаяСтрока = Неопределено Тогда
		ЗабракованнаяСерия = ПредопределенноеЗначение("Справочник.ЗабракованныеСерии.ПустаяСсылка");
	Иначе
		ЗабракованнаяСерия = ТекущаяСтрока.ЗабраковкаСерии;
	КонецЕсли;
	
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("ЗабраковкаСерии", ЗабракованнаяСерия);
	
	Элементы.СерииНоменклатуры.ОтборСтрок = Новый ФиксированнаяСтруктура(СтруктураОтбора);
	
КонецПроцедуры

&НаКлиенте
Функция ЕстьИзменения()
	
	ИзмененныеСтроки = СерииНоменклатуры.НайтиСтроки(Новый Структура("ЗначениеИзменено", Истина));
	Возврат ИзмененныеСтроки.Количество() > 0;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьТаблицуЗабраковкиСерий()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ЗабраковкиСерий", СписокЗабракованныхСерий.ВыгрузитьЗначения());
	Запрос.УстановитьПараметр("НетОтбора", СписокЗабракованныхСерий.Количество() = 0);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗабраковкаСерий.Ссылка,
	|	ЗабраковкаСерий.НомерРЛС,
	|	ЗабраковкаСерий.ВсеСерии,
	|	ЗабраковкаСерий.Статус,
	|	ЗабраковкаСерий.Наименование,
	|	ЗабраковкаСерий.Препарат,
	|	ЗабраковкаСерий.Номенклатура
	|ПОМЕСТИТЬ ЗабраковкаСерий
	|ИЗ
	|	Справочник.ЗабракованныеСерии КАК ЗабраковкаСерий
	|ГДЕ
	|	(&НетОтбора
	|	ИЛИ ЗабраковкаСерий.Ссылка В (&ЗабраковкиСерий))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗабракованныеСерии.ЗабраковкаСерии КАК ЗабраковкаСерии,
	|	ЗабракованныеСерии.Серия КАК СерияНоменклатуры,
	|	ВЫБОР
	|		КОГДА ЗабраковкаСерии.Наименование = Серия.Номер И НЕ ЗабраковкаСерии.ВсеСерии
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК СовпадениеПоСерии,
	|	ВЫБОР
	|		КОГДА ЗабраковкиСерий.НомерРЛС > 0
	|			ТОГДА ЗабраковкиСерий.НомерРЛС = Серия.Владелец.ЭлементКАТ.НомерРЛС
	|		КОГДА ЗабраковкиСерий.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|			ТОГДА ЗабраковкиСерий.Номенклатура = Серия.Владелец
	|		КОГДА ЗабраковкиСерий.Препарат <> """"
	|			ТОГДА ЕСТЬNULL(Серия.Владелец.ЭлементКАТ.Наименование, Серия.Владелец.Наименование) = ЗабраковкиСерий.Препарат
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК СовпадениеПоПрепарату,
	|	ИСТИНА КАК СвязьПрисутствуетВРегистре,
	|	ЛОЖЬ КАК АвтоматическиНайденнаяСвязь
	|ПОМЕСТИТЬ СерииЗабраковки
	|ИЗ
	|	РегистрСведений.ЗабракованныеСерии КАК ЗабракованныеСерии
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ЗабраковкаСерий КАК ЗабраковкиСерий
	|	ПО
	|		ЗабракованныеСерии.ЗабраковкаСерии = ЗабраковкиСерий.Ссылка
	|ГДЕ
	|	НЕ ЗабракованныеСерии.ИсключитьИзАвтоматическогоПоиска
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗабраковкаСерий.Ссылка КАК ЗабраковкаСерии,
	|	СерииНоменклатуры.Ссылка КАК СерияНоменклатуры,
	|	ВЫБОР
	|		КОГДА ЗабраковкаСерий.Наименование = СерииНоменклатуры.Номер И НЕ ЗабраковкаСерий.ВсеСерии
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК СовпадениеПоСерии,
	|	ВЫБОР
	|		КОГДА ЗабраковкаСерий.НомерРЛС > 0
	|			ТОГДА ЗабраковкаСерий.НомерРЛС = СерииНоменклатуры.Владелец.ЭлементКАТ.НомерРЛС
	|		КОГДА ЗабраковкаСерий.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|			ТОГДА ЗабраковкаСерий.Номенклатура = СерииНоменклатуры.Владелец
	|		КОГДА ЗабраковкаСерий.Препарат <> """"
	|			ТОГДА ЕСТЬNULL(СерииНоменклатуры.Владелец.ЭлементКАТ.Наименование, СерииНоменклатуры.Владелец.Наименование) = ЗабраковкаСерий.Препарат
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК СовпадениеПоПрепарату,
	|	ЛОЖЬ КАК СвязьПрисутствуетВРегистре,
	|	ИСТИНА КАК АвтоматическиНайденнаяСвязь
	|ИЗ
	|	Справочник.СерииНоменклатуры КАК СерииНоменклатуры
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ЗабраковкаСерий КАК ЗабраковкаСерий 
	|		ПО
	|			ВЫБОР
	|				КОГДА ЗабраковкаСерий.НомерРЛС > 0
	|					ТОГДА ЗабраковкаСерий.НомерРЛС = СерииНоменклатуры.Владелец.ЭлементКАТ.НомерРЛС
	|				КОГДА ЗабраковкаСерий.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|					ТОГДА ЗабраковкаСерий.Номенклатура = СерииНоменклатуры.Владелец
	|				КОГДА ЗабраковкаСерий.Препарат <> """"
	|					ТОГДА ЕСТЬNULL(СерииНоменклатуры.Владелец.ЭлементКАТ.Наименование, СерииНоменклатуры.Владелец.Наименование) = ЗабраковкаСерий.Препарат
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ
	|			ИЛИ ЗабраковкаСерий.Наименование = СерииНоменклатуры.Номер И ЗабраковкаСерий.Наименование <> """" И НЕ ЗабраковкаСерий.ВсеСерии
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ЗабракованныеСерии КАК ЗабракованныеСерии
	|		ПО
	|			ЗабраковкаСерий.Ссылка = ЗабракованныеСерии.ЗабраковкаСерии
	|			И СерииНоменклатуры.Ссылка = ЗабракованныеСерии.Серия
	|ГДЕ
	|	ЗабракованныеСерии.Серия ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗабраковкаСерий.Ссылка КАК ЗабраковкаСерии,
	|	ЗабраковкаСерий.Статус КАК Статус,
	|	ВЫБОР
	|		КОГДА ИСТИНА В
	|				(ВЫБРАТЬ ПЕРВЫЕ 1
	|					ИСТИНА
	|				ИЗ
	|					СерииЗабраковки
	|				ГДЕ
	|					СерииЗабраковки.ЗабраковкаСерии = ЗабраковкаСерий.Ссылка
	|					И СерииЗабраковки.СвязьПрисутствуетВРегистре = ЛОЖЬ)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЕстьНепривязанные
	|ИЗ
	|	ЗабраковкаСерий КАК ЗабраковкаСерий
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗабраковкаСерий.Ссылка.Наименование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СерииЗабраковки.ЗабраковкаСерии КАК ЗабраковкаСерии,
	|	СерииЗабраковки.СерияНоменклатуры,
	|	СерииЗабраковки.СовпадениеПоСерии КАК СовпадениеПоСерии,
	|	СерииЗабраковки.СовпадениеПоПрепарату КАК СовпадениеПоПрепарату,
	|	СерииЗабраковки.СвязьПрисутствуетВРегистре КАК СвязьПрисутствуетВРегистре,
	|	СерииЗабраковки.СвязьПрисутствуетВРегистре КАК УстановитьСвязь,
	|	СерииЗабраковки.АвтоматическиНайденнаяСвязь КАК АвтоматическиНайденнаяСвязь
	|ИЗ
	|	СерииЗабраковки КАК СерииЗабраковки
	|";
	
	Результат = Запрос.ВыполнитьПакет();
	
	ЗабракованныеСерии.Загрузить(Результат[2].Выгрузить());
	СерииНоменклатуры.Загрузить(Результат[3].Выгрузить());
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьИзменения(ОбновитьДанные = Ложь)
		
	ИзмененныеСтроки = СерииНоменклатуры.НайтиСтроки(Новый Структура("ЗначениеИзменено", Истина)); 
	Для Каждого ИзмененнаяСтрока Из ИзмененныеСтроки Цикл
		
		МенеджерЗаписи = РегистрыСведений.ЗабракованныеСерии.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.ЗабраковкаСерии = ИзмененнаяСтрока.ЗабраковкаСерии;
		МенеджерЗаписи.Серия = ИзмененнаяСтрока.СерияНоменклатуры;
		Если ИзмененнаяСтрока.УстановитьСвязь Тогда
			МенеджерЗаписи.ИсключитьИзАвтоматическогоПоиска = Ложь;
			МенеджерЗаписи.Записать();
			ИзмененнаяСтрока.СвязьПрисутствуетВРегистре = Истина;
		Иначе
			МенеджерЗаписи.Удалить();
			ИзмененнаяСтрока.СвязьПрисутствуетВРегистре = Ложь;
		КонецЕсли;
		
		ИзмененнаяСтрока.ЗначениеИзменено = Ложь;
		
	КонецЦикла;	
	
	Если ОбновитьДанные Тогда
		ЗаполнитьТаблицуЗабраковкиСерий();
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СформироватьПараметрыПоискаЗабракованныхСерий(Знач ЗабраковкаСерий)
	
	ЗапрашиваемыеРеквизиты = Новый Структура;
	ЗапрашиваемыеРеквизиты.Вставить("НомерСерии", "Наименование");
	ЗапрашиваемыеРеквизиты.Вставить("ВсеСерии");
	ЗапрашиваемыеРеквизиты.Вставить("Номенклатура");
	ЗапрашиваемыеРеквизиты.Вставить("НаименованиеПрепарата", "Препарат");
	ЗапрашиваемыеРеквизиты.Вставить("НомерРЛС");
	
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ЗабраковкаСерий, ЗапрашиваемыеРеквизиты);
	
	Отбор = Новый Структура;
	
	ЕстьОтборПоНоменклатуре = Ложь;
	Если Не ЕстьОтборПоНоменклатуре И ЗначениеЗаполнено(Реквизиты.НомерРЛС) Тогда
		АптечныйТовар = Справочники.РегистрЛекарственныхСредств.НайтиПоРеквизиту("НомерРЛС", Реквизиты.НомерРЛС);
		Если Не АптечныйТовар.Пустая() Тогда
			Номенклатура = АптечныеТовары.ПолучитьНоменклатуруПоЭлементуКАТ(АптечныйТовар);
			Если ЗначениеЗаполнено(Номенклатура) Тогда
				Отбор.Вставить("Владелец", Номенклатура);
				ЕстьОтборПоНоменклатуре = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если Не ЕстьОтборПоНоменклатуре И ЗначениеЗаполнено(Реквизиты.Номенклатура) Тогда
		Отбор.Вставить("Владелец", Реквизиты.Номенклатура);
		ЕстьОтборПоНоменклатуре = Истина;
	КонецЕсли;
		
	Если Не ЕстьОтборПоНоменклатуре И ЗначениеЗаполнено(Реквизиты.НаименованиеПрепарата) Тогда
		Отбор.Вставить("ВладелецНаименование", Реквизиты.НаименованиеПрепарата);
	КонецЕсли;
	
	Если Не Реквизиты.ВсеСерии Тогда
		Отбор.Вставить("Номер", Реквизиты.НомерСерии);
	КонецЕсли;	
			
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Отбор", Отбор);
	ПараметрыФормы.Вставить("Заголовок",
		СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Забракованная серия: %1 Препарат: %2'"), 
			Реквизиты.НомерСерии, 
			Реквизиты.НаименованиеПрепарата));
	
	Возврат ПараметрыФормы;
	
КонецФункции

&НаСервереБезКонтекста
Процедура ИсключитьЗабраковкуИСериюИзАвтоматическогоПоиска(Знач ЗабраковкаСерии, Знач СерияНоменклатуры)
	
	МенеджерЗаписи = РегистрыСведений.ЗабракованныеСерии.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.ЗабраковкаСерии = ЗабраковкаСерии;
	МенеджерЗаписи.Серия = СерияНоменклатуры;
	МенеджерЗаписи.ИсключитьИзАвтоматическогоПоиска = Истина;
	МенеджерЗаписи.Записать();
	
КонецПроцедуры

#КонецОбласти // СлужебныеПроцедурыИФункции
