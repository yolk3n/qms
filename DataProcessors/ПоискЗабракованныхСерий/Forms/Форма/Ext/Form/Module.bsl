
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформлениеФормы();
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Свойство("ОтборСерий") Тогда
		СписокСерий.ЗагрузитьЗначения(Параметры.ОтборСерий);
	КонецЕсли;
	
	// кнопка перейти доступна только в автономном режиме.
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ФормаПерейтиНаПоискПоПриказам",
		"Видимость",
		СписокСерий.Количество() = 0);
		
	ЗаполнитьТаблицуЗабраковкиСерий();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Не ЗакрытьФормуБезПодтверждения И ЕстьИзменения() Тогда
		
		Отказ = Истина;
		Если Не ЗавершениеРаботы = Истина Тогда
			Оповещение = Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект);
			ПоказатьВопрос(Оповещение, НСтр("ru = 'Сохранить изменения?'"), РежимДиалогаВопрос.ДаНетОтмена,, КодВозвратаДиалога.Да);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ЗаписатьИзменения();
	ИначеЕсли Ответ = КодВозвратаДиалога.Нет Тогда
		ЗакрытьФормуБезПодтверждения = Истина;
	Иначе
		Возврат;
	КонецЕсли;
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ
#Область ОбработкаКомандФормы

&НаКлиенте
Процедура ПеречитатьДанные(Команда)
	
	ЗаполнитьТаблицуЗабраковкиСерий();
	
КонецПроцедуры

&НаКлиенте
Процедура Записать(Команда)
	
	ЗаписатьИзменения(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	ЗаписатьИзменения();
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьЗабраковку(Команда)
	
	ТекущаяСтрока = Элементы.СерииНоменклатуры.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СерияНоменклатуры = ТекущаяСтрока.СерияНоменклатуры;
	ПараметрыФормы = СформироватьПараметрыПоискаЗабраковкиСерии(СерияНоменклатуры);
	
	Оповещение = Новый ОписаниеОповещения("ДобавитьЗабраковкуЗавершение", ЭтотОбъект, ТекущаяСтрока);
	ОткрытьФорму("Справочник.ЗабракованныеСерии.ФормаВыбора", ПараметрыФормы, Элементы.ЗабракованныеСерии,,,, Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьЗабраковкуЗавершение(Забраковка, ТекущаяСтрока) Экспорт
	
	Если ТипЗнч(Забраковка) = Тип("СправочникСсылка.ЗабракованныеСерии") Тогда
		
		СерияНоменклатуры = ТекущаяСтрока.СерияНоменклатуры;
		НайденныеСтроки = ЗабракованныеСерии.НайтиСтроки(
					Новый Структура("СерияНоменклатуры, ЗабраковкаСерии",
									СерияНоменклатуры, Забраковка));
		Если НайденныеСтроки.Количество() = 0 Тогда
			НоваяЗабраковка = ЗабракованныеСерии.Добавить();
			НоваяЗабраковка.СерияНоменклатуры = СерияНоменклатуры;
			НоваяЗабраковка.ЗабраковкаСерии = Забраковка;
			НоваяЗабраковка.УстановитьСвязь = Истина;
			НоваяЗабраковка.ЗначениеИзменено = Истина;
			
			ТекущаяСтрока.ЕстьИзменения = Истина;
		Иначе
			НайденнаяСтрокаЗабраковки = НайденныеСтроки[0];
			Если Не НайденнаяСтрокаЗабраковки.УстановитьСвязь Тогда
				НайденнаяСтрокаЗабраковки.УстановитьСвязь = Истина;
				НайденнаяСтрокаЗабраковки.ЗначениеИзменено = Не НайденнаяСтрокаЗабраковки.СвязьПрисутствуетВРегистре;
				ТекущаяСтрока.ЕстьИзменения = НайденнаяСтрокаЗабраковки.ЗначениеИзменено
					Или ЗабракованныеСерии.НайтиСтроки(
							Новый Структура("СерияНоменклатуры, ЗначениеИзменено", ТекущаяСтрока.СерияНоменклатуры, Истина)
						).Количество();
			КонецЕсли;
			Элементы.ЗабракованныеСерии.ТекущаяСтрока = НайденнаяСтрокаЗабраковки.ПолучитьИдентификатор();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтобратьСерииСВозможнымиСовпадениями(Команда)
	
	ОтобратьСерииСВозможнымиСовпадениями = Не Элементы.СерииНоменклатурыОтобратьСерииСВозможнымиСовпадениями.Пометка;
	Элементы.СерииНоменклатурыОтобратьСерииСВозможнымиСовпадениями.Пометка = ОтобратьСерииСВозможнымиСовпадениями;
	Если ОтобратьСерииСВозможнымиСовпадениями Тогда
		ОтборСтрок = Новый ФиксированнаяСтруктура("ЕстьНепривязанные", Истина);
	Иначе
		ОтборСтрок = Новый ФиксированнаяСтруктура;
	КонецЕсли;
	
	Элементы.СерииНоменклатуры.ОтборСтрок = ОтборСтрок;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсключитьИзАвтоматическогоПоиска(Команда)
	
	ТекущаяСтрокаЗабраковки = Элементы.ЗабракованныеСерии.ТекущиеДанные;
	Если ТекущаяСтрокаЗабраковки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ТекущаяСтрокаЗабраковки.АвтоматическиНайденнаяСвязь Тогда
		Возврат;
	КонецЕсли;
	
	Оповещение = Новый ОписаниеОповещения("ИсключитьИзАвтоматическогоПоискаЗавершение", ЭтотОбъект, ТекущаяСтрокаЗабраковки);
	ТекстВопроса = НСтр("ru='Выбранная забраковка будет исключена из автоматического поиска для текущей серии.'");
	ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
	
КонецПроцедуры

&НаКлиенте
Процедура ИсключитьИзАвтоматическогоПоискаЗавершение(Ответ, ТекущаяСтрокаЗабраковки) Экспорт
	
	Если Ответ = КодВозвратаДиалога.ОК Тогда
		ИсключитьЗабраковкуИзАвтоматическогоПоискаДляСерии(
			ТекущаяСтрокаЗабраковки.ЗабраковкаСерии,
			ТекущаяСтрокаЗабраковки.СерияНоменклатуры);
			
		ЗабракованныеСерии.Удалить(ТекущаяСтрокаЗабраковки);
		Элементы.СерииНоменклатуры.ТекущиеДанные.ЕстьНепривязанные =
			Не ЗабракованныеСерии.НайтиСтроки(
					Новый Структура("СерияНоменклатуры, АвтоматическиНайденнаяСвязь",
						ТекущаяСтрокаЗабраковки.СерияНоменклатуры, Истина)
				).Количество() = 0;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиНаПоискПоПриказам(Команда)
	
	Если ЕстьИзменения() Тогда
		Оповещение = Новый ОписаниеОповещения("ПерейтиНаПоискПоПриказамЗавершение", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, НСтр("ru = 'Сохранить изменения?'"), РежимДиалогаВопрос.ДаНетОтмена);
	Иначе
		Закрыть();
		ОткрытьФорму("Обработка.ПоискЗабракованныхСерий.Форма.ФормаПоискаОтЗабраковки",, ВладелецФормы);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиНаПоискПоПриказамЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ЗаписатьИзменения();
	ИначеЕсли Ответ = КодВозвратаДиалога.Нет Тогда
		ЗакрытьФормуБезПодтверждения = Истина;
	Иначе
		Возврат;
	КонецЕсли;
	
	Закрыть();
	ОткрытьФорму("Обработка.ПоискЗабракованныхСерий.Форма.ФормаПоискаОтЗабраковки",, ВладелецФормы);
	
КонецПроцедуры

#КонецОбласти // ОбработкаКомандФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ
#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СерииНоменклатурыПриАктивизацииСтроки(Элемент)
	
	ПодключитьОбработчикОжидания("УстановитьОтборЗабракованныхСерий", 0.1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура СерииНоменклатурыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущаяСтрока = Элементы.СерииНоменклатуры.ТекущиеДанные;
	ПоказатьЗначение(, ТекущаяСтрока.СерияНоменклатуры);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗабракованныеСерииВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущаяСтрока = Элементы.ЗабракованныеСерии.ТекущиеДанные;
	ПоказатьЗначение(, ТекущаяСтрока.ЗабраковкаСерии);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗабракованныеСерииУстановитьСвязьПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.ЗабракованныеСерии.ТекущиеДанные;
	ТекущаяСтрока.ЗначениеИзменено = Не ТекущаяСтрока.СвязьПрисутствуетВРегистре = ТекущаяСтрока.УстановитьСвязь;
	
	ТекущаяСтрокаСерии = Элементы.СерииНоменклатуры.ТекущиеДанные;
	ТекущаяСтрокаСерии.ЕстьИзменения = ТекущаяСтрока.ЗначениеИзменено
		Или ЗабракованныеСерии.НайтиСтроки(
				Новый Структура("СерияНоменклатуры, ЗначениеИзменено", ТекущаяСтрокаСерии.СерияНоменклатуры, Истина)
			).Количество();
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийЭлементовФормы

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформлениеФормы()
	
	// Цвет текста поля ЗабракованныеСерии
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ЗабракованныеСерии.Имя);
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(Элемент.Отбор,
		"ЗабракованныеСерии.Статус", ВидСравненияКомпоновкиДанных.Равно, Перечисления.СтатусыЗабраковкиСерий.Отменена);
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветТекстаОтмененнойСтрокиДокумента);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборЗабракованныхСерий()
	
	ТекущаяСтрока = Элементы.СерииНоменклатуры.ТекущиеДанные;
	
	Если ТекущаяСтрока = Неопределено Тогда
		Серия = ПредопределенноеЗначение("Справочник.СерииНоменклатуры.ПустаяСсылка");
	Иначе
		Серия = ТекущаяСтрока.СерияНоменклатуры;
	КонецЕсли;
	
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("СерияНоменклатуры", Серия);
	
	Элементы.ЗабракованныеСерии.ОтборСтрок = Новый ФиксированнаяСтруктура(СтруктураОтбора);
	
КонецПроцедуры

&НаКлиенте
Функция ЕстьИзменения()
	
	ИзмененныеСтроки = ЗабракованныеСерии.НайтиСтроки(Новый Структура("ЗначениеИзменено", Истина));
	Возврат ИзмененныеСтроки.Количество() > 0;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьТаблицуЗабраковкиСерий()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СерииНоменклатуры", СписокСерий.ВыгрузитьЗначения());
	Запрос.УстановитьПараметр("НетОтбора", СписокСерий.Количество() = 0);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СерииНоменклатуры.Ссылка КАК Ссылка,
	|	СерииНоменклатуры.Владелец КАК Номенклатура,
	|	ЕСТЬNULL(СерииНоменклатуры.Владелец.ЭлементКАТ.Наименование, СерииНоменклатуры.Владелец.Наименование) КАК НаименованиеНоменклатуры,
	|	СерииНоменклатуры.Владелец.ЭлементКАТ.НомерРЛС КАК НомерРЛС,
	|	СерииНоменклатуры.Номер КАК НомерСерии
	|ПОМЕСТИТЬ СерииНоменклатуры
	|ИЗ
	|	Справочник.СерииНоменклатуры КАК СерииНоменклатуры
	|ГДЕ
	|	(&НетОтбора
	|	ИЛИ СерииНоменклатуры.Ссылка В (&СерииНоменклатуры))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗабракованныеСерии.ЗабраковкаСерии КАК ЗабраковкаСерии,
	|	ЗабракованныеСерии.Серия КАК СерияНоменклатуры,
	|	ВЫБОР
	|		КОГДА ЗабраковкаСерии.Наименование = СерииНоменклатуры.НомерСерии И НЕ ЗабраковкаСерии.ВсеСерии
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК СовпадениеПоСерии,
	|	ВЫБОР
	|		КОГДА ЗабраковкаСерии.НомерРЛС > 0
	|			ТОГДА ЗабраковкаСерии.НомерРЛС = СерииНоменклатуры.НомерРЛС
	|		КОГДА ЗабраковкаСерии.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|			ТОГДА ЗабраковкаСерии.Номенклатура = СерииНоменклатуры.Номенклатура
	|		КОГДА ЗабраковкаСерии.Препарат <> """"
	|			ТОГДА СерииНоменклатуры.НаименованиеНоменклатуры = ЗабраковкаСерии.Препарат
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК СовпадениеПоПрепарату,
	|	ИСТИНА КАК СвязьПрисутствуетВРегистре,
	|	ЛОЖЬ КАК АвтоматическиНайденнаяСвязь
	|ПОМЕСТИТЬ СерииЗабраковки
	|ИЗ
	|	РегистрСведений.ЗабракованныеСерии КАК ЗабракованныеСерии
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		СерииНоменклатуры КАК СерииНоменклатуры
	|	ПО
	|		ЗабракованныеСерии.Серия = СерииНоменклатуры.Ссылка
	|ГДЕ
	|	НЕ ЗабракованныеСерии.ИсключитьИзАвтоматическогоПоиска
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗабраковкаСерий.Ссылка КАК ЗабраковкаСерии,
	|	СерииНоменклатуры.Ссылка КАК СерияНоменклатуры,
	|	ВЫБОР
	|		КОГДА ЗабраковкаСерий.Наименование = СерииНоменклатуры.НомерСерии И НЕ ЗабраковкаСерий.ВсеСерии
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК СовпадениеПоСерии,
	|	ВЫБОР
	|		КОГДА ЗабраковкаСерий.НомерРЛС > 0
	|			ТОГДА ЗабраковкаСерий.НомерРЛС = СерииНоменклатуры.НомерРЛС
	|		КОГДА ЗабраковкаСерий.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|			ТОГДА ЗабраковкаСерий.Номенклатура = СерииНоменклатуры.Номенклатура
	|		КОГДА ЗабраковкаСерий.Препарат <> """"
	|			ТОГДА СерииНоменклатуры.НаименованиеНоменклатуры = ЗабраковкаСерий.Препарат
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК СовпадениеПоПрепарату,
	|	ЛОЖЬ КАК СвязьПрисутствуетВРегистре,
	|	ИСТИНА КАК АвтоматическиНайденнаяСвязь
	|ИЗ
	|	СерииНоменклатуры КАК СерииНоменклатуры
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Справочник.ЗабракованныеСерии КАК ЗабраковкаСерий 
	|		ПО
	|			//ЗабраковкаСерий.ВсеСерии
	|			ВЫБОР
	|				КОГДА ЗабраковкаСерий.НомерРЛС > 0
	|					ТОГДА ЗабраковкаСерий.НомерРЛС = СерииНоменклатуры.НомерРЛС
	|				КОГДА ЗабраковкаСерий.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|					ТОГДА ЗабраковкаСерий.Номенклатура = СерииНоменклатуры.Номенклатура
	|				КОГДА ЗабраковкаСерий.Препарат <> """"
	|					ТОГДА СерииНоменклатуры.НаименованиеНоменклатуры = ЗабраковкаСерий.Препарат
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ
	|			ИЛИ ЗабраковкаСерий.Наименование = СерииНоменклатуры.НомерСерии И ЗабраковкаСерий.Наименование <> """" И НЕ ЗабраковкаСерий.ВсеСерии
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ЗабракованныеСерии КАК ЗабракованныеСерии
	|		ПО
	|			ЗабраковкаСерий.Ссылка = ЗабракованныеСерии.ЗабраковкаСерии
	|			И СерииНоменклатуры.Ссылка = ЗабракованныеСерии.Серия
	|ГДЕ
	|	ЗабракованныеСерии.Серия ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СерииНоменклатуры.Ссылка КАК СерияНоменклатуры,
	|	ВЫБОР
	|		КОГДА ИСТИНА В
	|				(ВЫБРАТЬ ПЕРВЫЕ 1
	|					ИСТИНА
	|				ИЗ
	|					СерииЗабраковки
	|				ГДЕ
	|					СерииЗабраковки.СерияНоменклатуры = СерииНоменклатуры.Ссылка
	|					И СерииЗабраковки.СвязьПрисутствуетВРегистре = ЛОЖЬ)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЕстьНепривязанные
	|ИЗ
	|	СерииНоменклатуры КАК СерииНоменклатуры
	|
	|УПОРЯДОЧИТЬ ПО
	|	СерииНоменклатуры.НомерСерии
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СерииЗабраковки.ЗабраковкаСерии КАК ЗабраковкаСерии,
	|	СерииЗабраковки.ЗабраковкаСерии.Статус КАК Статус,
	|	СерииЗабраковки.СерияНоменклатуры КАК СерияНоменклатуры,
	|	СерииЗабраковки.СовпадениеПоСерии КАК СовпадениеПоСерии,
	|	СерииЗабраковки.СовпадениеПоПрепарату КАК СовпадениеПоПрепарату,
	|	СерииЗабраковки.СвязьПрисутствуетВРегистре КАК СвязьПрисутствуетВРегистре,
	|	СерииЗабраковки.СвязьПрисутствуетВРегистре КАК УстановитьСвязь,
	|	СерииЗабраковки.АвтоматическиНайденнаяСвязь КАК АвтоматическиНайденнаяСвязь
	|ИЗ
	|	СерииЗабраковки КАК СерииЗабраковки
	|";
	
	Результат = Запрос.ВыполнитьПакет();
	
	СерииНоменклатуры.Загрузить(Результат[2].Выгрузить());
	ЗабракованныеСерии.Загрузить(Результат[3].Выгрузить());
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьИзменения(ОбновитьДанные = Ложь)
	
	ИзмененныеСтроки = ЗабракованныеСерии.НайтиСтроки(Новый Структура("ЗначениеИзменено", Истина)); 
	Для Каждого ИзмененнаяСтрока Из ИзмененныеСтроки Цикл
		МенеджерЗаписи = РегистрыСведений.ЗабракованныеСерии.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.ЗабраковкаСерии = ИзмененнаяСтрока.ЗабраковкаСерии;
		МенеджерЗаписи.Серия = ИзмененнаяСтрока.СерияНоменклатуры;
		Если ИзмененнаяСтрока.УстановитьСвязь Тогда
			МенеджерЗаписи.Записать();
			ИзмененнаяСтрока.СвязьПрисутствуетВРегистре = Истина;
		Иначе
			МенеджерЗаписи.Удалить();
			ИзмененнаяСтрока.СвязьПрисутствуетВРегистре = Ложь;
		КонецЕсли;
		ИзмененнаяСтрока.ЗначениеИзменено = Ложь;
	КонецЦикла;
	
	Если ОбновитьДанные Тогда
		ЗаполнитьТаблицуЗабраковкиСерий();
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СформироватьПараметрыПоискаЗабраковкиСерии(Серия)
	
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Серия, "Номер, Владелец");
	ЗаголовокФормыВыбора = НСтр("ru='Поиск забраковки Серия: %1 Препарат: %2'");
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Заголовок",
		СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ЗаголовокФормыВыбора, Реквизиты.Номер, Реквизиты.Владелец));
	ПараметрыФормы.Вставить("СтрокаПоиска", Реквизиты.Номер);
	Возврат ПараметрыФормы;
	
КонецФункции

&НаСервереБезКонтекста
Процедура ИсключитьЗабраковкуИзАвтоматическогоПоискаДляСерии(ЗабраковкаСерии, СерияНоменклатуры)
	
	МенеджерЗаписи = РегистрыСведений.ЗабракованныеСерии.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.ЗабраковкаСерии = ЗабраковкаСерии;
	МенеджерЗаписи.Серия = СерияНоменклатуры;
	МенеджерЗаписи.ИсключитьИзАвтоматическогоПоиска = Истина;
	МенеджерЗаписи.Записать();
	
КонецПроцедуры

#КонецОбласти // СлужебныеПроцедурыИФункции
