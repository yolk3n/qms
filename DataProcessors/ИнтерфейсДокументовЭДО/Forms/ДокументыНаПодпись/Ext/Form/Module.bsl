
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ ОбщегоНазначенияБЭД.ЗначениеФункциональнойОпции("ИспользоватьОбменЭД") Тогда
		ТекстСообщения = НастройкиБЭДКлиентСервер.ТекстСообщенияОНеобходимостиНастройкиСистемы("РаботаСЭД");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , , , Отказ);
		Отказ = Истина;
	КонецЕсли;
	
	Если НЕ ОбщегоНазначенияБЭД.ЗначениеФункциональнойОпции("ИспользоватьЭлектронныеПодписиЭД") Тогда
		ТекстСообщения = НастройкиБЭДКлиентСервер.ТекстСообщенияОНеобходимостиНастройкиСистемы("ПодписаниеЭД");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , , , Отказ);
		Отказ = Истина;
	КонецЕсли;
	
	Если Не Отказ Тогда
		Элементы.Страницы.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
		ВидыДокументов = ИнтерфейсДокументовЭДО.ВидыЭлектронныхДокументовДоступныеДляОтборов();
		Элементы.ВидДокумента.СписокВыбора.ЗагрузитьЗначения(ВидыДокументов);		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)	
	
	Оповещение = Новый ОписаниеОповещения("ПослеПолученияОтпечатковВыполнитьДействия", ЭтотОбъект);
	КриптографияБЭДКлиент.ПолучитьОтпечаткиСертификатов(Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = ИнтерфейсДокументовЭДОКлиент.ИмяСобытияОбновленияСостоянияЭДО() Тогда
		ПерезаполнитьТаблицы();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	
	ПерезаполнитьТаблицы();
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаДокументовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ЭлектронныеДокументы = Элементы.ТаблицаДокументов.ТекущиеДанные.ЭлектронныйДокумент;
	ИнтерфейсДокументовЭДОКлиент.ОткрытьЭлектронныйДокумент(ЭлектронныеДокументы);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаСертификатовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СертификатПодписи = Элементы.ТаблицаСертификатов.ТекущиеДанные.Сертификат;
	Если НЕ ЕстьДокументыНаПодпись() Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьСписокДокументовПоСертификату();
	ПерейтиНаСтраницу(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидДокументаПриИзменении(Элемент)
	
	ПерезаполнитьТаблицы();
	
КонецПроцедуры

&НаКлиенте
Процедура НаправлениеЭДПриИзменении(Элемент)
	
	ПерезаполнитьТаблицы();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Обновить(Команда)
	
	ПерезаполнитьТаблицы();
	
КонецПроцедуры

&НаКлиенте
Процедура Подписать(Команда)
	
	ЭлектронныеДокументы = Новый Массив;
	Для Каждого ТекСтрока Из ТаблицаДокументов Цикл
		Если ТекСтрока.Выбрать Тогда
			ЭлектронныеДокументы.Добавить(ТекСтрока.ЭлектронныйДокумент);
		КонецЕсли;
	КонецЦикла;
	
	ПодписатьДокументы(ЭлектронныеДокументы);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодписатьВсе(Команда)
	
	Если НЕ ЕстьДокументыНаПодпись() Тогда
		Возврат;
	КонецЕсли;
	
	// По выделенному сертификату найдем все документы на подпись
	СертификатПодписи = ?(Элементы.ТаблицаСертификатов.ТекущиеДанные = Неопределено,
		ТаблицаСертификатов[0].Сертификат, Элементы.ТаблицаСертификатов.ТекущиеДанные.Сертификат);
	
	ДокументыНаПодпись = МассивПодписываемыхДокументовСертификата(СертификатПодписи);

	ПодписатьДокументы(ДокументыНаПодпись);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодписатьДокументы(ЭлектронныеДокументы)

	НаборДействий = Новый Соответствие;	
	ЭлектронныеДокументыЭДОКлиентСервер.ДобавитьДействие(НаборДействий, ПредопределенноеЗначение(
		"Перечисление.ДействияПоЭДО.Подписать"));
	ЭлектронныеДокументыЭДОКлиентСервер.ДобавитьДействие(НаборДействий, ПредопределенноеЗначение(
		"Перечисление.ДействияПоЭДО.ПодготовитьКОтправке"));
	ЭлектронныеДокументыЭДОКлиентСервер.ДобавитьДействие(НаборДействий, ПредопределенноеЗначение(
		"Перечисление.ДействияПоЭДО.Отправить"));
		
	Оповещение = Новый ОписаниеОповещения("ПослеВыполненияДействийПоЭДО", ЭтотОбъект);
	
	ПараметрыВыполненияДействийПоЭДО = ЭлектронныеДокументыЭДОКлиентСервер.НовыеПараметрыВыполненияДействийПоЭДО();
	ПараметрыВыполненияДействийПоЭДО.НаборДействий = НаборДействий;
	ПараметрыВыполненияДействийПоЭДО.ОбъектыДействий.ЭлектронныеДокументы = ЭлектронныеДокументы;

	ЭлектронныеДокументыЭДОКлиент.НачатьВыполнениеДействийПоЭДО(Оповещение, ПараметрыВыполненияДействийПоЭДО);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыполненияДействийПоЭДО(Результат, Контекст) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.Свойство("КонтекстДиагностики")
		И ОбработкаНеисправностейБЭДКлиентСервер.ЕстьОшибки(Результат.КонтекстДиагностики) Тогда
		ОбработкаНеисправностейБЭДКлиент.ОбработатьОшибки(Результат.КонтекстДиагностики);
	Иначе
		ПерезаполнитьТаблицы();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВернутьсяКСпискуСертификатов(Команда)
	
	ПерейтиНаСтраницу(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиКСпискуДокументов(Команда)
	
	СертификатПодписи = ?(Элементы.ТаблицаСертификатов.ТекущиеДанные = Неопределено,
		ТаблицаСертификатов[0].Сертификат, Элементы.ТаблицаСертификатов.ТекущиеДанные.Сертификат);
		
	Если НЕ ЕстьДокументыНаПодпись() Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьСписокДокументовПоСертификату();
	ПерейтиНаСтраницу(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметитьВыделенные(Команда)
	
	МассивСтрок = Элементы.ТаблицаДокументов.ВыделенныеСтроки;
	Для Каждого НомерСтроки Из МассивСтрок Цикл
		СтрокаТаблицы = ТаблицаДокументов.НайтиПоИдентификатору(НомерСтроки);
		Если СтрокаТаблицы <> Неопределено Тогда
			СтрокаТаблицы.Выбрать = Истина;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьОтметкуСоВсехСтрок(Команда)
	
	Для Каждого ТекДокумент Из ТаблицаДокументов Цикл
		Если ТекДокумент.Выбрать Тогда
			ТекДокумент.Выбрать = Ложь;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьСписокСертификатовИДокументов(КлиентскиеОтпечатки)
	
	КонтекстДиагностики = ОбработкаНеисправностейБЭД.НовыйКонтекстДиагностики();
	
	ОписанияЗапросов = Новый Массив;	
	ВидОперации = НСтр("ru = 'Получение документов на подпись'");
	
	ДанныеОтпечатковСертификатов = КриптографияБЭД.ПолучитьОтпечаткиСертификатов(ВидОперации,
		КонтекстДиагностики, КлиентскиеОтпечатки);
	
	Отбор = КриптографияБЭД.НовыйОтборСертификатов();
	Отбор.Отпечатки = "&ОтпечаткиСертификатов";
	Отбор.ДоступныеТекущемуПользователю = Истина;

	ОписанияЗапросов.Добавить(КриптографияБЭД.ЗапросДействующихСертификатов("ДоступныеСертификаты", Отбор));
	МассивОтпечатковСертификатов = КриптографияБЭД.ПолучитьВсеОтпечаткиСертификатов(ДанныеОтпечатковСертификатов);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДоступныеСертификаты.Ссылка КАК Сертификат,
		|	ДоступныеСертификаты.Отпечаток КАК Отпечаток
		|ИЗ
		|	ДоступныеСертификаты КАК ДоступныеСертификаты";
	
	Запрос = ОбщегоНазначенияБЭД.СоединитьЗапросы(Запрос, ОписанияЗапросов);
	Запрос.УстановитьПараметр("ОтпечаткиСертификатов", МассивОтпечатковСертификатов);
	
	ТаблицаДоступныхСертификатов = Запрос.Выполнить().Выгрузить();
	
	ЗаполнитьСводнуюТаблицу(ТаблицаДоступныхСертификатов);
	ЗаполнитьСписокСертификатов(ТаблицаДоступныхСертификатов);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокСертификатов(ТаблицаДоступныхСертификатов)
	
	ТаблицаСертификатов.Очистить();
	Для Каждого ТекСтрока Из ТаблицаДоступныхСертификатов Цикл
		СтрокаТаблицы = ТаблицаСертификатов.Добавить();
		СтрокаТаблицы.Сертификат = ТекСтрока.Сертификат;
		СтрокаТаблицы.Отпечаток = ТекСтрока.Отпечаток;

		СтрокаТаблицы.КоличествоДокументов = ПодписываемыеДокументыСертификата(ТекСтрока.Сертификат).Количество();
	
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПодписываемыеДокументыСертификата(Сертификат)
	
	ОписанияЗапросов = Новый Массив;
	
	ЗапросДокументов = ОбщегоНазначенияБЭД.НовоеОписаниеЗапроса();
	ЗапросДокументов.Текст = "ВЫБРАТЬ ДанныеДокументов.Сертификат,
				   |ДанныеДокументов.СуммаДокумента,
				   |ДанныеДокументов.ДатаДокумента,
				   |ДанныеДокументов.ВидДокумента,
				   |ДанныеДокументов.НомерДокумента,
				   |ДанныеДокументов.ЭлектронныйДокумент,
				   |ДанныеДокументов.Организация 
				   |ПОМЕСТИТЬ ДанныеДокументов ИЗ &ДанныеДокументов КАК ДанныеДокументов";
	ОписанияЗапросов.Добавить(ЗапросДокументов);
	
	Отбор = КриптографияБЭД.НовыйОтборПодписываемыхВидовДокументов();
	Отбор.Сертификаты = "&Сертификат";
	Отбор.ВидыДокументов = "ВЫБРАТЬ РАЗЛИЧНЫЕ ВидДокумента ИЗ ДанныеДокументов";
	ОписанияЗапросов.Добавить(КриптографияБЭД.ЗапросПодписываемыхВидовДокументов("ПодписываемыеВидыДокументов", Отбор));
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|ДанныеДокументов.Сертификат,
	|ДанныеДокументов.СуммаДокумента,
	|ДанныеДокументов.ДатаДокумента,
	|ДанныеДокументов.ВидДокумента,
	|ДанныеДокументов.НомерДокумента,
	|ДанныеДокументов.ЭлектронныйДокумент,
	|ДанныеДокументов.Организация
	|ИЗ
	|	ДанныеДокументов КАК ДанныеДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПодписываемыеВидыДокументов КАК ПодписываемыеВидыДокументов
	|		ПО ДанныеДокументов.ВидДокумента = ПодписываемыеВидыДокументов.ВидДокумента
	|ГДЕ ДанныеДокументов.Сертификат = &Сертификат ИЛИ (ДанныеДокументов.Организация = &Организация И 
	|	ДанныеДокументов.Сертификат = ЗНАЧЕНИЕ(Справочник.СертификатыКлючейЭлектроннойПодписиИШифрования.ПустаяСсылка)
	|)";
	
	Запрос = ОбщегоНазначенияБЭД.СоединитьЗапросы(Запрос, ОписанияЗапросов);
	
	
	Запрос.УстановитьПараметр("ДанныеДокументов", СводнаяТаблица.Выгрузить());
	Запрос.УстановитьПараметр("Сертификат", Сертификат);
	Запрос.УстановитьПараметр("Организация", Сертификат.Организация);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

&НаСервере
Функция МассивПодписываемыхДокументовСертификата(Сертификат)
	Возврат ПодписываемыеДокументыСертификата(Сертификат).ВыгрузитьКолонку("ЭлектронныйДокумент");
КонецФункции

&НаСервере
Процедура ЗаполнитьСводнуюТаблицу(ТаблицаДоступныхСертификатов)
	

	ОтборДокументов = ЭлектронныеДокументыЭДО.НовыйОтборДокументовНаПодписи();
	Если ЗначениеЗаполнено(Контрагент) Тогда 
		ОтборДокументов.Контрагент = Контрагент;
	КонецЕсли;
	Если ЗначениеЗаполнено(ВидДокумента) Тогда
		ОтборДокументов.ВидДокумента = ВидДокумента;
	КонецЕсли;
	Если ЗначениеЗаполнено(НаправлениеЭД) Тогда 
		ОтборДокументов.Направление = НаправлениеЭД;
	КонецЕсли;

	ЗапросПоДокументам = ЭлектронныеДокументыЭДО.ЗапросДокументовНаПодписи(ОтборДокументов);
	Таблица = ЗапросПоДокументам.Выполнить().Выгрузить();
	
	ЗначениеВРеквизитФормы(Таблица, "СводнаяТаблица");
	
КонецПроцедуры


&НаКлиенте
Процедура ПерезаполнитьТаблицы()
	
	Оповещение = Новый ОписаниеОповещения("ПослеПолученияОтпечатковПерезаполнитьТаблицы", ЭтотОбъект);
	КриптографияБЭДКлиент.ПолучитьОтпечаткиСертификатов(Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеПолученияОтпечатковПерезаполнитьТаблицы(Результат, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если Результат.Клиент <> Неопределено И Результат.Клиент.Ошибка
			Или Результат.Сервер <> Неопределено И Результат.Сервер.Ошибка
			Или Результат.Облако <> Неопределено И Результат.Облако.Ошибка Тогда
		Закрыть();
		Возврат;
	КонецЕсли;


	ЗаполнитьСписокСертификатовИДокументов(Результат);
	ЗаполнитьСписокДокументовПоСертификату();
	
КонецПроцедуры

&НаКлиенте
Функция ЕстьДокументыНаПодпись() 
	
	ПроверочныеДанные = ?(Элементы.ТаблицаСертификатов.ТекущиеДанные = Неопределено,
		ТаблицаСертификатов[0], Элементы.ТаблицаСертификатов.ТекущиеДанные);
	
	Если ПроверочныеДанные.КоличествоДокументов = 0 Тогда
		ТекстПредупреждения = НСтр("ru = 'По данному сертификату нет документов на подпись'");
		ПоказатьПредупреждение(, ТекстПредупреждения);
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура ПерейтиНаСтраницу(КДетализации)
	
	Если КДетализации Тогда
		Элементы.Страницы.ТекущаяСтраница = Элементы.Страницы.ПодчиненныеЭлементы.СтраницаДетализации;
		Заголовок = НСтр("ru = 'Документы на подпись по сертификату'")+ ": " + СертификатПодписи;
	Иначе
		Элементы.Страницы.ТекущаяСтраница = Элементы.Страницы.ПодчиненныеЭлементы.СтраницаСводки;
		Заголовок = НСтр("ru = 'Документы на подпись'");
	КонецЕсли;
	
	Элементы.Подписать.Заголовок = НСтр("ru = 'Подписать и отправить отмеченные'");
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокДокументовПоСертификату()
	
	ТаблицаДокументов.Очистить();
	ТаблицаДокументов.Загрузить(ПодписываемыеДокументыСертификата(СертификатПодписи));
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Служебные обработчики асинхронных диалогов

&НаКлиенте
Процедура ПослеПолученияОтпечатковВыполнитьДействия(Результат, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если Результат.Клиент <> Неопределено И Результат.Клиент.Ошибка
		Или Результат.Сервер <> Неопределено И Результат.Сервер.Ошибка
		Или Результат.Облако <> Неопределено И Результат.Облако.Ошибка Тогда
		Закрыть();
		Возврат;
	КонецЕсли;

	ЗаполнитьСписокСертификатовИДокументов(Результат);
	
	Если ТаблицаСертификатов.Количество() = 0 Тогда
		ТекстПредупреждения = НСтр("ru = 'Нет сертификатов подписи для пользователя
										|или не настроены правила подписи документов.'");
		ОписаниеОповещения = Новый ОписаниеОповещения("ПослеЗакрытияПредупреждения", ЭтотОбъект);
		ПоказатьПредупреждение(ОписаниеОповещения, ТекстПредупреждения);
	ИначеЕсли ТаблицаСертификатов.Количество() > 1 Тогда
		ПерейтиНаСтраницу(Ложь);
	Иначе
		СертификатПодписи = ТаблицаСертификатов[0].Сертификат;
		ЗаполнитьСписокДокументовПоСертификату();
		ПерейтиНаСтраницу(Истина);
		Элементы.ГруппаКнопкиНазад.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияПредупреждения(ДополнительныеПараметры = Неопределено) Экспорт
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти
