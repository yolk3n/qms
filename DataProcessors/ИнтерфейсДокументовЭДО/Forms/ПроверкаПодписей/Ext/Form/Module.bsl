
#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ЗавершениеПроверкиПодписей" Тогда
		Элементы.ДанныеПоДокументам.Обновить();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДанныеПоДокументам

&НаКлиенте
Процедура ДанныеПоДокументамВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ДанныеСтроки = Элемент.ДанныеСтроки(ВыбраннаяСтрока);
	ИнтерфейсДокументовЭДОКлиент.ОткрытьЭлектронныйДокумент(ДанныеСтроки.ЭлектронныйДокумент);
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ДанныеПоДокументамПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	СмещениеДат = ТекущаяДатаСеанса() - ТекущаяУниверсальнаяДата();
	Для Каждого СтрокаСписка Из Строки Цикл	
		ДанныеСтроки = СтрокаСписка.Значение.Данные;
		Если Не ДанныеСтроки.Свойство("ДатаПроверкиПодписи") Тогда
			Возврат;
		КонецЕсли;
		ДатаПроверкиПодписиСоСмещением = ДанныеСтроки.ДатаПроверкиПодписи + СмещениеДат;
		ДанныеСтроки.ДатаПроверкиПодписи = ДатаПроверкиПодписиСоСмещением;
	КонецЦикла;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПроверитьВсеПодписи(Команда)
	ПроверитьПодписи();
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьПодпись(Команда)

	МассивСообщений = Новый Массив;
	ВыделенныеСтроки = Элементы.ДанныеПоДокументам.ВыделенныеСтроки;
	Для Каждого СтрокаСписка Из ВыделенныеСтроки Цикл
		СтрокаДанныхПоДокументам = Элементы.ДанныеПоДокументам.ДанныеСтроки(СтрокаСписка);
		МассивСообщений.Добавить(СтрокаДанныхПоДокументам.СообщениеЭДО);
	КонецЦикла;
	ПроверитьПодписи(МассивСообщений);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьДокумент(Команда) 
	
	ВыделенныеСтроки = Элементы.ДанныеПоДокументам.ВыделенныеСтроки;
	Для Каждого СтрокаСписка Из ВыделенныеСтроки Цикл
		СтрокаДанныхПоДокументам = Элементы.ДанныеПоДокументам.ДанныеСтроки(СтрокаСписка);
		ИнтерфейсДокументовЭДОКлиент.ОткрытьЭлектронныйДокумент(СтрокаДанныхПоДокументам.ЭлектронныйДокумент);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПроверитьПодписи(МассивСообщений = Неопределено)
	
	Если Элементы.ДанныеПоДокументам.ТекущиеДанные = Неопределено Тогда
		ТекстСообщения = НСтр("ru = 'Сообщения ЭДО с неверными подписями отсутствуют.'");
		ПоказатьПредупреждение(, ТекстСообщения); 
		Возврат;
	КонецЕсли;
	
	КонтекстДиагностики = ОбработкаНеисправностейБЭДКлиент.НовыйКонтекстДиагностики();
	ПараметрыОжиданияБЭД = ОжиданиеОперацийБЭДКлиент.НовыеПараметры();
	КонтекстОжиданияОперации = ОжиданиеОперацийБЭДКлиент.НовыйКонтекст(ПараметрыОжиданияБЭД);
		
	ДлительнаяОперация = НачатьПроверкуПодписейНаСервере(МассивСообщений); 
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("КонтекстДиагностики", КонтекстДиагностики);
	ДополнительныеПараметры.Вставить("ИдентификаторТекущегоФоновогоЗадания", ДлительнаяОперация.ИдентификаторЗадания);
	ДополнительныеПараметры.Вставить("КонтекстОжиданияОперации", КонтекстОжиданияОперации);
	ДополнительныеПараметры.Вставить("ЭтоПрерываниеНаКлиенте", Ложь);
	
	ОповещениеЗавершениеПроверкиПодписей = 
		Новый ОписаниеОповещения("ОбработатьЗавершениеПроверкиПодписей", ЭтотОбъект, ДополнительныеПараметры);
	
	ОжиданиеОперацийБЭДКлиент.УстановитьОбработчикПрерывания(ОповещениеЗавершениеПроверкиПодписей, КонтекстОжиданияОперации);
	ОжиданиеОперацийБЭДКлиент.ОтметитьНачалоВыполнения(КонтекстОжиданияОперации);
	ОжиданиеОперацийБЭДКлиент.ОткрытьФормуОжидания(Неопределено, КонтекстОжиданияОперации); 
	
	ДополнительныеПараметры.Вставить("ОповещениеОЗавершении", ОповещениеЗавершениеПроверкиПодписей);
	
	ОповещениеПослеПроверкиНаСервере = 
		Новый ОписаниеОповещения("ОбработатьРезультатПроверкиПодписейСервера", ЭтотОбъект, ДополнительныеПараметры);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеПослеПроверкиНаСервере, ПараметрыОжидания);

КонецПроцедуры

&НаСервере
Функция НачатьПроверкуПодписейНаСервере(МассивСообщений)
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияФункции(Новый УникальныйИдентификатор);
	ПараметрыВыполнения.ОжидатьЗавершение = 0;
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Обработка результатов проверки подписи на сервере'");
		
	Возврат ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения,
		"Обработки.ИнтерфейсДокументовЭДО.ПроверитьПодписиНаСервере", МассивСообщений);
	
КонецФункции

&НаКлиенте
Процедура ОбработатьРезультатПроверкиПодписейСервера(РезультатВыполненияФоновогоЗадания, ДополнительныеПараметры) Экспорт
		
	Результат = ОбщегоНазначенияБЭДКлиент.РезультатВыполненияФоновогоЗадания(
		НСтр("ru = 'Обработка результатов проверки подписи на сервере'"),
		РезультатВыполненияФоновогоЗадания, ДополнительныеПараметры.КонтекстДиагностики);
		
	Если Результат = Неопределено Тогда
		ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеОЗавершении, Ложь);
		Возврат;
	КонецЕсли;
	
	Если Результат.Успех Тогда
		ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеОЗавершении, Истина);
		Возврат;
	ИначеЕсли Не ЗначениеЗаполнено(Результат.ПодписиДляПроверки) Тогда 
		ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеОЗавершении, Ложь);
		Возврат;
	КонецЕсли;
	
	ДополнительныеПараметры.ИдентификаторТекущегоФоновогоЗадания = "";
		
	ПараметрыПроверки = НовыеПараметрыПроверкиПодписей();
	ПараметрыПроверки.ПодписиДляПроверки = Результат.ПодписиДляПроверки;

	ПараметрыПроверки.ОбработкаЗавершенияПроверки = Новый ОписаниеОповещения(
		"ПроверитьПодписиДокументаЗавершение", ЭтотОбъект, ДополнительныеПараметры);

	ПараметрыПроверки.ОбработкаПроверкиПодписи = Новый ОписаниеОповещения(
		"ОбработатьРезультатПроверкиПодписиДокумента", ЭлектронныеДокументыЭДОКлиент, ПараметрыПроверки);
	ПараметрыПроверки.ОперацияМенеджераКриптографии = "ПроверкаПодписи";
	ПараметрыПроверки.КонтекстДиагностики = ДополнительныеПараметры.КонтекстДиагностики;

	ЭлектронныеДокументыЭДОКлиент.ПроверитьПодписи(ПараметрыПроверки);
	
КонецПроцедуры 

&НаКлиенте
Процедура ПроверитьПодписиДокументаЗавершение(ПроверенныеПодписи, ДополнительныеПараметры) Экспорт
	
	Если ДополнительныеПараметры.ЭтоПрерываниеНаКлиенте Тогда
		ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеОЗавершении, Ложь);
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ПроверенныеПодписи) Тогда
		ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеОЗавершении, Ложь);
		Возврат;
	КонецЕсли;
	
	ИдентификаторФормы = ?(ЭтотОбъект <> Неопределено, УникальныйИдентификатор,
		Новый УникальныйИдентификатор); 
		
	ДлительнаяОперация = ЗаписатьРезультатПроверкиПодписейДокумента(ПроверенныеПодписи, ИдентификаторФормы);
	
	ДополнительныеПараметры.ИдентификаторТекущегоФоновогоЗадания = ДлительнаяОперация.ИдентификаторЗадания;

	ОповещениеОЗавершении = 
		Новый ОписаниеОповещения("ОбработатьЗавершениеПроверкиПодписей", ЭтотОбъект, ДополнительныеПараметры);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
		
КонецПроцедуры

&НаСервере
Функция ЗаписатьРезультатПроверкиПодписейДокумента(ПроверенныеПодписи, ИдентификаторФормы)
		
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(ИдентификаторФормы);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Обработка результатов проверки подписи на клиенте'");

	Возврат ДлительныеОперации.ВыполнитьПроцедуру(
		ПараметрыВыполнения, 
		"ЭлектронныеДокументыЭДО.ЗаписатьРезультатПроверкиПодписейДокумента",
		ПроверенныеПодписи);
	
КонецФункции 

&НаКлиенте
Процедура ОбработатьЗавершениеПроверкиПодписей(РезультатОперации, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(ДополнительныеПараметры.ИдентификаторТекущегоФоновогоЗадания) Тогда
		ИнтеграцияБСПБЭДВызовСервера.ОтменитьВыполнениеЗадания(
			ДополнительныеПараметры.ИдентификаторТекущегоФоновогоЗадания);
	КонецЕсли; 
	
	ДополнительныеПараметры.КонтекстОжиданияОперации.ОперацияВыполняется = Ложь;
	ОжиданиеОперацийБЭДКлиент.ЗакрытьФормуОжидания(ДополнительныеПараметры.КонтекстОжиданияОперации); 
	
	Оповестить("ЗавершениеПроверкиПодписей");
	
	ЭтоРезультатДлительнойОперации = 
		ТипЗнч(РезультатОперации) = Тип("Структура") И РезультатОперации.Свойство("Статус");
		
	Если ЭтоРезультатДлительнойОперации Тогда
			
		ТекстСообщения = НСтр("ru = 'Проверка подписей не выполнена.'");
		Если РезультатОперации.Статус = "Выполнено" Тогда
			ТекстСообщения = НСтр("ru = 'Проверка подписей выполнена.'");
		КонецЕсли;
		
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		Возврат;
		
	КонецЕсли;
	
	Если РезультатОперации = Истина Тогда
		ТекстСообщения = НСтр("ru = 'Проверка подписей выполнена.'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеПараметры.ЭтоПрерываниеНаКлиенте Тогда
		ТекстСообщения = НСтр("ru = 'Операция была прервана пользователем.'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
	Иначе
		ДополнительныеПараметры.ЭтоПрерываниеНаКлиенте = Истина;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Функция НовыеПараметрыПроверкиПодписей() 
	
	НовыеПараметрыПроверкиПодписей = Новый Структура;
	НовыеПараметрыПроверкиПодписей.Вставить("Индекс", 0);
	НовыеПараметрыПроверкиПодписей.Вставить("ОбработкаЗавершенияПроверки", Новый ОписаниеОповещения);
	НовыеПараметрыПроверкиПодписей.Вставить("ОбработкаПроверкиПодписи", Новый ОписаниеОповещения);
	НовыеПараметрыПроверкиПодписей.Вставить("ПодписиДляПроверки", Новый Массив);
	НовыеПараметрыПроверкиПодписей.Вставить("МенеджерКриптографии", Неопределено);
	НовыеПараметрыПроверкиПодписей.Вставить("ОперацияМенеджераКриптографии", "");
	НовыеПараметрыПроверкиПодписей.Вставить("КонтекстДиагностики", Неопределено);
	НовыеПараметрыПроверкиПодписей.Вставить("ПроверенныеПодписи", Новый Соответствие);
	Возврат НовыеПараметрыПроверкиПодписей;
	
КонецФункции 

#КонецОбласти