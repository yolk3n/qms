
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	СоставНабораКонстантФормы = ОбщегоНазначенияБольничнаяАптека.ПолучитьСоставНабораКонстант(НаборКонстант);
	ВнешниеРодительскиеКонстанты = ОбщегоНазначенияБольничнаяАптекаПовтИсп.ПолучитьРодительскиеКонстанты(СоставНабораКонстантФормы);
	
	// Значения реквизитов формы
	РежимРаботы = Новый Структура;
	
	РежимРаботы.Вставить("ВнешниеРодительскиеКонстанты", Новый ФиксированнаяСтруктура(ВнешниеРодительскиеКонстанты));
	
	РежимРаботы = Новый ФиксированнаяСтруктура(РежимРаботы);
	
	// Обновление состояния элементов
	УстановитьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия <> "Запись_НаборКонстант" Тогда
		Возврат; // такие событие не обрабатываются
	КонецЕсли;
	
	// Если это изменена константа, расположенная в другой форме и влияющая на значения констант этой формы,
	// то прочитаем значения констант и обновим элементы этой формы.
	Если РежимРаботы.ВнешниеРодительскиеКонстанты.Свойство(Источник) Тогда
		
		Прочитать();
		УстановитьДоступность();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	ОбновитьИнтерфейсПрограммы();
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ
#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ФедеральныеВебСервисыРЭМДАдресТестирование(Команда)
	
	ТестированиеПодключения(Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ФедеральныеВебСервисыРЭМДАдресСервисаЗапросовТестирование(Команда)
	
	ТестированиеПодключения(Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ФедеральныеВебСервисыСообщенияРЭМД(Команда)
	
	ПерейтиПоНавигационнойСсылке("e1cib/list/РегистрСведений.ФедеральныеВебСервисыСообщенияРЭМД");
	
КонецПроцедуры

&НаКлиенте
Процедура РолиПриПодписанииРЭМД(Команда)
	
	ПерейтиПоНавигационнойСсылке("e1cib/list/Справочник.РолиПриПодписанииРЭМД");
	
КонецПроцедуры

&НаКлиенте
Процедура ФедеральныеВебСервисыЭМД(Команда)
	
	ПерейтиПоНавигационнойСсылке("e1cib/list/Справочник.ФедеральныеВебСервисыЭМД");
	
КонецПроцедуры

&НаКлиенте
Процедура ТипыМДРегистрируемыхВРЭМД(Команда)
	
	ПерейтиПоНавигационнойСсылке("e1cib/list/Справочник.ТипыМДРегистрируемыхВРЭМД");
	
КонецПроцедуры

#КонецОбласти // ОбработчикиКомандФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ
#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ИспользоватьИнтеграциюСРЭМДПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ФедеральныеВебСервисыРЭМДАдресПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ФедеральныеВебСервисыРЭМДАдресСервисаЗапросовПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ФедеральныеВебСервисыИдентификаторИСвИПСПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ФедеральныеВебСервисыИдентификаторИСвИПСНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Значение = ПолучитьЗначениеПоИмениЭлемента(Элемент.Имя);
	
	Если Не ЗначениеЗаполнено(Значение) Тогда
		// Сгенерируем новый уникальный идентификатор.
		НаборКонстант[Элемент.Имя] = Строка(Новый УникальныйИдентификатор);
		Подключаемый_ПриИзмененииРеквизита(Элемент);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ФедеральныеВебСервисыИдентификаторИСвРЭМДПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ФедеральныеВебСервисыНазваниеИнформационнойСистемыПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ФедеральныеВебСервисыНомерМИСПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ФедеральныеВебСервисыНомерЭкзМИСПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ФедеральныеВебСервисыСертификатПодписиСообщенийSOAPПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ФедеральныеВебСервисыПутьКАрхивуЭМДПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ФедеральныеВебСервисыРЭМДЛимитЗапросовНаРегистрациюДокументовПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ФедеральныеВебСервисыРЭМДРежимОтладкиПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ФедеральныеВебСервисыНСИРосминздравИдентификаторПользователяПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура АдресСервисаВалидацииСЭМДПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура АдресСервисаВалидацииСотрудниковПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийЭлементовФормы

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура Подключаемый_ПриИзмененииРеквизита(Элемент, ОбновлятьИнтерфейс = Истина)
	
	КонстантаИмя = ПриИзмененииРеквизитаСервер(Элемент.Имя);
	
	ОбновитьПовторноИспользуемыеЗначения();
	
	Если ОбновлятьИнтерфейс Тогда
		ОбновитьИнтерфейс = Истина;
		ПодключитьОбработчикОжидания("ОбновитьИнтерфейсПрограммы", 2, Истина);
	КонецЕсли;
	
	Если КонстантаИмя <> "" Тогда
		Оповестить("Запись_НаборКонстант", Новый Структура, КонстантаИмя);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИнтерфейсПрограммы()
	
	Если ОбновитьИнтерфейс = Истина Тогда
		ОбновитьИнтерфейс = Ложь;
		ОбщегоНазначенияКлиент.ОбновитьИнтерфейсПрограммы();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПриИзмененииРеквизитаСервер(ИмяЭлемента)
	
	РеквизитПутьКДанным = Элементы[ИмяЭлемента].ПутьКДанным;
	
	КонстантаИмя = СохранитьЗначениеРеквизита(РеквизитПутьКДанным);
	
	УстановитьДоступность(РеквизитПутьКДанным);
	
	ОбновитьПовторноИспользуемыеЗначения();
	
	Возврат КонстантаИмя;
	
КонецФункции

&НаСервере
Функция СохранитьЗначениеРеквизита(РеквизитПутьКДанным)
	
	// Определение имени константы.
	КонстантаИмя = "";
	Если НРег(Лев(РеквизитПутьКДанным, 14)) = НРег("НаборКонстант.") Тогда
		// Если путь к данным реквизита указан через "НаборКонстант".
		КонстантаИмя = Сред(РеквизитПутьКДанным, 15);
	Иначе
		// Определение имени и запись значения реквизита в соответствующей константе из "НаборКонстант".
		// Используется для тех реквизитов формы, которые связаны с константами напрямую (в отношении один-к-одному).
	КонецЕсли;
	
	// Сохранения значения константы.
	Если КонстантаИмя <> "" Тогда
		КонстантаМенеджер = Константы[КонстантаИмя];
		КонстантаЗначение = НаборКонстант[КонстантаИмя];
		
		Если КонстантаМенеджер.Получить() <> КонстантаЗначение Тогда
			Попытка
				КонстантаМенеджер.Установить(КонстантаЗначение);
			Исключение
				Прочитать();
				ВызватьИсключение;
			КонецПопытки;
			
			Если ОбщегоНазначенияБольничнаяАптекаПовтИсп.ЕстьПодчиненныеКонстанты(КонстантаИмя, КонстантаЗначение) Тогда
				Прочитать();
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат КонстантаИмя;
	
КонецФункции

&НаСервере
Функция ПолучитьЗначениеПоИмениЭлемента(ИмяЭлемента)
	
	РеквизитПутьКДанным = Элементы[ИмяЭлемента].ПутьКДанным;
	
	// Определение имени константы.
	КонстантаИмя = "";
	Если НРег(Лев(РеквизитПутьКДанным, 14)) = НРег("НаборКонстант.") Тогда
		// Если путь к данным реквизита указан через "НаборКонстант".
		КонстантаИмя = Сред(РеквизитПутьКДанным, 15);
	Иначе
		// Определение имени и запись значения реквизита в соответствующей константе из "НаборКонстант".
		// Используется для тех реквизитов формы, которые связаны с константами напрямую (в отношении один-к-одному).
	КонецЕсли;
	
	Если КонстантаИмя <> "" Тогда
		КонстантаЗначение = НаборКонстант[КонстантаИмя];
	Иначе
		КонстантаЗначение = Неопределено;
	КонецЕсли;
	
	Возврат КонстантаЗначение;
	
КонецФункции

&НаСервере
Процедура УстановитьДоступность(РеквизитПутьКДанным = "")
	
	Если РеквизитПутьКДанным = "НаборКонстант.ИспользоватьИнтеграциюСРЭМД" Или РеквизитПутьКДанным = "" Тогда
		
		ЗначениеКонстанты = НаборКонстант.ИспользоватьИнтеграциюСРЭМД;
		Элементы.ФедеральныеВебСервисыРЭМДАдрес.Доступность = ЗначениеКонстанты;
		Элементы.ФедеральныеВебСервисыРЭМДАдресСервисаЗапросов.Доступность = ЗначениеКонстанты;
		Элементы.ФедеральныеВебСервисыИдентификаторИСвИПС.Доступность = ЗначениеКонстанты;
		Элементы.ФедеральныеВебСервисыИдентификаторИСвРЭМД.Доступность = ЗначениеКонстанты;
		Элементы.ФедеральныеВебСервисыНазваниеИнформационнойСистемы.Доступность = ЗначениеКонстанты;
		Элементы.ФедеральныеВебСервисыНомерМИС.Доступность = ЗначениеКонстанты;
		Элементы.ФедеральныеВебСервисыНомерЭкзМИС.Доступность = ЗначениеКонстанты;
		Элементы.ФедеральныеВебСервисыСертификатПодписиСообщенийSOAP.Доступность = ЗначениеКонстанты;
		Элементы.ФедеральныеВебСервисыПутьКАрхивуЭМД.Доступность = ЗначениеКонстанты;
		Элементы.ФедеральныеВебСервисыРЭМДЛимитЗапросовНаРегистрациюДокументов.Доступность = ЗначениеКонстанты;
		Элементы.ФедеральныеВебСервисыРЭМДРежимОтладки.Доступность = ЗначениеКонстанты;
		Элементы.ФедеральныеВебСервисыНСИРосминздравИдентификаторПользователя.Доступность = ЗначениеКонстанты;
		Элементы.АдресСервисаВалидацииСЭМД.Доступность = ЗначениеКонстанты;
		Элементы.АдресСервисаВалидацииСотрудников.Доступность = ЗначениеКонстанты;
		
		Элементы.ФедеральныеВебСервисыРЭМДАдресТестирование.Доступность = ЗначениеКонстанты;
		Элементы.ФедеральныеВебСервисыРЭМДАдресСервисаЗапросовТестирование.Доступность = ЗначениеКонстанты;
		Элементы.ФедеральныеВебСервисыСообщенияРЭМД.Доступность = ЗначениеКонстанты;
		Элементы.РолиПриПодписанииРЭМД.Доступность = ЗначениеКонстанты;
		Элементы.ФедеральныеВебСервисыЭМД.Доступность = ЗначениеКонстанты;
		Элементы.ТипыМДРегистрируемыхВРЭМД.Доступность = ЗначениеКонстанты;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТестированиеПодключения(ИмяКоманды)
	
	ИмяЭлемента = СтрЗаменить(ИмяКоманды, "Тестирование", "");
	Адрес = ПолучитьЗначениеПоИмениЭлемента(ИмяЭлемента);
	Если Не ЗначениеЗаполнено(Адрес) Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура("АдресПодключения", Адрес);
	ОткрытьФорму("Обработка.ФедеральныеВебСервисыТестирование.Форма.HTTPПодключение", ПараметрыФормы, ЭтотОбъект, Адрес,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

#КонецОбласти // СлужебныеПроцедурыИФункции
