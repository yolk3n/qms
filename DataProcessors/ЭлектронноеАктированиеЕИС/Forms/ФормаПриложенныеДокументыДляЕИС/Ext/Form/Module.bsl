
#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	Если Документ.Пустая() Тогда
		ОписаниеОшибки = НСтр("ru = 'Для добавления файлов необходимо сохранить документ.'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ОписаниеОшибки);
		Отказ = Истина;
	КонецЕсли;
	
	ДанныеДляКлиента = Новый Структура("ДопустимыеРасширения", ДопустимыеРасширенияПриложенныхФайлов());
	ПроверитьПриложенныеДокументыРасчетРазмера();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Документ = Параметры.Документ;
	
	// Формируем список расширений.
	ЧастиСтроки = Новый Массив;
	Часть = НСтр("ru='Допускается прикладывать файлы с расширениями'") + " ";
	ЧастиСтроки.Добавить(Часть);
	ДопустимыеРасширения = ДопустимыеРасширенияПриложенныхФайлов();
	Для каждого Расширение Из ДопустимыеРасширения Цикл
		Часть = Новый ФорматированнаяСтрока(Расширение, Новый Шрифт( , , Истина));
		ЧастиСтроки.Добавить(Часть);
		Часть = ", ";
		ЧастиСтроки.Добавить(Часть);
	КонецЦикла;
	Если ЧастиСтроки[ЧастиСтроки.Количество() - 1] = ", " Тогда
		ЧастиСтроки[ЧастиСтроки.Количество() - 1] =  ".";
	КонецЕсли;
	
	Элементы.ДекорацияОписание.Заголовок = Новый ФорматированнаяСтрока(ЧастиСтроки);
	
	Для каждого Вложение Из Параметры.ПриложенныеДокументы Цикл
		Строка = ПриложенныеДокументы.Добавить();
		ЗаполнитьЗначенияСвойств(Строка, Вложение);
		ЗаполнитьДанныеСтроки(Строка, Вложение.ПрисоединенныйФайл);
	КонецЦикла;
	
	МаксимальныйРазмерФайла =
		ЭлектронноеАктированиеЕИСКлиентСервер.МаксимальныйРазмерПриложенногоФайлаВБайтах();
	МаксимальныйРазмерФайлов =
		ЭлектронноеАктированиеЕИСКлиентСервер.МаксимальныйОбщийРазмерПриложенныхФайловВБайтах();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ПеренестиВДокумент Тогда

		ЗаполнитьРезультат();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПриложенныеДокументы

&НаКлиенте
Процедура ПриложенныеДокументыПриИзменении(Элемент)
	
	ПроверитьПриложенныеДокументыРасчетРазмера();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриложенныеДокументыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		Если Поле.Имя = "ПриложенныеДокументыНаименованиеФайла" Тогда
			СтандартнаяОбработка = Ложь;
			РаботаСФайламиКлиент.ОткрытьФормуВыбораФайлов(Документ, Элемент, );
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриложенныеДокументыОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ЗаполнитьДанныеСтроки(Элемент.ТекущиеДанные, ВыбранноеЗначение);
	ПроверитьПриложенныеДокументыРасчетРазмера();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДобавитьИзФайла(Команда)
	
	Оповещение = Новый ОписаниеОповещения("ДобавитьИзФайлаПослеВыбораФайла", ЭтотОбъект);
	
	ДопустимыеРасширения = ДанныеДляКлиента.ДопустимыеРасширения;
	ТипыФильтра = Новый Массив;
	Для каждого Тип Из ДопустимыеРасширения Цикл
		ТипыФильтра.Добавить("*." + Тип);
	КонецЦикла;
	СтрокаРасширений = СтрСоединить(ТипыФильтра, ";");
	ФильтрШаблон = НСтр("ru = 'Все разрешенные типы (%1)|%1'");
	Фильтр = СтрШаблон(ФильтрШаблон, СтрокаРасширений);
	РаботаСФайламиКлиент.ДобавитьФайлы(Документ, УникальныйИдентификатор, Фильтр, , Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИзПрисоединенныхФайловДокумента(Команда)
	
	Оповещение = Новый ОписаниеОповещения("ДобавитьИзФайлаПослеВыбораФайла", ЭтотОбъект);
	РаботаСФайламиКлиент.ОткрытьФормуВыбораФайлов(Документ, Элементы.ПриложенныеДокументы, , Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИзПрисоединенныхФайловКонтракта(Команда)
	
	Оповещение = Новый ОписаниеОповещения("ДобавитьИзФайлаПослеВыбораФайла", ЭтотОбъект);
	РаботаСФайламиКлиент.ОткрытьФормуВыбораФайлов(Документ, Элементы.ПриложенныеДокументы, , Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОК(Команда)
	
	РезультатПроверки = ПроверитьПриложенныеДокументыРасчетРазмера(Истина, Истина);
	Если НЕ РезультатПроверки.Выполнено Тогда
		Возврат;
	КонецЕсли;
	
	ПеренестиВДокумент = Истина;
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьРезультат()
	
	НаборЗаписейПриложения = РегистрыСведений.ПриложенныеФайлыДляЭлектронногоАктированияЕИС.СоздатьНаборЗаписей();
	НаборЗаписейПриложения.Отбор.Документ.Установить(Документ);
	
	Для Каждого Строка Из ПриложенныеДокументы Цикл
		ЗаписьПриложение = НаборЗаписейПриложения.Добавить();
		ЗаписьПриложение.Документ = Документ;
		ЗаписьПриложение.Активность = Ложь;
		ЗаписьПриложение.Организация = Документ.Организация;	
		ЗаписьПриложение.ПрисоединенныйФайл = Строка.ПрисоединенныйФайл;
		ЗаписьПриложение.ВидВложения = Строка.ВидВложения;
	КонецЦикла;
	
	НаборЗаписейПриложения.Записать();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ДопустимыеРасширенияПриложенныхФайлов()
	
	Возврат ЭлектронноеАктированиеЕИС.ДопустимыеРасширенияПриложенныхФайлов();
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнитьДанныеСтроки(Строка, Файл)
	
	РеквизитыФайла = ИмяРазмерРасширениеФайла(Файл);
	Строка.ПрисоединенныйФайл = Файл;
	Строка.Размер = РеквизитыФайла.Размер;
	Строка.РазмерПредставление = РеквизитыФайла.ПредставлениеРазмера;
	Строка.НаименованиеФайла = РеквизитыФайла.Наименование;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИзФайлаПослеВыбораФайла(Результат, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(Результат) Тогда
		
		Если ТипЗнч(Результат) = Тип("Массив") Тогда
			Файл = Результат[0];
		Иначе
			Файл = Результат;
		КонецЕсли;
		
		Строка = ПриложенныеДокументы.Добавить();
		ЗаполнитьДанныеСтроки(Строка, Файл);
		
		ПроверитьПриложенныеДокументыРасчетРазмера();
		
		Элементы.ПриложенныеДокументы.ТекущаяСтрока = Строка.ПолучитьИдентификатор();
		Элементы.ПриложенныеДокументы.ТекущийЭлемент = Элементы.ПриложенныеДокументыВидВложения;
		Элементы.ПриложенныеДокументы.ИзменитьСтроку();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ИмяРазмерРасширениеФайла(Файл)
	
	Результат = Новый Структура;
	Результат.Вставить("Наименование", "");
	Результат.Вставить("Размер", 0);
	Результат.Вставить("ПредставлениеРазмера", "");
	Результат.Вставить("Расширение", "");
	
	ИмяРазмерРасширение = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Файл, "Наименование, Размер, Расширение");
	Результат.Расширение = ИмяРазмерРасширение.Расширение;
	Шаблон = НСтр("ru='%1.%2'");
	Результат.Наименование = СтрШаблон(Шаблон, ИмяРазмерРасширение.Наименование, ИмяРазмерРасширение.Расширение);
	Размер = ИмяРазмерРасширение.Размер;
	Результат.Размер = Размер;
	БайтовВМегабайте = БайтовВМегабайте();
	БайтовВКилобайте = 1024;
	Если Размер >= БайтовВМегабайте Тогда
		Размер = Размер / БайтовВМегабайте;
		Размер = Окр(Размер, 1);
		Шаблон = НСтр("ru='%1 Мб'");
	Иначе
		Размер = Размер / БайтовВКилобайте;
		Размер = Окр(Размер, 1);
		Шаблон = НСтр("ru='%1 Кб'");
	КонецЕсли;
	Результат.ПредставлениеРазмера = СтрШаблон(Шаблон, Размер);
	Возврат Результат;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция БайтовВМегабайте()
	
	Возврат 1024 * 1024;
	
КонецФункции

&НаСервереБезКонтекста
Функция ЦветТекстаКрасный()
	Возврат  ЭлектронноеАктированиеЕИС.ЦветТекстаКрасный();
КонецФункции

&НаСервереБезКонтекста
Функция ЦветТекстаОбычный()
	Возврат  ЭлектронноеАктированиеЕИС.ЦветТекстаОбычный();
КонецФункции

&НаКлиенте
Функция ПроверитьПриложенныеДокументыРасчетРазмера(ПроверятьВидДокументаТипФайла = Ложь, ВыводитьСообщениеОПревышенииРазмера = Ложь)
	
	Результат = Новый Структура;
	Результат.Вставить("ОбщийРазмер", 0);
	Результат.Вставить("ОбщийРазмерМб", 0);
	Результат.Вставить("Выполнено", Истина);
	
	ОбщийРазмер = 0;
	БайтовВМегабайте = БайтовВМегабайте();
	БайтовВКилобайте = 1024;
	ДопустимыеРасширения = ДанныеДляКлиента.ДопустимыеРасширения; //ДопустимыеРасширенияПриложенныхФайлов();
	Для каждого Файл Из ПриложенныеДокументы Цикл
		
		ОбщийРазмер = ОбщийРазмер + Файл.Размер;
		
		ПрисоединенныйФайл = Файл.ПрисоединенныйФайл;
		РеквизитыФайла = ИмяРазмерРасширениеФайла(ПрисоединенныйФайл);
		
		Если НЕ ЗначениеЗаполнено(Файл.ВидВложения) И ПроверятьВидДокументаТипФайла Тогда
			Шаблон = НСтр("ru='Не заполнен вид документа для файла ""%1"".'");
			ТекстОшибки = СтрШаблон(Шаблон, ПрисоединенныйФайл);
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстОшибки);
			Результат.Выполнено = Ложь;
		КонецЕсли;
		
		Если ДопустимыеРасширения.Найти(РеквизитыФайла.Расширение) = Неопределено И ПроверятьВидДокументаТипФайла Тогда
			Шаблон = НСтр("ru='Выбран документ с недопустимым расширением - ""%1"".'");
			ТекстОшибки = СтрШаблон(Шаблон, ПрисоединенныйФайл);
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстОшибки);
			Результат.Выполнено = Ложь;
		КонецЕсли;
		
	КонецЦикла;
	
	Если МаксимальныйРазмерФайлов - ОбщийРазмер >= БайтовВМегабайте Тогда
		ЕщеМожноПриложить = Окр((МаксимальныйРазмерФайлов - ОбщийРазмер) / БайтовВМегабайте, 1);
		ЕдиницаЕщеПриложить = НСтр("ru = 'Мб'");
	Иначе
		ЕщеМожноПриложить = Окр((МаксимальныйРазмерФайлов - ОбщийРазмер) / БайтовВКилобайте, 1);
		ЕдиницаЕщеПриложить = НСтр("ru = 'Кб'");
	КонецЕсли;
	
	Если ЕщеМожноПриложить < 0 И ВыводитьСообщениеОПревышенииРазмера Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(
			НСтр("ru='Превышен общий размер файлов, приложенных к документу.'"));
			
		Результат.Выполнено = Ложь;
	КонецЕсли;
	
	Результат.ОбщийРазмер = ОбщийРазмер;
	Результат.ОбщийРазмерМб = ОбщийРазмер / БайтовВМегабайте;
	
	Если ПриложенныеДокументы.Количество() > 0 Тогда
		
		// Формируем надпись о размере файлов.
		// Вывод в декорацию, не всегда появляется выбор типа файла из-за особенностей платформы.
		Если ОбщийРазмер >= БайтовВМегабайте Тогда
			ОбщийРазмерДляВывода = Окр(Результат.ОбщийРазмерМб, 1);
			ЕдиницаОбщегоРазмера = НСтр("ru = 'Мб'");
		Иначе
			ОбщийРазмерДляВывода = Окр(ОбщийРазмер / БайтовВКилобайте, 1);
			ЕдиницаОбщегоРазмера = НСтр("ru = 'Кб'");
		КонецЕсли;
		
		ЕщеМожноПриложить = Макс(ЕщеМожноПриложить, -ЕщеМожноПриложить);
		
		// Вывод в надпись.
		Если ЕщеМожноПриложить < 0 Тогда
			Шаблон = НСтр("ru='Общий размер %1 %3. Допустимый размер превышен на %2 %4.'");
			Элементы.НадписьОбщийРазмерФайлов.ЦветТекста = ЦветТекстаКрасный();
		Иначе
			Шаблон = НСтр("ru='Общий размер %1 %3. Можно дополнительно приложить файлы размером %2 %4.'");
			Элементы.НадписьОбщийРазмерФайлов.ЦветТекста = ЦветТекстаОбычный();
		КонецЕсли;
		НадписьОбщийРазмерФайлов = СтрШаблон(Шаблон,
			ОбщийРазмерДляВывода, ЕщеМожноПриложить, ЕдиницаОбщегоРазмера, ЕдиницаЕщеПриложить);
		
	Иначе
		НадписьОбщийРазмерФайлов = "";
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти
