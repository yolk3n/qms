#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Документ = Параметры.Документ;
	ГосударственныйКонтракт = Параметры.ГосударственныйКонтракт;
	Организация = Документ.Организация;
	ОтображатьМестаПоставки = Параметры.ОтображатьМестаПоставки;
	ОтображатьСудебноеРешение = Параметры.ОтображатьМестаПоставки;

	ДанныеДокумента = ЭлектронноеАктированиеЕИС.ДанныеДокументаЭлектронногоАктированияЕИС(Организация, Документ);
	ЗаполнитьЗначенияСвойств(ЭтотОбъект,
		ДанныеДокумента,
		"ВидДокументаОбжалованияОтказаОПриемке, РеквизитыДокументаОбжалованияОтказаОПриемке");

	ДанныеКонтракта = ЭлектронноеАктированиеЕИС.ДанныеГосударственногоКонтракта(
		Параметры.ГосударственныйКонтракт);

	// Этап исполнения контракта.
	Для Каждого Этап Из ДанныеКонтракта.ЭтапыИсполнения Цикл
		Элементы.ЭтапИсполненияКонтрактаПредставление.СписокВыбора.Добавить(Этап.Идентификатор,
			ПредставлениеЭтапаКонтракта(Этап));
	КонецЦикла;
	НаборДанныеДокумента = РегистрыСведений.ДанныеДокументовЭлектронногоАктированияЕИС.СоздатьНаборЗаписей();
	НаборДанныеДокумента.Отбор.Документ.Установить(Документ);
	НаборДанныеДокумента.Прочитать();
	Если НаборДанныеДокумента.Количество() = 0 Тогда
		ЭтапИсполненияКонтракта = ДанныеКонтракта.ЭтапыИсполнения[0].Идентификатор;
	Иначе
		ЭтапИсполненияКонтракта = НаборДанныеДокумента[0].ЭтапИсполненияКонтракта;
	КонецЕсли;
	ЭтапИсполненияКонтрактаПредставление = ЭтапИсполненияКонтракта;
	
	// Управление видимостью поля этапа.
	Элементы.ЭтапИсполненияКонтрактаПредставление.Видимость =
		ДанныеКонтракта.ЭтапыИсполнения.Количество() > 1;

	ДеревоТовары = РеквизитФормыВЗначение("ДеревоТоваров");
	ДеревоУслуг = РеквизитФормыВЗначение("ДеревоРаботыУслуги");
	
	ЗаполнитьДеревьяДанныхПоДокументу(Документ, ДанныеКонтракта, ДеревоТовары, ДеревоУслуг);
	
	ЗначениеВРеквизитФормы(ДеревоТовары, "ДеревоТоваров");
	ЗначениеВРеквизитФормы(ДеревоУслуг, "ДеревоРаботыУслуги");
	
	ЕстьПравоНаИзменение = ПравоДоступа("Изменение",
		Метаданные.РегистрыСведений.ДанныеДокументовЭлектронногоАктированияЕИС);
	ТолькоПросмотр = НЕ ЕстьПравоНаИзменение;
	Элементы.ДеревоТоваров.ТолькоПросмотр = НЕ ЕстьПравоНаИзменение;
	Элементы.ДеревоРаботыУслуги.ТолькоПросмотр = НЕ ЕстьПравоНаИзменение;
	Элементы.Сохранить.Доступность = ЕстьПравоНаИзменение;
	Элементы.ДеревоДетализацииДобавитьДетализацию.Видимость = ЕстьПравоНаИзменение;
	Элементы.ДеревоДетализацииУдалитьДетализацию.Видимость = ЕстьПравоНаИзменение;
	Элементы.ДеревоРаботыУслугиДобавитьДетализацию.Видимость = ЕстьПравоНаИзменение;
	Элементы.ДеревоРаботыУслугиУдалитьДетализацию.Видимость = ЕстьПравоНаИзменение;
	
	Элементы.МестаДоставки.Видимость = ОтображатьМестаПоставки;
	Элементы.СудебноеДосудебноеРешение.Видимость = ОтображатьСудебноеРешение;
	
	Элементы.Товары.Видимость = ДеревоТовары.Строки.Количество() > 0;
	Элементы.РаботыИУслуги.Видимость = ДеревоУслуг.Строки.Количество() > 0;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	РазвернутьДерево();

КонецПроцедуры

&НаКлиенте
Процедура ЭтапИсполненияКонтрактаПредставлениеПриИзменении(Элемент)
	
	ЭтапИсполненияКонтракта = ЭтапИсполненияКонтрактаПредставление;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодписиНажатие(Элемент)
	
	ЭлектронноеАктированиеЕИСКлиент.ОткрытьВыборПодписантовДокумента(Организация, Документ, ЭтотОбъект);

КонецПроцедуры

&НаКлиенте
Процедура МестаДоставкиНажатие(Элемент)
	
	ЭлектронноеАктированиеЕИСКлиент.ОткрытьМестаДоставкиДокументаДляЕИС(Документ, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриложенияНажатие(Элемент)
	
	ЭлектронноеАктированиеЕИСКлиент.ОткрытьСписокПриложенныхФайловДокумента(Документ, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СудебноеДосудебноеРешениеНажатие(Элемент)
	
	ЭлектронноеАктированиеЕИСКлиент.ОткрытьДанныеОбжалованияОтказаОПриемке(Документ, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоТоваровВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "ДеревоДетализацииГиперссылкаОткрыть"
		ИЛИ Поле.Имя = "ДеревоРаботыУслугиГиперссылкаОткрыть" Тогда
		ТекущиеДанные = Элемент.ТекущиеДанные;
		СтандартнаяОбработка = Ложь;
		ЭлектронноеАктированиеЕИСКлиент.ОткрытьФормуСтрокиКонтракта(
			ГосударственныйКонтракт,
			ТекущиеДанные.ИдентификаторДляАктированияЕИС,
			ЭтотОбъект,
			Истина);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ДеревоДетализацииОкончаниеПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка)

	ДанныеСтроки = ПараметрыПеретаскивания.Значение[0];
	
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.Товары Тогда
		ИмяРеквизитаФормы = "ДеревоТоваров";
	Иначе
		ИмяРеквизитаФормы = "ДеревоРаботыУслуги";
	КонецЕсли;
	
	ДобавитьДетализациюНаКлиенте(ДанныеСтроки, ИмяРеквизитаФормы);

КонецПроцедуры

&НаКлиенте
Процедура ДеревоДетализацииНоменклатураПриИзменении(Элемент)

	ТекущиеДанные = Элементы.ДеревоТоваров.ТекущиеДанные;

	Если ЕстьДубли(ТекущиеДанные.ИдентификаторДляАктированияЕИС, ТекущиеДанные.Номенклатура) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр(
			"ru='Не допускается указывать одинаковую номенклатуру при детализации позиции.'"));
		ТекущиеДанные.Номенклатура = ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка");
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ДеревоДетализацииКоличествоПриИзменении(Элемент)

	ДеревоДетализацииКоличествоПриИзмененииНаСервере();
	РазвернутьДерево();

КонецПроцедуры

&НаКлиенте
Процедура ДеревоТоваровПередУдалением(Элемент, Отказ)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Родитель = РодительСтроки(ТекущиеДанные);
	Если Родитель = Неопределено Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДобавитьДетализацию(Команда)

	Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.Товары Тогда
		ТекущиеДанные = Элементы.ДеревоТоваров.ТекущиеДанные;
		ИмяРеквизитаФормы = "ДеревоТоваров";
	Иначе
		ТекущиеДанные = Элементы.ДеревоРаботыУслуги.ТекущиеДанные;
		ИмяРеквизитаФормы = "ДеревоРаботыУслуги";
	КонецЕсли;
	
	ДобавитьДетализациюНаКлиенте(ТекущиеДанные, ИмяРеквизитаФормы);

КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьФорму(Команда)
	ЭтотОбъект.Закрыть(Ложь);
КонецПроцедуры

&НаКлиенте
Процедура Сохранить(Команда)

	Результат = СохранитьНаСервере();

	Если Результат Тогда
		ЭтотОбъект.Закрыть(Истина);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура УдалитьДетализацию(Команда)

	Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.Товары Тогда
		ТекущиеДанные = Элементы.ДеревоТоваров.ТекущиеДанные;
		ИмяРеквизитаФормы = "ДеревоТоваров";
	Иначе
		ТекущиеДанные = Элементы.ДеревоРаботыУслуги.ТекущиеДанные;
		ИмяРеквизитаФормы = "ДеревоРаботыУслуги";
	КонецЕсли;
	
	УдалитьДетализациюНаСервере(
		ТекущиеДанные.ИдентификаторДляАктированияЕИС, ТекущиеДанные.Номенклатура, ИмяРеквизитаФормы);
	РазвернутьДерево();

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура СудебноеДосудебноеРешениеЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Результат);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПредставлениеЭтапаКонтракта(Этап)
	
	ПредставлениеЭтапа = "";
	
	ФорматДаты = "ДЛФ=D;";
	Если ЗначениеЗаполнено(Этап.ДатаНачала) Тогда
		Шаблон = НСтр("ru = 'с %1 по %2'");
		СтрокаДатыНачала = Формат(Этап.ДатаНачала, ФорматДаты);
		СтрокаДатыОкончания = Формат(Этап.ДатаОкончания, ФорматДаты);
		ПредставлениеЭтапа = СтрШаблон(Шаблон,
			СтрокаДатыНачала,
			СтрокаДатыОкончания);
	Иначе
		Шаблон = НСтр("ru = 'по %1'");
		СтрокаДаты = Формат(Этап.ДатаОкончания, ФорматДаты);
		ПредставлениеЭтапа = СтрШаблон(Шаблон,
			СтрокаДаты);
	КонецЕсли;
	
	Если Этап.Цена > 0 Тогда
		ПредставлениеЭтапа = ПредставлениеЭтапа
			+ " " + НСтр("ru = 'на сумму'") + " " + Этап.Цена;
	КонецЕсли;
	
	Возврат ПредставлениеЭтапа;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьДеревьяДанныхПоДокументу(
				Документ, ДанныеКонтракта, ДеревоТоваров, ДеревоРаботУслуг)
	
	ЭлектронноеАктированиеЕИС.
		ЗаполнитьДеревьяДанныхДляАктированияДокумента(
			Документ, ДанныеКонтракта, ДеревоТоваров, ДеревоРаботУслуг);
	
	ЭлектронноеАктированиеЕИС.ЗаполнитьОграничениеТипаНоменклатуры(
		Элементы.ДеревоДетализацииНоменклатура, ТипНоменклатура);
	
КонецПроцедуры

&НаКлиенте
Функция РодительСтроки(ТекущиеДанные)
	
	Идентификатор = ТекущиеДанные.ПолучитьИдентификатор();
	Родитель = ДеревоТоваров.НайтиПоИдентификатору(Идентификатор).ПолучитьРодителя();
	
	Возврат Родитель;
	
КонецФункции

&НаСервере
Процедура ДобавитьДетализациюНаСервере(ИдентификаторДляАктированияЕИС, ИмяРеквизитаФормы)

	Дерево = РеквизитФормыВЗначение(ИмяРеквизитаФормы);
	Для Каждого РодительскаяСтрока Из Дерево.Строки Цикл
		Если РодительскаяСтрока.ИдентификаторДляАктированияЕИС = ИдентификаторДляАктированияЕИС Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;

	ДетализацияУжеБыла = Ложь;
	Если РодительскаяСтрока.Строки.Количество() = 0 Тогда
		ИсходнаяСтрока = РодительскаяСтрока;
	Иначе
		ДетализацияУжеБыла = Истина;
		ИсходнаяСтрока = РодительскаяСтрока.Строки[0];
	КонецЕсли;

	НоваяСтрока = РодительскаяСтрока.Строки.Добавить();
	ИдентификаторНовойСтроки = Строка(Новый УникальныйИдентификатор);

	ЗаполнитьЗначенияСвойств(НоваяСтрока, ИсходнаяСтрока);
	НоваяСтрока.Идентификатор = ИдентификаторНовойСтроки;
	НоваяСтрока.НомерСтроки = 0;
	НоваяСтрока.Номенклатура =
		ТипНоменклатура.ПривестиЗначение(Неопределено);
	
	Если ДетализацияУжеБыла Тогда
		НоваяСтрока.Количество = 1;
		НоваяСтрока.Сумма = РодительскаяСтрока.Цена;
		РодительскаяСтрока.Количество = РодительскаяСтрока.Количество + 1;
		РодительскаяСтрока.Сумма = РодительскаяСтрока.Количество * РодительскаяСтрока.Цена;
	Иначе
		НоваяСтрока.Количество = РодительскаяСтрока.Количество;
		НоваяСтрока.Сумма = РодительскаяСтрока.Сумма;
	КонецЕсли;

	ЗначениеВРеквизитФормы(Дерево, ИмяРеквизитаФормы);

	Строки = ЭтотОбъект[ИмяРеквизитаФормы].ПолучитьЭлементы();
	Для Каждого Строка Из Строки Цикл
		Для Каждого ПодСтрока Из Строка.ПолучитьЭлементы() Цикл
			Если Подстрока.Идентификатор = ИдентификаторНовойСтроки Тогда
				Элементы[ИмяРеквизитаФормы].ТекущаяСтрока = Подстрока.ПолучитьИдентификатор();
				Возврат;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ДобавитьДетализациюНаКлиенте(ТекущиеДанные, ИмяРеквизитаФормы)

	ДобавитьДетализациюНаСервере(ТекущиеДанные.ИдентификаторДляАктированияЕИС, ИмяРеквизитаФормы);
	Элементы[ИмяРеквизитаФормы].ИзменитьСтроку();
	РазвернутьДерево();

КонецПроцедуры

&НаСервере
Функция СохранитьНаСервере()
	
	Результат = Истина;
	
	// Проверка данных в регистрах.
	// Подписанты.
	НаборПодписи = РегистрыСведений.ПодписантыДокументовЕИС.СоздатьНаборЗаписей();
	НаборПодписи.Отбор.Документ.Установить(Документ);
	НаборПодписи.Прочитать();
	
	Если НаборПодписи.Количество() = 0 Тогда
		ОписаниеОшибки = НСтр("ru = 'Не заполнен список подписантов документа.'");
		ОбщегоНазначения.СообщитьПользователю(ОписаниеОшибки);
		Возврат Ложь;
	КонецЕсли;
	
	// Места доставки.
	Если ОтображатьМестаПоставки Тогда
		НаборМеста = РегистрыСведений.МестаПоставкиДокументовДляЕИС.СоздатьНаборЗаписей();
		НаборМеста.Отбор.Документ.Установить(Документ);
		НаборМеста.Прочитать();
		Если НаборМеста.Количество() = 0 Тогда
			ОписаниеОшибки = НСтр("ru = 'Не заполнен список место доставки.'");
			ОбщегоНазначения.СообщитьПользователю(ОписаниеОшибки);
			Возврат Ложь;
		КонецЕсли;
	КонецЕсли;
	
	// Данные документа.
	НаборДанныеДокумента = РегистрыСведений.
		ДанныеДокументовЭлектронногоАктированияЕИС.СоздатьНаборЗаписей();
	НаборДанныеДокумента.Отбор.Документ.Установить(Документ);
	Запись = НаборДанныеДокумента.Добавить();
	Запись.Документ = Документ;
	Запись.Организация = Организация;
	Запись.ГосударственныйКонтрактЕИС = ГосударственныйКонтракт;
	Запись.ЭтапИсполненияКонтракта = ЭтапИсполненияКонтракта;
	Запись.ВидДокументаОбжалованияОтказаОПриемке = ВидДокументаОбжалованияОтказаОПриемке;
	Запись.РеквизитыДокументаОбжалованияОтказаОПриемке = РеквизитыДокументаОбжалованияОтказаОПриемке;
	НаборДанныеДокумента.Записать(Истина);
		
	ДеревоТовары = РеквизитФормыВЗначение("ДеревоТоваров");
	ДеревоУслуги = РеквизитФормыВЗначение("ДеревоРаботыУслуги");

	РезультатЗаполненияДокумента = ЭлектронноеАктированиеЕИС.
		ЗаполнитьТабличнуюЧастьДокументаПоДаннымДереваТоваровУслуг(
			Документ, ДеревоТовары, ДеревоУслуги);
	
	Если НЕ РезультатЗаполненияДокумента.Выполнено Тогда
		ОбщегоНазначения.СообщитьПользователю(РезультатЗаполненияДокумента.ОписаниеОшибки);
		Результат = Ложь;
	КонецЕсли;
	
	Возврат Результат;

КонецФункции

&НаСервере
Процедура УдалитьДетализациюНаСервере(ИдентификаторДляАктированияЕИС, Номенклатура, ИмяРеквизитаФормы)

	Дерево = РеквизитФормыВЗначение(ИмяРеквизитаФормы);
	Для Каждого РодительскаяСтрока Из Дерево.Строки Цикл
		Если РодительскаяСтрока.ИдентификаторДляАктированияЕИС = ИдентификаторДляАктированияЕИС Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;

	Если РодительскаяСтрока.Строки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Для Каждого Строка Из РодительскаяСтрока.Строки Цикл
		Если Строка.Номенклатура = Номенклатура Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;

	Если РодительскаяСтрока.Строки.Количество() = 1 Тогда
		ЗаполнитьЗначенияСвойств(РодительскаяСтрока, РодительскаяСтрока.Строки[0]);
	КонецЕсли;

	РодительскаяСтрока.Строки.Удалить(Строка);

	ЗначениеВРеквизитФормы(Дерево, ИмяРеквизитаФормы);

КонецПроцедуры

&НаСервере
Процедура ДеревоДетализацииКоличествоПриИзмененииНаСервере()

	Дерево = РеквизитФормыВЗначение("ДеревоТоваров");

	Для Каждого РодительскаяСтрока Из Дерево.Строки Цикл
		Сумма = 0;
		Количество = 0;
		Для Каждого Строка Из РодительскаяСтрока.Строки Цикл
			Строка.Сумма = Строка.Количество * Строка.Цена;
			Сумма = Сумма + Строка.Сумма;
			Количество = Количество + Строка.Количество;
		КонецЦикла;
		РодительскаяСтрока.Сумма = Сумма;
		РодительскаяСтрока.Количество = Количество;
	КонецЦикла;

	ЗначениеВРеквизитФормы(Дерево, "ДеревоТоваров");

КонецПроцедуры

&НаКлиенте
Процедура РазвернутьДерево()

	ЭлементыДерева = ДеревоТоваров.ПолучитьЭлементы();
	Для Каждого ЭлементДерева Из ЭлементыДерева Цикл
		Элементы.ДеревоТоваров.Развернуть(ЭлементДерева.ПолучитьИдентификатор());
	КонецЦикла;

	ЭлементыДерева = ДеревоРаботыУслуги.ПолучитьЭлементы();
	Для Каждого ЭлементДерева Из ЭлементыДерева Цикл
		Элементы.ДеревоРаботыУслуги.Развернуть(ЭлементДерева.ПолучитьИдентификатор());
	КонецЦикла;

КонецПроцедуры

&НаСервере
Функция ЕстьДубли(ИдентификаторДляАктированияЕИС, Номенклатура)

	Дерево = РеквизитФормыВЗначение("ДеревоТоваров");
	Строка = Дерево.Строки.Найти(ИдентификаторДляАктированияЕИС, "ИдентификаторДляАктированияЕИС");
	Если Строка <> Неопределено Тогда
		Отбор = Новый Структура;
		Отбор.Вставить("Номенклатура", Номенклатура);
		Строки = Строка.Строки.НайтиСтроки(Отбор);
		Если Строки.Количество() > 1 Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЕсли;

	Возврат Ложь;

КонецФункции

#КонецОбласти