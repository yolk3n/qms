#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Места = Параметры.МестаПоставки;
	Документ = Параметры.Документ;
	Для каждого Место Из Места Цикл
		Строка = МестаПоставки.Добавить();
		ЗаполнитьЗначенияСвойств(Строка, Место);
		Строка.ГиперСсылкаМестаПоставки = ПредставлениеМестаПоставки(Место);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если НЕ ПеренестиВДокумент Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьРезультат();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРезультат()
	
	НаборЗаписейМеста = РегистрыСведений.МестаПоставкиДокументовДляЕИС.СоздатьНаборЗаписей();
	НаборЗаписейМеста.Отбор.Документ.Установить(Документ);
	
	Для каждого Строка Из МестаПоставки Цикл
		ЧтениеJSON = Новый ЧтениеJSON;
		ЧтениеJSON.УстановитьСтроку(Строка.ДанныеМеста);
		Попытка
			ОбъектАдрес = ПрочитатьJSON(ЧтениеJSON);
		Исключение
			Шаблон = НСтр("ru = 'Не удалось разобрать данные адреса: %1.'");
			ОписаниеОшибки = СтрШаблон(Шаблон, Строка.ДанныеМеста);
			ОбщегоНазначения.СообщитьПользователю(ОписаниеОшибки);
			Возврат;
		КонецПопытки;
		ЗаписьМесто = НаборЗаписейМеста.Добавить();
		ЗаписьМесто.Документ = Документ;
		ЗаписьМесто.Организация = Документ.Организация;
		КодыАдреса = ЭлектронноеАктированиеЕИС.КодыАдреса(Строка.ДанныеМеста);
		Если КодыАдреса.Свойство("Идентификатор") И ЗначениеЗаполнено(КодыАдреса.Идентификатор) Тогда
			ЗаписьМесто.ИдентификаторАдреса= КодыАдреса.Идентификатор;
		Иначе
			ЗаписьМесто.ИдентификаторАдреса = Новый УникальныйИдентификатор;
		КонецЕсли;
		ЗаписьМесто.ИдентификаторАдреса = СтрЗаменить(ЗаписьМесто.ИдентификаторАдреса, "-", "");
		ЗаписьМесто.Место = Строка.Место;
		ЗаписьМесто.Классификатор = Перечисления.КлассификаторМестаПоставкиЕИС.КЛАДР;
		ЗаписьМесто.Код = КодыАдреса.КодКЛАДР;
		ЗаписьМесто.Наименование = Строка.Место;
		ЗаписьМесто.Адрес = ОбъектАдрес.value;
		ЗаписьМесто.РайонИлиГород = ОбъектАдрес.area;
		ЗаписьМесто.НаселенныйПункт = ОбъектАдрес.area;
		ЗаписьМесто.ДанныеМеста = Строка.ДанныеМеста;
	КонецЦикла;
	
	НаборЗаписейМеста.Записать();
	
КонецПроцедуры

&НаКлиенте
Процедура МестаПоставкиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока И НЕ Копирование Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения(
			"МестаПоставкиВыборПослеРедактирования", 
			ЭтотОбъект, 
			Элемент);

		ДополнительныеПараметры = ПараметрыПроцедурыРедактироватьАдрес();
		ДополнительныеПараметры.Вставить("Адрес",             "");
		ДополнительныеПараметры.Вставить("АдресИмя",          Элемент.Имя);
		ДополнительныеПараметры.Вставить("Элемент",           Элемент);
		ДополнительныеПараметры.Вставить("Оповещение",        ОписаниеОповещения);
		ДополнительныеПараметры.Вставить("ПринудительноФИАС", Ложь);
		ДополнительныеПараметры.Вставить("ТолькоПросмотр",    ЭтотОбъект.ТолькоПросмотр);
		
		РедактироватьАдрес(ДополнительныеПараметры);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыМестаПоставки
&НаКлиенте
Процедура ОткрытьРедакторАдреса(МестоПоставки, Элемент)
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"МестаПоставкиВыборПослеРедактирования", 
		ЭтотОбъект, 
		Элемент);

	ДополнительныеПараметры = ПараметрыПроцедурыРедактироватьАдрес();
	ДополнительныеПараметры.Вставить("Адрес",             МестоПоставки);
	ДополнительныеПараметры.Вставить("АдресИмя",          Элемент.Имя);
	ДополнительныеПараметры.Вставить("Элемент",           Элемент);
	ДополнительныеПараметры.Вставить("Оповещение",        ОписаниеОповещения);
	ДополнительныеПараметры.Вставить("ПринудительноФИАС", НЕ ПустаяСтрока(МестоПоставки));
	ДополнительныеПараметры.Вставить("ТолькоПросмотр",    ЭтотОбъект.ТолькоПросмотр);
	
	РедактироватьАдрес(ДополнительныеПараметры);
	
КонецПроцедуры

&НаКлиенте
Процедура МестаПоставкиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		Если Поле.Имя = "МестаПоставкиГиперСсылкаМестаПоставки" Тогда
			
			СтандартнаяОбработка = Ложь;
			
			МестоПоставки = ТекущиеДанные.ДанныеМеста;
			ОткрытьРедакторАдреса(МестоПоставки, Элемент);
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция СтруктураАдреса(ПредставлениеАдрес)
	
	Результат = ИнтеграцияБСПБЭД.СведенияОбАдресеПоПредставлению(ПредставлениеАдрес);
	
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Функция ОпределитьНазваниеСтраны(Страна)
	
	Возврат Справочники.СтраныМира.НайтиПоКоду(Страна).Наименование;
	
КонецФункции

&НаКлиенте
Процедура РедактироватьАдрес(ДополнительныеПараметры)
	
	Адрес             = ДополнительныеПараметры.Адрес;
	АдресИмя          = ДополнительныеПараметры.АдресИмя;
	Оповещение        = ДополнительныеПараметры.Оповещение;
	ПринудительноФИАС = ДополнительныеПараметры.ПринудительноФИАС;
	ТолькоПросмотр    = ДополнительныеПараметры.ТолькоПросмотр;

	ЭтоАдресПоФИАСу = УправлениеКонтактнойИнформациейКлиентСервер.ЭтоКонтактнаяИнформацияВXML(Адрес);
	
	АдресИмяПредставление = ?(АдресИмя = "АдресЮридический","Адрес юридический","Адрес фактический");
	
	ВидАдреса = ?(АдресИмя = "АдресЮридический", 
		ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ЮрАдресОрганизации"), 
		ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ФактАдресОрганизации"));
	
	Если ЭтоАдресПоФИАСу ИЛИ ПринудительноФИАС Тогда
		
		ПараметрыФормы = УправлениеКонтактнойИнформациейКлиент.ПараметрыФормыКонтактнойИнформации(ВидАдреса, Адрес);
		ПараметрыФормы.Вставить("ТолькоПросмотр", ТолькоПросмотр);
		
		УправлениеКонтактнойИнформациейКлиент.ОткрытьФормуКонтактнойИнформации(ПараметрыФормы, , Оповещение);
			
	Иначе
		
		ЗначенияПолей   = Новый СписокЗначений;
		СтруктураАдреса = СтруктураАдреса(Адрес);
		
		ПредставлениеАдрес = Адрес;
		СтруктураАдресаРегион = СтруктураАдреса.Регион;

		Если НЕ СтруктураАдреса = Неопределено Тогда
			
			КодСтраны = "";
			НазваниеСтраны = "";
			СтруктураАдреса.Свойство("Страна", КодСтраны);
			
			Если ЗначениеЗаполнено(КодСтраны) Тогда
				НазваниеСтраны = ОпределитьНазваниеСтраны(КодСтраны);
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(НазваниеСтраны) Тогда
				НазваниеСтраны = "РОССИЯ";
			КонецЕсли;
			
			ЗначенияПолей.Добавить(НазваниеСтраны,"Страна");
			ЗначенияПолей.Добавить(СтруктураАдреса.Индекс,"Индекс");
			ЗначенияПолей.Добавить(СтруктураАдресаРегион,"Регион");
			ЗначенияПолей.Добавить(СтруктураАдреса.Район,"Район");
			ЗначенияПолей.Добавить(СтруктураАдреса.Город,"Город");
			ЗначенияПолей.Добавить(СтруктураАдреса.НаселенныйПункт,"НаселенныйПункт");
			ЗначенияПолей.Добавить(СтруктураАдреса.Улица,"Улица");
			ЗначенияПолей.Добавить(СтруктураАдреса.Дом,"Дом");
			ЗначенияПолей.Добавить(СтруктураАдреса.Корпус,"Корпус");
			ЗначенияПолей.Добавить(СтруктураАдреса.Квартира,"Квартира");
			Если СтруктураАдреса.Свойство("ТипДома") Тогда
				ЗначенияПолей.Добавить(СтруктураАдреса.ТипДома,"ТипДома");
			КонецЕсли;
			Если СтруктураАдреса.Свойство("ТипКвартиры") Тогда
				ЗначенияПолей.Добавить(СтруктураАдреса.ТипКвартиры,"ТипКвартиры");
			КонецЕсли;
			Если СтруктураАдреса.Свойство("ТипКорпуса") Тогда
				ЗначенияПолей.Добавить(СтруктураАдреса.ТипКорпуса,"ТипКорпуса");
			КонецЕсли;
			Если СтруктураАдреса.Свойство("НаименованиеВида") Тогда
				ЗначенияПолей.Добавить(АдресИмяПредставление,"НаименованиеВида");
			КонецЕсли;			
		КонецЕсли;
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Заголовок",				АдресИмяПредставление);
		ПараметрыФормы.Вставить("ЗначенияПолей",			ЗначенияПолей);
		ПараметрыФормы.Вставить("Представление",			ПредставлениеАдрес);
		ПараметрыФормы.Вставить("ВидКонтактнойИнформации",	ВидАдреса);
		ПараметрыФормы.Вставить("ТолькоПросмотр", 			ТолькоПросмотр);
		
		УправлениеКонтактнойИнформациейКлиент.ОткрытьФормуКонтактнойИнформации(ПараметрыФормы, , Оповещение);

	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПараметрыПроцедурыРедактироватьАдрес()
	
	ДополнительныеПараметры = Новый Структура();
	ДополнительныеПараметры.Вставить("Адрес",             "");
	ДополнительныеПараметры.Вставить("АдресИмя",          "");
	ДополнительныеПараметры.Вставить("Элемент",           Неопределено);
	ДополнительныеПараметры.Вставить("Оповещение",        Неопределено);
	ДополнительныеПараметры.Вставить("ПринудительноФИАС", Ложь);
	ДополнительныеПараметры.Вставить("ТолькоПросмотр",    Ложь);
	 
	Возврат ДополнительныеПараметры;
	
КонецФункции

&НаКлиенте
Процедура МестаПоставкиВыборПослеРедактирования(Результат, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(Результат) Тогда
		Представление = Результат.Представление;
		Значение = Результат.Значение;
		
		ТекущиеДанные = Элементы.МестаПоставки.ТекущиеДанные;
		ТекущиеДанные.ГиперСсылкаМестаПоставки = Представление;
		ТекущиеДанные.ДанныеМеста = Значение;
		ТекущиеДанные.Место = Представление;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПредставлениеМестаПоставки(МестоПоставки)
	
	Возврат МестоПоставки.Место;
	
КонецФункции

&НаКлиенте
Процедура ОК(Команда)
	
	ПеренестиВДокумент = Истина;
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если МестаПоставки.Количество() = 0 Тогда
		МестаПоставки.Добавить();
		ОткрытьРедакторАдреса("", Элементы.МестаПоставки);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти




