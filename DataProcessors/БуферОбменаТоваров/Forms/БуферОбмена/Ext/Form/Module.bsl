
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ИдентификаторБуфера = ОбработкаТабличнойЧастиКлиентСервер.ИдентификаторБуфераОбмена();
	СостояниеБуфера = БуферОбмена.ПолучитьИсториюКопированияДанных(ИдентификаторБуфера);
	Если СостояниеБуфера.Количество() = 0 Тогда
		ВызватьИсключение НСтр("ru = 'Буфер обмена пуст.'");
	КонецЕсли;
	
	Для Каждого ТекущиеДанные Из СостояниеБуфера Цикл
		СостояниеБуфераОбмена.Добавить(ТекущиеДанные.ИдентификаторДанных, ТекущиеДанные.ПредставлениеДанных);
	КонецЦикла;
	
	УстановитьДоступностьКнопок();
	
	ЗакрыватьПриВыборе = Ложь;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	ЗакрыватьПриВыборе = ЗакрыватьФормуПриВыборе;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если Источник = ИдентификаторБуфера Тогда
		Если ИмяСобытия = БуферОбменаКлиент.СобытиеКопированиеВБуферОбмена() Тогда
			ДобавитьТекущееЗначениеВСписок();
		ИначеЕсли ИмяСобытия = БуферОбменаКлиент.СобытиеОчисткаБуфераОбмена() Тогда
			СостояниеБуфераОбмена.Очистить();
			УстановитьДоступностьКнопок();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ
#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Вставить(Команда)
	
	Если Элементы.СостояниеБуфераОбмена.ТекущаяСтрока <> Неопределено Тогда
		ВыбранныеДанные = Новый Массив;
		Для Каждого ИдентификаторСтроки Из Элементы.СостояниеБуфераОбмена.ВыделенныеСтроки Цикл
			ВыбранныйЭлемент = СостояниеБуфераОбмена.НайтиПоИдентификатору(ИдентификаторСтроки);
			ВыбранныеДанные.Добавить(ВыбранныйЭлемент.Значение);
		КонецЦикла;
		ОповеститьОВыборе(ВыбранныеДанные);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Удалить(Команда)
	
	Если Элементы.СостояниеБуфераОбмена.ТекущаяСтрока <> Неопределено Тогда
		УдалитьДанныеИзБуфераОбмена();
		Если СостояниеБуфераОбмена.Количество() = 0 Тогда
			Оповестить(БуферОбменаКлиент.СобытиеОчисткаБуфераОбмена(),, ИдентификаторБуфера);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Очистить(Команда)
	
	ОчиститьБуферОбмена();
	Оповестить(БуферОбменаКлиент.СобытиеОчисткаБуфераОбмена(),, ИдентификаторБуфера);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьДанные(Команда)
	
	ТекущаяСтрока = Элементы.СостояниеБуфераОбмена.ТекущиеДанные;
	Если ТекущаяСтрока <> Неопределено Тогда
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ИдентификаторДанных", ТекущаяСтрока.Значение);
		ПараметрыФормы.Вставить("Представление", ТекущаяСтрока.Представление);
		ОткрытьФорму("Обработка.БуферОбменаТоваров.Форма.СодержимоеДанных", ПараметрыФормы, ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти // ОбработчикиКомандФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ
#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СостояниеБуфераОбменаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ВыбранныеДанные = Новый Массив;
	ВыбранныеДанные.Добавить(Элемент.ТекущиеДанные.Значение);
	ОповеститьОВыборе(ВыбранныеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрыватьФормуПриВыбореПриИзменении(Элемент)
	
	ЗакрыватьПриВыборе = ЗакрыватьФормуПриВыборе;
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийЭлементовФормы

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ДобавитьТекущееЗначениеВСписок()
	
	СостояниеБуфера = БуферОбмена.ПолучитьИсториюКопированияДанных(ИдентификаторБуфера);
	ТекущиеДанные = СостояниеБуфера[0];
	СостояниеБуфераОбмена.Вставить(0, ТекущиеДанные.Значение, ТекущиеДанные.Представление);
	
	УстановитьДоступностьКнопок();
	
КонецПроцедуры

&НаСервере
Процедура УдалитьДанныеИзБуфераОбмена()
	
	Для Каждого ИдентификаторСтроки Из Элементы.СостояниеБуфераОбмена.ВыделенныеСтроки Цикл
		ТекущаяСтрока = СостояниеБуфераОбмена.НайтиПоИдентификатору(ИдентификаторСтроки);
		БуферОбмена.УдалитьДанные(ИдентификаторБуфера, ТекущаяСтрока.Значение);
		СостояниеБуфераОбмена.Удалить(ТекущаяСтрока);
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОчиститьБуферОбмена()
	
	ОбработкаТабличнойЧастиСервер.ОчиститьБуферОбмена();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьКнопок()
	
	 ДоступностьКнопок = СостояниеБуфераОбмена.Количество() > 0;
	
	Элементы.ФормаВставить.Доступность = ДоступностьКнопок;
	Элементы.ФормаОчистить.Доступность = ДоступностьКнопок;
	Элементы.СостояниеБуфераОбменаКонтекстноеМенюВставить.Доступность = ДоступностьКнопок;
	Элементы.СостояниеБуфераОбменаКонтекстноеМенюУдалить.Доступность = ДоступностьКнопок;
	
КонецПроцедуры

#КонецОбласти //СлужебныеПроцедурыИФункции
