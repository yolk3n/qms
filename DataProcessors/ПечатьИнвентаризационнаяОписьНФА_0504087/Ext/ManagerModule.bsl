#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС
#Область ПрограммныйИнтерфейс

// Функция возвращает элемент таблицы доступных печатных форм объекта печати
//
Функция ДобавитьПечатнуюФорму(ПечатныеФормы) Экспорт
	
	МетаданныеМакета = МетаданныеМакета();
	МенеджерПечати = МетаданныеМакета.Родитель().ПолноеИмя();
	
	ПечатнаяФорма = УправлениеПечатьюБольничнаяАптека.ДобавитьПечатнуюФорму(ПечатныеФормы, "ИнвентаризационнаяОписьНФА_0504087", МенеджерПечати);
	ПечатнаяФорма.ПутьКМакету = ФормированиеПечатныхФормБольничнаяАптека.ПутьКМакету(МетаданныеМакета);
	ПечатнаяФорма.Представление = МетаданныеМакета.Представление();
	
	ПечатнаяФорма.Параметризуемая = Истина;
	ПечатнаяФорма.ДополнительныеПараметры.Вставить("БезФактическихДанных", Ложь);
	
	Возврат ПечатнаяФорма;
	
КонецФункции

// Функция формирует печатную форму требование накладная ф.0504204
//
Функция ПечатьИнвентаризационнаяОписьНФА_0504087(МассивОбъектов, ОбъектыПечати, ПараметрыПечати) Экспорт
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.АвтоМасштаб        = Истина;
	
	ПолноеИмяМакета = ФормированиеПечатныхФормБольничнаяАптека.ПутьКМакету(МетаданныеМакета());
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_" + ПолноеИмяМакета;
	Макет = УправлениеПечатью.МакетПечатнойФормы(ПолноеИмяМакета);
	
	СтруктураТипов = ОбщегоНазначенияБольничнаяАптека.РазложитьМассивСсылокПоТипам(МассивОбъектов);
	
	НомерТипаДокумента = 0;
	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
		
		НомерТипаДокумента = НомерТипаДокумента + 1;
		Если НомерТипаДокумента > 1 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(СтруктураОбъектов.Ключ);
		
		ДанныеДляПечати = МенеджерОбъекта.ПолучитьДанныеДляПечати(СтруктураОбъектов.Значение, ПараметрыПечати);
		
		СформироватьТабличныйДокумент(ТабличныйДокумент, Макет, ДанныеДляПечати, ОбъектыПечати);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

#КонецОбласти // ПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

Процедура СформироватьТабличныйДокумент(ТабличныйДокумент, Макет, ДанныеДляПечати, ОбъектыПечати)
	
	МассивВыводимыхОбластей = Новый Массив;
	
	ВалютаПечати = ЗначениеНастроекБольничнаяАптекаПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	
	Шапка = ДанныеДляПечати.ОсновныеДанные;
	БезФактическихДанных = ДанныеДляПечати.БезФактическихДанных;
	
	ТекстИтогоПоСтранице = НСтр("ru = 'Итого по странице'") + ":";
	ТекстИтогоПоОписи    = НСтр("ru = 'Итого по описи'") + ":";
	ПервыйДокумент = Истина;
	Пока Шапка.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		Иначе
			ПервыйДокумент = Ложь;
		КонецЕсли;
		
		ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(Шапка.Ссылка, ТабличныйДокумент, Макет);
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		// Получение параметров для заполнения
		ДанныеШапки = ПолучитьДанныеШапкиДокумента(Шапка);
		ТаблицаЦен  = ПолучитьТаблицуЦен(Шапка);
		
		// Вывод области Заголовок
		ФормированиеПечатныхФормБольничнаяАптека.ВывестиОбластьПоИмени(ТабличныйДокумент, Макет, "Заголовок", ДанныеШапки);
		
		// Вывод области Комиссии
		ОбластиКомиссии = СформироватьОбластиКомиссии(Макет, Шапка);
		
		Для Каждого ОбластьКомиссии Из ОбластиКомиссии Цикл
			ТабличныйДокумент.Вывести(ОбластьКомиссии);
		КонецЦикла;
		
		// Вывод области ДатаПодписи
		ФормированиеПечатныхФормБольничнаяАптека.ВывестиОбластьПоИмени(ТабличныйДокумент, Макет, "ДатаПодписи");
		
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		// Вывод области ИсточникФинансирования
		Если ЗначениеЗаполнено(Шапка.ИсточникФинансирования) Тогда
			ФормированиеПечатныхФормБольничнаяАптека.ВывестиОбластьПоИмени(ТабличныйДокумент, Макет, "ИсточникФинансирования", ДанныеШапки);
		КонецЕсли;
		
		// Инициализация нумерации
		Нумерация = ИнициализироватьНумерацию();
		
		// Вывод области ШапкаТаблицы
		ФормированиеПечатныхФормБольничнаяАптека.ВывестиОбластьПоИмени(ТабличныйДокумент, Макет, "ШапкаТаблицы", Нумерация);
		
		// Инициализация итогов по документу
		ПараметрыИтогоПоСтранице = ИнициализироватьСтруктуруИтогов();
		ПараметрыИтогоПоОписи    = ИнициализироватьСтруктуруИтогов();
		
		// Вывод многострочной части
		ВыборкаСтрокТовары = Шапка.Товары.Выбрать();
		КлючиПараметров = ФормированиеПечатныхФормБольничнаяАптека.ПолучитьИменаКолонокТаблицы(ВыборкаСтрокТовары);
		
		ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
		
		КоличествоСтрок = ВыборкаСтрокТовары.Количество();
		Пока ВыборкаСтрокТовары.Следующий() Цикл
			
			ФормированиеПечатныхФормБольничнаяАптека.УвеличитьНомер(Нумерация, "НомерСтроки");
			
			ДанныеСтроки = Новый Структура(КлючиПараметров);
			ЗаполнитьЗначенияСвойств(ДанныеСтроки, ВыборкаСтрокТовары);
			
			ТоварНаименование = ОбщегоНазначенияБольничнаяАптека.ПолучитьПредставлениеНоменклатурыДляПечати(
				ВыборкаСтрокТовары.ТоварНаименование,
				ВыборкаСтрокТовары.Серия,
				ВыборкаСтрокТовары.Партия);
			
			Цена = 0;
			Если ТаблицаЦен <> Неопределено Тогда
				СтрокаЦены = ТаблицаЦен.Найти(ВыборкаСтрокТовары.НомерСтроки, "НомерСтроки");
				Если СтрокаЦены <> Неопределено Тогда
					Цена = СтрокаЦены.Цена;
				КонецЕсли;
			КонецЕсли;
			
			ФактКоличество = ВыборкаСтрокТовары.ФактКоличество;
			БухКоличество  = ВыборкаСтрокТовары.БухКоличество;
			ФактСумма      = Окр(Цена * ФактКоличество, 2);
			БухСумма       = Окр(Цена * БухКоличество, 2);
			
			РезультатНедостачаКолво = 0;
			РезультатНедостачаСумма = 0;
			РезультатИзлишекКолво   = 0;
			РезультатИзлишекСумма   = 0;
			
			Если Не БезФактическихДанных Тогда
				
				НедостачаКоличество = БухКоличество - ФактКоличество;
				НедостачаСумма      = БухСумма - ФактСумма;
				
				// Если по факту оказалось меньше
				РезультатНедостачаКолво = ?(НедостачаКоличество > 0, НедостачаКоличество, 0);
				РезультатНедостачаСумма = ?(НедостачаКоличество > 0, ?(НедостачаСумма >= 0, НедостачаСумма, - НедостачаСумма), 0);
				// Если по факту оказалось больше
				РезультатИзлишекКолво   = ?(НедостачаКоличество < 0, - НедостачаКоличество, 0);
				РезультатИзлишекСумма   = ?(НедостачаКоличество < 0, - НедостачаСумма, 0);
				
			КонецЕсли;
			
			ДанныеСтроки.Вставить("НомерСтроки"            , Нумерация.НомерСтроки);
			ДанныеСтроки.Вставить("ТоварНаименование"      , ТоварНаименование);
			ДанныеСтроки.Вставить("Цена"                   , Окр(Цена, 2));
			ДанныеСтроки.Вставить("ФактКоличество"         , ФактКоличество);
			ДанныеСтроки.Вставить("ФактСумма"              , ФактСумма);
			ДанныеСтроки.Вставить("БухКоличество"          , БухКоличество);
			ДанныеСтроки.Вставить("БухСумма"               , БухСумма);
			ДанныеСтроки.Вставить("РезультатНедостачаКолво", РезультатНедостачаКолво);
			ДанныеСтроки.Вставить("РезультатНедостачаСумма", РезультатНедостачаСумма);
			ДанныеСтроки.Вставить("РезультатИзлишекКолво"  , РезультатИзлишекКолво);
			ДанныеСтроки.Вставить("РезультатИзлишекСумма"  , РезультатИзлишекСумма);
			
			ОбластьСтрока.Параметры.Заполнить(ДанныеСтроки);
			
			ЭтоПоследняяСтрока = Нумерация.НомерСтроки = КоличествоСтрок;
			СтрокаНеПомещаетсяНаСтраницу = ПроверитьВыводСтроки(ТабличныйДокумент, Макет, МассивВыводимыхОбластей, ОбластьСтрока, ЭтоПоследняяСтрока);
			
			Если СтрокаНеПомещаетсяНаСтраницу Тогда
				
				// Вывод области Итого по странице
				ПараметрыИтогоПоСтранице.Вставить("ТекстИтого", ТекстИтогоПоСтранице);
				ФормированиеПечатныхФормБольничнаяАптека.ВывестиОбластьПоИмени(ТабличныйДокумент, Макет, "Итого", ПараметрыИтогоПоСтранице);
				
				// Вывод области ИтогоПрописью по странице
				ПараметрыИтогоПрописью = СформироватьИтогиПрописью(ПараметрыИтогоПоСтранице, ВалютаПечати, Нумерация.НомерСтрокиНаСтранице, ТекстИтогоПоСтранице);
				ФормированиеПечатныхФормБольничнаяАптека.ВывестиОбластьПоИмени(ТабличныйДокумент, Макет, "ИтогоПрописью", ПараметрыИтогоПрописью);
				
				// Обнулить итоги по странице
				ФормированиеПечатныхФормБольничнаяАптека.ОбнулитьИтоги(ПараметрыИтогоПоСтранице);
				ФормированиеПечатныхФормБольничнаяАптека.УстановитьНачальныйНомер(Нумерация, "НомерСтрокиНаСтранице");
				
				// Перейти на следующую страницу
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				
				// Вывод области ШапкаТаблицы
				ФормированиеПечатныхФормБольничнаяАптека.УвеличитьНомер(Нумерация, "НомерСтраницы");
				ФормированиеПечатныхФормБольничнаяАптека.ВывестиОбластьПоИмени(ТабличныйДокумент, Макет, "ШапкаТаблицы", Нумерация);
				
			КонецЕсли;
			
			// Вывод области Строка
			ТабличныйДокумент.Вывести(ОбластьСтрока);
			
			ФормированиеПечатныхФормБольничнаяАптека.РассчитатьИтоги(ДанныеСтроки, ПараметрыИтогоПоСтранице);
			ФормированиеПечатныхФормБольничнаяАптека.РассчитатьИтоги(ДанныеСтроки, ПараметрыИтогоПоОписи);
			
			ФормированиеПечатныхФормБольничнаяАптека.УвеличитьНомер(Нумерация, "НомерСтрокиНаСтранице");
			
		КонецЦикла;
		
		// Вывод области Итого по странице
		ПараметрыИтогоПоСтранице.Вставить("ТекстИтого", ТекстИтогоПоСтранице);
		ФормированиеПечатныхФормБольничнаяАптека.ВывестиОбластьПоИмени(ТабличныйДокумент, Макет, "Итого", ПараметрыИтогоПоСтранице);
		
		// Вывод области Итого по описи
		ПараметрыИтогоПоОписи.Вставить("ТекстИтого", ТекстИтогоПоОписи);
		ФормированиеПечатныхФормБольничнаяАптека.ВывестиОбластьПоИмени(ТабличныйДокумент, Макет, "Итого", ПараметрыИтогоПоОписи);
		
		// Вывести итоги прописью по странице
		ПараметрыИтогоПрописью = СформироватьИтогиПрописью(ПараметрыИтогоПоСтранице, ВалютаПечати, Нумерация.НомерСтрокиНаСтранице, ТекстИтогоПоСтранице);
		ФормированиеПечатныхФормБольничнаяАптека.ВывестиОбластьПоИмени(ТабличныйДокумент, Макет, "ИтогоПрописью", ПараметрыИтогоПрописью);
		
		// Вывод области ИтогоПрописью на следующей странице
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		ПараметрыИтогоПрописью = СформироватьИтогиПрописью(ПараметрыИтогоПоОписи, ВалютаПечати, Нумерация.НомерСтроки, ТекстИтогоПоОписи);
		ФормированиеПечатныхФормБольничнаяАптека.ВывестиОбластьПоИмени(ТабличныйДокумент, Макет, "ИтогоПрописью", ПараметрыИтогоПрописью);
		
		// Вывод области КомментарииПодписи
		ФормированиеПечатныхФормБольничнаяАптека.ВывестиОбластьПоИмени(ТабличныйДокумент, Макет, "КомментарииПодписи");
		
		// Вывод области Комиссии
		Для Каждого ОбластьКомиссии Из ОбластиКомиссии Цикл
			ТабличныйДокумент.Вывести(ОбластьКомиссии);
		КонецЦикла;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьДанныеШапкиДокумента(Шапка)
	
	КлючиПараметров = ФормированиеПечатныхФормБольничнаяАптека.ПолучитьИменаКолонокТаблицы(Шапка);
	
	Параметры = Новый Структура(КлючиПараметров);
	ЗаполнитьЗначенияСвойств(Параметры, Шапка);
	
	СведенияОбОрганизации    = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Шапка.Организация, Шапка.ДатаДокумента);
	ОрганизацияПредставление = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации);
	
	МОЛ = РегистрыСведений.МатериальноОтветственныеЛица.ПолучитьДанныеОтветственного(Шапка.Склад, Шапка.ДатаДокумента);
	
	Параметры.Вставить("НомерДокумента"             , ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Шапка.НомерДокумента));
	Параметры.Вставить("ДатаДокументаИнвентаризации", НСтр("ru = 'на'") + " " + Формат(Шапка.ДатаДокумента, "ДЛФ=DD"));
	Параметры.Вставить("ОрганизацияПредставление"   , ОрганизацияПредставление);
	Параметры.Вставить("ОрганизацияОКПО"            , СведенияОбОрганизации.КодПоОКПО);
	Параметры.Вставить("МОЛОтветственный"           , МОЛ.Ответственный);
	Параметры.Вставить("МОЛФИО"                     , МОЛ.ФИО);
	Параметры.Вставить("МОЛДолжность"               , МОЛ.Должность);
	Параметры.Вставить("НачальныйНомерПоПорядку"    , 1);
	Параметры.Вставить("НомерКонца"                 , Шапка.Товары.Выбрать().Количество());
	
	Возврат Параметры;
	
КонецФункции

Функция ПолучитьТаблицуЦен(Шапка)
	
	МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Шапка.Ссылка);
	Возврат МенеджерОбъекта.ПолучитьТаблицуЦен(Шапка);
	
КонецФункции

Функция СформироватьОбластиКомиссии(Макет, Шапка)
	
	ОбластиКомиссии = Новый Массив;
	
	ПустыеСтроки = 4;
	ПредседательВСоставе = Истина;
	
	Комиссия = Шапка.ИнвентаризационнаяКомиссия.Выбрать();
	КоличествоЧленовКомиссии = Комиссия.Количество();
	
	Для НомерЧленаКомиссии = 1 По Макс(КоличествоЧленовКомиссии, ПустыеСтроки) Цикл
		
		Параметры = Новый Структура;
		
		Если НомерЧленаКомиссии > КоличествоЧленовКомиссии Тогда
			ЧленКомиссииСтатус = ?(НомерЧленаКомиссии = 1, НСтр("ru = 'Председатель комиссии'"), ?(НомерЧленаКомиссии = 2, НСтр("ru = 'Члены комиссии'"), ""));
			Параметры.Вставить("Статус", ЧленКомиссииСтатус);
		Иначе
			
			Комиссия.Следующий();
			
			Если Комиссия.Председатель И НомерЧленаКомиссии = 1 Тогда
				Параметры.Вставить("Статус", НСтр("ru = 'Председатель комиссии'"));
				ПредседательВСоставе = Истина;
			ИначеЕсли ПредседательВСоставе И НомерЧленаКомиссии = 2
				  Или НомерЧленаКомиссии = 1 Тогда
				Параметры.Вставить("Статус", НСтр("ru = 'Члены комиссии'"));
			КонецЕсли;
			
			Параметры.Вставить("ПодписьФИО"      , ФизическиеЛицаКлиентСервер.ФамилияИнициалы(СокрЛП(Комиссия.Представление)));
			Параметры.Вставить("ПодписьДолжность", Комиссия.Должность);
			
		КонецЕсли;
		
		ФормированиеПечатныхФормБольничнаяАптека.ДобавитьОбластьВМассивПоОписанию(Макет, "Подписи", ОбластиКомиссии, Параметры);
		
	КонецЦикла;
	
	Возврат ОбластиКомиссии;
	
КонецФункции

Функция ИнициализироватьСтруктуруИтогов()
	
	ПараметрыИтого = Новый Структура;
	ПараметрыИтого.Вставить("БухКоличество",           0);
	ПараметрыИтого.Вставить("БухСумма",                0);
	ПараметрыИтого.Вставить("ФактКоличество",          0);
	ПараметрыИтого.Вставить("ФактСумма",               0);
	ПараметрыИтого.Вставить("РезультатИзлишекКолво",   0);
	ПараметрыИтого.Вставить("РезультатИзлишекСумма",   0);
	ПараметрыИтого.Вставить("РезультатНедостачаКолво", 0);
	ПараметрыИтого.Вставить("РезультатНедостачаСумма", 0);
	
	Возврат ПараметрыИтого;
	
КонецФункции

Функция ИнициализироватьНумерацию()
	
	Нумерация = Новый Структура;
	Нумерация.Вставить("НомерСтроки"  , 0);
	Нумерация.Вставить("НомерСтраницы", 1);
	Нумерация.Вставить("НомерСтрокиНаСтранице", 0);
	
	Возврат Нумерация;
	
КонецФункции

Функция СформироватьИтогиПрописью(ПараметрыИсточник, ВалютаПечати, НомерСтроки, ТекстИтого)
	
	КоличествоНаименованийПрописью          = ЧислоПрописью(НомерСтроки, , ",,,,,,,,0");
	ОбщееКоличествоЕдиницФактическиПрописью = ОбщегоНазначенияБольничнаяАптека.КоличествоПрописью(ПараметрыИсточник.ФактКоличество);
	СуммаФактическиПрописью                 = РаботаСКурсамиВалют.СформироватьСуммуПрописью(ПараметрыИсточник.ФактСумма, ВалютаПечати);
	
	ПараметрыИтогов = Новый Структура;
	ПараметрыИтогов.Вставить("ТекстИтого",                              ТекстИтого);
	ПараметрыИтогов.Вставить("КоличествоНаименованийПрописью",          КоличествоНаименованийПрописью);
	ПараметрыИтогов.Вставить("ОбщееКоличествоЕдиницФактическиПрописью", ОбщееКоличествоЕдиницФактическиПрописью);
	ПараметрыИтогов.Вставить("СуммаФактическиПрописью",                 СуммаФактическиПрописью);
	
	Возврат ПараметрыИтогов;
	
КонецФункции

Функция ПроверитьВыводСтроки(ТабличныйДокумент, Макет, МассивВыводимыхОбластей, ТекущаяОбласть, ЭтоПоследняяСтрока)
	
	МассивВыводимыхОбластей.Очистить();
	МассивВыводимыхОбластей.Добавить(ТекущаяОбласть);
	МассивВыводимыхОбластей.Добавить(Макет.ПолучитьОбласть("Итого"));
	МассивВыводимыхОбластей.Добавить(Макет.ПолучитьОбласть("ИтогоПрописью"));
	Если ЭтоПоследняяСтрока Тогда
		МассивВыводимыхОбластей.Добавить(Макет.ПолучитьОбласть("Итого"));
	КонецЕсли;
	
	Возврат Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабличныйДокумент, МассивВыводимыхОбластей);
	
КонецФункции

Функция МетаданныеМакета()
	
	Возврат Метаданные.Обработки.ПечатьИнвентаризационнаяОписьНФА_0504087.Макеты.ПФ_MXL_ИнвентаризационнаяОписьНФА_0504087;
	
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции

#КонецЕсли
