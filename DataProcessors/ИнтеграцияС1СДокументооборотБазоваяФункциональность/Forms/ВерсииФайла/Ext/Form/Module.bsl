#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("ВладелецФайла", ВладелецФайла);
	
	Если ИнтеграцияС1СДокументооборотБазоваяФункциональностьПовтИсп.ДоступенФункционалВерсииСервиса("1.4.6.1") Тогда
		Параметры.Свойство("ID", ИдентификаторФайла);
		Параметры.Свойство("Наименование", НаименованиеФайла);
		Параметры.Свойство("ТекущаяВерсияID", ТекущаяВерсияID);
		ЗаполнитьВерсииФайла();
	Иначе
		Элементы.ГруппаСтраницыПодключения.ТекущаяСтраница = Элементы.СтраницаФункционалНедоступен;
	КонецЕсли;
	
	Элементы.ВерсииНомер.Видимость =
		ИнтеграцияС1СДокументооборотБазоваяФункциональностьПовтИсп.ДоступенФункционалВерсииСервиса("3.0.9.18");
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВерсииФайла(Обновление = Ложь)
	
	Версии.Очистить();
	Если Не ЗначениеЗаполнено(ИдентификаторФайла) Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ТекущаяВерсияID) Или Обновление Тогда
		Прокси = ИнтеграцияС1СДокументооборотБазоваяФункциональностьПовтИсп.ПолучитьПрокси();
		СведенияОФайле = ИнтеграцияС1СДокументооборотБазоваяФункциональность.ПолучитьОбъект(
			Прокси,
			"DMFile",
			ИдентификаторФайла,
			"activeVersion");
		ТекущаяВерсияID = СведенияОФайле.activeVersion.objectID.ID;
	КонецЕсли;
	
	ВерсииФайла = ИнтеграцияС1СДокументооборотБазоваяФункциональностьВызовСервера.ВерсииФайла(ИдентификаторФайла);
	Для Каждого ОбъектСписка Из ВерсииФайла Цикл
		ВерсияФайла = ОбъектСписка.object;
		СтрокаВерсии = Версии.Добавить();
		СтрокаВерсии.Идентификатор = ВерсияФайла.objectID.ID;
		СтрокаВерсии.Расширение = ВерсияФайла.extension;
		
		ПометкаУдаления = Ложь;
		Если ИнтеграцияС1СДокументооборотБазоваяФункциональность.СвойствоУстановлено(ВерсияФайла, "deletionMark") Тогда
			ПометкаУдаления = ВерсияФайла.deletionMark;
		КонецЕсли;
		СтрокаВерсии.ИндексКартинки =
			ИнтеграцияС1СДокументооборотБазоваяФункциональность.ИндексПиктограммыФайла(
				СтрокаВерсии.Расширение,
				ПометкаУдаления);
		
		СтрокаВерсии.Наименование = ВерсияФайла.name;
		СтрокаВерсии.Автор = ВерсияФайла.author.name;
		СтрокаВерсии.Размер = ВерсияФайла.size;
		СтрокаВерсии.ДатаСоздания = ВерсияФайла.creationDate;
		СтрокаВерсии.Активная = (СтрокаВерсии.Идентификатор = ТекущаяВерсияID);
		Если ВерсияФайла.Свойства().Получить("modificationDateUniversal") <> Неопределено Тогда
			СтрокаВерсии.ДатаМодификации = МестноеВремя(ВерсияФайла.modificationDateUniversal);
		Иначе
			СтрокаВерсии.ДатаМодификации = ВерсияФайла.modificationDate;
		КонецЕсли;
		Если ВерсияФайла.Свойства().Получить("comment") <> Неопределено Тогда
			СтрокаВерсии.Комментарий = ВерсияФайла.comment;
		КонецЕсли;
		Если ИнтеграцияС1СДокументооборотБазоваяФункциональность.СвойствоУстановлено(ВерсияФайла, "number") Тогда
			СтрокаВерсии.Номер = ВерсияФайла.number;
		КонецЕсли;
	КонецЦикла;
	
	Версии.Сортировать("ДатаСоздания УБЫВ");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыВерсии

&НаКлиенте
Процедура ВерсииВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.Версии.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		ИнтеграцияС1СДокументооборотБазоваяФункциональностьКлиент.ОткрытьВерсиюФайла(
			ТекущиеДанные.Идентификатор,
			ТекущиеДанные.Наименование,
			ТекущиеДанные.Расширение,
			УникальныйИдентификатор);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Обновить(Команда)
	
	ОбновитьСписокВерсий();
	
КонецПроцедуры

&НаКлиенте
Процедура Просмотреть(Команда)
	
	ТекущиеДанные = Элементы.Версии.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		ИнтеграцияС1СДокументооборотБазоваяФункциональностьКлиент.ОткрытьВерсиюФайла(
			ТекущиеДанные.Идентификатор,
			ТекущиеДанные.Наименование,
			ТекущиеДанные.Расширение,
			УникальныйИдентификатор);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СделатьАктивной(Команда)
	
	ТекущиеДанные = Элементы.Версии.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("СделатьАктивнойЗавершение", ЭтотОбъект);
		ИнтеграцияС1СДокументооборотБазоваяФункциональностьКлиент.СделатьВерсиюАктивной(
			НаименованиеФайла,
			ИдентификаторФайла,
			ВладелецФайла,
			ТекущиеДанные.Идентификатор,
			ОписаниеОповещения,
			УникальныйИдентификатор);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьКак(Команда)
	
	ТекущиеДанные = Элементы.Версии.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		ИнтеграцияС1СДокументооборотБазоваяФункциональностьКлиент.СохранитьВерсиюКак(
			ТекущиеДанные.Идентификатор,
			ТекущиеДанные.Наименование,
			ТекущиеДанные.Расширение,
			УникальныйИдентификатор);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура СделатьАктивнойЗавершение(Результат, Параметры) Экспорт
	
	ТекущаяВерсияID = "";
	ОбновитьСписокВерсий();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписокВерсий()
	
	Если Элементы.Версии.ТекущиеДанные = Неопределено Тогда
		ТекущаяСтрока = Неопределено;
	Иначе
		ТекущаяСтрока = Элементы.Версии.ТекущиеДанные.ПолучитьИдентификатор();
	КонецЕсли;
	
	ЗаполнитьВерсииФайла(Истина);
	
	Элементы.Версии.ТекущаяСтрока = ТекущаяСтрока;
	
КонецПроцедуры

#КонецОбласти