
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Документ = Неопределено Тогда
		ТекстОшибки = НСтр("ru='Предусмотрено открытие обработки только из документов.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстОшибки,,,, Отказ);
		Возврат;
	КонецЕсли;
	
	Дата                                    = Параметры.Дата;
	Документ                                = Параметры.Документ;
	ИсточникФинансирования                  = Параметры.ИсточникФинансирования;
	МестоХраненияОстатка                    = Параметры.МестоХраненияОстатка;
	Организация                             = Параметры.Организация;
	Склад                                   = Параметры.Склад;
	РежимПодбораБезКоличественныхПараметров = Параметры.РежимПодбораБезКоличественныхПараметров;
	РежимПодбораБезРазрезовУчета            = Параметры.РежимПодбораБезРазрезовУчета;
	РежимПодбораБезСуммовыхПараметров       = Параметры.РежимПодбораБезСуммовыхПараметров;
	ОтборПоТипуНоменклатуры                 = ОбщегоНазначения.СкопироватьРекурсивно(Параметры.ОтборПоТипуНоменклатуры, Истина);
	Отбор                                   = ОбщегоНазначения.СкопироватьРекурсивно(Параметры.Отбор, Истина);
	ПользовательскийОтбор                   = ОбщегоНазначения.СкопироватьРекурсивно(Параметры.ПользовательскийОтбор, Истина);
	
	ТипСЭМД = Параметры.ТипСЭМД;
	
	УстановитьНастройкиФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ПодборТоваровКлиент.ОбработатьПодборТоваровПоЗаказуВДокументСписания(ВыбранноеЗначение, ИсточникВыбора) Тогда
		Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
			
			ЗакрыватьПриВыборе = Ложь;
			
			ВыбранноеЗначение.Вставить("ИдентификаторСообщенияРЭМД", ИдентификаторСообщенияРЭМД);
			ОповеститьОВыборе(ВыбранноеЗначение);
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ
#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПоискДокументовВРЭМД(Команда)
	
	НомерСтраницыСпискаДокументов = 0;
	
	НайтиДокументыРЭМД();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоискДокументовВРЭМДСледующаяСтраница(Команда)
	
	НомерСтраницыСпискаДокументов = НомерСтраницыСпискаДокументов + 1;
	
	НайтиДокументыРЭМД();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоискДокументовВРЭМДПредыдущаяСтраница(Команда)
	
	НомерСтраницыСпискаДокументов = НомерСтраницыСпискаДокументов - 1;
	
	НайтиДокументыРЭМД();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьДокументРЭМД(Команда)
	
	ТекущиеДанные = Элементы.ДокументыРЭМД.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	НачатьЗагрузкуДокументаРЭМД(ТекущиеДанные.ИдентификаторРЭМД);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодобратьТоварПоСЭМД(Команда)
	
	ПараметрыПодбора = Новый Структура;
	ПараметрыПодбора.Вставить("Документ"                , Документ);
	ПараметрыПодбора.Вставить("Дата"                    , Дата);
	ПараметрыПодбора.Вставить("Организация"             , Организация);
	ПараметрыПодбора.Вставить("МестоХраненияОстатка"    , МестоХраненияОстатка);
	ПараметрыПодбора.Вставить("Склад"                   , Склад);
	ПараметрыПодбора.Вставить("ИсточникФинансирования"  , ИсточникФинансирования);
	ПараметрыПодбора.Вставить("РежимПодбораБезСуммовыхПараметров", РежимПодбораБезСуммовыхПараметров);
	ПараметрыПодбора.Вставить("ОтборПоТипуНоменклатуры" , ОтборПоТипуНоменклатуры);
	
	Если ЗначениеЗаполнено(Отбор) Тогда
		ПараметрыПодбора.Вставить("Отбор", Отбор);
	КонецЕсли;
	Если ЗначениеЗаполнено(ПользовательскийОтбор) Тогда
		ПараметрыПодбора.Вставить("ПользовательскийОтбор", ПользовательскийОтбор);
	КонецЕсли;
	
	РезультатПодготовкиДанных = ПодготовитьДанныеДляПодбораТоваровПоСЭМД(ПараметрыПодбора);
	
	Если ЗначениеЗаполнено(РезультатПодготовкиДанных.Ошибки) Тогда
		Для Каждого ТекстОшибки Из РезультатПодготовкиДанных.Ошибки Цикл
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстОшибки);
		КонецЦикла;
	КонецЕсли;
	
	Если РезультатПодготовкиДанных.Статус = "Ошибка" Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыПодбора.Вставить("АдресТоваровВХранилище", РезультатПодготовкиДанных.АдресДанных);
	
	Оповестить = Новый ОписаниеОповещения("ПослеЗакрытияФормыПодбораТоваров", ЭтотОбъект);
	ПодборТоваровКлиент.ОткрытьПодборТоваровПоЗаказуВДокументСписания(ЭтотОбъект, ПараметрыПодбора,, Оповестить);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияФормыПодбораТоваров(Результат, Контекст) Экспорт
	
	Если Открыта() И ЗначениеЗаполнено(Результат) Тогда
		Закрыть(Результат);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти // ОбработчикиКомандФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ
#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ДокументыРЭМДВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.ДокументыРЭМД.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	НачатьЗагрузкуДокументаРЭМД(ТекущиеДанные.ИдентификаторРЭМД);
	
КонецПроцедуры

&НаКлиенте
Процедура ТекстСЭМДПриИзменении(Элемент)
	
	СформироватьПредставлениеСЭМД();
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийЭлементовФормы

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьНастройкиФормы()
	
	ОтобразитьПанельНавигацииДокументов(Элементы);
	
	РежимОтладки = ОбщегоНазначенияКлиентСервер.РежимОтладки();
	
	ИменаЭлементовНеВидимость = Новый Массив;
	ИменаЭлементовНеВидимость.Добавить(Элементы.ТекстСЭМД.Имя);
	
	Для Каждого ИмяЭлемента Из ИменаЭлементовНеВидимость Цикл
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, ИмяЭлемента, "Видимость", РежимОтладки);
	КонецЦикла;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПолучениеДанныхИзРЭМД
#Область ПолучениеДанныхИзРЭМД

&НаСервере
Процедура НайтиДокументыРЭМД()
	
	ДокументыРЭМД.Очистить();
	
	КодТипаСЭМД = ИнтеграцияРЭМДБольничнаяАптека.ПолучитьКодТипаСЭМДпоТипуСЭМД(ТипСЭМД);
	
	ПериодСозданияИлиРегистрации = Новый Структура("ДатаСозданияДокументаНачало, ДатаСозданияДокументаОкончание, ДатаРегистрацииДокументаНачало, ДатаРегистрацииДокументаОкончание");
	Если ЗначениеЗаполнено(ПериодСоздания) Тогда
		ПериодСозданияИлиРегистрации.ДатаСозданияДокументаНачало       = ПериодСоздания.ДатаНачала;
		ПериодСозданияИлиРегистрации.ДатаСозданияДокументаОкончание    = ПериодСоздания.ДатаОкончания;
	КонецЕсли;
	Если ЗначениеЗаполнено(ПериодРегистрации) Тогда
		ПериодСозданияИлиРегистрации.ДатаРегистрацииДокументаНачало    = ПериодРегистрации.ДатаНачала;
		ПериодСозданияИлиРегистрации.ДатаРегистрацииДокументаОкончание = ПериодРегистрации.ДатаОкончания;
	КонецЕсли;
	
	Директивы = ?(ДирективаДляРМИСНеПеренаправлятьЗапросВРЭМД, "RMIS_ONLY", "");
	
	РезультатПоискаДокументов = ФедеральныеВебСервисыРЭМД.ПоискДокументовВРЭМД(,, КодТипаСЭМД, "", ПериодСозданияИлиРегистрации,, ПациентСНИЛС, НомерСтраницыСпискаДокументов, Директивы);
	Если Не ЗначениеЗаполнено(РезультатПоискаДокументов) Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого ДокИнфо Из РезультатПоискаДокументов.Найденные Цикл
		
		СтрокаТаблицы = ДокументыРЭМД.Добавить();
		СтрокаТаблицы.ИдентификаторРЭМД = ДокИнфо.emdrId;
		СтрокаТаблицы.ИдентификаторМИС  = ДокИнфо.localUid;
		СтрокаТаблицы.ДатаРегистрации   = ДатаИзСтрокиXML(ДокИнфо.registrationDate);
		
		// Получение метаописания документа
		EMDRId = СтрокаТаблицы.ИдентификаторРЭМД;
		Если ДирективаДляРМИСНеПеренаправлятьЗапросВРЭМД И СтрНайти(EMDRId, "rmis:uuid:") = 0 Тогда
			EMDRId = "rmis:uuid:" + EMDRId;
		КонецЕсли;
		
		РезультатПолученияМетаописанияДокумента = ФедеральныеВебСервисыРЭМД.ПолучитьМетаданныеДокументаИзРЭМД(EMDRId);
		Если ЗначениеЗаполнено(РезультатПолученияМетаописанияДокумента) Тогда
			СтрокаТаблицы.НомерДокумента        = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(РезультатПолученияМетаописанияДокумента, "documentNumber");
			СтрокаТаблицы.СистемноеНаименование = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(РезультатПолученияМетаописанияДокумента, "systemName");
			СтрокаТаблицы.Описание              = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(РезультатПолученияМетаописанияДокумента, "description");
		КонецЕсли;
		
	КонецЦикла;
	
	ОтобразитьПанельНавигацииДокументов(Элементы,
		РезультатПоискаДокументов.ЕстьЕщеСтраницы = "true",
		НомерСтраницыСпискаДокументов > 0);
	
КонецПроцедуры

#КонецОбласти // ПолучениеДанныхИзРЭМД

////////////////////////////////////////////////////////////////////////////////
// ЗагрузкаДанныхИзРЭМД
#Область ЗагрузкаДанныхИзРЭМД

&НаКлиенте
Процедура НачатьЗагрузкуДокументаРЭМД(ИдентификаторРЭМД)
	
	Если Не ЗначениеЗаполнено(ИдентификаторРЭМД) Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОжиданиеФайлаРЭМДКодЗапроса) Тогда
		Текст = НСтр("ru = 'Следует дождаться получения документа с идентификатором [%1]'");
		Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Текст, ОжиданиеФайлаРЭМДКодЗапроса);
		ОбщегоНазначенияКлиент.СообщитьПользователю(Текст);
		Возврат;
	КонецЕсли;
	
	EMDRId = ИдентификаторРЭМД;
	Если ДирективаДляРМИСНеПеренаправлятьЗапросВРЭМД И СтрНайти(EMDRId, "rmis:uuid:") = 0 Тогда
		EMDRId = "rmis:uuid:" + EMDRId;
	КонецЕсли;
	
	ОжиданиеФайлаРЭМДКодЗапроса = ФедеральныеВебСервисыРЭМД.ЗапроситьДокументИзРЭМД(EMDRId);
	
	ОбработчикОжиданияЗагрузкиДокументаРЭМД("Начало");
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикОжиданияЗагрузкиДокументаРЭМД(Вариант)
	
	Если Вариант = "Начало" Тогда
		
		Если Не ЗначениеЗаполнено(ОжиданиеФайлаРЭМДКодЗапроса) Тогда
			Возврат;
		КонецЕсли;
		
		ОжиданиеФайлаРЭМДКоличествоПроверок = 0;
		
		Элементы.ДокументыОжиданиеЗагрузки.Видимость = Истина;
		
		ПодключитьОбработчикОжидания("ПроверитьПолучениеФайловДокументаРЭМД", 10, Ложь);
		
	ИначеЕсли Вариант = "Выполнение" Тогда
		
		ОжиданиеФайлаРЭМДКоличествоПроверок = ОжиданиеФайлаРЭМДКоличествоПроверок + 1;
		
		Если ОжиданиеФайлаРЭМДКоличествоПроверок = 5 Тогда
			
			ОтключитьОбработчикОжидания("ПроверитьПолучениеФайловДокументаРЭМД");
			ПодключитьОбработчикОжидания("ПроверитьПолучениеФайловДокументаРЭМД", 30, Ложь);
			
		ИначеЕсли ОжиданиеФайлаРЭМДКоличествоПроверок = 20 Тогда
			
			ОтключитьОбработчикОжидания("ПроверитьПолучениеФайловДокументаРЭМД");
			ПодключитьОбработчикОжидания("ПроверитьПолучениеФайловДокументаРЭМД", 60, Ложь);
			
		КонецЕсли;
		
	ИначеЕсли Вариант = "Конец" Тогда
		
		ОжиданиеФайлаРЭМДКоличествоПроверок = 0;
		
		Элементы.ДокументыОжиданиеЗагрузки.Видимость = Ложь;
		
		ОтключитьОбработчикОжидания("ПроверитьПолучениеФайловДокументаРЭМД");
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьПолучениеФайловДокументаРЭМД()
	
	Результат = ПроверитьПолучениеФайловДокументаРЭМДНаСервере(ОжиданиеФайлаРЭМДКодЗапроса);
	
	Если Результат.Статус = "Выполняется" Тогда
		ОбработчикОжиданияЗагрузкиДокументаРЭМД("Выполнение");
		Возврат;
	КонецЕсли;
	
	ОбработчикОжиданияЗагрузкиДокументаРЭМД("Конец");
	
	Если Результат.Статус = "Ошибка" Тогда
		ТекстОшибки = НСтр("ru = 'Не удалось получить файл по причине: %1'");
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, Результат.ТекстОшибки);
		Возврат;
	КонецЕсли;
	
	ОбработатьПолученныеФайлыДокументаРЭМД(Результат);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПроверитьПолучениеФайловДокументаРЭМДНаСервере(КодЗапросаРЭМД)
	
	Результат = Новый Структура("Статус, ПутьКФайлу, ТекстОшибки", "Ошибка", "", "");
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ФедеральныеВебСервисыСообщенияРЭМД.ДатаОтвета   КАК ДатаОтвета,
	|	ФедеральныеВебСервисыСообщенияРЭМД.ПутьКФайлу   КАК ПутьКФайлу,
	|	ФедеральныеВебСервисыСообщенияРЭМД.ТекстОшибки  КАК ТекстОшибки
	|ИЗ
	|	РегистрСведений.ФедеральныеВебСервисыСообщенияРЭМД КАК ФедеральныеВебСервисыСообщенияРЭМД
	|ГДЕ
	|	ФедеральныеВебСервисыСообщенияРЭМД.ИдентификаторСообщения = &ИдентификаторСообщения
	|");
	
	Запрос.УстановитьПараметр("ИдентификаторСообщения", КодЗапросаРЭМД);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		
		ЗаполнитьЗначенияСвойств(Результат, Выборка);
		
		Если ЗначениеЗаполнено(Выборка.ТекстОшибки) Тогда
			Результат.Статус = "Ошибка";
		ИначеЕсли ЗначениеЗаполнено(Выборка.ДатаОтвета) Тогда
			Если Не ЗначениеЗаполнено(Выборка.ПутьКФайлу) Тогда
				Результат.Статус = "Ошибка";
				Результат.ТекстОшибки = НСтр("ru = 'Не получен путь к файлу.'");
			Иначе
				Результат.Статус = "Успешно";
			КонецЕсли;
		Иначе
			Результат.Статус = "Выполняется";
		КонецЕсли;
		
	Иначе
		
		Результат.ТекстОшибки = НСтр("ru = 'Сообщение к РЭМД с кодом [%1] не зарегистрировано.'");
		Результат.ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Результат.ТекстОшибки, КодЗапросаРЭМД);
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ОбработатьПолученныеФайлыДокументаРЭМД(Результат)
	
	ОбработатьПолученныеФайлыДокументаРЭМДНаСервере(Результат);
	
	Элементы.СтраницыПомощника.ТекущаяСтраница = Элементы.СтраницаОтображенияДокументаРЭМД;
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьПолученныеФайлыДокументаРЭМДНаСервере(Знач Результат)
	
	НачатьТранзакцию();
	Попытка
		
		ТекстСЭМД = ПолучитьСтрокуИзДвоичныхДанных(Новый ДвоичныеДанные(Результат.ПутьКФайлу));
		
		ИнтеграцияРЭМДБольничнаяАптека.ЗаписатьИдентификаторВходящегоСЭМД(Документ, ТипСЭМД, ОжиданиеФайлаРЭМДКодЗапроса);
		
		СформироватьПредставлениеСЭМД();
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		
		ИмяСобытия = НСтр("ru = ''", ОбщегоНазначения.КодОсновногоЯзыка());
		ПодробныйТекстОшибки = ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Ошибка,,, ПодробныйТекстОшибки);
		
		КраткийТекстОшибки = ОбработкаОшибок.КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
		ОбщегоНазначения.СообщитьПользователю(КраткийТекстОшибки);
		
	КонецПопытки;
	
	ОжиданиеФайлаРЭМДКодЗапроса = Неопределено;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьПредставлениеСЭМД()
	
	Если Не ЗначениеЗаполнено(ТекстСЭМД) Тогда
		ПредставлениеСЭМД = Неопределено;
		Возврат;
	КонецЕсли;
	
	Попытка
		
		РезультатПреобразования = ВизуализаторCDA.CDA2ТабличныйДокумент(ТекстСЭМД);
		Если РезультатПреобразования <> Неопределено Тогда
			ПредставлениеСЭМД.Вывести(РезультатПреобразования);
		КонецЕсли;
		
	Исключение
		
		ТекстОшибки = НСтр("ru = 'Не удалось отобразить представление СЭМД по причине:'") + Символы.ПС;
		
		ИмяСобытия = НСтр("ru = 'Интеграция РЭМД.Визуализация СЭМД'", ОбщегоНазначения.КодОсновногоЯзыка());
		ПодробныйТекстОшибки = ТекстОшибки + ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Ошибка,,, ПодробныйТекстОшибки);
		
		КраткийТекстОшибки = ТекстОшибки + ОбработкаОшибок.КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
		ОбщегоНазначения.СообщитьПользователю(КраткийТекстОшибки);
		
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти // ЗагрузкаДанныхИзРЭМД

////////////////////////////////////////////////////////////////////////////////
// ПодборТоваровИзСЭМД
#Область ПодборТоваровИзСЭМД

&НаСервере
Функция ПодготовитьДанныеДляПодбораТоваровПоСЭМД(Знач ПараметрыПодбора)
	
	Менеджер = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Документ);
	Результат = Менеджер.ПодготовитьДанныеДляПодбораТоваровПоСЭМД(ТекстСЭМД, ТипСЭМД, ПараметрыПодбора);
	
	Если Результат.Статус = "Ошибка" Тогда
		Возврат Результат;
	КонецЕсли;
	
	Результат.Вставить("АдресДанных", ПоместитьВоВременноеХранилище(Результат.Данные, УникальныйИдентификатор));
	Результат.Удалить("Данные");
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти // ПодборТоваровИзСЭМД

////////////////////////////////////////////////////////////////////////////////
// Прочее
#Область Прочее

&НаКлиентеНаСервереБезКонтекста
Процедура ОтобразитьПанельНавигацииДокументов(Элементы, ЕстьПредыдущаяСтраница = Ложь, ЕстьСледующаяСтраница = Ложь)
	
	Элементы.ПоискДокументовВРЭМДСледующаяСтраница.Видимость = ЕстьСледующаяСтраница;
	Элементы.ПоискДокументовВРЭМДПредыдущаяСтраница.Видимость = ЕстьПредыдущаяСтраница;
	Элементы.ДокументыНавигация.Видимость = ЕстьСледующаяСтраница Или ЕстьПредыдущаяСтраница;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ДатаИзСтрокиXML(ДатаXML)
	Возврат XMLЗначение(Тип("Дата"), ДатаXML);
КонецФункции

#КонецОбласти // Прочее

#КонецОбласти // СлужебныеПроцедурыИФункции
