
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ЭтотОбъект.ДатаСвертки = Параметры.ДатаСвертки;
	ДанныеРасшифровки = ПоместитьВоВременноеХранилище(ДанныеРасшифровки, УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Сформировать();
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНДЫ ФОРМЫ
#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СформироватьОтчет(Команда)
	
	Сформировать();
	
КонецПроцедуры

#КонецОбласти // ОбработчикиКомандФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ
#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ЗначениеРасшифровки = ПолучитьЗначениеРасшифровки(Расшифровка);
	Если ЗначениеЗаполнено(ЗначениеРасшифровки) Тогда
		ПоказатьЗначение(, ЗначениеРасшифровки);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РезультатОбработкаДополнительнойРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	// Не будем обрабатывать нажатие на правую кнопку мыши.
	// Покажем стандартное контекстное меню ячейки табличного документа.
	Расшифровка = Неопределено;
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийЭлементовФормы

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура Сформировать()
	
	ОчиститьСообщения();
	
	ДлительнаяОперация = СформироватьОтчетНаСервере();
	
	ОбщегоНазначенияКлиентСервер.УстановитьСостояниеПоляТабличногоДокумента(Элементы.Результат, "ФормированиеОтчета");
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	Оповестить = Новый ОписаниеОповещения("СформироватьОтчетЗавершение", ЭтотОбъект);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, Оповестить, ПараметрыОжидания);
	
КонецПроцедуры

&НаСервере
Функция СформироватьОтчетНаСервере()
	
	ОтменитьВыполнениеЗадания();
	
	ИдентификаторЗадания = Неопределено;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСостояниеПоляТабличногоДокумента(Элементы.Результат, "НеИспользовать");
	
	ПараметрыОтчета = Новый Структура;
	ПараметрыОтчета.Вставить("ДатаСвертки"      , ДатаСвертки);
	ПараметрыОтчета.Вставить("ДанныеРасшифровки", ДанныеРасшифровки);
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = ОбщегоНазначенияБольничнаяАптекаКлиентСервер.ПолучитьНаименованиеЗаданияВыполненияОтчета(ЭтотОбъект);
	
	ДлительнаяОперация = ДлительныеОперации.ВыполнитьВФоне(
		"Обработки.СверткаИнформационнойБазы.СформироватьОтчет",
		ПараметрыОтчета,
		ПараметрыВыполнения);
	
	ИдентификаторЗадания = ДлительнаяОперация.ИдентификаторЗадания;
	
	Возврат ДлительнаяОперация;
	
КонецФункции

&НаКлиенте
Процедура СформироватьОтчетЗавершение(РезультатДлительнойОперации, НеИспользуется) Экспорт
	
	ИдентификаторЗадания = Неопределено;
	
	Если ТипЗнч(РезультатДлительнойОперации) = Тип("Структура") Тогда
		Если РезультатДлительнойОперации.Статус = "Выполнено" Тогда
			ЗагрузитьПодготовленныеДанные(РезультатДлительнойОперации.АдресРезультата);
		Иначе
			ОбщегоНазначенияКлиентСервер.УстановитьСостояниеПоляТабличногоДокумента(Элементы.Результат, "НеИспользовать");
			Если РезультатДлительнойОперации.Статус = "Ошибка" Тогда
				ВызватьИсключение РезультатДлительнойОперации.КраткоеПредставлениеОшибки;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьПодготовленныеДанные(Знач АдресРезультата)
	
	РезультатВыполнения = ПолучитьИзВременногоХранилища(АдресРезультата);
	
	Если РезультатВыполнения.Свойство("ОписаниеОшибки") Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(РезультатВыполнения.ОписаниеОшибки);
	КонецЕсли;
	
	Результат = РезультатВыполнения.Результат;
	
	ИдентификаторЗадания = Неопределено;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСостояниеПоляТабличногоДокумента(Элементы.Результат, "НеИспользовать");
	
КонецПроцедуры

&НаСервере
Процедура ОтменитьВыполнениеЗадания()
	
	ДлительныеОперации.ОтменитьВыполнениеЗадания(ИдентификаторЗадания);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьЗначениеРасшифровки(Расшифровка)
	
	ДанныеОбъекта = ПолучитьИзВременногоХранилища(ДанныеРасшифровки);
	ДанныеРасшифровкиОбъект = ДанныеОбъекта.ДанныеРасшифровки;
	Возврат ДанныеРасшифровкиОбъект.Элементы[Расшифровка].ПолучитьПоля()[0].Значение;
	
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции
