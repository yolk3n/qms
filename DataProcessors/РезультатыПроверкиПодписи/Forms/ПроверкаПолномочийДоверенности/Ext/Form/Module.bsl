// @strict-types

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Параметры, "ЭтоОперацияЭДО", Ложь) Тогда
		Заголовок = НСтр("ru = 'Действие не выполнено'");
	Иначе
		Элементы.ДекорацияПредупреждение.Видимость = Ложь;
	КонецЕсли;
	
	Параметры.Свойство("ПодписанныйОбъект", ПодписанныйОбъект);
	Параметры.Свойство("ХешПодписи", ХешПодписи);
	Параметры.Свойство("ПроверкаРодительскихПолномочий", ПроверкаРодительскихПолномочий);
	Параметры.Свойство("ИмяПроверки", ИмяПроверки);
	РезультатПроверки = МашиночитаемыеДоверенности.РезультатПроверкиПодписи(ПодписанныйОбъект, ХешПодписи);
	
	Если Не ЗначениеЗаполнено(ИмяПроверки) Тогда
		ИмяПроверки = "ПроверкаПолномочий";	
	КонецЕсли;
	
	ПолномочияПодтверждены = РезультатПроверки.ПротоколПроверки.ПроверкаМЧД[ИмяПроверки].Успех;
	
	Если ПолномочияПодтверждены = Неопределено Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ПредыдущееЗначениеПроверки = ПолномочияПодтверждены;
	
	Доверенность = 
		?(ЗначениеЗаполнено(Параметры.НоваяДоверенность), Параметры.НоваяДоверенность, РезультатПроверки.Доверенность);

	Если ПроверкаРодительскихПолномочий Тогда
		НомераДоверенностей = РезультатПроверки.ПротоколПроверки.ПроверкаМЧД[ИмяПроверки].НомерДоверенности;
		МассивНомеров = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(НомераДоверенностей);
		НомерРодительскойДоверенности = МассивНомеров[МассивНомеров.ВГраница()];
		Доверенность = МашиночитаемыеДоверенности.ПолучитьМЧДКонтрагента(НомерРодительскойДоверенности);
	КонецЕсли;
	
	Сообщение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПодписанныйОбъект, "ВладелецФайла") ;
	ЭлектронныйДокумент = ЭлектронныеДокументыЭДО.ЭлектронныйДокументСообщенияЭДО(Сообщение);
	Подписи = ЭлектронныеДокументыЭДО.УстановленныеПодписиСУчетомДоверенностей(Сообщение);
	
	Для Каждого Подпись Из Подписи Цикл
		
		Если Подпись.СвойстваПодписи.ХешПодписи = ХешПодписи Тогда
			
			Сертификат = Подпись.СвойстваПодписи.Сертификат.Получить();
			Подписант = Подпись.СвойстваПодписи.Владелец;
			Прервать;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ПолномочияСтрокой = МашиночитаемыеДоверенности.ТекстПолномочий(, Доверенность);
	
	ТекстПричины = НСтр("ru = 'В документе не проверены полномочия доверенности'");
	
	Если ПустаяСтрока(Параметры.ТекстОшибки) Тогда
		
		Если НЕ ПолномочияПодтверждены Тогда
			
			ТекстОшибки = РезультатПроверки.ПротоколПроверки.ПроверкаМЧД.ПроверкаПолномочий.Ошибка;
			
			Если НЕ ПустаяСтрока(ТекстОшибки) Тогда
				ТекстПричины = ТекстОшибки;
			КонецЕсли;
			
		КонецЕсли;
		
	Иначе
		
		ТекстПричины = Параметры.ТекстОшибки;
		
	КонецЕсли;
	
	Если Элементы.ДекорацияПредупреждение.Видимость Тогда
		
		ШаблонПредупреждения = НСтр("ru = 'Не удалось выполнить действие. %1.
			|Выполните ручную проверку и повторите действие.'");
		Элементы.ДекорацияПредупреждение.Заголовок = СтрШаблон(ШаблонПредупреждения, ТекстПричины);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ЭлектронныйДокументНажатие(Элемент, СтандартнаяОбработка)
	ПоказатьЗначение(, ЭлектронныйДокумент);
КонецПроцедуры

&НаКлиенте
Процедура СертификатНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	АдресДанныхСертификата = АдресДанныхСертификата();
	
	Если АдресДанныхСертификата <> Неопределено Тогда
		ИнтеграцияБСПБЭДКлиент.ПоказатьСертификат(АдресДанныхСертификата);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Принять(Команда)
	
	Если ПредыдущееЗначениеПроверки <> ПолномочияПодтверждены Тогда
		
		РезультатПроверки = Новый Структура();
		РезультатПроверки.Вставить("ПодписанныйОбъект", ПодписанныйОбъект);
		РезультатПроверки.Вставить("ХешПодписи", ХешПодписи);
		РезультатПроверки.Вставить("ПолномочияПодтверждены", ПолномочияПодтверждены);
		РезультатПроверки.Вставить("ТекстОшибки", "");
		РезультатПроверки.Вставить("ИмяПроверки", ИмяПроверки);
		РезультатПроверки.Вставить("НомерРодительскойДоверенности", НомерРодительскойДоверенности);
		
		Если ПредыдущееЗначениеПроверки = Истина И НЕ ПолномочияПодтверждены Тогда
			
			Оповещение = Новый ОписаниеОповещения(
				"ПослеУточненияПричиныНесоответствияПолномочий", ЭтотОбъект, РезультатПроверки);
			ОткрытьФорму("Обработка.РезультатыПроверкиПодписи.Форма.ВводПричиныНесоответствияПолномочий",,
				ЭтотОбъект,,,, Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
				
		Иначе
			
			Закрыть(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(РезультатПроверки));
			
		КонецЕсли;
		
		
	Иначе
		
		Закрыть();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПослеУточненияПричиныНесоответствияПолномочий(Результат, РезультатПроверки) Экспорт
	
	Если ТипЗнч(Результат) = Тип("Строка") Тогда
		
		РезультатПроверки.ТекстОшибки = Результат;
		Закрыть(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(РезультатПроверки));
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция АдресДанныхСертификата()
	Возврат ПоместитьВоВременноеХранилище(Сертификат, УникальныйИдентификатор);
КонецФункции

#КонецОбласти
