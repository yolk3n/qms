// @strict-types

#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОбновитьПрогресс();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ДанныеПроверки = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(
		МашиночитаемыеДоверенностиКлиентСервер.НовыеПараметрыПроверкиПолномочий());
	Параметры.Свойство("ДанныеПроверки", ДанныеПроверки);
	
	ЗаполнитьТаблицуДоверенностей(ДанныеПроверки);
	
	ВывестиТекстПредупреждения();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДоверенности

&НаКлиенте
Процедура ПолномочияПодтвержденыПриИзменении(Элемент)
	ОбновитьПрогресс();
КонецПроцедуры

&НаКлиенте
Процедура ДоверенностиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ДанныеСтроки = Элементы.Доверенности.ТекущиеДанные;
	
	Если ДанныеСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Поле = Элементы.ЭлектронныйДокумент ИЛИ Поле = Элементы.Доверенность Тогда
		
		ПоказатьЗначение(, ДанныеСтроки[Поле.Имя]);
		
	ИначеЕсли Поле = Элементы.Представитель Тогда
		
		АдресДанныхСертификата = АдресДанныхСертификата(ДанныеСтроки.Сертификат);
		
		Если АдресДанныхСертификата <> Неопределено Тогда
			ИнтеграцияБСПБЭДКлиент.ПоказатьСертификат(АдресДанныхСертификата);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДоверенностиПриАктивизацииСтроки(Элемент)
	
	ДанныеСтроки = Элементы.Доверенности.ТекущиеДанные;
	
	Если ДанныеСтроки = Неопределено Тогда
		ТекстПолномочий = "";
	Иначе
		ТекстПолномочий = ДанныеСтроки.ТекстПолномочий;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПометитьПроверенными(Команда)
	
	Для Каждого ИдСтроки Из Элементы.Доверенности.ВыделенныеСтроки Цикл
		Доверенности[ИдСтроки].ПолномочияПодтверждены = Истина;
	КонецЦикла;
	
	ОбновитьПрогресс();
	
КонецПроцедуры

&НаКлиенте
Процедура ПометитьНепроверенными(Команда)
	
	Для Каждого ИдСтроки Из Элементы.Доверенности.ВыделенныеСтроки Цикл
		Доверенности[ИдСтроки].ПолномочияПодтверждены = Ложь;
	КонецЦикла;
	
	ОбновитьПрогресс();
	
КонецПроцедуры

&НаКлиенте
Процедура Готово(Команда)
	
	Результаты = Новый Массив();
	
	Для Каждого СтрокаТаблицы Из Доверенности Цикл
		
		Если СтрокаТаблицы.ПолномочияПодтверждены <> СтрокаТаблицы.ПолномочияПодтвержденыПредыдущееЗначение Тогда
			
			РезультатПроверки = Новый Структура("ПодписанныйОбъект, ХешПодписи, ПолномочияПодтверждены");
			ЗаполнитьЗначенияСвойств(РезультатПроверки, СтрокаТаблицы);
			Результаты.Добавить(РезультатПроверки);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если Результаты.Количество() > 0 Тогда
		Закрыть(Результаты);
	Иначе
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ВывестиТекстПредупреждения()
	
	ТаблицаДокументов = Доверенности.Выгрузить();
	ТаблицаДокументов.Свернуть("ЭлектронныйДокумент");
	
	ФорматнаяСтрока = "Л=ru_RU";
	КоличествоДокументовПрописьюСПредметом =
		ЧислоПрописью(ТаблицаДокументов.Количество(), ФорматнаяСтрока, "документе, документах, документах, м,,,,м, 0");

	КоличествоДокументовПрописьюБезПредмета =
		ЧислоПрописью(ТаблицаДокументов.Количество(), ФорматнаяСтрока, ",,,,,,,, 0");
		
	ТекстКоличествоДокументов = Формат(ТаблицаДокументов.Количество(), "ЧГ=;") + " "
		+ СтрЗаменить(КоличествоДокументовПрописьюСПредметом, КоличествоДокументовПрописьюБезПредмета, "");
	
	ШаблонПредупреждения = НСтр("ru = 'Не удалось выполнить действие, так как в %1 не проверены полномочия доверенностей.
		|Запросите у контрагента документ с другой подписью, либо выполните ручную проверку и повторите действие если доверяете подписанту.'");
	Элементы.ДекорацияЗаголовок.Заголовок = СтрШаблон(ШаблонПредупреждения, ТекстКоличествоДокументов);
	
КонецПроцедуры

// Формирует адрес данных сертификата.
// 
// Параметры:
//  Сертификат - ДвоичныеДанные
// 
// Возвращаемое значение:
//  Строка - Адрес данных сертификата
&НаСервере
Функция АдресДанныхСертификата(Сертификат)
	Возврат ПоместитьВоВременноеХранилище(Сертификат, УникальныйИдентификатор);
КонецФункции

&НаСервере
Процедура ЗаполнитьТаблицуДоверенностей(ДанныеПроверки)
	
	ТаблицаКлючей = Новый ТаблицаЗначений();
	ТаблицаКлючей.Колонки.Добавить("ПодписанныйОбъект",
		Новый ОписаниеТипов("СправочникСсылка.СообщениеЭДОПрисоединенныеФайлы"));
	ТаблицаКлючей.Колонки.Добавить("ХешПодписи", ОбщегоНазначения.ОписаниеТипаСтрока(32));
	
	Для Каждого Данные Из ДанныеПроверки Цикл
		
		СтрокаТаблицы = ТаблицаКлючей.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТаблицы, Данные);
		
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ТаблицаКлючей.ПодписанныйОбъект КАК ПодписанныйОбъект,
		|	ТаблицаКлючей.ХешПодписи КАК ХешПодписи
		|ПОМЕСТИТЬ Ключи
		|ИЗ
		|	&ТаблицаКлючей КАК ТаблицаКлючей
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ПодписанныйОбъект,
		|	ХешПодписи
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЭлектронныеПодписиПоМЧД.ПодписанныйОбъект КАК ПодписанныйОбъект,
		|	ЭлектронныеПодписиПоМЧД.ХешПодписи КАК ХешПодписи,
		|	ЭлектронныеПодписиПоМЧД.Доверенность КАК Доверенность,
		|	ЭлектронныеПодписиПоМЧД.ПротоколПроверки КАК ПротоколПроверки,
		|	ЭлектронныеПодписиПоМЧД.ПодписанныйОбъект.ВладелецФайла КАК Сообщение,
		|	ЭлектронныеПодписиПоМЧД.ПодписанныйОбъект.ВладелецФайла.ЭлектронныйДокумент КАК ЭлектронныйДокумент,
		|	ЭлектронныеПодписиПоМЧД.ПодписанныйОбъект.ВладелецФайла.ЭлектронныйДокумент.Контрагент КАК Контрагент,
		|	ЭлектронныеПодписиПоМЧД.ПодписанныйОбъект.ВладелецФайла.ЭлектронныйДокумент.СуммаДокумента КАК СуммаДокумента
		|ИЗ
		|	РегистрСведений.ЭлектронныеПодписиПоМЧД КАК ЭлектронныеПодписиПоМЧД
		|ГДЕ
		|	(ЭлектронныеПодписиПоМЧД.ПодписанныйОбъект, ЭлектронныеПодписиПоМЧД.ХешПодписи) В
		|		(ВЫБРАТЬ
		|			Ключи.ПодписанныйОбъект,
		|			Ключи.ХешПодписи
		|		ИЗ
		|			Ключи КАК Ключи)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Доверенность,
		|	ЭлектронныйДокумент
		|АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос.УстановитьПараметр("ТаблицаКлючей", ТаблицаКлючей);
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		СтрокаДоверенности = Доверенности.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаДоверенности, Выборка,
			"ПодписанныйОбъект, ХешПодписи, Доверенность, Сообщение, ЭлектронныйДокумент, Контрагент, СуммаДокумента");
		ПротоколПроверки =
			МашиночитаемыеДоверенности.ПрочитатьПротоколПроверкиJSON(Выборка.ПротоколПроверки.Получить());
		СтрокаДоверенности.ПолномочияПодтверждены = ПротоколПроверки.ПроверкаМЧД.ПроверкаПолномочий.Успех;
		СтрокаДоверенности.ПолномочияПодтвержденыПредыдущееЗначение = СтрокаДоверенности.ПолномочияПодтверждены;
		УстановленныеПодписи = ЭлектронныеДокументыЭДО.УстановленныеПодписи(СтрокаДоверенности.Сообщение);
		СтрокаДоверенности.ТекстПолномочий =
			МашиночитаемыеДоверенности.ТекстПолномочий(, СтрокаДоверенности.Доверенность);
		
		Для Каждого ДанныеПодписи Из УстановленныеПодписи Цикл
			Если ДанныеПодписи.ХешПодписи = Выборка.ХешПодписи Тогда
				СтрокаДоверенности.Представитель = ДанныеПодписи.Владелец;
				СтрокаДоверенности.Сертификат = ДанныеПодписи.Сертификат.Получить();
			КонецЕсли;
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПрогресс()
	
	ШаблонПрогресса = НСтр("ru = 'Проверено подписей %1 из %2.'");
	ВсегоЭлементов = Формат(Доверенности.Количество(), "ЧГ=;");
	ПроверенныеПодписи = Доверенности.НайтиСтроки(Новый Структура("ПолномочияПодтверждены", Истина));
	ОтмеченоЭлементов = Формат(ПроверенныеПодписи.Количество(), "ЧН=0; ЧГ=;");
	Элементы.ДекорацияПрогресс.Заголовок = СтрШаблон(ШаблонПрогресса, ОтмеченоЭлементов, ВсегоЭлементов);
	
КонецПроцедуры

#КонецОбласти
