&НаСервере
Функция ПолучитьЧисло(ИсходнаяСтрока) 
	Стр="";
	ЕстьТочка=Ложь;
	Для П=1 По СтрДлина(ИсходнаяСтрока) Цикл
		Символ = Сред(ИсходнаяСтрока,П,1);
		Если Символ="." или Символ="," Тогда
			Если ЕстьТочка Тогда
				Прервать;
			Иначе
				Стр=Стр+".";
				ЕстьТочка=Истина;
			КонецЕсли;	
		ИначеЕсли СтрНайти("1234567890",Символ)>0 Тогда
			Стр=Стр+Символ;
		КонецЕсли;	
	КонецЦикла;
	Если Стр="" Тогда
		Возврат 0;
	Иначе
		Возврат число(Стр);
	КонецЕсли;	
КонецФункции	


&НаКлиенте
Процедура ИмяФайлаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Заголовок="Укажите файл";
	Диалог.Расширение="xls?";
	Диалог.Фильтр="Файл Exel (*.xls?)|*.xls?";
	Диалог.ПолноеИмяФайла=ИмяФайла;
	Диалог.Показать(Новый ОписаниеОповещения("ИмяФайлаНачалоВыбораОкончание",ЭтаФорма));
КонецПроцедуры


&НаКлиенте
Процедура ИмяФайлаНачалоВыбораОкончание(ВыбранныеФайлы,Параметр) Экспорт
	Если НЕ ВыбранныеФайлы=Неопределено И ВыбранныеФайлы.Количество()>0 Тогда
		ИмяФайла=ВыбранныеФайлы[0];
	КонецЕсли;
КонецПроцедуры	


&НаСервере
Функция ПрочитатьТДокНаСервере(Адрес,Расширение)
	ТекстСообщения="";
	ИмяВременногоФайла=ПолучитьИмяВременногоФайла(Расширение);
	ПолучитьИЗвременногоХранилища(Адрес).Записать(ИмяВременногоФайла);
	ТДок.Прочитать(ИмяВременногоФайла,СпособЧтенияЗначенийТабличногоДокумента.Значение);
	УдалитьФайлы(ИмяВременногоФайла);
	Возврат ПоместитьВоВременноеХранилище(ТДок)
КонецФункции

&НаКлиенте
Процедура Прочитать(Команда)
	МассивФайлов=НайтиФайлы(ИмяФайла);
	Если МассивФайлов.Количество()=0 Тогда
		ПоказатьПредупреждение(,"Файл "+ИмяФайла+" не существует.");
		Возврат;	
	КонецЕсли;	
	ПрочитатьТДокНаСервере(ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(ИмяФайла)),МассивФайлов[0].Расширение);
	СтрокаНачало=2;
	СтрокаОкончание=ТДок.ВысотаТаблицы;
	Элементы.ГруппаСтраницы.ТекущаяСтраница=Элементы.ГруппаТаблица;
	
КонецПроцедуры




&НаСервере
Функция ПреобразоватьВИдентификатор(Стр)
	РазрешенныеСимволы="ЙЦУКЕНГШЩЗХЪФЫВАПРОЛДЖЭЯЧСМИТЬБЮQWERTYUIOPASDFGHJKLZXCVBNM";
	
	ИД = ВРег(Стр);
	П=1;
	Результат="";
	Пока НЕ П-1=СтрДлина(ИД) Цикл
		Симв=Сред(ИД,П,1);
		Если НЕ СтрНайти(РазрешенныеСимволы,Симв)=0 Тогда
			Результат=Результат+Симв;
		КонецЕсли;
		П=П+1;
	КонецЦикла;
	
	Возврат Результат;
КонецФункции
//1	A02BA03	Фамотидин	Квамател	лиофилизат для приготовления раствора для внутривенного введения
&НаСервере
Процедура РаспознатьНаСервере()
	ТЗ.Очистить();
	Запрос = Новый Запрос;	
	Запрос.Текст=
	"ВЫБРАТЬ
	|	ДействующиеВеществаМНН.Ссылка КАК МНН
	|ИЗ
	|	Справочник.ДействующиеВеществаМНН КАК ДействующиеВеществаМНН
	|ГДЕ
	|	ВРЕГ(ДействующиеВеществаМНН.Наименование) ПОДОБНО &Наименование";
	НомерСтроки=1;
	ТЗЗагруженых=Новый ТаблицаЗначений;
	ТЗЗагруженых.Колонки.Добавить("МНН");
	ТЗЗагруженых.Колонки.Добавить("VENКлассификация");
	Для П=1 По ТДок.ВысотаСтраницы Цикл
		
	    МННСтрока=СокрЛП(ТДок.Область(П,4).Текст);
		VenСтрока = ВРег(СокрЛП(ТДок.Область(П,10).Текст))+"Класс";
		Попытка
			VENКлассификация=Перечисления.VENКлассификация[VenСтрока];
		Исключение
			VENКлассификация=Перечисления.VENКлассификация.НеКлассифицирован;
		КонецПопытки;	
		НеСнижаемыйОстатокСтрока=СокрЛП(ТДок.Область(П,12).Текст);
		
		Если НЕ МННСтрока="" Тогда
			Запрос.УстановитьПараметр("Наименование",ВРЕГ(МННСтрока)+"%");
			РезультатЗапроса = Запрос.Выполнить();
			Если РезультатЗапроса.Пустой() Тогда
				ТекстСообщения="В строке "+П+". МНН "+МННСтрока+" не распознано. Исправьте в файле или введите в стправочник действующих веществ";
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			Иначе	
				Выборка = РезультатЗапроса.Выбрать();
				Пока Выборка.Следующий() Цикл
					МассТЗ=ТЗЗагруженых.НайтиСтроки(Новый структура("МНН,VENКлассификация",Выборка.МНН,VENКлассификация));
					Если МассТЗ.Количество()=0 Тогда
						СтрТЗЗагруженых=ТЗЗагруженых.Добавить();
						СтрТЗЗагруженых.МНН=Выборка.МНН;
						СтрТЗЗагруженых.VENКлассификация=VENКлассификация;
						СтрТЗ=ТЗ.Добавить();
						СтрТЗ.МННСтрока=МННСтрока;
						СтрТЗ.VenСтрока=VenСтрока;
						СтрТЗ.МНН=Выборка.МНН;
						СтрТЗ.VENКлассификация=VENКлассификация;
						СтрТЗ.НеСнижаемыйОстаток=ВРЕГ(СокрЛП(НеСнижаемыйОстатокСтрока))="ДА";
						СтрТЗ.Пометка=ЗначениеЗаполнено(СтрТЗ.МНН);
					КонецЕсли;	
				КонецЦикла;	
			КонецЕсли;	
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры


&НаКлиенте
Процедура Распознать(Команда)
	РаспознатьНаСервере();
	Элементы.ГруппаСтраницы.ТекущаяСтраница=Элементы.ГруппаТЗ;
КонецПроцедуры


&НаСервере
Процедура ЗаполнитьНаСервере(Данныеформы)
	Элемент = Документы.сокЗаявкаНаВключениеВФормулярныйСписок.СоздатьДокумент();
	Если Ложь Тогда Элемент = Документы.сокФормулярныйСписок.СоздатьДокумент(); КонецЕсли;
	Элемент.Автор=ПараметрыСеанса.ТекущийПользователь;
	Элемент.Дата=ТекущаяДата();
	Элемент.ДатаНачала=Элемент.Дата;
	Элемент.Комментарий="Загружен из файла "+ИмяФайла+" "+ТекущаяДата()+" "+ПараметрыСеанса.ТекущийПользователь;
	Элемент.Ответственный=ПараметрыСеанса.ТекущийПользователь;
	Элемент.Состояние=Перечисления.сок_СостоянияФормулярныхСписков.Подготовлен;
	Для Каждого Стр Из ТЗ Цикл 
		Если Стр.Пометка Тогда
			НовСтр = Элемент.Товары.Добавить();
			НовСтр.ДействующиеВеществаМНН = Стр.МНН;
			НовСтр.VENКлассификация=Стр.VENКлассификация;
			НовСтр.НеСнижаемыйОстатокВСтационаре=Стр.НеСнижаемыйОстаток;
			НовСтр.Запрещен=Ложь;
		КонецЕсли;	
	КонецЦикла;
	ЗначениеВДанныеФормы(Элемент,Данныеформы);
КонецПроцедуры


&НаКлиенте
Процедура Заполнить(Команда)
	ФормаНовогоДокумента = ПолучитьФорму("Документ.сокЗаявкаНаВключениеВФормулярныйСписок.ФормаОбъекта");
    ДанныеФормы = ФормаНовогоДокумента.Объект; 
	ЗаполнитьНаСервере(Данныеформы);
	КопироватьДанныеФормы(ДанныеФормы, ФормаНовогоДокумента.Объект);
    ФормаНовогоДокумента.Модифицированность = Истина;
    ФормаНовогоДокумента.Открыть();
КонецПроцедуры


