
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Документ = Неопределено Тогда
		ТекстОшибки = НСтр("ru='Предусмотрено открытие обработки только из документов.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстОшибки,,,, Отказ);
		Возврат;
	КонецЕсли;
	
	Если Параметры.ТипСЭМД = Неопределено Тогда
		ТекстОшибки = НСтр("ru='Предусмотрено открытие обработки только с указанием типа документа регистрируемого в РЭМД.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстОшибки,,,, Отказ);
		Возврат;
	КонецЕсли;
	
	Документ    = Параметры.Документ;
	РежимРаботы = Параметры.РежимРаботы;
	ТипСЭМД     = Параметры.ТипСЭМД;
	
	ИнициализироватьРежимыРаботы();
	
	РежимРаботы = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(РежимыРаботы, Параметры.РежимРаботы);
	Если Не ЗначениеЗаполнено(РежимРаботы) Тогда
		РежимРаботы = РежимыРаботы.РежимПросмотра;
	КонецЕсли;
	
	ЗаполнитьТекстСЭМД(Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьНастройкиФормы();
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ
#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПоместитьВХранилищеРЭМД(Команда)
	
	Если РежимРаботы <> РежимыРаботы.РежимПередачиДанных
	 Или Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	НачатьПомещениеВХранилищеРЭМДНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПодписьДокументуВХранилищеРЭМД(Команда)
	
	Если РежимРаботы <> РежимыРаботы.РежимДобавленияПодписей
	 Или Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	НачатьДобавлениеПодписиДокументуВХранилищеРЭМД();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьВалидациюСЭМД(Команда)
	
	Если Не ЗначениеЗаполнено(ТекстСЭМД) Тогда
		Возврат;
	КонецЕсли;
	
	ВыполнитьВалидациюСЭМДНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьПроверкуДанныхСотрудников(Команда)
	
	Если Не ЗначениеЗаполнено(ТекстСЭМД) Тогда
		Возврат;
	КонецЕсли;
	
	ВыполнитьПроверкуДанныхСотрудниковНаСервере();
	
КонецПроцедуры

#КонецОбласти // ОбработчикиКомандФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ
#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ТекстСЭМДПриИзменении(Элемент)
	
	СформироватьПредставлениеСЭМД();
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийЭлементовФормы

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ИнициализироватьРежимыРаботы()
	
	РежимыРаботыИзменяемая = Новый Структура;
	РежимыРаботыИзменяемая.Вставить("РежимПросмотра"         , "РежимПросмотра");
	РежимыРаботыИзменяемая.Вставить("РежимПередачиДанных"    , "РежимПередачиДанных");
	РежимыРаботыИзменяемая.Вставить("РежимДобавленияПодписей", "РежимДобавленияПодписей");
	
	РежимыРаботы = Новый ФиксированнаяСтруктура(РежимыРаботыИзменяемая);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьНастройкиФормы()
	
	РежимОтладки = ОбщегоНазначенияКлиентСервер.РежимОтладки();
	
	ИменаЭлементовНеВидимость = Новый Массив;
	ИменаЭлементовНеВидимость.Добавить(Элементы.ТекстСЭМД.Имя);
	
	Если РежимРаботы = РежимыРаботы.РежимПередачиДанных Тогда
		ИменаЭлементовНеВидимость.Добавить(Элементы.ДобавитьПодписьДокументуВХранилищеРЭМД.Имя);
	ИначеЕсли РежимРаботы = РежимыРаботы.РежимДобавленияПодписей Тогда
		ИменаЭлементовНеВидимость.Добавить(Элементы.ПоместитьВХранилищеРЭМД.Имя);
	Иначе
		ИменаЭлементовНеВидимость.Добавить(Элементы.ПоместитьВХранилищеРЭМД.Имя);
		ИменаЭлементовНеВидимость.Добавить(Элементы.ДобавитьПодписьДокументуВХранилищеРЭМД.Имя);
	КонецЕсли;
	
	Для Каждого ИмяЭлемента Из ИменаЭлементовНеВидимость Цикл
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, ИмяЭлемента, "Видимость", РежимОтладки);
	КонецЦикла;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Заполнение текста СЭМД
#Область ЗаполнениеТекстаСЭМД

&НаСервере
Процедура ЗаполнитьТекстСЭМД(Отказ)
	
	ДвоичныеДанныеСЭМД = ФедеральныеВебСервисыРЭМД.ПолучитьДвоичныеДанныеДокументаИзХранилища(Документ);
	Если ДвоичныеДанныеСЭМД <> Неопределено Тогда
		ТекстСЭМД = ПолучитьСтрокуИзДвоичныхДанных(ДвоичныеДанныеСЭМД);
		СформироватьПредставлениеСЭМД();
		Возврат;
	КонецЕсли;
	
	Если РежимРаботы <> РежимыРаботы.РежимПередачиДанных Тогда
		ТекстОшибки = НСтр("ru = 'СЭМД не обаружен в хранилище электронных документов.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстОшибки,,,, Отказ);
		Возврат;
	КонецЕсли;
	
	Менеджер = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Документ);
	
	Результат = Менеджер.СформироватьТекстСЭМД(Документ, ТипСЭМД);
	
	Если ЗначениеЗаполнено(Результат.Ошибки) Тогда
		Для Каждого ТекстОшибки Из Результат.Ошибки Цикл
			ОбщегоНазначения.СообщитьПользователю(ТекстОшибки);
		КонецЦикла;
	КонецЕсли;
	
	Если Результат.Статус = "Ошибка" Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ТекстСЭМД = Результат.ТекстСЭМД;
	СформироватьПредставлениеСЭМД();
	
КонецПроцедуры

&НаСервере
Процедура СформироватьПредставлениеСЭМД()
	
	Если Не ЗначениеЗаполнено(ТекстСЭМД) Тогда
		ПредставлениеСЭМД = Неопределено;
		Возврат;
	КонецЕсли;
	
	Попытка
		
		РезультатПреобразования = ВизуализаторCDA.CDA2ТабличныйДокумент(ТекстСЭМД);
		Если РезультатПреобразования <> Неопределено Тогда
			ПредставлениеСЭМД.Вывести(РезультатПреобразования);
		КонецЕсли;
		
	Исключение
		
		ТекстОшибки = НСтр("ru = 'Не удалось отобразить представление СЭМД по причине:'") + Символы.ПС;
		
		ИмяСобытия = НСтр("ru = 'Интеграция РЭМД.Визуализация СЭМД'", ОбщегоНазначения.КодОсновногоЯзыка());
		ПодробныйТекстОшибки = ТекстОшибки + ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Ошибка,,, ПодробныйТекстОшибки);
		
		КраткийТекстОшибки = ТекстОшибки + ОбработкаОшибок.КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
		ОбщегоНазначения.СообщитьПользователю(КраткийТекстОшибки);
		
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти // ЗаполнениеТекстаСЭМД

////////////////////////////////////////////////////////////////////////////////
// Помещение в хранилище РЭМД
#Область ПомещениеВХранилищеРЭМД

&НаКлиенте
Процедура НачатьПомещениеВХранилищеРЭМДНаКлиенте()
	
	ДвоичныеДанныеСЭМД = ПолучитьДвоичныеДанныеИзСтроки(ТекстСЭМД);
	
	Контекст = Новый Структура;
	Контекст.Вставить("ДвоичныеДанныеСЭМД", ДвоичныеДанныеСЭМД);
	
	Оповестить = Новый ОписаниеОповещения("ПоместитьВХранилищеРЭМД_ПослеПодписания", ЭтотОбъект, Контекст);
	
	ПодписатьДанныеСЭМД(ДвоичныеДанныеСЭМД, Оповестить);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоместитьВХранилищеРЭМД_ПослеПодписания(РезультатПодписания, Контекст) Экспорт
	
	Если Не РезультатПодписания.Успех Тогда
		Возврат;
	КонецЕсли;
	
	ДвоичныеДанныеСЭМД = Контекст.ДвоичныеДанныеСЭМД;
	
	ДанныеПодписи = Новый Структура;
	ДанныеПодписи.Вставить("ВыбранныйСертификат", РезультатПодписания.ВыбранныйСертификат);
	ДанныеПодписи.Вставить("СвойстваПодписи"    , ПолучитьСвойстваПодписи(РезультатПодписания));
	
	ПоместитьВХранилищеРЭМДНаСервере(ДвоичныеДанныеСЭМД, ДанныеПодписи);
	
	Оповестить("ИзменениеСостоянияСЭМД", Новый Структура("Ссылка", Документ));
	
КонецПроцедуры

&НаСервере
Процедура ПоместитьВХранилищеРЭМДНаСервере(ДвоичныеДанныеСЭМД, ДанныеПодписи)
	
	ДанныеЭлектронныхПодписей = ФедеральныеВебСервисыРЭМД.ПолучитьДанныеЭлектронныхПодписейИзРезультатаПодписания(Документ, ДанныеПодписи);
	
	Менеджер = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Документ);
	
	РезультатПолученияСвойстваДокумента = Менеджер.ПолучитьСвойстваДокументаДляРЭМД(Документ, "Пациент");
	Если ЗначениеЗаполнено(РезультатПолученияСвойстваДокумента.Ошибки) Тогда
		Для Каждого ТекстОшибки Из РезультатПолученияСвойстваДокумента.Ошибки Цикл
			ОбщегоНазначения.СообщитьПользователю(ТекстОшибки);
		КонецЦикла;
	КонецЕсли;
	Если РезультатПолученияСвойстваДокумента.Статус = "Ошибка" Тогда
		Возврат;
	КонецЕсли;
	
	Пациент = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(РезультатПолученияСвойстваДокумента.Данные, "Пациент");
	Если Не ЗначениеЗаполнено(Пациент) Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Не удалось получить пациента'"));
		Возврат;
	КонецЕсли;
	
	ФедеральныеВебСервисыРЭМД.ПоместитьДокументВХранилищеЭМД(
		Пациент,
		ДвоичныеДанныеСЭМД,
		ДанныеЭлектронныхПодписей,
		Неопределено,
		Неопределено,
		Документ,
		Перечисления.ФорматФайлаДляРЭМД.CDA,
		ТипСЭМД);
	
КонецПроцедуры

#КонецОбласти // ПомещениеВХранилищеРЭМД

////////////////////////////////////////////////////////////////////////////////
// Добавление подписи документу в хранилище РЭМД
#Область ДобавлениеПодписиДокументуВХранилищеРЭМД

&НаКлиенте
Процедура НачатьДобавлениеПодписиДокументуВХранилищеРЭМД()
	
	ДвоичныеДанныеСЭМД = ФедеральныеВебСервисыРЭМД.ПолучитьДвоичныеДанныеДокументаИзХранилища(Документ);
	Если ДвоичныеДанныеСЭМД = Неопределено Тогда
		ТекстОшибки = НСтр("ru = 'СЭМД не обаружен в хранилище электронных документов.'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстОшибки);
		Возврат;
	КонецЕсли;
	
	Оповестить = Новый ОписаниеОповещения("ДобавитьПодписиДокументуВХранилищеРЭМД_ПослеПодписания", ЭтотОбъект);
	
	ПодписатьДанныеСЭМД(ДвоичныеДанныеСЭМД, Оповестить);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПодписиДокументуВХранилищеРЭМД_ПослеПодписания(РезультатПодписания, Контекст) Экспорт
	
	Если Не РезультатПодписания.Успех Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеПодписи = Новый Структура;
	ДанныеПодписи.Вставить("ВыбранныйСертификат", РезультатПодписания.ВыбранныйСертификат);
	ДанныеПодписи.Вставить("СвойстваПодписи"    , ПолучитьСвойстваПодписи(РезультатПодписания));
	
	ДобавитьПодписиДокументуВХранилищеРЭМДНаСервере(ДанныеПодписи);
	
	Оповестить("ИзменениеСостоянияСЭМД", Новый Структура("Ссылка", Документ));
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьПодписиДокументуВХранилищеРЭМДНаСервере(ДанныеПодписи)
	
	ДанныеЭлектронныхПодписей = ФедеральныеВебСервисыРЭМД.ПолучитьДанныеЭлектронныхПодписейИзРезультатаПодписания(Документ, ДанныеПодписи);
	
	ФедеральныеВебСервисыРЭМД.ДобавитьПодписьДокументуВХранилищеЭМД(Документ, ДанныеЭлектронныхПодписей);
	
КонецПроцедуры

#КонецОбласти // ДобавлениеПодписиДокументуВХранилищеРЭМД

////////////////////////////////////////////////////////////////////////////////
// Подписание данных
#Область ПодписаниеДанных

&НаКлиенте
Процедура ПодписатьДанныеСЭМД(ДвоичныеДанныеСЭМД, ОповещениеОЗавершении)
	
	ОписаниеДанных = Новый Структура;
	ОписаниеДанных.Вставить("Операция"           , НСтр("ru = 'Подписание документа'"));
	ОписаниеДанных.Вставить("ЗаголовокДанных"    , НСтр("ru = 'Отпуск по рецепту'"));
	ОписаниеДанных.Вставить("Представление"      , Документ);
	ОписаниеДанных.Вставить("ПоказатьКомментарий", Истина);
	ОписаниеДанных.Вставить("Данные"             , ДвоичныеДанныеСЭМД);
	
	ЭлектроннаяПодписьКлиент.Подписать(ОписаниеДанных,, ОповещениеОЗавершении);
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьСвойстваПодписи(РезультатПодписания)
	
	Если ЭтоАдресВременногоХранилища(РезультатПодписания.СвойстваПодписи) Тогда
		СвойстваПодписи = ПолучитьИзВременногоХранилища(РезультатПодписания.СвойстваПодписи);
	Иначе
		СвойстваПодписи = РезультатПодписания.СвойстваПодписи;
	КонецЕсли;
	
	Возврат СвойстваПодписи;
	
КонецФункции

#КонецОбласти // ПодписаниеДанных

////////////////////////////////////////////////////////////////////////////////
// Валидация
#Область Валидация

&НаСервере
Процедура ВыполнитьВалидациюСЭМДНаСервере()
	
	ВалидацияСЭМД.ВыполнитьПроверкуСЭМДНаСервисеВалидации(Документ, ТекстСЭМД);
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьПроверкуДанныхСотрудниковНаСервере()
	
	ВалидацияСЭМД.ВыполнитьПроверкуСотрудниковНаСервисе1СФР(Документ, ТекстСЭМД);
	
КонецПроцедуры

#КонецОбласти // Валидация

#КонецОбласти // СлужебныеПроцедурыИФункции
