
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	ЕстьОшибкиУчетныхЗаписей = Ложь;
	ПараметрыДетализации = Неопределено;
	Если Параметры.Свойство("ПараметрыДетализации", ПараметрыДетализации) Тогда
		
		КонтекстДиагностики = ПараметрыДетализации.КонтекстДиагностики;
		Если Не ДиагностикаЭДОКлиентСервер.ЕстьОшибки(КонтекстДиагностики) Тогда
			Элементы.ПровестиДиагностику.Видимость = Ложь;
		КонецЕсли;
		Заголовок = Заголовок + СтрШаблон(" (%1)", Формат(ПараметрыДетализации.КонтекстДиагностики.ДатаНачалаОперации, НСтр("ru = 'ДФ=HH:mm'") ));
		ЗаполнитьУчетныеЗаписи(ПараметрыДетализации, ЕстьОшибкиУчетныхЗаписей);
		ЗаполнитьРезультатыОпераций(ПараметрыДетализации, ЕстьОшибкиУчетныхЗаписей);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОтобратьОперации();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУчетныеЗаписи

&НаКлиенте
Процедура УчетныеЗаписиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле = Элементы.УчетныеЗаписиСостояниеСинхронизации
		И ЗначениеЗаполнено(Элемент.ТекущиеДанные.ПодробноеПредставлениеОшибки) Тогда
		ДиагностикаЭДОКлиент.ПоказатьОшибки(НСтр("ru = 'Состояние синхронизации'"),
			ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Элемент.ТекущиеДанные.ПодробноеПредставлениеОшибки));
	ИначеЕсли Поле = Элементы.УчетныеЗаписиНаименование Тогда
		ПоказатьЗначение(, Элемент.ТекущиеДанные.КлючЗаписи);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыРезультатыОпераций

&НаКлиенте
Процедура РезультатыОперацийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле = Элементы.РезультатыОперацийПредставлениеДокумента Тогда
		ПоказатьЗначение(, Элемент.ТекущиеДанные.Документ);
	ИначеЕсли Поле = Элементы.РезультатыОперацийОшибка И ЗначениеЗаполнено(Элемент.ТекущиеДанные.Ошибка) Тогда
		ПоказатьПредупреждение(, Элемент.ТекущиеДанные.Ошибка);
	ИначеЕсли Поле = Элементы.РезультатыОперацийДокументыУчета Тогда
		КоличествоДокументовУчета = Элемент.ТекущиеДанные.СсылкиНаДокументыУчета.Количество();
		Если КоличествоДокументовУчета > 0 Тогда
			Если КоличествоДокументовУчета = 1 Тогда
				ПоказатьЗначение(, Элемент.ТекущиеДанные.СсылкиНаДокументыУчета[0].Значение);
			Иначе 
				Оповещение = Новый ОписаниеОповещения("ПослеВыбораУчетногоДокумента", ЭтотОбъект);
				Элемент.ТекущиеДанные.СсылкиНаДокументыУчета.ПоказатьВыборЭлемента(Оповещение);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Неудачные(Команда)
	
	ОбработатьНажатиеНаКнопкуОтбора(Элементы.Неудачные);
	ОтобратьОперации();
	
КонецПроцедуры

&НаКлиенте
Процедура Успешные(Команда)
	
	ОбработатьНажатиеНаКнопкуОтбора(Элементы.Успешные);
	ОтобратьОперации();
	
КонецПроцедуры

&НаКлиенте
Процедура ПровестиДиагностику(Команда)
	
	КонтекстДиагностики.ОшибкиОбработаны = Ложь;
	ОбработкаНеисправностейБЭДКлиент.ОбработатьОшибки(КонтекстДиагностики);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьРезультатыОпераций(ПараметрыДетализации, ЕстьОшибкиУчетныхЗаписей)
	
	УспешныеДокументы = ПараметрыДетализации.РезультатыОтправкиПолучения.Успешные;
	НеудачныеДокументы = ПараметрыДетализации.РезультатыОтправкиПолучения.Неудачные;
	ЕстьПредупрежденияСтраницыДокументы = Ложь;
	ЕстьПредупрежденияСтраницыУчетныеЗаписи = Ложь;
	Если НеудачныеДокументы.Количество() > 0 Тогда
		Элементы.Неудачные.Пометка = Истина;
		Элементы.СтраницаДокументы.Картинка = БиблиотекаКартинок.НекорректныйКонтрагент;
		ЕстьПредупрежденияСтраницыДокументы = Истина;
	ИначеЕсли УспешныеДокументы.Количество() > 0 Тогда
		Элементы.Успешные.Пометка = Истина;
	КонецЕсли;
	Если ЕстьОшибкиУчетныхЗаписей Тогда
		Элементы.СтраницаУчетныеЗаписи.Картинка = БиблиотекаКартинок.НекорректныйКонтрагент;
		ЕстьПредупрежденияСтраницыУчетныеЗаписи = Истина;
	КонецЕсли;
	
	Если ЕстьПредупрежденияСтраницыДокументы И Не ЕстьПредупрежденияСтраницыУчетныеЗаписи Тогда
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаДокументы;
	ИначеЕсли Не ЕстьПредупрежденияСтраницыДокументы И ЕстьПредупрежденияСтраницыУчетныеЗаписи Тогда
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаУчетныеЗаписи;
	ИначеЕсли ЕстьПредупрежденияСтраницыДокументы И ЕстьПредупрежденияСтраницыУчетныеЗаписи Тогда
		Если РезультатыОпераций.Количество() Тогда
			Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаДокументы;
		Иначе 
			Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаУчетныеЗаписи;
		КонецЕсли;
	КонецЕсли;
	
	Элементы.Успешные.Заголовок = СтрШаблон(НСтр("ru = '%1 (%2)'"), Элементы.Успешные.Заголовок, УспешныеДокументы.Количество());
	Элементы.Неудачные.Заголовок = СтрШаблон(НСтр("ru = '%1 (%2)'"), Элементы.Неудачные.Заголовок, НеудачныеДокументы.Количество());
	
	СообщенияИКонтейнеры = Новый Массив;
	Сообщения = Новый Массив;
	Контейнеры = Новый Массив;
	Для каждого УспешныйДокумент Из УспешныеДокументы Цикл
		СообщенияИКонтейнеры.Добавить(УспешныйДокумент.Ссылка);
		Если ТипЗнч(УспешныйДокумент.Ссылка) = Тип("ДокументСсылка.СообщениеЭДО") Тогда
			Сообщения.Добавить(УспешныйДокумент.Ссылка);
		Иначе
			Контейнеры.Добавить(УспешныйДокумент.Ссылка);
		КонецЕсли;
	КонецЦикла;
	Для каждого НеудачныйДокумент Из НеудачныеДокументы Цикл
		СообщенияИКонтейнеры.Добавить(НеудачныйДокумент.Ссылка);
		Если ТипЗнч(НеудачныйДокумент.Ссылка) = Тип("ДокументСсылка.СообщениеЭДО") Тогда
			Сообщения.Добавить(НеудачныйДокумент.Ссылка);
		Иначе
			Контейнеры.Добавить(НеудачныйДокумент.Ссылка);
		КонецЕсли;
	КонецЦикла;
	
	ОбъектыКонтейнеров = СинхронизацияЭДО.ОбъектыТранспортныхКонтейнеров(Контейнеры);
	Для Каждого КлючИЗначение Из ОбъектыКонтейнеров Цикл
		Для Каждого ОбъектКонтейнера Из КлючИЗначение.Значение Цикл
			Сообщения.Добавить(ОбъектКонтейнера);
			Прервать;
		КонецЦикла;
	КонецЦикла;
	
	СоответствиеСообщенийДокументам = ЭлектронныеДокументыЭДО.ДокументыСообщений(Сообщения);
	ЭлектронныеДокументы = Новый Массив;
	Для Каждого КлючИЗначение Из СоответствиеСообщенийДокументам Цикл
		ЭлектронныеДокументы.Добавить(КлючИЗначение.Значение);
	КонецЦикла;
	
	Запросы = Новый Массив;
	
	Отбор = ИнтеграцияЭДО.НовыйОтборОбъектовУчетаЭлектронныхДокументов();
	Отбор.ЭлектронныеДокументы = "&ЭлектронныеДокументы";
	
	ЗапросУчетныхДокументов = ИнтеграцияЭДО.ЗапросОбъектовУчетаЭлектронныхДокументов("УчетныеДокументы", Отбор);
	Запросы.Добавить(ЗапросУчетныхДокументов);
	
	ЗапросПредставленийЭлектронныхДокументооборотов =
		ЭлектронныеДокументыЭДО.ЗапросПараметровПредставленияДокументов(
			"ПредставленияЭлектронныхДокументооборотов", "&СообщенияЭДО");
	Запросы.Добавить(ЗапросПредставленийЭлектронныхДокументооборотов);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	УчетныеДокументы.ЭлектронныйДокумент КАК ЭлектронныйДокумент,
	|	УчетныеДокументы.ОбъектУчета КАК УчетныйДокумент,
	|	УчетныеДокументы.ПредставлениеОбъектаУчета КАК УчетныйДокументПредставление
	|ИЗ
	|	УчетныеДокументы КАК УчетныеДокументы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПредставленияЭлектронныхДокументооборотов.Ссылка КАК Ссылка,
	|	ПредставленияЭлектронныхДокументооборотов.ВидДокумента КАК ВидЭД,
	|	ПредставленияЭлектронныхДокументооборотов.ДатаДокумента КАК Дата,
	|	ПредставленияЭлектронныхДокументооборотов.НомерДокумента КАК Номер
	|ИЗ
	|	ПредставленияЭлектронныхДокументооборотов КАК ПредставленияЭлектронныхДокументооборотов";
	
	ИтоговыйЗапрос = ОбщегоНазначенияБЭД.СоединитьЗапросы(Запрос, Запросы);
	ИтоговыйЗапрос.УстановитьПараметр("СообщенияЭДО", Сообщения);
	ИтоговыйЗапрос.УстановитьПараметр("ЭлектронныеДокументы", ЭлектронныеДокументы);
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = ИтоговыйЗапрос.ВыполнитьПакет();
	УстановитьПривилегированныйРежим(Ложь);
	
	Основания = РезультатЗапроса[2].Выгрузить();
	ВыборкаПредставлениеЭД = РезультатЗапроса[3].Выбрать();
	
	Элементы.СтраницаДокументы.Заголовок = Элементы.СтраницаДокументы.Заголовок + СтрШаблон(" (%1)", СообщенияИКонтейнеры.Количество());
	
	Запросы = Новый Массив;
	ЗапросСостояний = ЭлектронныеДокументыЭДО.ЗапросСостоянийДокументов(
		"СостоянияЭлектронныхДокументооборотов", "&ЭлектронныеДокументы");
	
	Запросы.Добавить(ЗапросСостояний);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СостоянияЭлектронныхДокументооборотов.Ссылка КАК Ссылка,
	|	СостоянияЭлектронныхДокументооборотов.Состояние КАК Состояние,
	|	СостоянияЭлектронныхДокументооборотов.СостояниеДополнение КАК СостояниеДополнение
	|ИЗ
	|	СостоянияЭлектронныхДокументооборотов КАК СостоянияЭлектронныхДокументооборотов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТранспортныйКонтейнерЭДО.Ссылка,
	|	ТранспортныйКонтейнерЭДО.Статус,
	|	""""
	|ИЗ
	|	Документ.ТранспортныйКонтейнерЭДО КАК ТранспортныйКонтейнерЭДО
	|ГДЕ
	|	ТранспортныйКонтейнерЭДО.Ссылка В(&Контейнеры)";
	
	ИтоговыйЗапрос = ОбщегоНазначенияБЭД.СоединитьЗапросы(Запрос, Запросы);
	ИтоговыйЗапрос.УстановитьПараметр("Контейнеры", Контейнеры);
	ИтоговыйЗапрос.УстановитьПараметр("ЭлектронныеДокументы", ЭлектронныеДокументы);
	
	РезультатЗапроса = ИтоговыйЗапрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Для каждого УспешныйОбъект Из УспешныеДокументы Цикл
		УспешноеСообщение = УспешныйОбъект.Ссылка;
		Если ТипЗнч(УспешноеСообщение) = Тип("ДокументСсылка.ТранспортныйКонтейнерЭДО") Тогда
			ОбъектыКонтейнера = ОбъектыКонтейнеров[УспешноеСообщение];
			Если ОбъектыКонтейнера <> Неопределено И ОбъектыКонтейнера.Количество() Тогда
				УспешноеСообщение = ОбъектыКонтейнера[0];
			КонецЕсли;
		КонецЕсли;
		НоваяСтрока = ДобавитьСтрокуРезультатаОперации(УспешноеСообщение, ВыборкаДетальныеЗаписи,
			ВыборкаПредставлениеЭД, Основания, СоответствиеСообщенийДокументам);
		НоваяСтрока.Картинка = 3;
		НоваяСтрока.ЕстьОшибки = Ложь;
	КонецЦикла;
	
	Для каждого НеудачныйОбъект Из НеудачныеДокументы Цикл
		НеудачноеСообщение = НеудачныйОбъект.Ссылка;
		Если ТипЗнч(НеудачноеСообщение) = Тип("ДокументСсылка.ТранспортныйКонтейнерЭДО") Тогда
			ОбъектыКонтейнера = ОбъектыКонтейнеров[НеудачноеСообщение];
			Если ОбъектыКонтейнера <> Неопределено И ОбъектыКонтейнера.Количество() Тогда
				НеудачноеСообщение = ОбъектыКонтейнера[0];
			КонецЕсли;
		КонецЕсли;
		НоваяСтрока = ДобавитьСтрокуРезультатаОперации(НеудачноеСообщение, ВыборкаДетальныеЗаписи,
			ВыборкаПредставлениеЭД, Основания, СоответствиеСообщенийДокументам, НеудачныйОбъект.Ошибка);
		НоваяСтрока.Картинка = 0;
		НоваяСтрока.ЕстьОшибки = Истина;
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьУчетныеЗаписи(ПараметрыДетализации, ЕстьОшибкиУчетныхЗаписей)
	
	МассивУчетныхЗаписей = Новый Массив;
	Для каждого КлючИЗначение Из ПараметрыДетализации.ОбработанныеУчетныеЗаписи Цикл
		НоваяСтрока = УчетныеЗаписи.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, КлючИЗначение.Значение);
		Если НоваяСтрока.ОтправкаПолучениеВыполнялись Тогда
			НоваяСтрока.Картинка = 3;
			НоваяСтрока.Порядок = 0;
			НоваяСтрока.СостояниеСинхронизации = НСтр("ru = 'Выполнена'");
		Иначе 
			Если КлючИЗначение.Значение.ПользовательОтказалсяОтОперации Тогда
				НоваяСтрока.Картинка = 2;
				НоваяСтрока.Порядок = 2;
				НоваяСтрока.СостояниеСинхронизации = НСтр("ru = 'Отменена'");
			ИначеЕсли НоваяСтрока.ВидОшибки = ДиагностикаЭДОКлиентСервер.ВидОшибкиОтправкиИПолученияНетДоступныхСертификатов() Тогда 
				НоваяСтрока.Картинка = 1;
				НоваяСтрока.Порядок = 1;
				НоваяСтрока.СостояниеСинхронизации = КлючИЗначение.Значение.ИнформацияОбОшибке.КраткоеПредставление;
				НоваяСтрока.ПодробноеПредставлениеОшибки = КлючИЗначение.Значение.ИнформацияОбОшибке;
			Иначе 
				НоваяСтрока.Картинка = 0;
				НоваяСтрока.Порядок = 1;
				НоваяСтрока.СостояниеСинхронизации = КлючИЗначение.Значение.ИнформацияОбОшибке.КраткоеПредставление;
				НоваяСтрока.ПодробноеПредставлениеОшибки = КлючИЗначение.Значение.ИнформацияОбОшибке;
				ЕстьОшибкиУчетныхЗаписей = Истина;
			КонецЕсли;
		КонецЕсли;
		МассивУчетныхЗаписей.Добавить(КлючИЗначение.Значение.Идентификатор);
	КонецЦикла;
	УчетныеЗаписи.Сортировать("Порядок Возр");
	
	Элементы.СтраницаУчетныеЗаписи.Заголовок = Элементы.СтраницаУчетныеЗаписи.Заголовок + СтрШаблон(" (%1)", УчетныеЗаписи.Количество());
	
	Отбор = УчетныеЗаписиЭДО.НовыйОтборУчетныхЗаписей();
	Отбор.УчетныеЗаписи = "&УчетныеЗаписи";
	ЗапросУчетныхЗаписей = УчетныеЗаписиЭДО.ЗапросУчетныхЗаписей("УчетныеЗаписи", Отбор);
	Запросы = Новый Массив;
	Запросы.Добавить(ЗапросУчетныхЗаписей);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	УчетныеЗаписи.ИдентификаторЭДО,
	|	УчетныеЗаписи.НаименованиеУчетнойЗаписи
	|ИЗ
	|	УчетныеЗаписи КАК УчетныеЗаписи";
	
	ИтоговыйЗапрос = ОбщегоНазначенияБЭД.СоединитьЗапросы(Запрос, Запросы);
	ИтоговыйЗапрос.УстановитьПараметр("УчетныеЗаписи", МассивУчетныхЗаписей);
	
	Выборка = ИтоговыйЗапрос.Выполнить().Выбрать();
	
	Для каждого УчетнаяЗапись Из УчетныеЗаписи Цикл
		Если Выборка.НайтиСледующий(УчетнаяЗапись.Идентификатор, "ИдентификаторЭДО") Тогда
			УчетнаяЗапись.Наименование = Выборка.НаименованиеУчетнойЗаписи;
			ЗначенияКлюча = Новый Структура("ИдентификаторЭДО", УчетнаяЗапись.Идентификатор);
			УчетнаяЗапись.КлючЗаписи = РегистрыСведений.УчетныеЗаписиЭДО.СоздатьКлючЗаписи(ЗначенияКлюча);
			Выборка.Сбросить();
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

&НаСервере
Функция ДобавитьСтрокуРезультатаОперации(СообщениеЭДО, ВыборкаДетальныеЗаписи, ВыборкаПредставлениеЭД, Основания,
	СоответствиеСообщенийДокументам, Ошибка = "")
	
	ЭлектронныйДокумент = СоответствиеСообщенийДокументам[СообщениеЭДО];
	Если ЭлектронныйДокумент = Неопределено Тогда
		ЭлектронныйДокумент = СообщениеЭДО;
	КонецЕсли;
	
	НоваяСтрока = РезультатыОпераций.Добавить();
	НоваяСтрока.Документ = ЭлектронныйДокумент;
	НоваяСтрока.Картинка = 3;
	НоваяСтрока.Ошибка = Ошибка;
	Если ВыборкаДетальныеЗаписи.НайтиСледующий(ЭлектронныйДокумент, "Ссылка") Тогда
		НоваяСтрока.ПредставлениеСостояния = "" + ВыборкаДетальныеЗаписи.Состояние + " " + ВыборкаДетальныеЗаписи.СостояниеДополнение;
		ВыборкаДетальныеЗаписи.Сбросить();
	КонецЕсли;
	
	Если (ТипЗнч(ЭлектронныйДокумент) = Тип("ДокументСсылка.ЭлектронныйДокументВходящийЭДО")
		Или ТипЗнч(ЭлектронныйДокумент) = Тип("ДокументСсылка.ЭлектронныйДокументИсходящийЭДО"))
		И ВыборкаПредставлениеЭД.НайтиСледующий(СообщениеЭДО, "Ссылка") Тогда
		НоваяСтрока.ПредставлениеДокумента = СтрШаблон(НСтр("ru = '%1 №%2 от %3'"),
			ВыборкаПредставлениеЭД.ВидЭД,
			ВыборкаПредставлениеЭД.Номер,
			Формат(ВыборкаПредставлениеЭД.Дата, "ДЛФ=D"));
		ВыборкаПредставлениеЭД.Сбросить();
	Иначе 
		НоваяСтрока.ПредставлениеДокумента = ЭлектронныйДокумент;
	КонецЕсли;
	
	ОтборЭД = Новый Структура("ЭлектронныйДокумент", НоваяСтрока.Документ);
	ОснованияЭД = Основания.НайтиСтроки(ОтборЭД);
	
	Если ЗначениеЗаполнено(ОснованияЭД) Тогда
		Для каждого ОснованиеЭД Из ОснованияЭД Цикл
			НоваяСтрока.СсылкиНаДокументыУчета.Добавить(ОснованиеЭД.УчетныйДокумент);
		КонецЦикла; 
		Представление = "";
		КоличествоОснований = ОснованияЭД.Количество();
		Если КоличествоОснований = 1 Тогда
			Представление = ОснованияЭД[0].УчетныйДокументПредставление;
		Иначе
			ШаблонСтроки = НСтр("ru = ';%1 документ;;%1 документа;%1 документов;%1 документов'");
			Представление = СтрокаСЧислом(ШаблонСтроки, КоличествоОснований, ВидЧисловогоЗначения.Количественное);
		КонецЕсли;
		НоваяСтрока.ОтражениеВУчете = Представление;
	КонецЕсли;
	
	Возврат НоваяСтрока;
	
КонецФункции

&НаСервере
Процедура УстановитьУсловноеОформление() 
	
	УсловноеОформление.Элементы.Очистить();
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ПоясняющийТекст);
	
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("РезультатыОпераций.ЕстьОшибки");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("РезультатыОперацийОшибки");
	
	//
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ГиперссылкаЦвет);
	
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("РезультатыОпераций.ЕстьОшибки");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("РезультатыОперацийОшибки");
	
	//
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ГиперссылкаЦвет);
	
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("УчетныеЗаписи.Картинка");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
	СписокКартинок = Новый СписокЗначений;
	СписокКартинок.Добавить(0);
	СписокКартинок.Добавить(1);
	ОтборЭлемента.ПравоеЗначение = СписокКартинок;
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("УчетныеЗаписиСостояниеСинхронизации");
	
	//
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ПоясняющийТекст);
	
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("УчетныеЗаписи.Картинка");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
	СписокКартинок = Новый СписокЗначений;
	СписокКартинок.Добавить(2);
	СписокКартинок.Добавить(3);
	ОтборЭлемента.ПравоеЗначение = СписокКартинок;
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("УчетныеЗаписиСостояниеСинхронизации");
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьНажатиеНаКнопкуОтбора(Кнопка) 
	
	Кнопка.Пометка = Не Кнопка.Пометка;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтобратьОперации() 
	
	Успешные = Элементы.Успешные.Пометка;
	Неуспешные = Элементы.Неудачные.Пометка;
	
	Если (Успешные И Неуспешные)
		Или (Не Успешные И Не Неуспешные) Тогда
		
		ОтборСтрок = Неопределено;
		
	Иначе
		Если Успешные Тогда
			ОтборСтрок = Новый ФиксированнаяСтруктура("ЕстьОшибки", Ложь);
		Иначе
			ОтборСтрок = Новый ФиксированнаяСтруктура("ЕстьОшибки", Истина);
		КонецЕсли;
	КонецЕсли;
		
	Элементы.РезультатыОпераций.ОтборСтрок = ОтборСтрок;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораУчетногоДокумента(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныйЭлемент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПоказатьЗначение(, ВыбранныйЭлемент.Значение);
	
КонецПроцедуры

#КонецОбласти 

