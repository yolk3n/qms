
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Номенклатура            = Параметры.Номенклатура;
	ТорговоеНаименование    = Параметры.ТорговоеНаименование;
	ДействующиеВеществаМНН  = Параметры.ДействующиеВеществаМНН;
	ФормаВыпуска            = Параметры.ФормаВыпуска;
	ЕдиницаИзмерения        = Параметры.ЕдиницаИзмерения;
	НеЗапрашиватьЕдиницуИзмерения = Параметры.НеЗапрашиватьЕдиницуИзмерения;
	
	НастроитьВидФормыПриОткрытии();
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив();
	
	Если НеЗапрашиватьЕдиницуИзмерения Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ЕдиницаИзмерения");
	КонецЕсли;
	
	Если Не ИспользоватьТорговоеНаименование И Не ИспользоватьДействующиеВеществаМНН И Не ИспользоватьНоменклатуру Тогда
		
		ТекстСообщения = НСтр("ru='Условия отбора не определены.'");
		РеквизитДляСообщения = ?(ЗначениеЗаполнено(ТорговоеНаименование), "ИспользоватьТорговоеНаименование", "ИспользоватьДействующиеВеществаМНН");
		РеквизитДляСообщения = ?(ЗначениеЗаполнено(Номенклатура), "ИспользоватьНоменклатуру", РеквизитДляСообщения);
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,, РеквизитДляСообщения,,Отказ);
		
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТКА КОМАНД ФОРМЫ
#Область ОбработкаКомандФормы

&НаКлиенте
Процедура КомандаОК(Команда)
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	Ответ = Новый Структура();
	Ответ.Вставить("Номенклатура"            , ?(ИспользоватьНоменклатуру, Номенклатура, ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка")));
	Ответ.Вставить("ТорговоеНаименование"    , ?(ИспользоватьТорговоеНаименование, ТорговоеНаименование, ПредопределенноеЗначение("Справочник.ТорговыеНаименования.ПустаяСсылка")));
	Ответ.Вставить("ДействующиеВеществаМНН"  , ?(ИспользоватьДействующиеВеществаМНН, ДействующиеВеществаМНН, ПредопределенноеЗначение("Справочник.ДействующиеВеществаМНН.ПустаяСсылка")));
	Ответ.Вставить("ФормаВыпуска"            , ?(ИспользоватьТорговоеНаименование Или ИспользоватьДействующиеВеществаМНН, ФормаВыпуска, ПредопределенноеЗначение("Справочник.ФормыВыпуска.ПустаяСсылка")));
	Ответ.Вставить("ЕдиницаИзмерения"        , ЕдиницаИзмерения);
	
	ОповеститьОВыборе(Ответ);
	
КонецПроцедуры

#КонецОбласти // ОбработкаКомандФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТКА СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ
#Область ОбработкаСобытийЭлементовФормы

&НаКлиенте
Процедура ИспользоватьНоменклатуруПриИзменении(Элемент)
	
	Если ИспользоватьТорговоеНаименование Или ИспользоватьДействующиеВеществаМНН Или ИспользоватьНоменклатуру Тогда
		ПроверитьЕдиницуИзмерения();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьТорговоеНаименованиеПриИзменении(Элемент)
	
	Если ИспользоватьТорговоеНаименование Или ИспользоватьДействующиеВеществаМНН Тогда
		ПроверитьЕдиницуИзмерения();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьДействующиеВеществаМННПриИзменении(Элемент)
	
	Если ИспользоватьДействующиеВеществаМНН Тогда
		ПроверитьЕдиницуИзмерения();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти // ОбработкаСобытийЭлементовФормы

//////////////////////////////////////////////////////////////////////////////// 
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура НастроитьВидФормыПриОткрытии()
	
	Если Номенклатура.Пустая() И ТорговоеНаименование.Пустая() И ДействующиеВеществаМНН.Пустая() Тогда
		ВызватьИсключение НСтр("ru = 'Обработка используется только вместе с объектами информационной базы'");
	КонецЕсли;
	
	ИспользоватьНоменклатуру = ЗначениеЗаполнено(Номенклатура);
	ИспользоватьТорговоеНаименование = ЗначениеЗаполнено(ТорговоеНаименование);
	ИспользоватьДействующиеВеществаМНН = ЗначениеЗаполнено(ДействующиеВеществаМНН);
	
	Если ЗначениеЗаполнено(Номенклатура) Тогда
		
		Реквизиты = НоменклатураСервер.ОписаниеНоменклатуры(Номенклатура);
		Если Реквизиты.ЭтоЛекарственноеСредство Тогда
			ТорговоеНаименование = Реквизиты.ТорговоеНаименование;
			ДействующиеВеществаМНН = Реквизиты.ДействующиеВеществаМНН;
			ФормаВыпуска = Реквизиты.ФормаВыпуска;
			КлючСохраненияПоложенияОкна = "ЛекарственноеСредство";
		Иначе
			КлючСохраненияПоложенияОкна = "Номенклатура";
			Элементы.ИспользоватьНоменклатуру.ТолькоПросмотр = Истина;
			Элементы.ГруппаТорговоеНаименование.Видимость = Ложь;
			Элементы.ГруппаДействующиеВеществаМНН.Видимость = Ложь;
			Элементы.ФормаВыпуска.Видимость = Ложь;
		КонецЕсли;
		
	ИначеЕсли ЗначениеЗаполнено(ТорговоеНаименование) Тогда
		
		КлючСохраненияПоложенияОкна = "ТорговоеНаименование";
		Элементы.ГруппаНоменклатура.Видимость = Ложь;
		Элементы.ИспользоватьТорговоеНаименование.ТолькоПросмотр = Не ЗначениеЗаполнено(ДействующиеВеществаМНН);
		
	Иначе
		КлючСохраненияПоложенияОкна = "ДействующиеВеществаМНН";
		Элементы.ГруппаНоменклатура.Видимость = Ложь;
		Элементы.ГруппаТорговоеНаименование.Видимость = Ложь;
		Элементы.ИспользоватьДействующиеВеществаМНН.ТолькоПросмотр = Истина;
	КонецЕсли;
	
	Элементы.ИспользоватьНоменклатуру.Видимость = ЗначениеЗаполнено(Номенклатура);
	Элементы.ИспользоватьТорговоеНаименование.Видимость = ЗначениеЗаполнено(ТорговоеНаименование);
	Элементы.ИспользоватьДействующиеВеществаМНН.Видимость = ЗначениеЗаполнено(ДействующиеВеществаМНН);
	
	Если НеЗапрашиватьЕдиницуИзмерения Тогда
		КлючСохраненияПоложенияОкна = КлючСохраненияПоложенияОкна + "БезЕдиницыИзмерения";
		Элементы.ЕдиницаИзмерения.Видимость = Ложь;
	ИначеЕсли Не ТолькоПросмотр И Не ЗначениеЗаполнено(ЕдиницаИзмерения) Тогда
		ЕдиницаИзмерения = ОтборНоменклатуры.ЕдиницаИзмеренияПоОтбору(ПолучитьОтборНоменклатуры(ЭтотОбъект));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьЕдиницуИзмерения()
	
	ПараметрыВыбора = ПолучитьОтборНоменклатуры(ЭтотОбъект);
	ПараметрыВыбора.Вставить("ЕдиницаИзмерения", ЕдиницаИзмерения);
	
	Действия = ОбработкаТабличнойЧастиКлиентСервер;
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить(Действия.Действие_ПроверитьЕдиницуИзмеренияПоОтбору());
	
	ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТабличнойЧасти(ПараметрыВыбора, СтруктураДействий, Неопределено);
	
	Если Не ЕдиницаИзмерения = ПараметрыВыбора.ЕдиницаИзмерения Тогда
		ЕдиницаИзмерения = ПараметрыВыбора.ЕдиницаИзмерения;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьОтборНоменклатуры(Форма)
	
	Отбор = Новый Структура;
	Отбор.Вставить("Номенклатура"            , ?(Форма.ИспользоватьНоменклатуру, Форма.Номенклатура, Неопределено));
	Отбор.Вставить("ТорговоеНаименование"    , ?(Форма.ИспользоватьТорговоеНаименование, Форма.ТорговоеНаименование, Неопределено));
	Отбор.Вставить("ДействующиеВеществаМНН"  , ?(Форма.ИспользоватьДействующиеВеществаМНН, Форма.ДействующиеВеществаМНН, Неопределено));
	Отбор.Вставить("ФормаВыпуска"            , Форма.ФормаВыпуска);
	
	Возврат Отбор;
	
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции
