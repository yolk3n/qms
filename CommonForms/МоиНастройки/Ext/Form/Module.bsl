
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ВыполнитьПроверкуПравДоступа("СохранениеДанныхПользователя", Метаданные);
	
	// СтандартныеПодсистемы.Печать
	Если Не Пользователи.РолиДоступны("ИзменениеМакетовПечатныхФорм") Тогда
		Элементы.ЗадатьДействиеПриВыбореМакетаПечатнойФормы.Видимость = Ложь;
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Печать
	
	ЭтоВебКлиент = ОбщегоНазначения.ЭтоВебКлиент();
	
	// СтандартныеПодсистемы.БазоваяФункциональность
	Если НЕ ЭтоВебКлиент Тогда
		Элементы.ГруппаУстановитьРасширениеРаботыСФайламиНаКлиенте.Видимость = Ложь;
	КонецЕсли;
	ЗапрашиватьПодтверждениеПриЗавершенииПрограммы = СтандартныеПодсистемыСервер.ЗапрашиватьПодтверждениеПриЗавершенииПрограммы();
	
	// Определение текущей настройки рабочей даты.
	ЗначениеРабочейДаты = ОбщегоНазначения.РабочаяДатаПользователя();
	Если ЗначениеЗаполнено(ЗначениеРабочейДаты) Тогда
		ИспользоватьТекущуюДатуКомпьютера = 0;
	Иначе
		ИспользоватьТекущуюДатуКомпьютера = 1;
		Элементы.ЗначениеРабочейДаты.Доступность = Ложь;
	КонецЕсли;
	
	// Конец СтандартныеПодсистемы.БазоваяФункциональность
	
	// СтандартныеПодсистемы.Пользователи
	ТекущийПользователь = Пользователи.АвторизованныйПользователь();
	Если ПравоДоступа("Просмотр", Метаданные.НайтиПоТипу(ТипЗнч(ТекущийПользователь))) Тогда
		АвторизованныйПользователь = Пользователи.АвторизованныйПользователь();
		Элементы.СведенияОПользователе.Заголовок = АвторизованныйПользователь;
	Иначе
		Элементы.ГруппаУчетнаяЗапись.Видимость = Ложь;
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Пользователи
	
	// СтандартныеПодсистемы.РаботаСФайлами
	НастройкиРаботыСФайлами = РаботаСФайлами.НастройкиРаботыСФайлами();
	СпрашиватьРежимРедактированияПриОткрытииФайла = НастройкиРаботыСФайлами.СпрашиватьРежимРедактированияПриОткрытииФайла;
	
	Если НастройкиРаботыСФайлами.ДействиеПоДвойномуЩелчкуМыши = "ОткрыватьФайл" Тогда
		ДействиеПоДвойномуЩелчкуМыши = Перечисления.ДействияСФайламиПоДвойномуЩелчку.ОткрыватьФайл;
	Иначе
		ДействиеПоДвойномуЩелчкуМыши = Перечисления.ДействияСФайламиПоДвойномуЩелчку.ОткрыватьКарточку;
	КонецЕсли;
	
	Если НастройкиРаботыСФайлами.СпособСравненияВерсийФайлов = "MicrosoftOfficeWord" Тогда
		СпособСравненияВерсийФайлов = Перечисления.СпособыСравненияВерсийФайлов.MicrosoftOfficeWord;
	Иначе
		СпособСравненияВерсийФайлов = Перечисления.СпособыСравненияВерсийФайлов.OpenOfficeOrgWriter;
	КонецЕсли;
	
	ПоказыватьПодсказкиПриРедактированииФайлов = НастройкиРаботыСФайлами.ПоказыватьПодсказкиПриРедактированииФайлов;
	
	ПоказыватьИнформациюЧтоФайлНеБылИзменен = НастройкиРаботыСФайлами.ПоказыватьИнформациюЧтоФайлНеБылИзменен;
	
	ПоказыватьЗанятыеФайлыПриЗавершенииРаботы = НастройкиРаботыСФайлами.ПоказыватьЗанятыеФайлыПриЗавершенииРаботы;
	
	ПоказыватьКолонкуРазмер = НастройкиРаботыСФайлами.ПоказыватьКолонкуРазмер;
	
	// Заполнение настроек открытия файлов.
	СтрокаНастройки = НастройкиОткрытияФайлов.Добавить();
	СтрокаНастройки.ТипФайла = Перечисления.ТипыФайловДляВстроенногоРедактора.ТекстовыеФайлы;
	
	СтрокаНастройки.Расширение = НастройкиРаботыСФайлами.ТекстовыеФайлыРасширение;
	
	СтрокаНастройки.СпособОткрытия = НастройкиРаботыСФайлами.ТекстовыеФайлыСпособОткрытия;
	
	Если ЭтоВебКлиент Или Не ОбщегоНазначения.ЭтоWindowsКлиент() Тогда
		Элементы.НастройкаСканирования.Видимость = Ложь;
	КонецЕсли;
	// Конец СтандартныеПодсистемы.РаботаСФайлами
	
	// СтандартныеПодсистемы.ЭлектроннаяПодпись
	Элементы.НастройкиЭлектроннойПодписиИШифрования.Видимость =
		ПравоДоступа("СохранениеДанныхПользователя", Метаданные);
	// Конец СтандартныеПодсистемы.ЭлектроннаяПодпись
	
	// ИнтеграцияС1СДокументооборотом
	Настройки = ИнтеграцияС1СДокументооборотБазоваяФункциональностьВызовСервера.ИспользоватьИнтеграцию();
	Элементы.ИнтеграцияС1СДокументооборот.Видимость = Настройки.ИспользоватьИнтеграциюДО2 Или Настройки.ИспользоватьИнтеграциюДО3;
	// Конец ИнтеграцияС1СДокументооборотом
	
	ДоступноВыключениеКонтроляОстатков = Не ПолучитьФункциональнуюОпцию("ОтключитьКонтрольОстатковТоваровПоРегиструСебестоимости")
		И Пользователи.РолиДоступны("ПропускКонтроляОстатковТоваровПоРегиструСебестоимости",, Ложь);
	Элементы.ВыключитьКонтрольОстатковТоваров.Видимость = ДоступноВыключениеКонтроляОстатков;
	Если ДоступноВыключениеКонтроляОстатков Тогда
		ОбновитьНадписьКнопкиВыключитьКонтрольОстатковТоваров(ПараметрыСеанса.ПроводитьБезКонтроляОстатковТоваровПоРегиструСебестоимости);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	#Если ВебКлиент Тогда
		ОбновитьГруппуУстановкиРасширенияРаботыСФайлами();
	#КонецЕсли
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Оповещение = Новый ОписаниеОповещения("ЗаписатьИЗакрытьОповещение", ЭтотОбъект);
	ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияФормы(Оповещение, Отказ, ЗавершениеРаботы,, ТекстПредупреждения);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

////////////////////////////////////////////////////////////////////////////////
// Страница Главное

&НаКлиенте
Процедура СведенияОПользователе(Команда)
	
	ПоказатьЗначение(, АвторизованныйПользователь);
	
КонецПроцедуры

&НаКлиенте
Процедура ПерсональнаяНастройкаПроксиСервера(Команда)
	
	ПолучениеФайловИзИнтернетаКлиент.ОткрытьФормуПараметровПроксиСервера(Новый Структура("НастройкаПроксиНаКлиенте", Истина));
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьРасширениеРаботыСФайламиНаКлиенте(Команда)
	
	Оповещение = Новый ОписаниеОповещения("УстановитьРасширениеРаботыСФайламиНаКлиентеЗавершение", ЭтотОбъект);
	НачатьУстановкуРасширенияРаботыСФайлами(Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьТекущуюДатуКомпьютераПриИзменении(Элемент)

	Если ИспользоватьТекущуюДатуКомпьютера = 1 Тогда
		ЗначениеРабочейДаты = '0001-01-01';
	Иначе
		ЗначениеРабочейДаты = ОбщегоНазначенияКлиент.ДатаСеанса();
	КонецЕсли;
	Элементы.ЗначениеРабочейДаты.Доступность = ИспользоватьТекущуюДатуКомпьютера = 0;
	Модифицированность = Истина;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Страница Органайзер

////////////////////////////////////////////////////////////////////////////////
// Страница Печать

&НаКлиенте
Процедура ЗадатьДействиеПриВыбореМакетаПечатнойФормы(Команда)
	
	ОткрытьФорму("РегистрСведений.ПользовательскиеМакетыПечати.Форма.ВыбораРежимаОткрытияМакета");
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Страница РаботаСФайлами

&НаКлиенте
Процедура НастройкаРабочегоКаталога(Команда)
	
	РаботаСФайламиКлиент.ОткрытьФормуНастройкиРабочегоКаталога();
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаСканирования(Команда)
	
	РаботаСФайламиКлиент.ОткрытьФормуНастройкиСканирования();
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиЭлектроннойПодписиИШифрования(Команда)
	
	ЭлектроннаяПодписьКлиент.ОткрытьНастройкиЭлектроннойПодписиИШифрования();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	ЗаписатьИЗакрытьНастройки();
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьПараметрыАвторизацииВ1СДокументооборот(Команда)
	
	ИмяОткрываемойФормы = "Обработка.ИнтеграцияС1СДокументооборотБазоваяФункциональность.Форма.АвторизацияВ1СДокументооборот";
	ОткрытьФорму(ИмяОткрываемойФормы,,,,,, Неопределено, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыключитьКонтрольОстатковТоваров(Команда)
	
	ВыключитьКонтрольОстатковТоваровСервер();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбновитьГруппуУстановкиРасширенияРаботыСФайлами()
	
	Оповещение = Новый ОписаниеОповещения("ОбновитьГруппуУстановкиРасширенияРаботыСФайламиЗавершение", ЭтотОбъект);
	НачатьПодключениеРасширенияРаботыСФайлами(Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьГруппуУстановкиРасширенияРаботыСФайламиЗавершение(Подключено, ДополнительныеПараметры) Экспорт
	
	Элементы.ГруппаСтраницы.ТекущаяСтраница = ?(Подключено, Элементы.ГруппаРасширениеРаботыСФайламиУстановлено, Элементы.ГруппаРасширениеРаботыСФайламиНеУстановлено);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьРасширениеРаботыСФайламиНаКлиентеЗавершение(ДополнительныеПараметры) Экспорт
	
	ОбновитьГруппуУстановкиРасширенияРаботыСФайлами();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрытьОповещение(Результат, Неопределен) Экспорт
	
	ЗаписатьИЗакрытьНастройки();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрытьНастройки()
	
	Настройки = Новый Структура;
	Настройки.Вставить("ЗапрашиватьПодтверждениеПриЗавершенииПрограммы", ЗапрашиватьПодтверждениеПриЗавершенииПрограммы);
	ОбщегоНазначенияКлиент.СохранитьПерсональныеНастройки(Настройки);
	
	ЗаписатьНастройкиНаСервере(Настройки);
	ОбщегоНазначенияКлиент.ОбновитьИнтерфейсПрограммы();
	Модифицированность = Ложь;
	Закрыть();
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьНастройкиНаСервере(Настройки)
	
	// Рабочая дата.
	Если ИспользоватьТекущуюДатуКомпьютера = 1 Тогда
		ЗначениеРабочейДатыДляСохранения = '0001-01-01';
	Иначе
		ЗначениеРабочейДатыДляСохранения = ЗначениеРабочейДаты;
	КонецЕсли;
	ОбщегоНазначения.УстановитьРабочуюДатуПользователя(ЗначениеРабочейДатыДляСохранения);
	
	ОбщегоНазначения.СохранитьПерсональныеНастройки(Настройки);
	
	// СтандартныеПодсистемы.БазоваяФункциональность
	СохранитьСвойстваКоллекции("ОбщиеНастройкиПользователя", ЭтотОбъект, "ПредлагатьПерейтиНаСайтПриЗапуске");
	// Конец СтандартныеПодсистемы.БазоваяФункциональность
	
	// СтандартныеПодсистемы.РаботаСФайлами
	НастройкиРаботыСФайлами = Новый Структура;
	НастройкиРаботыСФайлами.Вставить("ДействиеПоДвойномуЩелчкуМыши", ДействиеПоДвойномуЩелчкуМыши);
	НастройкиРаботыСФайлами.Вставить("СпрашиватьРежимРедактированияПриОткрытииФайла", СпрашиватьРежимРедактированияПриОткрытииФайла);
	НастройкиРаботыСФайлами.Вставить("ПоказыватьПодсказкиПриРедактированииФайлов", ПоказыватьПодсказкиПриРедактированииФайлов);
	НастройкиРаботыСФайлами.Вставить("ПоказыватьЗанятыеФайлыПриЗавершенииРаботы", ПоказыватьЗанятыеФайлыПриЗавершенииРаботы);
	НастройкиРаботыСФайлами.Вставить("ПоказыватьКолонкуРазмер", ПоказыватьКолонкуРазмер);
	НастройкиРаботыСФайлами.Вставить("ПоказыватьИнформациюЧтоФайлНеБылИзменен", ПоказыватьИнформациюЧтоФайлНеБылИзменен);
	НастройкиРаботыСФайлами.Вставить("СпособСравненияВерсийФайлов", СпособСравненияВерсийФайлов);
	
	Если НастройкиОткрытияФайлов.Количество() >= 1 Тогда
		НастройкиРаботыСФайлами.Вставить("ТекстовыеФайлыРасширение", НастройкиОткрытияФайлов[0].Расширение);
		НастройкиРаботыСФайлами.Вставить("ТекстовыеФайлыСпособОткрытия", НастройкиОткрытияФайлов[0].СпособОткрытия);
	КонецЕсли;
	
	РаботаСФайлами.СохранитьНастройкиРаботыСФайлами(НастройкиРаботыСФайлами);
	// Конец СтандартныеПодсистемы.РаботаСФайлами
	
	ОбновитьПовторноИспользуемыеЗначения();
	
КонецПроцедуры

&НаСервере
Процедура СохранитьСвойстваКоллекции(КлючОбъекта, Коллекция, ИменаРеквизитов)
	СтруктураРеквизитов = Новый Структура(ИменаРеквизитов);
	ЗаполнитьЗначенияСвойств(СтруктураРеквизитов, Коллекция);
	Для Каждого КлючИЗначение Из СтруктураРеквизитов Цикл
		ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(КлючОбъекта, КлючИЗначение.Ключ, КлючИЗначение.Значение);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ВыключитьКонтрольОстатковТоваровСервер()
	
	ПараметрыСеанса.ПроводитьБезКонтроляОстатковТоваровПоРегиструСебестоимости = Не ПараметрыСеанса.ПроводитьБезКонтроляОстатковТоваровПоРегиструСебестоимости;
	
	ОбновитьНадписьКнопкиВыключитьКонтрольОстатковТоваров(ПараметрыСеанса.ПроводитьБезКонтроляОстатковТоваровПоРегиструСебестоимости);
	
	Если ПараметрыСеанса.ПроводитьБезКонтроляОстатковТоваровПоРегиструСебестоимости Тогда
		ТекстСообщения = НСтр("ru = 'Пользователем %ИмяПользователя% в рамках своего сеанса выключен контроль остатков товаров по регистру себестоимости.'", ОбщегоНазначения.КодОсновногоЯзыка());
	Иначе
		ТекстСообщения = НСтр("ru = 'Пользователем %ИмяПользователя% возобновлен контроль остатков товаров по регистру себестоимости.'", ОбщегоНазначения.КодОсновногоЯзыка());
	КонецЕсли;
	ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ИмяПользователя%", Пользователи.ТекущийПользователь());
	
	ЗаписьЖурналаРегистрации(ЗапасыСервер.ИмяСобытияВыключенКонтрольОстатков(), УровеньЖурналаРегистрации.Предупреждение,,, ТекстСообщения);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьНадписьКнопкиВыключитьКонтрольОстатковТоваров(КонтрольВыключен)
	
	Если КонтрольВыключен Тогда
		Элементы.ВыключитьКонтрольОстатковТоваров.Заголовок = НСтр("ru = 'Возобновить контроль остатков'");
		Элементы.ВыключитьКонтрольОстатковТоваров.РасширеннаяПодсказка.Заголовок =
			НСтр("ru = 'Восстановление контроля остатков товаров по регистру себестоимости для текущего пользователя, ранее выключенных на время сеанса.'");
	Иначе
		Элементы.ВыключитьКонтрольОстатковТоваров.Заголовок = НСтр("ru = 'Отключить контроль остатков (на время сеанса)'");
		Элементы.ВыключитьКонтрольОстатковТоваров.РасширеннаяПодсказка.Заголовок =
			НСтр("ru = 'Выключение контроля остатков товаров по регистру себестоимости для текущего пользователя на время сеанса работы.'");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
