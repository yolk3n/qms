
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если Не Параметры.Свойство("ДанныеФормы") Тогда
		ВызватьИсключение НСтр("ru = 'Обработка используется только вместе с объектами информационной базы'");
	КонецЕсли;
	
	ДанныеФормы = Параметры.ДанныеФормы;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеФормы);
	
	Если Параметры.Свойство("Заголовок") Тогда
		Заголовок = Параметры.Заголовок;
	КонецЕсли;
	
	Для Каждого ТекущийПациент Из ДанныеФормы.МассивПациентов Цикл
		ЗаполнитьЗначенияСвойств(Пациенты.Добавить(), ТекущийПациент);
	КонецЦикла;
	
	Элементы.ПациентыКоличество.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Количество, %1'"), ЕдиницаИзмерения);
	
	КоличествоПоПациентам = Пациенты.Итог("Количество");
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	ШаблонСообщения = НСтр("ru = 'Не заполнена колонка ""%ПредставлениеКолонки%"" в строке %НомерСтроки% списка ""%ИмяТабличнойЧасти%""'");
	
	Для Каждого СтрокаПациент Из Пациенты Цикл
		
		НомерСтроки = Пациенты.Индекс(СтрокаПациент) + 1;
		
		Если Не ЗначениеЗаполнено(СтрокаПациент.Пациент) Тогда
			
			ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%ПредставлениеКолонки%", "Пациент");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерСтроки%", НомерСтроки);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ИмяТабличнойЧасти%", "Пациенты");
			ОбщегоНазначения.СообщитьПользователю(
				ТекстСообщения,
				,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Пациенты", НомерСтроки, "Пациент"),
				,
				Отказ);
			
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(СтрокаПациент.Количество) Тогда
			
			ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%ПредставлениеКолонки%", "Количество");
			ТекстСообщения = СтрЗаменить(ТекстСообщения , "%НомерСтроки%", НомерСтроки);
			ТекстСообщения = СтрЗаменить(ТекстСообщения , "%ИмяТабличнойЧасти%", "Пациенты");
			ОбщегоНазначения.СообщитьПользователю(
				ТекстСообщения,
				,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Пациенты", НомерСтроки, "Количество"),
				,
				Отказ);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	ТекстВопроса = НСтр("ru = 'Список пациентов был изменен.'") + Символы.ПС + НСтр("ru = 'Перенести изменения в документ?'");
	Оповещение = Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект);
	ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияФормы(Оповещение, Отказ, ЗавершениеРаботы, ТекстВопроса, ТекстПредупреждения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	СохранитьВводПациентов();
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ
#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СохранитьИзменения(Команда)
	
	СохранитьВводПациентов();
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ
#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ПациентыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		ТекущаяСтрока = Элементы.Пациенты.ТекущиеДанные;
		ТекущаяСтрока.Пациент = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПациентыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если Не ОтменаРедактирования Тогда
		КоличествоПоПациентам = Пациенты.Итог("Количество");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПациентыПослеУдаления(Элемент)
	
	КоличествоПоПациентам = Пациенты.Итог("Количество");
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийЭлементовФормы

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура СохранитьВводПациентов()
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	МассивПациентов = Новый Массив();
	
	Для Каждого СтрокаПациента Из Пациенты Цикл
		
		ДанныеПациента = Новый Структура;
		ДанныеПациента.Вставить("Пациент", СтрокаПациента.Пациент);
		ДанныеПациента.Вставить("Количество", СтрокаПациента.Количество);
		
		МассивПациентов.Добавить(ДанныеПациента);
		
	КонецЦикла;
	
	Значение = Новый Структура;
	Значение.Вставить("ИзмененныеДанные", МассивПациентов);
	
	Модифицированность = Ложь;
	Закрыть(Значение);
	
КонецПроцедуры

#КонецОбласти // СлужебныеПроцедурыИФункции
