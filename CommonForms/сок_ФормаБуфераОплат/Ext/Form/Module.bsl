&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Элементы.Список.ОбновлениеПриИзмененииДанных=ОбновлениеПриИзмененииДанных.Авто;
КонецПроцедуры



&НаСервере
Процедура ИзменитьПолеРегистраНаСервере(КлючЗаписи,Имяполя,Значение)
	
		НачатьТранзакцию();
		
		Рег = РегистрыСведений.сок_БуферЗаявок.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(Рег,КлючЗаписи);
		Рег.Прочитать();
		Рег[ИмяПоля]=Значение;
		Рег.Записать(Истина);
		ЗафиксироватьТранзакцию();
	
КонецПроцедуры	
&НаКлиенте
Процедура ИзменитьПолеОднимНажатием(КлючЗаписи,ИмяПоля,Значение)
	ИзменитьПолеРегистраНаСервере(КлючЗаписи,ИмяПоля,Значение);
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОбновитьСписокБезКонтекста(Форма)
	ТС = Форма.Элементы.Список.ТекущаяСтрока;
	Форма.Элементы.Список.Обновить();
	Форма.Элементы.Список.ТекущаяСтрока=ТС;
КонецПроцедуры	

&НаСервере
Процедура ОбновитьСписокНаСервере()
	ОбновитьСписокБезКонтекста(Этаформа);
КонецПроцедуры	



&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Поле.Имя="СписокПометка" Тогда
		ИзменитьПолеОднимНажатием(Элементы.Список.ТекущаяСтрока,"Пометка",НЕ Элементы.Список.ТекущиеДанные.Пометка);
		ОбновитьСписокНаСервере();
	//ИначеЕсли Поле.Имя="СписокДокументОснование" Тогда	
	ИначеЕсли Поле.Имя="СписокЗаказПоставщику" Тогда	
		Открытьформу("Документ.ЗаказПоставщику.ФормаОбъекта",Новый структура("Ключ",Элементы.Список.ТекущиеДанные.Заявка.ЗаказПоставщику),Этаформа);
	Иначе
		Открытьформу("Документ.сок_ЗаявкаНаРасходованиеДенежныхСредств.ФормаОбъекта",Новый структура("Ключ",Элементы.Список.ТекущиеДанные.Заявка),Этаформа);
	КонецЕсли;	
КонецПроцедуры


&НаКлиенте
Процедура СписокПередНачаломИзменения(Элемент, Отказ)
	Отказ=Истина;
КонецПроцедуры


&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ=Истина;
КонецПроцедуры


&НаКлиенте
Процедура СписокПередУдалением(Элемент, Отказ)
	//Вернуть отказ
//	Отказ=Истина;
КонецПроцедуры

&НаСервере
Процедура ПометкаУстановитьНаСервере(Значение)
	
	Для Каждого Стр Из Элементы.Список.ВыделенныеСтроки Цикл
		
		Запрос=Новый Запрос;
		Запрос.Текст="ВЫБРАТЬ
		             |	сок_БуферДляЗакупки.НоменклатураЗаказа КАК НоменклатураЗаказа,
		             |	сок_БуферДляЗакупки.Номенклатура КАК Номенклатура,
		             |	сок_БуферДляЗакупки.ДатаЗаказа КАК ДатаЗаказа,
		             |	сок_БуферДляЗакупки.Требование КАК Требование,
		             |	сок_БуферДляЗакупки.ИдентификаторСтроки КАК ИдентификаторСтроки,
		             |	сок_БуферДляЗакупки.КодСтроки КАК КодСтроки,
		             |	сок_БуферДляЗакупки.Количество КАК Количество,
		             |	сок_БуферДляЗакупки.Пометка КАК Пометка,
		             |	сок_БуферДляЗакупки.Менеджер КАК Менеджер,
		             |	сок_БуферДляЗакупки.Поставщик КАК Поставщик,
		             |	сок_БуферДляЗакупки.ЦенаЗакупки КАК ЦенаЗакупки
		             |ИЗ
		             |	РегистрСведений.сок_БуферДляЗакупки КАК сок_БуферДляЗакупки
		             |ГДЕ
		             |	сок_БуферДляЗакупки.ИдентификаторСтроки = &ИдентификаторСтроки
		             |	И сок_БуферДляЗакупки.КодСтроки = &КодСтроки";
		Запрос.УстановитьПараметр("ИдентификаторСтроки",Стр.ИдентификаторСтроки);
		Запрос.УстановитьПараметр("КодСтроки",Стр.КодСтроки);
		
		Выборка=Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			МенеджерЗаписи=РегистрыСведений.сок_БуферДляЗакупки.СоздатьМенеджерЗаписи();
			ЗаполнитьЗначенияСвойств(МенеджерЗаписи,Выборка);
			МенеджерЗаписи.Прочитать();
			МенеджерЗаписи.Удалить();
			
			МенеджерЗаписи=РегистрыСведений.сок_БуферДляЗакупки.СоздатьМенеджерЗаписи();
			ЗаполнитьЗначенияСвойств(МенеджерЗаписи,Выборка);
			МенеджерЗаписи.Пометка=Значение;
			Если Значение=Истина Тогда
				МенеджерЗаписи.Менеджер=ПараметрыСеанса.ТекущийПользователь;
			КонецЕсли;	
			МенеджерЗаписи.Записать(Истина);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаСервере
Процедура ПометкаСнятьНаСервере()
	
	Для Каждого Стр Из Элементы.Список.ВыделенныеСтроки Цикл
		
		Запрос=Новый Запрос;
		Запрос.Текст="ВЫБРАТЬ
		             |	сок_БуферДляЗакупки.НоменклатураЗаказа КАК НоменклатураЗаказа,
		             |	сок_БуферДляЗакупки.Номенклатура КАК Номенклатура,
		             |	сок_БуферДляЗакупки.ДатаЗаказа КАК ДатаЗаказа,
		             |	сок_БуферДляЗакупки.Требование КАК Требование,
		             |	сок_БуферДляЗакупки.ИдентификаторСтроки КАК ИдентификаторСтроки,
		             |	сок_БуферДляЗакупки.КодСтроки КАК КодСтроки,
		             |	сок_БуферДляЗакупки.Количество КАК Количество,
		             |	сок_БуферДляЗакупки.Пометка КАК Пометка,
		             |	сок_БуферДляЗакупки.Менеджер КАК Менеджер,
		             |	сок_БуферДляЗакупки.Поставщик КАК Поставщик,
		             |	сок_БуферДляЗакупки.ЦенаЗакупки КАК ЦенаЗакупки
		             |ИЗ
		             |	РегистрСведений.сок_БуферДляЗакупки КАК сок_БуферДляЗакупки
		             |ГДЕ
		             |	сок_БуферДляЗакупки.ИдентификаторСтроки = &ИдентификаторСтроки
		             |	И сок_БуферДляЗакупки.КодСтроки = &КодСтроки";
		Запрос.УстановитьПараметр("ИдентификаторСтроки",Стр.ИдентификаторСтроки);
		Запрос.УстановитьПараметр("КодСтроки",Стр.КодСтроки);
		
		Выборка=Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			МенеджерЗаписи=РегистрыСведений.сок_БуферДляЗакупки.СоздатьМенеджерЗаписи();
			ЗаполнитьЗначенияСвойств(МенеджерЗаписи,Выборка);
			МенеджерЗаписи.Прочитать();
			МенеджерЗаписи.Удалить();
			
			МенеджерЗаписи=РегистрыСведений.сок_БуферДляЗакупки.СоздатьМенеджерЗаписи();
			ЗаполнитьЗначенияСвойств(МенеджерЗаписи,Выборка);
			МенеджерЗаписи.Пометка=Ложь;
			МенеджерЗаписи.Записать(Истина);
		КонецЕсли;
		
	КонецЦикла;
	
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ПометкаСнять(Команда)
	
	ПометкаУстановитьНаСервере(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ПометкаУстановить(Команда)
	
	ПометкаУстановитьНаСервере(Истина);
	
КонецПроцедуры

&НаСервере
Процедура ВБитФинансНаСервере()
	НачатьТранзакцию();        
	Запрос = новый Запрос;
	Запрос.Текст=
	"ВЫБРАТЬ
	|	сок_БуферЗаявок.Заявка КАК Заявка
	|ИЗ
	|	РегистрСведений.сок_БуферЗаявок КАК сок_БуферЗаявок
	|ГДЕ
	|	сок_БуферЗаявок.Пометка";
	Выборка = Запрос.Выполнить().Выгрузить();
	Для Каждого Стр из Выборка Цикл
		
		
		
		
		Элемент = Стр.заявка.ПолучитьОбъект();
		
		Если Ложь Тогда Элемент = Документы.сок_ЗаявкаНаРасходованиеДенежныхСредств.СоздатьДокумент() КонецЕсли;
		Если Элемент.ДоговорКонтрагента.ПодключенБитФинанс Тогда
			Если Сок_Веб.ОтправитьЗаявкуНаРасходованиеДенежныхСредств(Элемент) Тогда
				
				Элемент.Отправлена=Истина;
				Элемент.ДатаОтправки=ТекущаяДата();
				Попытка
					Элемент.Записать(РежимЗаписиДокумента.Проведение);
				Исключение   
					ТекстСообщения="Не удлось изменить "+Стр.Заявка;
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
					ОтменитьТранзакцию();
					Возврат;
				Конецпопытки;
				
				РегБ = РегистрыСведений.сок_БуферЗаявок.СоздатьМенеджерЗаписи();
				ЗаполнитьЗначенияСвойств(РегБ,Стр);
				РегБ.Прочитать();
				Если РегБ.Выбран() Тогда
					РегБ.Удалить();
				КонецЕсли;	
			КонецЕсли;;
		Иначе     
			ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю("Договор не подключен к бит-финанс. Отправка заявки не возможна "+Стр.Заявка);
		КонецЕсли;	
	КонецЦикла;	
	ЗафиксироватьТранзакцию();
КонецПроцедуры

&НаКлиенте
Процедура ВБитФинанс(Команда)
	ВБитФинансНаСервере();
	Элементы.Список.Обновить();
КонецПроцедуры





         











