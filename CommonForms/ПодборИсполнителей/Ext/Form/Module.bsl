
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформлениеФормы();
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ТолькоПростыеРоли = Ложь;
	Если Параметры.Свойство("ТолькоПростыеРоли", ТолькоПростыеРоли) И ТолькоПростыеРоли = Истина Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокРоли, "ИспользуетсяБезОбъектовАдресации", Истина);
	КонецЕсли;
	
	БезВнешнихРолей = Ложь;
	Если Параметры.Свойство("БезВнешнихРолей", БезВнешнихРолей) И БезВнешнихРолей = Истина Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокРоли, "ВнешняяРоль", Ложь);
	КонецЕсли;
	
	Если Параметры.ПоказыватьФункции Тогда 
		Элементы.Функции.Видимость = Истина;
		СписокФункций = ШаблоныБизнесПроцессов.ПолучитьСписокДоступныхФункций();
	Иначе
		Элементы.Функции.Видимость = Ложь;
	КонецЕсли;
	
	АдресВременногоХранилища = Параметры.АдресВременногоХранилища;
	Выбранные.Загрузить(ПолучитьИзВременногоХранилища(АдресВременногоХранилища));
	
	ВыбранныеКоличество = Выбранные.Количество();
	Для Инд = 1 По ВыбранныеКоличество Цикл
		СтрокаВыбранные = Выбранные[ВыбранныеКоличество - Инд];
		Если Не ЗначениеЗаполнено(СтрокаВыбранные.Исполнитель)
		   И Не ЗначениеЗаполнено(СтрокаВыбранные.ОсновнойОбъектАдресации)
		   И Не ЗначениеЗаполнено(СтрокаВыбранные.ДополнительныйОбъектАдресации) Тогда
		Выбранные.Удалить(СтрокаВыбранные);
		КонецЕсли;
	КонецЦикла;
	
	ОбновитьЗначениеПараметраКомпоновкиДанных(
		СписокПользователи,
		"ПустойУникальныйИдентификатор",
		Новый УникальныйИдентификатор("00000000-0000-0000-0000-000000000000"));
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ВРег(ИсточникВыбора.ИмяФормы) = ВРег("ОбщаяФорма.ВыборРолиИсполнителя") Тогда
		Если ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда
			ДобавитьВыбраннуюРоль(ВыбранноеЗначение);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ
#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Включить(Команда)
	
	Если Элементы.Страницы.ТекущаяСтраница = Элементы.Пользователи Тогда 
		ВыборПользователя(Элементы.СписокПользователи.ТекущаяСтрока);
		
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.Роли Тогда
		ВыборРоли(Элементы.СписокРоли.ТекущаяСтрока);
		
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.Функции Тогда
		ВыборФункции(Элементы.СписокФункций.ТекущаяСтрока);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Исключить(Команда)
	
	ТекущаяСтрока = Элементы.Выбранные.ТекущаяСтрока;
	Если ТекущаяСтрока = Неопределено Тогда 
		Возврат;
	КонецЕсли;	
	
	СтрокаПоИдентификатору = Выбранные.НайтиПоИдентификатору(ТекущаяСтрока);
	Выбранные.Удалить(СтрокаПоИдентификатору);
	
КонецПроцедуры

&НаКлиенте
Процедура ОК(Команда)
	
	ПоместитьИсполнителейВоВременноеХранилище();
	ОповеститьОВыборе(АдресВременногоХранилища);
	
КонецПроцедуры

#КонецОбласти // ОбработчикиКомандФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ
#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СписокПользователиВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ВыборПользователя(Значение);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокРолиВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ВыборРоли(Элемент.ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокФункцийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ВыборФункции(ВыбраннаяСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныеПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	СтандартнаяОбработка = Ложь;
	
	Если ТипЗнч(ПараметрыПеретаскивания.Значение) = Тип("СправочникСсылка.Пользователи") Тогда
		ВыборПользователя(ПараметрыПеретаскивания.Значение); 
		
	ИначеЕсли ТипЗнч(ПараметрыПеретаскивания.Значение) = Тип("СправочникСсылка.РолиИсполнителей") Тогда
		ВыборРоли(Элементы.СписокРоли.ДанныеСтроки(ПараметрыПеретаскивания.Значение));
		
	ИначеЕсли ТипЗнч(ПараметрыПеретаскивания.Значение) = Тип("Число") Тогда
		ВыборФункции(ПараметрыПеретаскивания.Значение);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныеПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийЭлементовФормы

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформлениеФормы()
	
	УсловноеОформлениеСписка = ОбщегоНазначенияБольничнаяАптекаКлиентСервер.ПолучитьУсловноеОформлениеДинамическогоСписка(СписокРоли);
	
	// Цвет текста поля Наименование
	Элемент = УсловноеОформлениеСписка.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.Наименование.Имя);
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(Элемент.Отбор,
		"ВнешняяРоль", ВидСравненияКомпоновкиДанных.Равно, Ложь);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(Элемент.Отбор,
		"ЕстьИсполнители", ВидСравненияКомпоновкиДанных.Равно, Ложь);
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.РольБезИсполнителей);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьЗначениеПараметраКомпоновкиДанных(Знач ВладелецПараметров, Знач ИмяПараметра, Знач ЗначениеПараметра)
	
	Для каждого Параметр Из ВладелецПараметров.Параметры.Элементы Цикл
		Если Строка(Параметр.Параметр) = ИмяПараметра Тогда
			Если Параметр.Использование И Параметр.Значение = ЗначениеПараметра Тогда
				Возврат;
			КонецЕсли;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	ВладелецПараметров.Параметры.УстановитьЗначениеПараметра(ИмяПараметра, ЗначениеПараметра);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборПользователя(ВыбранноеЗначение)
	
	ПараметрыОтбора = Новый Структура("Исполнитель", ВыбранноеЗначение);
	Если Выбранные.НайтиСтроки(ПараметрыОтбора).Количество() > 0 Тогда
		
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Пользователь ""%1"" уже выбран.'"),
			Строка(ВыбранноеЗначение));
		
		ПоказатьПредупреждение(, ТекстСообщения);
		
	Иначе
		НоваяСтрока = Выбранные.Добавить();
		НоваяСтрока.Исполнитель = ВыбранноеЗначение;
		Элементы.Выбранные.ТекущаяСтрока = НоваяСтрока.ПолучитьИдентификатор();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборРоли(ТекущиеДанные)
	
	Если ТекущиеДанные.ИспользуетсяСОбъектамиАдресации Тогда
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("РольИсполнителя",               ТекущиеДанные.Ссылка);
		ПараметрыФормы.Вставить("ОсновнойОбъектАдресации",       Неопределено);
		ПараметрыФормы.Вставить("ДополнительныйОбъектАдресации", Неопределено);
		ПараметрыФормы.Вставить("ВыборОбъектаАдресации",         Истина);
		ОткрытьФорму("ОбщаяФорма.ВыборРолиИсполнителя", ПараметрыФормы, ЭтотОбъект);
	Иначе
		ВыбранноеЗначение = Новый Структура("РольИсполнителя, ОсновнойОбъектАдресации, ДополнительныйОбъектАдресации", ТекущиеДанные.Ссылка, Неопределено, Неопределено);
		ДобавитьВыбраннуюРоль(ВыбранноеЗначение);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВыбраннуюРоль(РезультатВыбора)
	
	Если ТипЗнч(РезультатВыбора) = Тип("Структура") Тогда
		
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("Исполнитель", РезультатВыбора.РольИсполнителя);
		ПараметрыОтбора.Вставить("ОсновнойОбъектАдресации", РезультатВыбора.ОсновнойОбъектАдресации);
		ПараметрыОтбора.Вставить("ДополнительныйОбъектАдресации", РезультатВыбора.ДополнительныйОбъектАдресации);
		
		Если Выбранные.НайтиСтроки(ПараметрыОтбора).Количество() > 0 Тогда
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Роль ""%1"" с указанными параметрами адресации уже выбрана.'"), 
				Строка(РезультатВыбора.РольИсполнителя));
			
			ПоказатьПредупреждение(, ТекстСообщения);
			
		Иначе
			НоваяСтрока = Выбранные.Добавить();
			НоваяСтрока.Исполнитель = РезультатВыбора.РольИсполнителя;
			НоваяСтрока.ОсновнойОбъектАдресации = РезультатВыбора.ОсновнойОбъектАдресации;
			НоваяСтрока.ДополнительныйОбъектАдресации = РезультатВыбора.ДополнительныйОбъектАдресации;
			Элементы.Выбранные.ТекущаяСтрока = НоваяСтрока.ПолучитьИдентификатор();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборФункции(ВыбраннаяСтрока)
	
	ВыбранноеЗначение = СписокФункций.НайтиПоИдентификатору(ВыбраннаяСтрока).Представление;
	ПараметрыОтбора = Новый Структура("Исполнитель", ВыбранноеЗначение);
	
	Если Выбранные.НайтиСтроки(ПараметрыОтбора).Количество() > 0 Тогда
		
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Автоподстановка ""%1"" уже выбрана.'"),
			Строка(ВыбранноеЗначение));
		
		ПоказатьПредупреждение(, ТекстСообщения);
		
	Иначе
		НоваяСтрока = Выбранные.Добавить();
		НоваяСтрока.Исполнитель = ВыбранноеЗначение;
		Элементы.Выбранные.ТекущаяСтрока = НоваяСтрока.ПолучитьИдентификатор();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПоместитьИсполнителейВоВременноеХранилище()
	
	ПоместитьВоВременноеХранилище(Выбранные.Выгрузить(), АдресВременногоХранилища);
	
КонецПроцедуры

#КонецОбласти // СлужебныеПроцедурыИФункции
