
#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Записать(Команда)
	
	УстановитьГраницы();
	
	ПоказатьОповещениеПользователя(
		НСтр("ru = 'Установка границы'"),,
		НСтр("ru = 'Установка границы загрузки остатков потребительских упаковок выполнена.'"),
		БиблиотекаКартинок.Информация32);
	
КонецПроцедуры

#КонецОбласти // ОбработчикиКомандФормы

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура МестоДеятельностиПриИзменении(Элемент)
	
	ПолучитьГраницы();
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийЭлементовФормы

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПолучитьГраницы()
	
	ИдентификаторМестаДеятельности = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(МестоДеятельности, "Идентификатор");
	
	ГраницаЗагрузкиОстатковПотребительскихУпаковокМДЛП = ИнтеграцияМДЛПВызовСервера.ПолучитьГраницуЗагрузкиОстатковПотребительскихУпаковок(ИдентификаторМестаДеятельности);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьГраницы()
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	ИдентификаторМестаДеятельности = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(МестоДеятельности, "Идентификатор");
	
	КлючиГраниц = Новый Массив;
	КлючиГраниц.Добавить("ГраницаЗагрузкиОстатковПотребительскихУпаковокМДЛП");
	
	Для Каждого Ключ Из КлючиГраниц Цикл
		
		Границы = Константы[Ключ].Получить().Получить();
		Если Границы <> Неопределено Тогда
			РедактируемыеГраницы = Новый Соответствие(Границы);
		Иначе
			РедактируемыеГраницы = Новый Соответствие;
		КонецЕсли;
		
		РедактируемыеГраницы.Вставить(ИдентификаторМестаДеятельности, ЭтотОбъект[Ключ]);
		НовыеГраницы = Новый ФиксированноеСоответствие(РедактируемыеГраницы);
		Константы[Ключ].Установить(Новый ХранилищеЗначения(НовыеГраницы));
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти // СлужебныеПроцедурыИФункции
