
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПараметрыЗагрузки = Константы.ПараметрыЗагрузкиДанныхИзСервисаМинздраваРФ.Получить().Получить();
	Если ТипЗнч(ПараметрыЗагрузки) = Тип("ФиксированнаяСтруктура") Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ПараметрыЗагрузки);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Оповестить = Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект);
	ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияФормы(Оповестить, Отказ, ЗавершениеРаботы,, ТекстПредупреждения);
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ
#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	ЗаписатьНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоУмолчанию(Команда)
	
	ЗаполнитьПоУмолчаниюНаСервере();
	
КонецПроцедуры

#КонецОбласти // ОбработчикиКомандФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ
#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура АдресСервисаМинздраваРФПриИзменении(Элемент)
	
	СтруктураURI = ОбщегоНазначенияКлиентСервер.СтруктураURI(АдресСервисаМинздраваРФ);
	Если ЗначениеЗаполнено(СтруктураURI.ПутьНаСервере) Тогда
		АдресСервисаМинздраваРФ = СтруктураURI.Схема + "://" + СтруктураURI.Хост;
		АдресРесурса = СтруктураURI.ПутьНаСервере;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийЭлементовФормы

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

// Продолжение процедуры ПередЗакрытием
//
&НаКлиенте
Процедура ПередЗакрытиемЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ЗаписатьНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьНаКлиенте()
	
	ОчиститьСообщения();
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	ЗаписатьНаСервере();
	
	// Для механизма подтверждения закрытия формы.
	// (см. процедуру ПередЗакрытием).
	Модифицированность = Ложь;
	
	Оповестить("Запись_ПараметрыЗагрузкиДанныхИзСервисаМинздраваРФ");
	
	Закрыть();
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьНаСервере()
	
	ПараметрыЗагрузки = Новый Структура("АдресСервисаМинздраваРФ, АдресРесурса, ИдентификаторПользователя, ИдентификаторКлассификатора_СтруктурныеПодразделения, ИдентификаторКлассификатора_Отделения, ИдентификаторКлассификатора_Должности, ИдентификаторКлассификатора_Должности1002");
	ЗаполнитьЗначенияСвойств(ПараметрыЗагрузки, ЭтотОбъект);
	
	Константы.ПараметрыЗагрузкиДанныхИзСервисаМинздраваРФ.Установить(Новый ХранилищеЗначения(Новый ФиксированнаяСтруктура(ПараметрыЗагрузки)));
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоУмолчаниюНаСервере()
	
	ЗначениеПоУмолчанию = Константы.ПараметрыЗагрузкиДанныхИзСервисаМинздраваРФ.СоздатьМенеджерЗначения().ЗначениеПоУмолчанию();
	СтруктураЗначений = ЗначениеПоУмолчанию.Получить();
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, СтруктураЗначений);
	
КонецПроцедуры

#КонецОбласти // СлужебныеПроцедурыИФункции
