
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(Параметры.СхемаКомпоновкиДанных));
	
	Режим = Параметры.Режим;
	
	Если Режим = "Группировка" Тогда
		Заголовок = НСтр("ru = 'Выбор поля группировки'");
		ИмяТаблицыДоступныхПолей = "ДоступныеПоляГруппировок";
		ФиктивнаяСтрокаГруппировка = КомпоновщикНастроек.Настройки.Структура.Добавить(Тип("ГруппировкаКомпоновкиДанных"));
		Элементы.Настройки.ТекущаяСтрока = КомпоновщикНастроек.Настройки.ПолучитьИдентификаторПоОбъекту(ФиктивнаяСтрокаГруппировка);
	ИначеЕсли Режим = "Выбор" Тогда
		Заголовок = НСтр("ru = 'Выбор поля'");
		ИмяТаблицыДоступныхПолей = "ДоступныеПоляВыбора";
	ИначеЕсли Режим = "Отбор" Тогда
		Заголовок = НСтр("ru = 'Выбор поля отбора'");
		ИмяТаблицыДоступныхПолей = "ДоступныеПоляОтбора";
	ИначеЕсли Режим = "Порядок" Тогда
		Заголовок = НСтр("ru = 'Выбор поля сортировки'");
		ИмяТаблицыДоступныхПолей = "ДоступныеПоляПорядка";
	КонецЕсли;
	
	Если Параметры.ИсключаемыеПоля <> Неопределено Тогда
		Для Каждого Поле Из Параметры.ИсключаемыеПоля Цикл
			Ограничение = Элементы[ИмяТаблицыДоступныхПолей].ОграниченияИспользования.Добавить();
			Ограничение.Доступность = Ложь;
			Ограничение.Поле = Новый ПолеКомпоновкиДанных(Поле);
		КонецЦикла;
	КонецЕсли;
	
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы["Группа" + ИмяТаблицыДоступныхПолей];
	
	Если Не ПустаяСтрока(Параметры.ТекущаяСтрока) Тогда
		ДоступноеПоле = КомпоновщикНастроек.Настройки[ИмяТаблицыДоступныхПолей].НайтиПоле(Новый ПолеКомпоновкиДанных(Параметры.ТекущаяСтрока));
		Если ДоступноеПоле <> Неопределено Тогда
			Идентификатор = КомпоновщикНастроек.Настройки[ИмяТаблицыДоступныхПолей].ПолучитьИдентификаторПоОбъекту(ДоступноеПоле);
			Элементы[ИмяТаблицыДоступныхПолей].ТекущаяСтрока = Идентификатор;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ
#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаОК(Команда)
	
	ОбработатьВыборДоступныхПолей();
	
КонецПроцедуры

#КонецОбласти // ОбработчикиКомандФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ
#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ДоступныеПоляВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ОбработатьВыборДоступныхПолей();
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийЭлементовФормы

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбработатьВыборДоступныхПолей()
	
	ТекущиеДанные = Элементы[ИмяТаблицыДоступныхПолей].ТекущаяСтрока;
	ДоступноеПоле = КомпоновщикНастроек.Настройки[ИмяТаблицыДоступныхПолей].ПолучитьОбъектПоИдентификатору(ТекущиеДанные);
	
	Если Не ДоступноеПоле.Папка Тогда
		ПараметрыВыбранногоПоля = Новый Структура;
		ПараметрыВыбранногоПоля.Вставить("Поле", Строка(ДоступноеПоле.Поле));
		ПараметрыВыбранногоПоля.Вставить("Представление", ДоступноеПоле.Заголовок);
		Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаДоступныеПоляОтбора Тогда
			Если ДоступноеПоле.ДоступныеВидыСравнения.Количество() > 0 Тогда
				ПараметрыВыбранногоПоля.Вставить("ВидСравнения", ДоступноеПоле.ДоступныеВидыСравнения[0].Значение);
			Иначе
				ПараметрыВыбранногоПоля.Вставить("ВидСравнения", ВидСравненияКомпоновкиДанных.Равно);
			КонецЕсли;
		КонецЕсли;
		
		Закрыть(ПараметрыВыбранногоПоля);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти // СлужебныеПроцедурыИФункции
