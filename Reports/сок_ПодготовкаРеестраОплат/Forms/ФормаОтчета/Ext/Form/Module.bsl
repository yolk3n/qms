&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ОтчетыБольничнаяАптека.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
	// ТехнологияСервиса.ИнформационныйЦент
	ИнформационныйЦентрСервер.ВывестиКонтекстныеСсылки(ЭтотОбъект, Элементы.ИнформационныеСсылки);
	// Конец ТехнологияСервиса.ИнформационныйЦент
	
	Док = Документы.сок_РеестрПлатежей.Выбрать(НачалоДня(ТекущаяДата()),КонецДня(ТекущаяДата()));
	Если Док.Следующий() Тогда
		ТекущийДокумент=Док.Ссылка;
	Иначе
		Элемент = Документы.сок_РеестрПлатежей.СоздатьДокумент();
		Элемент.Дата=НачалоДня(ТекущаяДата());
		Элемент.Ответственный=ПараметрыСеанса.ТекущийПользователь;
		Элемент.Записать(РежимЗаписиДокумента.Проведение);
		ТекущийДокумент=Элемент.Ссылка;
	КонецЕсли;	
	Сумма=ТекущийДокумент.СуммаДокумента;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОтчетыБольничнаяАптекаКлиент.ПриОткрытии(ЭтотОбъект, Отказ);
	
	Сформировать();
КонецПроцедуры



&НаКлиенте
Процедура УстановитьИнтервал(Команда)
	
	Диалог = Новый ДиалогРедактированияСтандартногоПериода();
	
	Диалог.Период.ДатаНачала    = Отчет.ДатаНачала;
	Диалог.Период.ДатаОкончания = Отчет.ДатаОкончания;
	Оповещение = Новый ОписаниеОповещения("УстановитьИнтервалЗавершение", ЭтотОбъект);
	Диалог.Показать(Оповещение);
	
КонецПроцедуры


&НаКлиенте
Процедура УстановитьИнтервалЗавершение(Период, ДополнительныеПараметры) Экспорт
	
	Если Период <> Неопределено Тогда
		
		Отчет.ДатаНачала    = Период.ДатаНачала;
		Отчет.ДатаОкончания = Период.ДатаОкончания;
		
		//УстановитьСостояниеОтображенияНеактуальность(Элементы.Результат, ИдентификаторЗадания);
		
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура СформироватьОтчет(Команда)
	
	Сформировать();
	
КонецПроцедуры

&НаКлиенте
Процедура Сформировать()
	
	ОчиститьСообщения();
	
	ДлительнаяОперация = СформироватьОтчетНаСервере();
	
	ОбщегоНазначенияКлиентСервер.УстановитьСостояниеПоляТабличногоДокумента(Элементы.Результат, "ФормированиеОтчета");
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	Оповещение = Новый ОписаниеОповещения("СформироватьОтчетЗавершение", ЭтотОбъект);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, Оповещение, ПараметрыОжидания);
	
	
КонецПроцедуры

&НаСервере
Функция ПодготовитьПараметрыОтчета()
	
	ПараметрыОтчета = ОтчетыБольничнаяАптека.ПолучитьОсновныеПараметрыОтчета(ЭтотОбъект);
	
	Возврат ПараметрыОтчета;
	
КонецФункции

&НаСервере
Процедура ОтменитьВыполнениеЗадания()
	
	ДлительныеОперации.ОтменитьВыполнениеЗадания(ИдентификаторЗадания);
	
КонецПроцедуры

&НаСервере
Функция СформироватьОтчетНаСервере()
	
	ОтменитьВыполнениеЗадания();
	
	ИдентификаторЗадания = Неопределено;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСостояниеПоляТабличногоДокумента(Элементы.Результат, "НеИспользовать");
	
	
	ПараметрыОтчета = ПодготовитьПараметрыОтчета();
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = ОбщегоНазначенияБольничнаяАптекаКлиентСервер.ПолучитьНаименованиеЗаданияВыполненияОтчета(ЭтотОбъект);
	
	ДлительнаяОперация = ДлительныеОперации.ВыполнитьВФоне(
		"ОтчетыБольничнаяАптека.СформироватьОтчет", ПараметрыОтчета, ПараметрыВыполнения);
	
	ИдентификаторЗадания = ДлительнаяОперация.ИдентификаторЗадания;
	
	Возврат ДлительнаяОперация;
	
КонецФункции


&НаКлиенте
Процедура ЗагрузитьПодготовленныеДанные(Знач АдресРезультата)
	
	РезультатВыполнения = ПолучитьИзВременногоХранилища(АдресРезультата);
	
	Если РезультатВыполнения.Свойство("ОписаниеОшибки") Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(РезультатВыполнения.ОписаниеОшибки);
	КонецЕсли;
	
	Результат = РезультатВыполнения.Результат;
	
	ИдентификаторЗадания = Неопределено;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСостояниеПоляТабличногоДокумента(Элементы.Результат, "НеИспользовать");
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьОтчетЗавершение(РезультатДлительнойОперации, НеИспользуется) Экспорт
	
	ИдентификаторЗадания = Неопределено;
	
	Если ТипЗнч(РезультатДлительнойОперации) = Тип("Структура") Тогда
		Если РезультатДлительнойОперации.Статус = "Выполнено" Тогда
			ЗагрузитьПодготовленныеДанные(РезультатДлительнойОперации.АдресРезультата);
		Иначе
			ОбщегоНазначенияКлиентСервер.УстановитьСостояниеПоляТабличногоДокумента(Элементы.Результат, "НеИспользовать");
			Если РезультатДлительнойОперации.Статус = "Ошибка" Тогда
				ВызватьИсключение РезультатДлительнойОперации.КраткоеПредставлениеОшибки;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	ОтправитьПослеФормирования = Ложь;
	
КонецПроцедуры

&НаСервере
Функция ОбработатьРасшифровкуНаСервере(Расшифровка)
	
	Данные=ПолучитьИзвременногоХранилища(ДанныеРасшифровки);
	ЗначениеРасшифровки = Данные.ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьПоля();     
	Найден = Ложь;
	ЕстьДата=Ложь;
	Для Каждого Стр из ЗначениеРасшифровки Цикл
		Если Стр.Поле="ЗаявкаНаРасходованиеДенежныхСредств" Тогда
			Найден = Истина;
			Заявка = Стр.Значение;
		ИначеЕсли Стр.Поле="ДатаОплаты" Тогда	
			ЕстьДата=Истина;
		КонецЕсли;	
	КонецЦикла;	
	Если Найден И ЕстьДата Тогда
		Элемент = ТекущийДокумент.ПолучитьОбъект();
		Стр=Элемент.РасшифровкаПлатежа.Найти(Заявка,"ЗаявкаНаРасходованиеСредств");
		Если Стр=Неопределено Тогда
			Стр=Элемент.РасшифровкаПлатежа.Добавить();
			Стр.ЗаявкаНаРасходованиеСредств=Заявка;
			Стр.Отменено=Ложь;
			Стр.Сумма=Заявка.СуммаДокумента;                  
			Элемент.Записать(РежимЗаписиДокумента.Проведение);
			Сумма=ТекущийДокумент.СуммаДокумента;
			Возврат Истина;
		Иначе
			Элемент.РасшифровкаПлатежа.Удалить(Элемент.РасшифровкаПлатежа.Индекс(Стр));
			Элемент.Записать(РежимЗаписиДокумента.Проведение);
			Сумма=ТекущийДокумент.СуммаДокумента;
			Возврат Ложь;
		КонецЕсли;;	
	Иначе
		Возврат Неопределено;
	КонецЕсли;	
КонецФункции

&НаКлиенте
Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка, ДополнительныеПараметры) 
	
	СтандартнаяОбработка=Ложь;                                        
	Если НЕ Элемент.ТекущаяОбласть.ЦветФона=Новый Цвет(0,255,255) Тогда
		ОбработкаРасшифровки =  Новый ОбработкаРасшифровкиКомпоновкиДанных(ДанныеРасшифровки, Новый ИсточникДоступныхНастроекКомпоновкиДанных(Отчет));
		ВлючилиВГрафик=ОбработатьРасшифровкуНаСервере(Расшифровка);
		Если НЕ ВлючилиВГрафик=Неопределено Тогда
			Элемент.ТекущаяОбласть.ЦветФона=?(ВлючилиВГрафик,Новый Цвет(255,153,204),Новый Цвет(255,255,255));
		КонецЕсли;	
	КонецЕсли;
	//Элемент.ТекущаяОбласть
	а=1;
КонецПроцедуры


