
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Резидент = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДобавитьОрганизацию(Команда)
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыПодключения = ПараметрыПодключения();
	
	Обработчик = Новый ОписаниеОповещения("ПолучитьДанныеОрганизации_Завершение", ЭтотОбъект);
	ТранспортМДЛПАПИКлиент.ПолучитьИнформациюОбУчастнике(ПараметрыПодключения, Обработчик);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПолучитьДанныеОрганизации_Завершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат.Статус = "Ошибка" Тогда
		ПоказатьПредупреждение(, Результат.ОписаниеОшибки);
		Возврат;
	КонецЕсли;
	
	ЗагрузитьДанныеОрганизации(Результат.ДанныеОрганизации);
	
	ОповеститьОбИзменении(Тип("СправочникСсылка.ОрганизацииМДЛП"));
	ОповеститьОбИзменении(Тип("СправочникСсылка.МестаДеятельностиМДЛП"));
	
	ПоказатьВопрос(
		Новый ОписаниеОповещения("ОбработатьРезультатВопросаОДобавленииОрганизации", ЭтотОбъект),
		НСтр("ru = 'Добавить ещё одну организацию?'"),
		РежимДиалогаВопрос.ДаНет,
		,
		КодВозвратаДиалога.Нет);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьРезультатВопросаОДобавленииОрганизации(КодВозврата, ДополнительныеПараметры) Экспорт
	
	Если КодВозврата = КодВозвратаДиалога.Нет Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПараметрыПодключения()
	
	ПараметрыПодключения = Новый Структура;
	ПараметрыПодключения.Вставить("ИдентификаторОрганизации");
	ПараметрыПодключения.Вставить("Адрес");
	ПараметрыПодключения.Вставить("Порт");
	ПараметрыПодключения.Вставить("Таймаут");
	ПараметрыПодключения.Вставить("ИдентификаторКлиента");
	ПараметрыПодключения.Вставить("СекретКлиента");
	ПараметрыПодключения.Вставить("ЗащищенноеСоединение");
	ПараметрыПодключения.Вставить("ПрефиксВерсии", "/api/v1/");
	ЗаполнитьЗначенияСвойств(ПараметрыПодключения, ЭтотОбъект);
	ЗаполнитьЗначенияСвойств(ПараметрыПодключения, ТранспортМДЛПАПИВызовСервера.ПараметрыСервераАПИ());
	
	Если Резидент Тогда
		ПараметрыПодключения.Вставить("ТипАутентификации", ПредопределенноеЗначение("Перечисление.ТипыАутентификацииМДЛП.ЭП"));
	Иначе
		ПараметрыПодключения.Вставить("ТипАутентификации", ПредопределенноеЗначение("Перечисление.ТипыАутентификацииМДЛП.Пароль"));
	КонецЕсли;
	
	Возврат ПараметрыПодключения;
	
КонецФункции

&НаСервере
Процедура ЗагрузитьДанныеОрганизации(Знач ДанныеОрганизации)
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	Организации.Ссылка                  КАК Ссылка,
	|	Организации.РегистрационныйНомерУчастника КАК РегистрационныйНомерУчастника,
	|	Организации.ОГРН                    КАК ОГРН,
	|	Организации.ИНН                     КАК ИНН,
	|	Организации.КПП                     КАК КПП,
	|	Организации.Наименование            КАК Наименование,
	|	Организации.СобственнаяОрганизация  КАК СобственнаяОрганизация,
	|	Организации.ИдентификаторКлиента    КАК ИдентификаторКлиента,
	|	Организации.СекретКлиента           КАК СекретКлиента,
	|	Организации.ТипАутентификации       КАК ТипАутентификации,
	|	Организации.Резидент                КАК Резидент
	|ИЗ
	|	Справочник.ОрганизацииМДЛП КАК Организации
	|ГДЕ
	|	Организации.РегистрационныйНомерУчастника = &РегистрационныйНомерУчастника
	|	И НЕ Организации.ПометкаУдаления
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МестаДеятельности.Ссылка                КАК Ссылка,
	|	МестаДеятельности.Организация           КАК Организация,
	|	МестаДеятельности.Идентификатор         КАК Идентификатор,
	|	МестаДеятельности.Адрес                 КАК Адрес,
	|	МестаДеятельности.ТипМестаДеятельности  КАК ТипМестаДеятельности
	|ИЗ
	|	Справочник.МестаДеятельностиМДЛП КАК МестаДеятельности
	|ГДЕ
	|	МестаДеятельности.Идентификатор В (&Идентификаторы)
	|	И НЕ МестаДеятельности.ПометкаУдаления
	|");
	
	Запрос.УстановитьПараметр("РегистрационныйНомерУчастника", ДанныеОрганизации.РегистрационныйНомерУчастника);
	Идентификаторы = Новый Массив;
	Для Каждого МестоДеятельности Из ДанныеОрганизации.МестаДеятельности Цикл
		Идентификаторы.Добавить(МестоДеятельности.Идентификатор);
	КонецЦикла;
	Запрос.УстановитьПараметр("Идентификаторы", Идентификаторы);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ОрганизацияСсылка = Неопределено;
	
	ДанныеОрганизации.Вставить("ИдентификаторКлиента", ИдентификаторКлиента);
	ДанныеОрганизации.Вставить("СекретКлиента", СекретКлиента);
	ДанныеОрганизации.Вставить("ТипАутентификации", ?(Резидент, Перечисления.ТипыАутентификацииМДЛП.ЭП, Перечисления.ТипыАутентификацииМДЛП.Пароль));
	
	ОрганизацииРезультат = РезультатЗапроса[0];
	Если ОрганизацииРезультат.Пустой() Тогда
		ОрганизацияОбъект = Справочники.ОрганизацииМДЛП.СоздатьЭлемент();
		ЗаполнитьЗначенияСвойств(ОрганизацияОбъект, ДанныеОрганизации);
		ОрганизацияОбъект.Записать();
		ОрганизацияСсылка = ОрганизацияОбъект.Ссылка;
	Иначе
		ОрганизацииВыборка = ОрганизацииРезультат.Выбрать();
		ОрганизацииВыборка.Следующий();
		ЕстьИзменения = Ложь;
		Для Каждого КлючЗначение Из ДанныеОрганизации Цикл
			Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ОрганизацииВыборка, КлючЗначение.Ключ)
			   И ОрганизацииВыборка[КлючЗначение.Ключ] <> КлючЗначение.Значение Тогда
				ЕстьИзменения = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если ЕстьИзменения Тогда
			ОрганизацияОбъект = ОрганизацииВыборка.Ссылка.ПолучитьОбъект();
			ЗаполнитьЗначенияСвойств(ОрганизацияОбъект, ДанныеОрганизации);
			ОрганизацияОбъект.Записать();
		КонецЕсли;
		ОрганизацияСсылка = ОрганизацииВыборка.Ссылка;
	КонецЕсли;
	
	МестаДеятельностиРезультат = РезультатЗапроса[1].Выгрузить();
	Для Каждого МестоДеятельности Из ДанныеОрганизации.МестаДеятельности Цикл
		
		МестоДеятельностиОбъект = Неопределено;
		МестоДеятельностиВБазе = МестаДеятельностиРезультат.Найти(МестоДеятельности.Идентификатор, "Идентификатор");
		Если МестоДеятельностиВБазе = Неопределено Тогда
			МестоДеятельностиОбъект = Справочники.МестаДеятельностиМДЛП.СоздатьЭлемент();
		Иначе
			
			ЕстьИзменения = Ложь;
			Для Каждого КлючЗначение Из МестоДеятельности Цикл
				Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(МестоДеятельностиВБазе, КлючЗначение.Ключ)
				   И МестоДеятельностиВБазе[КлючЗначение.Ключ] <> КлючЗначение.Значение Тогда
					ЕстьИзменения = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			ЕстьИзменения = ЕстьИзменения Или МестоДеятельностиВБазе.Организация <> ОрганизацияСсылка;
			Если ЕстьИзменения Тогда
				МестоДеятельностиОбъект = МестоДеятельностиВБазе.Ссылка.ПолучитьОбъект();
			КонецЕсли;
			
		КонецЕсли;
		
		Если МестоДеятельностиОбъект <> Неопределено Тогда
			ЗаполнитьЗначенияСвойств(МестоДеятельностиОбъект, МестоДеятельности);
			МестоДеятельностиОбъект.Организация = ОрганизацияСсылка;
			ИнтеграцияМДЛП.ЗаполнитьЗначенияПолейКИПоПредставлению(МестоДеятельностиОбъект, МестоДеятельностиОбъект.Адрес, "Адрес");
			МестоДеятельностиОбъект.Наименование = МестоДеятельностиОбъект.Идентификатор;
			МестоДеятельностиОбъект.Записать();
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
