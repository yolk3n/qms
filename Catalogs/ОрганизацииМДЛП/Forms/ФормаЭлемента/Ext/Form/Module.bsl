
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);
	
	Если Объект.Ссылка.Пустая() Тогда
		ПриСозданииЧтенииНаСервере();
	КонецЕсли;
	
	Элементы.ВерсияСхемОбмена.СписокВыбора.ЗагрузитьЗначения(ИнтеграцияМДЛП.ДоступныеВерсииСхемОбмена());
	Элементы.СброситьПараметрыАвторизацииМДЛПНерезидента.Видимость = Не Объект.Ссылка.Пустая() И Не Объект.Резидент;
	
	КлючСохраненияПоложенияОкна = Объект.СобственнаяОрганизация;
	
	СобытияФормМДЛППереопределяемый.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПриСозданииЧтенииНаСервере();
	
	СобытияФормМДЛППереопределяемый.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	СобытияФормМДЛПКлиентПереопределяемый.ПередЗаписью(ЭтотОбъект, Отказ, ПараметрыЗаписи);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	СобытияФормМДЛППереопределяемый.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("Запись_ОрганизацииМДЛП", Объект.Ссылка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СброситьПараметрыАвторизацииМДЛПНерезидента(Команда)
	
	Если Не Объект.Резидент И ЗначениеЗаполнено(Объект.РегистрационныйНомерУчастника) Тогда
		
		СброситьПараметрыАвторизацииМДЛПНерезидентаНаСервере();
		
		Текст = НСтр("ru = 'Сброс параметров авторизации в ИС МДЛП'");
		Пояснение = НСтр("ru = 'Для текущей организации параметры сброшены.'");
		ПоказатьОповещениеПользователя(Текст,, Пояснение, БиблиотекаКартинок.Информация32);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти // ОбработчикиКомандФормы

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СобственнаяОрганизацияПриИзменении(Элемент)
	
	Элементы.ВерсияСхемОбмена.Видимость = Объект.СобственнаяОрганизация;
	Элементы.ИдентификаторКлиента.Видимость = Объект.СобственнаяОрганизация;
	Элементы.СекретКлиента.Видимость = Объект.СобственнаяОрганизация;
	Элементы.ДатаНачалаИспользования.Видимость = Объект.СобственнаяОрганизация;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПриСозданииЧтенииНаСервере()
	
	Элементы.ВерсияСхемОбмена.Видимость = Объект.СобственнаяОрганизация;
	Элементы.ИдентификаторКлиента.Видимость = Объект.СобственнаяОрганизация;
	Элементы.СекретКлиента.Видимость = Объект.СобственнаяОрганизация;
	Элементы.ДатаНачалаИспользования.Видимость = Объект.СобственнаяОрганизация;
	
КонецПроцедуры

&НаСервере
Процедура СброситьПараметрыАвторизацииМДЛПНерезидентаНаСервере()
	
	Пользователь = Пользователи.ТекущийПользователь();
	Идентификатор = СтрЗаменить(Объект.РегистрационныйНомерУчастника, "-", "");
	
	УстановитьПривилегированныйРежим(Истина);
	ОбщегоНазначения.УдалитьДанныеИзБезопасногоХранилища(Пользователь, СтрШаблон("Логин_%1", Идентификатор));
	ОбщегоНазначения.УдалитьДанныеИзБезопасногоХранилища(Пользователь, СтрШаблон("Пароль_%1", Идентификатор));
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

#КонецОбласти
