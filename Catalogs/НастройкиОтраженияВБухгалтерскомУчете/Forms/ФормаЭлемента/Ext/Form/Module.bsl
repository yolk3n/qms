
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);
	
	Элементы.ПланОбмена.ТолькоПросмотр = Не Объект.Ссылка.Пустая();
	
	ЗаполнитьСписокПлановОбмена();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ОписаниеHTML = ТекущийОбъект.Описание.Получить();
	Если ОписаниеHTML <> Неопределено Тогда
		Описание.УстановитьHTML(ОписаниеHTML.Текст, ОписаниеHTML.Вложения);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ОписаниеHTML = Новый Структура("Текст, Вложения","",Новый Структура);
	Описание.ПолучитьHTML(ОписаниеHTML.Текст, ОписаниеHTML.Вложения);
	ТекущийОбъект.Описание = Новый ХранилищеЗначения(ОписаниеHTML, Новый СжатиеДанных(9));
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Элементы.ПланОбмена.ТолькоПросмотр = Истина;
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ
#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОткрытьНастройкуФормированияПроводок(Команда)
	
	ПроверитьЗаписьОбъекта(НСтр("ru = 'Настройке шаблонов проводок'"), Команда.Имя);
	
КонецПроцедуры

#КонецОбласти // ОбработчикиКомандФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ
#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(
		Элемент.ТекстРедактирования, ЭтотОбъект, "Объект.Комментарий");
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийЭлементовФормы

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьСписокПлановОбмена()
	
	Список = Элементы.ПланОбмена.СписокВыбора;
	ПланыОбменаСПроводками = Метаданные.ОпределяемыеТипы.ОбменПроводками.Тип.Типы();
	Для Каждого ПланОбменаТип Из ПланыОбменаСПроводками Цикл
		ПланОбменаМетаданные = Метаданные.НайтиПоТипу(ПланОбменаТип);
		Если ОбменДаннымиПовтИсп.ДоступноИспользованиеПланаОбмена(ПланОбменаМетаданные.Имя) Тогда
			Список.Добавить(ОбщегоНазначения.ИдентификаторОбъектаМетаданных(ПланОбменаМетаданные));
		КонецЕсли;
	КонецЦикла;
	
	Если Объект.Ссылка.Пустая() И Список.Количество() = 1 Тогда
		Объект.ПланОбмена = Список[0].Значение;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьЗаписьОбъекта(ИмяФормы, ИмяКоманды)
	
	Если Объект.Ссылка.Пустая() Тогда
		
		ТекстВопроса = НСтр("ru = 'Данные еще не записаны.
								|Переход к ""%ИмяФормы%"" возможен только после записи данных.
								|Данные будут записаны.'");
		ТекстВопроса = СтрЗаменить(ТекстВопроса, "%ИмяФормы%", ИмяФормы);
		
		Оповещение = Новый ОписаниеОповещения("ОбработкаОтветаНаВопросЗаписать", ЭтотОбъект, ИмяКоманды);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		
	Иначе
		ВыполнитьКомандуНастройки(ИмяКоманды);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОтветаНаВопросЗаписать(Ответ, ИмяКоманды) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	
	ЭлементЗаписан = Записать();
	Если Не ЭлементЗаписан Тогда
		Возврат;
	КонецЕсли;
	
	ВыполнитьКомандуНастройки(ИмяКоманды);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьКомандуНастройки(ИмяКоманды)
	
	Если ИмяКоманды = "ОткрытьНастройкуФормированияПроводок" Тогда
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("НастройкаОтраженияВБухгалтерскомУчете", Объект.Ссылка);
		ОткрытьФорму("Справочник.ШаблоныСводныхПроводокДляОбменаСБухгалтерией.ФормаСписка", ПараметрыФормы, ЭтотОбъект);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти // СлужебныеПроцедурыИФункции
