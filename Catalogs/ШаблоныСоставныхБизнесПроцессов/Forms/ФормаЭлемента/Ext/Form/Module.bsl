
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);
	
	ЗаполнитьТипыШаблона();
	
	Если Объект.Ссылка.Пустая() Тогда
		Если ЗначениеЗаполнено(Объект.ТипШаблона) Тогда
			ЗаполнитьТаблицуШаблонов();
		КонецЕсли;
		ПриСозданииНовогоПриЧтенииНаСервере();
	КонецЕсли;
	
	Если Не Пользователи.ЭтоПолноправныйПользователь() Тогда
		
		Если Объект.Ссылка.Пустая() Тогда
			Объект.Ответственный = Пользователи.ТекущийПользователь();
			Объект.ПерсональныйШаблон = Истина;
			
			Элементы.Ответственный.Доступность = Ложь;
			Элементы.ПерсональныйШаблон.Доступность = Ложь;
		Иначе
			Если Не Объект.ПерсональныйШаблон Тогда
				ТолькоПросмотр = Истина;
			Иначе
				Элементы.Ответственный.Доступность = Ложь;
				Элементы.ПерсональныйШаблон.Доступность = Ложь;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	СтарыйТипШаблона = Объект.ТипШаблона;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	ПриСозданииНовогоПриЧтенииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	СтруктураРеквизитов = Новый Структура;
	Для Каждого Строка Из Объект.Шаблоны Цикл
		СтруктураРеквизитов.Вставить(Строка.Реквизит, Строка.Шаблон);
	КонецЦикла;
	
	Попытка
		ОшибкиПроверки = БизнесПроцессы[Объект.ТипШаблона].ПроверитьШаблон(СтруктураРеквизитов);
	Исключение
		Возврат;
	КонецПопытки;
	
	Для Каждого Ошибка Из ОшибкиПроверки Цикл
		Если ПустаяСтрока(Ошибка.Значение) Тогда 
			ОбщегоНазначения.СообщитьПользователю(Ошибка.Представление,,"Объект.Шаблоны",,Отказ);
		Иначе
			НайденныеСтроки = Объект.Шаблоны.НайтиСтроки(Новый Структура("Реквизит", Ошибка.Значение));
			Если НайденныеСтроки.Количество() > 0 Тогда 
				ОбщегоНазначения.СообщитьПользователю(Ошибка.Представление,,
					"Объект.Шаблоны[" + (НайденныеСтроки[0].НомерСтроки - 1) + "].Шаблон",,Отказ);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	ЗаполнитьПредставлениеШаблонов();
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ
#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ТипШаблонаПриИзменении(Элемент)
	
	Если СтарыйТипШаблона <> Объект.ТипШаблона Тогда 
		ЗаполнитьТаблицуШаблонов();
		СтарыйТипШаблона = Объект.ТипШаблона;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ШаблоныШаблонНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущаяСтрока = Элементы.Шаблоны.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	СписокТипов = ПолучитьТипы(ТекущаяСтрока.Реквизит);
	Если СписокТипов.Количество() = 0 Тогда
		Возврат;
	ИначеЕсли СписокТипов.Количество() = 1 Тогда
		ВыбратьШаблонПоТипу(СписокТипов[0], Элемент);
	Иначе
		Оповещение = Новый ОписаниеОповещения("ВыбратьШаблонПоТипу", ЭтотОбъект, Элемент);
		СписокТипов.ПоказатьВыборЭлемента(Оповещение, НСтр("ru = 'Выбор типа данных'"));
	КонецЕсли;
	
КонецПроцедуры

// Открывает форму выбора шаблона согласования по типу.
// Продолжение процедуры ШаблоныШаблонНачалоВыбора.
//
// Параметры:
//  ВыбранныйТип - ЭлементСпискаЗначений - тип шаблона согласования
//  Элемент      - ПолеФормы - из которого получаются параметры открытия формы выбора шаблона согласования
//
&НаКлиенте
Процедура ВыбратьШаблонПоТипу(ВыбранныйТип, Элемент) Экспорт
	
	Если ВыбранныйТип <> Неопределено Тогда
		ПараметрыФормы = Новый Структура("ТекущаяСтрока", Элемент.Родитель.ТекущиеДанные.Шаблон);
		ОткрытьФорму("Справочник." + ВыбранныйТип.Значение + ".ФормаВыбора", ПараметрыФормы, Элемент);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПерсональныйШаблонПриИзменении(Элемент)
	
	Если Объект.ПерсональныйШаблон Тогда
		Объект.Ответственный = ПользователиКлиент.ТекущийПользователь();
	Иначе
		Объект.Ответственный = Неопределено;
	КонецЕсли;
	НадписьПерсональногоШаблона = ПолучитьНадписьПерсональногоШаблона(Объект.ПерсональныйШаблон, Объект.Ответственный);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтветственныйПриИзменении(Элемент)
	
	НадписьПерсональногоШаблона = ПолучитьНадписьПерсональногоШаблона(Объект.ПерсональныйШаблон, Объект.Ответственный);
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийЭлементовФормы

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПриСозданииНовогоПриЧтенииНаСервере()
	
	ЗаполнитьПредставлениеШаблонов();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуШаблонов()
	
	Объект.Шаблоны.Очистить();
	БизнесПроцесс = ОбщегоНазначения.ОбъектМетаданныхПоИдентификатору(Объект.ТипШаблона);
	
	Реквизиты = БизнесПроцесс.Реквизиты;
	Для Каждого Реквизит Из Реквизиты Цикл
		
		Если Реквизит.Тип.Типы().Количество() = 1
		   И (Реквизит.Тип.СодержитТип(Тип("СправочникСсылка.ШаблоныИсполнения"))
		  Или Реквизит.Тип.СодержитТип(Тип("СправочникСсылка.ШаблоныСогласования"))
		  Или Реквизит.Тип.СодержитТип(Тип("СправочникСсылка.ШаблоныУтверждения"))) Тогда
			НоваяСтрока = Объект.Шаблоны.Добавить();
			НоваяСтрока.Реквизит = Реквизит.Имя;
			НоваяСтрока.ПредставлениеРеквизита = Реквизит.Представление();
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере 
Функция ПолучитьТипы(Знач ИмяРеквизит)
	
	СписокТипов = Новый СписокЗначений;
	
	БизнесПроцесс = ОбщегоНазначения.ОбъектМетаданныхПоИдентификатору(Объект.ТипШаблона);
	
	Реквизит = БизнесПроцесс.Реквизиты.Найти(ИмяРеквизит);
	Если Реквизит = Неопределено Тогда 
		Возврат СписокТипов;
	КонецЕсли;
	
	ТипыОбъекта = Реквизит.Тип.Типы();
	Для Каждого ТипОбъекта Из ТипыОбъекта Цикл
		ОбъектСсылка = Новый(ТипОбъекта);
		СписокТипов.Добавить(ОбъектСсылка.Метаданные().Имя, ОбъектСсылка.Метаданные().Синоним);
	КонецЦикла;
	
	Возврат СписокТипов;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьПредставлениеШаблонов()
	
	Если ЗначениеЗаполнено(Объект.ТипШаблона) Тогда
		БизнесПроцесс = ОбщегоНазначения.ОбъектМетаданныхПоИдентификатору(Объект.ТипШаблона);
		Для Каждого Строка Из Объект.Шаблоны Цикл
			Реквизит = БизнесПроцесс.Реквизиты.Найти(Строка.Реквизит);
			Если Реквизит <> Неопределено Тогда 
				Строка.ПредставлениеРеквизита = Реквизит.Представление();
			Иначе
				Строка.ПредставлениеРеквизита =  Строка.Реквизит;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТипыШаблона()
	
	Для Каждого БизнесПроцесс Из Метаданные.БизнесПроцессы Цикл
		Если ОбщегоНазначения.ЕстьРеквизитОбъекта("Шаблон", БизнесПроцесс)
		   И БизнесПроцесс.Реквизиты.Шаблон.Тип.СодержитТип(Тип("СправочникСсылка.ШаблоныСоставныхБизнесПроцессов")) Тогда
			Элементы.ТипШаблона.СписокВыбора.Добавить(ОбщегоНазначения.ИдентификаторОбъектаМетаданных(БизнесПроцесс.ПолноеИмя()));
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьНадписьПерсональногоШаблона(ПерсональныйШаблон, Ответственный)
	
	Если ПерсональныйШаблон Тогда
		НадписьПерсональногоШаблона = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Пользоваться шаблоном может только %1'"), Строка(Ответственный));
	Иначе
		НадписьПерсональногоШаблона = НСтр("ru = 'Пользоваться шаблоном могут все пользователи'");
	КонецЕсли;
	
	Возврат НадписьПерсональногоШаблона;
	
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции
