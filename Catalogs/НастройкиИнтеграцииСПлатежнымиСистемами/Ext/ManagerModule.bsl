///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2022, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

// Определяет параметры копирования торговой точки.
//
// Параметры:
//  ТорговаяТочка - СправочникСсылка.НастройкиИнтеграцииСПлатежнымиСистемами - настройка выполнения оплаты.
//
// Возвращаемое значение:
//  Структура - параметры копирования:
//    * Наименование - Строка - наименование копируемой торговой точки;
//    * СверкаВзаиморасчетов - Булево - признак выполнения сверки взаиморасчетов;
//    * ПлатежнаяСистема - ПеречислениеСсылка.ПлатежныеСистемы - платежная система,
//        для которой производится настройка.
//
Функция ДанныеКопирования(ТорговаяТочка) Экспорт
	
	ДанныеКопирования = Новый Структура;
	ДанныеКопирования.Вставить("Наименование", "");
	ДанныеКопирования.Вставить("ПлатежнаяСистема", Неопределено);
	
	Если ТорговаяТочка = Неопределено Тогда
		Возврат ДанныеКопирования;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НастройкиИнтеграцииСПлатежнымиСистемами.Наименование КАК Наименование,
		|	НастройкиИнтеграцииСПлатежнымиСистемами.Родитель.ПлатежнаяСистема КАК ПлатежнаяСистема
		|ИЗ
		|	Справочник.НастройкиИнтеграцииСПлатежнымиСистемами КАК НастройкиИнтеграцииСПлатежнымиСистемами
		|ГДЕ
		|	НастройкиИнтеграцииСПлатежнымиСистемами.Ссылка = &ТорговаяТочка";
	
	Запрос.УстановитьПараметр("ТорговаяТочка", ТорговаяТочка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	ВыборкаДетальныеЗаписи.Следующий();
	
	ЗаполнитьЗначенияСвойств(
		ДанныеКопирования,
		ВыборкаДетальныеЗаписи,
		"Наименование, ПлатежнаяСистема");
	
	Возврат ДанныеКопирования;
	
КонецФункции

// Определяет наличие настроек интеграции с Системой быстрых платежей.
//
// Возвращаемое значение:
//  Булево - если Истина, есть настройки подключения.
//
Функция ЕстьНастройкиПодключения() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ИСТИНА КАК Признак
		|ИЗ
		|	Справочник.НастройкиИнтеграцииСПлатежнымиСистемами КАК НастройкиИнтеграцииСПлатежнымиСистемами
		|ГДЕ
		|	НЕ НастройкиИнтеграцииСПлатежнымиСистемами.ЭтоГруппа";
	
	РезультатЗапроса = Запрос.Выполнить();
	Возврат Не Запрос.Выполнить().Пустой();
	
КонецФункции

// Определяет настройки интеграции с Системой быстрых платежей
// по участнику.
//
// Параметры:
//  УчастникСБП - ПеречислениеСсылка.ПлатежныеСистемы - платежная система,
//    для которой выполняется настройка.
//
// Возвращаемое значение:
//  Массив Из НастройкиИнтеграцииСПлатежнымиСистемами - используемые настройки.
//
Функция НастройкиПодключенияУчастникаСБП(УчастникСБП) Экспорт
	
	Результат = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НастройкиИнтеграцииСПлатежнымиСистемами.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.НастройкиИнтеграцииСПлатежнымиСистемами КАК НастройкиИнтеграцииСПлатежнымиСистемами
		|ГДЕ
		|	НастройкиИнтеграцииСПлатежнымиСистемами.Родитель.ПлатежнаяСистема = &УчастникСБП
		|	И НастройкиИнтеграцииСПлатежнымиСистемами.Используется";
	
	Запрос.УстановитьПараметр("УчастникСБП", УчастникСБП);
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Результат.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

// Сохраняет настройки подключения к СБП в информационную базу.
//
// Параметры:
//  ПараметрыЗаполнения - Структура - данные заполнения торговой точки;
//  ПараметрыАутентификации - Структура - данные аутентификации в платежной системе;
//  ПараметрыОплаты - Структура - содержит данные для записи настроек в регистр сведений.
//    Структура параметра соответствует структуре регистра, которая определена
//    в метаданных за исключением полей указанных в настройках в свойстве ИсключаемыеПоля
//    процедуры ПриОпределенииНастроекИнтеграции;
//  ПлатежнаяСистема - ПеречислениеСсылка.ПлатежныеСистемы - платежная система, для которой производится настройка.
//
// Возвращаемое значение:
//  Структура - результат создания торговой точки:
//    * Ошибка - Булево - признак ошибки сохранения;
//    * СообщениеОбОшибке  - Строка, ФорматированнаяСтрока - сообщение об ошибке для пользователя.
//
Функция НоваяТорговаяТочка(
		ПараметрыЗаполнения,
		ПараметрыАутентификации,
		ПараметрыОплаты,
		ПлатежнаяСистема) Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("Ошибка", Ложь);
	Результат.Вставить("СообщениеОбОшибке", "");
	Результат.Вставить("Ссылка", Неопределено);
	
	ИдентификаторТорговойТочки = СервисИнтеграцииССБП.ИдентификаторТорговойТочки(
		ПлатежнаяСистема,
		ПараметрыАутентификации);
	
	РодительНастройки = ИнтеграцияСПлатежнымиСистемами.РодительНастройки(ПлатежнаяСистема);
	
	НачатьТранзакцию();
	
	Попытка
		
		ТорговаяТочка = Справочники.НастройкиИнтеграцииСПлатежнымиСистемами.СоздатьЭлемент();
		ТорговаяТочка.ТорговаяТочка = ИдентификаторТорговойТочки;
		ТорговаяТочка.Наименование = ПараметрыЗаполнения.Наименование;
		ТорговаяТочка.Родитель = РодительНастройки;
		ТорговаяТочка.Используется = Истина;
		
		ТорговаяТочка.Записать();
		
		РезультатЗаписиНастроек = ИнтеграцияСПлатежнымиСистемамиСлужебный.ЗаписатьНастройкиОплаты(
			ПараметрыОплаты,
			ТорговаяТочка.Ссылка);
		
		Если РезультатЗаписиНастроек.Отказ Тогда
			Результат.Ошибка = Истина;
			Результат.СообщениеОбОшибке = РезультатЗаписиНастроек.СообщениеОбОшибке;
			ОтменитьТранзакцию();
			Возврат Результат;
		КонецЕсли;
		
		ИнтеграцияСПлатежнымиСистемамиСлужебный.СохранитьНастройкиАутентификации(
			ТорговаяТочка.Ссылка,
			ПараметрыАутентификации,
			ПлатежнаяСистема);
			
		Результат.Ссылка = ТорговаяТочка.Ссылка;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		
		Результат.Ошибка = Истина;
		Результат.СообщениеОбОшибке = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Не удалось записать торговую точку мерчанта по причине:
				|%1'"),
			ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		
	КонецПопытки;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецЕсли