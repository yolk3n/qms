///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2022, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ВызватьИсключение НСтр("ru = 'Создание объекта через форму элемента запрещено.'");
	КонецЕсли;
	
	Элементы.ГруппаНастройкиПодключения.ТолькоПросмотр = Не ИнтеграцияСПлатежнымиСистемами.НастройкаИнтеграцияДоступна();
	Элементы.ГруппаНастройкиОплаты.ТолькоПросмотр      = Не ИнтеграцияСПлатежнымиСистемами.НастройкаИнтеграцияДоступна();
	
	ПлатежнаяСистема = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
		Объект.Родитель,
		"ПлатежнаяСистема");
	
	ПлатежныеСистемыСверки = ИнтеграцияСПлатежнымиСистемамиСлужебный.ПлатежныеСистемыСверкиВзаиморасчетов();
	Элементы.ФормаРеестрОперацийc2b.Видимость = (ПлатежныеСистемыСверки.Найти(ПлатежнаяСистема) <> Неопределено
		И ИнтеграцияСПлатежнымиСистемами.НастройкаИнтеграцияДоступна());
	
	ИнтеграцияСПлатежнымиСистемамиСлужебный.ДобавитьНастройкиАутентификации(
		ЭтотОбъект,
		Элементы.ГруппаНастройкиПодключения,
		Объект.Ссылка,
		ПлатежнаяСистема,
		ИнтеграцияСПлатежнымиСистемамиСлужебный.НовыйПараметрПодсказки());
	
	ИнтеграцияСПлатежнымиСистемамиСлужебный.ДобавитьНастройкиОплаты(
		ЭтотОбъект,
		Элементы.ГруппаНастройкиОплаты,
		Объект.Ссылка);
	
	ИнтеграцияСПлатежнымиСистемамиСлужебный.НастроитьЭлементыФормыИнтеграции(
		ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	ИнтеграцияСПлатежнымиСистемамиСлужебный.ПроверитьНастройкиАутентификации(
		ЭтотОбъект,
		Отказ);
	
	ИнтеграцияСПлатежнымиСистемамиСлужебный.ПроверитьНастройкиОплаты(
		ЭтотОбъект,
		Отказ);
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	НастройкиАутентификации = ИнтеграцияСПлатежнымиСистемамиСлужебный.НастройкиАутентификацииПоДаннымФормы(
		ЭтотОбъект);
	
	ИнтеграцияСПлатежнымиСистемамиСлужебный.УстановитьИдентификаторТорговойТочки(
		ТекущийОбъект,
		ПлатежнаяСистема,
		НастройкиАутентификации);
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	НастройкиОплаты = ИнтеграцияСПлатежнымиСистемамиСлужебный.НастройкиОплатыПоДаннымФормы(
		ЭтотОбъект);
	
	Результат = ИнтеграцияСПлатежнымиСистемамиСлужебный.ЗаписатьНастройкиОплаты(
		НастройкиОплаты,
		ТекущийОбъект.Ссылка);
	
	Если Результат.Отказ Тогда
		Отказ = Истина;
		ОбщегоНазначения.СообщитьПользователю(Результат.СообщениеОбОшибке);
		Возврат;
	КонецЕсли;
	
	НастройкиАутентификации = ИнтеграцияСПлатежнымиСистемамиСлужебный.НастройкиАутентификацииПоДаннымФормы(
		ЭтотОбъект);
	
	ИнтеграцияСПлатежнымиСистемамиСлужебный.СохранитьНастройкиАутентификации(
		ТекущийОбъект.Ссылка,
		НастройкиАутентификации,
		ПлатежнаяСистема);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ПриИзмененииНастройкиОплаты(Элемент)
	
	ПриИзмененииНастройкиОплатыНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПроверитьПодключение(Команда)
	
	Если ЭтотОбъект.Модифицированность Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(
			НСтр("ru = 'Перед проверкой настроек необходимо записать изменения.'"));
		Возврат;
	КонецЕсли;
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Истина;
	ПараметрыОжидания.ТекстСообщения = НСтр("ru = 'Проверка параметров подключения к Системе быстрых платежей.'");
	
	РезультатВыполнения = ПроверитьПараметрыПодключенияЗапускЗадания();
	
	ОповещениеОЗавершении = Новый ОписаниеОповещения(
		"ПроверитьПараметрыПодключенияЗавершение",
		ЭтотОбъект);
		
	Если РезультатВыполнения.Статус = "Выполнено" Или РезультатВыполнения.Статус = "Ошибка" Тогда
		ПроверитьПараметрыПодключенияЗавершение(РезультатВыполнения, Неопределено);
		Возврат;
	КонецЕсли;
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(
		РезультатВыполнения,
		ОповещениеОЗавершении,
		ПараметрыОжидания);
	
КонецПроцедуры

&НаКлиенте
Процедура РеестрОперацийc2b(Команда)
	
	Отбор = Новый Структура;
	Отбор.Вставить("НастройкаПодключения", Объект.Ссылка);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СформироватьПриОткрытии", Ложь);
	ПараметрыФормы.Вставить("Отбор",                   Отбор);
	
	ОткрытьФорму(
		"Отчет.РеестрОперацийСБПc2b.ФормаОбъекта",
		ПараметрыФормы,
		ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПриИзмененииНастройкиОплатыНаСервере()
	
	ИнтеграцияСПлатежнымиСистемамиСлужебный.НастроитьЭлементыФормыИнтеграции(
		ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Функция ПроверитьПараметрыПодключенияЗапускЗадания()
	
	ПараметрыАутентификации = ИнтеграцияСПлатежнымиСистемамиСлужебный.НастройкиАутентификацииПоДаннымФормы(
		ЭтотОбъект);
	
	ПараметрыПроцедуры = Новый Структура;
	ПараметрыПроцедуры.Вставить("ТорговаяТочкаСсылка", Объект.Ссылка);
	ПараметрыПроцедуры.Вставить("ИдентификаторТорговойТочки", Объект.ТорговаяТочка);
	ПараметрыПроцедуры.Вставить("ПлатежнаяСистема", ПлатежнаяСистема);
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(
		ЭтотОбъект.УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания
		= НСтр("ru = 'Проверка параметров подключения к Системе быстрых платежей.'");
	
	РезультатВыполнения = ДлительныеОперации.ВыполнитьВФоне(
		"СервисИнтеграцииССБП.ПроверитьПараметрыПодключенияОбъект",
		ПараметрыПроцедуры,
		ПараметрыВыполнения);
	
	Возврат РезультатВыполнения;
	
КонецФункции

&НаКлиенте
Процедура ПроверитьПараметрыПодключенияЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Выполнено" Тогда
		
		РезультатОперации = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
		Если ЗначениеЗаполнено(РезультатОперации.КодОшибки) Тогда
			ПоказатьПредупреждение(
				Неопределено,
				РезультатОперации.СообщениеОбОшибке);
		Иначе
			ПоказатьПредупреждение(
				Неопределено,
				НСтр("ru = 'Подключение завершено успешно.'"));
		КонецЕсли;
		
	ИначеЕсли Результат.Статус = "Ошибка" Тогда
		ПоказатьПредупреждение(
			Неопределено,
			Результат.КраткоеПредставлениеОшибки);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти