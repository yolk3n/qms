#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ
#Область ОбработчикиСобытий

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	НепроверяемыеРеквизиты = Новый Массив;
	
	Если Не ЭтоГруппа Тогда
		
		Если ТипСклада <> Перечисления.ТипыСкладов.РозничныйМагазин Тогда
			
			НепроверяемыеРеквизиты.Добавить("РозничныйВидЦены");
			НепроверяемыеРеквизиты.Добавить("ЛьготныйВидЦены");
			НепроверяемыеРеквизиты.Добавить("ИсточникФинансирования");
			
		КонецЕсли;
		
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, НепроверяемыеРеквизиты);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	Если Не ЭтоГруппа Тогда
		ОбновитьПараметрыУчетаНоменклатуры();
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЭтоГруппа Тогда
		ОбновитьПовторноИспользуемыеЗначения();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытий

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

Процедура ОбновитьПараметрыУчетаНоменклатуры()
	
	Если ДополнительныеСвойства.Свойство("ПропуститьОбновлениеПараметровУчетаНаСкладе") Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ЕСТЬNULL(МАКСИМУМ(
	|		ВЫБОР
	|			КОГДА &ТипСклада = ЗНАЧЕНИЕ(Перечисление.ТипыСкладов.Отделение)
	|				ТОГДА ВЫБОР
	|						КОГДА ПолитикиУчета.ПолитикаУчетаСерийВОтделениях = ЗНАЧЕНИЕ(Перечисление.ТипыПолитикУчетаСерий.НеУчитывать)
	|							ТОГДА ЛОЖЬ
	|						ИНАЧЕ ИСТИНА
	|					КОНЕЦ
	|			ИНАЧЕ ВЫБОР
	|					КОГДА ПолитикиУчета.ПолитикаУчетаСерий = ЗНАЧЕНИЕ(Перечисление.ТипыПолитикУчетаСерий.НеУчитывать)
	|						ТОГДА ЛОЖЬ
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ
	|		КОНЕЦ), ЛОЖЬ) КАК ИспользоватьСерии,
	|	ЕСТЬNULL(МАКСИМУМ(
	|		ВЫБОР
	|			КОГДА &ТипСклада = ЗНАЧЕНИЕ(Перечисление.ТипыСкладов.Отделение)
	|				ТОГДА ВЫБОР
	|						КОГДА ПолитикиУчета.ПолитикаУчетаПартийВОтделениях = ЗНАЧЕНИЕ(Перечисление.ТипыПолитикУчетаПартий.НеУчитывать)
	|							ТОГДА ЛОЖЬ
	|						ИНАЧЕ ИСТИНА
	|					КОНЕЦ
	|			ИНАЧЕ ВЫБОР
	|					КОГДА ПолитикиУчета.ПолитикаУчетаПартий = ЗНАЧЕНИЕ(Перечисление.ТипыПолитикУчетаПартий.НеУчитывать)
	|						ТОГДА ЛОЖЬ
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ
	|		КОНЕЦ), ЛОЖЬ) КАК ИспользоватьПартии
	|ИЗ
	|	Справочник.ВидыНоменклатуры КАК ПолитикиУчета
	|");
	Запрос.УстановитьПараметр("ТипСклада", ТипСклада);
	
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	ИспользоватьСерииНоменклатуры  = Выборка.ИспользоватьСерии;
	ИспользоватьПартии = Выборка.ИспользоватьПартии;
	
КонецПроцедуры

#КонецОбласти // СлужебныеПроцедурыИФункции

#КонецЕсли