
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.Заголовок) Тогда
		АвтоЗаголовок = Ложь;
		Заголовок = Параметры.Заголовок;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ЗаполнитьСтраницыСессийОбмена();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ДобавлениеРеквизитов(Сообщение, ДобавляемыеРеквизиты)
	
	Если Не ЗначениеЗаполнено(Сообщение) Тогда
		Возврат;
	КонецЕсли;
	
	Идентификатор = СтрЗаменить(Сообщение.УникальныйИдентификатор(), "-", "");
	
	Реквизит = Новый РеквизитФормы("Сообщение" + Идентификатор, Новый ОписаниеТипов("СправочникСсылка.МДЛППрисоединенныеФайлы"), "", НСтр("ru = 'Сообщение'"));
	ДобавляемыеРеквизиты.Добавить(Реквизит);
	
	Реквизит = Новый РеквизитФормы("ДатаСоздания" + Идентификатор, Новый ОписаниеТипов("Дата"), "", НСтр("ru = 'Дата запроса'"));
	ДобавляемыеРеквизиты.Добавить(Реквизит);
	
	Реквизит = Новый РеквизитФормы("ТекстXML" + Идентификатор, Новый ОписаниеТипов("Строка"), "", НСтр("ru = 'Текст XML'"));
	ДобавляемыеРеквизиты.Добавить(Реквизит);
	
КонецПроцедуры

&НаСервере
Функция ДобавитьСтраницу(ИмяСтраницы, Заголовок, Родитель, Идентификатор)
	
	ИмяЭлемента = ИмяСтраницы + Идентификатор;
	Элемент = Элементы.Найти(ИмяЭлемента);
	Если Элемент = Неопределено Тогда
		Элемент = Элементы.Добавить(ИмяЭлемента, Тип("ГруппаФормы"), Родитель);
		Элемент.Вид       = ВидГруппыФормы.Страница;
		Элемент.Заголовок = Заголовок;
	КонецЕсли;
	
	Возврат Элемент;
	
КонецФункции

&НаСервере
Функция ДобавитьПолеТекстовогоДокумента(ИмяРеквизита, Значение, Страница, Идентификатор)
	
	ИмяРеквизита = ИмяРеквизита + Идентификатор;
	ЭтотОбъект[ИмяРеквизита] = Значение;
	
	Элемент = Элементы.Найти(ИмяРеквизита);
	Если Элемент = Неопределено Тогда
		Элемент = Элементы.Добавить(ИмяРеквизита, Тип("ПолеФормы"), Страница);
		Элемент.ПутьКДанным        = ИмяРеквизита;
		Элемент.Вид                = ВидПоляФормы.ПолеТекстовогоДокумента;
		Элемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
	КонецЕсли;
	
	Возврат Элемент;
	
КонецФункции

&НаСервере
Функция ДобавитьПолеВвода(ИмяРеквизита, Заголовок, Значение, Страница, Идентификатор)
	
	ИмяРеквизита = ИмяРеквизита + Идентификатор;
	ЭтотОбъект[ИмяРеквизита] = Значение;
	
	Элемент = Элементы.Найти(ИмяРеквизита);
	Если Элемент = Неопределено Тогда
		Элемент = Элементы.Добавить(ИмяРеквизита, Тип("ПолеФормы"), Страница);
		Элемент.ПутьКДанным        = ИмяРеквизита;
		Элемент.Заголовок          = Заголовок;
		Элемент.Вид                = ВидПоляФормы.ПолеВвода;
		Элемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Лево;
	КонецЕсли;
	
	Возврат Элемент;
	
КонецФункции

&НаСервере
Процедура ДобавлениеЭлементов(СтрокаТЧ, РеквизитыСообщений)
	
	Если Не ЗначениеЗаполнено(СтрокаТЧ.Сообщение) Тогда
		Возврат;
	КонецЕсли;
	
	Идентификатор = СтрЗаменить(СтрокаТЧ.Сообщение.УникальныйИдентификатор(), "-", "");
	
	ИмяЭлемента = "Страница" + Идентификатор;
	Страница = Элементы.Найти(ИмяЭлемента);
	Если Страница = Неопределено Тогда
		Страница = Элементы.Добавить(ИмяЭлемента, Тип("ГруппаФормы"), Элементы.Страницы);
		Страница.Вид = ВидГруппыФормы.Страница;
	КонецЕсли;
	
	Страница.Заголовок = СтрокаТЧ.Заголовок;
	Страница.Подсказка = СтрокаТЧ.Подсказка;
	
	Если СтрокаТЧ.ТипСообщения = Перечисления.ТипыСообщенийМДЛП.Входящее Тогда
		Страница.Картинка = БиблиотекаКартинок.ВходящийЗапросМДЛП;
	ИначеЕсли СтрокаТЧ.ТипСообщения = Перечисления.ТипыСообщенийМДЛП.Исходящее Тогда
		Страница.Картинка = БиблиотекаКартинок.ИсходящийЗапросМДЛП;
	ИначеЕсли СтрокаТЧ.ТипСообщения = Перечисления.ТипыСообщенийМДЛП.Квитанция Тогда
		Страница.Картинка = БиблиотекаКартинок.ВходящийЗапросМДЛП;
	КонецЕсли;
	
	ИмяЭлемента = "Страницы" + Идентификатор;
	ВложенныеСтраницы = Элементы.Найти(ИмяЭлемента);
	Если ВложенныеСтраницы = Неопределено Тогда
		ВложенныеСтраницы = Элементы.Добавить(ИмяЭлемента, Тип("ГруппаФормы"), Страница);
		ВложенныеСтраницы.Вид = ВидГруппыФормы.Страницы;
		ВложенныеСтраницы.ОтображениеСтраниц = ОтображениеСтраницФормы.ЗакладкиСнизу;
	КонецЕсли;
	
	СтраницаТекст  = ДобавитьСтраницу("СтраницаТекст" , НСтр("ru = 'Текст сообщения'"), ВложенныеСтраницы, Идентификатор);
	СтраницаПрочее = ДобавитьСтраницу("СтраницаПрочее", НСтр("ru = 'Прочее'")         , ВложенныеСтраницы, Идентификатор);
	
	Текст = ТекстСообщения(СтрокаТЧ.Сообщение);
	
	ДобавитьПолеТекстовогоДокумента("ТекстXML",  Текст, СтраницаТекст, Идентификатор);
	
	РеквизитыСообщения = РеквизитыСообщений.Найти(СтрокаТЧ.Сообщение, "Ссылка");
	
	ДобавитьПолеВвода("Сообщение"   , НСтр("ru = 'Сообщение'")    , РеквизитыСообщения.Ссылка      , СтраницаПрочее, Идентификатор);
	ДобавитьПолеВвода("ДатаСоздания", НСтр("ru = 'Дата создания'"), РеквизитыСообщения.ДатаСоздания, СтраницаПрочее, Идентификатор);
	
КонецПроцедуры

&НаСервере
Функция АнализСообщенийПередачиДанных(Сообщение, Операция = Неопределено)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Сообщения.ВладелецФайла         КАК Документ,
	|	Сообщения.Ссылка                КАК Ссылка,
	|	Сообщения.ТипСообщения          КАК ТипСообщения,
	|	Сообщения.Операция              КАК Операция,
	|	Сообщения.СообщениеОснование    КАК СообщениеОснование,
	|	Сообщения.СтатусОбработки       КАК СтатусОбработки,
	|	Сообщения.ДатаСоздания          КАК ДатаСоздания,
	|	Сообщения.ИдентификаторЗапроса  КАК ИдентификаторЗапроса
	|ПОМЕСТИТЬ Сообщения
	|ИЗ
	|	Справочник.МДЛППрисоединенныеФайлы КАК Сообщения
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Справочник.МДЛППрисоединенныеФайлы КАК ФайлОснование
	|	ПО
	|		ФайлОснование.ВладелецФайла = Сообщения.ВладелецФайла
	|ГДЕ
	|	ФайлОснование.Ссылка = &ФайлОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Сообщения.Документ                                               КАК Документ,
	|
	|	Сообщения.Ссылка                                                 КАК Запрос,
	|	Сообщения.Операция                                               КАК ЗапросОперация,
	|	Сообщения.ТипСообщения                                           КАК ЗапросТипСообщения,
	|	Сообщения.ДатаСоздания                                           КАК ЗапросДатаСоздания,
	|
	|	ЕСТЬNULL(ОтветНаПередачуДанных.Ссылка, &ПустаяСсылка)            КАК ОтветНаЗапрос,
	|	ЕСТЬNULL(ОтветНаПередачуДанных.Операция, &ПустаяОперация)        КАК ОтветНаЗапросОперация,
	|	ЕСТЬNULL(ОтветНаПередачуДанных.ДатаСоздания, ДатаВремя(1,1,1))   КАК ОтветНаЗапросДатаСоздания,
	|	ЕСТЬNULL(ОтветНаПередачуДанных.ТипСообщения, Неопределено)       КАК ОтветНаЗапросТипСообщения,
	|	ЕСТЬNULL(ОтветНаПередачуДанных.СтатусОбработки, Неопределено)    КАК ОтветНаЗапросСтатусОбработки,
	|
	|	ЕСТЬNULL(КвитанцияПроведен.Ссылка, &ПустаяСсылка)                КАК КвитанцияПроведен,
	|	ЕСТЬNULL(КвитанцияПроведен.Операция, &ПустаяОперация)            КАК КвитанцияПроведенОперация,
	|	ЕСТЬNULL(КвитанцияПроведен.ДатаСоздания, ДатаВремя(1,1,1))       КАК КвитанцияПроведенДатаСоздания,
	|	ЕСТЬNULL(КвитанцияПроведен.ТипСообщения, Неопределено)           КАК КвитанцияПроведенТипСообщения,
	|	ЕСТЬNULL(КвитанцияПроведен.СтатусОбработки, Неопределено)        КАК КвитанцияПроведенСостояниеОбработки
	|ИЗ
	|	Сообщения КАК Сообщения
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			Сообщения КАК ОтветНаПередачуДанных
	|		ПО
	|			Сообщения.Ссылка = ОтветНаПередачуДанных.СообщениеОснование
	|			И Сообщения.ИдентификаторЗапроса = ОтветНаПередачуДанных.ИдентификаторЗапроса
	|			И ОтветНаПередачуДанных.Операция = ЗНАЧЕНИЕ(Перечисление.ОперацииОбменаМДЛП.Получение_КвитанцияОПринятии)
	|			И ОтветНаПередачуДанных.ТипСообщения = ЗНАЧЕНИЕ(Перечисление.ТипыСообщенийМДЛП.Квитанция)
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			Сообщения КАК КвитанцияПроведен
	|		ПО
	|			Сообщения.Ссылка = КвитанцияПроведен.СообщениеОснование
	|			И Сообщения.ИдентификаторЗапроса = КвитанцияПроведен.ИдентификаторЗапроса
	|			И КвитанцияПроведен.Операция <> ЗНАЧЕНИЕ(Перечисление.ОперацииОбменаМДЛП.Получение_КвитанцияОПринятии)
	|			И КвитанцияПроведен.ТипСообщения В (ЗНАЧЕНИЕ(Перечисление.ТипыСообщенийМДЛП.Квитанция), ЗНАЧЕНИЕ(Перечисление.ТипыСообщенийМДЛП.Входящее))
	|ГДЕ
	|	(Сообщения.Ссылка = &ФайлОснование
	|	ИЛИ ЕСТЬNULL(ОтветНаПередачуДанных.Ссылка, &ПустаяСсылка) = &ФайлОснование
	|	ИЛИ ЕСТЬNULL(КвитанцияПроведен.Ссылка, &ПустаяСсылка) = &ФайлОснование)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	*
	|ИЗ
	|	Сообщения
	|");
	
	Запрос.УстановитьПараметр("ФайлОснование" , Сообщение);
	Запрос.УстановитьПараметр("ПустаяОперация", Перечисления.ОперацииОбменаМДЛП.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустаяСсылка"  , Справочники.МДЛППрисоединенныеФайлы.ПустаяСсылка());
	
	Результат = Запрос.ВыполнитьПакет();
	
	ВозвращаемоеЗначение = Новый Структура;
	ВозвращаемоеЗначение.Вставить("ПоследовательностьСообщений", ПоследовательностьСообщенийПередачиДанных(Результат[1].Выгрузить()));
	ВозвращаемоеЗначение.Вставить("РеквизитыСообщений", Результат[2].Выгрузить());
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

&НаСервере
Функция ПоследовательностьСообщенийПередачиДанных(Данные)
	
	Колонки = Новый Массив;
	
	Колонка = Новый Структура;
	Колонка.Вставить("Приоритет",    1);
	Колонка.Вставить("Имя",          "Запрос");
	Колонки.Добавить(Колонка);
	
	Колонка = Новый Структура;
	Колонка.Вставить("Приоритет",    2);
	Колонка.Вставить("Имя",          "ОтветНаЗапрос");
	Колонки.Добавить(Колонка);
	
	Колонка = Новый Структура;
	Колонка.Вставить("Приоритет",    3);
	Колонка.Вставить("Имя",          "КвитанцияПроведен");
	Колонки.Добавить(Колонка);
	
	ПоследовательностьСообщений = Новый ТаблицаЗначений;
	ПоследовательностьСообщений.Колонки.Добавить("Сообщение");
	ПоследовательностьСообщений.Колонки.Добавить("ДатаСоздания");
	ПоследовательностьСообщений.Колонки.Добавить("Приоритет");
	ПоследовательностьСообщений.Колонки.Добавить("Заголовок");
	ПоследовательностьСообщений.Колонки.Добавить("Подсказка");
	ПоследовательностьСообщений.Колонки.Добавить("ТипСообщения");
	
	Для Каждого СтрокаТЧ Из Данные Цикл
		Для Каждого Колонка Из Колонки Цикл
			Если ПоследовательностьСообщений.Найти(СтрокаТЧ[Колонка.Имя]) = Неопределено Тогда
				
				Если Не ЗначениеЗаполнено(СтрокаТЧ[Колонка.Имя]) Тогда
					Продолжить;
				КонецЕсли;
				
				Операция = СтрокаТЧ[Колонка.Имя + "Операция"];
				
				НоваяСтрока = ПоследовательностьСообщений.Добавить();
				НоваяСтрока.Сообщение    = СтрокаТЧ[Колонка.Имя];
				НоваяСтрока.ДатаСоздания = СтрокаТЧ[Колонка.Имя + "ДатаСоздания"];
				НоваяСтрока.ТипСообщения = СтрокаТЧ[Колонка.Имя + "ТипСообщения"];
				НоваяСтрока.Приоритет    = Колонка.Приоритет;
				
				Если Операция = Перечисления.ОперацииОбменаМДЛП.Получение_КвитанцияОФиксации Тогда
					НоваяСтрока.Заголовок = НСтр("ru = 'Квитанция МДЛП'");
					НоваяСтрока.Подсказка = Операция;
				ИначеЕсли Операция = Перечисления.ОперацииОбменаМДЛП.Получение_КвитанцияОПринятии Тогда
					НоваяСтрока.Заголовок = НСтр("ru = 'Квитанция транспорта'");
					НоваяСтрока.Подсказка = Операция;
				Иначе
					НоваяСтрока.Заголовок = Операция;
					НоваяСтрока.Подсказка = Операция;
				КонецЕсли;
				
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	ПоследовательностьСообщений.Сортировать("ДатаСоздания Возр,Приоритет Возр");
	
	Возврат ПоследовательностьСообщений;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьСтраницыСессийОбмена()
	
	Результат = АнализСообщенийПередачиДанных(Объект.Ссылка);
	
	ДобавляемыеРеквизиты = Новый Массив;
	УдаляемыеРеквизиты = Новый Массив;
	
	РеквизитыФормы = ПолучитьРеквизиты();
	Для Каждого Реквизит Из РеквизитыФормы Цикл
		Если Реквизит.Имя <> "Объект" Тогда
			УдаляемыеРеквизиты.Добавить(Реквизит.Имя);
		КонецЕсли;
	КонецЦикла;
	
	Если УдаляемыеРеквизиты.Количество() > 0 Тогда
		ИзменитьРеквизиты(, УдаляемыеРеквизиты);
	КонецЕсли;
	
	Для Каждого СтрокаТЧ Из Результат.ПоследовательностьСообщений Цикл
		ДобавлениеРеквизитов(СтрокаТЧ.Сообщение, ДобавляемыеРеквизиты);
	КонецЦикла;
	
	ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
	Для Каждого СтрокаТЧ Из Результат.ПоследовательностьСообщений Цикл
		ДобавлениеЭлементов(СтрокаТЧ, Результат.РеквизитыСообщений);
	КонецЦикла;
	
	ИдентификаторПоследнейСтраницы = СтрЗаменить(Результат.ПоследовательностьСообщений[Результат.ПоследовательностьСообщений.Количество() - 1].Сообщение.УникальныйИдентификатор(), "-", "");
	ПоследняяСтраница = Элементы.Найти("Страница" + ИдентификаторПоследнейСтраницы);
	Элементы.Страницы.ТекущаяСтраница = ПоследняяСтраница;
	
КонецПроцедуры

&НаСервере
Функция ТекстСообщения(Сообщение)
	
	Если Не ЗначениеЗаполнено(Сообщение) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстСообщения = ИнтеграцияМДЛПВызовСервера.ТекстСообщенияИзПротокола(Сообщение);
	ФорматированныйТекстСообщения = ИнтеграцияМДЛП.ФорматироватьТекстСообщения(ТекстСообщения);
	
	Возврат ФорматированныйТекстСообщения;
	
КонецФункции

#КонецОбласти