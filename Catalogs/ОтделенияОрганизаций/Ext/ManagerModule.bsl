
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ
#Область ОбработчикиСобытий

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	Владелец = Неопределено;
	Параметры.Отбор.Свойство("Владелец", Владелец);
	ИмяОбъекта = ПустаяСсылка().Метаданные().ПолноеИмя();
	
	ДоступныеЭлементы = УправлениеДоступомБольничнаяАптекаВызовСервера.ПолучитьДоступныеЭлементыДляОтбора(ИмяОбъекта, Параметры, Владелец);
	Если ДоступныеЭлементы <> Неопределено Тогда
		Параметры.Отбор.Вставить("Ссылка", ДоступныеЭлементы);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытий

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС
#Область ПрограммныйИнтерфейс

// Функция получает отделение по умолчанию
//
Функция ПолучитьОтделениеПоУмолчанию(Организация = Неопределено, ТаблицаОбъекта = Неопределено) Экспорт
	
	ДоступныеОтделения = ПолучитьДоступные(Организация, ТаблицаОбъекта);
	Если ДоступныеОтделения.Количество() = 1 Тогда
		Возврат ДоступныеОтделения[0];
	КонецЕсли;
	
	Возврат Справочники.ОтделенияОрганизаций.ПустаяСсылка();
	
КонецФункции

// Возвращает доступные отделения
//
Функция ПолучитьДоступные(Организация = Неопределено, ТаблицаОбъекта = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Отделение.Ссылка КАК Отделение
	|ИЗ
	|	ЗначенияДоступа КАК ЗначенияДоступа
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ОтделенияОрганизаций КАК Отделение
	|	ПО
	|		ЗначенияДоступа.Ссылка = Отделение.Ссылка
	|ГДЕ
	|	НЕ Отделение.ПометкаУдаления
	|";
	
	УправлениеДоступомБольничнаяАптека.ЗначенияДоступаРазрешающиеИзменениеОбъекта(ТаблицаОбъекта, Тип("СправочникСсылка.ОтделенияОрганизаций"), Запрос.МенеджерВременныхТаблиц);
	
	Если Организация <> Неопределено Тогда
		Запрос.Текст = Запрос.Текст +
			"	И Отделение.Владелец В (&Организация)";
		Запрос.УстановитьПараметр("Организация", Организация);
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Отделение");
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Владелец)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти // ПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

////////////////////////////////////////////////////////////////////////////////
// Команды формы
#Область КомандыФормы

// Заполняет список команд ввода на основании.
// 
// Параметры:
//   КомандыСоздатьНаОсновании - ТаблицаЗначений - Таблица команд для вывода в подменю. Для изменения.
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСоздатьНаОсновании, НастройкиФормы) Экспорт
	
	ВводНаОснованииБольничнаяАптека.ДобавитьКомандыСозданияНаОсновании(ПустаяСсылка().Метаданные().ПолноеИмя(), КомандыСоздатьНаОсновании, НастройкиФормы);
	
КонецПроцедуры

#КонецОбласти // КомандыФормы

#КонецОбласти // СлужебныеПроцедурыИФункции

////////////////////////////////////////////////////////////////////////////////
// СТАНДАРТНЫЕ ПОДСИСТЕМЫ
#Область СтандартныеПодсистемы

// Возвращает описание блокируемых реквизитов
//
// Возвращаемое значение:
//  Массив - имена блокируемых реквизитов
//   Элемент массива - Строка в формате:
//     ИмяРеквизита[;ИмяЭлементаФормы,...]
//      где
//       ИмяРеквизита     - имя реквизита объекта
//       ИмяЭлементаФормы - имя элемента формы, связанного с реквизитом
//
Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт
	
	БлокируемыеРеквизиты = Новый Массив;
	
	БлокируемыеРеквизиты.Добавить("ВестиСкладскойУчет");
	БлокируемыеРеквизиты.Добавить("ДатаНачалаВеденияСкладскогоУчета");
	
	Возврат БлокируемыеРеквизиты;
	
КонецФункции

#КонецОбласти // СтандартныеПодсистемы

#КонецЕсли