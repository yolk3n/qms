
////////////////////////////////////////////////////////////////////////////////
// ОПИСАНИЕ ПЕРЕМЕННЫХ
#Область ОписаниеПеременных

&НаКлиенте
Перем НачалоЗагрузки;

#КонецОбласти // ОписаниеПеременных

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИсточникДанныхДляЗагрузки = Элементы.ИсточникДанныхДляЗагрузкиСайт.СписокВыбора[0].Значение;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьИзмененияВИнтерфейсе();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИТСМедицина_ЗагрузкаДанныхСДискаИТС" Тогда
		Параметр.ЗагрузкаЗапрещена = Параметр.ЗагрузкаЗапрещена Или ОжидаютсяДанныеОтИТС;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ИдентификаторЗадания) Тогда
		ОтменитьФоновоеЗадание(ИдентификаторЗадания);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ
#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаДалее(Команда)
	
	ОчиститьСообщения();
	
	НачалоЗагрузки = ТекущаяУниверсальнаяДатаВМиллисекундах();
	
	Если Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаВыбораИсточника Тогда
		
		Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаЗагрузки;
		УстановитьСтатусЗагрузки();
		ЗагрузитьЗабракованныеСерии();
		
	КонецЕсли;
	
	УстановитьИзмененияВИнтерфейсе();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаНазад(Команда)
	
	Если Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаЗагрузки Тогда
		Оповещение = Новый ОписаниеОповещения("ПрерватьВыполнение", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, НСтр("ru = 'Прервать получение данных о забраковке?'"), РежимДиалогаВопрос.ДаНет);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПрерватьВыполнение(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ВернутсяКВыборуИсточника();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура АвторизацияНаСайтеПоддержкиПользователей(Команда)
	
	ИТСМедицинаКлиент.АвторизоватьсяНаСайтеИТС(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти // ОбработчикиКомандФормы

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УстановитьИзмененияВИнтерфейсе()
	
	Если Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаВыбораИсточника Тогда
		Элементы.Назад.Видимость = Ложь;
		Элементы.Далее.Видимость = Истина;
		
	ИначеЕсли Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаЗагрузки Тогда
		Элементы.Назад.Видимость = Истина;
		Элементы.Далее.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьЗабракованныеСерии()
	
	ОчиститьСообщения();
	
	Если ИсточникДанныхДляЗагрузки = Элементы.ИсточникДанныхДляЗагрузкиСайт.СписокВыбора[0].Значение Тогда
		ПолучитьДанныеССайтаИТС();
	ИначеЕсли ИсточникДанныхДляЗагрузки = Элементы.ИсточникДанныхДляЗагрузкиФайл.СписокВыбора[0].Значение Тогда
		ПолучитьДанныеИзФайла();
	Иначе
		ВернутсяКВыборуИсточника();
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Неизвестный источник данных: %1'"), ИсточникДанныхДляЗагрузки);
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтатусЗагрузки(Знач Сообщение = "")
	
	СтатусДлительнойОперации = НСтр("ru = 'Пожалуйста, подождите...'") + Символы.ПС + Сообщение;
	ОбновитьВремяРаботы();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьВремяРаботы()
	
	ПрошлоВремени = ОбщегоНазначенияБольничнаяАптекаКлиентСервер.ПрошлоВремени(НачалоЗагрузки);
	ТекущееВремяРаботы = ОбщегоНазначенияБольничнаяАптекаКлиентСервер.ПредставлениеВремени(ПрошлоВремени);
	Если ВремяРаботы <> ТекущееВремяРаботы Тогда
		ВремяРаботы = ТекущееВремяРаботы;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВернутсяКВыборуИсточника()
	
	Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаВыбораИсточника;
	ОжидаютсяДанныеОтИТС = Ложь;
	Если ЗначениеЗаполнено(ИдентификаторЗадания) Тогда
		ОтменитьФоновоеЗадание(ИдентификаторЗадания);
		ИдентификаторЗадания = Неопределено;
	КонецЕсли;
	УстановитьИзмененияВИнтерфейсе();
	
КонецПроцедуры

#Область ПолучениеДанныхССайтаИТС

&НаКлиенте
Процедура ПолучитьДанныеССайтаИТС(ЗапросПароля = Ложь)
	
	Перем ДанныеАутентификации;
	
	Оповещение = Новый ОписаниеОповещения("ПолучитьДанныеССайтаИТСПослеВводаПароля", ЭтотОбъект);
	Если ИТСМедицинаКлиент.ПолучитьДанныеАутентификации(ДанныеАутентификации, ЗапросПароля, Оповещение, ЭтотОбъект) Тогда
		ПолучитьДанныеССайтаИТСЗавершение(ДанныеАутентификации);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьДанныеССайтаИТСПослеВводаПароля(ДанныеАутентификации, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(ДанныеАутентификации) <> Тип("Структура") Тогда
		ВернутсяКВыборуИсточника();
		Возврат;
	КонецЕсли;
	
	Если ПустаяСтрока(ДанныеАутентификации.Логин) Или ПустаяСтрока(ДанныеАутентификации.Пароль) Тогда
		ПолучитьДанныеССайтаИТС(Истина);
		Возврат;
	КонецЕсли;
	
	ПолучитьДанныеССайтаИТСЗавершение(ДанныеАутентификации);
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьДанныеССайтаИТСЗавершение(ДанныеАутентификации)
	
	ОчиститьСообщения();
	
	НачалоЗагрузки = ТекущаяУниверсальнаяДатаВМиллисекундах();
	УстановитьСтатусЗагрузки(НСтр("ru = 'Идет получение файла с сайта 1С:ИТС.'"));
	
	Задание = ПолучитьДанныеССайтаИТССервер(ДанныеАутентификации);
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Истина;
	ПараметрыОжидания.ОповещениеОПрогрессеВыполнения = Новый ОписаниеОповещения("ОтобразитьПрогресс", ЭтотОбъект);
	
	ОповеститьОЗавершении = Новый ОписаниеОповещения("ОбработатьПолучениеФайлаССайтаИТС", ЭтотОбъект);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(Задание, ОповеститьОЗавершении, ПараметрыОжидания);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьДанныеССайтаИТССервер(Знач ДанныеАутентификации)
	
	ПараметрыЗадания = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыЗадания.НаименованиеФоновогоЗадания = НСтр("ru = 'Получение файла с забраковкой'");
	ПараметрыЗадания.ДополнительныйРезультат = Истина;
	
	ПараметрыЗагрузки = Новый Структура;
	ПараметрыЗагрузки.Вставить("Аутентификация", ДанныеАутентификации);
	
	Задание = ДлительныеОперации.ВыполнитьВФоне(
		"Справочники.ЗабракованныеСерии.ПолучитьФайлСЗабраковкойЕСКЛПССайтаИТС", ПараметрыЗагрузки, ПараметрыЗадания);
	
	ИдентификаторЗадания = Задание.ИдентификаторЗадания;
	Возврат Задание;
	
КонецФункции

&НаКлиенте
Процедура ОбработатьПолучениеФайлаССайтаИТС(Результат, ДополнительныеПараметры) Экспорт
	
	ИдентификаторЗадания = Неопределено;
	Если Результат = Неопределено Тогда
		ВернутсяКВыборуИсточника();
		Возврат; // Задание отменено
	КонецЕсли;
	
	Если Результат.Статус = "Ошибка" Тогда
		
		ВернутсяКВыборуИсточника();
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Ошибка при получении файла с забраковкой с сайта 1С:ИТС.
			         |%1'"),
			Результат.КраткоеПредставлениеОшибки);
		ВызватьИсключение ТекстОшибки;
		
	Иначе // Результат.Статус = "Выполнено"
		
		РезультатВыполнения = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
		Если РезультатВыполнения.Статус = "Ошибка" Тогда
			
			// Ошибка загрузки, выводим на повторный запрос авторизации
			Если РезультатВыполнения.КодСостояния = 401 Тогда
				ОбщегоНазначенияКлиент.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru='Не удалось получить доступ к сайту 1С:ИТС для загрузки файла с забраковкой, возможно неверное имя пользователя или пароль.
					         |%1'"),
					РезультатВыполнения.СообщениеОбОшибке));
			Иначе
				ОбщегоНазначенияКлиент.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru='Ошибка получения файла с забраковкой с сайта 1С:ИТС.
					         |%1'"),
					РезультатВыполнения.СообщениеОбОшибке));
			КонецЕсли;
			
			ПолучитьДанныеССайтаИТС(Истина);
			Возврат;
			
		Иначе
			
			ОбработатьПолученныйФайл(РезультатВыполнения.ОписаниеФайла);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ПолучениеДанныхИзФайлаНаДиске

&НаКлиенте
Процедура ПолучитьДанныеИзФайла()
	
	ПараметрыЗагрузки = ФайловаяСистемаКлиент.ПараметрыЗагрузкиФайла();
	ПараметрыЗагрузки.ИдентификаторФормы = УникальныйИдентификатор;
	ПараметрыЗагрузки.Диалог.Фильтр = НСтр("ru = '*.xml)|*.xml'");
	ПараметрыЗагрузки.Диалог.Заголовок = НСтр("ru = 'Файл забраковки'");
	ПараметрыЗагрузки.Диалог.ПроверятьСуществованиеФайла = Истина;
	
	Оповестить = Новый ОписаниеОповещения("ПолучитьДанныеИзФайлаНаДискеЗавершение", ЭтотОбъект);
	ФайловаяСистемаКлиент.ЗагрузитьФайл(Оповестить, ПараметрыЗагрузки, "esklp_rejects");
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьДанныеИзФайлаНаДискеЗавершение(ПомещенныйФайл, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(ПомещенныйФайл) Тогда
		НачалоЗагрузки = ТекущаяУниверсальнаяДатаВМиллисекундах();
		ОбработатьПолученныйФайл(ПомещенныйФайл);
	Иначе
		ВернутсяКВыборуИсточника();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ЗагрузкаДанных

&НаКлиенте
Процедура ОбработатьПолученныйФайл(ОписаниеФайла)
	
	УстановитьСтатусЗагрузки(НСтр("ru = 'Идет загрузка забраковок серий...'"));
	
	Задание = ПолучитьДанныеИзФайлаСервер(ОписаниеФайла);
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Истина;
	ПараметрыОжидания.ОповещениеОПрогрессеВыполнения = Новый ОписаниеОповещения("ОтобразитьПрогресс", ЭтотОбъект);
	
	ОповеститьОЗавершении = Новый ОписаниеОповещения("ОбработатьЗавершениеЗагрузки", ЭтотОбъект);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(Задание, ОповеститьОЗавершении, ПараметрыОжидания);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьДанныеИзФайлаСервер(Знач ОписаниеФайла)
	
	ПараметрыЗадания = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыЗадания.НаименованиеФоновогоЗадания = НСтр("ru = 'Загрузка забраковок серий из файла ЕСКЛП'");
	
	Данные = ПолучитьИзВременногоХранилища(ОписаниеФайла.Хранение);
	ПараметрыЗагрузки = Новый Структура;
	ПараметрыЗагрузки.Вставить("ДанныеФайла", Данные);
	ПараметрыЗагрузки.Вставить("ИмяФайла"   , ОписаниеФайла.Имя);
	
	Задание = ДлительныеОперации.ВыполнитьВФоне(
		"Справочники.ЗабракованныеСерии.ЗагрузитьЗабраковкиСерииЕСКЛПВБазу", ПараметрыЗагрузки, ПараметрыЗадания);
	
	ИдентификаторЗадания = Задание.ИдентификаторЗадания;
	Возврат Задание;
	
КонецФункции

&НаКлиенте
Процедура ОтобразитьПрогресс(Прогресс, ДополнительныеПараметры) Экспорт
	
	Если Прогресс = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Прогресс.Прогресс) = Тип("Структура") Тогда
		УстановитьСтатусЗагрузки(Прогресс.Прогресс.Текст);
	Иначе
		ОбновитьВремяРаботы();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьЗавершениеЗагрузки(Результат, ДополнительныеПараметры) Экспорт
	
	ИдентификаторЗадания = Неопределено;
	Если Результат = Неопределено Тогда
		Возврат; // Задание отменено
	КонецЕсли;
	
	Если Результат.Статус = "Ошибка" Тогда
		
		ВернутсяКВыборуИсточника();
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='При загрузке забраковок возникла ошибка.
			         |%1'"), 
			Результат.КраткоеПредставлениеОшибки);
		ВызватьИсключение ТекстОшибки;
		
	Иначе // Результат.Статус = "Выполнено"
		
		ОповеститьОбИзменении(Тип("СправочникСсылка.ЗабракованныеСерии"));
		
		КоличествоДобавленных = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Добавлено новых приказов: %1'"), КоличествоДобавленных);
		
		ПоказатьОповещениеПользователя(ТекстСообщения,,, БиблиотекаКартинок.Информация32);
		
		Закрыть(КодВозвратаДиалога.ОК);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

&НаСервереБезКонтекста
Процедура ОтменитьФоновоеЗадание(Знач ИдентификаторЗадания)
	
	ДлительныеОперации.ОтменитьВыполнениеЗадания(ИдентификаторЗадания);
	
КонецПроцедуры

#КонецОбласти // СлужебныеПроцедурыИФункции
