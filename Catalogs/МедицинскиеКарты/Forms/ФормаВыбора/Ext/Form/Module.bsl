
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформлениеФормы();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	РежимОтображенияМедКарт = Элементы.РежимОтображенияМедКарт.СписокВыбора[0].Значение;
	
	НастроитьОтборПриСоздании();
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	УстановитьОтборПоРежимуОтображения();
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "ВАрхиве", Ложь,,, Не ПоказыватьАрхивныеМедКарты);
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ
#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ОтборОрганизацияПриИзменении(Элемент)
	
	УстановитьОтборПоРежимуОтображения();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборОтделениеПриИзменении(Элемент)
	
	УстановитьОтборПоРежимуОтображения();
	
КонецПроцедуры

&НаКлиенте
Процедура РежимОтображенияМедКартПриИзменении(Элемент)
	
	УстановитьОтборПоРежимуОтображения();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьАрхивныеМедКарты(Элемент)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "ВАрхиве", Ложь,,, Не ПоказыватьАрхивныеМедКарты);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийЭлементовФормы

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформлениеФормы()
	
	Элемент = Список.КомпоновщикНастроек.Настройки.УсловноеОформление.Элементы.Добавить();
	Элемент.Представление = НСтр("ru = 'Выделять архивные медицинские карты'");
	
	Отбор = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ВАрхиве");
	Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	Отбор.ПравоеЗначение = Истина;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет);
	
КонецПроцедуры

&НаСервере
Процедура НастроитьОтборПриСоздании()
	
	Если Параметры.Отбор.Свойство("Организация", Организация) Тогда
		Параметры.Отбор.Удалить("Организация");
		Элементы.ОтборОрганизация.ТолькоПросмотр = ЗначениеЗаполнено(Организация);
	КонецЕсли;
	
	Если Параметры.Отбор.Свойство("Отделение", Отделение) Тогда
		Параметры.Отбор.Удалить("Отделение");
		Элементы.ОтборОтделение.ТолькоПросмотр = ЗначениеЗаполнено(Отделение);
	КонецЕсли;
	
	УстановитьОтборПоРежимуОтображения();
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "ВАрхиве", Ложь,,, Не ПоказыватьАрхивныеМедКарты);
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьТекстЗапросаПоРежимуОтображения()
	
	Если РежимОтображенияМедКарт = "ПоТекущемуИБывшимМестамХранения"
	   И (ЗначениеЗаполнено(Организация) И ЗначениеЗаполнено(Отделение)) Тогда
		
		Список.ТекстЗапроса = "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	МедицинскиеКарты.Ссылка                    КАК Ссылка,
		|	МедицинскиеКарты.Пациент                   КАК Пациент,
		|	МедицинскиеКарты.НомерКарты                КАК НомерКарты,
		|	ДвиженияПациентовСрезПоследних.Организация КАК Организация,
		|	ДвиженияПациентовСрезПоследних.Отделение   КАК Отделение,
		|	МедицинскиеКарты.ДатаОткрытия              КАК ДатаОткрытия,
		|	МедицинскиеКарты.ДатаЗакрытия              КАК ДатаЗакрытия,
		|	МедицинскиеКарты.ВАрхиве                   КАК ВАрхиве
		|ИЗ
		|	Справочник.МедицинскиеКарты КАК МедицинскиеКарты
		|		ЛЕВОЕ СОЕДИНЕНИЕ
		|			РегистрСведений.ДвиженияПациентов КАК ДвиженияПациентов
		|		ПО
		|			МедицинскиеКарты.Ссылка = ДвиженияПациентов.КартаПациента
		|		ЛЕВОЕ СОЕДИНЕНИЕ
		|			РегистрСведений.ДвиженияПациентов.СрезПоследних КАК ДвиженияПациентовСрезПоследних
		|		ПО
		|			МедицинскиеКарты.Ссылка = ДвиженияПациентовСрезПоследних.КартаПациента
		|{ГДЕ
		|	ДвиженияПациентов.Организация.*,
		|	ДвиженияПациентов.Отделение.*}
		|";
		
	Иначе
		
		Список.ТекстЗапроса = "
		|ВЫБРАТЬ
		|	МедицинскиеКарты.Ссылка                    КАК Ссылка,
		|	МедицинскиеКарты.НомерКарты                КАК НомерКарты,
		|	МедицинскиеКарты.Пациент                   КАК Пациент,
		|	ДвиженияПациентовСрезПоследних.Организация КАК Организация,
		|	ДвиженияПациентовСрезПоследних.Отделение   КАК Отделение,
		|	МедицинскиеКарты.ДатаОткрытия              КАК ДатаОткрытия,
		|	МедицинскиеКарты.ДатаЗакрытия              КАК ДатаЗакрытия,
		|	МедицинскиеКарты.ВАрхиве                   КАК ВАрхиве
		|ИЗ
		|	Справочник.МедицинскиеКарты КАК МедицинскиеКарты
		|		ЛЕВОЕ СОЕДИНЕНИЕ
		|			РегистрСведений.ДвиженияПациентов.СрезПоследних(, ) КАК ДвиженияПациентовСрезПоследних
		|		ПО
		|			(ДвиженияПациентовСрезПоследних.КартаПациента = МедицинскиеКарты.Ссылка)
		|";
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборПоРежимуОтображения()
	
	ИзменитьТекстЗапросаПоРежимуОтображения();
	
	УстанавливатьОтбор = (РежимОтображенияМедКарт <> "ПоВсемМестамХранения");
	
	Элементы.ОтборОрганизация.Доступность = УстанавливатьОтбор;
	Элементы.ОтборОтделение.Доступность = УстанавливатьОтбор;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "Организация", Организация,,, УстанавливатьОтбор);
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "Отделение", Отделение,,, УстанавливатьОтбор);
	
КонецПроцедуры

#КонецОбласти // СлужебныеПроцедурыИФункции

////////////////////////////////////////////////////////////////////////////////
// СТАНДАРТНЫЕ ПОДСИСТЕМЫ
#Область СтандартныеПодсистемы

// СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры

// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти // СтандартныеПодсистемы
