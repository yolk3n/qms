
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	Элементы.ДекорацияРасшифровкаОтбора.Видимость = Ложь;
	
	Если ЗначениеЗаполнено(Параметры.ТекущийВид) Тогда
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			Список,
			"Ссылка",
			Параметры.ТекущийВид,
			ВидСравненияКомпоновкиДанных.НеРавно,
			,
			Истина);
	КонецЕсли;
	
	НастроитьСписокСменыВидаНоменклатурыВНоменклатуре(Параметры.Номенклатура);
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ
#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ДекорацияРасшифровкаОтбораОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если НавигационнаяСсылка = "ОтключитьОтбор" Тогда 
		НастроитьСписокСменыВидаНоменклатурыВНоменклатуре(, Истина);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийЭлементовФормы

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура НастроитьСписокСменыВидаНоменклатурыВНоменклатуре(Номенклатура, ОтключитьОтбор = Ложь)
	
	СвойстваСписка = ОбщегоНазначения.СтруктураСвойствДинамическогоСписка();
	
	Если Не ЗначениеЗаполнено(Номенклатура)
	 Или ОтключитьОтбор Тогда
		СвойстваСписка.ТекстЗапроса = ПолучитьЗапросДинамическогоСписка(Справочники.ВидыНоменклатуры.ПустаяСсылка());
		ОбщегоНазначения.УстановитьСвойстваДинамическогоСписка(Элементы.Список, СвойстваСписка);
		Элементы.ДекорацияРасшифровкаОтбора.Видимость = Ложь;
		Возврат;
	КонецЕсли;
	
	УсловияВыбораНовогоВидаНоменклатуры = Справочники.Номенклатура.УсловияВыбораНовогоВидаНоменклатуры();
	
	ТекстЗапроса = ПолучитьЗапросДинамическогоСписка(Справочники.ВидыНоменклатуры.ПустаяСсылка(), "НовыйВидНоменклатуры");
	ТекстЗапроса = ТекстЗапроса + "
	|ГДЕ
	|	НовыйВидНоменклатуры.ЭтоГруппа
	|	ИЛИ ИСТИНА
	|";
	
	Для Каждого КлючЗначение Из УсловияВыбораНовогоВидаНоменклатуры Цикл
		
		ТекстЗапроса = ТекстЗапроса + " И НЕ " + КлючЗначение.Значение;
		
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	ПараметрыЗапроса = Запрос.НайтиПараметры();
	
	ИменаРеквизитов = Новый Структура;
	Для Каждого Параметр Из ПараметрыЗапроса Цикл
		ИменаРеквизитов.Вставить(Параметр.Имя, "ВидНоменклатуры." + Параметр.Имя);
	КонецЦикла;
	
	СтарыеРеквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Номенклатура, ИменаРеквизитов);
	
	СвойстваСписка.ТекстЗапроса = ТекстЗапроса;
	ОбщегоНазначения.УстановитьСвойстваДинамическогоСписка(Элементы.Список, СвойстваСписка);
	
	Для Каждого Параметр Из ПараметрыЗапроса Цикл
		ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
			Список, Параметр.Имя, СтарыеРеквизиты[Параметр.Имя], Истина);
	КонецЦикла;
	
	Элементы.Список.Обновить();
	
	МассивСтрок = Новый Массив;
	МассивСтрок.Добавить(Новый ФорматированнаяСтрока(
		НСтр("ru = 'Отобраны виды номенклатуры, выбор которых в номенклатуре, которая ранее уже использовалась в программе, не приведет к проблемам в учете.'")));
	
	Если Пользователи.РолиДоступны("РедактированиеРеквизитовОбъектов") Тогда
		МассивСтрок.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'Отключить отбор'"),,,, "ОтключитьОтбор"));
	КонецЕсли;
	Элементы.ДекорацияРасшифровкаОтбора.Видимость = Истина;
	Элементы.ДекорацияРасшифровкаОтбора.Заголовок = Новый ФорматированнаяСтрока(МассивСтрок);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьЗапросДинамическогоСписка(Ссылка, ПсевдонимТаблицы = "")
	
	МетаданныеСсылки = Ссылка.Метаданные();
	ИмяТаблицы = МетаданныеСсылки.ПолноеИмя();
	Псевдоним = ?(ПустаяСтрока(ПсевдонимТаблицы), МетаданныеСсылки.Имя, ПсевдонимТаблицы);
	
	СхемаЗапроса = Новый СхемаЗапроса;
	СхемаЗапроса.УстановитьТекстЗапроса(СтрШаблон("ВЫБРАТЬ * ИЗ %1 КАК %2", ИмяТаблицы, Псевдоним));
	
	СлужебныеПоля = Новый Массив;
	СлужебныеПоля.Добавить(Псевдоним + ".ВерсияДанных");
	СлужебныеПоля.Добавить(Псевдоним + ".DataVersion");
	СлужебныеПоля.Добавить(Псевдоним + ".Предопределенный");
	СлужебныеПоля.Добавить(Псевдоним + ".Predefined");
	СлужебныеПоля.Добавить(Псевдоним + ".ИмяПредопределенныхДанных");
	СлужебныеПоля.Добавить(Псевдоним + ".PredefinedDataName");
	
	ВыбираемыеПоля = СхемаЗапроса.ПакетЗапросов[0].Операторы[0].ВыбираемыеПоля;
	КоличествоПолей = ВыбираемыеПоля.Количество();
	Для Индекс = 1 По КоличествоПолей Цикл
		ПолеВыбора = ВыбираемыеПоля[КоличествоПолей - Индекс];
		Если ТипЗнч(ПолеВыбора) = Тип("ВложеннаяТаблицаСхемыЗапроса")
		 Или СлужебныеПоля.Найти(Строка(ПолеВыбора)) <> Неопределено Тогда
			ВыбираемыеПоля.Удалить(КоличествоПолей - Индекс);
		КонецЕсли;
	КонецЦикла;
	
	Возврат СхемаЗапроса.ПолучитьТекстЗапроса();
	
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции
