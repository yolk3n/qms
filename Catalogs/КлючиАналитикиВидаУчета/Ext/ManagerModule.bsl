#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЙ ПРОГРАММНЫЙ ИНТЕРФЕЙС
#Область СлужебныйПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// Механизм расширенных ключей аналитики

// Формирует наименование ключа аналитики
//
// Параметры:
//  ПараметрыАналитики - значения полей создаваемого ключа аналитики
//
Функция ПолучитьНаименованиеКлючаАналитики(ПараметрыАналитики) Экспорт
	
	Возврат СокрЛП(ПараметрыАналитики.Организация)
		+ ?(ЗначениеЗаполнено(ПараметрыАналитики.Склад), "; " + СокрЛП(ПараметрыАналитики.Склад), "")
		+ ?(ЗначениеЗаполнено(ПараметрыАналитики.ИсточникФинансирования), "; "+ СокрЛП(ПараметрыАналитики.ИсточникФинансирования), "")
		+ "";
	
КонецФункции

// Заполняет наименование ключа аналитики
//
// Параметры:
//  КлючАналитики      - ссылка ключа аналитики, у которого заполняется наименование
//  ПараметрыАналитики - значения полей создаваемого ключа аналитики
//
Процедура ЗаполнитьНаименованиеКлючаАналитики(КлючАналитики, ПараметрыАналитики) Экспорт
	
	КлючАналитики.Наименование = ПолучитьНаименованиеКлючаАналитики(ПараметрыАналитики);
	
КонецПроцедуры

// Возвращает существующий или новый ключ аналитики
//
// Параметры:
//  ПараметрыАналитики - значения полей создаваемого ключа аналитики
//
Функция ЗначениеКлючаАналитики(ПараметрыАналитики) Экспорт
	
	Возврат РасширеннаяАналитикаУчета.ЗначениеКлючаАналитики(Справочники.КлючиАналитикиВидаУчета, ПараметрыАналитики);
	
КонецФункции

// Возвращает новый ключ аналитики
//
// Параметры:
//  ПараметрыАналитики - значения полей создаваемого ключа аналитики
//
Функция СоздатьКлючАналитики(ПараметрыАналитики) Экспорт
	
	Возврат РасширеннаяАналитикаУчета.СоздатьКлючАналитики(Справочники.КлючиАналитикиВидаУчета, ПараметрыАналитики);
	
КонецФункции

// Заполняет дополнительные поля ключа аналитики при необходимости
//
// Параметры:
//  КлючАналитики      - ссылка ключа аналитики, у которого заполняются дополнительные поля
//  ПараметрыАналитики - значения полей создаваемого ключа аналитики
//
Процедура ЗаполнитьДополнительныеПоляКлючаАналитики(КлючАналитики, ПараметрыАналитики) Экспорт
	
	Возврат;
	
КонецПроцедуры

// Проверяет наличие необходимых ключей аналитики и если не находит их, то создает новые
//
// Параметры:
//  МенеджерВременныхТаблиц - должен содержать временную таблицу "втТаблицаАналитики" со
//                            значениями полей аналитики.
Процедура ИнициализироватьКлючиАналитики(МенеджерВременныхТаблиц) Экспорт
	
	РасширеннаяАналитикаУчета.ИнициализироватьКлючиАналитики(Справочники.КлючиАналитикиВидаУчета, МенеджерВременныхТаблиц);
	
КонецПроцедуры

// Возвращает массив имен полей соответствующие ключу аналитики
//
Функция ИменаПолейАналитики() Экспорт
	
	Возврат ОбщегоНазначенияБольничнаяАптека.ИменаИзмеренийРегистраСведений(ИмяРегистраАналитики());
	
КонецФункции

// Возвращает имя регистра сведений ключа аналитики
//
Функция ИмяРегистраАналитики() Экспорт
	
	Возврат "АналитикаВидаУчета";
	
КонецФункции

// Устанавливает пометку удаления у ключей, соответствующих отбору
//
Процедура УстановитьПометкуУдаления(Отбор, ПометкаУдаления) Экспорт
	
	РасширеннаяАналитикаУчета.УстановитьПометкуУдаленияКлючейАналитики(Справочники.КлючиАналитикиВидаУчета, Отбор, ПометкаУдаления);
	
КонецПроцедуры

#КонецОбласти // СлужебныйПрограммныйИнтерфейс

#КонецЕсли