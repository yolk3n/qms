#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ
#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	ТипЗначения = ТипЗнч(ДанныеЗаполнения);
	Если ТипЗначения = Тип("Структура") Тогда
		ЗаполнитьПоДаннымЗаполнения(ДанныеЗаполнения);
	КонецЕсли;
	
	ТекущийЭлементКАТ = ЭлементКАТ;
	Справочники.Номенклатура.ЗаполнитьРеквизитыПоВидуНоменклатуры(ЭтотОбъект);
	
	Если ЗначениеЗаполнено(ТекущийЭлементКАТ) Тогда
		АптечныеТовары.ЗаполнитьПоляНоменклатурыПоАптечномуТовару(ЭтотОбъект, ТекущийЭлементКАТ);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Если ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	ЭлементКАТ = Неопределено;
	Упаковка = Справочники.ЕдиницыИзмерения.ПустаяСсылка();
	МинимальнаяЕдиницаОтпускаИзАптеки = Справочники.ЕдиницыИзмерения.ПустаяСсылка();
	ОсновнаяЕдиницаУчета = Справочники.ЕдиницыИзмерения.ПустаяСсылка();
	
	ФайлКартинки = Неопределено;
	
	КопируемыйРодитель = Родитель;
	
	Справочники.Номенклатура.ЗаполнитьРеквизитыПоВидуНоменклатуры(ЭтотОбъект);
	
	Родитель = КопируемыйРодитель;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	НепроверяемыеРеквизиты = Новый Массив;
	
	Если ЭтоЛекарственноеСредство Тогда
		
		Если ЗначениеЗаполнено(ЭлементКАТ) Тогда
			
			Запрос = Новый Запрос;
			Запрос.Текст = "
			|ВЫБРАТЬ ПЕРВЫЕ 1
			|	1
			|ИЗ
			|	Справочник.Номенклатура КАК Номенклатура
			|ГДЕ
			|	Номенклатура.ЭтоЛекарственноеСредство
			|	И Номенклатура.ЭлементКАТ = &ЭлементКАТ
			|	И Номенклатура.Ссылка <> &Номенклатура
			|";
			
			Запрос.УстановитьПараметр("ЭлементКАТ", ЭлементКАТ);
			Запрос.УстановитьПараметр("Номенклатура", Ссылка);
			
			РезультатЗапроса = Запрос.Выполнить();
			
			Если Не РезультатЗапроса.Пустой() Тогда
				
				ТекстСообщения = НСтр("ru='Уже существует номенклатура с данным элементом КАТ'");
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ЭлементКАТ",, Отказ);
				
			Иначе
				
				Если ЗначениеЗаполнено(ОсновнаяЕдиницаУчета)
				   И Не Справочники.Номенклатура.ПроверитьКорректностьЗаполненияОсновнойЕдиницыУчета(ЭтотОбъект) Тогда
					
					Если ЗначениеЗаполнено(МинимальнаяЕдиницаОтпускаИзАптеки) Тогда
						ТекстОшибки = НСтр("ru='Основная единица учета не может быть меньше минимальной единицы отпуска из аптеки.'");
					Иначе
						ТекстОшибки = НСтр("ru='Основная единица учета не может быть указанного типа для данной номенклатуры.'");
					КонецЕсли;
					
					ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, ЭтотОбъект, "ОсновнаяЕдиницаУчета",, Отказ);
					
				КонецЕсли;
				
			КонецЕсли;
			
			ТипБазовойЕдиницы = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЕдиницаИзмерения, "ТипЕдиницы");
			ТипБазовойЕдиницыКАТ = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ЭлементКАТ, Новый Структура("ТипЕдиницы", "БазоваяЕдиницаИзмеренияКАТ.ТипЕдиницы")).ТипЕдиницы;
			Мера = ОбщегоНазначения.ИмяЗначенияПеречисления(ТипБазовойЕдиницыКАТ);
			Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ЭтотОбъект,Мера + "Использовать") Тогда
				//Калашников; @Смирнов переделай плиз....Поставили пока заглушку выше...
				Если ТипБазовойЕдиницы <> ТипБазовойЕдиницыКАТ И Не ЭтотОбъект[Мера + "Использовать"] Тогда
					ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Тип единицы хранения отличается от типа единицы препарата, необходимо указать параметры пересчета.'"), ЭтотОбъект, Мера + "Использовать",, Отказ);
				КонецЕсли;
			КонецЕсли;	
		КонецЕсли;
		
	Иначе
		
		НепроверяемыеРеквизиты.Добавить("ЭлементКАТ");
		
	КонецЕсли;
	
	Если ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Услуга Тогда
		НепроверяемыеРеквизиты.Добавить("ГруппаПКУ");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СрокГодности) Тогда
		ПроверяемыеРеквизиты.Добавить("ЕдиницаИзмеренияСрокаГодности");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ВидНоменклатуры) Тогда
		ШаблонРабочегоНаименования = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВидНоменклатуры, "ШаблонРабочегоНаименованияНоменклатуры");
		Если ЗначениеЗаполнено(ШаблонРабочегоНаименования) Тогда
			НепроверяемыеРеквизиты.Добавить("Наименование");
		КонецЕсли;
	КонецЕсли;
	
	Для Каждого ТипИзмеряемойВеличины Из Справочники.ЕдиницыИзмерения.МерныеТипыЕдиницИзмерений() Цикл
		ДобавитьВНепроверяемыеРеквизитыМеры(НепроверяемыеРеквизиты, ОбщегоНазначения.ИмяЗначенияПеречисления(ТипИзмеряемойВеличины));
	КонецЦикла;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, НепроверяемыеРеквизиты);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	//бит_шэ Калашников; 19-11-2023 {{
	Если ЭтотОбъект.ПометкаУдаления 
		И ЗначениеЗаполнено(ЭтотОбъект.ЭлементКАТ) 
		И СтрНайти(ЭтотОбъект.Наименование, "удалить") Тогда
		ЭтотОбъект.ЭлементКАТ = Неопределено;
		Возврат;
	КонецЕсли;
	//}}     
	
	Если ЭтоНовый()
	   И Не ЗначениеЗаполнено(Код) Тогда
		УстановитьНовыйКод();
	КонецЕсли;
	
	КодДляПоиска = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Код, Истина);
	
	Если ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЭтоНовый() Тогда
		
		ЗапрашиваемыеРеквизиты = Новый Структура;
		ЗапрашиваемыеРеквизиты.Вставить("ЕдиницаИзмерения");
		ЗапрашиваемыеРеквизиты.Вставить("Упаковка");
		ЗапрашиваемыеРеквизиты.Вставить("УпаковкаНоменклатура", "Упаковка.Номенклатура");
		ЗапрашиваемыеРеквизиты.Вставить("ЭлементКАТ");
		ЗапрашиваемыеРеквизиты.Вставить("ВидНоменклатуры");
		МерныеТипы = Справочники.ЕдиницыИзмерения.МерныеТипыЕдиницИзмерений();
		Для Каждого ТипИзмеряемойВеличины Из МерныеТипы Цикл
			ДобавитьРеквизитыМеры(ЗапрашиваемыеРеквизиты, ОбщегоНазначения.ИмяЗначенияПеречисления(ТипИзмеряемойВеличины));
		КонецЦикла;
		СтарыеЗначения = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, ЗапрашиваемыеРеквизиты);
		
		Если ВидНоменклатуры <> СтарыеЗначения.ВидНоменклатуры Тогда
			Если Не ДополнительныеСвойства.Свойство("СменаВидаНоменклатурыОтработана") Тогда
				Справочники.Номенклатура.ЗаполнитьРеквизитыПоВидуНоменклатуры(ЭтотОбъект, Отказ, Истина);
				
			Иначе
				// Если проверку и заполнение по виду уже делали, то просто выдадим предупреждения, если что не так,
				// но не будем мешать записывать
				ЕстьОшибка = Ложь;
				Справочники.Номенклатура.ПроверитьКорректностьСменыВидаНоменклатуры(ЭтотОбъект, СтарыеЗначения.ВидНоменклатуры, ЕстьОшибка);
				
				Если ЕстьОшибка Тогда
					ДополнительныеСвойства.Вставить("ЕстьПроблемаСоСменойВидаНоменклатуры");
				КонецЕсли;
				
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Справочники.Номенклатура.ОтработатьЛогикуСвязиРеквизитов(ЭтотОбъект);
	
	ЗаполнитьНаименованияПоШаблонам();
	
	Если Не ЗначениеЗаполнено(Наименование) Тогда
		ТекстИсключения = НСтр("ru = 'Поле ""Рабочее наименование"" не заполнено'");
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	// Проверка наличия дублей по наименованию.
	Если Не ПометкаУдаления И Константы.КонтролироватьУникальностьРабочегоНаименованияНоменклатурыИСерии.Получить() Тогда
		ПолноеИмяТаблицы = ОбщегоНазначения.ИмяТаблицыПоСсылке(Ссылка);
		Дубли = ПоискИУдалениеДублей.НайтиДублиЭлемента(ПолноеИмяТаблицы, ЭтотОбъект, Новый Структура("Режим", "КонтрольПоНаименованию"));
		Если Дубли.Количество() > 0 Тогда
			ТекстИсключения = НСтр("ru = 'Значение поля ""Наименование для печати"" не уникально.'");
			ВызватьИсключение ТекстИсключения;
		КонецЕсли;
	КонецЕсли;
	
	Если Не ЭтоНовый() Тогда
		
		СтараяУпаковкаПрепарата = ?(ЗначениеЗаполнено(СтарыеЗначения.УпаковкаНоменклатура), Справочники.ЕдиницыИзмерения.ПустаяСсылка(), СтарыеЗначения.Упаковка);
		НоваяУпаковкаПрепарата = ?(ЗначениеЗаполнено(Упаковка.Номенклатура), Справочники.ЕдиницыИзмерения.ПустаяСсылка(), Упаковка);
		
		Если НоваяУпаковкаПрепарата <> СтараяУпаковкаПрепарата
		 Или Не ЗначениеЗаполнено(НоваяУпаковкаПрепарата) И ЕдиницаИзмерения <> СтарыеЗначения.ЕдиницаИзмерения Тогда
			ДополнительныеСвойства.Вставить("ОбновитьУпаковки", СтараяУпаковкаПрепарата);
		КонецЕсли;
		
		Если НоваяУпаковкаПрепарата <> СтараяУпаковкаПрепарата
		 Или ЕдиницаИзмерения <> СтарыеЗначения.ЕдиницаИзмерения Тогда
			ДополнительныеСвойства.Вставить("ЗаполнитьЕдиницыИзмерения");
		Иначе
			Для Каждого ТипИзмеряемойВеличины Из МерныеТипы Цикл
				Если ЕстьИзмененияРеквизитовМеры(СтарыеЗначения, ОбщегоНазначения.ИмяЗначенияПеречисления(ТипИзмеряемойВеличины)) Тогда
					ДополнительныеСвойства.Вставить("ЗаполнитьЕдиницыИзмерения");
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		Если ЭлементКАТ <> СтарыеЗначения.ЭлементКАТ Тогда
			ДополнительныеСвойства.Вставить("ОбновитьПриказыНаЗабраковку", СтарыеЗначения.ЭлементКАТ);
		КонецЕсли;
	Иначе
		ДополнительныеСвойства.Вставить("ЗаполнитьЕдиницыИзмерения");
		Если ЗначениеЗаполнено(ЭлементКАТ) Тогда
			ДополнительныеСвойства.Вставить("ОбновитьПриказыНаЗабраковку");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЭтоГруппа И ЭтоЛекарственноеСредство И Не ДополнительныеСвойства.Свойство("ПропуститьОбновлениеДанныхПрепарата") Тогда
		Если ЗначениеЗаполнено(ЭлементКАТ) Тогда
			ОбновитьКАТ(Отказ);
		КонецЕсли;
	КонецЕсли;
	
	СтараяУпаковка = Неопределено;
	Если ДополнительныеСвойства.Свойство("ОбновитьУпаковки", СтараяУпаковка) Тогда
		ОбновитьУпаковкиНоменклатуры(СтараяУпаковка);
	КонецЕсли;
	Если ДополнительныеСвойства.Свойство("ЗаполнитьЕдиницыИзмерения") Тогда
		РегистрыСведений.ЕдиницыИзмеренияНоменклатуры.ЗаполнитьЕдиницыИзмерения(Ссылка);
	КонецЕсли;
	
	ПредыдущийПрепарат = Неопределено;
	Если ДополнительныеСвойства.Свойство("ОбновитьПриказыНаЗабраковку", ПредыдущийПрепарат) Тогда
		ОбновитьПриказыНаЗабраковку(ПредыдущийПрепарат);
	КонецЕсли;
	
	Если Не Отказ
	   И ДополнительныеСвойства.Свойство("ЕстьПроблемаСоСменойВидаНоменклатуры") Тогда
		ТекстСообщения = НСтр("ru = 'Запись элемента выполнена, но есть проблемы, связанные с изменением вида номенклатуры.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередУдалением(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ШтрихкодыНоменклатуры.Штрихкод КАК Штрихкод
	|ИЗ
	|	РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|ГДЕ
	|	ШтрихкодыНоменклатуры.Номенклатура = &Номенклатура
	|";
	
	Запрос.УстановитьПараметр("Номенклатура", Ссылка);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НаборЗаписей = РегистрыСведений.ШтрихкодыНоменклатуры.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Штрихкод.Значение = Выборка.Штрихкод;
		НаборЗаписей.Отбор.Штрихкод.Использование = Истина;
		НаборЗаписей.Записать();
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытий

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьПоДаннымЗаполнения(ДанныеЗаполнения)
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
	
КонецПроцедуры

Процедура ЗаполнитьНаименованияПоШаблонам()
	
	ФормироватьРабочееНаименование   = Не ДополнительныеСвойства.Свойство("РабочееНаименованиеСформировано");
	ФормироватьНаименованиеДляПечати = Не ДополнительныеСвойства.Свойство("НаименованиеДляПечатиСформировано");
	
	Если ФормироватьРабочееНаименование Или ФормироватьНаименованиеДляПечати Тогда
		
		ЗапрашиваемыеПоля = Новый Структура;
		ЗапрашиваемыеПоля.Вставить("ШаблонРабочегоНаименованияНоменклатуры");
		ЗапрашиваемыеПоля.Вставить("ЗапретРедактированияРабочегоНаименованияНоменклатуры");
		ЗапрашиваемыеПоля.Вставить("ШаблонНаименованияДляПечатиНоменклатуры");
		ЗапрашиваемыеПоля.Вставить("ЗапретРедактированияНаименованияДляПечатиНоменклатуры");
		
		РеквизитыОбъекта = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ВидНоменклатуры, ЗапрашиваемыеПоля);
		
		Если ФормироватьРабочееНаименование
		   И ЗначениеЗаполнено(РеквизитыОбъекта.ШаблонРабочегоНаименованияНоменклатуры)
		   И (РеквизитыОбъекта.ЗапретРедактированияРабочегоНаименованияНоменклатуры
		 Или Не ЗначениеЗаполнено(Наименование)) Тогда
			
			ШаблонНаименования = РеквизитыОбъекта.ШаблонРабочегоНаименованияНоменклатуры;
			Наименование = КонструкторФормулБольничнаяАптека.НаименованиеПоШаблону(ШаблонНаименования, ЭтотОбъект);
			
		КонецЕсли;
		
		Если ФормироватьНаименованиеДляПечати
		   И ЗначениеЗаполнено(РеквизитыОбъекта.ШаблонНаименованияДляПечатиНоменклатуры)
		   И (РеквизитыОбъекта.ЗапретРедактированияНаименованияДляПечатиНоменклатуры
		 Или Не ЗначениеЗаполнено(НаименованиеПолное)) Тогда
			
			ШаблонНаименованияДляПечати = РеквизитыОбъекта.ШаблонНаименованияДляПечатиНоменклатуры;
			НаименованиеПолное = КонструкторФормулБольничнаяАптека.НаименованиеПоШаблону(ШаблонНаименованияДляПечати, ЭтотОбъект);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбновитьКАТ(Отказ)
	
	ОбновляемыеЗначения = Новый Структура;
	
	Если ГруппаПКУ <> ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЭлементКАТ, "ГруппаПКУ") Тогда
		ОбновляемыеЗначения.Вставить("ГруппаПКУ", ГруппаПКУ);
	КонецЕсли;
	
	Если ТипЗнч(ЭлементКАТ) = Тип("СправочникСсылка.КЛП") Тогда
		ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ЭлементКАТ, "СрокГодности, ЕдиницаИзмеренияСрокаГодности");
		Если ЗначениеЗаполнено(СрокГодности) И ЗначениеЗаполнено(ЕдиницаИзмеренияСрокаГодности)
		   И СрокГодности <> ЗначенияРеквизитов.СрокГодности Или ЕдиницаИзмеренияСрокаГодности <> ЗначенияРеквизитов.ЕдиницаИзмеренияСрокаГодности Тогда
			ОбновляемыеЗначения.Вставить("СрокГодности"                 , СрокГодности);
			ОбновляемыеЗначения.Вставить("ЕдиницаИзмеренияСрокаГодности", ЕдиницаИзмеренияСрокаГодности);
		КонецЕсли;
	КонецЕсли;
	
	Если ОбновляемыеЗначения.Количество() > 0 Тогда
		
		ЭлементОбъект = ЭлементКАТ.ПолучитьОбъект();
		Попытка
			ЗаблокироватьДанныеДляРедактирования(ЭлементКАТ);
		Исключение
			ОбщегоНазначения.СообщитьПользователю(ОбработкаОшибок.КраткоеПредставлениеОшибки(ИнформацияОбОшибке()), ЭтотОбъект,,, Отказ);
			Возврат;
		КонецПопытки;
		
		ЗаполнитьЗначенияСвойств(ЭлементОбъект, ОбновляемыеЗначения);
		
		Попытка
			ЭлементОбъект.ОбменДанными.Загрузка = Истина;
			ЭлементОбъект.Записать();
			РазблокироватьДанныеДляРедактирования(ЭлементКАТ);
		Исключение
			РазблокироватьДанныеДляРедактирования(ЭлементКАТ);
			ОбщегоНазначения.СообщитьПользователю(ОбработкаОшибок.КраткоеПредставлениеОшибки(ИнформацияОбОшибке()), ЭтотОбъект,,, Отказ);
		КонецПопытки;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбновитьПриказыНаЗабраковку(ПредыдущийПрепарат)
	
	ПрепаратыРЛС   = Новый Массив;
	ПрепаратыЕСКЛП = Новый Массив;
	
	Если ЗначениеЗаполнено(ЭлементКАТ) Тогда
		Если ТипЗнч(ЭлементКАТ) = Тип("СправочникСсылка.КЛП") Тогда
			ПрепаратыЕСКЛП.Добавить(ЭлементКАТ);
		Иначе
			ПрепаратыРЛС.Добавить(ЭлементКАТ);
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПредыдущийПрепарат) Тогда
		Если ТипЗнч(ПредыдущийПрепарат) = Тип("СправочникСсылка.КЛП") Тогда
			ПрепаратыЕСКЛП.Добавить(ПредыдущийПрепарат);
		Иначе
			ПрепаратыРЛС.Добавить(ПредыдущийПрепарат);
		КонецЕсли;
	КонецЕсли;
	
	ДанныеРЛС   = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(ПрепаратыРЛС,    "НомерРЛС");
	ДанныеЕСКЛП = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(ПрепаратыЕСКЛП,  "КодЕСКЛП");
	
	НомераРЛС = Новый Массив;
	Для Каждого КлючИЗначение Из ДанныеРЛС Цикл
		Если ЗначениеЗаполнено(КлючИЗначение.Значение.НомерРЛС) Тогда
			НомераРЛС.Добавить(КлючИЗначение.Значение.НомерРЛС);
		КонецЕсли;
	КонецЦикла;
	
	КодыЕСКЛП = Новый Массив;
	Для Каждого КлючИЗначение Из ДанныеЕСКЛП Цикл
		Если ЗначениеЗаполнено(КлючИЗначение.Значение.КодЕСКЛП) Тогда
			КодыЕСКЛП.Добавить(КлючИЗначение.Значение.КодЕСКЛП);
		КонецЕсли;
	КонецЦикла;
	
	Если НомераРЛС.Количество() = 0 И КодыЕСКЛП.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	Ссылка
	|ИЗ
	|	Справочник.ЗабракованныеСерии
	|ГДЕ
	|	НомерРЛС В (&НомераРЛС) ИЛИ КодЕСКЛП В (&КодыЕСКЛП)
	|");
	Запрос.УстановитьПараметр("КодыЕСКЛП", КодыЕСКЛП);
	Запрос.УстановитьПараметр("НомераРЛС", НомераРЛС);
	
	ТекущийНомерРЛС = "";
	Если ДанныеРЛС.Получить(ЭлементКАТ) <> Неопределено Тогда
		ТекущийНомерРЛС = ДанныеРЛС.Получить(ЭлементКАТ).НомерРЛС;
	КонецЕсли;
	
	ТекущийКодЕСКЛП = "";
	Если ДанныеЕСКЛП.Получить(ЭлементКАТ) <> Неопределено Тогда
		ТекущийКодЕСКЛП = ДанныеЕСКЛП.Получить(ЭлементКАТ).КодЕСКЛП;
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Приказ = Выборка.Ссылка.ПолучитьОбъект();
		Если ЗначениеЗаполнено(ТекущийНомерРЛС) И Приказ.НомерРЛС = ТекущийНомерРЛС
		 Или ЗначениеЗаполнено(ТекущийКодЕСКЛП) И Приказ.КодЕСКЛП = ТекущийКодЕСКЛП Тогда
			Приказ.Номенклатура = Ссылка;
		Иначе
			Приказ.Номенклатура = Неопределено;
		КонецЕсли;
		
		Приказ.ОбменДанными.Загрузка = Истина;
		Попытка
			Приказ.Записать();
		Исключение
			Продолжить;
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ДобавитьВНепроверяемыеРеквизитыМеры(МассивНепроверяемыхРеквизитов, Мера)
	
	Если Не ЭтотОбъект[Мера + "Использовать"] Тогда
		МассивНепроверяемыхРеквизитов.Добавить(Мера + "ЕдиницаИзмерения");
		МассивНепроверяемыхРеквизитов.Добавить(Мера + "Числитель");
		МассивНепроверяемыхРеквизитов.Добавить(Мера + "Знаменатель");
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитьРеквизитыМеры(ЗапрашиваемыеРеквизиты, Мера)
	
	ЗапрашиваемыеРеквизиты.Вставить(Мера + "Использовать");
	ЗапрашиваемыеРеквизиты.Вставить(Мера + "Числитель");
	ЗапрашиваемыеРеквизиты.Вставить(Мера + "Знаменатель");
	ЗапрашиваемыеРеквизиты.Вставить(Мера + "ЕдиницаИзмерения");
	ЗапрашиваемыеРеквизиты.Вставить(Мера + "МожноУказыватьВДокументах");
	
КонецПроцедуры

Функция ЕстьИзмененияРеквизитовМеры(СтарыеЗначения, Мера)
	
	Возврат ЭтотОбъект[Мера + "Использовать"] <> СтарыеЗначения[Мера + "Использовать"]
	    Или ЭтотОбъект[Мера + "Числитель"] <> СтарыеЗначения[Мера + "Числитель"]
	    Или ЭтотОбъект[Мера + "Знаменатель"] <> СтарыеЗначения[Мера + "Знаменатель"]
	    Или ЭтотОбъект[Мера + "ЕдиницаИзмерения"] <> СтарыеЗначения[Мера + "ЕдиницаИзмерения"]
	    Или ЭтотОбъект[Мера + "МожноУказыватьВДокументах"] <> СтарыеЗначения[Мера + "МожноУказыватьВДокументах"]
	
КонецФункции

Процедура ОбновитьУпаковкиНоменклатуры(СтараяУпаковкаПрепарата)
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	Ссылка
	|ИЗ
	|	Справочник.ЕдиницыИзмерения
	|ГДЕ
	|	Номенклатура = &Номенклатура
	|	И Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|");
	
	НоваяУпаковкаПрепарата = ?(ЗначениеЗаполнено(Упаковка.Номенклатура), Справочники.ЕдиницыИзмерения.ПустаяСсылка(), Упаковка);
	
	Если СтараяУпаковкаПрепарата <> НоваяУпаковкаПрепарата Тогда
		Запрос.Текст = Запрос.Текст + "И Родитель = &СтараяУпаковка";
	ИначеЕсли Не ЗначениеЗаполнено(НоваяУпаковкаПрепарата) Тогда
		Запрос.Текст = Запрос.Текст + "И Родитель = ЗНАЧЕНИЕ(Справочник.ЕдиницыИзмерения.ПустаяСсылка) И БазоваяЕдиницаИзмерения <> &ЕдиницаИзмерения";
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Номенклатура", Ссылка);
	Запрос.УстановитьПараметр("СтараяУпаковка", СтараяУпаковкаПрепарата);
	Запрос.УстановитьПараметр("ЕдиницаИзмерения", ЕдиницаИзмерения);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		УпаковкаНоменклатуры = Выборка.Ссылка.ПолучитьОбъект();
		СостоитИзДругихУпаковок = УпаковкаНоменклатуры.СостоитИзДругихУпаковок;
		УпаковкаНоменклатуры.Родитель = НоваяУпаковкаПрепарата;
		УпаковкаНоменклатуры.СостоитИзДругихУпаковок = ЗначениеЗаполнено(УпаковкаНоменклатуры.Родитель);
		
		Если УпаковкаНоменклатуры.СостоитИзДругихУпаковок И УпаковкаНоменклатуры.КоличествоВУпаковке = 0 Тогда
			УпаковкаНоменклатуры.КоличествоВУпаковке = УпаковкаНоменклатуры.Коэффициент / НоваяУпаковкаПрепарата.Коэффициент;
		КонецЕсли;
		
		УпаковкаНоменклатуры.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти // СлужебныеПроцедурыИФункции

#КонецЕсли