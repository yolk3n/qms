
&НаСервере
Функция ЗаполнитьИзРЛСНаСервере(ДанныеШтрихкода)	
	
	Если НЕ ЗначениеЗаполнено(ДанныеШтрихкода) Тогда
		ОбщегоНазначения.СообщитьПользователю("Штрихкод не заполнен!");
		Возврат Неопределено;
	КонецЕсли;
	
	ДанныеЗаполнения = НоменклатураСервер.ПолучитьНоменклатуруПоШтрихкоду(Новый Структура("Штрихкод",Штрихкод));
	Если ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат(ДанныеЗаполнения);
	КонецЕсли;

	
	Если СтрДлина(Штрихкод) < 9  тогда
		ПараметрПоиска = "packing_id"
	Иначе
		ПараметрПоиска = "ean"
	КонецЕсли;
	
	ДанныеРЛС = РЛС_ЗапросыКСервису.GET_inventory_complete(ПараметрПоиска,СокрЛП(Штрихкод));
	
	
	Если ДанныеРЛС = Неопределено Тогда
		ОбщегоНазначения.СообщитьПользователю("Данные по штриходу не найдены!");
		Возврат Неопределено;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеРЛС) = Тип("Массив") Тогда
		ДанныеРЛС = ДанныеРЛС[ДанныеРЛС.Количество()-1]
	КонецЕсли;
	
	ОбъектРЛС = РЛС_Служебный.НайтиСоздатьСправочникРЛС(ДанныеРЛС.packing_id);
	
	Номенклатура = НоменклатураРЛС(ОбъектРЛС.Ссылка);
	
	Если ЗначениеЗаполнено(Номенклатура) Тогда
		 Возврат(Номенклатура);  
	КонецЕсли; 
	
	ДанныеЖНВЛП = РЛС_Служебный.ОбновитьИнформациюОЖНВЛП(ОбъектРЛС,ШтрихКод);			
	РЛС_Служебный.ЗаполнитьРеквизитыРЛС(ДанныеРЛС, ОбъектРЛС);			
	РЛС_Служебный.ОбновитьЦеныЖВНЛП(ДанныеЖНВЛП,ОбъектРЛС.Ссылка);
	РЛС_Служебный.ОбновитьЗабракованныеСерии(ОбъектРЛС.Ссылка);
	
	ДанныеЗаполнения = Новый Структура();
	ДанныеЗаполнения.Вставить("ЭлементКАТ",ОбъектРЛС.Ссылка);
	ДанныеЗаполнения.Вставить("Наименование",СтрЗаменить(ОбъектРЛС.Наименование,Символ(174),""));
	ДанныеЗаполнения.Вставить("НаименованиеПолное",ОбъектРЛС.Наименование);
	ДанныеЗаполнения.Вставить("ВидНоменклатуры",Справочники.ВидыНоменклатуры.НайтиПоНаименованию("Лекарственное средство",Истина));
	ДанныеЗаполнения.Вставить("ЭтоЛекарственноеСредство",Истина);
	ДанныеЗаполнения.Вставить("ДанныеШтрихкода",ДанныеШтрихкода);
	
	Если ЗначениеЗаполнено(ОбъектРЛС.ГруппаПКУ) Тогда
		ГруппаСписка = Справочники.Номенклатура.НайтиПоНаименованию(ОбъектРЛС.ГруппаПКУ.Наименование);
		Если ГруппаСписка = Справочники.Номенклатура.ПустаяСсылка() Тогда
			ГруппаСписка = Справочники.Номенклатура.СоздатьГруппу();
			ГруппаСписка.Наименование = ОбъектРЛС.ГруппаПКУ.Наименование;
			ГруппаСписка.Записать();
		КонецЕсли;
		ДанныеЗаполнения.Вставить("Родитель", ГруппаСписка.Ссылка);
	Иначе
		ГруппаСписка = Справочники.Номенклатура.НайтиПоНаименованию("Лекарственные препараты");
		Если ГруппаСписка = Справочники.Номенклатура.ПустаяСсылка() Тогда
			ГруппаСписка = Справочники.Номенклатура.СоздатьГруппу();
			ГруппаСписка.Наименование = "Лекарственные препараты";
			ГруппаСписка.Записать();
		КонецЕсли;
		ДанныеЗаполнения.Вставить("Родитель", ГруппаСписка.Ссылка);
	КонецЕсли;
	
	Если ДанныеРЛС.Свойство("picname") 
		И ЗначениеЗаполнено(ДанныеРЛС.picname) Тогда
		АдресКартинки = РЛС_Служебный.ПолучитьИзображениеПрепарата(ДанныеРЛС.picname,ИдентификаторФормы);
		Если АдресКартинки <> Неопределено Тогда 
			
			ДанныеЗаполнения.Вставить("АдресКартинки",АдресКартинки);
			
			ДанныеФайлаКартинки = Новый Структура;			
			ДанныеФайлаКартинки.Вставить("Расширение", ОбщегоНазначенияКлиентСервер.ПолучитьРасширениеИмениФайла(ДанныеРЛС.picname));
			ДанныеФайлаКартинки.Вставить("ИмяБезРасширения", СтрЗаменить(ДанныеРЛС.picname,"."+ДанныеФайлаКартинки.Расширение,""));
			ДанныеФайлаКартинки.Вставить("УниверсальноеВремяИзменения", ТекущаяДата()); 		
			
			ДанныеЗаполнения.Вставить("ДанныеФайлаКартинки", ДанныеФайлаКартинки);
			
			
		КонецЕсли;
	КонецЕсли;
	
	ДопРеквизиты = Новый Структура; 
	ДопРеквизиты.Вставить("МНН",НайтиЗначениеСвойства("МНН",Строка(ОбъектРЛС.ДействующиеВеществаМНН)));

	Если ЗначениеЗаполнено(ОбъектРЛС.КомпонентныйСостав) Тогда
		КоличествоДействующегоВеществаСтрокой = СтрСоединить(ОбъектРЛС.КомпонентныйСостав.ВыгрузитьКолонку("Доза")," + ");
		ДопРеквизиты.Вставить("КоличествоДействующегоВещества",НайтиЗначениеСвойства("КоличествоДействующегоВещества",КоличествоДействующегоВеществаСтрокой));
	КонецЕсли; 
	
	Если ЗначениеЗаполнено(ДанныеРЛС.pack1n) Тогда
		ДопРеквизиты.Вставить("ФормаВыпуска",НайтиЗначениеСвойства("ФормаВыпуска",ДанныеРЛС.dosage_form_full_name));
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОбъектРЛС.АТХ) Тогда 
		ДопРеквизиты.Вставить("КодАТХ",НайтиЗначениеСвойства("КодАТХ",ОбъектРЛС.АТХ.КодЕСКЛП));	
	КонецЕсли;             
	
	ТемператураХранения = РЛС_Служебный.ПолучитьТемпературуХранения(ОбъектРЛС.УсловияХранения);	
	Если ЗначениеЗаполнено(ТемператураХранения) Тогда
		ДопРеквизиты.Вставить("ТемператураХранения",Справочники.ЗначенияСвойствОбъектов.НайтиПоНаименованию(ТемператураХранения,,,ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя","ТемператураХранения")));	
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОбъектРЛС.Наркотические) Тогда
		ДопРеквизиты.Вставить("НС",Истина);
	КонецЕсли;

	ДанныеЗаполнения.Вставить("ДопРеквизиты",ДопРеквизиты);

	Если ЗначениеЗаполнено(ДанныеРЛС.desc_id) Тогда
		Описание = РЛС_Служебный.ПолучитьОписаниеПрепарата(Формат(ДанныеРЛС.desc_id,"ЧГ=0"));
		ДанныеЗаполнения.Вставить("РЛС_Инструкции",Описание); 
	Конецесли;

	Возврат ДанныеЗаполнения;                  	

	
КонецФункции 

&НаСервере
Функция НайтиЗначениеСвойства(ВладелецИмя,Значение)

	Запрос = Новый Запрос;
	Владелец =  ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя",ВладелецИмя);

	Запрос.УстановитьПараметр("Наименование", Значение);
	Запрос.УстановитьПараметр("Владелец",Владелец);	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗначенияСвойствОбъектов.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|ГДЕ
	|	ЗначенияСвойствОбъектов.Владелец = &Владелец
	|	И ЗначенияСвойствОбъектов.Наименование ПОДОБНО &Наименование";
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	Иначе
		НовоеЗначение = Справочники.ЗначенияСвойствОбъектов.СоздатьЭлемент();
		НовоеЗначение.Владелец = Владелец;
		НовоеЗначение.Наименование = ВРЕГ(Значение);
		НовоеЗначение.Записать();
		Возврат НовоеЗначение.Ссылка;		
	КонецЕсли;	
	
	
КонецФункции

&НаСервере
Функция НоменклатураРЛС(ЭлементКАТ)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	Номенклатура.Ссылка КАК Ссылка
	               |ИЗ
	               |	Справочник.Номенклатура КАК Номенклатура
	               |ГДЕ
	               |	Номенклатура.ЭтоЛекарственноеСредство
	               |	И Номенклатура.ЭлементКАТ = &ЭлементКАТ";
	
	Запрос.УстановитьПараметр("ЭлементКАТ", ЭлементКАТ);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка
	Иначе
		Возврат Неопределено
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьПоДаннымИзРЛС(Штрихкод)

	Если НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(Штрихкод) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Штрихкод должен содержать только цифры!",,"Штрихкод");
		Возврат;
	КонецЕсли;
	
	Элементы.ГруппаОжидание.Видимость = Истина;
	Элементы.ГруппаВвода.Видимость = Ложь; 
	
	ПодключитьОбработчикОжидания("ПолучитьДанныеЗаполнения",1,Истина);
		
КонецПроцедуры 

&НаКлиенте 
Процедура ПолучитьДанныеЗаполнения() 
	
	ДанныеЗаполнения =  ЗаполнитьИзРЛСНаСервере(Штрихкод); 
	
	Если ДанныеЗаполнения <> Неопределено Тогда		
		Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.Номенклатура") Тогда 
			ОписаниеОповещения = Новый ОписаниеОповещения("РезультатДиалогаЕстьНоменклатура",ЭтотОбъект,Новый Структура("ДанныеЗаполнения",ДанныеЗаполнения));
			ПоказатьВопрос(ОписаниеОповещения,"По данному штрихкоду есть номенклатура:" + Символы.ПС + ДанныеЗаполнения + Символы.ПС + "Открыть существующий элеменет?", РежимДиалогаВопрос.ДаНет)
		Иначе
			ЭтаФорма.Закрыть(ДанныеЗаполнения); 
		КонецЕсли;
	Иначе
		Элементы.ГруппаОжидание.Видимость = Ложь;
		Элементы.ГруппаВвода.Видимость = Истина; 
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьИзРЛС(Команда)
	ЗаполнитьПоДаннымИзРЛС(Штрихкод);	
КонецПроцедуры

&НаКлиенте
Процедура ШтрихКодПриИзменении(Элемент)	
	ЗаполнитьПоДаннымИзРЛС(Штрихкод); 
КонецПроцедуры

&НаКлиенте
Процедура РезультатДиалогаЕстьНоменклатура(Результат, ДопПараметры) Экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда 
		ЭтаФорма.Закрыть(ДопПараметры.ДанныеЗаполнения)
	Иначе
		Штрихкод = "";
		Элементы.ГруппаОжидание.Видимость = Ложь;
		Элементы.ГруппаВвода.Видимость = Истина;
	КонецЕсли;		
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	ЭтаФорма.Активизировать();
	
	// ПодключаемоеОборудование
	Если Источник = "ПодключаемоеОборудование" Тогда
		Если ПодключаемоеОборудованиеКлиент.ОбработатьПолучениеДанныхОтСканераШтрихкода(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
			ЗаполнитьПоДаннымИзРЛС(ОбщегоНазначенияБольничнаяАптекаКлиентСервер.ПолучитьДанныеШтрихкода(Параметр, 1).ШтрихКод);
		КонецЕсли;
	КонецЕсли;
	// Конец ПодключаемоеОборудование

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// ПодключаемоеОборудование
	МенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПриОткрытииФормы(Неопределено, ЭтотОбъект, "СканерШтрихкода");
	// Конец ПодключаемоеОборудование 
	ИдентификаторФормы = ЭтаФорма.ВладелецФормы.УникальныйИдентификатор;

КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// ПодключаемоеОборудование
	ПодключаемоеОборудованиеСервер.НастроитьФормуДляИспользованияПодключаемогоОборудования(ЭтотОбъект);
	// Конец ПодключаемоеОборудование 
	
	Элементы.ГруппаОжидание.Видимость = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)

	Если НЕ ЗавершениеРаботы И НЕ ЗначениеЗаполнено(ДанныеЗаполнения) И НЕ ДоступноЗакрытиеФормы() Тогда
		ЭтотОбъект.ВладелецФормы.Закрыть();
	КонецЕсли;
	
КонецПроцедуры  

&НаСервере
Функция ДоступноЗакрытиеФормы()
	Возврат Пользователи.РолиДоступны("ПолныеПраваБезАдминистрирования")
КонецФункции