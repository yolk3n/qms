#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИспользуетсяНесколькоОрганизаций =
		ЭлектронноеАктированиеЕИСВызовСервера.ИспользуетсяНесколькоОрганизаций(); 
	
	Если НЕ ИспользуетсяНесколькоОрганизаций И НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
		Объект.Организация = Справочники.Организации.ОрганизацияПоУмолчанию();
	КонецЕсли;
	
	Элементы.Организация.Видимость = ИспользуетсяНесколькоОрганизаций;
	
	Для каждого Строка Из Объект.ОбъектыЗакупки Цикл
		Строка.ДанныеСтрокиКонтракта = ТекстСсылкиДанныеСтрокиКонтракта();
	КонецЦикла;
	
	Если Объект.Ссылка.Пустая() Тогда
		Объект.Контрагент = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(
			Параметры.ПараметрыВыбора, "Контрагент", Объект.Контрагент);
		Объект.Организация = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(
			Параметры.ПараметрыВыбора, "Организация", Объект.Организация);
	КонецЕсли;
	
	СвязиИПараметры = ЭлектронноеАктированиеЕИС.СвязиПараметровВыбораИПараметрыВыбораДоговора();
	Элементы.ВладелецКонтракта.СвязиПараметровВыбора = СвязиИПараметры.СвязиПараметровВыбора;
	Элементы.ВладелецКонтракта.ПараметрыВыбора = СвязиИПараметры.ПараметрыВыбора;
	
	ЗаполнитьДеревоОбъектовЗакупки();
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если Модифицированность Тогда
		ТекущийОбъект.НоменклатураОбъектовЗакупки.Очистить();
		Дерево = РеквизитФормыВЗначение("ДеревоОбъектовЗакупки");
		Для каждого ОбъектЗакупки Из Дерево.Строки Цикл
			КоличествоНоменклатуры = 0;
			Для каждого СтрокаНоменклатуры Из ОбъектЗакупки.Строки Цикл
				Если ЗначениеЗаполнено(СтрокаНоменклатуры.Номенклатура) Тогда
					Строка = ТекущийОбъект.НоменклатураОбъектовЗакупки.Добавить();
					Строка.Номенклатура = СтрокаНоменклатуры.Номенклатура;
					Строка.Идентификатор = СтрокаНоменклатуры.Идентификатор;
					Строка.Количество = СтрокаНоменклатуры.Количество;
					КоличествоНоменклатуры = КоличествоНоменклатуры + Строка.Количество;
				КонецЕсли;
			КонецЦикла;
			Если КоличествоНоменклатуры > ОбъектЗакупки.Количество Тогда
				Отказ = Истина;
				Шаблон = НСтр("ru = 'Количество номенклатуры по объекту закупки ""%1"" превышает количество в данных контракта.'");
				ОписаниеОшибки = СтрШаблон(Шаблон, ОбъектЗакупки.Наименование);
				ИмяПоля = НСтр("ru = 'Номенклатура'");
				ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(
					"Колонка",
					"Корректность",
					ИмяПоля,
					ОбъектЗакупки.НомерСтроки,
					"Объекты закупки",
					ОписаниеОшибки);
				Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
					"ОбъектыЗакупки", ОбъектЗакупки.НомерСтроки, "Количество");
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , Поле, , Отказ);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	ЭлектронноеАктированиеЕИС.ПередЗаписьюНаСервереГосударственногоКонтракта(
		ЭтотОбъект, Отказ, ТекущийОбъект, ПараметрыЗаписи);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Если НЕ ПустаяСтрока(АдресДанныхКонтракта) Тогда
		ЭлектронноеАктированиеЕИС.
			СохранитьДанныеКонтракта(ТекущийОбъект.Ссылка, АдресДанныхКонтракта);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	СформироватьНаименованиеКонтракта();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ПараметрОповещения = Новый Структура("Ссылка", Объект.Ссылка);
	Оповестить(
		ЭлектронноеАктированиеЕИСКлиентСервер.ИмяСобытияЗаписьГосконтрактаЕИС(),
		ПараметрОповещения);
		
	Оповестить(
		ИнтерфейсДокументовЭДОКлиент.ИмяСобытияОбновленияСостоянияЭДО(),
		Объект.Ссылка,
		ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	РазвернутьДерево();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВладелецКонтрактаПриИзменении(Элемент)
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДеревоОбъектов

&НаКлиенте
Процедура ОбъектыЗакупкиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "ДеревоОбъектовДанныеСтрокиКонтракта" Тогда
		ТекущиеДанные = Элемент.ТекущиеДанные;
		СтандартнаяОбработка = Ложь;
		Если ТекущиеДанные.ЭтоЛекарственныйПрепарат Тогда
			ПараметрыФормы = Новый Структура;
			ПараметрыФормы.Вставить("ИдентификаторОбъектаЗакупки", ТекущиеДанные.Идентификатор);
			ПараметрыФормы.Вставить("Контракт", Объект.Ссылка);
			ОткрытьФорму("Справочник.ГосударственныеКонтрактыЕИС.Форма.ФормаЛекарственногоПрепарата",
				ПараметрыФормы, , УникальныйИдентификатор, , , ,
				РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		Иначе
			ЭлектронноеАктированиеЕИСКлиент.ОткрытьФормуСтрокиКонтракта(
				Объект.Ссылка,
				ТекущиеДанные.Идентификатор,
				ЭтотОбъект,
				Истина);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоОбъектовПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ДеревоОбъектовЗакупки.ПолучитьЭлементы().Количество() = 0 Тогда
		Отказ = Истина;
	КонецЕсли;
	
	Родитель = РодительСтроки(ТекущиеДанные);
	Если Копирование Тогда
		Если Родитель = Неопределено Тогда
			Отказ = Истина;
		КонецЕсли;
	ИначеЕсли НЕ Родитель = Неопределено Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоОбъектовПередУдалением(Элемент, Отказ)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Родитель = РодительСтроки(ТекущиеДанные);
	Если Родитель = Неопределено Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоОбъектовКоличествоПриИзменении(Элемент)
	
	ПересчитатьСумму();
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоОбъектовЦенаПриИзменении(Элемент)
	
	ПересчитатьСумму();
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоОбъектовНаименованиеПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ДеревоОбъектов.ТекущиеДанные;
	ТекущиеДанные.Номенклатура = ТекущиеДанные.Наименование;
	
	Родитель = РодительСтроки(ТекущиеДанные);
	
	Если ТекущиеДанные.Количество = 0 Тогда
		ТекущиеДанные.Количество = Родитель.Количество - КоличествоВДочерних(Родитель);
		ТекущиеДанные.Сумма = ТекущиеДанные.Количество * ТекущиеДанные.Цена;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоОбъектовПриАктивизацииСтроки(Элемент)
	
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Родитель = РодительСтроки(Элемент.ТекущиеДанные);
	ЭтоСтрокаОбъектаЗакупки = (Родитель = Неопределено);
	Элементы.ДеревоОбъектовНаименование.ТолькоПросмотр = ЭтоСтрокаОбъектаЗакупки;
	Элементы.ДеревоОбъектовКоличество.ТолькоПросмотр = ЭтоСтрокаОбъектаЗакупки;
	Элементы.ДеревоОбъектовЦена.ТолькоПросмотр = ЭтоСтрокаОбъектаЗакупки;
	
	Элементы.ДеревоОбъектов.КоманднаяПанель.ПодчиненныеЭлементы.
		ДеревоОбъектовДобавить.Доступность = ЭтоСтрокаОбъектаЗакупки;
	Элементы.ДеревоОбъектов.КоманднаяПанель.ПодчиненныеЭлементы.
		ДеревоОбъектовСкопировать.Доступность = НЕ ЭтоСтрокаОбъектаЗакупки;
	Элементы.ДеревоОбъектов.КоманднаяПанель.ПодчиненныеЭлементы.
		ДеревоОбъектовУдалить.Доступность = НЕ ЭтоСтрокаОбъектаЗакупки;
	Элементы.ДеревоОбъектов.КоманднаяПанель.ПодчиненныеЭлементы.
		ДеревоОбъектовИзменить.Доступность = НЕ ЭтоСтрокаОбъектаЗакупки;
		
	Элементы.ДеревоОбъектов.КонтекстноеМеню.ПодчиненныеЭлементы.
		ДеревоОбъектовКонтекстноеМенюДобавить.Доступность = ЭтоСтрокаОбъектаЗакупки;
	Элементы.ДеревоОбъектов.КонтекстноеМеню.ПодчиненныеЭлементы.
		ДеревоОбъектовКонтекстноеМенюСкопировать.Доступность = НЕ ЭтоСтрокаОбъектаЗакупки;
	Элементы.ДеревоОбъектов.КонтекстноеМеню.ПодчиненныеЭлементы.
		ДеревоОбъектовКонтекстноеМенюУдалить.Доступность = НЕ ЭтоСтрокаОбъектаЗакупки;
	Элементы.ДеревоОбъектов.КонтекстноеМеню.ПодчиненныеЭлементы.
		ДеревоОбъектовКонтекстноеМенюИзменить.Доступность = НЕ ЭтоСтрокаОбъектаЗакупки;
		
КонецПроцедуры

&НаКлиенте
Процедура ДеревоОбъектовПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	Если ОтменаРедактирования Тогда
		Возврат;
	КонецЕсли;
	
	Родитель = РодительСтроки(Элемент.ТекущиеДанные);
	Если Родитель = Неопределено Тогда
		// Это строка контракта, а не номенклатура.
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Элемент.ТекущиеДанные.Идентификатор = Родитель.Идентификатор;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоОбъектовПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Родитель = РодительСтроки(ТекущиеДанные);
	Если НЕ НоваяСтрока ИЛИ Родитель = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	// Новая строка.
	Элемент.ТекущиеДанные.Наименование = ТипНоменклатура.ПривестиЗначение(Неопределено);
	Если ТекущиеДанные.Цена = 0 Тогда
		ТекущиеДанные.Цена = Родитель.Цена;
	КонецЕсли;
	
	Если ТекущиеДанные.Количество = 0 Тогда
		КоличествоВДочерних = КоличествоВДочерних(Родитель);
		ТекущиеДанные.Количество = Родитель.Количество - КоличествоВДочерних;
		ТекущиеДанные.Сумма = ТекущиеДанные.Количество * ТекущиеДанные.Цена;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоОбъектовПриИзменении(Элемент)
	
	Модифицированность = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПолучитьИзОткрытойЧастиЕИС(Команда)
	
	ПолучитьИзОткрытойЧастиЕИСНаСервере();
	
	РазвернутьДерево();
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьИзЕИС(Команда)
	
	ПолучитьИзЕИСНаСервере();
	РазвернутьДерево();
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьДоговор(Команда)
	СоздатьДоговорНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура СохранитьКонтрактВФайл(Команда)
	
	Адрес = АдресДанныхКонтракта();
	
	Если ЗначениеЗаполнено(Адрес) Тогда
		ФайловаяСистемаКлиент.СохранитьФайл(Неопределено, Адрес);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьИзФайла(Команда)
	
	Оповещение = Новый ОписаниеОповещения("ПрочитатьИзФайлаПослеЗагрузки", ЭтотОбъект);
	ПараметрыЗагрузки = ФайловаяСистемаКлиент.ПараметрыЗагрузкиФайла();
	ПараметрыЗагрузки.ИдентификаторФормы = УникальныйИдентификатор;
	ПараметрыЗагрузки.Диалог.Фильтр = НСтр("ru = 'Файлы контрактов (*.xml)|*.xml|Все файлы (*.*)|*.*'");
	ФайловаяСистемаКлиент.ЗагрузитьФайл(Оповещение, ПараметрыЗагрузки);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура устанавливает доступность реквизитов формы.
// 
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - Форма
&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	Элементы.НомерГОЗ.Видимость = Объект.ЭтоКонтрактГОЗ;
	
	Элементы.СоздатьДоговор.Видимость = Объект.ВладелецКонтракта.Пустая();
	
	ОбъектыЗакупкиЗаполнены = Форма.ДеревоОбъектовЗакупки.ПолучитьЭлементы().Количество() > 0;
	Элементы.ДеревоОбъектов.ИзменятьСоставСтрок = ОбъектыЗакупкиЗаполнены;
	Элементы.ГруппаНомерДата.Доступность = ОбъектыЗакупкиЗаполнены;
	Элементы.НадписьОДетализации.Видимость = ОбъектыЗакупкиЗаполнены;
	Элементы.Наименование.Доступность = ОбъектыЗакупкиЗаполнены;
	Элементы.ГруппаДоговор.Доступность = ОбъектыЗакупкиЗаполнены;
	Элементы.Контрагент.Доступность = ОбъектыЗакупкиЗаполнены;
	Если ОбъектыЗакупкиЗаполнены Тогда
		Элементы.КнопкаПолучитьИзЕИС.ПоложениеВКоманднойПанели = ПоложениеКнопкиВКоманднойПанели.ВДополнительномПодменю;
		Элементы.ДеревоОбъектов.ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиЭлементаФормы.Авто;
	Иначе
		Элементы.КнопкаПолучитьИзЕИС.ПоложениеВКоманднойПанели = ПоложениеКнопкиВКоманднойПанели.ВКоманднойПанелиИВДополнительномПодменю;
		Элементы.ДеревоОбъектов.ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиЭлементаФормы.Нет;
	КонецЕсли;
	Элементы.КнопкаПолучитьИзЕИС.КнопкаПоУмолчанию = НЕ ОбъектыЗакупкиЗаполнены;
	
	Элементы.СтраницаБанковскиеРеквизитыПоставщика.Видимость =
		Объект.РеквизитыСчетаПоставщика.Количество() > 0;
	Элементы.ГруппаВалютаКонтракта.Видимость = Объект.ЭтоВалютныйКонтракт;
	
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьСумму()
	
	ТекущиеДанные = Элементы.ДеревоОбъектов.ТекущиеДанные;
	ТекущиеДанные.Сумма = ТекущиеДанные.Количество * ТекущиеДанные.Цена;
	
КонецПроцедуры

&НаСервере
Процедура СоздатьДоговорНаСервере()
	
	Результат = ЭлектронноеАктированиеЕИС.СоздатьДоговорНаОснованииКонтракта(Объект.Ссылка);
	Если Результат.Выполнено Тогда
		Объект.ВладелецКонтракта = Результат.Договор;
		УправлениеФормой(ЭтотОбъект);
	Иначе
		ОбщегоНазначения.СообщитьПользователю(Результат.ОписаниеОшибки);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДеревоОбъектовЗакупки()
	
	ДеревоОбъектов = РеквизитФормыВЗначение("ДеревоОбъектовЗакупки");
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ГосударственныеКонтрактыЕИСОбъектыЗакупки.Количество КАК Количество,
	               |	ГосударственныеКонтрактыЕИСОбъектыЗакупки.Идентификатор КАК Идентификатор,
	               |	ГосударственныеКонтрактыЕИСОбъектыЗакупки.Наименование КАК НаименованиеОбъекта,
	               |	ЕСТЬNULL(ГосударственныеКонтрактыЕИСНоменклатураОбъектовЗакупки.Количество, 0) КАК КоличествоНоменклатура,
	               |	ГосударственныеКонтрактыЕИСНоменклатураОбъектовЗакупки.Номенклатура КАК Номенклатура,
	               |	ГосударственныеКонтрактыЕИСОбъектыЗакупки.НомерСтроки КАК НомерСтроки,
	               |	ГосударственныеКонтрактыЕИСОбъектыЗакупки.ЕдиницаИзмеренияНаименование КАК ЕдиницаИзмерения,
	               |	ГосударственныеКонтрактыЕИСОбъектыЗакупки.Цена КАК Цена,
	               |	ГосударственныеКонтрактыЕИСОбъектыЗакупки.Сумма КАК Сумма,
	               |	ГосударственныеКонтрактыЕИСОбъектыЗакупки.КодТовараДляЕИС КАК КодТовараДляЕИС,
	               |	ГосударственныеКонтрактыЕИСОбъектыЗакупки.СтавкаНДС КАК СтавкаНДС,
	               |	ГосударственныеКонтрактыЕИСОбъектыЗакупки.Тип КАК Тип,
	               |	&ТекстСтрокиКонтракта КАК ДанныеСтрокиКонтракта,
	               |	ГосударственныеКонтрактыЕИСОбъектыЗакупки.ЭтоЛекарственныйПрепарат КАК ЭтоЛекарственныйПрепарат,
	               |	ГосударственныеКонтрактыЕИСОбъектыЗакупки.СтранаПроизводителя КАК СтранаПроизводителя,
	               |	ГосударственныеКонтрактыЕИСОбъектыЗакупки.СтранаПроисхождения КАК СтранаПроисхождения
	               |ИЗ
	               |	Справочник.ГосударственныеКонтрактыЕИС.ОбъектыЗакупки КАК ГосударственныеКонтрактыЕИСОбъектыЗакупки
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГосударственныеКонтрактыЕИС.НоменклатураОбъектовЗакупки КАК ГосударственныеКонтрактыЕИСНоменклатураОбъектовЗакупки
	               |		ПО ГосударственныеКонтрактыЕИСОбъектыЗакупки.Идентификатор = ГосударственныеКонтрактыЕИСНоменклатураОбъектовЗакупки.Идентификатор
	               |ГДЕ
	               |	ГосударственныеКонтрактыЕИСОбъектыЗакупки.Ссылка = &Ссылка
	               |ИТОГИ
	               |	МАКСИМУМ(Количество),
	               |	МАКСИМУМ(НаименованиеОбъекта),
	               |	МАКСИМУМ(НомерСтроки),
	               |	МАКСИМУМ(ЕдиницаИзмерения),
	               |	МАКСИМУМ(Цена),
	               |	МАКСИМУМ(Сумма),
	               |	МАКСИМУМ(КодТовараДляЕИС),
	               |	МАКСИМУМ(СтавкаНДС),
	               |	МАКСИМУМ(Тип),
	               |	МАКСИМУМ(ДанныеСтрокиКонтракта),
	               |	МАКСИМУМ(ЭтоЛекарственныйПрепарат),
	               |	МАКСИМУМ(СтранаПроизводителя),
	               |	МАКСИМУМ(СтранаПроисхождения)
	               |ПО
	               |	Идентификатор";
	
	Запрос.Параметры.Вставить("ТекстСтрокиКонтракта", ТекстСсылкиДанныеСтрокиКонтракта());
	Запрос.Параметры.Вставить("Ссылка", Объект.Ссылка);
	
	ДеревоОбъектов = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	МассивТипов = Новый Массив();
	МассивТипов.Добавить(Тип("Строка")); 
	Описание = Новый ОписаниеТипов(Метаданные.ОпределяемыеТипы.НоменклатураБЭД.Тип, МассивТипов);
	ДеревоОбъектов.Колонки.Добавить("Наименование", Описание);
	
	Для каждого ОбъектЗакупки Из ДеревоОбъектов.Строки Цикл
		ОбъектЗакупки.ДанныеСтрокиКонтракта = ТекстСсылкиДанныеСтрокиКонтракта();
		ОбъектЗакупки.Наименование = СокрЛП(ОбъектЗакупки.НаименованиеОбъекта);
		Для каждого НоменклатураОбъектаЗакупки Из ОбъектЗакупки.Строки Цикл
			НоменклатураОбъектаЗакупки.НомерСтроки = "";
			НоменклатураОбъектаЗакупки.Наименование = НоменклатураОбъектаЗакупки.Номенклатура;
			НоменклатураОбъектаЗакупки.ЕдиницаИзмерения = "";
			НоменклатураОбъектаЗакупки.КодТовараДляЕИС = "";
			НоменклатураОбъектаЗакупки.СтавкаНДС = "";
			НоменклатураОбъектаЗакупки.Тип = "";
			НоменклатураОбъектаЗакупки.Сумма = ОбъектЗакупки.Цена
				* НоменклатураОбъектаЗакупки.КоличествоНоменклатура;
			НоменклатураОбъектаЗакупки.Количество =
				НоменклатураОбъектаЗакупки.КоличествоНоменклатура;
			НоменклатураОбъектаЗакупки.ДанныеСтрокиКонтракта = "";
			НоменклатураОбъектаЗакупки.СтранаПроизводителя = "";
			НоменклатураОбъектаЗакупки.СтранаПроисхождения = "";
		КонецЦикла;
	КонецЦикла;
	ЗначениеВРеквизитФормы(ДеревоОбъектов, "ДеревоОбъектовЗакупки");
	
	// Задаем ограничения типа для поля выбора номенклатуры.
	ЭлектронноеАктированиеЕИС.ЗаполнитьОграничениеТипаНоменклатуры(
		Элементы.ДеревоОбъектовНаименование, ТипНоменклатура);

КонецПроцедуры

&НаКлиенте
Процедура РазвернутьДерево()
	
	ЭлементыДерева = ДеревоОбъектовЗакупки.ПолучитьЭлементы();
	Для каждого ЭлементДерева Из ЭлементыДерева Цикл
		Элементы.ДеревоОбъектов.Развернуть(ЭлементДерева.ПолучитьИдентификатор());
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ТекстСсылкиДанныеСтрокиКонтракта()
	
	Возврат "Открыть"
	
КонецФункции

&НаСервере
Процедура СформироватьНаименованиеКонтракта(Перезаполнить = Ложь)
	
	Если НЕ ЗначениеЗаполнено(Объект.Наименование) ИЛИ Перезаполнить Тогда
		Шаблон = НСтр("ru='РК %1 №%2 от %3'");
		ДатаСтрока = Формат(Объект.ДатаЗаключенияКонтракта, "ДЛФ=D;");
		Представление = СтрШаблон(Шаблон, Объект.Код, Объект.Номер, ДатаСтрока);
		Объект.Наименование = Представление;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьИзДанныхКонтракта(ДанныеКонтрактаИлиАдрес,
					Знач РеестровыйНомер = "", ЭтоКонтрактДляЗаказчика = Ложь)
	
	Если ЭтоАдресВременногоХранилища(ДанныеКонтрактаИлиАдрес) Тогда
		Данные = ПолучитьИзВременногоХранилища(ДанныеКонтрактаИлиАдрес);
		ДанныеКонтракта = ЭлектронноеАктированиеЕИС.РазобратьФайлКонтракта(Данные, "", Истина);
	Иначе
		ДанныеКонтракта = ДанныеКонтрактаИлиАдрес;
	КонецЕсли;
	
	ЭлектронноеАктированиеЕИСПолучениеВходящих.
		ЗаполнитьИзДанныхКонтракта(ДанныеКонтракта, Объект, ЭтоКонтрактДляЗаказчика);
	
	Если НЕ ПустаяСтрока(РеестровыйНомер)
		И ПустаяСтрока(Объект.Код) Тогда
		Объект.Код = РеестровыйНомер;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаполненияДанныхКонтрактаИзВнешнегоИсточника()

	СформироватьНаименованиеКонтракта(Истина);

	Записать();
	
	ЭлектронноеАктированиеЕИС.ПослеЗагрузкиКонтрактаИзЕИС(Объект.Ссылка);
	
	ЗаполнитьДеревоОбъектовЗакупки();
	
	УправлениеФормой(ЭтотОбъект);
		
КонецПроцедуры

&НаСервере
Процедура ПолучитьИзОткрытойЧастиЕИСНаСервере()
	
	Если НЕ ПроверитьРеестровыйНомер() Тогда
		Возврат;
	КонецЕсли;
	
	СсылкаДляЗагрузки = "https://zakupki.gov.ru/epz/contract/printForm/"
		+ "viewXml.html?contractReestrNumber=" + Объект.Код;
	РезультатЗагрузки = ПолучениеФайловИзИнтернета.СкачатьФайлВоВременноеХранилище(
		СсылкаДляЗагрузки);
	Если НЕ РезультатЗагрузки.Статус Тогда
		ОписаниеОшибки = НСтр("ru = 'При загрузке контракта с сервера ЕИС возникла ошибка:'")
			+ Символы.ПС + РезультатЗагрузки.СообщениеОбОшибке;
		ОбщегоНазначения.СообщитьПользователю(ОписаниеОшибки);
		Возврат;
	КонецЕсли;
	
	АдресДанныхКонтракта = РезультатЗагрузки.Путь;
	
	НастройкиПоставщика = ЭлектронноеАктированиеЕИС.НастройкиОбменаЕИС(Объект.Организация);
	НастройкиЗаказчика = ЭлектронноеАктированиеЕИС.НастройкиОбменаЕИСЗаказчика(Объект.Организация);
	ЭтоКонтрактДляЗаказчика = НастройкиПоставщика = Неопределено ИЛИ НЕ НастройкиЗаказчика = Неопределено;
	ЗаполнитьИзДанныхКонтракта(АдресДанныхКонтракта, Объект.Код, ЭтоКонтрактДляЗаказчика);
	
	ПослеЗаполненияДанныхКонтрактаИзВнешнегоИсточника();
	
КонецПроцедуры

&НаСервере
Функция ПроверитьРеестровыйНомер()
	
	Результат = Ложь;
	
	Если НЕ ЗначениеЗаполнено(Объект.Код) Тогда
		ОписаниеОшибки = НСтр("ru='Не заполнен реестровый номер контракта.'");
		ОбщегоНазначения.СообщитьПользователю(ОписаниеОшибки, , , "Объект.Код");
		Возврат Результат;
	КонецЕсли;
	
	Если СтрДлина(СокрЛП(Объект.Код)) < 19 Тогда
		ОписаниеОшибки = НСтр("ru='Длина реестрового номера меньше 19.'");
		ОбщегоНазначения.СообщитьПользователю(ОписаниеОшибки, , , "Объект.Код");
		Возврат Результат;
	КонецЕсли;

	ТолькоЦифры = СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(Объект.Код, , Истина);
	Если НЕ ТолькоЦифры Тогда
		ОписаниеОшибки = НСтр("ru='Реестровый номер может содержать только цифры.'");
		ОбщегоНазначения.СообщитьПользователю(ОписаниеОшибки, , , "Объект.Код");
		Возврат Результат;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции 

&НаСервере
Процедура ПолучитьИзЕИСНаСервере()
	
	Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
		ОписаниеОшибки = НСтр("ru='Не заполнена организация.'");
		ОбщегоНазначения.СообщитьПользователю(ОписаниеОшибки, , , "Объект.Организация");
		Возврат;
	КонецЕсли;
	
	Настройки = ЭлектронноеАктированиеЕИС.НастройкиОбменаЕИС(Объект.Организация);
	Если НЕ ЗначениеЗаполнено(Настройки) Тогда
		Если ЭлектронноеАктированиеЕИС.ИспользоватьЭлектронноеАктированиеЗаказчикаВЕИС() Тогда
			Настройки = ЭлектронноеАктированиеЕИС.НастройкиОбменаЕИСЗаказчика(Объект.Организация);
			Если НЕ ЗначениеЗаполнено(Настройки) Тогда
				ОписаниеОшибки = НСтр("ru='Не заполнены настройки обмена с ЕИС для организации.'");
				ОбщегоНазначения.СообщитьПользователю(ОписаниеОшибки, , , "Объект.Организация");
			Иначе
				// Организация является заказчиком, возможно получение только из открытой части.
				ПолучитьИзОткрытойЧастиЕИСНаСервере();
			КонецЕсли;
		КонецЕсли;
		Возврат;
	КонецЕсли;
	
	Если НЕ ПроверитьРеестровыйНомер() Тогда
		Возврат;
	КонецЕсли;

	// Должно выполняться если организация подключена к ЕИС
	РезультатПолучения = ЭлектронноеАктированиеЕИС.
		СведенияОКонтрактеПоставщика(Объект.Организация, Объект.Код);
	Если НЕ РезультатПолучения.Выполнено Тогда
		ОбщегоНазначения.СообщитьПользователю(РезультатПолучения.ОписаниеОшибки);
		Возврат;
	КонецЕсли;
	
	Если РезультатПолучения.Контракты.Количество() = 0 Тогда
		// Контракт не был найден во кабинете поставщика.
		Если ЭлектронноеАктированиеЕИС.ИспользоватьЭлектронноеАктированиеЗаказчикаВЕИС() Тогда
			Настройки = ЭлектронноеАктированиеЕИС.НастройкиОбменаЕИСЗаказчика(
				Объект.Организация);
			Если ЗначениеЗаполнено(Настройки) Тогда
				// Организация является поставщиком и заказчиком одновременно.
				ПолучитьИзОткрытойЧастиЕИСНаСервере();
				Возврат;
			КонецЕсли;
		КонецЕсли;
		ОписаниеОшибки = НСтр("ru='Контракт не найден в личном кабинете поставщика.'");
		ОбщегоНазначения.СообщитьПользователю(ОписаниеОшибки);
		Возврат;
	КонецЕсли;
	
	СодержимоеКонтракта = РезультатПолучения.Контракты[0];
	
	Если СодержимоеКонтракта.ОшибкаПриСкачивании Тогда
		ОписаниеОшибки = НСтр("ru='Не удалось скачать данные контракта с сервера ЕИС.'");
		ОбщегоНазначения.СообщитьПользователю(ОписаниеОшибки);
		Возврат;
	КонецЕсли;
	
	Контракт = СодержимоеКонтракта.ДанныеКонтракта;
	
	ЗаполнитьИзДанныхКонтракта(Контракт);
	
	АдресДанныхКонтракта =
		ПоместитьВоВременноеХранилище(
			СодержимоеКонтракта.ДвоичныеДанныеКонтракта, УникальныйИдентификатор);
			
	ПослеЗаполненияДанныхКонтрактаИзВнешнегоИсточника();
	
КонецПроцедуры

&НаСервере
Функция АдресДанныхКонтракта()
	
	ДанныеКонтракта = ЭлектронноеАктированиеЕИС.ДанныеГосударственногоКонтракта(Объект.Ссылка, Истина);
	Если НЕ ЗначениеЗаполнено(ДанныеКонтракта) Тогда
		ТекстОшибки = НСтр("ru='Данные контракта отсутствуют.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстОшибки);
		Возврат "";
	КонецЕсли;
	
	Адрес = ПоместитьВоВременноеХранилище(ДанныеКонтракта, УникальныйИдентификатор);
	Возврат Адрес;
	
КонецФункции

&НаКлиенте
Процедура ПрочитатьИзФайлаПослеЗагрузки(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		
		ЗаполнитьИзДанныхКонтракта(Результат.Хранение);
		
		АдресДанныхКонтракта = Результат.Хранение;
		
		Если НЕ ЗначениеЗаполнено(Объект.Код) Тогда
			// В файле контракта может отсутствовать реестровый номер.
			// В этом случае запрашиваем его у пользователя.
			Оповещение = Новый ОписаниеОповещения(
				"ПослеВводаРеестровогоНомераКонтракта", ЭтотОбъект);
			Подсказка = НСтр("ru = 'Введите реестровый номер загружаемого контракта:'");
			ПоказатьВводЧисла(Оповещение, , Подсказка, 19);
			Возврат;
		Иначе
			ПослеВводаРеестровогоНомераКонтракта(Объект.Код, Неопределено);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВводаРеестровогоНомераКонтракта(Номер, ДополнительныеПараметры) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Номер) Тогда
		Возврат;
	КонецЕсли;
	
	Объект.Код = Формат(Номер, "ЧГ=0;");
	
	ПослеЗаполненияДанныхКонтрактаИзВнешнегоИсточника();
	
КонецПроцедуры

&НаКлиенте
Функция РодительСтроки(ТекущиеДанные)
	
	Идентификатор = ТекущиеДанные.ПолучитьИдентификатор();
	Родитель = ДеревоОбъектовЗакупки.НайтиПоИдентификатору(Идентификатор).ПолучитьРодителя();
	
	Возврат Родитель;
	
КонецФункции

&НаКлиенте
Функция КоличествоВДочерних(Родитель)
	
	ДочерниеСтроки = Родитель.ПолучитьЭлементы();
	КоличествоВДочерних = 0;
	Для каждого Строка Из ДочерниеСтроки Цикл
		КоличествоВДочерних = КоличествоВДочерних + Строка.Количество;
	КонецЦикла;
	
	Возврат КоличествоВДочерних;
	
КонецФункции

#КонецОбласти