#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает таблицу классификатора из макета с предопределенными элементами.
// Макеты хранятся в макетах данного справочника (см. общую форму "ДобавлениеЭлементовВКлассификатор").
//	Параметры:
//		Переменные - Строка - в данном методе не используется, однако является обязательной в случае обращения к другим классификаторам.
//	Возвращаемое значение:
//		Таблица значений - таблица классификатора с колонками:
//			* Код - Строка - строковое представление кода элемента классификатора.
//			* Наименование - Строка - наименование элемента классификатора.
//
Функция ТаблицаКлассификатора(Знач Переменные) Экспорт
	
	ТаблицаПоказателей = Новый ДеревоЗначений;
	
	Макет = Справочники.КлассификаторТНВЭД.ПолучитьМакет("ДанныеКлассификатора");
	
	Список = Макет.Области.Найти("Строки");
	
	Если Список.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Строки Тогда
		// Заполнение дерева данными списка.
		
		ТаблицаПоказателей.Колонки.Добавить("Код", Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(10)));
		ТаблицаПоказателей.Колонки.Добавить("Наименование",Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(500)));
		
		ВерхОбласти = Список.Верх;
		НизОбласти = Список.Низ;
		
		ТекущийУровень = 0;
		Родители = Новый Массив;
		Родители.Добавить(ТаблицаПоказателей);
		Для НомерСтроки = ВерхОбласти По НизОбласти Цикл
			
			ОбластьКода = Макет.Область(НомерСтроки, 1);
			Уровень = ОбластьКода.Отступ / 2;
			
			СтрокаСписка = Родители[Уровень].Строки.Добавить();
			Для Каждого Колонка Из ТаблицаПоказателей.Колонки Цикл
				
				ЗначениеКолонки = СокрП(Макет.Область(НомерСтроки, ТаблицаПоказателей.Колонки.Индекс(Колонка) + 1).Текст);
				СтрокаСписка[Колонка.Имя] = ЗначениеКолонки;
				
			КонецЦикла;
			
			Если Родители.ВГраница() > Уровень Тогда
				Родители[Уровень + 1] = СтрокаСписка;
			Иначе
				Родители.Добавить(СтрокаСписка);
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;
	
	Возврат ТаблицаПоказателей;
	
КонецФункции

// Функция ищет по коду элементы в справочнике Классификатор ТН ВЭД.
// Если их нет, то создает элементы справочника в соответствии с классификатором ТН ВЭД ЕАЭС.
//
// Параметры:
//  Код             - Строка(10) - Строка с кодом классификатора ТН ВЭД,
//  РежимОбновления - Булево, Истина - признак записи объекта через метод ОбновлениеИнформационнойБазы.ЗаписатьОбъект().
//
// Возвращаемое значение:
//  Ссылка - ссылка на элемент классификатора или Неопределено, если такого кода нет в ТН ВЭД.
//
Функция НайтиСоздатьЭлементКлассификатора(Код, РежимОбновления = Ложь) Экспорт
	
	СуществующийЭлемент = Справочники.КлассификаторТНВЭД.НайтиПоКоду(Код);
	Если Не ЗначениеЗаполнено(СуществующийЭлемент) Тогда
		
		ТаблицаКлассификатора = ТаблицаКлассификатора(1);
		ТаблицаКлассификатора.Индексы.Добавить("Код");
		
		СтруктураПоиска = Новый Структура("Код", Код);
		НайденныеСтроки = ТаблицаКлассификатора.НайтиСтроки(СтруктураПоиска);
		
		Если НайденныеСтроки.Количество() = 1 Тогда
			
			СвойстваЭлемента = НайденныеСтроки[0];
			
			СправочникОбъект = Справочники.КлассификаторТНВЭД.СоздатьЭлемент();
			
			СправочникОбъект.Наименование            = СвойстваЭлемента.Наименование;
			СправочникОбъект.НаименованиеПолное      = СвойстваЭлемента.Наименование;
			СправочникОбъект.Код                     = СвойстваЭлемента.Код;
			
			Если РежимОбновления Тогда
				ОбновлениеИнформационнойБазы.ЗаписатьОбъект(СправочникОбъект);
			Иначе
				СправочникОбъект.Записать();
			КонецЕсли;
			
			Возврат СправочникОбъект.Ссылка;
			
		Иначе
			Возврат Неопределено;
		КонецЕсли;
		
	Иначе
		Возврат СуществующийЭлемент;
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#КонецЕсли