
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПриИзмененииСпособаПополненияЗапаса();
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ
#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СпособПополненияЗапасаПриИзменении(Элемент)
	
	ПриИзмененииСпособаПополненияЗапаса();
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийЭлементовФормы

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПриИзмененииСпособаПополненияЗапаса()
	
	Если Объект.СпособПоставки = ПредопределенноеЗначение("Перечисление.СпособыПоставки.Покупка") Тогда
		
		Элементы.ИсточникПополненияЗапаса.Доступность = Истина;
		Элементы.ИсточникПополненияЗапаса.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.Контрагенты");
		
	ИначеЕсли Объект.СпособПоставки = ПредопределенноеЗначение("Перечисление.СпособыПоставки.Перемещение") Тогда
		
		Элементы.ИсточникПополненияЗапаса.Доступность = Истина;
		Элементы.ИсточникПополненияЗапаса.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.Склады");
		
	Иначе
		
		Элементы.ИсточникПополненияЗапаса.Доступность = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти // СлужебныеПроцедурыИФункции
