
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Номенклатура = Параметры.Номенклатура;
	РеквизитыНоменклатуры = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Номенклатура, "ВидНоменклатуры");	
	
	ВидНоменклатуры = РеквизитыНоменклатуры.ВидНоменклатуры;
	УстановитьНастройкиПоВидуНоменклатуры();
	
	ПараметрыЗапросаИзПараметровФормы = Новый Структура;
	ПараметрыЗапросаИзПараметровФормы.Вставить("Номенклатура", Параметры.Номенклатура);
	ПараметрыЗапросаИзПараметровФормы.Вставить("Организация", Параметры.Организация);
	ПараметрыЗапросаИзПараметровФормы.Вставить("Склад", Параметры.Склад);
	ПараметрыЗапросаИзПараметровФормы.Вставить("МестоХранения", Параметры.МестоХранения);
	ПараметрыЗапросаИзПараметровФормы.Вставить("Регистратор", Параметры.Регистратор);
	
	ПараметрыЗапроса = Новый ФиксированнаяСтруктура(ПараметрыЗапросаИзПараметровФормы);
	
	ЗаполнитьОстаткиСерий();
	
	Если ЗначениеЗаполнено(Параметры.Текст) Тогда
		РеквизитыСерии = РеквизитыСерииИзСтроки(Параметры.Текст, ПараметрыСерий);
	ИначеЕсли ЗначениеЗаполнено(Параметры.Серия) Тогда
		РеквизитыСерии = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Параметры.Серия, "Номер, ГоденДо");
	КонецЕсли;
	
	Если РеквизитыСерии <> Неопределено Тогда
		Номер   = РеквизитыСерии.Номер;
		ГоденДо = РеквизитыСерии.ГоденДо;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если СтрДлина(Номер) > 0 Тогда
		Элементы.Номер.УстановитьГраницыВыделения(СтрДлина(Номер),СтрДлина(Номер));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ
#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаОК(Команда)
	
	Если Элементы.ГруппаСтраницыСерий.ТекущаяСтраница = Элементы.ГруппаВводСерии Тогда
		ЗавершитьВводСерии();
	Иначе
		ВыбратьСерию();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти // ОбработчикиКомандФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ
#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ОстаткиСерийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ВыбратьСерию();
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийЭлементовФормы

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗавершитьВводСерии()
	
	Если ПроверитьЗаполнение() Тогда
		
		Серия = НайтиСоздатьСерию();
		Если Не ЗначениеЗаполнено(Серия) Тогда
			Возврат;
		КонецЕсли;
		
		ОповеститьОВыборе(Серия);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция НайтиСоздатьСерию()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СерииНоменклатуры.Ссылка КАК Серия
	|ИЗ
	|	Справочник.СерииНоменклатуры КАК СерииНоменклатуры
	|ГДЕ
	|	СерииНоменклатуры.Владелец = &ВидНоменклатуры
	|	И СерииНоменклатуры.ГоденДо = &ГоденДо
	|	И СерииНоменклатуры.Номер = &Номер";
	
	Запрос.УстановитьПараметр("ВидНоменклатуры", ВидНоменклатуры);
	
	Если ПараметрыСерий.ИспользоватьНомерСерии Тогда
		Запрос.УстановитьПараметр("Номер", СокрЛП(Номер));
	Иначе
		Запрос.УстановитьПараметр("Номер", "");
	КонецЕсли;
		
	Если ПараметрыСерий.ИспользоватьСрокГодностиСерии Тогда
		Запрос.УстановитьПараметр("ГоденДо", ГоденДо);
	Иначе
		Запрос.УстановитьПараметр("ГоденДо", '00010101000000');
	КонецЕсли;	
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Серия;
	Иначе
		
		Если Не ПравоДоступа("Добавление", Метаданные.Справочники.СерииНоменклатуры) Тогда
			
			ТекстСообщения = НСтр("ru = 'В программе еще не зарегистрирована серия %ПредставлениеСерии%. Недостаточно прав для регистрации новой серии.'");
			
			ПредставлениеСерии = Справочники.СерииНоменклатуры.ПредставлениеСерии(ПараметрыСерий, Запрос.Параметры);
			
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПредставлениеСерии%", ПредставлениеСерии);
			
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			Возврат Справочники.СерииНоменклатуры.ПустаяСсылка();
		КонецЕсли;
		
		СерияОбъект = Справочники.СерииНоменклатуры.СоздатьЭлемент();
		СерияОбъект.Владелец = ВидНоменклатуры;
		СерияОбъект.Номер           = Номер;
		СерияОбъект.ГоденДо         = ГоденДо;
		
		СерияОбъект.Записать();
		
		Возврат СерияОбъект.Ссылка;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ВыбратьСерию()

	ТекущиеДанные = Элементы.ОстаткиСерий.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		ТекстПредупреждения = НСтр("ru = 'Выберите серию или введите новую.'");	
		ПоказатьПредупреждение(, ТекстПредупреждения);
		Возврат;
	Иначе	
		Серия = ТекущиеДанные.Серия;
	КонецЕсли;
	
	ОповеститьОВыборе(Серия);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьНастройкиПоВидуНоменклатуры()
	
	Если Не ЗначениеЗаполнено(ВидНоменклатуры) Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыСерий = ЗначениеНастроекБольничнаяАптекаПовтИсп.ПараметрыСерийНоменклатуры(ВидНоменклатуры);
	
	Элементы.ГоденДо.Видимость = ПараметрыСерий.ИспользоватьСрокГодностиСерии;
	Элементы.ОстаткиСерийГоденДо.Видимость = ПараметрыСерий.ИспользоватьСрокГодностиСерии;
	Если ПараметрыСерий.ИспользоватьСрокГодностиСерии Тогда
		Элементы.ГоденДо.Формат = ПараметрыСерий.ФорматнаяСтрокаСрокаГодности;
		Элементы.ГоденДо.ФорматРедактирования = ПараметрыСерий.ФорматнаяСтрокаСрокаГодности;
		Элементы.ОстаткиСерийГоденДо.Формат = ПараметрыСерий.ФорматнаяСтрокаСрокаГодности;
	КонецЕсли;
		
	Элементы.Номер.Видимость = ПараметрыСерий.ИспользоватьНомерСерии;
	Элементы.ОстаткиСерийНомер.Видимость = ПараметрыСерий.ИспользоватьНомерСерии;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция РеквизитыСерииИзСтроки(Знач Строка, ПараметрыШаблона)
	
	РеквизитыСерии = Новый Структура("Номер, ГоденДо", "", '00010101');
	ГоденДо = Неопределено;
	Номер   = Неопределено;
	
	Если ПараметрыШаблона.ИспользоватьСрокГодностиСерии Тогда
		ПредставлениеДатыСтрокой = Формат('20150101120000', ПараметрыШаблона.ФорматнаяСтрокаСрокаГодности);
		ДлинаСтрокиГоденДо = СтрДлина(ПредставлениеДатыСтрокой);
		СтрокаГоденДо = Прав(СокрЛП(Строка), ДлинаСтрокиГоденДо);
		ПустаяДата = '00010101';
		
		Если СтрДлина(СтрокаГоденДо) <> ДлинаСтрокиГоденДо Тогда
			ГоденДо = ПустаяДата;
		КонецЕсли;
		
		Если ГоденДо = Неопределено Тогда
			МассивЧастей = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СтрокаГоденДо, ".");
			Если МассивЧастей.Количество() < 3 Тогда
				ГоденДо = ПустаяДата;
			КонецЕсли;
		КонецЕсли;
		
		Если ГоденДо = Неопределено Тогда
			День  = СокрЛП(МассивЧастей[0]);
			Месяц = СокрЛП(МассивЧастей[1]);
			
			Если ПараметрыШаблона.ТочностьУказанияСрокаГодностиСерии = ПредопределенноеЗначение("Перечисление.ТочностиУказанияСрокаГодности.СТочностьюДоЧасов") Тогда
				ГодЧас =  СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(МассивЧастей[2], "-");
				Если ГодЧас.Количество() = 2 Тогда
					Год = СокрЛП(ГодЧас[0]);
					Час = СокрЛП(ГодЧас[1]);
				ИначеЕсли ГодЧас.Количество() = 1 Тогда
					Год = СокрЛП(ГодЧас[0]);
					Час = "00";
				Иначе
					Год = "00";
					Час = "00";
				КонецЕсли;
			Иначе
				Год = МассивЧастей[2];
				Час = "00";
			КонецЕсли;
			
			Попытка
				ГоденДо = Дата("20" + Год + Месяц + День + Час + "0000");
			Исключение
				ГоденДо = ПустаяДата;
			КонецПопытки;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ПараметрыШаблона.ИспользоватьНомерСерии Тогда
		Если ГоденДо <> ПустаяДата Тогда
			Номер = СтрЗаменить(Строка, " " + НСтр("ru = 'до'") + " " + СтрокаГоденДо, "");
		Иначе
			Номер = Строка;
		КонецЕсли;
	КонецЕсли;
	
	Если Номер <> Неопределено Тогда
		РеквизитыСерии.Номер = Номер;
	КонецЕсли;
	
	Если ГоденДо <> Неопределено Тогда
		РеквизитыСерии.ГоденДо = ГоденДо;
	КонецЕсли;
	
	Возврат РеквизитыСерии;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьОстаткиСерий()

	Если ПравоДоступа("Чтение", Метаданные.РегистрыНакопления.ТоварыНаСкладах) Тогда
		
		ТекстЗапроса = "
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	СерияНоменклатуры КАК Серия,
		|	0 КАК Остаток
		|ПОМЕСТИТЬ ДанныеРегистров
		|ИЗ
		|	РегистрНакопления.ТоварыНаСкладах КАК Товары
		|ГДЕ
		|	Номенклатура = &Номенклатура
		|	И СерияНоменклатуры <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
		|";
		
	Иначе
		
		ТекстЗапроса = "
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
		|	0 КАК Остаток
		|ПОМЕСТИТЬ ДанныеРегистров
		|ГДЕ
		|	ЛОЖЬ
		|";
		
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеРегистров.Серия КАК Серия,
	|	ВЫРАЗИТЬ(ДанныеРегистров.Серия КАК Справочник.СерииНоменклатуры).Номер КАК Номер,
	|	ВЫРАЗИТЬ(ДанныеРегистров.Серия КАК Справочник.СерииНоменклатуры).ГоденДо КАК ГоденДо,
	|	ДанныеРегистров.Остаток КАК Остаток
	|ИЗ
	|	ДанныеРегистров КАК ДанныеРегистров
	|ГДЕ
	|	ДанныеРегистров.Остаток > 0
	|	ИЛИ &ВсеСерии
	|
	|УПОРЯДОЧИТЬ ПО
	|	ГоденДо,
	|	Номер";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.УстановитьПараметр("ВсеСерии", Истина);
	Для Каждого Параметр Из ПараметрыЗапроса Цикл
		Запрос.УстановитьПараметр(Параметр.Ключ, Параметр.Значение);
	КонецЦикла;
	
	ОстаткиСерий.Загрузить(Запрос.Выполнить().Выгрузить());
	
	КоличествоСерий = ОстаткиСерий.Количество();
	
КонецПроцедуры

#КонецОбласти // СлужебныеПроцедурыИФункции
