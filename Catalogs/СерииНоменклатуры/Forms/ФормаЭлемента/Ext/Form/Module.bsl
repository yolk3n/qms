
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", Элементы.ГруппаДополнительныеРеквизиты.Имя);
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	
	Если Объект.Ссылка.Пустая() Тогда
		СерийныйНомерНачальный = "";
		Если Не ПустаяСтрока(Параметры.ТекстЗаполнения) Тогда
			Объект.Номер = Параметры.ТекстЗаполнения;
		КонецЕсли;
	Иначе
		СерийныйНомерНачальный = Объект.Номер;
	КонецЕсли;
	
	Если ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.Номенклатура") Тогда
		ВидНоменклатуры = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Владелец, "ВидНоменклатуры");
		Элементы.Владелец.Заголовок = НСтр("ru='Номенклатура'");
	ИначеЕсли ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.ВидыНоменклатуры") Тогда
		ВидНоменклатуры = Объект.Владелец;
		Элементы.Владелец.Заголовок = НСтр("ru='Вид номенклатура'");
	КонецЕсли;
	
	УстановитьНастройкиПоНоменклатуре();
	
	ОбновитьДоступностьКомандЗабраковкиСерии(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	СерийныйНомерНачальный = Объект.Номер;
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если Не ЗавершениеРаботы Тогда
		ПредложитьПоискЗабраковкиПриЗакрытии();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ
#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Забраковать(Команда)
	
	ЗабраковатьСерию();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьЗабраковку(Команда)
	
	ОтменитьЗабраковкуСерии();
	
КонецПроцедуры

#КонецОбласти // ОбработчикиКомандФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ
#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ГоденДоПриИзменении(Элемент)
	
	НоменклатураКлиентСервер.ПересчитатьДатуСерии(Объект.ГоденДо);
	
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьНастройкиПоНоменклатуре()
	
	ПараметрыСерий = ЗначениеНастроекБольничнаяАптекаПовтИсп.ПараметрыСерийНоменклатуры(ВидНоменклатуры);
	
	Элементы.ГоденДо.Видимость = ПараметрыСерий.ИспользоватьСрокГодностиСерии;
	Если ПараметрыСерий.ИспользоватьСрокГодностиСерии Тогда
		Элементы.ГоденДо.Формат               = ПараметрыСерий.ФорматнаяСтрокаСрокаГодности;
		Элементы.ГоденДо.ФорматРедактирования = ПараметрыСерий.ФорматнаяСтрокаСрокаГодности;
	КонецЕсли;
	
	Элементы.Номер.Видимость = ПараметрыСерий.ИспользоватьНомерСерии;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗабраковатьСерию()
	
	Если Объект.Ссылка.Пустая() Тогда
		Оповещение = Новый ОписаниеОповещения("ЗабраковатьНезаписаннуюСерию", ЭтотОбъект);
		ТекстВопроса = НСтр("ru='Объект не сохранен в базе данных. Для продолжения требуется записать объект.'");
		ПоказатьВопрос(
			Оповещение,
			ТекстВопроса,
			ВзаимодействиеСПользователемКлиент.ПолучитьКнопкиДаНет(НСтр("ru='Записать'"), НСтр("ru='Отмена'")));
	Иначе
		ВыбратьЗабраковкуСерии();
	КонецЕсли;
	
КонецПроцедуры

// Обрабатывает ответ на вопрос о сохранении данных в БД перед выбором забракованных серий.
// Продолжение процедуры ЗабраковатьСерию
//
// Параметры:
//  Ответ                   - КодВозвратаДиалога
//  ДополнительныеПараметры - (не используется)
//
&НаКлиенте
Процедура ЗабраковатьНезаписаннуюСерию(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		Если Записать() Тогда
			ВыбратьЗабраковкуСерии();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьЗабраковкуСерии()
	
	ПараметрыФормы = Новый Структура;
	ЗаголовокФормыВыбора = НСтр("ru='Поиск забраковки Серия: %1 Препарат: %2'");
	ПараметрыФормы.Вставить("Заголовок", СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ЗаголовокФормыВыбора, Объект.Номер, Объект.Владелец));
	ПараметрыФормы.Вставить("СтрокаПоиска", Объект.Номер);
	
	Оповещение = Новый ОписаниеОповещения("ВыбратьЗабраковкуСерииЗавершение", ЭтотОбъект);
	ОткрытьФорму("Справочник.ЗабракованныеСерии.ФормаВыбора", ПараметрыФормы, ЭтотОбъект,,,, Оповещение);
	
КонецПроцедуры

// Обрабатывает выбранные забракованные серии номенклатуры
// Продолжение процедуры ВыбратьЗабраковкуСерии
//
// Параметры:
//  ЗабраковкаСерии         - СправочникСсылка.ЗабракованныеСерии - выбранные серии для забраковки
//  ДополнительныеПараметры - (не используется)
//
&НаКлиенте
Процедура ВыбратьЗабраковкуСерииЗавершение(ЗабраковкаСерии, ДополнительныеПараметры) Экспорт
	
	Если ЗабраковкаСерии = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗабраковатьСериюСервер(Объект.Ссылка, ЗабраковкаСерии);
	
	Состояние(НСтр("ru = 'Серия забракована.'"));
	ОбновитьДоступностьКомандЗабраковкиСерии(ЭтотОбъект);
	ОповеститьОбИзменении(Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьЗабраковкуСерии()
	
	ОтменитьЗабраковкуСерииСервер(Объект.Ссылка);
	
	Состояние(НСтр("ru = 'Отменена забраковка серии.'"));
	ОбновитьДоступностьКомандЗабраковкиСерии(ЭтотОбъект);
	ОповеститьОбИзменении(Объект.Ссылка);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОтменитьЗабраковкуСерииСервер(Знач Серия)
	
	НаборЗаписей = РегистрыСведений.ЗабракованныеСерии.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Серия.Установить(Серия);
	НаборЗаписей.Записать(Истина);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗабраковатьСериюСервер(Знач Серия, Знач ЗабраковкаСерии)
	
	Запись = РегистрыСведений.ЗабракованныеСерии.СоздатьМенеджерЗаписи();
	Запись.Серия = Серия;
	Запись.ЗабраковкаСерии = ЗабраковкаСерии;
	Запись.Записать(Истина);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьДоступностьКомандЗабраковкиСерии(Форма)
	
	Забракована = СерияЗабракована(Форма.Объект.Ссылка);
	ОбщегоНазначенияБольничнаяАптекаКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы, "Забраковать", "Доступность", Не Забракована);
	ОбщегоНазначенияБольничнаяАптекаКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы, "ОтменитьЗабраковку", "Доступность", Забракована);
	
	ОбщегоНазначенияБольничнаяАптекаКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"КартинкаСерияЗабракована",
		"Видимость",
		Забракована);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредложитьПоискЗабраковкиПриЗакрытии()
	
	ЗадатьВопрос = Ложь;
	Если Не Объект.Ссылка.Пустая() И СерийныйНомерНачальный <> Объект.Номер Тогда
		ЗадатьВопрос = ЗадатьВопросОПоискеЗабраковки(Объект.Ссылка);
	КонецЕсли;
	
	Если Не ЗадатьВопрос Тогда
		Возврат;
	КонецЕсли;
	
	Оповещение = Новый ОписаниеОповещения("ПредложитьПоискЗабраковкиПриЗакрытииЗавершение", ЭтотОбъект);
	ПоказатьВопрос(Оповещение, НСтр("ru='Открыть форму для поиска забраковки?'"), РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

// Обрабатывает ответ на вопрос о поиске забракованной серии
// Продолжение процедуры ПредложитьПоискЗабраковкиПриЗакрытии
//
// Параметры:
//  Ответ                   - КодВозвратаДиалога
//  ДополнительныеПараметры - (не используется)
//
&НаКлиенте
Процедура ПредложитьПоискЗабраковкиПриЗакрытииЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ЗабраковатьСерию();
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗадатьВопросОПоискеЗабраковки(Знач Серия)
	
	Возврат 
		Константы.ПредлагатьПоискЗабраковкиПриЗаписиСерииНоменклатуры.Получить()
		И Не СерияЗабракована(Серия);
		
КонецФункции

&НаСервереБезКонтекста
Функция СерияЗабракована(Знач Серия)
	
	Возврат Справочники.СерииНоменклатуры.СерияЗабракована(Серия);
	
КонецФункции

#КонецОбласти // служебныеПроцедурыИФункции

////////////////////////////////////////////////////////////////////////////////
// СТАНДАРТНЫЕ ПОДСИСТЕМЫ
#Область СтандартныеПодсистемы

// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов

&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
	
	ЗапретРедактированияРеквизитовОбъектовБольничнаяАптекаКлиент.РазрешитьРедактированиеРеквизитовОбъекта(ЭтотОбъект);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов

// СтандартныеПодсистемы.Свойства

&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
	
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.Свойства

#КонецОбласти // СтандартныеПодсистемы
