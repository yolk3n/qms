#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ОБНОВЛЕНИЕ ИНФОРМАЦИОННОЙ БАЗЫ
#Область ОбновлениеИнформационнойБазы

Процедура ЗарегистрироватьДанныеКОбработкеКодовЕСКЛП(Параметры) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	Классификатор.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.АТХКлассификация КАК Классификатор
	|ГДЕ
	|	Классификатор.КодЕСКЛП = """"
	|	И Классификатор.Наименование <> """"
	|");
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
КонецПроцедуры

Процедура ОбработатьКодыЕСКЛП(Параметры) Экспорт
	
	ПолноеИмяОбъекта = ПустаяСсылка().Метаданные().ПолноеИмя();
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыВыборкиДанныхДляОбработки();
	ДополнительныеПараметры.ИмяВременнойТаблицы = "ВтДляОбработки";
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуСсылокДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта, МенеджерВременныхТаблиц, ДополнительныеПараметры);
	
	Если Не Результат.ЕстьДанныеДляОбработки Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	
	Если Не Результат.ЕстьЗаписиВоВременнойТаблице Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ЗарегистрированныеДанные.Ссылка     КАК Ссылка,
	|	Данные.Наименование                 КАК Наименование,
	|	Данные.Ссылка ЕСТЬ NULL
	|		ИЛИ Данные.Наименование = """"  КАК НеОбрабатывать
	|ИЗ
	|	ВтДляОбработки КАК ЗарегистрированныеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			Справочник.АТХКлассификация КАК Данные
	|		ПО
	|			Данные.Ссылка = ЗарегистрированныеДанные.Ссылка
	|");
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.НеОбрабатывать Тогда
			ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Ссылка);
			Продолжить;
		КонецЕсли;
		
		Попытка
			
			Объект = Выборка.Ссылка.ПолучитьОбъект();
			
			// Получение нового кода из наименования.
			ИнтервалыСимволов = Новый Массив;
			ИнтервалыСимволов.Добавить(Новый Структура("Начало, Конец", КодСимвола("0"), КодСимвола("9")));
			ИнтервалыСимволов.Добавить(Новый Структура("Начало, Конец", КодСимвола("A"), КодСимвола("Z")));
			
			ПредполагаемыйКод = Лев(Выборка.Наименование, СтрНайти(Выборка.Наименование, " ") - 1);
			
			ЧастиКода = Новый Массив;
			Для Номер = 1 По СтрДлина(ПредполагаемыйКод) Цикл
				
				Символ = Сред(ПредполагаемыйКод, Номер, 1);
				КодСимвола = КодСимвола(Символ);
				
				ВходитВИнтервал = Ложь;
				Для Каждого Интервал Из ИнтервалыСимволов Цикл
					Если Интервал.Начало <= КодСимвола И КодСимвола <= Интервал.Конец Тогда
						ВходитВИнтервал = Истина;
					КонецЕсли;
				КонецЦикла;
				
				Если Не ВходитВИнтервал Тогда
					Прервать;
				КонецЕсли;
				
				ЧастиКода.Добавить(Символ);
				
			КонецЦикла;
			
			Объект.КодЕСКЛП = СтрСоединить(ЧастиКода);
			Если Не ЗначениеЗаполнено(Объект.КодЕСКЛП) Тогда
				Объект.КодЕСКЛП = НСтр("ru = '<пусто>'");
			КонецЕсли;
			
			ОбновлениеИнформационнойБазы.ЗаписатьОбъект(Объект);
			
		Исключение
			
			Текст = НСтр("ru = 'Не удалось обработать объект: %1 по причине: %2'");
			Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Текст, Выборка.Ссылка, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ИмяСобытия = ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации();
			ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Ошибка, Выборка.Ссылка.Метаданные(), Выборка.Ссылка, Текст);
			
			Продолжить;
			
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли