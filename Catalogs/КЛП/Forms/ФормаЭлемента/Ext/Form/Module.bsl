
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформлениеФормы();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	Если Объект.Ссылка.Пустая() Тогда
		ПриСозданииНовогоПриЧтенииНаСервере();
	КонецЕсли;
	
	ПривязанКЕСКЛП = ЗначениеЗаполнено(Объект.КодЕСКЛП);
	//Элементы.ИзменитьПринадлежностьКСпискам.Видимость = Не ПривязанКЕСКЛП И Не ТолькоПросмотр;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ПриСозданииНовогоПриЧтенииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Если Не ЗначениеЗаполнено(Объект.КодЕСКЛП) Тогда
		// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
		ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
		// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ
#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ИзменитьПринадлежностьКСпискам(Команда)
	
	ПринадлежностьКСпискам = Новый Структура("БезрецептурныйОтпуск, ПринадлежностьК7ВЗН, ЖНВЛП, Наркотические, СильнодействующиеИЯды, ВНациональномКалендареПрививок, ВКалендареПрививокПоЭпидемическимПоказаниям");
	ЗаполнитьЗначенияСвойств(ПринадлежностьКСпискам, Объект);
	ПараметрыИзменения = Новый Структура("ПринадлежностьКСпискам, ОбъектМожноРедактировать", ПринадлежностьКСпискам, Не ЗначениеЗаполнено(Объект.КодЕСКЛП));
	Оповестить = Новый ОписаниеОповещения("ОбработатьИзменениеПринадлежностиКСпискам", ЭтотОбъект);
	ОткрытьФорму("Справочник.КЛП.Форма.ПринадлежностьКСпискам", ПараметрыИзменения, ЭтотОбъект,,,, Оповестить);
	
КонецПроцедуры

#КонецОбласти // ОбработчикиКомандФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ
#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура РегистрационноеУдостоверениеОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "Изменить" Тогда
		СтандартнаяОбработка = Ложь;
		ДанныеРегистрационногоУдостоверения = Новый Структура("СтатусДействия, ДатаОкончанияДействия, РегистрационныйНомер, ДатаРегистрации");
		ЗаполнитьЗначенияСвойств(ДанныеРегистрационногоУдостоверения, Объект);
		ПараметрыИзменения = Новый Структура("ДанныеРегистрационногоУдостоверения", ДанныеРегистрационногоУдостоверения);
		Оповестить = Новый ОписаниеОповещения("ОбработатьИзменениеРегистрационногоУдостоверения", ЭтотОбъект);
		ОткрытьФорму("Справочник.КЛП.Форма.СтатусРегистрационногоУдостоверения", ПараметрыИзменения, ЭтотОбъект,,,, Оповестить);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДанныеВыбора = Новый СписокЗначений;
	ДанныеВыбора.Добавить(ПолучитьНаименованияАптечногоТовара());
	
КонецПроцедуры

&НаКлиенте
Процедура СМННПриИзменении(Элемент)
	
	ОбработатьИзменениеСМНН();
	
КонецПроцедуры

&НаКлиенте
Процедура ЕдиницаИзмеренияПриИзменении(Элемент)
	
	ОбработатьИзменениеЕдиницыИзмерения();
	
КонецПроцедуры

&НаКлиенте
Процедура УпаковкаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьФормуРедактированиеУпаковки();
	
КонецПроцедуры

&НаКлиенте
Процедура УпаковкаОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьФормуРедактированиеУпаковки(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура УпаковкаПриИзменении(Элемент)
	
	ОбработатьИзменениеУпаковки();
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьЖНВЛПЦеныНажатие(Элемент)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Отбор", Новый Структура("КАТ", Объект.Ссылка));
	
	ОткрытьФорму("РегистрСведений.ЦеныЛекарственныхСредствЖНВЛП.ФормаСписка", ПараметрыФормы, ЭтотОбъект,, ЭтотОбъект.Окно);
	
КонецПроцедуры

&НаКлиенте
Процедура ФормаВыпускаГРЛСНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ДанныеФормыВыпускаГРЛС = Новый Структура("НаименованиеЛекарственнойФормыГРЛС, ОписаниеДозировкиГРЛС");
	ЗаполнитьЗначенияСвойств(ДанныеФормыВыпускаГРЛС, Объект);
	
	Оповестить = Новый ОписаниеОповещения("ОбработатьИзменениеФормыВыпускаГРЛС", ЭтотОбъект);
	ОткрытьФорму("Справочник.КЛП.Форма.ФормаВыпускаГРЛС", Новый Структура("ДанныеФормыВыпускаГРЛС", ДанныеФормыВыпускаГРЛС), ЭтотОбъект,,,, Оповестить);
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийЭлементовФормы

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформлениеФормы()
	
	// Отметка незаполненного полей ТорговоеНаименование и СМНН.
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТорговоеНаименование.Имя);
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СМНН.Имя);
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(Элемент.Отбор,
		"Объект.ДействующиеВеществаМНН", ВидСравненияКомпоновкиДанных.Заполнено);
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);
	
	// Отметка незаполненного поля ЕдиницаИзмеренияСрокаГодности
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ЕдиницаИзмеренияСрокаГодности.Имя);
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(Элемент.Отбор,
		"Объект.СрокГодности", ВидСравненияКомпоновкиДанных.Заполнено);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(Элемент.Отбор,
		"Объект.ЕдиницаИзмеренияСрокаГодности", ВидСравненияКомпоновкиДанных.НеЗаполнено);
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Истина);
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНовогоПриЧтенииНаСервере()
	
	УстановитьДоступностьРеквизитов();
	
	ПоказатьПринадлежностиКСпискам();
	СформироватьПредставлениеРегистрационногоУдостоверения();
	СформироватьФормуВыпускаГРЛС();
	
	ОтобразитьНадписьРучноеИзменение(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьРеквизитов()
	
	МассивЭлементов = Новый Массив();
	МассивЭлементов.Добавить(Элементы.Наименование.Имя);
	
	МассивЭлементов.Добавить(Элементы.СМНН.Имя);
	МассивЭлементов.Добавить(Элементы.ТорговоеНаименование.Имя);
	МассивЭлементов.Добавить(Элементы.ДействующиеВеществаМНН.Имя);
	МассивЭлементов.Добавить(Элементы.ДействующиеВеществаМННГРЛС.Имя);
	МассивЭлементов.Добавить(Элементы.ФормаВыпуска.Имя);
	МассивЭлементов.Добавить(Элементы.ФормаВыпускаГРЛС.Имя);
	МассивЭлементов.Добавить(Элементы.ЕдиницаИзмерения.Имя);
	МассивЭлементов.Добавить(Элементы.Упаковка.Имя);
	МассивЭлементов.Добавить(Элементы.ВКомплекте.Имя);
	МассивЭлементов.Добавить(Элементы.УсловияХранения.Имя);
	МассивЭлементов.Добавить(Элементы.ФирмаПроизводитель.Имя);
	МассивЭлементов.Добавить(Элементы.ФирмаРегистратор.Имя);
	МассивЭлементов.Добавить(Элементы.СтранаПроизводителя.Имя);
	МассивЭлементов.Добавить(Элементы.СтранаРегистратора.Имя);
	
	МассивЭлементов.Добавить(Элементы.КодОКПД2.Имя);
	МассивЭлементов.Добавить(Элементы.ФармакоТерапевтическаяГруппа.Имя);
	
	МассивЭлементов.Добавить(Элементы.КодМКБ10.Имя);
	МассивЭлементов.Добавить(Элементы.КоличествоДозВПервичнойУпаковке.Имя);
	
	// МИБП
	МассивЭлементов.Добавить(Элементы.КодМИБП.Имя);
	МассивЭлементов.Добавить(Элементы.ОбщепринятоеСокращениеНаименованиеМИБП.Имя);
	МассивЭлементов.Добавить(Элементы.ГруппировочноеНаименованиеМИБПНаАнглийскомЯзыке.Имя);
	МассивЭлементов.Добавить(Элементы.ЗаболеваниеИлиГруппаЗаболеванийМИБП.Имя);
	МассивЭлементов.Добавить(Элементы.ПризнакЖивойВакцины.Имя);
	МассивЭлементов.Добавить(Элементы.ПризнакАссоциированнойВакцины.Имя);
	МассивЭлементов.Добавить(Элементы.ВерсияСправочникаМИБП_ФНСИ.Имя);
	
	ОбъектМожноРедактировать = Не ЗначениеЗаполнено(Объект.КодЕСКЛП);
	ОбщегоНазначенияБольничнаяАптекаКлиентСервер.УстановитьСвойствоЭлементовФормы(Элементы, МассивЭлементов, "ТолькоПросмотр", Не ОбъектМожноРедактировать);
	
	Если ОбъектМожноРедактировать Тогда
		// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
		ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
		// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПоказатьПринадлежностиКСпискам()
	
	Элементы.Группа7ВЗН.Видимость       = Объект.ПринадлежностьК7ВЗН;
	Элементы.ГруппаБезРецепта.Видимость = Объект.БезрецептурныйОтпуск;
	
	Элементы.ГруппаЖНВЛП.Видимость            = (Объект.ЖНВЛП = Перечисления.СпискиЖНВЛП.НеВключеноВКонтрольЦен);
	Элементы.ГруппаЖНВЛПКонтрольЦен.Видимость = (Объект.ЖНВЛП = Перечисления.СпискиЖНВЛП.ВключеноВКонтрольЦен);
	
	Наркотическое = ЗначениеЗаполнено(Объект.Наркотические);
	Элементы.ГруппаНаркотические.Видимость = Наркотическое;
	Если Наркотическое Тогда
		Элементы.НадписьНаркотические.Заголовок = Объект.Наркотические;
	КонецЕсли;
	
	СильнодействующиеИЯды = ЗначениеЗаполнено(Объект.СильнодействующиеИЯды);
	Элементы.ГруппаСильнодействующиеИЯды.Видимость = СильнодействующиеИЯды;
	Если СильнодействующиеИЯды Тогда
		Элементы.НадписьСильнодействующиеИЯды.Заголовок = Объект.СильнодействующиеИЯды;
	КонецЕсли;
	
	Элементы.ГруппаВНациональномКалендареПрививок.Видимость              = Объект.ВНациональномКалендареПрививок;
	Элементы.ГруппаВКалендареПрививокПоЭпидемическимПоказаниям.Видимость = Объект.ВКалендареПрививокПоЭпидемическимПоказаниям;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОтобразитьНадписьРучноеИзменение(Форма)
	
	#Если Клиент Тогда
		ЦветПоясняющегоТекста = ОбщегоНазначенияКлиентПовтИсп.ЦветСтиля("ПоясняющийТекст");
		ПоясняющийОшибкуТекст = ОбщегоНазначенияКлиентПовтИсп.ЦветСтиля("ПоясняющийОшибкуТекст");
	#Иначе
		ЦветПоясняющегоТекста = ЦветаСтиля.ПоясняющийТекст;
		ПоясняющийОшибкуТекст = ЦветаСтиля.ПоясняющийОшибкуТекст;
	#КонецЕсли
	
	Если Не ЗначениеЗаполнено(Форма.Объект.КодЕСКЛП) Тогда
		Надпись = Новый ФорматированнаяСтрока(НСтр("ru = 'Элемент введен вручную.'"),, ЦветПоясняющегоТекста);
	Иначе
		
		ЧастиНадписи = Новый Массив;
		
		ЧастиНадписи.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'Код ЕСКЛП:'"), " ", Форма.Объект.КодЕСКЛП));
		ЧастиНадписи.Добавить(Символы.ПС);
		
		Если ЗначениеЗаполнено(Форма.Объект.ДатаСозданияЗаписиКЛП) Тогда
			НадписьДатаСоздания = НСтр("ru = 'Дата создания записи: %1.'");
			НадписьДатаСоздания = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НадписьДатаСоздания, Формат(Форма.Объект.ДатаСозданияЗаписиКЛП, "ДЛФ=D"));
			ЧастиНадписи.Добавить(НадписьДатаСоздания);
			ЧастиНадписи.Добавить(" ");
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Форма.Объект.ДатаПоследнегоИзменения) Тогда
			НадписьДатаИзменения = НСтр("ru = 'Дата последнего обновления: %1.'");
			НадписьДатаИзменения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НадписьДатаИзменения, Формат(Форма.Объект.ДатаПоследнегоИзменения, "ДЛФ=D"));
			ЧастиНадписи.Добавить(НадписьДатаИзменения);
			ЧастиНадписи.Добавить(" ");
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Форма.Объект.ДатаОкончанияДействияЗаписиКЛП) Тогда
			ЧастиНадписи.Добавить(НСтр("ru = 'Дата окончания действия записи:'"));
			ЧастиНадписи.Добавить(Новый ФорматированнаяСтрока(Формат(Форма.Объект.ДатаОкончанияДействияЗаписиКЛП, "ДЛФ=D"),, ПоясняющийОшибкуТекст));
		КонецЕсли;
		
		Надпись = Новый ФорматированнаяСтрока(ЧастиНадписи,, ЦветПоясняющегоТекста);
		
	КонецЕсли;
	
	Форма.Элементы.ИнформацияРучноеИзменение.Заголовок = Надпись;
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьИзменениеСМНН()
	
	ИменаРеквизитов = Справочники.КЛП.РеквизитыНаследуемыеИзСМНН();
	
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.СМНН, СтрСоединить(ИменаРеквизитов, ","));
	ЗаполнитьЗначенияСвойств(Объект, Реквизиты);
	
	ПоказатьПринадлежностиКСпискам();
	
	Объект.НаименованиеПолное = Неопределено;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьНаименованияАптечногоТовара()
	
	Возврат АптечныеТовары.ПолучитьНаименованияАптечногоТовара(Объект);
	
КонецФункции

&НаКлиенте
Процедура ОткрытьФормуРедактированиеУпаковки(ТолькоПросмотрУпаковки = Ложь)
	
	Если ТолькоПросмотрУпаковки Тогда
		Если Объект.Упаковка.Пустая() Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Упаковка"        , Объект.Упаковка);
	ПараметрыФормы.Вставить("ЕдиницаИзмерения", Объект.БазоваяЕдиницаИзмеренияКАТ);
	ПараметрыФормы.Вставить("ТолькоПросмотр"  , ТолькоПросмотрУпаковки);
	ОткрытьФорму("Справочник.КЛП.Форма.УпаковкиПрепарата", ПараметрыФормы, Элементы.Упаковка, УникальныйИдентификатор);
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьИзменениеЕдиницыИзмерения()
	
	Если ЗначениеЗаполнено(Объект.Упаковка) Тогда
		Если Не ЗначениеЗаполнено(Объект.БазоваяЕдиницаИзмеренияКАТ)
		 Или Объект.БазоваяЕдиницаИзмеренияКАТ <> ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Упаковка, "БазоваяЕдиницаИзмерения") Тогда
			Объект.Упаковка = Неопределено;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьИзменениеУпаковки()
	
	Если ЗначениеЗаполнено(Объект.Упаковка) Тогда
		Объект.БазоваяЕдиницаИзмеренияКАТ = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Упаковка, "БазоваяЕдиницаИзмерения");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьИзменениеПринадлежностиКСпискам(ПринадлежностьКСпискам, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(ПринадлежностьКСпискам) = Тип("Структура") Тогда
		Модифицированность = Истина;
		ЗаполнитьЗначенияСвойств(Объект, ПринадлежностьКСпискам);
		ПоказатьПринадлежностиКСпискам();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьИзменениеРегистрационногоУдостоверения(ДанныеРегистрационногоУдостоверения, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(ДанныеРегистрационногоУдостоверения) = Тип("Структура") Тогда
		Модифицированность = Истина;
		ЗаполнитьЗначенияСвойств(Объект, ДанныеРегистрационногоУдостоверения);
		СформироватьПредставлениеРегистрационногоУдостоверения();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьПредставлениеРегистрационногоУдостоверения()
	
	Представление = Новый Массив;
	
	Если ЗначениеЗаполнено(Объект.РегистрационныйНомер) Или ЗначениеЗаполнено(Объект. ДатаРегистрации) Тогда
		
		ПредставлениеДокумента = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Регистрационное удостоверение: %1 от %2.'"),
			?(ЗначениеЗаполнено(Объект.РегистрационныйНомер), Объект.РегистрационныйНомер, НСтр("ru = 'б/н'")),
			Формат(Объект.ДатаРегистрации, "ДЛФ=D"));
		
		Если Представление.Количество() > 0 Тогда
			Представление.Добавить(" ");
		КонецЕсли;
		Представление.Добавить(ПредставлениеДокумента);
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.СтатусДействия) Тогда
		СтатусыДействия = АптечныеТовары.ВозможныеСтатусыДействияПрепарата();
		ПредставлениеСтатуса = СтатусыДействия[Объект.СтатусДействия];
		Если ПредставлениеСтатуса = Неопределено Тогда
			ПредставлениеСтатуса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Неизвестный статус (%1)'"), Объект.СтатусДействия);
		КонецЕсли;
		Если ЗначениеЗаполнено(Объект.ДатаОкончанияДействия) Тогда
			ПредставлениеСтатуса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = '%1 до %2'"), ПредставлениеСтатуса, Формат(Объект.ДатаОкончанияДействия, "ДЛФ=D"));
		КонецЕсли;
		
		Статусы = Новый Массив;
		Статусы.Добавить(2);
		Статусы.Добавить(3);
		Статусы.Добавить(4);
		Статусы.Добавить(10);
		Статусы.Добавить(99);
		
		Если Статусы.Найти(Объект.СтатусДействия) <> Неопределено Тогда
			ПредставлениеСтатуса = Новый ФорматированнаяСтрока(ПредставлениеСтатуса,, ЦветаСтиля.ПоясняющийОшибкуТекст);
		КонецЕсли;
		
		Если Представление.Количество() > 0 Тогда
			Представление.Добавить(" ");
		КонецЕсли;
		Представление.Добавить(НСтр("ru = 'Статус'"));
		Представление.Добавить(": ");
		Представление.Добавить(ПредставлениеСтатуса);
		
	КонецЕсли;
	
	Если Представление.Количество() = 0 Тогда
		Представление.Добавить(НСтр("ru = 'Данные регистрационного удостоверения отсутствуют.'"));
	КонецЕсли;
	
	Гиперссылка = Неопределено;
	Если Не ЗначениеЗаполнено(Объект.КодЕСКЛП) И Не ТолькоПросмотр Тогда
		Гиперссылка = "Изменить";
	КонецЕсли;
	
	Элементы.РегистрационноеУдостоверение.Заголовок = Новый ФорматированнаяСтрока(Представление,,,, Гиперссылка);
	
	Если ЗначениеЗаполнено(Объект.РегистрационныйНомер) Тогда
		ПредставлениеАдресаВГРЛС = НСтр("ru = 'Найти в ГРЛС'");
		АдресВГРЛС = СтрШаблон("https://grls.rosminzdrav.ru/grls.aspx?RegNumber=%1&m=num", Объект.РегистрационныйНомер);
		Элементы.НайтиВГРЛС.Заголовок = Новый ФорматированнаяСтрока(ПредставлениеАдресаВГРЛС,,,, АдресВГРЛС);
		Элементы.НайтиВГРЛС.Видимость = Истина;
	Иначе
		Элементы.НайтиВГРЛС.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьИзменениеФормыВыпускаГРЛС(ДанныеФормыВыпускаГРЛС, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(ДанныеФормыВыпускаГРЛС) = Тип("Структура") Тогда
		Модифицированность = Истина;
		ЗаполнитьЗначенияСвойств(Объект, ДанныеФормыВыпускаГРЛС);
		СформироватьФормуВыпускаГРЛС();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьФормуВыпускаГРЛС()
	
	ФормаВыпускаГРЛС = СокрЛП(Объект.НаименованиеЛекарственнойФормыГРЛС + ?(ЗначениеЗаполнено(Объект.ОписаниеДозировкиГРЛС), " " + Объект.ОписаниеДозировкиГРЛС, ""));
	
КонецПроцедуры

#КонецОбласти // СлужебныеПроцедурыИФункции

////////////////////////////////////////////////////////////////////////////////
// СТАНДАРТНЫЕ ПОДСИСТЕМЫ
#Область СтандартныеПодсистемы

// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов

&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
	
	ЗапретРедактированияРеквизитовОбъектовБольничнаяАптекаКлиент.РазрешитьРедактированиеРеквизитовОбъекта(ЭтотОбъект);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры

// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти // СтандартныеПодсистемы
