
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформлениеФормы();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Упаковка = Параметры.Упаковка;
	ЕдиницаИзмерения = Параметры.ЕдиницаИзмерения;
	ЗаполнитьПоляУпаковок(Упаковка);
	
	ТипЕдиницы = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЕдиницаИзмерения, "ТипЕдиницы");
	НастроитьФорму();
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	НепроверяемыеРеквизиты = Новый Массив;
	
	Если Упаковка3.Пустая() И Коэффициент23 = 0 Тогда
		НепроверяемыеРеквизиты.Добавить("Упаковка3");
		НепроверяемыеРеквизиты.Добавить("Коэффициент23");
		Если Упаковка2.Пустая() И Коэффициент12 = 0 Тогда
			НепроверяемыеРеквизиты.Добавить("Упаковка2");
			НепроверяемыеРеквизиты.Добавить("Коэффициент12");
		КонецЕсли;
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, НепроверяемыеРеквизиты);
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ
#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаВыбрать(Команда)
	
	Если ПроверитьЗаполнение() Тогда
		ОповеститьОВыборе(?(Модифицированность, ПолучитьУпаковкуПрепарата(), Упаковка));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти // ОбработчикиКомандФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ЕдиницаИзмеренияПриИзменении(Элемент)
	
	ОбработатьИзменениеЕдиницыИзмерения();
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийЭлементовФормы

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформлениеФормы()
	
	// Отметка незаполненного поля Коэффициент12
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.Коэффициент12.Имя);
	
	ГруппаОтбораИли = ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(
		Элемент.Отбор.Элементы, "", ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли);
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(Элемент.Отбор,
		"Коэффициент12", ВидСравненияКомпоновкиДанных.Равно, 0);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ГруппаОтбораИли,
		"Упаковка3", ВидСравненияКомпоновкиДанных.Заполнено);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ГруппаОтбораИли,
		"Коэффициент23", ВидСравненияКомпоновкиДанных.НеРавно, 0);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ГруппаОтбораИли,
		"Упаковка2", ВидСравненияКомпоновкиДанных.Заполнено);
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Истина);
	
	// Отметка незаполненного поля Упаковка2
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.Упаковка2.Имя);
	
	ГруппаОтбораИли = ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(
		Элемент.Отбор.Элементы, "", ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли);
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(Элемент.Отбор,
		"Упаковка2", ВидСравненияКомпоновкиДанных.НеЗаполнено);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ГруппаОтбораИли,
		"Коэффициент12", ВидСравненияКомпоновкиДанных.НеРавно, 0);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ГруппаОтбораИли,
		"Упаковка3", ВидСравненияКомпоновкиДанных.Заполнено);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ГруппаОтбораИли,
		"Коэффициент23", ВидСравненияКомпоновкиДанных.НеРавно, 0);
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Истина);
	
	// Отметка незаполненного поля Коэффициент23
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.Коэффициент23.Имя);
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(Элемент.Отбор,
		"Упаковка3", ВидСравненияКомпоновкиДанных.Заполнено);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(Элемент.Отбор,
		"Коэффициент23", ВидСравненияКомпоновкиДанных.Равно, 0);
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Истина);
	
	// Отметка незаполненного поля Упаковка3
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.Упаковка3.Имя);
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(Элемент.Отбор,
		"Коэффициент23", ВидСравненияКомпоновкиДанных.НеРавно, 0);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(Элемент.Отбор,
		"Упаковка3", ВидСравненияКомпоновкиДанных.НеЗаполнено);
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Истина);
	
	// Отметка незаполненного поля Коэффициент12
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.Коэффициент12.Имя);
	
	ГруппаОтбораИли = ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(
		Элемент.Отбор.Элементы, "", ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли);
	
	ГруппаОтбораИ = ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(
		ГруппаОтбораИли.Элементы, "", ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ);
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ГруппаОтбораИли,
		"Коэффициент12", ВидСравненияКомпоновкиДанных.НеРавно, 0);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ГруппаОтбораИ,
		"Упаковка2", ВидСравненияКомпоновкиДанных.НеЗаполнено);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ГруппаОтбораИ,
		"Упаковка3", ВидСравненияКомпоновкиДанных.НеЗаполнено);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ГруппаОтбораИ,
		"Коэффициент23", ВидСравненияКомпоновкиДанных.Равно, 0);
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);
	
	// Отметка незаполненного поля Упаковка2
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.Упаковка2.Имя);
	
	ГруппаОтбораИли = ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(
		Элемент.Отбор.Элементы, "", ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли);
	
	ГруппаОтбораИ = ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(
		ГруппаОтбораИли.Элементы, "", ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ);
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ГруппаОтбораИли,
		"Упаковка2", ВидСравненияКомпоновкиДанных.Заполнено);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ГруппаОтбораИ,
		"Коэффициент12", ВидСравненияКомпоновкиДанных.Равно, 0);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ГруппаОтбораИ,
		"Упаковка3", ВидСравненияКомпоновкиДанных.НеЗаполнено);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ГруппаОтбораИ,
		"Коэффициент23", ВидСравненияКомпоновкиДанных.Равно, 0);
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);
	
	// Отметка незаполненного поля Коэффициент23
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.Коэффициент23.Имя);
	
	ГруппаОтбораИли = ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(
		Элемент.Отбор.Элементы, "", ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли);
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ГруппаОтбораИли,
		"Коэффициент23", ВидСравненияКомпоновкиДанных.НеРавно, 0);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ГруппаОтбораИли,
		"Упаковка3", ВидСравненияКомпоновкиДанных.НеЗаполнено);
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);
	
	// Отметка незаполненного поля Упаковка3
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.Упаковка3.Имя);
	
	ГруппаОтбораИли = ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(
		Элемент.Отбор.Элементы, "", ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли);
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ГруппаОтбораИли,
		"Упаковка3", ВидСравненияКомпоновкиДанных.Заполнено);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ГруппаОтбораИли,
		"Коэффициент23", ВидСравненияКомпоновкиДанных.Равно, 0);
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);
	
КонецПроцедуры

&НаСервере
Процедура НастроитьФорму()
	
	Если ТипЕдиницы = Перечисления.ТипыЕдиницИзмерения.КоличествоШтук Тогда
		Элементы.Коэффициент01.ФорматРедактирования = "ЧДЦ=";
	Иначе
		Элементы.Коэффициент01.ФорматРедактирования = "";
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьИзменениеЕдиницыИзмерения()
	
	ТипЕдиницы = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЕдиницаИзмерения, "ТипЕдиницы");
	Если ТипЕдиницы = Перечисления.ТипыЕдиницИзмерения.КоличествоШтук И Коэффициент01 <> Цел(Коэффициент01) Тогда
		Коэффициент01 = Цел(Коэффициент01);
	КонецЕсли;
	НастроитьФорму();
	
КонецПроцедуры

&НаСервере
Функция ПолучитьУпаковкуПрепарата()
	
	Отбор = Новый Структура;
	Отбор.Вставить("Упаковка", Упаковка1);
	Отбор.Вставить("Коэффициент", Коэффициент01);
	Отбор.Вставить("БазоваяЕдиницаИзмерения", ЕдиницаИзмерения);
	Отбор.Вставить("СостоитИзДругихУпаковок", Ложь);
	Отбор.Вставить("ТипЕдиницы", Перечисления.ТипыЕдиницИзмерения.Упаковка);
	Отбор.Вставить("Номенклатура", Справочники.Номенклатура.ПустаяСсылка());
	
	ПервичнаяУпаковка = АптечныеТовары.НайтиСоздатьЭлементСправочника(Метаданные.Справочники.ЕдиницыИзмерения, Отбор, Отбор);
	Упаковка = ПервичнаяУпаковка;
	
	Если ЗначениеЗаполнено(Упаковка2) Тогда
		
		Отбор = Новый Структура;
		Отбор.Вставить("Упаковка", Упаковка2);
		Отбор.Вставить("КоличествоВУпаковке", Коэффициент12);
		Отбор.Вставить("Родитель", ПервичнаяУпаковка);
		Отбор.Вставить("СостоитИзДругихУпаковок", Истина);
		Отбор.Вставить("ТипЕдиницы", Перечисления.ТипыЕдиницИзмерения.Упаковка);
		Отбор.Вставить("Номенклатура", Справочники.Номенклатура.ПустаяСсылка());
		
		ВторичнаяУпаковка = АптечныеТовары.НайтиСоздатьЭлементСправочника(Метаданные.Справочники.ЕдиницыИзмерения, Отбор, Отбор);
		Упаковка = ВторичнаяУпаковка;
		
		Если ЗначениеЗаполнено(Упаковка3) Тогда
			
			Отбор = Новый Структура;
			Отбор.Вставить("Упаковка", Упаковка3);
			Отбор.Вставить("КоличествоВУпаковке", Коэффициент23);
			Отбор.Вставить("Родитель", ВторичнаяУпаковка);
			Отбор.Вставить("СостоитИзДругихУпаковок", Истина);
			Отбор.Вставить("ТипЕдиницы", Перечисления.ТипыЕдиницИзмерения.Упаковка);
			Отбор.Вставить("Номенклатура", Справочники.Номенклатура.ПустаяСсылка());
			
			Упаковка = АптечныеТовары.НайтиСоздатьЭлементСправочника(Метаданные.Справочники.ЕдиницыИзмерения, Отбор, Отбор);
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Упаковка;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьПоляУпаковок(УпаковкаПрепарата, НомерУпаковки = 1)
	
	Если Не ЗначениеЗаполнено(УпаковкаПрепарата) Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеУпаковки = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(УпаковкаПрепарата, "Упаковка, СостоитИзДругихУпаковок, Родитель, КоличествоВУпаковке, Коэффициент, БазоваяЕдиницаИзмерения");
	Если ДанныеУпаковки.СостоитИзДругихУпаковок Тогда
		ЗаполнитьПоляУпаковок(ДанныеУпаковки.Родитель, НомерУпаковки);
	КонецЕсли;
	
	Если НомерУпаковки = 1 Тогда
		Упаковка1 = ДанныеУпаковки.Упаковка;
		Коэффициент01 = ДанныеУпаковки.Коэффициент;
		Если Не ЗначениеЗаполнено(ЕдиницаИзмерения) Тогда
			ЕдиницаИзмерения = ДанныеУпаковки.БазоваяЕдиницаИзмерения;
		КонецЕсли;
	ИначеЕсли НомерУпаковки = 2 Тогда
		Упаковка2 = ДанныеУпаковки.Упаковка;
		Коэффициент12 = ДанныеУпаковки.КоличествоВУпаковке;
	ИначеЕсли НомерУпаковки = 3 Тогда
		Упаковка3 = ДанныеУпаковки.Упаковка;
		Коэффициент23 = ДанныеУпаковки.КоличествоВУпаковке;
	КонецЕсли;
	
	НомерУпаковки = НомерУпаковки + 1;
	
КонецПроцедуры

#КонецОбласти // СлужебныеПроцедурыИФункции
