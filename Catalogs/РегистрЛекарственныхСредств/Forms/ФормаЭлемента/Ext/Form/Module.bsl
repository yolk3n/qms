
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформлениеФормы();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// ПодключаемоеОборудование
	ПодключаемоеОборудованиеСервер.НастроитьФормуДляИспользованияПодключаемогоОборудования(ЭтотОбъект);
	// Конец ПодключаемоеОборудование
	
	Если Объект.Ссылка.Пустая() Тогда
		ПриСозданииНовогоПриЧтенииНаСервере();
	КонецЕсли;
	
	ПривязанКРЛС = (Объект.НомерРЛС <> 0);
	Элементы.ИзменитьПринадлежностьКСпискам.Видимость = Не ПривязанКРЛС И Не ТолькоПросмотр;
	Элементы.ФормаПереключитьРежимРучнойКорректировки.Видимость = ПривязанКРЛС;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ПриСозданииНовогоПриЧтенииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// ПодключаемоеОборудование
	МенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПриОткрытииФормы(Неопределено, ЭтотОбъект, "СканерШтрихкода");
	// Конец ПодключаемоеОборудование
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если Объект.НомерРЛС = 0 Или Объект.РучнаяКорректировка Тогда
		Если ПодключаемоеОборудованиеКлиент.ОбрабатыватьОповещение(ЭтотОбъект, Источник) Тогда
			Если ПодключаемоеОборудованиеКлиент.ОбработатьПолучениеДанныхОтСканераШтрихкода(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
				
				ОбработатьПолучениеШтрихкода(Параметр);
				
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьПолучениеШтрихкода(Штрихкод)
	
	Оповещение = Новый ОписаниеОповещения("ОбработатьПолучениеШтрихкодаПродолжение", ЭтотОбъект, Штрихкод);
	Если ПустаяСтрока(Объект.Штрихкод) Тогда
		ВыполнитьОбработкуОповещения(Оповещение, КодВозвратаДиалога.Да);
	ИначеЕсли Объект.Штрихкод <> Штрихкод Тогда
		
		ТекстВопроса = НСтр("ru='Заменить текущий штрихкод: %1 на полученный: %2?'");
		ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстВопроса, Объект.Штрихкод, Штрихкод);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
	КонецЕсли;
	
КонецПроцедуры

// Устанавливает новое значение реквизита Штрихкод.
// Продолжение процедуры ОбработатьПолучениеШтрихкода.
//
// Параметры:
//  Ответ    - КодВозвратаДиалога
//  Штрихкод - Строка - новый штрихкод
//
&НаКлиенте
Процедура ОбработатьПолучениеШтрихкодаПродолжение(Ответ, Штрихкод) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		Объект.Штрихкод = Штрихкод;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	// ПодключаемоеОборудование
	МенеджерОборудованияКлиент.НачатьОтключениеОборудованиеПриЗакрытииФормы(Неопределено, ЭтотОбъект);
	// Конец ПодключаемоеОборудование
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Если Объект.НомерРЛС = 0 Тогда
		// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
		ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
		// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

//////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ
#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПереключитьРежимРучнойКорректировки(Команда)
	
	Если Объект.РучнаяКорректировка Тогда
		Модифицированность = Ложь;
		ВызватьИсключение НСтр("ru = 'Справочник Регистр лекарственных средств не поддерживается. Необходимо использовать справочник Каталог лекарственных препаратов. Отмена ручных корректировок невозможна.'");
	Иначе
		РазрешитьРучныеКорректировки();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьПринадлежностьКСпискам(Команда)
	
	ПринадлежностьКСпискам = Новый Структура("БезрецептурныйОтпуск, ДЛО, ЖНВЛП, Наркотические, СильнодействующиеИЯды, СпискиАиБ");
	ЗаполнитьЗначенияСвойств(ПринадлежностьКСпискам, Объект);
	ПараметрыИзменения = Новый Структура("ПринадлежностьКСпискам", ПринадлежностьКСпискам);
	Оповестить = Новый ОписаниеОповещения("ОбработатьИзменениеПринадлежностиКСпискам", ЭтотОбъект);
	ОткрытьФорму("Справочник.РегистрЛекарственныхСредств.Форма.ПринадлежностьКСпискам", ПараметрыИзменения, ЭтотОбъект,,,, Оповестить);
	
КонецПроцедуры

#КонецОбласти // ОбработчикиКомандФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАТСИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ
#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура РегистрационноеУдостоверениеОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "Изменить" Тогда
		СтандартнаяОбработка = Ложь;
		ДанныеРегистрационногоУдостоверения = Новый Структура("СтатусДействия, ДатаОкончанияДействия, НормативныйДокумент, РегистрационныйНомер, ДатаРегистрации");
		ЗаполнитьЗначенияСвойств(ДанныеРегистрационногоУдостоверения, Объект);
		ПараметрыИзменения = Новый Структура("ДанныеРегистрационногоУдостоверения", ДанныеРегистрационногоУдостоверения);
		Оповестить = Новый ОписаниеОповещения("ОбработатьИзменениеРегистрационногоУдостоверения", ЭтотОбъект);
		ОткрытьФорму("Справочник.РегистрЛекарственныхСредств.Форма.СтатусРегистрационногоУдостоверения", ПараметрыИзменения, ЭтотОбъект,,,, Оповестить);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДанныеВыбора = Новый СписокЗначений;
	ДанныеВыбора.Добавить(ПолучитьНаименованияАптечногоТовара());
	
КонецПроцедуры

&НаКлиенте
Процедура ТорговоеНаименованиеПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.ТорговоеНаименование) Тогда
		Элементы.ТорговоеНаименованиеДействующиеВеществаМНН.Видимость = Истина;
		Элементы.ДействующиеВеществаМНН.Видимость = Ложь;
		Объект.ДействующиеВеществаМНН = Неопределено;
	Иначе
		Элементы.ТорговоеНаименованиеДействующиеВеществаМНН.Видимость = Ложь;
		Элементы.ДействующиеВеществаМНН.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЕдиницаИзмеренияПриИзменении(Элемент)
	
	ОбработатьИзменениеЕдиницыИзмерения();
	
КонецПроцедуры

&НаКлиенте
Процедура УпаковкаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьФормуРедактированиеУпаковки();
	
КонецПроцедуры

&НаКлиенте
Процедура УпаковкаОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьФормуРедактированиеУпаковки(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура УпаковкаПриИзменении(Элемент)
	
	ОбработатьИзменениеУпаковки();
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьДЛОЦеныНажатие(Элемент)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Отбор", Новый Структура("КАТ", Объект.Ссылка));
	
	ОткрытьФорму("РегистрСведений.ЦеныЛекарственныхСредствДЛО.ФормаСписка", ПараметрыФормы, ЭтотОбъект,, ЭтотОбъект.Окно);
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьЖНВЛПЦеныНажатие(Элемент)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Отбор", Новый Структура("КАТ", Объект.Ссылка));
	
	ОткрытьФорму("РегистрСведений.ЦеныЛекарственныхСредствЖНВЛП.ФормаСписка", ПараметрыФормы, ЭтотОбъект,, ЭтотОбъект.Окно);
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийЭлементовФормы

////////////////////////////////////////////////////////////////////////////////
// СЛУЖБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформлениеФормы()
	
	// Отметка незаполненного поля ТорговоеНаименование
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТорговоеНаименование.Имя);
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(Элемент.Отбор,
		"Объект.ДействующиеВеществаМНН", ВидСравненияКомпоновкиДанных.Заполнено);
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);
	
	// Отметка незаполненного поля ЕдиницаИзмеренияСрокаГодности
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ЕдиницаИзмеренияСрокаГодности.Имя);
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(Элемент.Отбор,
		"Объект.СрокГодности", ВидСравненияКомпоновкиДанных.Заполнено);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(Элемент.Отбор,
		"Объект.ЕдиницаИзмеренияСрокаГодности", ВидСравненияКомпоновкиДанных.НеЗаполнено);
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Истина);
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНовогоПриЧтенииНаСервере()
	
	Если ЗначениеЗаполнено(Объект.ТорговоеНаименование) Тогда
		Элементы.ТорговоеНаименованиеДействующиеВеществаМНН.Видимость = Истина;
		Элементы.ДействующиеВеществаМНН.Видимость = Ложь;
	Иначе
		Элементы.ТорговоеНаименованиеДействующиеВеществаМНН.Видимость = Ложь;
		Элементы.ДействующиеВеществаМНН.Видимость = Истина;
	КонецЕсли;
	
	ПоказатьПринадлежностиКСпискам();
	СформироватьПредставлениеРегистрационногоУдостоверения();
	
	УстановитьДоступностьРеквизитов();
	Элементы.ФормаПереключитьРежимРучнойКорректировки.Пометка = Объект.РучнаяКорректировка;
	ОтобразитьНадписьРучноеИзменение(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПоказатьПринадлежностиКСпискам()
	
	Элементы.ГруппаБезРецепта.Видимость = Объект.БезрецептурныйОтпуск;
	Элементы.ГруппаДЛО.Видимость        = Объект.ДЛО;
	
	Элементы.ГруппаЖНВЛП.Видимость            = (Объект.ЖНВЛП = Перечисления.СпискиЖНВЛП.НеВключеноВКонтрольЦен);
	Элементы.ГруппаЖНВЛПКонтрольЦен.Видимость = (Объект.ЖНВЛП = Перечисления.СпискиЖНВЛП.ВключеноВКонтрольЦен);
	
	Наркотическое = ЗначениеЗаполнено(Объект.Наркотические);
	Элементы.ГруппаНаркотические.Видимость = Наркотическое;
	Если Наркотическое Тогда
		Элементы.НадписьНаркотические.Заголовок = Объект.Наркотические;
	КонецЕсли;
	
	СильнодействующиеИЯды = ЗначениеЗаполнено(Объект.СильнодействующиеИЯды);
	Элементы.ГруппаСильнодействующиеИЯды.Видимость = СильнодействующиеИЯды;
	Если СильнодействующиеИЯды Тогда
		Элементы.НадписьСильнодействующиеИЯды.Заголовок = Объект.СильнодействующиеИЯды;
	КонецЕсли;
	
	СпискиАиБ = ЗначениеЗаполнено(Объект.СпискиАиБ);
	Элементы.ГруппаСпискиАиБ.Видимость = СпискиАиБ;
	Если СпискиАиБ Тогда
		Элементы.НадписьСпискиАиБ.Заголовок = Объект.СпискиАиБ;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьРеквизитов()
	
	МассивЭлементов = Новый Массив();
	МассивЭлементов.Добавить(Элементы.Наименование.Имя);
	МассивЭлементов.Добавить(Элементы.Код.Имя);
	
	МассивЭлементов.Добавить(Элементы.ТорговоеНаименование.Имя);
	МассивЭлементов.Добавить(Элементы.ДействующиеВеществаМНН.Имя);
	МассивЭлементов.Добавить(Элементы.ФормаВыпуска.Имя);
	МассивЭлементов.Добавить(Элементы.ЕдиницаИзмерения.Имя);
	МассивЭлементов.Добавить(Элементы.Упаковка.Имя);
	МассивЭлементов.Добавить(Элементы.ВКомплекте.Имя);
	МассивЭлементов.Добавить(Элементы.ВКомплектеПолное.Имя);
	МассивЭлементов.Добавить(Элементы.УсловияХранения.Имя);
	МассивЭлементов.Добавить(Элементы.СрокГодности.Имя);
	МассивЭлементов.Добавить(Элементы.ЕдиницаИзмеренияСрокаГодности.Имя);
	МассивЭлементов.Добавить(Элементы.ФирмаПроизводитель.Имя);
	МассивЭлементов.Добавить(Элементы.ФирмаРегистратор.Имя);
	МассивЭлементов.Добавить(Элементы.ФирмаУпаковщик.Имя);
	МассивЭлементов.Добавить(Элементы.СтранаПроизводителя.Имя);
	МассивЭлементов.Добавить(Элементы.СтранаРегистратора.Имя);
	МассивЭлементов.Добавить(Элементы.СтранаУпаковщика.Имя);
	МассивЭлементов.Добавить(Элементы.КодРосздравнадзора.Имя);
	МассивЭлементов.Добавить(Элементы.УникальныйКодРосздравнадзора.Имя);
	МассивЭлементов.Добавить(Элементы.ШтрихКод.Имя);
	
	МассивЭлементов.Добавить(Элементы.ТоварыФармРынка.Имя);
	МассивЭлементов.Добавить(Элементы.АТХ.Имя);
	МассивЭлементов.Добавить(Элементы.Фармдействие.Имя);
	МассивЭлементов.Добавить(Элементы.КодОКПД2.Имя);
	МассивЭлементов.Добавить(Элементы.ФармакологическиеГруппы.Имя);
	МассивЭлементов.Добавить(Элементы.ФармакоТерапевтическаяГруппа.Имя);
	
	ОбъектМожноРедактировать = (Объект.НомерРЛС = 0 Или Объект.РучнаяКорректировка);
	ОбщегоНазначенияБольничнаяАптекаКлиентСервер.УстановитьСвойствоЭлементовФормы(
		Элементы,
		МассивЭлементов,
		"ТолькоПросмотр",
		Не ОбъектМожноРедактировать);
	
	Если ОбъектМожноРедактировать Тогда
		// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
		ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
		// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОтобразитьНадписьРучноеИзменение(Форма)
	
	#Если Клиент Тогда
		ЦветПоясняющегоТекста = ОбщегоНазначенияКлиентПовтИсп.ЦветСтиля("ПоясняющийТекст");
		ЦветОсобогоТекста = ОбщегоНазначенияКлиентПовтИсп.ЦветСтиля("ЦветОсобогоТекста");
	#Иначе
		ЦветПоясняющегоТекста = ЦветаСтиля.ПоясняющийТекст;
		ЦветОсобогоТекста = ЦветаСтиля.ЦветОсобогоТекста;
	#КонецЕсли
	
	Если Форма.Объект.НомерРЛС = 0 Тогда
		Надпись = Новый ФорматированнаяСтрока(НСтр("ru = 'Элемент введен в ручную.'"),, ЦветПоясняющегоТекста);
	Иначе
		Надпись = НСтр("ru = 'Номер РЛС: %1. Дата последнего обновления: %2'");
		Надпись = СтрЗаменить(Надпись, "%1", Форма.Объект.НомерРЛС);
		Надпись = СтрЗаменить(Надпись, "%2", Формат(Форма.Объект.ДатаОбновления, "ДЛФ=D"));
		Надпись = Новый ФорматированнаяСтрока(Надпись,, ЦветПоясняющегоТекста);
		
		Если Форма.Объект.РучнаяКорректировка Тогда
			Надпись = Новый ФорматированнаяСтрока(
				Надпись,
				" ",
				Новый ФорматированнаяСтрока(НСтр("ru = 'Элемент редактируется в ручную.'"),, ЦветОсобогоТекста));
		КонецЕсли;
	КонецЕсли;
	
	Форма.ИнформацияРучноеИзменение = Надпись
	
КонецПроцедуры

&НаСервере
Функция ПолучитьНаименованияАптечногоТовара()
	
	Возврат АптечныеТовары.ПолучитьНаименованияАптечногоТовара(Объект);
	
КонецФункции

&НаКлиенте
Процедура РазрешитьРучныеКорректировки()
	
	Оповещение = Новый ОписаниеОповещения("РазрешитьРучныеКорректировкиПродолжение", ЭтотОбъект);
	ТекстВопроса = НСтр("ru='После включения, элементу нельзя будет отменить ручные корректировки. Продолжить?'");
	ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура РазрешитьРучныеКорректировкиПродолжение(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	Объект.РучнаяКорректировка = Истина;
	Элементы.ФормаПереключитьРежимРучнойКорректировки.Пометка = Истина;
	УстановитьДоступностьРеквизитов();
	ОтобразитьНадписьРучноеИзменение(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуРедактированиеУпаковки(ТолькоПросмотрУпаковки = Ложь)
	
	Если ТолькоПросмотрУпаковки Тогда
		Если Объект.Упаковка.Пустая() Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Упаковка"        , Объект.Упаковка);
	ПараметрыФормы.Вставить("ЕдиницаИзмерения", Объект.БазоваяЕдиницаИзмеренияКАТ);
	ПараметрыФормы.Вставить("ТолькоПросмотр"  , ТолькоПросмотрУпаковки);
	ОткрытьФорму("Справочник.РегистрЛекарственныхСредств.Форма.УпаковкиПрепарата", ПараметрыФормы, Элементы.Упаковка, УникальныйИдентификатор);
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьИзменениеЕдиницыИзмерения()
	
	Если ЗначениеЗаполнено(Объект.Упаковка) Тогда
		Если Не ЗначениеЗаполнено(Объект.БазоваяЕдиницаИзмеренияКАТ)
		 Или Объект.БазоваяЕдиницаИзмеренияКАТ <> ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Упаковка, "БазоваяЕдиницаИзмерения") Тогда
			Объект.Упаковка = Неопределено;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьИзменениеУпаковки()
	
	Если ЗначениеЗаполнено(Объект.Упаковка) Тогда
		Объект.БазоваяЕдиницаИзмеренияКАТ = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Упаковка, "БазоваяЕдиницаИзмерения");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьИзменениеПринадлежностиКСпискам(ПринадлежностьКСпискам, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(ПринадлежностьКСпискам) = Тип("Структура") Тогда
		Модифицированность = Истина;
		ЗаполнитьЗначенияСвойств(Объект, ПринадлежностьКСпискам);
		ПоказатьПринадлежностиКСпискам();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьИзменениеРегистрационногоУдостоверения(ДанныеРегистрационногоУдостоверения, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(ДанныеРегистрационногоУдостоверения) = Тип("Структура") Тогда
		Модифицированность = Истина;
		ЗаполнитьЗначенияСвойств(Объект, ДанныеРегистрационногоУдостоверения);
		СформироватьПредставлениеРегистрационногоУдостоверения();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьПредставлениеРегистрационногоУдостоверения()
	
	Представление = Новый Массив;
	
	Если ЗначениеЗаполнено(Объект.РегистрационныйНомер) Или ЗначениеЗаполнено(Объект. ДатаРегистрации) Тогда
		
		ПредставлениеДокумента = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Регистрационное удостоверение: %1 от %2.'"),
			?(ЗначениеЗаполнено(Объект.РегистрационныйНомер), Объект.РегистрационныйНомер, НСтр("ru = 'б/н'")),
			Формат(Объект.ДатаРегистрации, "ДЛФ=D"));
		
		Если Представление.Количество() > 0 Тогда
			Представление.Добавить(" ");
		КонецЕсли;
		Представление.Добавить(ПредставлениеДокумента);
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.СтатусДействия) Тогда
		СтатусыДействия = АптечныеТовары.ВозможныеСтатусыДействияПрепарата();
		ПредставлениеСтатуса = СтатусыДействия[Объект.СтатусДействия];
		Если ПредставлениеСтатуса = Неопределено Тогда
			ПредставлениеСтатуса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Неизвестный статус (%1)'"), Объект.СтатусДействия);
		КонецЕсли;
		Если ЗначениеЗаполнено(Объект.ДатаОкончанияДействия) Тогда
			ПредставлениеСтатуса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = '%1 до %2'"), ПредставлениеСтатуса, Формат(Объект.ДатаОкончанияДействия, "ДЛФ=D"));
		КонецЕсли;
		
		Статусы = Новый Массив;
		Статусы.Добавить(2);
		Статусы.Добавить(3);
		Статусы.Добавить(4);
		Статусы.Добавить(10);
		Статусы.Добавить(99);
		
		Если Статусы.Найти(Объект.СтатусДействия) <> Неопределено Тогда
			ПредставлениеСтатуса = Новый ФорматированнаяСтрока(ПредставлениеСтатуса,, ЦветаСтиля.ПоясняющийОшибкуТекст);
		КонецЕсли;
		
		Если Представление.Количество() > 0 Тогда
			Представление.Добавить(" ");
		КонецЕсли;
		Представление.Добавить(НСтр("ru = 'Статус'"));
		Представление.Добавить(": ");
		Представление.Добавить(ПредставлениеСтатуса);
		
	КонецЕсли;
	
	Если Представление.Количество() = 0 Тогда
		Представление.Добавить(НСтр("ru = 'Данные регистрационного удостоверения отсутствуют.'"));
	КонецЕсли;
	
	Гиперссылка = Неопределено;
	Если Объект.НомерРЛС = 0 И Не ТолькоПросмотр Тогда
		Гиперссылка = "Изменить";
	КонецЕсли;
	
	РегистрационноеУдостоверение = Новый ФорматированнаяСтрока(Представление,,,, Гиперссылка);
	
КонецПроцедуры

#КонецОбласти // СлужебныеПроцедурыИФункции

////////////////////////////////////////////////////////////////////////////////
// СТАНДАРТНЫЕ ПОДСИСТЕМЫ
#Область СтандартныеПодсистемы

// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов

&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
	
	ЗапретРедактированияРеквизитовОбъектовБольничнаяАптекаКлиент.РазрешитьРедактированиеРеквизитовОбъекта(ЭтотОбъект);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры

// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти // СтандартныеПодсистемы
