#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТКИ СОБЫТИЙ
#Область ОбработкиСобытий

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	НепроверяемыеРеквизиты = Новый Массив;
	
	НепроверяемыеРеквизиты.Добавить("ТорговоеНаименование");
	НепроверяемыеРеквизиты.Добавить("ДействующиеВеществаМНН");
	
	Если Не ЗначениеЗаполнено(ТорговоеНаименование) И Не ЗначениеЗаполнено(ДействующиеВеществаМНН) Тогда
		ТекстСообщения = НСтр("ru='Необходимо указать ""Торговое наименование"" или ""Действующие вещества(МНН)"".'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ТорговоеНаименование",, Отказ);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СрокГодности) Тогда
		ПроверяемыеРеквизиты.Добавить("ЕдиницаИзмеренияСрокаГодности");
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, НепроверяемыеРеквизиты);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	НомерРЛС = 0;
	СсылкаНаОписаниеВБазеРЛС = "";
	ДатаОбновления = Дата(1, 1, 1);
	
	КодРосздравнадзора = 0;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	Наименование = НаименованиеПолное;
	
	Если ЗначениеЗаполнено(ТорговоеНаименование) Тогда
		ДействующиеВеществаМННТорговогоНаименования = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТорговоеНаименование, "ДействующиеВеществаМНН");
		Если ДействующиеВеществаМНН <> ДействующиеВеществаМННТорговогоНаименования Тогда
			ДействующиеВеществаМНН = ДействующиеВеществаМННТорговогоНаименования;
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Штрихкод) Тогда
		Штрихкод = СокрЛП(СтрЗаменить(Штрихкод, Символы.ПС, ""));
		СписокШтрихкодов = СтрРазделить(Штрихкод, ",", Ложь);
		СписокШтрихкодов = ОбщегоНазначенияКлиентСервер.СвернутьМассив(СписокШтрихкодов);
		Штрихкоды.Очистить();
		Для Каждого ШтрихкодСписка Из СписокШтрихкодов Цикл
			Если Не ПустаяСтрока(ШтрихкодСписка) Тогда
				Штрихкоды.Добавить().Штрихкод = СокрЛП(ШтрихкодСписка);
			КонецЕсли;
		КонецЦикла;
	Иначе
		Если Штрихкоды.Количество() > 0 Тогда
			Штрихкоды.Очистить();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	Справочники.РегистрЛекарственныхСредств.ЗаполнитьУпаковкиПрепарата(Ссылка);
	ОбновитьДанныеСвязаннойНоменклатуры(Отказ);	
	
КонецПроцедуры

#КонецОбласти // ОбработкиСобытий

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

// Процедура обновляет данные номенклатуры по элементу КАТ
//
Процедура ОбновитьДанныеСвязаннойНоменклатуры(Отказ)
	
	Если ЭтоНовый() Тогда
		Возврат;
	КонецЕсли;
	
	НоменклатураСсылка = АптечныеТовары.ПолучитьНоменклатуруПоЭлементуКАТ(Ссылка);
	
	//бит
	РЛС_Служебный.УстановитьЗначениеДопРеквизитаВОбъекте(НоменклатураСсылка, ЭтотОбъект);
	//бит
	
	Если ЗначениеЗаполнено(НоменклатураСсылка) Тогда
		
		ПереносимыеРеквизиты = Новый Структура;
//		ПереносимыеРеквизиты.Вставить("Упаковка", Упаковка);
		ПереносимыеРеквизиты.Вставить("ГруппаПКУ", ГруппаПКУ);
		//бит_Кирилин_20.10.23
		Если ЗначениеЗаполнено(ГруппаПКУ) Тогда
			ГруппаСписка = Справочники.Номенклатура.НайтиПоНаименованию(ГруппаПКУ.Наименование);
			Если ГруппаСписка = Справочники.Номенклатура.ПустаяСсылка() Тогда
				ГруппаСписка = Справочники.Номенклатура.СоздатьГруппу();
				ГруппаСписка.Наименование = ГруппаПКУ.Наименование;
				ГруппаСписка.Записать();
			КонецЕсли;
			ПереносимыеРеквизиты.Вставить("Родитель", ГруппаСписка.Ссылка);
		Иначе
			ГруппаСписка = Справочники.Номенклатура.НайтиПоНаименованию("Лекарственные препараты");
			Если ГруппаСписка = Справочники.Номенклатура.ПустаяСсылка() Тогда
				ГруппаСписка = Справочники.Номенклатура.СоздатьГруппу();
				ГруппаСписка.Наименование = "Лекарственные препараты";
				ГруппаСписка.Записать();
			КонецЕсли;
			ПереносимыеРеквизиты.Вставить("Родитель", ГруппаСписка.Ссылка);
		КонецЕсли;
		//бит_Кирилин_20.10.23
		ПереносимыеРеквизиты.Вставить("Производитель", ФирмаПроизводитель);
		Если ЗначениеЗаполнено(СрокГодности) Тогда
			ПереносимыеРеквизиты.Вставить("СрокГодности", СрокГодности);
			ПереносимыеРеквизиты.Вставить("ЕдиницаИзмеренияСрокаГодности", ЕдиницаИзмеренияСрокаГодности);
		КонецЕсли;
		
		//Если Справочники.ЕдиницыИзмерения.МерныеТипыЕдиницИзмерений().Найти(БазоваяЕдиницаИзмеренияКАТ.ТипЕдиницы) = Неопределено Тогда
		//	ПереносимыеРеквизиты.Вставить("ЕдиницаИзмерения", БазоваяЕдиницаИзмеренияКАТ);
		//КонецЕсли;
		
		НоменклатураОбъект = Неопределено;
		
		РеквизитыНоменклатуры = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(НоменклатураСсылка, ОбщегоНазначенияБольничнаяАптекаКлиентСервер.КлючиКоллекции(ПереносимыеРеквизиты));
		Для Каждого Реквизит Из ПереносимыеРеквизиты Цикл
			
			Если Реквизит.Значение <> РеквизитыНоменклатуры[Реквизит.Ключ] Тогда
				Если НоменклатураОбъект = Неопределено Тогда
					НоменклатураОбъект = НоменклатураСсылка.ПолучитьОбъект();
					Попытка
						ЗаблокироватьДанныеДляРедактирования(НоменклатураСсылка);
					Исключение
						ОбщегоНазначения.СообщитьПользователю(
							КраткоеПредставлениеОшибки(ИнформацияОбОшибке()),
							ЭтотОбъект,
							,
							,
							Отказ);
						Возврат
					КонецПопытки;
				КонецЕсли;
				НоменклатураОбъект[Реквизит.Ключ] = Реквизит.Значение;
			КонецЕсли;
			
		КонецЦикла;
		
		Если НоменклатураОбъект <> Неопределено Тогда
			
			Попытка
				
				НоменклатураОбъект.ДополнительныеСвойства.Свойство("ПропуститьОбновлениеДанныхПрепарата");
				НоменклатураОбъект.Записать();
				РазблокироватьДанныеДляРедактирования(НоменклатураСсылка);
				
			Исключение
				
				РазблокироватьДанныеДляРедактирования(НоменклатураСсылка);
				ОбщегоНазначения.СообщитьПользователю(
					КраткоеПредставлениеОшибки(ИнформацияОбОшибке()),
					ЭтотОбъект,
					,
					,
					Отказ);
				
			КонецПопытки;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти // СлужебныеПроцедурыИФункции

#КонецЕсли