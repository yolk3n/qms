
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Параметры.ЗначенияЗаполнения) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Параметры.ЗначенияЗаполнения);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Назначение) Тогда
		Назначение = Перечисления.НазначенияШаблоновЭтикетокИЦенников.ЭтикеткаДляТоваров;
	КонецЕсли;
	
	ПриИзмененииНазначенияСервер();
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ
#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НазначениеПриИзменении(Элемент)
	ПриИзмененииНазначенияСервер();
КонецПроцедуры

&НаКлиенте
Процедура РазмерЛентыПриИзменении(Элемент)
	
	РазмерЛентыПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура РазмерЛентыОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура НазначениеОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийЭлементовШапкиФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ
#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ИзменитьВРедакторе(Команда)
	
	Размеры = ПолучитьРазмеры(ЭтотОбъект);
	
	Закрыть(Неопределено);
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ОткрытьРедактор", Истина);
	ПараметрыОткрытия.Вставить("ИмяМакета", ИмяВыбранногоМакета);
	ПараметрыОткрытия.Вставить("Ширина", Размеры.Ширина);
	ПараметрыОткрытия.Вставить("Высота", Размеры.Высота);
	ПараметрыОткрытия.Вставить("Наименование", Наименование);
	ПараметрыОткрытия.Вставить("Назначение", Назначение);
	
	ОткрытьФорму("Справочник.ШаблоныЭтикетокИЦенников.ФормаОбъекта", ПараметрыОткрытия);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаСледующийШаблон(Команда)
	ТекущийИндексШаблона = ТекущийИндексШаблона + 1;
	ОбновитьВсе();
КонецПроцедуры

&НаКлиенте
Процедура КомандаПредыдущийШаблон(Команда)
	ТекущийИндексШаблона = ТекущийИндексШаблона - 1;
	ОбновитьВсе();
КонецПроцедуры

&НаКлиенте
Процедура НапечататьОбразец(Команда)
	
	ОчиститьСообщения();
	
	Если Не ЗначениеЗаполнено(ДляЧего) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не заполнено поле ""Для чего""'"),, "ДляЧего");
		Возврат;
	КонецЕсли;
	
	Если Назначение = ПредопределенноеЗначение("Перечисление.НазначенияШаблоновЭтикетокИЦенников.ЦенникДляТоваров") Тогда
		
		УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(
			"Обработка.ПечатьЭтикетокИЦенников",
			"ЦенникТовары",
			ПолучитьПараметрыДляПечатиОбразцаЦенникаТовара(),
			Неопределено);
		
	ИначеЕсли Назначение = ПредопределенноеЗначение("Перечисление.НазначенияШаблоновЭтикетокИЦенников.ЭтикеткаДляТоваров") Тогда
		
		УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(
			"Обработка.ПечатьЭтикетокИЦенников",
			"ЭтикеткаТовары",
			ПолучитьПараметрыДляПечатиОбразцаЭтикеткиТовара(),
			Неопределено);
		
	ИначеЕсли Назначение = ПредопределенноеЗначение("Перечисление.НазначенияШаблоновЭтикетокИЦенников.СтеллажнаяКарточкаДляТовара") Тогда
		
		УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(
			"Обработка.ПечатьЭтикетокИЦенников",
			"СтеллажнаяКарточкаТовары",
			ПолучитьПараметрыДляПечатиОбразцаСтеллажнойКарточкиТовара(),
			Неопределено);
			
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура Сохранить(Команда)
	
	ОчиститьСообщения();
	Если ПроверитьЗаполнение() Тогда
	
		Шаблон = СохранитьНаСервере();
		Оповестить("Запись_ШаблоныЭтикетокИЦенников", Новый Структура, Шаблон);
		Закрыть();
	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти // ОбработчикиКомандФормы

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

////////////////////////////////////////////////////////////////////////////////
// При изменении

&НаСервере
Процедура ПриИзмененииНазначенияСервер()
	
	РазмерЛенты = "";
	
	Если Назначение = Перечисления.НазначенияШаблоновЭтикетокИЦенников.ЭтикеткаДляТоваров Тогда
		Заголовок = НСтр("ru = 'Помощник создания этикетки'");
		СтрокаПоискаТипа = "Этикетки";
		Элементы.РазмерЛенты.Заголовок = НСтр("ru = 'Размер ленты'");
		Элементы.ОписаниеКоличестваЦенников.Видимость = Ложь;
	ИначеЕсли Назначение = Перечисления.НазначенияШаблоновЭтикетокИЦенников.ЦенникДляТоваров Тогда
		Заголовок = НСтр("ru = 'Помощник создания ценника'");
		СтрокаПоискаТипа = "Ценника";
		Элементы.РазмерЛенты.Заголовок = НСтр("ru = 'Размер бумаги'");
		Элементы.ОписаниеКоличестваЦенников.Видимость = Истина;
	ИначеЕсли Назначение = Перечисления.НазначенияШаблоновЭтикетокИЦенников.СтеллажнаяКарточкаДляТовара Тогда
		Заголовок = НСтр("ru = 'Помощник создания стеллажной карточки'");
		СтрокаПоискаТипа = "СтеллажнойКарточки";
		Элементы.РазмерЛенты.Заголовок = НСтр("ru = 'Размер бумаги'");
		Элементы.ОписаниеКоличестваЦенников.Видимость = Истина;
	КонецЕсли;
	
	Шаблоны = Новый Структура;
	ПризнакМакетаДляТоваров = "Товары";
	
	МассивТипов = Новый Массив;
	Если Назначение = Перечисления.НазначенияШаблоновЭтикетокИЦенников.ЭтикеткаДляТоваров
	 ИЛИ Назначение = Перечисления.НазначенияШаблоновЭтикетокИЦенников.ЦенникДляТоваров Тогда
		Элементы.ДляЧего.ВыбиратьТип = Ложь;
		МассивТипов.Добавить(Тип("СправочникСсылка.Номенклатура"));
	ИначеЕсли Назначение = Перечисления.НазначенияШаблоновЭтикетокИЦенников.СтеллажнаяКарточкаДляТовара Тогда
		Элементы.ДляЧего.ВыбиратьТип = Ложь;
		МассивТипов.Добавить(Тип("СправочникСсылка.Номенклатура"));
	КонецЕсли;
	Элементы.ДляЧего.ОграничениеТипа = Новый ОписаниеТипов(МассивТипов);
	
	Элементы.РазмерЛенты.СписокВыбора.Очистить();
	ДлинаПризнака = СтрДлина(ПризнакМакетаДляТоваров);
	Для каждого Макет Из Метаданные.НайтиПоТипу(Тип("СправочникСсылка.ШаблоныЭтикетокИЦенников")).Макеты Цикл
		Если Макет.ТипМакета = Метаданные.СвойстваОбъектов.ТипМакета.ТабличныйДокумент Тогда
			Если ВРег(Прав(Макет.Имя, ДлинаПризнака)) = ВРег(ПризнакМакетаДляТоваров) Тогда
				
				Если Найти(Макет.Имя, СтрокаПоискаТипа) > 0 Тогда
				
					Размер = СтрЗаменить(Макет.Имя, Лев(Макет.Имя, Найти(Макет.Имя, "_")), "");
					Размер = СтрЗаменить(Размер, "_"+ПризнакМакетаДляТоваров, "");
					
					Если Найти(Макет.Имя, "х") > 0 Тогда
						
						Ключ = "Размер" + Размер;
						Если Не Шаблоны.Свойство(Ключ) Тогда
							Шаблоны.Вставить(Ключ, Новый Массив);
						КонецЕсли;
						Шаблоны[Ключ].Добавить(Макет.Имя);
						
						Если Не ЗначениеЗаполнено(РазмерЛенты) Тогда
							РазмерЛенты = Размер;
						КонецЕсли;
						
						Если Элементы.РазмерЛенты.СписокВыбора.НайтиПоЗначению(Размер) = Неопределено Тогда
							Элементы.РазмерЛенты.СписокВыбора.Добавить(Размер, Размер);
						КонецЕсли;
						
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	РазмерЛентыПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура РазмерЛентыПриИзмененииНаСервере()
	
	Ключ = "Размер" + РазмерЛенты;
	
	ТекущийИндексШаблона = 1;
	ВсегоШаблонов = Шаблоны[Ключ].Количество();
	
	ОбновитьВсе();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Прочее

&НаСервере
Функция СохранитьНаСервере()
	
	Размер = ПолучитьРазмеры(ЭтотОбъект);
	
	Макет = Справочники.ШаблоныЭтикетокИЦенников.ПолучитьМакет(ИмяМакета);
	ПараметрыМакета = Справочники.ШаблоныЭтикетокИЦенников.ПодготовитьСтруктуруМакетаШаблона(Макет, Назначение);
	
	НовыйЭлемент = Справочники.ШаблоныЭтикетокИЦенников.СоздатьЭлемент();
	НовыйЭлемент.Высота       = Размер.Высота;
	НовыйЭлемент.Ширина       = Размер.Ширина;
	НовыйЭлемент.РазмерЯчейки = 5;
	НовыйЭлемент.Назначение   = Назначение;
	НовыйЭлемент.Наименование = Наименование;
	НовыйЭлемент.ДляЧего      = ДляЧего;
	НовыйЭлемент.Шаблон       = Новый ХранилищеЗначения(ПараметрыМакета);
	НовыйЭлемент.Записать();
	
	Возврат НовыйЭлемент.Ссылка;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьРазмеры(Форма)
	
	ПозицияРазделителя = СтрНайти(Форма.РазмерЛенты, "х");
	Высота = Число(Сред(Форма.РазмерЛенты, ПозицияРазделителя + 1));
	Ширина = Число(Лев (Форма.РазмерЛенты, ПозицияРазделителя - 1));
	
	Возврат Новый Структура("Ширина, Высота", Ширина, Высота);
	
КонецФункции

&НаСервере
Процедура ОбновитьВсе()
	
	Ключ = "Размер" + РазмерЛенты;
	
	Элементы.КомандаСледующийШаблон.Видимость = Не (ТекущийИндексШаблона = ВсегоШаблонов);
	Элементы.КомандаПредыдущийШаблон.Видимость = Не (ТекущийИндексШаблона = 1);
	
	Элементы.ДекорацияКомандаСледующийШаблон.Видимость = (ТекущийИндексШаблона = ВсегоШаблонов);
	Элементы.ДекорацияКомандаПредыдущийШаблон.Видимость = (ТекущийИндексШаблона = 1);
	
	Элементы.ТекущийНомер.Заголовок = Строка(ТекущийИндексШаблона) + " из " + ВсегоШаблонов;
	
	ИмяМакета = Шаблоны[Ключ][ТекущийИндексШаблона - 1];
	ИмяВыбранногоМакета = ИмяМакета;
	
	Макет = Справочники.ШаблоныЭтикетокИЦенников.ПолучитьМакет(ИмяМакета);
	ПараметрыМакета = Справочники.ШаблоныЭтикетокИЦенников.ПодготовитьСтруктуруМакетаШаблона(Макет, Назначение);
	
	Попытка
		МакетКартинки = Справочники.ШаблоныЭтикетокИЦенников.ПолучитьМакет(ИмяМакета + "Картинка");
		АдресКартинки = ПоместитьВоВременноеХранилище(МакетКартинки, УникальныйИдентификатор);
	Исключение
		АдресКартинки = "";
	КонецПопытки;
	
	КоличествоНаСтранице = Справочники.ШаблоныЭтикетокИЦенников.МаксимальноеКоличествоНаСтранице(Макет, Назначение);
	Элементы.ОписаниеКоличестваЦенников.Заголовок = КоличествоНаСтранице.Описание;
	
	Если ПараметрыМакета.ПараметрыШаблона.Количество() > 0 Тогда
		ИменаПараметров = Новый Массив;
		Для Каждого КлючИЗначение Из ПараметрыМакета.ПараметрыШаблона Цикл
			ИменаПараметров.Добавить(КлючИЗначение.Ключ);
		КонецЦикла;
		Элементы.ДекорацияОписание.Заголовок = СтрСоединить(ИменаПараметров, ", ");
	Иначе
		Элементы.ДекорацияОписание.Заголовок = НСтр("ru = 'Нет параметров'");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ДополнитьПараметрыДляПечатиОбразца(ПараметрыПечати, ПараметрыМакета)
	
	ПараметрыПечати.Вставить("СтруктураМакетаШаблона", ПараметрыМакета);
	
	ПараметрКоманды = Новый Массив;
	ПараметрКоманды.Добавить(ПараметрыПечати);
	Возврат ПараметрКоманды;
	
КонецФункции

&НаСервере
Функция ПолучитьПараметрыДляПечатиОбразцаЭтикеткиТовара()
	
	Макет = Справочники.ШаблоныЭтикетокИЦенников.ПолучитьМакет(ИмяМакета);
	ПараметрыМакета = Справочники.ШаблоныЭтикетокИЦенников.ПодготовитьСтруктуруМакетаШаблона(Макет, Назначение);
	ТипКода = ПараметрыМакета.ТипКода;
	
	ПараметрыПечати = Справочники.ШаблоныЭтикетокИЦенников.ПолучитьПараметрыДляПечатиОбразцаЭтикеткиТовара(ДляЧего, ТипКода, УникальныйИдентификатор);
	Возврат ДополнитьПараметрыДляПечатиОбразца(ПараметрыПечати, ПараметрыМакета);
	
КонецФункции

&НаСервере
Функция ПолучитьПараметрыДляПечатиОбразцаЦенникаТовара()
	
	Макет = Справочники.ШаблоныЭтикетокИЦенников.ПолучитьМакет(ИмяМакета);
	ПараметрыМакета = Справочники.ШаблоныЭтикетокИЦенников.ПодготовитьСтруктуруМакетаШаблона(Макет, Назначение);
	ТипКода = ПараметрыМакета.ТипКода;
	
	ПараметрыПечати = Справочники.ШаблоныЭтикетокИЦенников.ПолучитьПараметрыДляПечатиОбразцаЦенникаТовара(ДляЧего, ТипКода, УникальныйИдентификатор);
	Возврат ДополнитьПараметрыДляПечатиОбразца(ПараметрыПечати, ПараметрыМакета);
	
КонецФункции

&НаСервере
Функция ПолучитьПараметрыДляПечатиОбразцаСтеллажнойКарточкиТовара()
	
	Макет = Справочники.ШаблоныЭтикетокИЦенников.ПолучитьМакет(ИмяМакета);
	ПараметрыМакета = Справочники.ШаблоныЭтикетокИЦенников.ПодготовитьСтруктуруМакетаШаблона(Макет, Назначение);
	ТипКода = ПараметрыМакета.ТипКода;
	
	ПараметрыПечати = Справочники.ШаблоныЭтикетокИЦенников.ПолучитьПараметрыДляПечатиОбразцаСтеллажнойКарточкиТовара(ДляЧего, ТипКода, УникальныйИдентификатор);
	Возврат ДополнитьПараметрыДляПечатиОбразца(ПараметрыПечати, ПараметрыМакета);
	
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции
