
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформлениеФормы();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	Если Параметры.Свойство("Отбор") И Параметры.Отбор.Свойство("Дата") Тогда
		
		// Наложим отбор списка по периоду действия записи - он должен совпадать с датой документа
		//	- начало периода <= даты документа
		//	- окончание периода >= даты документа или дата окончания периода не указана
		
		ДатаДляОтбора    = Параметры.Отбор.Дата;
		РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ;
		
		ГруппаОтбораПоПериоду = ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(
			Список.КомпоновщикНастроек.ФиксированныеНастройки.Отбор.Элементы,
			НСтр("ru='Период действия'"),
			ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ);
		
		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(
			ГруппаОтбораПоПериоду,
			"ДатаНачала",
			ВидСравненияКомпоновкиДанных.МеньшеИлиРавно,
			ДатаДляОтбора,,
			Истина,
			РежимОтображения);
		
		ГруппаОтбораПоДатеОкончания = ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(
			ГруппаОтбораПоПериоду.Элементы,
			НСтр("ru='Дата окончания'"),
			ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли);
		
		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(
			ГруппаОтбораПоДатеОкончания,
			"ДатаОкончания",
			ВидСравненияКомпоновкиДанных.БольшеИлиРавно,
			ДатаДляОтбора,,
			Истина,
			РежимОтображения);
		
		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(
			ГруппаОтбораПоДатеОкончания,
			"ДатаОкончания",
			ВидСравненияКомпоновкиДанных.НеЗаполнено,
			ДатаДляОтбора,,
			Истина,
			РежимОтображения);
		
		ГруппаОтбораПоПериоду.РежимОтображения       = РежимОтображения;
		ГруппаОтбораПоДатеОкончания.РежимОтображения = РежимОтображения;
		
		Параметры.Отбор.Удалить("Дата");
		
	КонецЕсли;
	
	Элементы.Владелец.Видимость = ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоОрганизаций");
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформлениеФормы()
	
	УсловноеОформлениеСписка = ОбщегоНазначенияБольничнаяАптекаКлиентСервер.ПолучитьУсловноеОформлениеДинамическогоСписка(Список);
	
	// Шрифт в строках списка Список
	Элемент = УсловноеОформлениеСписка.Элементы.Добавить();
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(Элемент.Отбор,
		"ПравоПодписиПоДоверенности", ВидСравненияКомпоновкиДанных.Равно, Ложь);
		
	Элемент.Оформление.УстановитьЗначениеПараметра("Шрифт", Новый Шрифт(ШрифтыСтиля.ШрифтТекста,,, Истина));
	
КонецПроцедуры

#КонецОбласти // СлужебныеПроцедурыИФункции
