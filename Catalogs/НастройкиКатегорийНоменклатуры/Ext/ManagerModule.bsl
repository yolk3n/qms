#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС
#Область ПрограммныйИнтерфейс

// Получает настройку категории номенклатуры, если она одна в справочнике.
//
// Параметры:
//  Тип - ПеречислениеСсылка.ТипыНоменклатуры, СправочникСсылка.ТипыНоменклатурыРасширенные - отбор настройки категории номенклатуры.
//
// Возвращаемое значение:
//  СправочникСсылка.НастройкиКатегорийНоменклатуры - найденная настройка.
//
Функция НастройкаКатегорийНоменклатурыПоУмолчанию(Тип = Неопределено) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ ПЕРВЫЕ 2
	|	НастройкиКатегорийНоменклатуры.Ссылка КАК НастройкаКатегорийНоменклатуры
	|ИЗ
	|	Справочник.НастройкиКатегорийНоменклатуры КАК НастройкиКатегорийНоменклатуры
	|ГДЕ
	|	НЕ НастройкиКатегорийНоменклатуры.ПометкаУдаления
	|");
	
	Если Тип <> Неопределено Тогда
		ТипЗначения = ТипЗнч(Тип);
		Если ТипЗначения = Тип("СправочникСсылка.ТипыНоменклатурыРасширенные") Тогда
			Запрос.Текст = Запрос.Текст + "
			|	И НастройкиКатегорийНоменклатуры.ТипНоменклатурыРасширенный = &Тип
			|";
		ИначеЕсли ТипЗначения = Тип("ПеречислениеСсылка.ТипыНоменклатуры") Тогда
			Запрос.Текст = Запрос.Текст + "
			|	И НастройкиКатегорийНоменклатуры.ТипНоменклатуры = &Тип
			|";
		КонецЕсли;
		Запрос.УстановитьПараметр("Тип", Тип);
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Справочники.НастройкиКатегорийНоменклатуры.ПустаяСсылка();
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Если Выборка.Количество() = 1 Тогда
		Выборка.Следующий();
		НастройкаКатегорийНоменклатуры = Выборка.НастройкаКатегорийНоменклатуры;
	Иначе
		НастройкаКатегорийНоменклатуры = Справочники.НастройкиКатегорийНоменклатуры.ПустаяСсылка();
	КонецЕсли;
	
	Возврат НастройкаКатегорийНоменклатуры;
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтение
	|ГДЕ ИСТИНА
	|;
	|РазрешитьИзменениеЕслиРазрешеноЧтение
	|ГДЕ
	|	ЗначениеРазрешено(Ссылка)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти // ПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// ОБНОВЛЕНИЕ ИНФОРМАЦИОННОЙ БАЗЫ
#Область ОбновлениеИнформационнойБазы

// Обработчик обновления справочника "НастройкиКатегорийНоменклатуры".
// Заполняет предопределенные элементы.
//
Процедура ЗаполнитьПредустановленныеНастройкиКатегорийНоменклатуры() Экспорт
	
	ТипыДляСозданияНастроек = Новый Массив;
	ТипыДляСозданияНастроек.Добавить(Справочники.ТипыНоменклатурыРасширенные.ЛекарственноеСредство);
	ТипыДляСозданияНастроек.Добавить(Справочники.ТипыНоменклатурыРасширенные.Товар);
	
	Для Каждого Тип Из ТипыДляСозданияНастроек Цикл
		
		Если ЗначениеЗаполнено(НастройкаКатегорийНоменклатурыПоУмолчанию(Тип)) Тогда
			Продолжить;
		КонецЕсли;
		
		Объект = Справочники.НастройкиКатегорийНоменклатуры.СоздатьЭлемент();
		Объект.Наименование               = Строка(Тип);
		Объект.ТипНоменклатурыРасширенный = Тип;
		Объект.ТипНоменклатуры            = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Тип, "ТипНоменклатуры");
		Объект.ГруппаБухгалтерскогоУчета  = Справочники.ГруппыБухгалтерскогоУчета.ПолучитьГруппуБухгалтерскогоУчетаПоУмолчанию(Тип);
		
		Если Тип = Справочники.ТипыНоменклатурыРасширенные.ЛекарственноеСредство Тогда
			Объект.ИспользоватьСерии                  = Истина;
			Объект.ИспользоватьНомерСерии             = Истина;
			Объект.ИспользоватьСрокГодностиСерии      = Истина;
			Объект.ПолитикаУчетаСерий                 = Перечисления.ТипыПолитикУчетаСерий.УправлениеОстаткамиСерий;
			Объект.ПолитикаУчетаСерийВОтделениях      = Перечисления.ТипыПолитикУчетаСерий.УправлениеОстаткамиСерий;
			Объект.ТочностьУказанияСрокаГодностиСерии = Перечисления.ТочностиУказанияСрокаГодности.СТочностьюДоДней;
		КонецЕсли;
		
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(Объект);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти // ОбновлениеИнформационнойБазы

#КонецЕсли