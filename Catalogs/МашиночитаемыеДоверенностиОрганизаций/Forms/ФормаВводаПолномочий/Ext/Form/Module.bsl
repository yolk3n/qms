
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СтруктураДанных = Параметры.СтруктураДанных;
	
	Если СтруктураДанных.Свойство("ТолькоПросмотрФормы") И СтруктураДанных.ТолькоПросмотрФормы Тогда
		Элементы.ПолныеПолномочия.ТолькоПросмотр 	= Истина;
		Элементы.ФормаКнопкаСохранить.Доступность 	= Ложь;
	КонецЕсли;
	
	// определяем возможные полномочия в таблице
	ОпределитьПолномочиеВТаблице("01", НСтр("ru = 'подписывать налоговую декларацию, др. отчетность'"));
	ОпределитьПолномочиеВТаблице("02", НСтр("ru = 'представлять налоговую декларацию, др. отчетность'"));
	ОпределитьПолномочиеВТаблице("03", НСтр("ru = 'получать документы в инспекции ФНС России'"));
	ОпределитьПолномочиеВТаблице("04", НСтр("ru = 'вносить изменения в документы налоговой отчетности'"));
	ОпределитьПолномочиеВТаблице("05", НСтр("ru = 'подписывать документы, используемые при постановке и снятии с учета и сообщении сведений, установленных НК РФ (за исключением документов, используемых при  учете и контроле банковских счетов)'"));
	ОпределитьПолномочиеВТаблице("06", НСтр("ru = 'представлять документы, используемые при постановке и снятии с учета и сообщении сведений, установленных НК РФ (за исключением документов,  используемых при  учете и контроле банковских счетов)'"));
	ОпределитьПолномочиеВТаблице("07", НСтр("ru = 'получать от налогового органа документы, подтверждающие постановку и снятие с учета'"));
	ОпределитьПолномочиеВТаблице("08", НСтр("ru = 'подписывать документы, используемые при  учете и контроле банковских счетов'"));
	ОпределитьПолномочиеВТаблице("09", НСтр("ru = 'представлять документы, используемые при  учете и контроле банковских счетов'"));
	ОпределитьПолномочиеВТаблице("10", НСтр("ru = 'представлять документы по применению специальных налоговых режимов и консолидации учета по обособленным подразделениям'"));
	ОпределитьПолномочиеВТаблице("11", НСтр("ru = 'получать в инспекции ФНС России документы по применению специальных налоговых режимов и консолидации учета по обособленным подразделениям'"));
	ОпределитьПолномочиеВТаблице("12", НСтр("ru = 'подписывать документы по консолидации учета по обособленным подразделениям'"));
	ОпределитьПолномочиеВТаблице("13", НСтр("ru = 'представлять заявления и запросы на проведение сверки расчетов с бюджетом, получение справок о состоянии расчетов с бюджетом'"));
	ОпределитьПолномочиеВТаблице("14", НСтр("ru = 'получать в инспекции ФНС России акты сверок и справки о состоянии расчетов с бюджетом'"));
	ОпределитьПолномочиеВТаблице("15", НСтр("ru = 'подписывать акт сверки расчетов с бюджетом'"));
	ОпределитьПолномочиеВТаблице("16", НСтр("ru = 'подписывать акт и решение налоговой проверки'"));
	ОпределитьПолномочиеВТаблице("17", НСтр("ru = 'подписывать заявление на зачет/возврат налога'"));
	ОпределитьПолномочиеВТаблице("18", НСтр("ru = 'подписывать заявления о ввозе товаров и уплате косвенных налогов'"));
	ОпределитьПолномочиеВТаблице("19", НСтр("ru = 'получать заявления о ввозе товаров и уплате'"));
	ОпределитьПолномочиеВТаблице("20", НСтр("ru = 'подписывать документы по применению специальных налоговых режимов, игорному бизнесу и консолидации учета по обособленным подразделениям'"));
	ОпределитьПолномочиеВТаблице("21", НСтр("ru = 'подписывать документы (информацию)'"));
	ОпределитьПолномочиеВТаблице("22", НСтр("ru = 'представлять документы (информацию)'"));
	ОпределитьПолномочиеВТаблице("23", НСтр("ru = 'подписывать, представлять и получать от налогового органа документы по регистрации (перерегистрации) контрольно-кассовой техники'"));
	ОпределитьПолномочиеВТаблице("24", НСтр("ru = 'подписывать, представлять и получать от налогового органа документы по снятию контрольно-кассовой техники с регистрационного учета'"));
	ОпределитьПолномочиеВТаблице("25", НСтр("ru = 'подписывать и представлять перечень автоматических устройств для расчетов'"));
	
	// расставляем флажки
	Если НЕ СтруктураДанных.ПризнакПолныеПолномочия Тогда
		Для каждого СтрПолномочие Из Полномочия Цикл
			СтрПолномочие.Пометка = СтруктураДанных["Признак" + СтрПолномочие.Код];
		КонецЦикла;
	КонецЕсли;
	
	// устанавливаем в исходное значение переключатель "Полные полномочия"
	ПолныеПолномочия = ?(СтруктураДанных.ПризнакПолныеПолномочия, "0", "1");
	
	УправлениеЭУ(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура РеквизитПереключательПолныеПолномочияПриИзменении(Элемент)
	
	УправлениеЭУ(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	
	Для Каждого Стр Из Полномочия Цикл
		Стр.Пометка = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)
	
	Для Каждого Стр Из Полномочия Цикл
		Стр.Пометка = Ложь;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура Сохранить(Команда)
	
	Если НЕ СохранениеВозможно() Тогда
		Возврат;
	КонецЕсли;
	
	Результат = Новый Структура;
	Результат.Вставить("ПризнакПолныеПолномочия", ?(ПолныеПолномочия = "1", Ложь, Истина));
	Для Каждого Стр Из Полномочия Цикл
		Результат.Вставить("Признак" + Стр.Код, ?(ПолныеПолномочия = "1", Стр.Пометка, Ложь));
	КонецЦикла;
	
	Закрыть(Результат);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеЭУ(Форма)
	
	Форма.Элементы.ГруппаТаблицаПолномочий.Доступность = (Форма.ПолныеПолномочия = "1");
	
КонецПроцедуры

&НаСервере
Процедура ОпределитьПолномочиеВТаблице(КодПолномочия, НаименованиеПолномочия)
	
	НовСтр = Полномочия.Добавить();
	НовСтр.Код = КодПолномочия;
	НовСтр.Наименование = НаименованиеПолномочия;
	
КонецПроцедуры

&НаКлиенте
Функция СохранениеВозможно()
	
	Отказ = Ложь;
	
	ОчиститьСообщения();
	
	// проверяем полномочия
	Если ПолныеПолномочия <> "0" Тогда
		СтрокиИстина = Полномочия.НайтиСтроки(Новый Структура("Пометка", Истина));
		Если СтрокиИстина.Количество() = 0 Тогда
			ТекстСообщения = НСтр("ru = 'Не выбран ни один вид полномочия.'");
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения, , "Полномочия", , Отказ);
		КонецЕсли;
	КонецЕсли;
	
	Возврат НЕ Отказ;
	
КонецФункции

#КонецОбласти
