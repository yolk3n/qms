#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СсылкаНаДоверенность = Параметры.Ключ;
	
	ПодписанныеДокументы.Параметры.УстановитьЗначениеПараметра("Доверенность", Объект.Ссылка);	
	
	КоличествоДокументов = ИнтерфейсДокументовЭДО.КоличествоПодписанныхЭлектронныхДокументовПоМЧД(Объект.Ссылка);
	КоличествоДокументов = СтрШаблон(" (%1)", КоличествоДокументов);
	Элементы.ГруппаПодписанныеДокументы.Заголовок = Элементы.ГруппаПодписанныеДокументы.Заголовок + КоличествоДокументов;
	
	ЗаполнитьТабличныйДокументМЧД();
	
	// ЭлектронноеВзаимодействие.ОбменСКонтрагентами
	ПараметрыЭДОПриСоздании = ОбменСКонтрагентами.ПараметрыПриСозданииНаСервере_ФормаДокумента();
	ПараметрыЭДОПриСоздании.Форма = ЭтотОбъект;
	ПараметрыЭДОПриСоздании.ДокументСсылка = Объект.Ссылка;
	ПараметрыЭДОПриСоздании.КонтроллерСостояниеЭДО = Элементы.ПредставлениеСостоянияЭДО;
	ПараметрыЭДОПриСоздании.ГруппаСостояниеЭДО = Элементы.ГруппаСостояниеЭДО;
	ПараметрыЭДОПриСоздании.СкрыватьСостояниеНеНачатогоЭДО = Истина;
	ОбменСКонтрагентами.ПриСозданииНаСервере_ФормаДокумента(ПараметрыЭДОПриСоздании);
	// Конец ЭлектронноеВзаимодействие.ОбменСКонтрагентами
	
	ЦветФонаВниманиеМЧД = ЦветаСтиля.ЦветФонаВниманиеМЧД;
	ЦветФонаНедействительнаяМЧД = ЦветаСтиля.ЦветФонаНедействительнаяМЧД;
	ЦветФонаДействительнаяМЧД = ЦветаСтиля.ЦветФонаДействительнаяМЧД;
	
	Справочники.ПравилаПроверкиПолномочийМЧД.ПриСозданииНаСервереФормыНастроек(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	Справочники.ПравилаПроверкиПолномочийМЧД.ПриЧтенииНастроек(ТекущийОбъект, ЭтотОбъект);
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// ЭлектронноеВзаимодействие.ОбменСКонтрагентами
	ПараметрыЭДОПриСоздании = ОбменСКонтрагентами.ПараметрыПриЧтенииНаСервере_ФормаДокумента();
	ПараметрыЭДОПриСоздании.Форма = ЭтотОбъект;
	ПараметрыЭДОПриСоздании.ДокументСсылка = Объект.Ссылка;
	ПараметрыЭДОПриСоздании.КонтроллерСостояниеЭДО = Элементы.ПредставлениеСостоянияЭДО;
	ПараметрыЭДОПриСоздании.ГруппаСостояниеЭДО = Элементы.ГруппаСостояниеЭДО;
	ОбменСКонтрагентами.ПриЧтенииНаСервере_ФормаДокумента(ПараметрыЭДОПриСоздании);
	// Конец ЭлектронноеВзаимодействие.ОбменСКонтрагентами
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// ЭлектронноеВзаимодействие.ОбменСКонтрагентами
	ПараметрыОповещения = ОбменСКонтрагентамиКлиент.ПараметрыОповещенияЭДО_ФормаДокумента();
	ПараметрыОповещения.Форма = ЭтотОбъект;
	ПараметрыОповещения.ДокументСсылка = Объект.Ссылка;
	ПараметрыОповещения.КонтроллерСостояниеЭДО = Элементы.ПредставлениеСостоянияЭДО;
	ПараметрыОповещения.ГруппаСостояниеЭДО = Элементы.ГруппаСостояниеЭДО;
	ОбменСКонтрагентамиКлиент.ОбработкаОповещения_ФормаДокумента(ИмяСобытия, Параметр, Источник, ПараметрыОповещения);
	// Конец ЭлектронноеВзаимодействие.ОбменСКонтрагентами
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	УправлениеФормой();
	Элементы.Техподдержка.Заголовок = МашиночитаемыеДоверенностиКлиент.СформироватьГиперссылкуПроМЧД();
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Справочники.ПравилаПроверкиПолномочийМЧД.ЗаписатьПравило(ТекущийОбъект.Ссылка, ЭтотОбъект);
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТекстСкриптаПриИзменении(Элемент)
	МашиночитаемыеДоверенностиКлиент.СформироватьЗаголовокВкладкиПолномочия(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ВариантПроверкиПриИзменении(Элемент)
	МашиночитаемыеДоверенностиКлиент.ОтобразитьВариантПроверки(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура СостояниеЭДОНажатие(Элемент, СтандартнаяОбработка)
	
	// ЭлектронноеВзаимодействие.ОбменСКонтрагентами
	ОбменСКонтрагентамиКлиент.СостояниеЭДОНажатие_ФормаДокумента(ЭтотОбъект, СтандартнаяОбработка);
	// Конец ЭлектронноеВзаимодействие.ОбменСКонтрагентами
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДеревоОтбора

&НаКлиенте
Процедура ДеревоОтбораПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, ЭтоГруппа, Параметр)
	МашиночитаемыеДоверенностиКлиент.ДеревоОтбораПередНачаломДобавления(Элемент, Отказ, Элементы.ДеревоОтбораДанные);
КонецПроцедуры

&НаКлиенте
Процедура ДеревоОтбораПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	МашиночитаемыеДоверенностиКлиент.ДеревоОтбораПередОкончаниемРедактирования(
		Элемент, ОтменаРедактирования, ДеревоОтбора);
КонецПроцедуры

&НаКлиенте
Процедура ДеревоОтбораПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Элементы.ДеревоОтбора.ТекущиеДанные.Картинка = МашиночитаемыеДоверенностиКлиентСервер.НаборКартинок().Реквизит;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоОтбораПередНачаломИзменения(Элемент, Отказ)
	
	ДанныеСтроки = Элемент.ТекущиеДанные;
	ДополнительныеПараметры = Новый Структура("ДанныеСтроки", ДанныеСтроки);
	Оповещение = Новый ОписаниеОповещения("ПослеВводаЗначения", ЭтотОбъект, ДополнительныеПараметры);
	МашиночитаемыеДоверенностиКлиент.ДеревоОтбораПередНачаломИзменения(
		ДанныеСтроки, Отказ, Элементы.ДеревоОтбораДанные, Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоОтбораПередУдалением(Элемент, Отказ)
	
	ДанныеСтроки = Элементы.ДеревоОтбора.ТекущиеДанные;
	ИдентификаторСтроки = 0;
	МашиночитаемыеДоверенностиКлиент.ДеревоОтбораПередУдалением(
		ДанныеСтроки, Отказ, ИдентификаторСтроки, Модифицированность);
	СформироватьПредставлениеДанныхПоСтрокеДерева(ИдентификаторСтроки);
	МашиночитаемыеДоверенностиКлиент.СформироватьЗаголовокВкладкиПолномочия(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоОтбораДанныеПриИзменении(Элемент)
	
	Модифицированность = Истина;
	ДанныеСтроки = Элементы.ДеревоОтбора.ТекущиеДанные;
	
	Если ДанныеСтроки.ИдСтроки > 0 Тогда
		ДанныеСтроки.ИдСтроки = 0;
		Элементы.ДеревоОтбора.ЗакончитьРедактированиеСтроки(Ложь);
	КонецЕсли;
	
	СформироватьПредставлениеДанныхПоСтрокеДерева(ДанныеСтроки.ПолучитьРодителя().ПолучитьИдентификатор());
	МашиночитаемыеДоверенностиКлиент.СформироватьЗаголовокВкладкиПолномочия(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоОтбораПослеУдаления(Элемент)
	
	Модифицированность = Истина;
	МашиночитаемыеДоверенностиКлиент.СформироватьЗаголовокВкладкиПолномочия(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоОтбораПриАктивизацииСтроки(Элемент)
	МашиночитаемыеДоверенностиКлиент.ДеревоОтбораПриАктивизацииСтроки(Элемент);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПодписанныеДокументы

&НаКлиенте
Процедура ПодписанныеДокументыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ДанныеСтроки = Элемент.ДанныеСтроки(ВыбраннаяСтрока);
	
	Если ДанныеСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИнтерфейсДокументовЭДОКлиент.ОткрытьЭлектронныйДокумент(ДанныеСтроки.Ссылка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Посмотреть(Команда)
	
	Содержимое = МашиночитаемыеДоверенностиВызовСервера.ВыгрузитьXML(Объект.Ссылка);
	Текст = Новый ТекстовыйДокумент();
	Текст.УстановитьТекст(Содержимое);
	Текст.Показать();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьЗаявлениеНаОтмену(Команда)
	
	ЗначенияРеквизитов = ЗначенияРеквизитов("ИмяФайлаЗаявленияНаОтзыв, ФайлЗаявленияНаОтзыв");
	
	Если ЗначенияРеквизитов.ФайлЗаявленияНаОтзыв = Неопределено Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Заявление на отмену не отправлялось'"));
		Возврат;
	КонецЕсли;
	
	СохраняемыйФайл = Новый Структура;
	СохраняемыйФайл.Вставить("Адрес", ЗначенияРеквизитов.ФайлЗаявленияНаОтзыв);
	СохраняемыйФайл.Вставить("Имя", ЗначенияРеквизитов.ИмяФайлаЗаявленияНаОтзыв);
	ФайловаяСистемаКлиент.СохранитьФайл(Неопределено, СохраняемыйФайл.Адрес, СохраняемыйФайл.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьОтправленныйОтчет(Команда)
	
	ЗначенияРеквизитов = ЗначенияРеквизитов("ИмяФайлаВыгрузка, XMLфайлМЧД");
	
	Если ЗначенияРеквизитов.XMLфайлМЧД = Неопределено Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Отчет не отправлялся'"));
		Возврат;
	КонецЕсли;
	
	СохраняемыйФайл = Новый Структура;
	СохраняемыйФайл.Вставить("Адрес", ЗначенияРеквизитов.XMLфайлМЧД);
	СохраняемыйФайл.Вставить("Имя", ЗначенияРеквизитов.ИмяФайлаВыгрузка);
	ФайловаяСистемаКлиент.СохранитьФайл(Неопределено, СохраняемыйФайл.Адрес, СохраняемыйФайл.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьПодпись(Команда)
	
	ЗначенияРеквизитов = ЗначенияРеквизитов("ИмяФайлаВыгрузка, ЭлектроннаяПодпись");
	
	Если ЗначенияРеквизитов.ЭлектроннаяПодпись = Неопределено Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Отчет не отправлялся'"));
		Возврат;
	КонецЕсли;
	
	СохраняемыйФайл = Новый Структура;
	СохраняемыйФайл.Вставить("Адрес", ЗначенияРеквизитов.ЭлектроннаяПодпись);
	СохраняемыйФайл.Вставить("Имя", ЗначенияРеквизитов.ИмяФайлаВыгрузка + ".sig");
	ФайловаяСистемаКлиент.СохранитьФайл(Неопределено, СохраняемыйФайл.Адрес, СохраняемыйФайл.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьПодписьЗаявленияНаОтмену(Команда)
	
	ЗначенияРеквизитов = ЗначенияРеквизитов("ИмяФайлаЗаявленияНаОтзыв, ЭлектроннаяПодписьЗаявленияНаОтзыв");
	
	Если ЗначенияРеквизитов.ЭлектроннаяПодписьЗаявленияНаОтзыв = Неопределено Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Заявление на отмену не отправлялось'"));
		Возврат;
	КонецЕсли;
	
	СохраняемыйФайл = Новый Структура;
	СохраняемыйФайл.Вставить("Адрес", ЗначенияРеквизитов.ЭлектроннаяПодписьЗаявленияНаОтзыв);
	СохраняемыйФайл.Вставить("Имя", ЗначенияРеквизитов.ИмяФайлаЗаявленияНаОтзыв + ".sig");
	ФайловаяСистемаКлиент.СохранитьФайл(Неопределено, СохраняемыйФайл.Адрес, СохраняемыйФайл.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура Отозвать(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОтменитьЗавершение", ЭтотОбъект);
	МашиночитаемыеДоверенностиКлиент.ОтменитьМЧД(ОписаниеОповещения, , ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИзРеестраФНС(Команда)
	
	ДлительнаяОперация = НачатьОбновлениеСтатусаИзРеестраФНС();
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Истина;
	Оповещение = Новый ОписаниеОповещения("ПриЗавершенииОбновленияСтатусаВРеестреФНС", ЭтотОбъект);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, Оповещение, ПараметрыОжидания);

КонецПроцедуры

&НаКлиенте
Процедура ОтправитьПоЭДО(Команда)
	
	МашиночитаемыеДоверенностиКлиент.ОтправитьПоЭДО(СсылкаНаДоверенность);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьЭлектронныеДокументы(Команда)
	
	ИнтерфейсДокументовЭДОКлиент.ОткрытьДеревоЭлектронныхДокументов(СсылкаНаДоверенность);
	
КонецПроцедуры

&НаКлиенте
Процедура ПометитьОтозванной(Команда)
	
	Если Объект.Отозвана Тогда
		
		Оповещение = Новый ОписаниеОповещения("УбратьПометкуОтозванаЗавершение", ЭтотОбъект);
		ТекстВопроса = НСтр("ru = 'Убрать пометку ""отозвана"" у доверенности?'");
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	
	Иначе
			
		Оповещение = Новый ОписаниеОповещения("ВводДатыОтзываЗавершение", ЭтотОбъект);
		ОткрытьФорму("Справочник.МашиночитаемыеДоверенностиКонтрагентов.Форма.ВводДатыОтзыва", , ЭтотОбъект, , , , Оповещение,
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПослеВводаЗначения(Значение, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(Значение) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	Модифицированность = Истина;
	ДополнительныеПараметры.ДанныеСтроки.НачальноеЗначение = Значение.НачальноеЗначение;
	ДополнительныеПараметры.ДанныеСтроки.КонечноеЗначение = Значение.КонечноеЗначение;
	СформироватьПредставлениеДанныхПоСтрокеДерева(ДополнительныеПараметры.ДанныеСтроки.ПолучитьИдентификатор());
	МашиночитаемыеДоверенностиКлиент.СформироватьЗаголовокВкладкиПолномочия(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура СформироватьПредставлениеДанныхПоСтрокеДерева(ИдентификаторЭлемента)
	
	СтрокаДерева = ДеревоОтбора.НайтиПоИдентификатору(ИдентификаторЭлемента);
	СтрокаДерева.Данные = Справочники.ПравилаПроверкиПолномочийМЧД.ПредставлениеДанных(СтрокаДерева);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьЗавершение(Результат, ДополнительныеПараметры) Экспорт

	Если ЗначениеЗаполнено(Результат.СтатусТранзакции) Тогда
		ТекстСообщения = НСтр("ru='Доверенность отозвана.'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);		
		УправлениеФормой();	
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура УправлениеФормой()
	
	Элементы.ГруппаПроверкаПолномочий.Видимость = Объект.ПолномочияОграничены;
	Элементы.ФормаОтозвать.Видимость = ЗначениеЗаполнено(Объект.СтатусВРеестреФНС) И (Объект.СтатусВРеестреФНС
		= ПредопределенноеЗначение("Перечисление.СтатусыМашиночитаемойДоверенностиВРеестреФНС.Зарегистрировано")
		Или Объект.СтатусВРеестреФНС = ПредопределенноеЗначение(
		"Перечисление.СтатусыМашиночитаемойДоверенностиВРеестреФНС.ДатаНачалаДействияНеНаступила")
		Или Объект.СтатусВРеестреФНС = ПредопределенноеЗначение(
		"Перечисление.СтатусыМашиночитаемойДоверенностиВРеестреФНС.ОшибкаОтзыва"));

	Элементы.ФормаОбновитьСтатусИзРеестраФНС.Видимость = ЗначениеЗаполнено(Объект.СтатусВРеестреФНС);
	
	Если СкрытьКомандуФормаПометитьОтозванной() Тогда
			Элементы.ФормаПометитьОтозванной.Видимость = Ложь;		
	КонецЕсли;
	
	ВидимостьКомандВыгрузки = Объект.СтатусВРеестреФНС = ПредопределенноеЗначение(
		"Перечисление.СтатусыМашиночитаемойДоверенностиВРеестреФНС.ОтправленоЗаявлениеНаОтзыв")
		Или Объект.СтатусВРеестреФНС = ПредопределенноеЗначение(
		"Перечисление.СтатусыМашиночитаемойДоверенностиВРеестреФНС.Отозвано");
	Элементы.ФормаВыгрузитьЗаявлениеНаОтмену.Видимость = ВидимостьКомандВыгрузки;
	Элементы.ФормаВыгрузитьПодписьЗаявленияНаОтмену.Видимость = ВидимостьКомандВыгрузки;
	
	Если Объект.Отозвана Тогда	
		Элементы.ФормаПометитьОтозванной.Заголовок = НСтр("ru = 'Вернуть в работу'");
	Иначе
		Элементы.ФормаПометитьОтозванной.Заголовок = НСтр("ru = 'Пометить отозванной'");
	КонецЕсли;
	
	ИнтерфейсДокументовЭДОКлиент.ОформитьГруппуСостоянияИСтатусыМЧД(ЭтотОбъект, 
		Объект.Подписана, Объект.Верна, Объект.Отозвана, Объект.ДатаОтзыва, Объект.СтатусВРеестреФНС);
	
	МашиночитаемыеДоверенностиКлиент.СформироватьЗаголовокВкладкиПолномочия(ЭтотОбъект);
	МашиночитаемыеДоверенностиКлиент.ОтобразитьВариантПроверки(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Функция СкрытьКомандуФормаПометитьОтозванной()
	
	Возврат ЗначениеЗаполнено(Объект.СтатусВРеестреФНС) 
		И (Объект.СтатусВРеестреФНС = ПредопределенноеЗначение(
		"Перечисление.СтатусыМашиночитаемойДоверенностиВРеестреФНС.Отозвано") 
		Или Объект.СтатусВРеестреФНС = ПредопределенноеЗначение(
		"Перечисление.СтатусыМашиночитаемойДоверенностиВРеестреФНС.ИстекСрокДействия")
		Или Объект.СтатусВРеестреФНС = ПредопределенноеЗначение(
		"Перечисление.СтатусыМашиночитаемойДоверенностиВРеестреФНС.ОтправленоЗаявлениеНаОтзыв"));
			
КонецФункции 

&НаКлиенте
Функция ЗначенияРеквизитов(ИменаРеквизитов)
	
	Если Модифицированность ИЛИ Параметры.Ключ.Пустая() Тогда
		Записать();
	КонецЕсли;
	
	Возврат ЗначенияРеквизитовОбъекта(Объект.Ссылка, ИменаРеквизитов);
	
КонецФункции

&НаСервере
Процедура ЗаполнитьТабличныйДокументМЧД()
	
	XMLфайлМЧД = МашиночитаемыеДоверенности.ПолныеДанныеДоверенностиНаСервереМЧД(Объект.Ссылка);
	РезультатФормирования = МашиночитаемыеДоверенности.ТабличныйДокументМЧД(XMLфайлМЧД);
	
	ПолеПросмотра = РезультатФормирования.ПредставлениеДокумента;
		
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗначенияРеквизитовОбъекта(СсылкаНаОбъект, ИменаРеквизитов)
	
	Результат = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СсылкаНаОбъект, ИменаРеквизитов);
	
	Для каждого КлючИЗначение Из Результат Цикл
		Если ТипЗнч(КлючИЗначение.Значение) = Тип("ХранилищеЗначения") Тогда
			ДанныеЗначения = КлючИЗначение.Значение.Получить();
			Если ДанныеЗначения = Неопределено Тогда
				АдресЗначения = Неопределено;
			Иначе
				АдресЗначения = ПоместитьВоВременноеХранилище(ДанныеЗначения, Новый УникальныйИдентификатор);
			КонецЕсли;
			Результат[КлючИЗначение.Ключ] = АдресЗначения;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура УбратьПометкуОтозванаЗавершение(Результат, Параметры) Экспорт

	Если Результат = КодВозвратаДиалога.Да Тогда
		
		Оповещение = Новый ОписаниеОповещения("ПроверкаПодписиМЧДЗавершение", ЭтотОбъект);
		КонтекстДиагностики = ОбработкаНеисправностейБЭДКлиент.НовыйКонтекстДиагностики();
		
		ПараметрыПроверкиМЧД = Новый Структура();
		ПараметрыПроверкиМЧД.Вставить("МЧД", Объект.Ссылка);
		ПараметрыПроверкиМЧД.Вставить("ТребуетсяПроверкаМЧДНаКлиенте", Истина);
		
		ДанныеДляПроверки = МашиночитаемыеДоверенностиКлиентСервер.НовыеДанныеДляПроверкиМЧД();
		ДанныеФайлаИПодписи = МашиночитаемыеДоверенностиВызовСервера.ДанныеФайлаДоверенностиИПодписи(Объект.Ссылка);
		ДанныеДляПроверки.ДанныеДоверенности = ДанныеФайлаИПодписи.ДанныеФайла;
		ДанныеДляПроверки.ДанныеПодписи = ДанныеФайлаИПодписи.ДанныеПодписи;
		ПараметрыПроверкиМЧД.Вставить("ДанныеДляПроверки", ДанныеДляПроверки);
		
		МашиночитаемыеДоверенностиКлиент.ПроверитьДанныеМЧД(Оповещение, ПараметрыПроверкиМЧД, КонтекстДиагностики);
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВводДатыОтзываЗавершение(Результат, Параметры) Экспорт

	Если Результат = Неопределено Или Результат = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	
	Объект.Отозвана = Истина;
	Объект.ДатаОтзыва = Результат;
	
	Модифицированность = Истина;
	УправлениеФормой();
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверкаПодписиМЧДЗавершение(РезультатПроверки, Параметры) Экспорт

	Если РезультатПроверки.Результат Тогда
		
		Объект.Отозвана = Ложь;
		Объект.ДатаОтзыва = Дата(1, 1, 1);

		Модифицированность = Истина;
		УправлениеФормой();
	
	Иначе
		
		ТекстСообщения = НСтр(
			"ru = 'Вернуть в работу не удалось. Криптографическая проверка подлинности данной доверенности не пройдена. 
			|Подпись неверна или доверенность была изменена после подписания. 
			|Создайте или загрузите новую доверенность'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
	
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция НачатьОбновлениеСтатусаИзРеестраФНС()
	
	ДанныеДоверенности = Новый Структура;
	ДанныеДоверенности.Вставить("НомерДоверенности", Объект.НомерДоверенности);
	ДанныеДоверенности.Вставить("СтатусВРеестреФНС", Объект.СтатусВРеестреФНС);
	ДанныеДоверенности.Вставить("ИдентификаторТранзакции", Объект.ИдентификаторТранзакции);
	ДанныеДоверенности.Вставить("ДоверительЮЛ_ИНН", Объект.ДоверительЮЛ_ИНН);
	ДанныеДоверенности.Вставить("ДоверительФЛ_ИНН", Объект.ДоверительФЛ_ИНН);
	ДанныеДоверенности.Вставить("ДатаОтзыва", Объект.ДатаОтзыва);
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияФункции(УникальныйИдентификатор);
	Возврат ДлительныеОперации.ВыполнитьФункцию
		(ПараметрыВыполнения, "Справочники.МашиночитаемыеДоверенностиОрганизаций.ОбновитьСтатусМЧДИзРеестраФНС", ДанныеДоверенности);
	
КонецФункции
	
&НаКлиенте
Процедура ПриЗавершенииОбновленияСтатусаВРеестреФНС(Результат, ДополнительныеПараметры) Экспорт

	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Ошибка" Тогда
		ВызватьИсключение Результат.КраткоеПредставлениеОшибки;
	КонецЕсли;
	
	Настройки = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
	УдалитьИзВременногоХранилища(Результат.АдресРезультата);
	
	Если Настройки.СтраницаНеНайдена Тогда
		ТекстСообщения = НСтр("ru='Не удалось установить связь с сервером ФНС. Повторите попытку позже.'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);	
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Настройки.СтатусВРеестреФНС) Тогда
		Объект.СтатусВРеестреФНС = Настройки.СтатусВРеестреФНС;
		Объект.ДатаОбновленияСтатуса = ОбщегоНазначенияКлиент.ДатаСеанса();
		Если Настройки.СтатусВРеестреФНС = 
			ПредопределенноеЗначение("Перечисление.СтатусыМашиночитаемойДоверенностиВРеестреФНС.Отозвано") Тогда
			Объект.ДатаОтзыва = Настройки.ДатаОтзыва;
			Объект.Отозвана = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если Не Записать() Тогда
		ТекстСообщения = НСтр("ru='Не удалось записать элемент справочника.'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
	УправлениеФормой();
 
КонецПроцедуры

#КонецОбласти