#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	ЗаписатьПолномочия(ТекущийОбъект);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);
	
	Элементы.ГруппаИнОргДовер.Видимость = Ложь;
	Элементы.ГруппаФЛДовер.Видимость = Ложь;
	
	ТипыОрганизацииПредставителяМЧД = Новый Массив(); 
	ЭлектронноеВзаимодействиеПереопределяемый.ПолучитьТипыОрганизацииПредставителяМЧД(
		ТипыОрганизацииПредставителяМЧД);
	НашеОписание = Новый ОписаниеТипов(ТипыОрганизацииПредставителяМЧД);
	Элементы.РеквизитПредставительОрганизация.ОграничениеТипа = НашеОписание; 
	РеквизитПредставительОрганизация = НашеОписание.ПривестиЗначение(РеквизитПредставительОрганизация); 
	
	ЭтоНоваяЗапись = Параметры.Ключ.Пустая();
	
	Если ЭтоНоваяЗапись Тогда
		
		УстановитьЗаголовокФормы(ЭтоНоваяЗапись);
		
		Объект.Подписана = Ложь;
		Объект.СтатусВРеестреФНС = Перечисления.СтатусыМашиночитаемойДоверенностиВРеестреФНС.ПустаяСсылка();
		Объект.ДатаОтправки = Неопределено;
		Объект.ДатаОтправкиЗаявленияНаОтзыв = Неопределено;
		Объект.ДатаОбновленияСтатуса = Неопределено;
		Объект.ИдентификаторТранзакции = "";
		Объект.СтатусОшибки = 0;
		Объект.ТекстОшибки = "";
		Объект.КодОшибки = "";
		Объект.ИмяФайлаВыгрузка = "";
		Объект.ИмяФайлаЗаявленияНаОтзыв = "";
		Объект.ОтпечатокСертификата = "";
		
		Если Объект.Полномочия.Количество() = 0 Тогда
			
		СтрокаПолномочийПоУмолчанию = Объект.Полномочия.Добавить();
		СтрокаПолномочийПоУмолчанию.Описание = 
			МашиночитаемыеДоверенностиКлиентСервер.ПредставлениеНеограниченныхПолномочий();
		КонецЕсли;
		
	КонецЕсли;
	
	ОбновитьСостояниеПриОткрытии = Параметры.ОбновитьСостояниеПриОткрытии;
	
	СвойстваОрганизации = Неопределено;
	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		СвойстваОрганизации = ПолучитьСвойстваОрганизации(Объект.Организация);
	КонецЕсли;
	Доверитель_ЮридическоеЛицо = НЕ ЗначениеЗаполнено(СвойстваОрганизации) ИЛИ СвойстваОрганизации.ЭтоЮридическоеЛицо;
	
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("Владелец", Перечисления.СубъектыДоверенности.ДоверительРук);
	СтрокиФИО = Объект.ФИО.НайтиСтроки(СтруктураПоиска);
	РеквизитДоверительФизЛицоФИО = ?(СтрокиФИО.Количество() <> 0, ПолучитьПредставлениеФИО(СтрокиФИО[0]), "");
	
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("Владелец", Перечисления.СубъектыДоверенности.ПредставительФЛ);
	СтрокиФИО = Объект.ФИО.НайтиСтроки(СтруктураПоиска);
	ПредставительФЛ_ФИО = ?(СтрокиФИО.Количество() <> 0, ПолучитьПредставлениеФИО(СтрокиФИО[0]), "");
	
	СтрокиУдостоверений = Объект.УдостоверенияЛичности.НайтиСтроки(СтруктураПоиска);
	ПредставительФЛ_Удостоверение = ?(СтрокиУдостоверений.Количество() <> 0,
		ПолучитьПредставлениеУдостоверение(СтрокиУдостоверений[0]), "");
	
	КоличествоПолномочий = 25;
	ИспользоватьРеестрДоверенностейФНС = МашиночитаемыеДоверенности.ИспользоватьРеестрДоверенностейФНС();
	ПолучитьСсылкиНаСтороныДоверенности();
	Элементы.РеквизитДоверительФизЛицо.Видимость = Не ТипЗнч(РеквизитДоверительФизЛицо) = Тип("Строка");
	Элементы.РеквизитПредставительФизЛицо.Видимость = Не ТипЗнч(РеквизитДоверительФизЛицо) = Тип("Строка");
	
	УправлениеЭлементамиФормы(ЭтотОбъект);
	
	ВидимостьКомандВыгрузки = Объект.СтатусВРеестреФНС = 
		Перечисления.СтатусыМашиночитаемойДоверенностиВРеестреФНС.ОтправленоЗаявлениеНаОтзыв
			Или Объект.СтатусВРеестреФНС = Перечисления.СтатусыМашиночитаемойДоверенностиВРеестреФНС.Отозвано;
	Элементы.ФормаВыгрузитьЗаявлениеНаОтмену.Видимость = ВидимостьКомандВыгрузки;
	Элементы.ФормаВыгрузитьПодписьЗаявленияНаОтмену.Видимость = ВидимостьКомандВыгрузки;
	
	// ЭлектронноеВзаимодействие.ОбменСКонтрагентами
	ПараметрыЭДОПриСоздании = ОбменСКонтрагентами.ПараметрыПриСозданииНаСервере_ФормаДокумента();
	ПараметрыЭДОПриСоздании.Форма = ЭтотОбъект;
	ПараметрыЭДОПриСоздании.ДокументСсылка = Объект.Ссылка;
	ПараметрыЭДОПриСоздании.КонтроллерСостояниеЭДО = Элементы.ПредставлениеСостоянияЭДО;
	ПараметрыЭДОПриСоздании.ГруппаСостояниеЭДО = Элементы.ГруппаСостояниеЭДО;
	ПараметрыЭДОПриСоздании.СкрыватьСостояниеНеНачатогоЭДО = Истина;
	ОбменСКонтрагентами.ПриСозданииНаСервере_ФормаДокумента(ПараметрыЭДОПриСоздании);
	// Конец ЭлектронноеВзаимодействие.ОбменСКонтрагентами
		
	ЦветФонаВниманиеМЧД = ЦветаСтиля.ЦветФонаВниманиеМЧД;
	ЦветФонаНедействительнаяМЧД = ЦветаСтиля.ЦветФонаНедействительнаяМЧД;
	ЦветФонаДействительнаяМЧД = ЦветаСтиля.ЦветФонаДействительнаяМЧД;
	
	Если ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
		Правило = РегистрыСведений.ПравилаПроверкиПолномочийПоМЧД.ПравилоПроверки(Параметры.ЗначениеКопирования);
	КонецЕсли;
	
	Справочники.ПравилаПроверкиПолномочийМЧД.ПриСозданииНаСервереФормыНастроек(ЭтотОбъект);
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Справочники.ПравилаПроверкиПолномочийМЧД.ПриЧтенииНастроек(Объект, ЭтотОбъект);
	КонецЕсли;
	
	Если ЭтоНоваяЗапись Тогда
		Правило = Справочники.ПравилаПроверкиПолномочийМЧД.ПустаяСсылка();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	Справочники.ПравилаПроверкиПолномочийМЧД.ПриЧтенииНастроек(ТекущийОбъект, ЭтотОбъект);
	УстановитьЗаголовокФормы();
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// ЭлектронноеВзаимодействие.ОбменСКонтрагентами
	ПараметрыЭДОПриСоздании = ОбменСКонтрагентами.ПараметрыПриЧтенииНаСервере_ФормаДокумента();
	ПараметрыЭДОПриСоздании.Форма = ЭтотОбъект;
	ПараметрыЭДОПриСоздании.ДокументСсылка = Объект.Ссылка;
	ПараметрыЭДОПриСоздании.КонтроллерСостояниеЭДО = Элементы.ПредставлениеСостоянияЭДО;
	ПараметрыЭДОПриСоздании.ГруппаСостояниеЭДО = Элементы.ГруппаСостояниеЭДО;
	ОбменСКонтрагентами.ПриЧтенииНаСервере_ФормаДокумента(ПараметрыЭДОПриСоздании);
	// Конец ЭлектронноеВзаимодействие.ОбменСКонтрагентами
	
	УправлениеЭлементамиФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	Элементы.Техподдержка.Заголовок = МашиночитаемыеДоверенностиКлиент.СформироватьГиперссылкуПроМЧД();

	Если ЭтоНоваяЗапись Тогда
		МашиночитаемыеДоверенностиКлиент.ПолучитьНомерМЧД(,, ЭтотОбъект);
		Объект.ПолномочияОграничены =
			НЕ МашиночитаемыеДоверенностиКлиентСервер.ЭтоПолныеПолномочия(Объект.Полномочия);
	ИначеЕсли ОбновитьСостояниеПриОткрытии Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ОбновитьОтправкуЗавершение", ЭтотОбъект);
		МашиночитаемыеДоверенностиКлиент.ОбновитьСостояниеВРеестреФНС(ОписаниеОповещения,, ЭтотОбъект);
	КонецЕсли;
	
	ИнтерфейсДокументовЭДОКлиент.ОформитьГруппуСостоянияИСтатусыМЧД(ЭтотОбъект, 
		Объект.Подписана, Объект.Верна, Объект.Отозвана, Объект.ДатаОтзыва, Объект.СтатусВРеестреФНС);
	
	МашиночитаемыеДоверенностиКлиент.СформироватьЗаголовокВкладкиПолномочия(ЭтотОбъект);
	Элементы.ГруппаПроверкаПолномочий.Видимость = Объект.ПолномочияОграничены;
	Элементы.НадписьПредупреждение.Заголовок = МашиночитаемыеДоверенностиКлиент.ПредупреждениеОбОтсутствииНастройки();
	ОтобразитьПредупреждениеПолномочий();
	МашиночитаемыеДоверенностиКлиент.СформироватьЗаголовокВкладкиПолномочия(ЭтотОбъект);
	МашиночитаемыеДоверенностиКлиент.ОтобразитьВариантПроверки(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// ЭлектронноеВзаимодействие.ОбменСКонтрагентами
	ПараметрыОповещения = ОбменСКонтрагентамиКлиент.ПараметрыОповещенияЭДО_ФормаДокумента();
	ПараметрыОповещения.Форма = ЭтотОбъект;
	ПараметрыОповещения.ДокументСсылка = Объект.Ссылка;
	ПараметрыОповещения.КонтроллерСостояниеЭДО = Элементы.ПредставлениеСостоянияЭДО;
	ПараметрыОповещения.ГруппаСостояниеЭДО = Элементы.ГруппаСостояниеЭДО;
	ОбменСКонтрагентамиКлиент.ОбработкаОповещения_ФормаДокумента(ИмяСобытия, Параметр, Источник, ПараметрыОповещения);
	// Конец ЭлектронноеВзаимодействие.ОбменСКонтрагентами
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	УстановитьЗаголовокФормы();
	УправлениеЭлементамиФормы(ЭтотОбъект);
	Справочники.ПравилаПроверкиПолномочийМЧД.ЗаписатьПравило(ТекущийОбъект.Ссылка, ЭтотОбъект);
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ИнтерфейсДокументовЭДОКлиент.ОформитьГруппуСостоянияИСтатусыМЧД(ЭтотОбъект, 
		Объект.Подписана, Объект.Верна, Объект.Отозвана, Объект.ДатаОтзыва, Объект.СтатусВРеестреФНС);
		
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)

	НепроверяемыеРеквизиты = Новый Массив;
	ЕстьДанныеПредставителя = Ложь;

	ЭтоФизЛицо = ИнтеграцияЭДО.ЭтоФизЛицо(Объект.Организация);
	
	Если Не Объект.ДоверительЮЛ_ИностраннаяОрганизация
		И Не ЭтоФизЛицо
		И ПустаяСтрока(Объект.ЛицоБезДовФЛ_Должность) Тогда
		Отказ = Истина;
		ТекстСообщения = НСтр("ru = 'Не заполнена должность ФЛ доверителя.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , "Объект.ЛицоБезДовФЛ_Должность");
		НепроверяемыеРеквизиты.Добавить("ЛицоБезДовФЛ_Должность");
	КонецЕсли;
	
	Для Каждого СтрокаТЧ Из Объект.ФИО Цикл
		
	 	Если СтрокаТЧ.Владелец = Перечисления.СубъектыДоверенности.ПредставительФЛ Тогда
	 		
	 		ЕстьДанныеПредставителя = Истина;

	 		Если ПустаяСтрока(СтрокаТЧ.Фамилия) Тогда
				Отказ = Истина;
				ТекстСообщения = НСтр("ru = 'Не заполнена фамилия представителя.'");
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , "РеквизитПредставительФизЛицо");
	 		КонецЕсли;

	 		Если ПустаяСтрока(СтрокаТЧ.Имя) Тогда
				Отказ = Истина;
				ТекстСообщения = НСтр("ru = 'Не заполнено имя представителя.'");
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , "РеквизитПредставительФизЛицо");
	 		КонецЕсли;
	 		
	 		Если Отказ Тогда
	 			НепроверяемыеРеквизиты.Добавить("РеквизитПредставительФизЛицо");
	 		КонецЕсли;
	 		
	 		Прервать;

	 	КонецЕсли;
	 	
	КонецЦикла;
	
	Если Не ЕстьДанныеПредставителя Тогда
		Отказ = Истина;
		ТекстСообщения = НСтр("ru = 'Не выбран представитель.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , "РеквизитПредставительФизЛицо");
		НепроверяемыеРеквизиты.Добавить("РеквизитПредставительФизЛицо");
	КонецЕсли;
	
	НетДокументаПредставителя = Истина;
	
	Для Каждого СтрокаТЧ Из Объект.УдостоверенияЛичности Цикл
		
	 	Если СтрокаТЧ.Владелец = Перечисления.СубъектыДоверенности.ПредставительФЛ Тогда
	 		
	 		НетДокументаПредставителя = Ложь;
	 		
	 		Если ПустаяСтрока(СтрокаТЧ.ВыдДок) Тогда
				Отказ = Истина;
				ТекстСообщения = НСтр("ru = 'Не заполнен орган, выдавший документ.'");
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , "ПредставительФЛ_Удостоверение");
	 		КонецЕсли;
	 		
		 	Если НЕ ЗначениеЗаполнено(СтрокаТЧ.ДатаДок) Тогда
				Отказ = Истина;
				ТекстСообщения = НСтр("ru = 'Не заполнена дата выдачи документа.'");
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , "ПредставительФЛ_Удостоверение");
		 	КонецЕсли;
		 	
		 	Если ПустаяСтрока(СтрокаТЧ.НомДок) Тогда
				Отказ = Истина;
				ТекстСообщения = НСтр("ru = 'Не заполнен номер документа.'");
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , "ПредставительФЛ_Удостоверение");
		 	КонецЕсли;
		 	
		 	Если ПустаяСтрока(СтрокаТЧ.СерДок) Тогда
				Отказ = Истина;
				ТекстСообщения = НСтр("ru = 'Не заполнена серия документа.'");
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , "ПредставительФЛ_Удостоверение");
		 	КонецЕсли;
	
		 	Если ПустаяСтрока(СтрокаТЧ.КодВыдДок) Тогда
				Отказ = Истина;
				ТекстСообщения = НСтр("ru = 'Не заполнен код подразделения.'");
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , "ПредставительФЛ_Удостоверение");
		 	КонецЕсли;
	
		 	Если ПустаяСтрока(СтрокаТЧ.ВидДок) Тогда
				Отказ = Истина;
				ТекстСообщения = НСтр("ru = 'Не заполнен вид документа.'");
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , "ПредставительФЛ_Удостоверение");
		 	КонецЕсли;

		 	Если Отказ Тогда
		 		НепроверяемыеРеквизиты.Добавить("ПредставительФЛ_Удостоверение");
		 	КонецЕсли;
		 	
		 	Прервать;
		 	
	 	КонецЕсли;
	 	
	КонецЦикла;
	
	Если ЕстьДанныеПредставителя И НетДокументаПредставителя Тогда
		Отказ = Истина;
		ТекстСообщения = НСтр("ru = 'Не заполнен документ представителя.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , "ПредставительФЛ_Удостоверение");
	КонецЕсли;
	
 	Если ПустаяСтрока(Объект.ПредставительФЛ_ИНН) Тогда
		Отказ = Истина;
		ТекстСообщения = НСтр("ru = 'Не заполнен ИНН представителя.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , "Объект.ПредставительФЛ_ИНН");
		НепроверяемыеРеквизиты.Добавить("ПредставительФЛ_ИНН");
 	КонецЕсли;

 	Если НЕ ЗначениеЗаполнено(Объект.ПредставительФЛ_ДатаРождения) Тогда
		Отказ = Истина;
		ТекстСообщения = НСтр("ru = 'Не заполнена дата рождения представителя.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , "Объект.ПредставительФЛ_ДатаРождения");
		НепроверяемыеРеквизиты.Добавить("ПредставительФЛ_ДатаРождения");
 	КонецЕсли;
	
 	Если Объект.ПредставительФЛ_Гражданство = Справочники.СтраныМира.Россия
 		И ПустаяСтрока(Объект.ПредставительФЛ_СНИЛС) Тогда
		Отказ = Истина;
		ТекстСообщения = НСтр("ru = 'Не заполнен СНИЛС представителя.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , "Объект.ПредставительФЛ_СНИЛС");
		НепроверяемыеРеквизиты.Добавить("ПредставительФЛ_СНИЛС");
 	КонецЕсли;
 	
 	НеУказанДоверитель = Истина;
 	
 	Если НЕ ЭтоФизЛицо Тогда
 		
 		НеУказанДоверитель = Ложь;
 		
	 	Если ПустаяСтрока(Объект.ЛицоБезДовФЛ_ОснованиеПолномочий) Тогда
			Отказ = Истина;
			ТекстСообщения = НСтр("ru = 'Не заполнено основание полномочий физлица доверителя.'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , "Объект.ЛицоБезДовФЛ_ОснованиеПолномочий");
			НепроверяемыеРеквизиты.Добавить("ЛицоБезДовФЛ_ОснованиеПолномочий");
	 	КонецЕсли;
 		
	 	Если ПустаяСтрока(Объект.ДоверительЮЛ_КПП) Тогда
			Отказ = Истина;
			ТекстСообщения = НСтр("ru = 'Не заполнен КПП организации-доверителя.'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , "Объект.ДоверительЮЛ_КПП");
			НепроверяемыеРеквизиты.Добавить("ДоверительЮЛ_КПП");
	 	КонецЕсли;

	 	Если ПустаяСтрока(Объект.ДоверительЮЛ_ОГРН) Тогда
			Отказ = Истина;
			ТекстСообщения = НСтр("ru = 'Не заполнен ОГРН организации-доверителя.'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , "Объект.ДоверительЮЛ_ОГРН");
			НепроверяемыеРеквизиты.Добавить("ДоверительЮЛ_ОГРН");
	 	КонецЕсли;

	 	Если ПустаяСтрока(Объект.ДоверительЮЛ_Адр) Тогда
			Отказ = Истина;
			ТекстСообщения = НСтр("ru = 'Не заполнен адрес организации-доверителя.'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , "Объект.ДоверительЮЛ_Адр");
			НепроверяемыеРеквизиты.Добавить("ДоверительЮЛ_Адр");
	 	КонецЕсли;

	 	Если ПустаяСтрока(Объект.ЛицоБезДовФЛ_ИНН) Тогда
			Отказ = Истина;
			ТекстСообщения = НСтр("ru = 'Не заполнен ИНН физлица доверителя.'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , "Объект.ЛицоБезДовЮЛ_ИНН");
			НепроверяемыеРеквизиты.Добавить("ЛицоБезДовЮЛ_ИНН");
	 	КонецЕсли;

	 	Если НЕ ЗначениеЗаполнено(Объект.ЛицоБезДовФЛ_Гражданство) Тогда
			Отказ = Истина;
			ТекстСообщения = НСтр("ru = 'Не заполнено гражданство физлица доверителя.'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , "Объект.ЛицоБезДовФЛ_Гражданство");
			НепроверяемыеРеквизиты.Добавить("ЛицоБезДовФЛ_Гражданство");
	 	КонецЕсли;

	 	Если НЕ ЗначениеЗаполнено(Объект.ЛицоБезДовФЛ_ДатаРождения) Тогда
			Отказ = Истина;
			ТекстСообщения = НСтр("ru = 'Не заполнена дата рождения физлица доверителя.'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , "Объект.ЛицоБезДовФЛ_ДатаРождения");
			НепроверяемыеРеквизиты.Добавить("ЛицоБезДовФЛ_ДатаРождения");
	 	КонецЕсли;

 	КонецЕсли;

 	Если НЕ ПустаяСтрока(Объект.ДоверительФЛ_ИНН) Тогда
 		
 		НеУказанДоверитель = Ложь;
 		
 		Если ПустаяСтрока(Объект.ДоверительФЛ_ОГРН) Тогда
			Отказ = Истина;
			ТекстСообщения = НСтр("ru = 'Не заполнен ОГРН доверителя.'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , "Объект.ДоверительФЛ_ОГРН");
			НепроверяемыеРеквизиты.Добавить("ДоверительФЛ_ОГРН");
 		КонецЕсли;

 		Если ПустаяСтрока(Объект.ДоверительФЛ_СНИЛС) Тогда
			Отказ = Истина;
			ТекстСообщения = НСтр("ru = 'Не заполнен СНИЛС доверителя.'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , "Объект.ДоверительФЛ_СНИЛС");
			НепроверяемыеРеквизиты.Добавить("ДоверительФЛ_СНИЛС");
 		КонецЕсли;

 		Если ПустаяСтрока(Объект.ДоверительФЛ_Гражданство) Тогда
			Отказ = Истина;
			ТекстСообщения = НСтр("ru = 'Не заполнено гражданство доверителя.'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , "Объект.ДоверительФЛ_Гражданство");
			НепроверяемыеРеквизиты.Добавить("ДоверительФЛ_Гражданство");
 		КонецЕсли;

 		Если НЕ ЗначениеЗаполнено(Объект.ДоверительФЛ_ДатаРождения) Тогда
			Отказ = Истина;
			ТекстСообщения = НСтр("ru = 'Не заполнена дата рождения доверителя.'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , "Объект.ДоверительФЛ_ДатаРождения");
			НепроверяемыеРеквизиты.Добавить("ДоверительФЛ_ДатаРождения");
 		КонецЕсли;

 	КонецЕсли;

 	Если НеУказанДоверитель Тогда
		Отказ = Истина;
		ТекстСообщения = НСтр("ru = 'Не указан доверитель.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , "Объект.Организация");
		НепроверяемыеРеквизиты.Добавить("Организация");
 	КонецЕсли;
	
	Если Не Объект.Подписана И Объект.Полномочия.Количество() = 0 Тогда
		Отказ = Истина;
		ТекстСообщения = НСтр("ru = 'Не указаны полномочия.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , "Объект.Полномочия");
		НепроверяемыеРеквизиты.Добавить("Объект.Полномочия");
	КонецЕсли; 
 	
 	Если Объект.Полномочия.Количество() > 0 Тогда
		Для Каждого СтрокаПолномочий Из Объект.Полномочия Цикл
			Если Не ЗначениеЗаполнено(СтрокаПолномочий.Описание) Тогда 
				
				Индекс = Объект.Полномочия.Индекс(СтрокаПолномочий);
				СтроковоеПредставлениеОбъектаПоИндексу = 
					СтрШаблон("Объект.Полномочия[%1].Описание", Индекс);
				
				Отказ = Истина;
				ТекстОшибки = НСтр("ru = 'В строке %1 не указаны полномочия.'"); 
				ТекстСообщения = СтрШаблон(ТекстОшибки, Индекс + 1);
				
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , СтроковоеПредставлениеОбъектаПоИндексу);
				НепроверяемыеРеквизиты.Добавить(СтроковоеПредставлениеОбъектаПоИндексу); 
				
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если Не Объект.Подписана И Объект.Полномочия.Количество() > 0 Тогда
		
		НайденныеСтрокиДублей = Новый Массив;
		НайденныеСтрокиПолныхПолномочий = Новый Массив;
		
		Для Каждого СтрокаПолномочий Из Объект.Полномочия Цикл 
			
			Если Не НайденныеСтрокиДублей.Найти(СтрокаПолномочий.НомерСтроки) = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			ОтборСтрок = Новый Структура("Описание", СтрокаПолномочий.Описание);
			СтрокиСОднимОписанием = Объект.Полномочия.НайтиСтроки(ОтборСтрок);
			ЕстьДублиСтрок = (СтрокиСОднимОписанием.Количество() > 1);
			
			Если ЕстьДублиСтрок Тогда
				Для Каждого ДубльСтроки Из СтрокиСОднимОписанием Цикл
					НайденныеСтрокиДублей.Добавить(ДубльСтроки.НомерСтроки);	
				КонецЦикла;
			КонецЕсли;
			
			Если МашиночитаемыеДоверенностиКлиентСервер.ЭтоТекстПолныхПолномочий(СтрокаПолномочий.Описание) Тогда
				НайденныеСтрокиПолныхПолномочий.Добавить(СтрокаПолномочий.НомерСтроки);	
			КонецЕсли;

		КонецЦикла;
		
		Если НайденныеСтрокиДублей.Количество() > 0 Тогда
			Отказ = Истина;
			НомераДублейСтрок = СтрСоединить(НайденныеСтрокиДублей, ", ");
			
			ТекстОшибки = НСтр("ru = 'Дублируется текст полномочий в строках %1.'");
			ТекстСообщения = СтрШаблон(ТекстОшибки, НомераДублейСтрок);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , "Объект.Полномочия");
		КонецЕсли;
		
		Если НайденныеСтрокиПолныхПолномочий.Количество() > 1 Тогда
			Отказ = Истина;
			НомераДублейСтрокПолныхПолномочий = СтрСоединить(НайденныеСтрокиПолныхПолномочий, ", ");
			
			ТекстОшибки = НСтр("ru = 'Полные полномочия дублируются в строках %1.'");
			ТекстСообщения = СтрШаблон(ТекстОшибки, НомераДублейСтрокПолныхПолномочий);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , "Объект.Полномочия");
		КонецЕсли;
	КонецЕсли;
	
 	Если НепроверяемыеРеквизиты.Количество() > 0 Тогда
 		ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, НепроверяемыеРеквизиты);
 	КонецЕсли;
 	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТекстСкриптаПриИзменении(Элемент)
	МашиночитаемыеДоверенностиКлиент.СформироватьЗаголовокВкладкиПолномочия(ЭтотОбъект);
	ОтобразитьПредупреждениеПолномочий();
КонецПроцедуры

&НаКлиенте
Процедура ВариантПроверкиПриИзменении(Элемент)
	МашиночитаемыеДоверенностиКлиент.ОтобразитьВариантПроверки(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура РеквизитПредставительОрганизацияПриИзменении(Элемент)
	РеквизитПредставительОрганизацияПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура РеквизитПредставительФизЛицоПриИзменении(Элемент)
	РеквизитПредставительФизЛицоПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	СвойстваОрганизации = ПолучитьСвойстваОрганизации(Объект.Организация);
	
	Доверитель_ЮридическоеЛицо = СвойстваОрганизации.ЭтоЮридическоеЛицо;
	Объект.ДоверительЮЛ_ИностраннаяОрганизация = НЕ СвойстваОрганизации.ЭтоРоссийскаяОрганизация;

	Объект.ДоверительЮЛ_НаимОрг = СвойстваОрганизации.Наименование;
	Объект.ДоверительЮЛ_ИНН = ?(СвойстваОрганизации.ЭтоЮридическоеЛицо, СвойстваОрганизации.ИНН , "");
	Объект.ДоверительЮЛ_КПП = ?(СвойстваОрганизации.ЭтоЮридическоеЛицо, СвойстваОрганизации.КПП , "");
	Объект.ДоверительЮЛ_ОГРН = ?(СвойстваОрганизации.ЭтоЮридическоеЛицо, СвойстваОрганизации.ОГРН , "");
	Объект.ДоверительЮЛ_СтрРег = ПредопределенноеЗначение("Справочник.СтраныМира.ПустаяСсылка");
	Объект.ДоверительЮЛ_НаимРегОрг = "";
	Объект.ДоверительЮЛ_РегНомер = "";
	
	Объект.ДоверительЮЛ_АдрXML = СвойстваОрганизации.АдресXML;
	Если ПустаяСтрока(Объект.ДоверительЮЛ_АдрXML) Тогда
		Объект.ДоверительЮЛ_Адр = "";
	Иначе
		Объект.ДоверительЮЛ_Адр = ПредставлениеКонтактнойИнформации(Объект.ДоверительЮЛ_АдрXML);
	КонецЕсли;
	
	СубъектДоверенности = ?(Доверитель_ЮридическоеЛицо,
		ПредопределенноеЗначение("Перечисление.СубъектыДоверенности.ДоверительРук"),
		ПредопределенноеЗначение("Перечисление.СубъектыДоверенности.ДоверительФЛ"));
	СтрокиФИО = Объект.ФИО.НайтиСтроки(Новый Структура("Владелец", СубъектДоверенности));
	КоличествоСтрокФИО = СтрокиФИО.Количество();

	ЕстьДанныеФИО = НЕ ПустаяСтрока(СвойстваОрганизации.Фамилия);
	
	Если КоличествоСтрокФИО = 0 Тогда
		Если ЕстьДанныеФИО Тогда
			СтрокаФИО = Объект.ФИО.Добавить();
			СтрокаФИО.Владелец = СубъектДоверенности;
		КонецЕсли;
	Иначе
		Если ЕстьДанныеФИО Тогда
			СтрокаФИО = СтрокиФИО[0];
		Иначе
			Для НомерСКонца = 1 По КоличествоСтрокФИО Цикл
				Объект.ФИО.Удалить(СтрокиФИО[КоличествоСтрокФИО - НомерСКонца]);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	Если ЕстьДанныеФИО Тогда
		СтрокаФИО.Фамилия = СвойстваОрганизации.Фамилия;
		СтрокаФИО.Имя = СвойстваОрганизации.Имя;
		СтрокаФИО.Отчество = СвойстваОрганизации.Отчество;
	КонецЕсли;
	
	СтрокиУдостоверений = Объект.УдостоверенияЛичности.НайтиСтроки(Новый Структура("Владелец", СубъектДоверенности));
	КоличествоСтрокУдостоверений = СтрокиУдостоверений.Количество();
	Если КоличествоСтрокУдостоверений <> 0 Тогда
		Для НомерСКонца = 1 По КоличествоСтрокУдостоверений Цикл
			Объект.УдостоверенияЛичности.Удалить(СтрокиУдостоверений[КоличествоСтрокУдостоверений - НомерСКонца]);
		КонецЦикла;
	КонецЕсли;
	
	Объект.ДоверительФЛ_ИНН = ?(СвойстваОрганизации.ЭтоЮридическоеЛицо, "", СвойстваОрганизации.ИНН);
	Объект.ДоверительФЛ_ОГРН = ?(СвойстваОрганизации.ЭтоЮридическоеЛицо, "", СвойстваОрганизации.ОГРН);
	Объект.ДоверительФЛ_СНИЛС = "";
	Объект.ДоверительФЛ_Гражданство = ПредопределенноеЗначение("Справочник.СтраныМира.ПустаяСсылка");
	Объект.ДоверительФЛ_ДатаРождения = '00010101';
	Объект.ДоверительФЛ_МестоРожд = "";
	
	Если ЗначениеЗаполнено(СвойстваОрганизации.РуководительФизлицо) Тогда
		
		РеквизитДоверительФизЛицо = СвойстваОрганизации.РуководительФизлицо;
		Объект.ЛицоБезДовФЛ_ИНН = СвойстваОрганизации.РуководительИНН;
		Объект.ЛицоБезДовФЛ_СНИЛС = СвойстваОрганизации.СНИЛС;
		Объект.ЛицоБезДовФЛ_Гражданство = СвойстваОрганизации.Гражданство;
		Объект.ЛицоБезДовФЛ_ДатаРождения = СвойстваОрганизации.ДатаРождения;
		Объект.ЛицоБезДовФЛ_ОснованиеПолномочий = СвойстваОрганизации.РуководительОснованиеПолномочий;
		
	Иначе
		
		РеквизитДоверительФизЛицо = Неопределено;
		Объект.ЛицоБезДовФЛ = Неопределено;
		Объект.ЛицоБезДовФЛ_ИНН = "";
		Объект.ЛицоБезДовФЛ_СНИЛС = "";
		Объект.ЛицоБезДовФЛ_Гражданство = ПредопределенноеЗначение("Справочник.СтраныМира.ПустаяСсылка");
		Объект.ЛицоБезДовФЛ_ДатаРождения = Неопределено;
		
	КонецЕсли;
	
	Объект.ЛицоБезДовФЛ_Должность =
		?(СвойстваОрганизации.ЭтоЮридическоеЛицо И НЕ Объект.ДоверительЮЛ_ИностраннаяОрганизация,
		СвойстваОрганизации.Должность,"");
	
	УправлениеЭлементамиФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияРеквизитыДоверителяНажатие(Элемент)
	
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("Доверитель_ЮридическоеЛицо", Доверитель_ЮридическоеЛицо);
	СтруктураДанных.Вставить("ДоверительЮЛ_РоссийскаяОрганизация", НЕ Объект.ДоверительЮЛ_ИностраннаяОрганизация);
	СтруктураДанных.Вставить("ДоверительЮЛ_НаимОрг", Объект.ДоверительЮЛ_НаимОрг);
	СтруктураДанных.Вставить("ДоверительЮЛ_ИНН", Объект.ДоверительЮЛ_ИНН);
	СтруктураДанных.Вставить("ДоверительЮЛ_КПП", Объект.ДоверительЮЛ_КПП);
	СтруктураДанных.Вставить("ДоверительЮЛ_ОГРН", Объект.ДоверительЮЛ_ОГРН);
	СтруктураДанных.Вставить("ДоверительЮЛ_СтрРег", Объект.ДоверительЮЛ_СтрРег);
	СтруктураДанных.Вставить("ДоверительЮЛ_НаимРегОрг", Объект.ДоверительЮЛ_НаимРегОрг);
	СтруктураДанных.Вставить("ДоверительЮЛ_РегНомер", Объект.ДоверительЮЛ_РегНомер);
	СтруктураДанных.Вставить("ДоверительЮЛ_Адр", Объект.ДоверительЮЛ_Адр);
	СтруктураДанных.Вставить("ДоверительЮЛ_АдрXML", Объект.ДоверительЮЛ_АдрXML);
	
	СубъектДоверенности = ?(Доверитель_ЮридическоеЛицо И Объект.ДоверительЮЛ_ИностраннаяОрганизация,
		ПредопределенноеЗначение("Перечисление.СубъектыДоверенности.ДоверительРук"),
		?(НЕ Доверитель_ЮридическоеЛицо,
		ПредопределенноеЗначение("Перечисление.СубъектыДоверенности.ДоверительФЛ"),
		Неопределено));
	СтрокиФИО = ?(СубъектДоверенности = Неопределено, Новый Массив,
		Объект.ФИО.НайтиСтроки(Новый Структура("Владелец", СубъектДоверенности)));
	СтруктураДанных.Вставить("ДоверительФЛ_Фамилия", ?(СтрокиФИО.Количество() <> 0, СтрокиФИО[0].Фамилия, ""));
	СтруктураДанных.Вставить("ДоверительФЛ_Имя", ?(СтрокиФИО.Количество() <> 0, СтрокиФИО[0].Имя, ""));
	СтруктураДанных.Вставить("ДоверительФЛ_Отчество", ?(СтрокиФИО.Количество() <> 0, СтрокиФИО[0].Отчество, ""));
	
	СубъектДоверенности = ?(НЕ Доверитель_ЮридическоеЛицо,
		ПредопределенноеЗначение("Перечисление.СубъектыДоверенности.ДоверительФЛ"),
		Неопределено);
	СтрокиУдостоверений = ?(СубъектДоверенности = Неопределено, Новый Массив,
		Объект.УдостоверенияЛичности.НайтиСтроки(Новый Структура("Владелец", СубъектДоверенности)));
	СтруктураДанных.Вставить("ДоверительФЛ_ВидДок", ?(СтрокиУдостоверений.Количество() <> 0,
		СтрокиУдостоверений[0].ВидДок, ""));
	СтруктураДанных.Вставить("ДоверительФЛ_СерДок", ?(СтрокиУдостоверений.Количество() <> 0,
		СтрокиУдостоверений[0].СерДок, ""));
	СтруктураДанных.Вставить("ДоверительФЛ_НомДок", ?(СтрокиУдостоверений.Количество() <> 0,
		СтрокиУдостоверений[0].НомДок, ""));
	СтруктураДанных.Вставить("ДоверительФЛ_ДатаДок", ?(СтрокиУдостоверений.Количество() <> 0,
		СтрокиУдостоверений[0].ДатаДок, Неопределено));
	СтруктураДанных.Вставить("ДоверительФЛ_ВыдДок", ?(СтрокиУдостоверений.Количество() <> 0,
		СтрокиУдостоверений[0].ВыдДок, ""));
	СтруктураДанных.Вставить("ДоверительФЛ_КодВыдДок", ?(СтрокиУдостоверений.Количество() <> 0,
		СтрокиУдостоверений[0].КодВыдДок, ""));
	ДоверительФЛ_Удостоверение = ?(СтрокиУдостоверений.Количество() <> 0,
		ПолучитьПредставлениеУдостоверение(СтрокиУдостоверений[0]), "");
	СтруктураДанных.Вставить("ДоверительФЛ_Удостоверение", ДоверительФЛ_Удостоверение);
	
	СтруктураДанных.Вставить("ДоверительФЛ_ИНН", Объект.ДоверительФЛ_ИНН);
	СтруктураДанных.Вставить("ДоверительФЛ_ОГРН", Объект.ДоверительФЛ_ОГРН);
	СтруктураДанных.Вставить("ДоверительФЛ_СНИЛС", Объект.ДоверительФЛ_СНИЛС);
	СтруктураДанных.Вставить("ДоверительФЛ_Гражданство", Объект.ДоверительФЛ_Гражданство);
	СтруктураДанных.Вставить("ДоверительФЛ_Пол", Объект.ДоверительФЛ_Пол);
	СтруктураДанных.Вставить("ДоверительФЛ_ДатаРождения", Объект.ДоверительФЛ_ДатаРождения);
	СтруктураДанных.Вставить("ДоверительФЛ_МестоРожд", Объект.ДоверительФЛ_МестоРожд);
	
	СтруктураДанных.Вставить("ТолькоПросмотрФормы", ТолькоПросмотрФормы(ЭтотОбъект));
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ДекорацияРеквизитыДоверителяНажатиеЗавершение", ЭтотОбъект);
	ОткрытьФорму(
		"Справочник.МашиночитаемыеДоверенностиОрганизаций.Форма.ФормаДоверителя",
		Новый Структура("СтруктураДанных", СтруктураДанных),
		ЭтотОбъект,,,,
		ОписаниеОповещения,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияРеквизитыЛицаБезДоверенностиЮЛНажатие(Элемент)
	
	Если НЕ Доверитель_ЮридическоеЛицо ИЛИ Объект.ДоверительЮЛ_ИностраннаяОрганизация Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("ЛицоБезДовЮЛ_НаимОрг", 	Объект.ЛицоБезДовЮЛ_НаимОрг);
	СтруктураДанных.Вставить("ЛицоБезДовЮЛ_ИНН", 		Объект.ЛицоБезДовЮЛ_ИНН);
	СтруктураДанных.Вставить("ЛицоБезДовЮЛ_КПП", 		Объект.ЛицоБезДовЮЛ_КПП);
	СтруктураДанных.Вставить("ЛицоБезДовЮЛ_ОГРН", 		Объект.ЛицоБезДовЮЛ_ОГРН);
	СтруктураДанных.Вставить("ТолькоПросмотрФормы", 	ТолькоПросмотрФормы(ЭтотОбъект));

	ОписаниеОповещения = Новый ОписаниеОповещения("ДекорацияРеквизитыЛицаБезДоверенностиЮЛНажатиеЗавершение",
		ЭтотОбъект);
	ОткрытьФорму(
		"Справочник.МашиночитаемыеДоверенностиОрганизаций.Форма.ФормаЛицаБезДоверенностиЮЛ",
		Новый Структура("СтруктураДанных", СтруктураДанных),
		ЭтотОбъект,,,,
		ОписаниеОповещения,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияРеквизитыЛицаБезДоверенностиФЛНажатие(Элемент)
	
	Если НЕ Доверитель_ЮридическоеЛицо ИЛИ Объект.ДоверительЮЛ_ИностраннаяОрганизация Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураДанных = Новый Структура;
	СтрокиФИО = Объект.ФИО.НайтиСтроки(Новый Структура("Владелец",
		ПредопределенноеЗначение("Перечисление.СубъектыДоверенности.ДоверительРук")));
	СтруктураДанных.Вставить("ЛицоБезДовФЛ_Фамилия", ?(СтрокиФИО.Количество() <> 0, СтрокиФИО[0].Фамилия, ""));
	СтруктураДанных.Вставить("ЛицоБезДовФЛ_Имя", ?(СтрокиФИО.Количество() <> 0, СтрокиФИО[0].Имя, ""));
	СтруктураДанных.Вставить("ЛицоБезДовФЛ_Отчество", ?(СтрокиФИО.Количество() <> 0, СтрокиФИО[0].Отчество, ""));
	ФИО = ?(СтрокиФИО.Количество() <> 0, ПолучитьПредставлениеФИО(СтрокиФИО[0]), "");
	СтруктураДанных.Вставить("ЛицоБезДовФЛ_ФИО", ФИО);
	
	СтруктураДанных.Вставить("ЛицоБезДовФЛ_ИНН", Объект.ЛицоБезДовФЛ_ИНН);
	СтруктураДанных.Вставить("ЛицоБезДовФЛ_СНИЛС", Объект.ЛицоБезДовФЛ_СНИЛС);
	СтруктураДанных.Вставить("ЛицоБезДовФЛ_Гражданство", Объект.ЛицоБезДовФЛ_Гражданство);
	СтруктураДанных.Вставить("ЛицоБезДовФЛ_ДатаРождения", Объект.ЛицоБезДовФЛ_ДатаРождения);
	СтруктураДанных.Вставить("ЛицоБезДовФЛ_Должность", Объект.ЛицоБезДовФЛ_Должность);
	
	СтруктураДанных.Вставить("ТолькоПросмотрФормы", ТолькоПросмотрФормы(ЭтотОбъект));
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ДекорацияРеквизитыЛицаБезДоверенностиФЛНажатиеЗавершение",
		ЭтотОбъект);
	ОткрытьФорму(
		"Справочник.МашиночитаемыеДоверенностиОрганизаций.Форма.ФормаЛицаБезДоверенностиФЛ",
		Новый Структура("СтруктураДанных", СтруктураДанных),
		ЭтотОбъект,,,,
		ОписаниеОповещения,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ЛицоБезДовФЛНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если Не Доверитель_ЮридическоеЛицо Или Объект.ДоверительЮЛ_ИностраннаяОрганизация Тогда
		СтруктураДанных = Новый Структура;
		СтрокиФИО = Объект.ФИО.НайтиСтроки(Новый Структура("Владелец", ПредопределенноеЗначение(
			"Перечисление.СубъектыДоверенности.ДоверительФЛ")));
	Иначе
		СтруктураДанных = Новый Структура;
		СтрокиФИО = Объект.ФИО.НайтиСтроки(Новый Структура("Владелец", ПредопределенноеЗначение(
			"Перечисление.СубъектыДоверенности.ДоверительРук")));
	КонецЕсли;

	СтруктураДанных.Вставить("ЛицоБезДовФЛ_Фамилия", ?(СтрокиФИО.Количество() <> 0, СтрокиФИО[0].Фамилия, ""));
	СтруктураДанных.Вставить("ЛицоБезДовФЛ_Имя", ?(СтрокиФИО.Количество() <> 0, СтрокиФИО[0].Имя, ""));
	СтруктураДанных.Вставить("ЛицоБезДовФЛ_Отчество", ?(СтрокиФИО.Количество() <> 0, СтрокиФИО[0].Отчество, ""));
	ФИО = ?(СтрокиФИО.Количество() <> 0, ПолучитьПредставлениеФИО(СтрокиФИО[0]), "");
	СтруктураДанных.Вставить("ЛицоБезДовФЛ_ФИО", ФИО);

	СтруктураДанных.Вставить("ТолькоПросмотрФормы", ТолькоПросмотрФормы(ЭтотОбъект));

	ОписаниеОповещения = Новый ОписаниеОповещения("ДекорацияРеквизитыЛицаБезДоверенностиФЛНажатиеЗавершение",
		ЭтотОбъект);
	ОткрытьФорму(
		"Справочник.МашиночитаемыеДоверенностиОрганизаций.Форма.ФормаЛицаБезДоверенностиФЛ",
		Новый Структура("СтруктураДанных", СтруктураДанных), ЭтотОбъект, , , , ОписаниеОповещения,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура РеквизитДоверительФизЛицоПриИзменении(Элемент)
	РеквизитДоверительФизЛицоПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПредставительФЛ_ФИОНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтрокиФИО = Объект.ФИО.НайтиСтроки(Новый Структура("Владелец",
		ПредопределенноеЗначение("Перечисление.СубъектыДоверенности.ПредставительФЛ")));
	
	ПараметрыОткрытия = Новый Структура("Фамилия, Имя, Отчество", "", "", "");
	
	Если СтрокиФИО.Количество() > 0 Тогда
		
		ПараметрыОткрытия.Фамилия = СтрокиФИО[0].Фамилия;
		ПараметрыОткрытия.Имя = СтрокиФИО[0].Имя;
		ПараметрыОткрытия.Отчество = СтрокиФИО[0].Отчество;
		
	КонецЕсли;
	
	ПараметрыОткрытия.Вставить("СписокСвойств", "Фамилия, Имя, Отчество");
	
	ПараметрыОткрытия.Вставить("ТолькоПросмотрФормы", ТолькоПросмотрФормы(ЭтотОбъект));
	
	ОписаниеОповещенияОЗакрытии =
		Новый ОписаниеОповещения("ПредставительФЛ_ФИОНачалоВыбораЗавершение", ЭтотОбъект);
	
	ОткрытьФорму("Справочник.МашиночитаемыеДоверенностиОрганизаций.Форма.ФормаРедактированияФИО", ПараметрыОткрытия,
		ЭтотОбъект, , , , ОписаниеОповещенияОЗакрытии, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставительФЛ_ФИООчистка(Элемент, СтандартнаяОбработка)
	
	СтрокиФИО = Объект.ФИО.НайтиСтроки(Новый Структура("Владелец",
		ПредопределенноеЗначение("Перечисление.СубъектыДоверенности.ПредставительФЛ")));
	
	КоличествоСтрокФИО = СтрокиФИО.Количество();
	Для НомерСКонца = 1 По КоличествоСтрокФИО Цикл
		Объект.ФИО.Удалить(СтрокиФИО[КоличествоСтрокФИО - НомерСКонца]);
	КонецЦикла;
	
	ПредставительФЛ_ФИО = "";
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставительФЛ_УдостоверениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтрокиУдостоверений = Объект.УдостоверенияЛичности.НайтиСтроки(Новый Структура("Владелец",
		ПредопределенноеЗначение("Перечисление.СубъектыДоверенности.ПредставительФЛ")));
	
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("ДокументВид",
		?(СтрокиУдостоверений.Количество() <> 0, СтрокиУдостоверений[0].ВидДок, ""));
	СтруктураДанных.Вставить("ДокументСерия",
		?(СтрокиУдостоверений.Количество() <> 0, СтрокиУдостоверений[0].СерДок, ""));
	СтруктураДанных.Вставить("ДокументНомер",
		?(СтрокиУдостоверений.Количество() <> 0, СтрокиУдостоверений[0].НомДок, ""));
	СтруктураДанных.Вставить("ДокументДатаВыдачи",
		?(СтрокиУдостоверений.Количество() <> 0, СтрокиУдостоверений[0].ДатаДок, ""));
	СтруктураДанных.Вставить("ДокументКемВыдан",
		?(СтрокиУдостоверений.Количество() <> 0, СтрокиУдостоверений[0].ВыдДок, ""));
	СтруктураДанных.Вставить("ДокументКодПодразделения",
		?(СтрокиУдостоверений.Количество() <> 0, СтрокиУдостоверений[0].КодВыдДок, ""));
	СтруктураДанных.Вставить("ТолькоПросмотрФормы", ТолькоПросмотрФормы(ЭтотОбъект));
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПредставительФЛ_УдостоверениеНачалоВыбораЗавершение", ЭтотОбъект);
	ОткрытьФорму(
		"Справочник.МашиночитаемыеДоверенностиОрганизаций.Форма.ФормаВводаУдостоверения",
		Новый Структура("СтруктураДанных", СтруктураДанных),
		ЭтотОбъект,,,,
		ОписаниеОповещения,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставительФЛ_УдостоверениеОчистка(Элемент, СтандартнаяОбработка)
	
	СтрокиУдостоверений = Объект.УдостоверенияЛичности.НайтиСтроки(Новый Структура("Владелец",
		ПредопределенноеЗначение("Перечисление.СубъектыДоверенности.ПредставительФЛ")));
	
	КоличествоСтрокУдостоверений = СтрокиУдостоверений.Количество();
	Для НомерСКонца = 1 По КоличествоСтрокУдостоверений Цикл
		Объект.УдостоверенияЛичности.Удалить(СтрокиУдостоверений[КоличествоСтрокУдостоверений - НомерСКонца]);
	КонецЦикла;
	
	ПредставительФЛ_Удостоверение = "";
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СостояниеЭДОНажатие(Элемент, СтандартнаяОбработка)
	
	// ЭлектронноеВзаимодействие.ОбменСКонтрагентами
	ОбменСКонтрагентамиКлиент.СостояниеЭДОНажатие_ФормаДокумента(ЭтотОбъект, СтандартнаяОбработка);
	// Конец ЭлектронноеВзаимодействие.ОбменСКонтрагентами
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаОкончанияПриИзменении(Элемент)
	
	ДатыПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаВыдачиПриИзменении(Элемент)
	
	ДатыПриИзмененииНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДеревоОтбора

&НаКлиенте
Процедура ДеревоОтбораПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, ЭтоГруппа, Параметр)
	МашиночитаемыеДоверенностиКлиент.ДеревоОтбораПередНачаломДобавления(Элемент, Отказ, Элементы.ДеревоОтбораДанные);
КонецПроцедуры

&НаКлиенте
Процедура ДеревоОтбораПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	МашиночитаемыеДоверенностиКлиент.ДеревоОтбораПередОкончаниемРедактирования(
		Элемент, ОтменаРедактирования, ДеревоОтбора);
КонецПроцедуры

&НаКлиенте
Процедура ДеревоОтбораПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Элементы.ДеревоОтбора.ТекущиеДанные.Картинка = МашиночитаемыеДоверенностиКлиентСервер.НаборКартинок().Реквизит;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоОтбораПередНачаломИзменения(Элемент, Отказ)
	
	ДанныеСтроки = Элемент.ТекущиеДанные;
	ДополнительныеПараметры = Новый Структура("ДанныеСтроки", ДанныеСтроки);
	Оповещение = Новый ОписаниеОповещения("ПослеВводаЗначения", ЭтотОбъект, ДополнительныеПараметры);
	МашиночитаемыеДоверенностиКлиент.ДеревоОтбораПередНачаломИзменения(
		ДанныеСтроки, Отказ, Элементы.ДеревоОтбораДанные, Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоОтбораПередУдалением(Элемент, Отказ)
	
	ДанныеСтроки = Элементы.ДеревоОтбора.ТекущиеДанные;
	ИдентификаторСтроки = 0;
	МашиночитаемыеДоверенностиКлиент.ДеревоОтбораПередУдалением(
		ДанныеСтроки, Отказ, ИдентификаторСтроки, Модифицированность);
	СформироватьПредставлениеДанныхПоСтрокеДерева(ИдентификаторСтроки);
	МашиночитаемыеДоверенностиКлиент.СформироватьЗаголовокВкладкиПолномочия(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоОтбораДанныеПриИзменении(Элемент)
	
	Модифицированность = Истина;
	ДанныеСтроки = Элементы.ДеревоОтбора.ТекущиеДанные;
	
	Если ДанныеСтроки.ИдСтроки > 0 Тогда
		ДанныеСтроки.ИдСтроки = 0;
		Элементы.ДеревоОтбора.ЗакончитьРедактированиеСтроки(Ложь);
	КонецЕсли;
	
	СформироватьПредставлениеДанныхПоСтрокеДерева(ДанныеСтроки.ПолучитьРодителя().ПолучитьИдентификатор());
	МашиночитаемыеДоверенностиКлиент.СформироватьЗаголовокВкладкиПолномочия(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоОтбораПослеУдаления(Элемент)
	
	Модифицированность = Истина;
	МашиночитаемыеДоверенностиКлиент.СформироватьЗаголовокВкладкиПолномочия(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоОтбораПриАктивизацииСтроки(Элемент)
	МашиночитаемыеДоверенностиКлиент.ДеревоОтбораПриАктивизацииСтроки(Элемент);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПолномочия

&НаКлиенте
Процедура ПолномочияПриИзменении(Элемент)
	
	Объект.ПолномочияОграничены = НЕ МашиночитаемыеДоверенностиКлиентСервер.ЭтоПолныеПолномочия(Объект.Полномочия);
	Элементы.ГруппаПроверкаПолномочий.Видимость = Объект.ПолномочияОграничены;
	ОтобразитьПредупреждениеПолномочий();

КонецПроцедуры

&НаКлиенте
Процедура ПолномочияОписаниеИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	
	КоличествоСимволов = СтрДлина(Текст);

	КоличествоПереносовСтроки = СтрЧислоВхождений(Текст, Символы.ПС) * 2;
	ВсегоСимволов = КоличествоСимволов + КоличествоПереносовСтроки;

	Если ВсегоСимволов >= 1000 Тогда

		РазницаСимволов = ВсегоСимволов - 1000;
		
		ИтоговыйТекст = Лев(Текст, 1000 - РазницаСимволов);
		Элементы.Полномочия.ТекущиеДанные.Описание = ИтоговыйТекст;
		
		ТекстОшибки = НСтр("ru = 'В одной строке полномочий для корректной регистрации МЧД может быть не более одной тысячи символов. 
			|Проверьте и при необходимости добавьте новую строку и продолжите ввод.'");
		
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстОшибки);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ИзменитьЧастиФИО(Команда)
	
	Если Не Доверитель_ЮридическоеЛицо Или Объект.ДоверительЮЛ_ИностраннаяОрганизация Тогда
		СтруктураДанных = Новый Структура;
		СтрокиФИО = Объект.ФИО.НайтиСтроки(Новый Структура("Владелец", ПредопределенноеЗначение(
			"Перечисление.СубъектыДоверенности.ДоверительФЛ")));
	Иначе
		СтруктураДанных = Новый Структура;
		СтрокиФИО = Объект.ФИО.НайтиСтроки(Новый Структура("Владелец", ПредопределенноеЗначение(
			"Перечисление.СубъектыДоверенности.ДоверительРук")));
	КонецЕсли;

	СтруктураДанных.Вставить("ЛицоБезДовФЛ_Фамилия", ?(СтрокиФИО.Количество() <> 0, СтрокиФИО[0].Фамилия, ""));
	СтруктураДанных.Вставить("ЛицоБезДовФЛ_Имя", ?(СтрокиФИО.Количество() <> 0, СтрокиФИО[0].Имя, ""));
	СтруктураДанных.Вставить("ЛицоБезДовФЛ_Отчество", ?(СтрокиФИО.Количество() <> 0, СтрокиФИО[0].Отчество, ""));
	ФИО = ?(СтрокиФИО.Количество() <> 0, ПолучитьПредставлениеФИО(СтрокиФИО[0]), "");
	СтруктураДанных.Вставить("ЛицоБезДовФЛ_ФИО", ФИО);

	СтруктураДанных.Вставить("ТолькоПросмотрФормы", ТолькоПросмотрФормы(ЭтотОбъект));

	ОписаниеОповещения = Новый ОписаниеОповещения("ДекорацияРеквизитыЛицаБезДоверенностиФЛНажатиеЗавершение",
		ЭтотОбъект);
	ОткрытьФорму(
		"Справочник.МашиночитаемыеДоверенностиОрганизаций.Форма.ФормаЛицаБезДоверенностиФЛ",
		Новый Структура("СтруктураДанных", СтруктураДанных), ЭтотОбъект, , , , ОписаниеОповещения,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуПросмотра(Команда)

	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Ключ", Объект.Ссылка);

	ОткрытьФорму(
		"Справочник.МашиночитаемыеДоверенностиОрганизаций.Форма.ФормаПросмотра", ПараметрыФормы, ЭтотОбъект,
		УникальныйИдентификатор);

КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьЗаявлениеНаОтмену(Команда)

	Если Модифицированность ИЛИ Параметры.Ключ.Пустая() Тогда
		Записать();
	КонецЕсли;
	
	ЗначенияРеквизитов = ЗначенияРеквизитовОбъекта(Объект.Ссылка, "ИмяФайлаЗаявленияНаОтзыв, ФайлЗаявленияНаОтзыв");
	
	Если ЗначенияРеквизитов.ФайлЗаявленияНаОтзыв = Неопределено Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Заявление на отмену не отправлялось'"));
		Возврат;
	КонецЕсли;
	
	СохраняемыйФайл = Новый Структура;
	СохраняемыйФайл.Вставить("Адрес", ЗначенияРеквизитов.ФайлЗаявленияНаОтзыв);
	СохраняемыйФайл.Вставить("Имя", ЗначенияРеквизитов.ИмяФайлаЗаявленияНаОтзыв);
	ФайловаяСистемаКлиент.СохранитьФайл(Неопределено, СохраняемыйФайл.Адрес, СохраняемыйФайл.Имя);

КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьОтправленныйОтчет(Команда)

	Если Модифицированность ИЛИ Параметры.Ключ.Пустая() Тогда
		Записать();
	КонецЕсли;
	
	ЗначенияРеквизитов = ЗначенияРеквизитовОбъекта(Объект.Ссылка, "ИмяФайлаВыгрузка, XMLфайлМЧД");
	
	Если ЗначенияРеквизитов.XMLфайлМЧД = Неопределено Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Отчет не отправлялся'"));
		Возврат;
	КонецЕсли;
	
	СохраняемыйФайл = Новый Структура;
	СохраняемыйФайл.Вставить("Адрес", ЗначенияРеквизитов.XMLфайлМЧД);
	СохраняемыйФайл.Вставить("Имя", ЗначенияРеквизитов.ИмяФайлаВыгрузка);
	ФайловаяСистемаКлиент.СохранитьФайл(Неопределено, СохраняемыйФайл.Адрес, СохраняемыйФайл.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьПодпись(Команда)

	Если Модифицированность ИЛИ Параметры.Ключ.Пустая() Тогда
		Записать();
	КонецЕсли;
	
	ЗначенияРеквизитов = ЗначенияРеквизитовОбъекта(Объект.Ссылка, "ИмяФайлаВыгрузка, ЭлектроннаяПодпись");
	
	Если ЗначенияРеквизитов.ЭлектроннаяПодпись = Неопределено Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Отчет не отправлялся'"));
		Возврат;
	КонецЕсли;
	
	СохраняемыйФайл = Новый Структура;
	СохраняемыйФайл.Вставить("Адрес", ЗначенияРеквизитов.ЭлектроннаяПодпись);
	СохраняемыйФайл.Вставить("Имя", ЗначенияРеквизитов.ИмяФайлаВыгрузка + ".sig");
	ФайловаяСистемаКлиент.СохранитьФайл(Неопределено, СохраняемыйФайл.Адрес, СохраняемыйФайл.Имя);

КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьПодписьЗаявленияНаОтмену(Команда)

	Если Модифицированность ИЛИ Параметры.Ключ.Пустая() Тогда
		Записать();
	КонецЕсли;
	
	ЗначенияРеквизитов = ЗначенияРеквизитовОбъекта(Объект.Ссылка,
		"ИмяФайлаЗаявленияНаОтзыв, ЭлектроннаяПодписьЗаявленияНаОтзыв");
	
	Если ЗначенияРеквизитов.ЭлектроннаяПодписьЗаявленияНаОтзыв = Неопределено Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Заявление на отмену не отправлялось'"));
		Возврат;
	КонецЕсли;
	
	СохраняемыйФайл = Новый Структура;
	СохраняемыйФайл.Вставить("Адрес", ЗначенияРеквизитов.ЭлектроннаяПодписьЗаявленияНаОтзыв);
	СохраняемыйФайл.Вставить("Имя", ЗначенияРеквизитов.ИмяФайлаЗаявленияНаОтзыв + ".sig");
	ФайловаяСистемаКлиент.СохранитьФайл(Неопределено, СохраняемыйФайл.Адрес, СохраняемыйФайл.Имя);

КонецПроцедуры

&НаКлиенте
Процедура ПодписатьИОтправить(Команда)
		
	ОписаниеОповещения = Новый ОписаниеОповещения("ПодписатьИОтправитьЗавершение", ЭтотОбъект);
	МашиночитаемыеДоверенностиКлиент.ПодписатьЗарегистрироватьМЧД(Истина, ОписаниеОповещения,, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура Подписать(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПодписатьЗавершение", ЭтотОбъект);
	МашиночитаемыеДоверенностиКлиент.ПодписатьЗарегистрироватьМЧД(Ложь, ОписаниеОповещения,, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура Отменить(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОтменитьЗавершение", ЭтотОбъект);
	МашиночитаемыеДоверенностиКлиент.ОтменитьМЧД(ОписаниеОповещения,, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьОтправку(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбновитьОтправкуЗавершение", ЭтотОбъект);
	МашиночитаемыеДоверенностиКлиент.ОбновитьСостояниеВРеестреФНС(ОписаниеОповещения,, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьПоЭДО(Команда)
	
	МашиночитаемыеДоверенностиКлиент.ОтправитьПоЭДОИзФормыПросмотра(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьЭлектронныеДокументы(Команда)
	
	ИнтерфейсДокументовЭДОКлиент.ОткрытьДеревоЭлектронныхДокументов(Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура Посмотреть(Команда)
	
	Содержимое = МашиночитаемыеДоверенностиВызовСервера.ВыгрузитьXML(Объект.Ссылка);
	Если Не ЗначениеЗаполнено(Содержимое) Тогда
		Возврат;
	КонецЕсли;
	
	Текст = Новый ТекстовыйДокумент();
	Текст.УстановитьТекст(Содержимое);
	Текст.Показать();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПослеВводаЗначения(Значение, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(Значение) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	Модифицированность = Истина;
	ДополнительныеПараметры.ДанныеСтроки.НачальноеЗначение = Значение.НачальноеЗначение;
	ДополнительныеПараметры.ДанныеСтроки.КонечноеЗначение = Значение.КонечноеЗначение;
	СформироватьПредставлениеДанныхПоСтрокеДерева(ДополнительныеПараметры.ДанныеСтроки.ПолучитьИдентификатор());
	МашиночитаемыеДоверенностиКлиент.СформироватьЗаголовокВкладкиПолномочия(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура СформироватьПредставлениеДанныхПоСтрокеДерева(ИдентификаторЭлемента)
	
	СтрокаДерева = ДеревоОтбора.НайтиПоИдентификатору(ИдентификаторЭлемента);
	СтрокаДерева.Данные = Справочники.ПравилаПроверкиПолномочийМЧД.ПредставлениеДанных(СтрокаДерева);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтобразитьПредупреждениеПолномочий()
	Элементы.НадписьПредупреждение.Видимость = Объект.ПолномочияОграничены
		И НЕ МашиночитаемыеДоверенностиКлиентСервер.ПравилоНастроено(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура РеквизитПредставительФизЛицоПриИзмененииНаСервере()
	
	ОчиститьРеквизитыПредставительФизЛицо();
	ПредставительФЛ_Удостоверение = "";
	
	Если НЕ ЗначениеЗаполнено(РеквизитПредставительФизЛицо) Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.ГруппаПредставительФИО.Видимость = Не ЗначениеЗаполнено(РеквизитПредставительФизЛицо);
	
	СтруктураДанныхФизЛица = МашиночитаемыеДоверенности.ДанныеФизЛица(РеквизитПредставительФизЛицо);
	
	Объект.ПредставительФЛ_ИНН = ?(ЗначениеЗаполнено(СтруктураДанныхФизЛица), СтруктураДанныхФизЛица.ИНН, "");
	Объект.ПредставительФЛ_СНИЛС = ?(ЗначениеЗаполнено(СтруктураДанныхФизЛица),
		СтруктураДанныхФизЛица.СтраховойНомерПФР, "");
	Объект.ПредставительФЛ_Гражданство = ?(ЗначениеЗаполнено(СтруктураДанныхФизЛица),
		СтруктураДанныхФизЛица.Гражданство, ПредопределенноеЗначение("Справочник.СтраныМира.ПустаяСсылка"));
	Объект.ПредставительФЛ_ДатаРождения = ?(ЗначениеЗаполнено(СтруктураДанныхФизЛица), 
		СтруктураДанныхФизЛица.ДатаРождения, Неопределено);
	
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("Владелец", ПредопределенноеЗначение("Перечисление.СубъектыДоверенности.ПредставительФЛ"));
	СтрокиФИО = Объект.ФИО.НайтиСтроки(СтруктураПоиска);
	КоличествоСтрокФИО = СтрокиФИО.Количество();
	Если КоличествоСтрокФИО = 0 Тогда
		СтрокаФИО = Объект.ФИО.Добавить();
		СтрокаФИО.Владелец = ПредопределенноеЗначение("Перечисление.СубъектыДоверенности.ПредставительФЛ");
	Иначе
		СтрокаФИО = СтрокиФИО[0];
	КонецЕсли;
	СтрокаФИО.Фамилия 	= СтруктураДанныхФизЛица.Фамилия;
	СтрокаФИО.Имя 		= СтруктураДанныхФизЛица.Имя;
	СтрокаФИО.Отчество 	= СтруктураДанныхФизЛица.Отчество;
	
	Объект.Представитель = ПолучитьПредставлениеФИО(СтрокаФИО);
	
	СтрокиУдостоверений = Объект.УдостоверенияЛичности.НайтиСтроки(СтруктураПоиска);
	Если СтрокиУдостоверений.Количество() = 0 Тогда
		СтрокаУдостоверения = Объект.УдостоверенияЛичности.Добавить();
		СтрокаУдостоверения.Владелец = ПредопределенноеЗначение("Перечисление.СубъектыДоверенности.ПредставительФЛ");
	Иначе
		СтрокаУдостоверения = СтрокиУдостоверений[0];
	КонецЕсли;
		
	СтрокаУдостоверения.ВидДок 		= СтруктураДанныхФизЛица.КодФНС;
	СтрокаУдостоверения.СерДок 		= СтруктураДанныхФизЛица.Серия;
	СтрокаУдостоверения.НомДок 		= СтруктураДанныхФизЛица.Номер;
	СтрокаУдостоверения.ДатаДок 	= СтруктураДанныхФизЛица.ДатаВыдачи;
	СтрокаУдостоверения.ВыдДок 		= СтруктураДанныхФизЛица.КемВыдан;
	СтрокаУдостоверения.КодВыдДок 	= СтруктураДанныхФизЛица.КодПодразделения;
	
	ПредставительФЛ_Удостоверение = ПолучитьПредставлениеУдостоверение(СтрокаУдостоверения);

	Модифицированность = Истина;	
КонецПроцедуры

&НаСервере
Процедура РеквизитДоверительФизЛицоПриИзмененииНаСервере()
	
	ОчиститьРеквизитыДоверителяФизЛицо();
	
	Если НЕ ЗначениеЗаполнено(РеквизитДоверительФизЛицо) Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.ГруппаЛицоБезДоверенностиФЛ.Видимость = Не ЗначениеЗаполнено(РеквизитДоверительФизЛицо);
	
	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		СвойстваОрганизации = ПолучитьСвойстваОрганизации(Объект.Организация);
	КонецЕсли;

	СтруктураДанныхФизЛица = МашиночитаемыеДоверенности.ДанныеФизЛица(РеквизитДоверительФизЛицо);
	
	Если Доверитель_ЮридическоеЛицо И Не Объект.ДоверительЮЛ_ИностраннаяОрганизация Тогда

		Объект.ЛицоБезДовФЛ_ИНН = ?(ЗначениеЗаполнено(СтруктураДанныхФизЛица), СтруктураДанныхФизЛица.ИНН, "");
		Объект.ЛицоБезДовФЛ_СНИЛС = ?(ЗначениеЗаполнено(СтруктураДанныхФизЛица), СтруктураДанныхФизЛица.СтраховойНомерПФР, "");
		Объект.ЛицоБезДовФЛ_Гражданство = ?(ЗначениеЗаполнено(СтруктураДанныхФизЛица), СтруктураДанныхФизЛица.Гражданство,
			ПредопределенноеЗначение("Справочник.СтраныМира.ПустаяСсылка"));

		Объект.ЛицоБезДовФЛ_ДатаРождения = ?(ЗначениеЗаполнено(СтруктураДанныхФизЛица), СтруктураДанныхФизЛица.ДатаРождения,
			Неопределено);

		Объект.ЛицоБезДовФЛ_Должность = ?(ЗначениеЗаполнено(СвойстваОрганизации)
			И СвойстваОрганизации.ЭтоЮридическоеЛицо, СвойстваОрганизации.Должность, "");

		ПараметрыПоиска = Новый Структура();
		ПараметрыПоиска.Вставить("Владелец",
			ПредопределенноеЗначение("Перечисление.СубъектыДоверенности.ДоверительРук"));
		СтрокиФИО = Объект.ФИО.НайтиСтроки(ПараметрыПоиска);
		Если СтрокиФИО.Количество() = 0 Тогда
			СтрокаФИО = Объект.ФИО.Добавить();
			СтрокаФИО.Владелец = ПредопределенноеЗначение("Перечисление.СубъектыДоверенности.ДоверительРук");
		Иначе
			СтрокаФИО = СтрокиФИО[0];
		КонецЕсли;
		СтрокаФИО.Фамилия = СтруктураДанныхФизЛица.Фамилия;
		СтрокаФИО.Имя = СтруктураДанныхФизЛица.Имя;
		СтрокаФИО.Отчество = СтруктураДанныхФизЛица.Отчество;
			
	Иначе
		
		Объект.ДоверительФЛ_МестоРожд = СтруктураДанныхФизЛица.МестоРождения;
		Объект.ДоверительФЛ_ИНН = ?(ЗначениеЗаполнено(СтруктураДанныхФизЛица.ИНН), СтруктураДанныхФизЛица.ИНН, "");
		Объект.ДоверительФЛ_СНИЛС = ?(ЗначениеЗаполнено(СтруктураДанныхФизЛица.СтраховойНомерПФР), 
			СтруктураДанныхФизЛица.СтраховойНомерПФР, "");
		Объект.ДоверительФЛ_Гражданство = ?(ЗначениеЗаполнено(СтруктураДанныхФизЛица.Гражданство), 
			СтруктураДанныхФизЛица.Гражданство, 
			ПредопределенноеЗначение("Справочник.СтраныМира.ПустаяСсылка"));
		Объект.ДоверительФЛ_ДатаРождения = ?(ЗначениеЗаполнено(СтруктураДанныхФизЛица.ДатаРождения), 
			СтруктураДанныхФизЛица.ДатаРождения, Неопределено);
			
		ПараметрыПоиска = Новый Структура();
		ПараметрыПоиска.Вставить("Владелец",
			ПредопределенноеЗначение("Перечисление.СубъектыДоверенности.ДоверительФЛ"));
		СтрокиФИО = Объект.ФИО.НайтиСтроки(ПараметрыПоиска);
		Если СтрокиФИО.Количество() = 0 Тогда
			СтрокаФИО = Объект.ФИО.Добавить();
			СтрокаФИО.Владелец = ПредопределенноеЗначение("Перечисление.СубъектыДоверенности.ДоверительФЛ");
		Иначе
			СтрокаФИО = СтрокиФИО[0];
		КонецЕсли;
		СтрокаФИО.Фамилия = СтруктураДанныхФизЛица.Фамилия;
		СтрокаФИО.Имя = СтруктураДанныхФизЛица.Имя;
		СтрокаФИО.Отчество = СтруктураДанныхФизЛица.Отчество;
	
	КонецЕсли;
	
	Если Доверитель_ЮридическоеЛицо И Объект.ДоверительЮЛ_ИностраннаяОрганизация Тогда
		Объект.ДоверительФЛ_МестоРожд = ?(ЗначениеЗаполнено(СтруктураДанныхФизЛица.МестоРождения), 
			СтруктураДанныхФизЛица.МестоРождения, Неопределено);	
	КонецЕсли;
	
	Модифицированность = Истина;	
КонецПроцедуры

&НаСервере
Процедура ОчиститьРеквизитыДоверителяФизЛицо()

	СубъектДоверенности = ?(Доверитель_ЮридическоеЛицо,
		ПредопределенноеЗначение("Перечисление.СубъектыДоверенности.ДоверительРук"),
		ПредопределенноеЗначение("Перечисление.СубъектыДоверенности.ДоверительФЛ"));
	СтрокиФИО = Объект.ФИО.НайтиСтроки(Новый Структура("Владелец", СубъектДоверенности));
	КоличествоСтрокФИО = СтрокиФИО.Количество();
	Если КоличествоСтрокФИО > 0 Тогда
		Для НомерСКонца = 1 По КоличествоСтрокФИО Цикл
			Объект.ФИО.Удалить(СтрокиФИО[КоличествоСтрокФИО - НомерСКонца]);
		КонецЦикла;
	КонецЕсли;
	
	СтрокиУдостоверений = Объект.УдостоверенияЛичности.НайтиСтроки(Новый Структура("Владелец", СубъектДоверенности));
	КоличествоСтрокУдостоверений = СтрокиУдостоверений.Количество();
	Если КоличествоСтрокУдостоверений > 0 Тогда
		Для НомерСКонца = 1 По КоличествоСтрокУдостоверений Цикл
			Объект.УдостоверенияЛичности.Удалить(СтрокиУдостоверений[КоличествоСтрокУдостоверений - НомерСКонца]);
		КонецЦикла;
	КонецЕсли;
	
	Объект.ДоверительФЛ_ИНН = "";
	Если Не ПустаяСтрока(Объект.ДоверительЮЛ_ИНН) Тогда
		Объект.ДоверительФЛ_ОГРН = "";
	КонецЕсли;
	Объект.ДоверительФЛ_СНИЛС = "";
	Объект.ДоверительФЛ_Гражданство = ПредопределенноеЗначение("Справочник.СтраныМира.ПустаяСсылка");
	Объект.ДоверительФЛ_ДатаРождения = Неопределено;
	Объект.ДоверительФЛ_МестоРожд = "";
	Объект.ДоверительФЛ_Пол = "";
	
	Объект.ЛицоБезДовФЛ = Неопределено;
	Объект.ЛицоБезДовФЛ_ИНН = "";
	Объект.ЛицоБезДовФЛ_СНИЛС = "";
	Объект.ЛицоБезДовФЛ_Гражданство = ПредопределенноеЗначение("Справочник.СтраныМира.ПустаяСсылка");
	Объект.ЛицоБезДовФЛ_ДатаРождения = Неопределено;
	Объект.ЛицоБезДовФЛ_Должность = "";

КонецПроцедуры

&НаСервере
Процедура ДатыПриИзмененииНаСервере()
	
	Если ЗначениеЗаполнено(Объект.ДатаОкончания)
		И Объект.ДатаВыдачи > КонецДня(Объект.ДатаОкончания) Тогда
		Объект.ДатаВыдачи = '00010101';
		ТекстСообщения = НСтр("ru = 'Дата выдачи доверенности больше даты окончания. Введите корректную дату'"); 
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,, "ДатаВыдачи", "Объект");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ДатаОкончания)
		И КонецДня(Объект.ДатаОкончания) < ТекущаяДатаСеанса() Тогда
		Объект.ДатаОкончания = '00010101';
		ТекстСообщения = НСтр("ru = 'Дата окончания срока доверенности меньше текущей. Введите корректную дату'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,, "ДатаОкончания", "Объект");
	КонецЕсли;
	
	СрокДействияМенееДопустимого = ЗначениеЗаполнено(Объект.ДатаВыдачи) И ЗначениеЗаполнено(Объект.ДатаОкончания)
		И КонецДня(Объект.ДатаОкончания) > ТекущаяДатаСеанса()
		И НачалоДня(Объект.ДатаОкончания) - ТекущаяДатаСеанса() < 24*60*60;

	Если СрокДействияМенееДопустимого Тогда
		Объект.ДатаОкончания = '00010101';
		ТекстСообщения =
			НСтр("ru = 'Срок действия доверенности должен быть не менее двух дней с момента регистрации.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,, "ДатаОкончания", "Объект");
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ОчиститьРеквизитыПредставительФизЛицо()
	
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("Владелец", ПредопределенноеЗначение("Перечисление.СубъектыДоверенности.ПредставительФЛ"));
	СтрокиФИО = Объект.ФИО.НайтиСтроки(СтруктураПоиска);
	
	КоличествоСтрок = СтрокиФИО.Количество();
	Для НомерСКонца = 1 По КоличествоСтрок Цикл
		Объект.ФИО.Удалить(СтрокиФИО[КоличествоСтрок - НомерСКонца]);
	КонецЦикла;
	
	СтрокиУдостоверений = Объект.УдостоверенияЛичности.НайтиСтроки(СтруктураПоиска);	
	КоличествоСтрок = СтрокиУдостоверений.Количество();
	Для НомерСКонца = 1 По КоличествоСтрок Цикл
		Объект.УдостоверенияЛичности.Удалить(СтрокиУдостоверений[КоличествоСтрок - НомерСКонца]);
	КонецЦикла;
	
	Объект.Представитель = "";
	Объект.ПредставительФЛ_ИНН = "";
	Объект.ПредставительФЛ_СНИЛС = "";
	Объект.ПредставительФЛ_Гражданство = ПредопределенноеЗначение("Справочник.СтраныМира.ПустаяСсылка");
	Объект.ПредставительФЛ_ДатаРождения = Неопределено;
			
КонецПроцедуры

&НаСервере
Процедура РеквизитПредставительОрганизацияПриИзмененииНаСервере()
	
	Объект.ПредставительЮЛ_НаимОрг = "";
	Объект.ПредставительЮЛ_ИНН = "";
	Объект.ПредставительЮЛ_КПП = "";
	Объект.ПредставительЮЛ_ОГРН = "";
	Объект.ПредставительФЛ_ОГРН = "";
	
	СвойстваОрганизации = Неопределено;
	Если ЗначениеЗаполнено(РеквизитПредставительОрганизация) Тогда
		СвойстваОрганизации = ПолучитьСвойстваОрганизации(РеквизитПредставительОрганизация);
	Иначе
		Возврат;
	КонецЕсли;
	
	Элементы.ПредставительЮЛ_НаимОрг.Видимость = Не ЗначениеЗаполнено(РеквизитПредставительОрганизация);
	
	Если Не СвойстваОрганизации.ЭтоЮридическоеЛицо Тогда
		ОбщегоНазначения.СообщитьПользователю(
   			НСтр("ru = 'Необходимо выбрать юридическое лицо.'"), , "РеквизитПредставительОрганизация");
		РеквизитПредставительОрганизация = Неопределено;
		Возврат;
	КонецЕсли;
		
	Объект.ПредставительЮЛ_НаимОрг = СвойстваОрганизации.Наименование;
	Объект.ПредставительЮЛ_ИНН = ?(СвойстваОрганизации.ЭтоЮридическоеЛицо, СвойстваОрганизации.ИНН , "");
	Объект.ПредставительЮЛ_КПП = ?(СвойстваОрганизации.ЭтоЮридическоеЛицо, СвойстваОрганизации.КПП , "");
	Объект.ПредставительЮЛ_ОГРН = ?(СвойстваОрганизации.ЭтоЮридическоеЛицо, СвойстваОрганизации.ОГРН , "");
	Объект.ПредставительФЛ_ОГРН = ?(СвойстваОрганизации.ЭтоЮридическоеЛицо, "", СвойстваОрганизации.ОГРН);
		
	Модифицированность = Истина;
КонецПроцедуры

&НаСервере
Процедура ЗаписатьПолномочия(ТекущийОбъект)

	ТекущийОбъект.ПолномочияОграничены =
		НЕ МашиночитаемыеДоверенностиКлиентСервер.ЭтоПолныеПолномочия(ТекущийОбъект.Полномочия);

КонецПроцедуры

&НаСервере
Процедура УстановитьЗаголовокФормы(ЭтоНоваяДоверенность = Ложь)
	
	Если ЭтоНоваяДоверенность Тогда
		Заголовок = НСтр("ru = 'Машиночитаемая доверенность (создание)'");
	Иначе
		Заголовок = Объект.Наименование;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗначенияРеквизитовОбъекта(СсылкаНаОбъект, ИменаРеквизитов)
	
	Результат = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СсылкаНаОбъект, ИменаРеквизитов);
	
	Для каждого КлючИЗначение Из Результат Цикл
		Если ТипЗнч(КлючИЗначение.Значение) = Тип("ХранилищеЗначения") Тогда
			ДанныеЗначения = КлючИЗначение.Значение.Получить();
			Если ДанныеЗначения = Неопределено Тогда
				АдресЗначения = Неопределено;
			Иначе
				АдресЗначения = ПоместитьВоВременноеХранилище(ДанныеЗначения, Новый УникальныйИдентификатор);
			КонецЕсли;
			Результат[КлючИЗначение.Ключ] = АдресЗначения;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции
	
&НаСервереБезКонтекста
Функция ПредставлениеКонтактнойИнформации(КонтактнаяИнформация)
	Возврат УправлениеКонтактнойИнформацией.ПредставлениеКонтактнойИнформации(КонтактнаяИнформация);
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеЭлементамиФормы(Форма)
		
	Форма.Элементы.ГруппаИнОргДовер.Видимость = Форма.Объект.ДоверительЮЛ_ИностраннаяОрганизация;	
	
	Если Форма.Доверитель_ЮридическоеЛицо И Не Форма.Объект.ДоверительЮЛ_ИностраннаяОрганизация Тогда
		Форма.Элементы.ГруппаФЛДовер.Видимость = Ложь;
		Форма.Элементы.ГруппаЛицоБезДов.Видимость = Истина;
		Форма.Элементы.ГруппаРосОргДовер.Видимость = Истина;
		Форма.Элементы.ЛицоБезДовФЛ_Должность.АвтоОтметкаНезаполненного = Истина;
	Иначе
		Форма.Элементы.ЛицоБезДовФЛ_Должность.АвтоОтметкаНезаполненного = Ложь;
	КонецЕсли;
	
	Если Форма.Доверитель_ЮридическоеЛицо И Форма.Объект.ДоверительЮЛ_ИностраннаяОрганизация Тогда
		Форма.Элементы.ГруппаФЛДовер.Видимость = Истина;
		Форма.Элементы.ГруппаЛицоБезДов.Видимость = Ложь;
		Форма.Элементы.ГруппаРосОргДовер.Видимость = Истина;
	КонецЕсли;

	Если НЕ Форма.Доверитель_ЮридическоеЛицо Тогда
		Форма.Элементы.ГруппаФЛДовер.Видимость = Истина;
		Форма.Элементы.ГруппаЛицоБезДов.Видимость = Ложь;
		Форма.Элементы.ГруппаРосОргДовер.Видимость = Ложь;
	КонецЕсли;
	
	ТолькоПросмотрФормы = ТолькоПросмотрФормы(Форма);
	Форма.Элементы.ГруппаКолонки.ТолькоПросмотр	= ТолькоПросмотрФормы;
	Форма.Элементы.ГруппаШапка.ТолькоПросмотр	= ТолькоПросмотрФормы;
	
	Форма.Элементы.ФормаКнопкаПодписатьИОтправить.Видимость = Не Форма.ТолькоПросмотр
		И Форма.ИспользоватьРеестрДоверенностейФНС
		И (Форма.Объект.СтатусВРеестреФНС = 
			ПредопределенноеЗначение("Перечисление.СтатусыМашиночитаемойДоверенностиВРеестреФНС.ПустаяСсылка")
		ИЛИ Форма.Объект.СтатусВРеестреФНС =
			ПредопределенноеЗначение("Перечисление.СтатусыМашиночитаемойДоверенностиВРеестреФНС.ОшибкаРегистрации"));
	
	Форма.Элементы.ФормаПодписать.Видимость = Не Форма.ТолькоПросмотр
		И Не Форма.ИспользоватьРеестрДоверенностейФНС
		И Форма.Объект.Подписана <> Истина;
	
	Форма.Элементы.ФормаКнопкаОбновитьОтправку.Видимость = Не Форма.ТолькоПросмотр
		И Форма.ИспользоватьРеестрДоверенностейФНС
		И (Форма.Объект.СтатусВРеестреФНС =
			ПредопределенноеЗначение("Перечисление.СтатусыМашиночитаемойДоверенностиВРеестреФНС.Отправлено")
		ИЛИ Форма.Объект.СтатусВРеестреФНС =
			ПредопределенноеЗначение("Перечисление.СтатусыМашиночитаемойДоверенностиВРеестреФНС.Зарегистрировано")
		ИЛИ Форма.Объект.СтатусВРеестреФНС =
			ПредопределенноеЗначение("Перечисление.СтатусыМашиночитаемойДоверенностиВРеестреФНС.ДатаНачалаДействияНеНаступила")
		ИЛИ Форма.Объект.СтатусВРеестреФНС =
			ПредопределенноеЗначение("Перечисление.СтатусыМашиночитаемойДоверенностиВРеестреФНС.ОтправленоЗаявлениеНаОтзыв")
		ИЛИ Форма.Объект.СтатусВРеестреФНС =
			ПредопределенноеЗначение("Перечисление.СтатусыМашиночитаемойДоверенностиВРеестреФНС.ОшибкаОтзыва"));
	
	Форма.Элементы.ФормаКнопкаОтменить.Видимость = Не Форма.ТолькоПросмотр
		И ЗначениеЗаполнено(Форма.Объект.СтатусВРеестреФНС)
		И (Форма.Объект.СтатусВРеестреФНС =
			ПредопределенноеЗначение("Перечисление.СтатусыМашиночитаемойДоверенностиВРеестреФНС.Зарегистрировано")
		ИЛИ Форма.Объект.СтатусВРеестреФНС =
			ПредопределенноеЗначение("Перечисление.СтатусыМашиночитаемойДоверенностиВРеестреФНС.ДатаНачалаДействияНеНаступила")
		ИЛИ Форма.Объект.СтатусВРеестреФНС =
			ПредопределенноеЗначение("Перечисление.СтатусыМашиночитаемойДоверенностиВРеестреФНС.ОшибкаОтзыва"));
	
	Форма.Элементы.ФормаПосмотреть.Доступность = Форма.Объект.Подписана;
	Форма.Элементы.ФормаОткрытьФормуПросмотра.Доступность = Форма.Объект.Подписана;
	Форма.Элементы.ГруппаПроверкаПолномочий.Видимость = Форма.Объект.ПолномочияОграничены;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ТолькоПросмотрФормы(Форма)
	
	Возврат Форма.ТолькоПросмотр
		Или (Форма.Объект.Подписана
		И Форма.Объект.СтатусВРеестреФНС <>
		ПредопределенноеЗначение("Перечисление.СтатусыМашиночитаемойДоверенностиВРеестреФНС.ОшибкаРегистрации"));
	
КонецФункции

&НаКлиенте
Процедура ПодписатьИОтправитьЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(Результат) Тогда
		СообщитьОРезультате(Результат);
		Прочитать();
	КонецЕсли;
	УправлениеЭлементамиФормы(ЭтотОбъект);
	ИнтерфейсДокументовЭДОКлиент.ОформитьГруппуСостоянияИСтатусыМЧД(ЭтотОбъект, 
		Объект.Подписана, Объект.Верна, Объект.Отозвана, Объект.ДатаОтзыва, Объект.СтатусВРеестреФНС);
	Оповестить("ИзмененыСтатусыМЧД");
	
КонецПроцедуры

&НаКлиенте
Процедура СообщитьОРезультате(Результат)
	
	Если ЗначениеЗаполнено(Результат.СтатусТранзакции) Тогда
		ШаблонСообщения = НСтр("ru='Идентификатор транзакции (отладочно):%1'");
		ТекстСообщения = СтрШаблон(ШаблонСообщения, Объект.ИдентификаторТранзакции);
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодписатьЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Прочитать();
	УправлениеЭлементамиФормы(ЭтотОбъект);
	ИнтерфейсДокументовЭДОКлиент.ОформитьГруппуСостоянияИСтатусыМЧД(ЭтотОбъект, 
		Объект.Подписана, Объект.Верна, Объект.Отозвана, Объект.ДатаОтзыва, Объект.СтатусВРеестреФНС);
	Оповестить("ИзмененыСтатусыМЧД");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	СообщитьОРезультате(Результат);
	ИнтерфейсДокументовЭДОКлиент.ОформитьГруппуСостоянияИСтатусыМЧД(ЭтотОбъект, 
		Объект.Подписана, Объект.Верна, Объект.Отозвана, Объект.ДатаОтзыва, Объект.СтатусВРеестреФНС);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьОтправкуЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(Результат.СтатусДоверенности) Тогда
		УправлениеЭлементамиФормы(ЭтотОбъект);
		ИнтерфейсДокументовЭДОКлиент.ОформитьГруппуСостоянияИСтатусыМЧД(ЭтотОбъект, 
			Объект.Подписана, Объект.Верна, Объект.Отозвана, Объект.ДатаОтзыва, Объект.СтатусВРеестреФНС);
	КонецЕсли;
	Оповестить("ИзмененыСтатусыМЧД");
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияРеквизитыДоверителяНажатиеЗавершение(СтруктураДанных, ДополнительныеПараметры) Экспорт
	
	Если СтруктураДанных = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Объект.ДоверительЮЛ_ИностраннаяОрганизация = НЕ СтруктураДанных.ДоверительЮЛ_РоссийскаяОрганизация;
	Объект.ДоверительЮЛ_НаимОрг = СтруктураДанных.ДоверительЮЛ_НаимОрг;
	Объект.ДоверительЮЛ_ИНН = СтруктураДанных.ДоверительЮЛ_ИНН;
	Объект.ДоверительЮЛ_КПП = СтруктураДанных.ДоверительЮЛ_КПП;
	Объект.ДоверительЮЛ_ОГРН = СтруктураДанных.ДоверительЮЛ_ОГРН;
	Объект.ДоверительЮЛ_СтрРег = СтруктураДанных.ДоверительЮЛ_СтрРег;
	Объект.ДоверительЮЛ_НаимРегОрг = СтруктураДанных.ДоверительЮЛ_НаимРегОрг;
	Объект.ДоверительЮЛ_РегНомер = СтруктураДанных.ДоверительЮЛ_РегНомер;
	Объект.ДоверительЮЛ_Адр = СтруктураДанных.ДоверительЮЛ_Адр;
	Объект.ДоверительЮЛ_АдрXML = СтруктураДанных.ДоверительЮЛ_АдрXML;
	
	СубъектДоверенности = ?(Доверитель_ЮридическоеЛицо,
		ПредопределенноеЗначение("Перечисление.СубъектыДоверенности.ДоверительРук"),
		ПредопределенноеЗначение("Перечисление.СубъектыДоверенности.ДоверительФЛ"));
	СтрокиФИО = Объект.ФИО.НайтиСтроки(Новый Структура("Владелец", СубъектДоверенности));
	Если СтрокиФИО.Количество() = 0 Тогда
		СтрокаФИО = Объект.ФИО.Добавить();
		СтрокаФИО.Владелец = СубъектДоверенности;
	Иначе
		СтрокаФИО = СтрокиФИО[0];
	КонецЕсли;
	СтрокаФИО.Фамилия = СтруктураДанных.ДоверительФЛ_Фамилия;
	СтрокаФИО.Имя = СтруктураДанных.ДоверительФЛ_Имя;
	СтрокаФИО.Отчество = СтруктураДанных.ДоверительФЛ_Отчество;
	
	СтрокиУдостоверений = Объект.УдостоверенияЛичности.НайтиСтроки(Новый Структура("Владелец", СубъектДоверенности));
	Если СтрокиУдостоверений.Количество() = 0 Тогда
		СтрокаУдостоверения = Объект.УдостоверенияЛичности.Добавить();
		СтрокаУдостоверения.Владелец = СубъектДоверенности;
	Иначе
		СтрокаУдостоверения = СтрокиУдостоверений[0];
	КонецЕсли;
	СтрокаУдостоверения.ВидДок = СтруктураДанных.ДоверительФЛ_ВидДок;
	СтрокаУдостоверения.СерДок = СтруктураДанных.ДоверительФЛ_СерДок;
	СтрокаУдостоверения.НомДок = СтруктураДанных.ДоверительФЛ_НомДок;
	СтрокаУдостоверения.ДатаДок = СтруктураДанных.ДоверительФЛ_ДатаДок;
	СтрокаУдостоверения.ВыдДок = СтруктураДанных.ДоверительФЛ_ВыдДок;
	СтрокаУдостоверения.КодВыдДок = СтруктураДанных.ДоверительФЛ_КодВыдДок;
	
	Объект.ДоверительФЛ_ИНН = СтруктураДанных.ДоверительФЛ_ИНН;
	Объект.ДоверительФЛ_ОГРН = СтруктураДанных.ДоверительФЛ_ОГРН;
	Объект.ДоверительФЛ_СНИЛС = СтруктураДанных.ДоверительФЛ_СНИЛС;
	Объект.ДоверительФЛ_Гражданство = СтруктураДанных.ДоверительФЛ_Гражданство;
	Объект.ДоверительФЛ_Пол = "";
	Объект.ДоверительФЛ_ДатаРождения = СтруктураДанных.ДоверительФЛ_ДатаРождения;
	Объект.ДоверительФЛ_МестоРожд = СтруктураДанных.ДоверительФЛ_МестоРожд;
	
	Модифицированность = Истина;
	
	УправлениеЭлементамиФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияРеквизитыЛицаБезДоверенностиЮЛНажатиеЗавершение(СтруктураДанных, ДополнительныеПараметры) Экспорт
	
	Если СтруктураДанных = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Объект.ЛицоБезДовЮЛ_НаимОрг = СтруктураДанных.ЛицоБезДовЮЛ_НаимОрг;
	Объект.ЛицоБезДовЮЛ_ИНН = СтруктураДанных.ЛицоБезДовЮЛ_ИНН;
	Объект.ЛицоБезДовЮЛ_КПП = СтруктураДанных.ЛицоБезДовЮЛ_КПП;
	Объект.ЛицоБезДовЮЛ_ОГРН = СтруктураДанных.ЛицоБезДовЮЛ_ОГРН;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияРеквизитыЛицаБезДоверенностиФЛНажатиеЗавершение(СтруктураДанных, ДополнительныеПараметры) Экспорт
	
	Если СтруктураДанных = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Если Не Доверитель_ЮридическоеЛицо Или Объект.ДоверительЮЛ_ИностраннаяОрганизация Тогда
		СтрокиФИО = Объект.ФИО.НайтиСтроки(Новый Структура("Владелец", ПредопределенноеЗначение(
			"Перечисление.СубъектыДоверенности.ДоверительФЛ")));
	Иначе
		СтрокиФИО = Объект.ФИО.НайтиСтроки(Новый Структура("Владелец", ПредопределенноеЗначение(
			"Перечисление.СубъектыДоверенности.ДоверительРук")));	
	КонецЕсли;
	
	Если СтрокиФИО.Количество() = 0 Тогда
		СтрокаФИО = Объект.ФИО.Добавить();
		СтрокаФИО.Владелец = ПредопределенноеЗначение("Перечисление.СубъектыДоверенности.ДоверительРук");
	Иначе
		СтрокаФИО = СтрокиФИО[0];
	КонецЕсли;
	СтрокаФИО.Фамилия = СтруктураДанных.ЛицоБезДовФЛ_Фамилия;
	СтрокаФИО.Имя = СтруктураДанных.ЛицоБезДовФЛ_Имя;
	СтрокаФИО.Отчество = СтруктураДанных.ЛицоБезДовФЛ_Отчество;
	
	РеквизитДоверительФизЛицоФИО = ПолучитьПредставлениеФИО(СтрокаФИО);

	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставительФЛ_ФИОНачалоВыбораЗавершение(РезультатРедактирования, ДополнительныеПараметры) Экспорт
	
	Если НЕ ЗначениеЗаполнено(РезультатРедактирования) Тогда
		Возврат;
	КонецЕсли;
	
	СтрокиФИО = Объект.ФИО.НайтиСтроки(Новый Структура("Владелец",
		ПредопределенноеЗначение("Перечисление.СубъектыДоверенности.ПредставительФЛ")));
	
	КоличествоСтрокФИО = СтрокиФИО.Количество();
	Если КоличествоСтрокФИО = 0 Тогда
		СтрокаФИО = Объект.ФИО.Добавить();
		СтрокаФИО.Владелец = ПредопределенноеЗначение("Перечисление.СубъектыДоверенности.ПредставительФЛ");
	Иначе
		СтрокаФИО = СтрокиФИО[0];
	КонецЕсли;
	СтрокаФИО.Фамилия 	= РезультатРедактирования.Фамилия;
	СтрокаФИО.Имя 		= РезультатРедактирования.Имя;
	СтрокаФИО.Отчество 	= РезультатРедактирования.Отчество;
	
	ПредставительФЛ_ФИО = ПолучитьПредставлениеФИО(РезультатРедактирования);
	Объект.Представитель = ПолучитьПредставлениеФИО(СтрокаФИО);
	
	Модифицированность = Истина;	
КонецПроцедуры

&НаКлиенте
Процедура ПредставительФЛ_УдостоверениеНачалоВыбораЗавершение(РезультатВыбора, ДополнительныеПараметры) Экспорт
	
	Если НЕ ЗначениеЗаполнено(РезультатВыбора) Тогда
		Возврат;
	КонецЕсли;
	
	СтрокиУдостоверений = Объект.УдостоверенияЛичности.НайтиСтроки(Новый Структура("Владелец",
		ПредопределенноеЗначение("Перечисление.СубъектыДоверенности.ПредставительФЛ")));
	
	КоличествоСтрокУдостоверений = СтрокиУдостоверений.Количество();
	Если КоличествоСтрокУдостоверений = 0 Тогда
		СтрокаУдостоверения = Объект.УдостоверенияЛичности.Добавить();
		СтрокаУдостоверения.Владелец =
			ПредопределенноеЗначение("Перечисление.СубъектыДоверенности.ПредставительФЛ");
	Иначе
		СтрокаУдостоверения = СтрокиУдостоверений[0];
	КонецЕсли;
	СтрокаУдостоверения.ВидДок 		= РезультатВыбора.ДокументВид;
	СтрокаУдостоверения.СерДок 		= РезультатВыбора.ДокументСерия;
	СтрокаУдостоверения.НомДок 		= РезультатВыбора.ДокументНомер;
	СтрокаУдостоверения.ДатаДок 	= РезультатВыбора.ДокументДатаВыдачи;
	СтрокаУдостоверения.ВыдДок 		= РезультатВыбора.ДокументКемВыдан;
	СтрокаУдостоверения.КодВыдДок 	= РезультатВыбора.ДокументКодПодразделения;
	
	ПредставительФЛ_Удостоверение = ПолучитьПредставлениеУдостоверение(СтрокаУдостоверения);
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСвойстваОрганизации(Организация)
	
	Результат = Новый Структура;
	Результат.Вставить("ЭтоЮридическоеЛицо", Истина);
	Результат.Вставить("ЭтоРоссийскаяОрганизация", Истина);
	Результат.Вставить("АдресXML", "");
	Результат.Вставить("ИНН", "");
	Результат.Вставить("КПП", "");
	Результат.Вставить("ОГРН", "");
	Результат.Вставить("Наименование", "");
	Результат.Вставить("Фамилия", "");
	Результат.Вставить("Имя", "");
	Результат.Вставить("Отчество", "");
	Результат.Вставить("Должность", "");
	Результат.Вставить("РуководительФизлицо", Неопределено);
	Результат.Вставить("СНИЛС", "");
	Результат.Вставить("РуководительОснованиеПолномочий", "");
	Результат.Вставить("РуководительИНН", "");
	Результат.Вставить("ДатаРождения", '00010101');
	Результат.Вставить("Гражданство", Справочники.СтраныМира.ПустаяСсылка());
	
	Если Не ЗначениеЗаполнено(Организация) Тогда
		Возврат Результат;
	КонецЕсли;
	
	Результат.ЭтоЮридическоеЛицо = НЕ ИнтеграцияЭДО.ЭтоФизЛицо(Организация);
	
	СтруктураСведений = ОбщегоНазначенияБЭД.ДанныеЮрФизЛица(Организация);
	Если ИнтеграцияЭДО.ЭтоОрганизация(Организация) Тогда
		ДанныеОрганизации = ИнтеграцияЭДО.РегистрационныеДанныеОрганизации(Организация);
		Реквизиты = "ИНН, КПП, ОГРН, Наименование, Фамилия, Имя, Отчество, Должность, СНИЛС,
		| РуководительОснованиеПолномочий, РуководительИНН, ДатаРождения, Гражданство, РуководительФизлицо";
		ЗаполнитьЗначенияСвойств(Результат, ДанныеОрганизации, Реквизиты);
	Иначе
		Результат.Наименование = СтруктураСведений.ПолноеНаименование;
		Результат.ИНН = СтруктураСведений.ИНН;
		Результат.КПП = СтруктураСведений.КПП;
		Результат.ОГРН = СтруктураСведений.ОГРН;
	КонецЕсли;
	
	Результат.АдресXML = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(СтруктураСведений, "ЮридическийАдресXML", "");

	Возврат Результат;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьПредставлениеУдостоверение(СтрокаУдостоверения)
	
	Представление = "";
	
	Если ЗначениеЗаполнено(СтрокаУдостоверения.ВидДок) Тогда
		
		// Меняем код ФНС на код, используемый реестром доверенностей
		Если СтрокаУдостоверения.ВидДок = "18" Тогда
			СтрокаУдостоверения.ВидДок = "19";
		КонецЕсли;
		
		ВидыДокументов = МашиночитаемыеДоверенностиКлиентСервер.ВидыДокументовФизическихЛиц();
		Представление = ВидыДокументов.Получить(СтрокаУдостоверения.ВидДок);
		
		Если Представление = Неопределено Тогда
			
			Сообщение = Новый СообщениеПользователю();
			Сообщение.Текст = НСтр("ru = 'У физического лица указан недопустимый для доверенности тип документа, удостоверяющего личность.'");
			Сообщение.Сообщить();
			Возврат "";
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СтрокаУдостоверения.ВидДок) Тогда
		ВидыДокументов = МашиночитаемыеДоверенностиКлиентСервер.ВидыДокументовФизическихЛиц();
		Представление = ВидыДокументов.Получить(СтрокаУдостоверения.ВидДок);
	КонецЕсли;
	Если ЗначениеЗаполнено(СтрокаУдостоверения.СерДок) Тогда
		Представление = Представление + " " + СтрокаУдостоверения.СерДок;
	КонецЕсли;
	Если ЗначениеЗаполнено(СтрокаУдостоверения.НомДок) Тогда
		Представление = Представление + " " + СтрокаУдостоверения.НомДок;
	КонецЕсли;
	Если ЗначениеЗаполнено(СтрокаУдостоверения.ДатаДок) Тогда
		Представление =
			Представление + " " + НСтр("ru = 'выдан'") + " " + Формат(СтрокаУдостоверения.ДатаДок, "ДЛФ=ДД");
	КонецЕсли;
	Если ЗначениеЗаполнено(СтрокаУдостоверения.ВыдДок) Тогда
		Представление = Представление + " " + СтрокаУдостоверения.ВыдДок;
	КонецЕсли;
	Если ЗначениеЗаполнено(СтрокаУдостоверения.КодВыдДок) Тогда
		Представление = Представление + ", " + НСтр("ru = 'код подразделения'") + ":" + СтрокаУдостоверения.КодВыдДок;
	КонецЕсли;
	
	Возврат Представление;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьПредставлениеФИО(СтрокаФИО)
	
	Представление = "";
	
	Если ЗначениеЗаполнено(СтрокаФИО.Фамилия) Тогда
		Представление = СтрокаФИО.Фамилия;
	КонецЕсли;
	Если ЗначениеЗаполнено(СтрокаФИО.Имя) Тогда
		Представление = Представление + " " + СтрокаФИО.Имя;
	КонецЕсли;
	Если ЗначениеЗаполнено(СтрокаФИО.Отчество) Тогда
		Представление = Представление + " " + СтрокаФИО.Отчество;
	КонецЕсли;
	
	Возврат Представление;
	
КонецФункции

&НаСервере
Процедура ПолучитьСсылкиНаСтороныДоверенности()
	
	СведенияФизЛица = Новый Структура;
	Если ЗначениеЗаполнено(Объект.ЛицоБезДовФЛ_ИНН)  Тогда
		СведенияФизЛица.Вставить("ИНН", Объект.ЛицоБезДовФЛ_ИНН);
		РеквизитДоверительФизЛицо = ЭлектронноеВзаимодействиеПереопределяемый.ПолучитьФизЛицоМЧД(
			СведенияФизЛица);
	Иначе
		Если ЗначениеЗаполнено(Объект.ДоверительФЛ_ИНН) Тогда
			СведенияФизЛица.Вставить("ИНН", Объект.ДоверительФЛ_ИНН);
			РеквизитДоверительФизЛицо = ЭлектронноеВзаимодействиеПереопределяемый.ПолучитьФизЛицоМЧД(
				СведенияФизЛица);
		КонецЕсли;
	КонецЕсли;
	
	Если РеквизитДоверительФизЛицо = Неопределено Тогда
		ТекстСообщения = НСтр("ru = 'По данным реквизитам не удалось найти физическое лицо в базе данных.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);	
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ПредставительФЛ_ИНН) Тогда
		СведенияФизЛица = Новый Структура;
		СведенияФизЛица.Вставить("ИНН", Объект.ПредставительФЛ_ИНН);
		РеквизитПредставительФизЛицо = ЭлектронноеВзаимодействиеПереопределяемый.ПолучитьФизЛицоМЧД(
		СведенияФизЛица);
		Если РеквизитПредставительФизЛицо = Неопределено Тогда
			ТекстСообщения = НСтр("ru = 'По данным реквизитам не удалось найти физическое лицо в базе данных.'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ПредставительЮЛ_ИНН) Тогда
		СведенияЮрЛица = Новый Структура;
		СведенияЮрЛица.Вставить("ИНН", Объект.ПредставительЮЛ_ИНН);
		СведенияЮрЛица.Вставить("КПП", Объект.ПредставительЮЛ_КПП);
		СведенияЮрЛица.Вставить("ОГРН", Объект.ПредставительЮЛ_ОГРН);
		РеквизитПредставительОрганизация = ЭлектронноеВзаимодействиеПереопределяемый.ПолучитьОрганизациюМЧД(
			СведенияЮрЛица);

		Если РеквизитПредставительОрганизация = Неопределено Тогда
			
			РезультатПоиска = ЭлектронноеВзаимодействие.НайтиСсылку("Контрагенты", , СведенияЮрЛица);
				
			Если ЗначениеЗаполнено(РезультатПоиска) Тогда
				РеквизитПредставительОрганизация = РезультатПоиска;
			Иначе
				ТекстСообщения = НСтр("ru = 'По данным реквизитам не удалось найти контрагента в базе данных.'");
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
	Элементы.ГруппаЛицоБезДоверенностиФЛ.Видимость = Не ЗначениеЗаполнено(РеквизитДоверительФизЛицо);
	Элементы.ГруппаПредставительФИО.Видимость = Не ЗначениеЗаполнено(РеквизитПредставительФизЛицо);
	Элементы.ПредставительЮЛ_НаимОрг.Видимость = Не ЗначениеЗаполнено(РеквизитПредставительОрганизация) 
		И ЗначениеЗаполнено(Объект.ПредставительЮЛ_ИНН);
		
	Если ЭтоНоваяЗапись Тогда
		Элементы.ГруппаЛицоБезДоверенностиФЛ.Видимость = Ложь;
		Элементы.ГруппаПредставительФИО.Видимость = Ложь;
	КонецЕсли;

КонецПроцедуры


#КонецОбласти