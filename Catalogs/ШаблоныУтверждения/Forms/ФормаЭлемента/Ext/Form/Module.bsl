
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);
	
	Если Объект.Ссылка.Пустая() Тогда
		Если Объект.Исполнитель = Неопределено Тогда
			Объект.Исполнитель = Справочники.Пользователи.ПустаяСсылка();
		КонецЕсли;
	КонецЕсли;
	
	Если Не Пользователи.ЭтоПолноправныйПользователь() Тогда
		
		Если Объект.Ссылка.Пустая() Тогда
			Объект.Ответственный = Пользователи.ТекущийПользователь();
			Объект.ПерсональныйШаблон = Истина;
			
			Элементы.Ответственный.Доступность = Ложь;
			Элементы.ПерсональныйШаблон.Доступность = Ложь;
		Иначе
			Если Не Объект.ПерсональныйШаблон Тогда
				ТолькоПросмотр = Истина;
			Иначе
				Элементы.Ответственный.Доступность = Ложь;
				Элементы.ПерсональныйШаблон.Доступность = Ложь;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	Если Объект.Ссылка.Пустая() Тогда
		ПриСозданииНовогоПриЧтенииНаСервере();
	КонецЕсли;
	
	ИспользоватьДатуИВремяВСрокахЗадач = ПолучитьФункциональнуюОпцию("ИспользоватьДатуИВремяВСрокахЗадач");
	Элементы.СрокИсполненияЧас.Видимость = ИспользоватьДатуИВремяВСрокахЗадач;
	Элементы.Часов.Видимость = ИспользоватьДатуИВремяВСрокахЗадач;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	ПриСозданииНовогоПриЧтенииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ
#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ИсполнительНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	БизнесПроцессыИЗадачиБольничнаяАптекаКлиент.ВыбратьИсполнителя(
		Элемент,
		Объект.Исполнитель,
		Ложь, // ТолькоПростыеРоли
		Истина, // БезВнешнихРолей
		Истина); // ПоказыватьФункции
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнительОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда
		СтандартнаяОбработка = Ложь;
		
		Объект.Исполнитель = ВыбранноеЗначение.РольИсполнителя;
		Объект.ОсновнойОбъектАдресации = ВыбранноеЗначение.ОсновнойОбъектАдресации;
		Объект.ДополнительныйОбъектАдресации = ВыбранноеЗначение.ДополнительныйОбъектАдресации;
		
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнительАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = ШаблоныБизнесПроцессовВызовСервера.СформироватьДанныеВыбораИсполнителя(Текст);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнительОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = ШаблоныБизнесПроцессовВызовСервера.СформироватьДанныеВыбораИсполнителя(Текст);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнительПриИзменении(Элемент)
	
	БизнесПроцессыИЗадачиБольничнаяАптекаКлиент.ПриИзмененииУчастника(
		Объект,
		"Исполнитель",
		"ОсновнойОбъектАдресации",
		"ДополнительныйОбъектАдресации",
		ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПерсональныйШаблонПриИзменении(Элемент)
	
	Если Объект.ПерсональныйШаблон Тогда
		Объект.Ответственный = ПользователиКлиент.ТекущийПользователь();
	Иначе
		Объект.Ответственный = Неопределено;
	КонецЕсли;
	НадписьПерсональногоШаблона = ПолучитьНадписьПерсональногоШаблона(Объект.ПерсональныйШаблон, Объект.Ответственный);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтветственныйПриИзменении(Элемент)
	
	НадписьПерсональногоШаблона = ПолучитьНадписьПерсональногоШаблона(Объект.ПерсональныйШаблон, Объект.Ответственный);
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийЭлементовФормы

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПриСозданииНовогоПриЧтенииНаСервере()
	
	НадписьПерсональногоШаблона = ПолучитьНадписьПерсональногоШаблона(Объект.ПерсональныйШаблон, Объект.Ответственный);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьНадписьПерсональногоШаблона(ПерсональныйШаблон, Ответственный)
	
	Если ПерсональныйШаблон Тогда
		НадписьПерсональногоШаблона = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Пользоваться шаблоном может только %1'"), Строка(Ответственный));
	Иначе
		НадписьПерсональногоШаблона = НСтр("ru = 'Пользоваться шаблоном могут все пользователи'");
	КонецЕсли;
	
	Возврат НадписьПерсональногоШаблона;
	
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции
