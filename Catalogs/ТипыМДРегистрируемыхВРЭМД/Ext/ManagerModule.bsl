#Область ПрограммныйИнтерфейс

// Возвращает ссылку на элемент справочника по указанным ключевым параметрам
//
// Параметры:
//  codeSystem	 - Строка	 - Значение реквизита codeSystem
//  АтрибутCode	 - Строка	 - Значение реквизита АтрибутCode
// 
// Возвращаемое значение:
//  СправочникСсылка.ТипыМДРегистрируемыхВРЭМД, Неопределено - Ссылка на найденное значение (если не найдено - Неопределено)
//
Функция НайтиПоКлючу(codeSystem, АтрибутCode) Экспорт
	Запрос_ = Новый Запрос(
		"ВЫБРАТЬ
		|	ТипыРЭМД.Ссылка
		|ИЗ
		|	Справочник.ТипыМДРегистрируемыхВРЭМД КАК ТипыРЭМД
		|ГДЕ
		|	ТипыРЭМД.OIDКлассификатораМинздрава = &codeSystem
		|	И ТипыРЭМД.КодМинздрава = &АтрибутCode"
	);
	Запрос_.УстановитьПараметр("codeSystem", codeSystem);
	Запрос_.УстановитьПараметр("АтрибутCode", АтрибутCode);
	Выборка_ = Запрос_.Выполнить().Выбрать();
	Если Выборка_.Следующий() Тогда
		Возврат Выборка_.Ссылка;
	КонецЕсли;

	Возврат Неопределено;
КонецФункции

#КонецОбласти

#Область ЗагрузкаИзНСИ

#Область ПрограммныйИнтефейс

// Функция ПрочитатьДанныеКлассификатораИзXDTO получает данные из Объекта XDTO
// и формирует таблицу значений.
//
// Параметры:
//  ОбъектXDTO     - ОбъектXDTO.
//
// Возвращаемое значение:
//  ТаблицаЗначений.
//
Функция ПрочитатьДанныеКлассификатораИзXDTO(ОбъектXDTO, ПараметрыЗагрузки) Экспорт
	
	Таблица_ = Новый ТаблицаЗначений;
	Таблица_.Колонки.Добавить("КодМинздрава", Новый ОписаниеТипов("Строка"));
	Таблица_.Колонки.Добавить("КодТипаМД", Новый ОписаниеТипов("Строка"));
	Таблица_.Колонки.Добавить("OIDКлассификатораМинздрава", Новый ОписаниеТипов("Строка"));
	Таблица_.Колонки.Добавить("Наименование", Новый ОписаниеТипов("Строка"));
	Таблица_.Колонки.Добавить("НаименованиеПолное", Новый ОписаниеТипов("Строка"));
	Таблица_.Колонки.Добавить("НеобходимаПодписьМО", Новый ОписаниеТипов("Булево"));
	Таблица_.Колонки.Добавить("НеобходимСНИЛСПациента", Новый ОписаниеТипов("Булево"));
	Таблица_.Колонки.Добавить("ФорматФайлаДляРЭМД", Новый ОписаниеТипов("ПеречислениеСсылка.ФорматФайлаДляРЭМД"));
	Таблица_.Колонки.Добавить("СсылкаНаРуководствоПоРеализацииСЭМД", Новый ОписаниеТипов("Строка"));
	
	Если Не ТипЗнч(ОбъектXDTO) = Тип("ОбъектXDTO") Тогда
		Возврат Таблица_;
	КонецЕсли; 
	
	СписокЗаписей_ = ОбъектXDTO.item;
	Если ТипЗнч(СписокЗаписей_) <> Тип("СписокXDTO") Тогда
		// Ошибка
		Возврат Таблица_;
	КонецЕсли;
	
	Для Каждого ЭлементВерхнегоУровня_ Из СписокЗаписей_ Цикл
		
		СписокПолей_ = ЭлементВерхнегоУровня_.children.item;
		
		НоваяСтрока_ = Таблица_.Добавить();
		НоваяСтрока_.OIDКлассификатораМинздрава = ПараметрыЗагрузки.ПараметрыЗапроса.OID;
		
		Для Каждого Элемент_ Из СписокПолей_ Цикл
			Если ВРег(Элемент_.key) = "NAME" Тогда
				НоваяСтрока_.Наименование = Элемент_.value;
				НоваяСтрока_.НаименованиеПолное = Элемент_.value;
			ИначеЕсли ВРег(Элемент_.key) = "OID" Тогда
				НоваяСтрока_.КодМинздрава = Элемент_.value;
			ИначеЕсли ВРег(Элемент_.key) = "TYPE" Тогда
				НоваяСтрока_.КодТипаМД = Элемент_.value;
			ИначеЕсли ВРег(Элемент_.key) = "MO_SIGN" Тогда
				Если НРег(Элемент_.value) = "да" Тогда
					НоваяСтрока_.НеобходимаПодписьМО = Истина;
				КонецЕсли;
			ИначеЕсли ВРег(Элемент_.key) = "PATIENT_INFO" Тогда
				Если стрНайти(НРег(Элемент_.value), "с указанием снилс") > 0 Тогда
					НоваяСтрока_.НеобходимСНИЛСПациента = Истина;
				КонецЕсли;
			ИначеЕсли ВРег(Элемент_.key) = "FORMAT" Тогда
				Если НРег(Элемент_.value) = "1" Тогда
					НоваяСтрока_.ФорматФайлаДляРЭМД = Перечисления.ФорматФайлаДляРЭМД.PDF;
				ИначеЕсли НРег(Элемент_.value) = "2" Тогда
					НоваяСтрока_.ФорматФайлаДляРЭМД = Перечисления.ФорматФайлаДляРЭМД.CDA;
				КонецЕсли;
			ИначеЕсли ВРег(Элемент_.key) = "IMPLEMENTATION_GUIDE" Тогда
				НоваяСтрока_.СсылкаНаРуководствоПоРеализацииСЭМД = Элемент_.value;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Возврат Таблица_;
	
КонецФункции

// Функция позвращает параметры для запроса данных классификатора из веб-сервиса
//
// Возвращаемое значение:
//   Структура   - структура с параметрами.
//
Функция ПолучитьПараметрыЗапроса() Экспорт

	Параметры_ = Новый Структура;
	Параметры_.Вставить("OID", "1.2.643.5.1.13.13.99.2.41");
	
	Возврат Параметры_

КонецФункции

#КонецОбласти

#КонецОбласти


