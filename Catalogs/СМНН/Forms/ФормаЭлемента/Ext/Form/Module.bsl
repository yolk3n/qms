
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	Если Объект.Ссылка.Пустая() Тогда
		ПриСозданииНовогоПриЧтенииНаСервере();
	КонецЕсли;
	
	ПривязанКЕСКЛП = ЗначениеЗаполнено(Объект.КодЕСКЛП);
	//Элементы.ИзменитьПринадлежностьКСпискам.Видимость = Не ПривязанКЕСКЛП И Не ТолькоПросмотр;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ПриСозданииНовогоПриЧтенииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Если Не ЗначениеЗаполнено(Объект.КодЕСКЛП) Тогда
		// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
		ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
		// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ
#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ИзменитьПринадлежностьКСпискам(Команда)
	
	ПринадлежностьКСпискам = Новый Структура("БезрецептурныйОтпуск, ЖНВЛП, Наркотические, СильнодействующиеИЯды, ВНациональномКалендареПрививок, ВКалендареПрививокПоЭпидемическимПоказаниям");
	ЗаполнитьЗначенияСвойств(ПринадлежностьКСпискам, Объект);
	ПараметрыИзменения = Новый Структура("ПринадлежностьКСпискам, ОбъектМожноРедактировать", ПринадлежностьКСпискам, Не ЗначениеЗаполнено(Объект.КодЕСКЛП));
	Оповестить = Новый ОписаниеОповещения("ОбработатьИзменениеПринадлежностиКСпискам", ЭтотОбъект);
	ОткрытьФорму("Справочник.СМНН.Форма.ПринадлежностьКСпискам", ПараметрыИзменения, ЭтотОбъект,,,, Оповестить);
	
КонецПроцедуры

#КонецОбласти // ОбработчикиКомандФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ
#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура НаименованиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДанныеВыбора = Новый СписокЗначений;
	ДанныеВыбора.Добавить(ПолучитьНаименованияСМНН());
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийЭлементовФормы

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПриСозданииНовогоПриЧтенииНаСервере()
	
	УстановитьДоступностьРеквизитов();
	
	ПоказатьПринадлежностиКСпискам();
	
	ОтобразитьНадписьРучноеИзменение(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьРеквизитов()
	
	МассивЭлементов = Новый Массив();
	МассивЭлементов.Добавить(Элементы.Наименование.Имя);
	
	МассивЭлементов.Добавить(Элементы.ДействующиеВеществаМНН.Имя);
	МассивЭлементов.Добавить(Элементы.ФормаВыпуска.Имя);
	
	МассивЭлементов.Добавить(Элементы.ГруппаУзловСМНН.Имя);
	МассивЭлементов.Добавить(Элементы.СМННСоответствуютТовары.Имя);
	
	МассивЭлементов.Добавить(Элементы.ФармакоТерапевтическаяГруппа.Имя);
	МассивЭлементов.Добавить(Элементы.АТХКлассификация.Имя);
	
	МассивЭлементов.Добавить(Элементы.КодМКБ10.Имя);
	
	// МИБП
	МассивЭлементов.Добавить(Элементы.ГруппировочноеНаименованиеМИБПНаАнглийскомЯзыке.Имя);
	МассивЭлементов.Добавить(Элементы.ЗаболеваниеИлиГруппаЗаболеванийМИБП.Имя);
	МассивЭлементов.Добавить(Элементы.ПризнакЖивойВакцины.Имя);
	МассивЭлементов.Добавить(Элементы.ПризнакАссоциированнойВакцины.Имя);
	
	ОбъектМожноРедактировать = Не ЗначениеЗаполнено(Объект.КодЕСКЛП);
	ОбщегоНазначенияБольничнаяАптекаКлиентСервер.УстановитьСвойствоЭлементовФормы(Элементы, МассивЭлементов, "ТолькоПросмотр", Не ОбъектМожноРедактировать);
	
	Если ОбъектМожноРедактировать Тогда
		// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
		ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
		// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПоказатьПринадлежностиКСпискам()
	
	Элементы.ГруппаБезРецепта.Видимость = Объект.БезрецептурныйОтпуск;
	Элементы.ГруппаЖНВЛП.Видимость = Объект.ЖНВЛП;
	
	Наркотическое = ЗначениеЗаполнено(Объект.Наркотические);
	Элементы.ГруппаНаркотические.Видимость = Наркотическое;
	Если Наркотическое Тогда
		Элементы.НадписьНаркотические.Заголовок = Объект.Наркотические;
	КонецЕсли;
	
	СильнодействующиеИЯды = ЗначениеЗаполнено(Объект.СильнодействующиеИЯды);
	Элементы.ГруппаСильнодействующиеИЯды.Видимость = СильнодействующиеИЯды;
	Если СильнодействующиеИЯды Тогда
		Элементы.НадписьСильнодействующиеИЯды.Заголовок = Объект.СильнодействующиеИЯды;
	КонецЕсли;
	
	Элементы.ГруппаВНациональномКалендареПрививок.Видимость              = Объект.ВНациональномКалендареПрививок;
	Элементы.ГруппаВКалендареПрививокПоЭпидемическимПоказаниям.Видимость = Объект.ВКалендареПрививокПоЭпидемическимПоказаниям;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОтобразитьНадписьРучноеИзменение(Форма)
	
	#Если Клиент Тогда
		ЦветПоясняющегоТекста = ОбщегоНазначенияКлиентПовтИсп.ЦветСтиля("ПоясняющийТекст");
		ПоясняющийОшибкуТекст = ОбщегоНазначенияКлиентПовтИсп.ЦветСтиля("ПоясняющийОшибкуТекст");
	#Иначе
		ЦветПоясняющегоТекста = ЦветаСтиля.ПоясняющийТекст;
		ПоясняющийОшибкуТекст = ЦветаСтиля.ПоясняющийОшибкуТекст;
	#КонецЕсли
	
	Если Не ЗначениеЗаполнено(Форма.Объект.КодЕСКЛП) Тогда
		Надпись = Новый ФорматированнаяСтрока(НСтр("ru = 'Элемент введен вручную.'"),, ЦветПоясняющегоТекста);
	Иначе
		
		ЧастиНадписи = Новый Массив;
		
		ЧастиНадписи.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'Код ЕСКЛП:'"), " ", Форма.Объект.КодЕСКЛП));
		ЧастиНадписи.Добавить(Символы.ПС);
		
		Если ЗначениеЗаполнено(Форма.Объект.ДатаСозданияЗаписиСМНН) Тогда
			НадписьДатаСоздания = НСтр("ru = 'Дата создания записи: %1.'");
			НадписьДатаСоздания = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НадписьДатаСоздания, Формат(Форма.Объект.ДатаСозданияЗаписиСМНН, "ДЛФ=D"));
			ЧастиНадписи.Добавить(НадписьДатаСоздания);
			ЧастиНадписи.Добавить(" ");
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Форма.Объект.ДатаПоследнегоИзменения) Тогда
			НадписьДатаИзменения = НСтр("ru = 'Дата последнего обновления: %1.'");
			НадписьДатаИзменения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НадписьДатаИзменения, Формат(Форма.Объект.ДатаПоследнегоИзменения, "ДЛФ=D"));
			ЧастиНадписи.Добавить(НадписьДатаИзменения);
			ЧастиНадписи.Добавить(" ");
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Форма.Объект.ДатаОкончанияДействияЗаписиСМНН) Тогда
			ЧастиНадписи.Добавить(НСтр("ru = 'Дата окончания действия записи:'"));
			ЧастиНадписи.Добавить(Новый ФорматированнаяСтрока(Формат(Форма.Объект.ДатаОкончанияДействияЗаписиСМНН, "ДЛФ=D"),, ПоясняющийОшибкуТекст));
		КонецЕсли;
		
		Надпись = Новый ФорматированнаяСтрока(ЧастиНадписи,, ЦветПоясняющегоТекста);
		
	КонецЕсли;
	
	Форма.Элементы.ИнформацияРучноеИзменение.Заголовок = Надпись;
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьНаименованияСМНН()
	
	Результат = "";
	Если ЗначениеЗаполнено(Объект.ДействующиеВеществаМНН) Тогда
		НаименованиеДействующегоВещества = СокрЛП(Объект.ДействующиеВеществаМНН);
		НачПоз = СтрНайти(НаименованиеДействующегоВещества, "(");
		Если НачПоз > 0 Тогда
			НаименованиеДействующегоВещества = Лев(НаименованиеДействующегоВещества, НачПоз - 1);
		КонецЕсли;
		Результат = Результат + СокрЛП(НаименованиеДействующегоВещества);
	КонецЕсли;
	
	Результат = Результат + ", " + СокрЛП(Объект.ФормаВыпуска);
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ОбработатьИзменениеПринадлежностиКСпискам(ПринадлежностьКСпискам, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(ПринадлежностьКСпискам) = Тип("Структура") Тогда
		Модифицированность = Истина;
		ЗаполнитьЗначенияСвойств(Объект, ПринадлежностьКСпискам);
		ПоказатьПринадлежностиКСпискам();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти // СлужебныеПроцедурыИФункции

////////////////////////////////////////////////////////////////////////////////
// СТАНДАРТНЫЕ ПОДСИСТЕМЫ
#Область СтандартныеПодсистемы

// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов

&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
	
	ЗапретРедактированияРеквизитовОбъектовБольничнаяАптекаКлиент.РазрешитьРедактированиеРеквизитовОбъекта(ЭтотОбъект);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры

// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти // СтандартныеПодсистемы
