#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ТипФайловСохраненияПечатныхФорм =
		ИнтеграцияС1СДокументооборотБазоваяФункциональность.ТипФайлаСохраняемойПечатнойФормыПоУмолчанию();
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ВыгружатьИзменения = Ложь;
	ЗагружатьИзменения = Ложь;
	
	ОбновитьПредставление();
	
	// Установим флаги автообновления при необходимости.
	
	Если ЗначениеЗаполнено(ТипОбъектаИС) Тогда
		
		ОбъектПотребителя = Метаданные.НайтиПоПолномуИмени(ТипОбъектаИС);
		Если ОбъектПотребителя <> Неопределено Тогда
			
			Если Метаданные.ПланыОбмена.ИнтеграцияС1СДокументооборотомПереопределяемый.Состав.Содержит(ОбъектПотребителя) Тогда
				СтруктураПоиска = Новый Структура("Обновлять", Истина);
				ОбновляемыеРеквизиты = ПравилаЗаполненияРеквизитовДО.НайтиСтроки(СтруктураПоиска);
				ОбновляемыеПечатныеФормы = ПрисоединяемыеПечатныеФормы.НайтиСтроки(СтруктураПоиска);
				ВыгружатьИзменения = (ОбновляемыеРеквизиты.Количество() <> 0
					Или ОбновляемыеПечатныеФормы.Количество() <> 0);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТипОбъектаДО) Тогда
		
		СтруктураПоиска = Новый Структура("Обновлять", Истина);
		ОбновляемыеРеквизиты = ПравилаЗаполненияРеквизитовИС.НайтиСтроки(СтруктураПоиска);
		ЗагружатьИзменения = (ОбновляемыеРеквизиты.Количество() <> 0);
		
	КонецЕсли;
	
	Если Не ПометкаУдаления И ИнтеграцияС1СДокументооборотБазоваяФункциональность.ВерсияСервиса() <> "0.0.0.0" Тогда
		ПроверитьПравила();
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновитьПовторноИспользуемыеЗначения();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Обновляет представление правила согласно представлениям объектов и ключевых реквизитов.
//
Процедура ОбновитьПредставление()
	
	// Соберем представление объекта ИС.
	ПредставлениеОбъектаИС = "";
	
	ИнтеграцияС1СДокументооборотБазоваяФункциональностьПереопределяемый.ПриОпределенииПредставленияОбъектаПотребителя(
		ЭтотОбъект,
		ПредставлениеОбъектаИС);
	
	Если ПредставлениеОбъектаИС = "" И ЗначениеЗаполнено(ТипОбъектаИС) Тогда
		
		ОбъектПотребителя = Метаданные.НайтиПоПолномуИмени(ТипОбъектаИС);
		Если ОбъектПотребителя <> Неопределено Тогда
			
			ПредставлениеОбъектаИС = ?(ОбъектПотребителя.Синоним = "",
				ОбъектПотребителя.Имя,
				ОбъектПотребителя.Синоним);
			
			// Дополним представление ключевыми реквизитами.
			СтруктураПоиска = Новый Структура("Ключевой", Истина);
			КлючевыеРеквизиты = ПравилаЗаполненияРеквизитовИС.НайтиСтроки(СтруктураПоиска);
			Для Каждого КлючевойРеквизит Из КлючевыеРеквизиты Цикл
				Если КлючевойРеквизит.Вариант = Перечисления.ВариантыПравилЗаполненияРеквизитов.УказанноеЗначение Тогда
					ПредставлениеОбъектаИС = ПредставлениеОбъектаИС + ", " + Строка(КлючевойРеквизит.ЗначениеРеквизитаИС);
					
				ИначеЕсли КлючевойРеквизит.Вариант = Перечисления.ВариантыПравилЗаполненияРеквизитов.ПустаяСсылка() Тогда
					
				КонецЕсли;
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТипОбъектаДО) Тогда
		
		// Выберем представление согласно типу.
		Если ТипОбъектаДО = "DMIncomingDocument" Тогда
			ПредставлениеОбъектаДО = НСтр("ru = 'Входящий документ'");
		ИначеЕсли ТипОбъектаДО = "DMInternalDocument" Тогда
			ПредставлениеОбъектаДО = НСтр("ru = 'Внутренний документ'");
		ИначеЕсли ТипОбъектаДО = "DMOutgoingDocument" Тогда
			ПредставлениеОбъектаДО = НСтр("ru = 'Исходящий документ'");
		ИначеЕсли ТипОбъектаДО = "DMCorrespondent" Тогда
			Если ИнтеграцияС1СДокументооборотПовтИсп.ИспользоватьТерминКорреспонденты() Тогда
				ПредставлениеОбъектаДО = НСтр("ru = 'Корреспондент'");
			Иначе
				ПредставлениеОбъектаДО = НСтр("ru = 'Контрагент'");
			КонецЕсли;
		Иначе
			ПредставлениеОбъектаДО = ТипОбъектаДО;
		КонецЕсли;
		
		// Дополним представление ключевыми реквизитами.
		СтруктураПоиска = Новый Структура("Ключевой", Истина);
		КлючевыеРеквизиты = ПравилаЗаполненияРеквизитовДО.НайтиСтроки(СтруктураПоиска);
		Для Каждого КлючевойРеквизит Из КлючевыеРеквизиты Цикл
			Если КлючевойРеквизит.Вариант = Перечисления.ВариантыПравилЗаполненияРеквизитов.УказанноеЗначение Тогда
				ПредставлениеОбъектаДО = ПредставлениеОбъектаДО + ", " + Строка(КлючевойРеквизит.ЗначениеРеквизитаДО);
				
			ИначеЕсли КлючевойРеквизит.Вариант = Перечисления.ВариантыПравилЗаполненияРеквизитов.ИзШаблона Тогда
				ПредставлениеОбъектаДО = ПредставлениеОбъектаДО + ", " + Строка(КлючевойРеквизит.ШаблонЗначение);
				
			КонецЕсли;
		КонецЦикла;
		
	Иначе
		
		ПредставлениеОбъектаДО = "";
		
	КонецЕсли;
	
	// Соберем наименование.
	Если ЗначениеЗаполнено(ПредставлениеОбъектаИС) И ЗначениеЗаполнено(ПредставлениеОбъектаДО) Тогда
		Наименование = ПредставлениеОбъектаИС + " - " + ПредставлениеОбъектаДО;
	Иначе
		Наименование = "";
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьПравила()
	
	РеквизитыТекущегоВидаДокументаДО = Справочники.ПравилаИнтеграцииС1СДокументооборотом.ПолучитьРеквизитыОбъектаДО(
		ТипОбъектаДО,
		Новый Структура("documentType",
			Справочники.ПравилаИнтеграцииС1СДокументооборотом.ВидДокументаИзПравила(ЭтотОбъект)));
	
	ВсеРеквизитыОбъектаДО = Справочники.ПравилаИнтеграцииС1СДокументооборотом.ПолучитьРеквизитыОбъектаДО(
		ТипОбъектаДО,,,
		Истина);
	
	РеквизитыОбъектаИС = ИнтеграцияС1СДокументооборотБазоваяФункциональность.ПолучитьРеквизитыОбъектаИС(ТипОбъектаИС);
	
	МенеджерОбъектаИС = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(ТипОбъектаИС);
	МетаданныеОбъектаИС = Метаданные.НайтиПоПолномуИмени(ТипОбъектаИС);
	Если ОбщегоНазначения.ЭтоСправочник(МетаданныеОбъектаИС)
			Или ОбщегоНазначения.ЭтоПланВидовРасчета(МетаданныеОбъектаИС) Тогда
		ОбъектИС = МенеджерОбъектаИС.СоздатьЭлемент();
	ИначеЕсли ОбщегоНазначения.ЭтоДокумент(МетаданныеОбъектаИС) Тогда
		ОбъектИС = МенеджерОбъектаИС.СоздатьДокумент();
	КонецЕсли;
	ОбъектИС.Заполнить(Неопределено);
	
	Прокси = ИнтеграцияС1СДокументооборотБазоваяФункциональностьПовтИсп.ПолучитьПрокси();
	ОбъектXDTO = ИнтеграцияС1СДокументооборотБазоваяФункциональность.ПолучитьНовыйОбъект(Прокси, ТипОбъектаДО);
	
	СписокОшибок = Новый Массив;
	
	ПроверитьПравилаЗаполненияРеквизитовДО(
		ОбъектИС,
		МетаданныеОбъектаИС,
		РеквизитыОбъектаИС,
		ВсеРеквизитыОбъектаДО,
		СписокОшибок);
	ПроверитьПравилаЗаполненияРеквизитовИС(
		ОбъектИС,
		ОбъектXDTO,
		РеквизитыОбъектаИС,
		РеквизитыТекущегоВидаДокументаДО,
		ВсеРеквизитыОбъектаДО,
		СписокОшибок);
	
	Попытка
		Справочники.ПравилаИнтеграцииС1СДокументооборотом.ПроверитьВыражениеУсловияПрименимостиПриВыгрузке(
			УсловиеПрименимостиПриВыгрузке,
			ОбъектИС);
	Исключение
		ТекстИсключения = КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
		СписокОшибок.Добавить(
			СтрШаблон(
				НСтр("ru = 'Ошибка в условии применимости правила для передачи данных в 1С:Документооборот:
					|Не удалось выполнить выражение на встроенном языке по причине:
					|""%1""'"),
						ТекстИсключения));
	КонецПопытки;
	Попытка
		Справочники.ПравилаИнтеграцииС1СДокументооборотом.ПроверитьВыражениеУсловияПрименимостиПриЗагрузке(
			УсловиеПрименимостиПриЗагрузке,
			ОбъектXDTO);
	Исключение
		ТекстИсключения = КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
		СписокОшибок.Добавить(
			СтрШаблон(
				НСтр("ru = 'Ошибка в условии применимости правила для получения данных из 1С:Документооборота:
					|Не удалось выполнить выражение на встроенном языке по причине:
					|""%1""'"),
						ТекстИсключения));
	КонецПопытки;
	
	Если СписокОшибок.Количество() > 0 Тогда
		ВызватьИсключение СтрСоединить(СписокОшибок, Символы.ПС + Символы.ПС);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьПравилаЗаполненияРеквизитовДО(ОбъектИС, МетаданныеОбъектаИС, РеквизитыОбъектаИС,
		ВсеРеквизитыОбъектаДО, СписокОшибок)
	
	Для Каждого Правило Из ПравилаЗаполненияРеквизитовДО Цикл
		
		ПараметрыПроверки = Новый Структура;
		ПараметрыПроверки.Вставить("ТекущееЗначение");
		ПараметрыПроверки.Вставить("ПредставлениеРеквизитаДО");
		ПараметрыПроверки.Вставить("ТекстОшибки");
		
		РеквизитДО = ВсеРеквизитыОбъектаДО.Найти(Правило.ИмяРеквизитаОбъектаДО, "Имя");
		ТаблицаДО = ВсеРеквизитыОбъектаДО.Найти(Правило.Таблица, "Имя");
		ПредставлениеТипаРеквизитаДО = "";
		
		Если Правило.ЭтоТаблица Тогда
			ПредставлениеТипаРеквизитаДО = НСтр("ru = 'таблицы ДО'");
			
		ИначеЕсли Правило.ЭтоДополнительныйРеквизитДО Тогда
			ПредставлениеТипаРеквизитаДО = НСтр("ru = 'доп. реквизита ДО'");
			
		ИначеЕсли Не ЗначениеЗаполнено(Правило.Таблица) Тогда
			ПредставлениеТипаРеквизитаДО = НСтр("ru = 'реквизита ДО'");
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Правило.Таблица) Тогда
			ПараметрыПроверки.ПредставлениеРеквизитаДО = СтрШаблон(НСтр("ru = 'реквизита ""%1"" таблицы ДО ""%2""'"),
				?(РеквизитДО = Неопределено, Правило.ИмяРеквизитаОбъектаДО, РеквизитДО.Представление),
				?(ТаблицаДО = Неопределено, Правило.Таблица, ТаблицаДО.Представление));
			
		Иначе
			ПараметрыПроверки.ПредставлениеРеквизитаДО = СтрШаблон("%1 ""%2""",
				ПредставлениеТипаРеквизитаДО,
				?(РеквизитДО = Неопределено, Правило.ИмяРеквизитаОбъектаДО, РеквизитДО.Представление));
			
		КонецЕсли;
		
		Попытка
			
			Если Правило.Вариант = Перечисления.ВариантыПравилЗаполненияРеквизитов.РеквизитОбъекта Тогда
				
				Если ЗначениеЗаполнено(Правило.Таблица) Тогда // это реквизит табличной части
					
					РазделеннаяСтрока = СтрРазделить(Правило.ИмяРеквизитаОбъектаИС, ".");
					Если РазделеннаяСтрока.Количество() = 1 Тогда
						ТекущиеМетаданные = МетаданныеОбъектаИС;
						ИмяРеквизита = РазделеннаяСтрока[0];
						
					ИначеЕсли РазделеннаяСтрока.Количество() = 2 Тогда
						ПараметрыПроверки.ТекстОшибки = СтрШаблон(
							НСтр("ru = 'Выбран вариант заполнения из реквизита ""%1"" несуществующей таблицы ""%2""'"),
								РазделеннаяСтрока[1],
								РазделеннаяСтрока[0]);
						ТекущиеМетаданные = МетаданныеОбъектаИС.ТабличныеЧасти[РазделеннаяСтрока[0]];
						ИмяРеквизита = РазделеннаяСтрока[1];
						
					Иначе
						ПараметрыПроверки.ТекстОшибки = НСтр("ru = 'Механизм заполнения реквизитов таблиц
							|не поддерживает обращение к реквизиту ИС через точку'");
						ВызватьИсключение ПараметрыПроверки.ТекстОшибки;
						
					КонецЕсли;
					
					Если Правило.ЭтоДополнительныйРеквизитИС Тогда
						ПараметрыПроверки.ТекстОшибки = НСтр("ru = 'Механизм заполнения реквизитов таблиц
							|не поддерживает заполнение из доп. реквизитов'");
						
					Иначе
						ПараметрыПроверки.ТекстОшибки = СтрШаблон(
							НСтр("ru = 'Выбран вариант заполнения из несуществующего реквизита ""%1""'"), ИмяРеквизита);
						
					КонецЕсли;
					
					Если Не ЭтоСтандартныйРеквизит(ТекущиеМетаданные, ИмяРеквизита) Тогда
						ПараметрыПроверки.ТекущееЗначение = ТекущиеМетаданные.Реквизиты[ИмяРеквизита];
					КонецЕсли;
					
				Иначе // обычный или дополнительный реквизит
					
					Если Правило.ИмяРеквизитаОбъектаИС = "Представление" Тогда
						
						ПараметрыПроверки.ТекущееЗначение = Строка(ОбъектИС);
						
					ИначеЕсли Правило.ЭтоДополнительныйРеквизитИС Тогда
						
						Если РеквизитыОбъектаИС.Найти(
								Правило.ДополнительныйРеквизитИС, "ДополнительныйРеквизитИС") = Неопределено Тогда
							ПараметрыПроверки.ТекстОшибки = СтрШаблон(
								НСтр("ru = 'Выбран вариант заполнения из несуществующего доп. реквизита ""%1""'"),
									ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
										Правило.ДополнительныйРеквизитИС, "Наименование"));
							ВызватьИсключение ПараметрыПроверки.ТекстОшибки;
						КонецЕсли;
						
					ИначеЕсли Найти(Правило.ИмяРеквизитаОбъектаИС, ".") > 0 Тогда
						
						ПараметрыВыражения = Новый Структура("ПараметрыПроверки, ОбъектИС",
							ПараметрыПроверки,
							ОбъектИС);
						
						РазделеннаяСтрока = СтрРазделить(Правило.ИмяРеквизитаОбъектаИС, ".");
						Выражение = Новый Массив;
						Выражение.Добавить("Параметры.ПараметрыПроверки.ТекущееЗначение = Параметры.ОбъектИС");
						Для Каждого Элемент Из РазделеннаяСтрока Цикл
							Выражение.Добавить(СтрШаблон("[""%1""]", Элемент));
						КонецЦикла;
						Выражение.Добавить(";");
						
						ПараметрыПроверки.ТекстОшибки = СтрШаблон(
							НСтр("ru = 'Выбран вариант заполнения из несуществующего реквизита ""%1""'"),
								Правило.ИмяРеквизитаОбъектаИС);
						
						ОбщегоНазначения.ВыполнитьВБезопасномРежиме(СтрСоединить(Выражение), ПараметрыВыражения);
						
					Иначе // обычный реквизит объекта
						
						Если Правило.ЭтоТаблица Тогда
							ПараметрыПроверки.ТекстОшибки = СтрШаблон(
								НСтр("ru = 'Выбран вариант заполнения из несуществующей таблицы ""%1""'"),
									Правило.ИмяРеквизитаОбъектаИС);
						Иначе
							ПараметрыПроверки.ТекстОшибки = СтрШаблон(
								НСтр("ru = 'Выбран вариант заполнения из несуществующего реквизита ""%1""'"),
									Правило.ИмяРеквизитаОбъектаИС);
						КонецЕсли;
						
						ПараметрыПроверки.ТекущееЗначение = ОбъектИС[Правило.ИмяРеквизитаОбъектаИС];
						
					КонецЕсли;
					
				КонецЕсли;
				
			ИначеЕсли Правило.Вариант = Перечисления.ВариантыПравилЗаполненияРеквизитов.ВыражениеНаВстроенномЯзыке Тогда
				
				Попытка
					Справочники.ПравилаИнтеграцииС1СДокументооборотом.ПроверитьВыражениеПравилаВыгрузки(
						Правило.ВычисляемоеВыражение,
						ОбъектИС);
				Исключение
					ТекстИсключения = КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
					ПараметрыПроверки.ТекстОшибки = СтрШаблон(
						НСтр("ru = 'Не удалось выполнить выражение на встроенном языке по причине:
							|""%1""'"), ТекстИсключения);
					ВызватьИсключение;
				КонецПопытки;
				
			КонецЕсли;
			
		Исключение
			СписокОшибок.Добавить(
				СтрШаблон(
					НСтр("ru = 'Ошибка в правиле заполнения %1 (Закладка ""Передача в 1С:Документооборот""):
						|%2'"),
							ПараметрыПроверки.ПредставлениеРеквизитаДО,
							ПараметрыПроверки.ТекстОшибки));
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьПравилаЗаполненияРеквизитовИС(ОбъектИС, ОбъектXDTO, РеквизитыОбъектаИС,
		РеквизитыТекущегоВидаДокументаДО, ВсеРеквизитыОбъектаДО, СписокОшибок)
	
	Для Каждого Правило Из ПравилаЗаполненияРеквизитовИС Цикл
		
		РеквизитИС = РеквизитыОбъектаИС.Найти(Правило.ИмяРеквизитаОбъектаИС, "Имя");
		ТаблицаИС = РеквизитыОбъектаИС.Найти(Правило.Таблица, "Имя");
		ПредставлениеРеквизитаИС = "";
		ПредставлениеТипаРеквизитаИС = "";
		
		Если Правило.ЭтоТаблица Тогда
			ПредставлениеТипаРеквизитаИС = НСтр("ru = 'таблицы ИС'");
			
		ИначеЕсли Правило.ЭтоДополнительныйРеквизитИС Тогда
			ПредставлениеТипаРеквизитаИС = НСтр("ru = 'доп. реквизита ИС'");
			
		ИначеЕсли Не ЗначениеЗаполнено(Правило.Таблица) Тогда
			ПредставлениеТипаРеквизитаИС = НСтр("ru = 'реквизита ИС'");
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Правило.Таблица) Тогда
			ПредставлениеРеквизитаИС = СтрШаблон(НСтр("ru = 'реквизита ""%1"" таблицы ИС ""%2""'"),
				?(РеквизитИС = Неопределено, Правило.ИмяРеквизитаОбъектаИС, РеквизитИС.Представление),
				?(ТаблицаИС = Неопределено, Правило.Таблица, ТаблицаИС.Представление));
			
		Иначе
			ПредставлениеРеквизитаИС = СтрШаблон("%1 ""%2""",
				ПредставлениеТипаРеквизитаИС,
				?(РеквизитИС = Неопределено, Правило.ИмяРеквизитаОбъектаИС, РеквизитИС.Представление));
			
		КонецЕсли;
		
		Если Правило.Вариант = Перечисления.ВариантыПравилЗаполненияРеквизитов.РеквизитОбъекта Тогда
			
			Если Не Правило.ЭтоДополнительныйРеквизитДО Тогда
				
				РазделеннаяСтрока = СтрРазделить(Правило.ИмяРеквизитаОбъектаДО, ".", Ложь);
				Если РазделеннаяСтрока.Количество() = 1 Тогда // "свойство"
					Таблица = "";
					ИмяРеквизита = Правило.ИмяРеквизитаОбъектаДО;
					
				ИначеЕсли РазделеннаяСтрока.Количество() = 2 Тогда // "список.свойство"
					Таблица = "";
					ИмяРеквизита = СтрШаблон("%1.%2", РазделеннаяСтрока[0], РазделеннаяСтрока[1]);
					
				ИначеЕсли РазделеннаяСтрока.Количество() = 3 Тогда // "список.список.свойство"
					Таблица = СтрШаблон("%1.%2", РазделеннаяСтрока[0], РазделеннаяСтрока[1]);
					ИмяРеквизита = РазделеннаяСтрока[2];
					
				Иначе
					СписокОшибок.Добавить(
						СтрШаблон(
							НСтр("ru = 'Ошибка в правиле заполнения %1 (Закладка ""Получение из 1С:Документооборота""):
								|Указано недопустимое имя реквизита-источника данных заполнения: %2'"),
									ПредставлениеРеквизитаИС,
									Правило.ИмяРеквизитаОбъектаДО));
					Продолжить;
					
				КонецЕсли;
				
				Отбор = Новый Структура("Имя, Таблица", ИмяРеквизита, Таблица);
				
				НайденныеСтроки = РеквизитыТекущегоВидаДокументаДО.НайтиСтроки(Отбор);
				
				Если НайденныеСтроки.Количество() = 0 Тогда
					ВсеРеквизитыДОРеквизит = ВсеРеквизитыОбъектаДО.НайтиСтроки(Отбор);
					ВсеРеквизитыДОТаблица = ВсеРеквизитыОбъектаДО.НайтиСтроки(Новый Структура("Имя", Таблица));
					
					Если Правило.ЭтоТаблица Тогда
						СписокОшибок.Добавить(
							СтрШаблон(
								НСтр("ru = 'Ошибка в правиле заполнения %1 (Закладка ""Получение из 1С:Документооборота""):
									|выбран вариант заполнения из несуществующей таблицы ""%2""'"),
										ПредставлениеРеквизитаИС,
										?(ВсеРеквизитыДОРеквизит.Количество() = 0,
											Правило.ИмяРеквизитаОбъектаДО,
											ВсеРеквизитыДОРеквизит[0].Представление)));
					Иначе
						Если ЗначениеЗаполнено(Таблица) Тогда
							СписокОшибок.Добавить(
								СтрШаблон(
									НСтр("ru = 'Ошибка в правиле заполнения %1 (Закладка ""Получение из 1С:Документооборота""):
										|выбран вариант заполнения из реквизита ""%2"" несуществующей таблицы ""%3""'"),
											ПредставлениеРеквизитаИС,
											?(ВсеРеквизитыДОРеквизит.Количество() = 0,
												Правило.ИмяРеквизитаОбъектаДО,
												ВсеРеквизитыДОРеквизит[0].Представление),
											?(ВсеРеквизитыДОТаблица.Количество() = 0,
												Таблица,
												ВсеРеквизитыДОТаблица[0].Представление)));
						Иначе
							СписокОшибок.Добавить(
								СтрШаблон(
									НСтр("ru = 'Ошибка в правиле заполнения %1 (Закладка ""Получение из 1С:Документооборота""):
										|выбран вариант заполнения из несуществующего реквизита ""%2""'"),
											ПредставлениеРеквизитаИС,
											?(ВсеРеквизитыДОРеквизит.Количество() = 0,
												Правило.ИмяРеквизитаОбъектаДО,
												ВсеРеквизитыДОРеквизит[0].Представление)));
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				
			Иначе // дополнительный реквизит ДО
				
				Отбор = Новый Структура("ДопРеквизитID, ДопРеквизитТип",
					Правило.ДополнительныйРеквизитДОID,
					Правило.ДополнительныйРеквизитДОТип);
				НайденныеСтроки = РеквизитыТекущегоВидаДокументаДО.НайтиСтроки(Отбор);
				
				Если НайденныеСтроки.Количество() = 0 Тогда
					СписокОшибок.Добавить(
						СтрШаблон(
							НСтр("ru = 'Ошибка в правиле заполнения %1 (Закладка ""Получение из 1С:Документооборота""):
								|выбран вариант заполнения из несуществующего доп. реквизита ""%2""'"),
									ПредставлениеРеквизитаИС,
									Правило.ДополнительныйРеквизитДОID));
				КонецЕсли;
				
			КонецЕсли;
			
		ИначеЕсли Правило.Вариант = Перечисления.ВариантыПравилЗаполненияРеквизитов.ВыражениеНаВстроенномЯзыке Тогда
			
			Попытка
				Справочники.ПравилаИнтеграцииС1СДокументооборотом.ПроверитьВыражениеПравилаЗагрузки(
					Правило.ВычисляемоеВыражение,
					ОбъектXDTO,
					ОбъектИС);
			Исключение
				ТекстИсключения = КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
				СписокОшибок.Добавить(
					СтрШаблон(
						НСтр("ru = 'Ошибка в правиле заполнения %1 (Закладка ""Получение из 1С:Документооборота""):
							|Не удалось выполнить выражение на встроенном языке по причине:
							|""%2""'"),
								ПредставлениеРеквизитаИС,
								ТекстИсключения));
			КонецПопытки;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ЭтоСтандартныйРеквизит(ТекущиеМетаданные, ИмяРеквизита)
	
	Для Каждого Реквизит Из ТекущиеМетаданные.СтандартныеРеквизиты Цикл
		Если Реквизит.Имя = ИмяРеквизита Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

#КонецОбласти

#КонецЕсли