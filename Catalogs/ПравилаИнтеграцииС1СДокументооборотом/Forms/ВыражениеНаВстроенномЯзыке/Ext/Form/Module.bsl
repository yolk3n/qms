#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("ТипОбъектаДО", ТипОбъектаДО);
	Параметры.Свойство("ТипОбъектаИС", ТипОбъектаИС);
	Параметры.Свойство("ВидДокументаДО", ВидДокументаДО);
	Параметры.Свойство("ВычисляемоеВыражение", ВычисляемоеВыражение);
	Параметры.Свойство("ТипВыражения", ТипВыражения);
	
	ИнструкцияМассив = Новый Массив;
	
	ИнструкцияМассив.Добавить(
		"<html>
		|<style type=""text/css"">
		|	body {
		|		overflow:    auto;
		|		margin-top:  12px;
		|		margin-left: 20px;
		|		font-family: MS Shell Dlg, Microsoft Sans Serif, sans-serif;
		|		font-size:   8pt;}
		|	table {
		|		width:       270px;
		|		font-family: MS Shell Dlg, Microsoft Sans Serif, sans-serif;
		|		font-size:   8pt;}
		|	td {vertical-align: top;}
		|	p {
		|		margin-top: 7px;}
		|</style>
		|<body>");
	
	Если ТипВыражения = "ПравилоВыгрузки" Или ТипВыражения = "ПравилоЗагрузки" Тогда
		
		Заголовок = НСтр("ru = 'Выражение на встроенном языке'");
		
		ИнструкцияМассив.Добавить("<p>");
		ИнструкцияМассив.Добавить(
			СтрШаблон(
				НСтр("ru = 'Результат вычисления выражения на встроенном языке 1С:Предприятия
					|должен присваиваться свойству %1 переменной %2.'"),
				"<b>Результат</b>",
				"<b>Параметры</b>"));
		ИнструкцияМассив.Добавить(" ");
			
		Если Параметры.ЭтоТаблица Тогда
			ИнструкцияМассив.Добавить(
				СтрШаблон(
					НСтр("ru = 'Для заполнения таблицы результат должен иметь тип %1 с колонками:'"),
				"<b>ТаблицаЗначений</b>"));
			ИнструкцияМассив.Добавить("</p><table>");
			
			Если ТипВыражения = "ПравилоВыгрузки" Тогда
				СоответствиеСвойствXDTO = Справочники.ПравилаИнтеграцииС1СДокументооборотом.
					СоответствиеСвойствXDTOиРеквизитовФормыОбъектаДО(ТипОбъектаДО);
				ИмяТаблицы = СтрЗаменить(Параметры.ИмяРеквизитаОбъектаДО, ".rows", "");
				Для Каждого Элемент Из СоответствиеСвойствXDTO[ИмяТаблицы].rows[1] Цикл
					ИнструкцияМассив.Добавить("<tr><td>");
					ИнструкцияМассив.Добавить(Элемент.Значение);
					ИнструкцияМассив.Добавить("</td></tr>");
				КонецЦикла;
			Иначе
				МетаданныеОбъекта = Метаданные.НайтиПоПолномуИмени(ТипОбъектаИС);
				Для Каждого Элемент Из МетаданныеОбъекта.ТабличныеЧасти[Параметры.ИмяРеквизитаОбъектаИС].Реквизиты Цикл
					ИнструкцияМассив.Добавить("<tr><td>");
					ИнструкцияМассив.Добавить(Элемент.Имя);
					ИнструкцияМассив.Добавить("</td></tr>");
				КонецЦикла;
			КонецЕсли;
			
			ИнструкцияМассив.Добавить("</table>");
			
		ИначеЕсли ТипВыражения = "ПравилоВыгрузки" Тогда
			ИнструкцияМассив.Добавить(
				СтрШаблон(
					НСтр("ru = 'Для установки ссылочного значения на стороне 1С:Документооборота
						|свойству %1 следует присвоить строку с названием типа согласно
						|описанию веб-сервиса, а свойству %2 - идентификатор ссылки
						|или имя значения перечисления. Свойству %3 в этом случае присваивается
						|пользовательское представление результата.'"),
					"<b>РезультатТип</b>",
					"<b>РезультатID</b>",
					"<b>Результат</b>"));
			
		КонецЕсли;
		
	ИначеЕсли ТипВыражения = "УсловиеПрименимостиПриВыгрузке" Тогда
		
		Заголовок = НСтр("ru = 'Условие применимости правила'");
		
		ИнструкцияМассив.Добавить("<p>");
		ИнструкцияМассив.Добавить(
			СтрШаблон(
				НСтр("ru = 'Выражение на встроенном языке 1С:Предприятия определяет
					|применимость правила при создании объекта 1С:Документооборота на основании
					|объекта этой конфигурации. Результат вычисления должен присваиваться свойству
					|%1 переменной %2. %3 означает применимость правила,
					|%4 - неприменимость. Выражение проверяется только для правил,
					|подходящих по значениям ключевых реквизитов.
					|%5Значение по умолчанию: %3.'"),
				"<b>Результат</b>",
				"<b>Параметры</b>",
				"<b>Истина</b>",
				"<b>Ложь</b>",
				"</p><p>"));
		ИнструкцияМассив.Добавить("<p>");
		
	ИначеЕсли ТипВыражения = "УсловиеПрименимостиПриЗагрузке" Тогда
		
		Заголовок = НСтр("ru = 'Условие применимости правила'");
		
		ИнструкцияМассив.Добавить("<p>");
		ИнструкцияМассив.Добавить(
			СтрШаблон(
				НСтр("ru = 'Выражение на встроенном языке 1С:Предприятия определяет
					|применимость правила при создании объекта этой конфигурации на основании
					|объекта 1С:Документооборота. Результат вычисления должен присваиваться свойству
					|%1 переменной %2. %3 означает применимость правила,
					|%4 - неприменимость. Выражение проверяется только для правил,
					|подходящих по значениям ключевых реквизитов.
					|%5Значение по умолчанию: %3.'"),
				"<b>Результат</b>",
				"<b>Параметры</b>",
				"<b>Истина</b>",
				"<b>Ложь</b>",
				"</p><p>"));
		ИнструкцияМассив.Добавить("<p>");
		
	КонецЕсли;
	
	ИнструкцияМассив.Добавить("<p>");
	ИнструкцияМассив.Добавить(НСтр("ru ='К объекту'"));
	ИнструкцияМассив.Добавить(" ");
	
	Если ТипВыражения = "ПравилоЗагрузки" Или ТипВыражения = "УсловиеПрименимостиПриЗагрузке" Тогда
		ИнструкцияМассив.Добавить(НСтр("ru = '1С:Документооборота'"));
		
		ПараметрыЗаполнения = Неопределено;
		Если ВидДокументаДО <> Неопределено Тогда
			ПараметрыЗаполнения = Новый Структура;
			ПараметрыЗаполнения.Вставить("documentType", ВидДокументаДО);
		КонецЕсли;
		
		СоставРеквизитов = Справочники.ПравилаИнтеграцииС1СДокументооборотом.ПолучитьРеквизитыОбъектаДО(
			ТипОбъектаДО,
			ПараметрыЗаполнения);
	Иначе // ПравилоВыгрузки, УсловиеПрименимостиПриВыгрузке
		ИнструкцияМассив.Добавить(НСтр("ru = 'этой конфигурации'"));
		СоставРеквизитов = ИнтеграцияС1СДокументооборотБазоваяФункциональность.ПолучитьРеквизитыОбъектаИС(
			ТипОбъектаИС,
			Истина);
	КонецЕсли;
	
	ИнструкцияМассив.Добавить(" ");
	ИнструкцияМассив.Добавить(
		СтрШаблон(
			НСтр("ru = 'можно обращаться через свойство %1 переменной %2.
				|Реквизиты источника:'"),
			"<b>Источник</b>",
			"<b>Параметры</b>"));
	ИнструкцияМассив.Добавить("</p><table>");
	
	Если (ТипВыражения = "ПравилоЗагрузки" Или ТипВыражения = "УсловиеПрименимостиПриЗагрузке") Тогда
		СоставРеквизитов.Сортировать("ЭтоТаблица, ДопРеквизит, Имя");
	Иначе
		СоставРеквизитов.Сортировать("ЭтоТаблица, ЭтоДополнительныйРеквизитИС, Имя");
	КонецЕсли;
	
	ВыведенЗаголовокДопРеквизитов = Ложь;
	
	Для Каждого СтруктураРеквизита Из СоставРеквизитов Цикл
		
		Если ЗначениеЗаполнено(СтруктураРеквизита.Таблица) Тогда
			Продолжить;
		КонецЕсли;
		
		Если (ТипВыражения = "ПравилоЗагрузки" Или ТипВыражения = "УсловиеПрименимостиПриЗагрузке") Тогда
			ЭтоДопРеквизит = СтруктураРеквизита.ДопРеквизит;
		Иначе
			ЭтоДопРеквизит = СтруктураРеквизита.ЭтоДополнительныйРеквизитИС;
		КонецЕсли;
		
		Если ЭтоДопРеквизит И Не ВыведенЗаголовокДопРеквизитов Тогда
			ИнструкцияМассив.Добавить("<tr><td>");
			ИнструкцияМассив.Добавить("<b>");
			ИнструкцияМассив.Добавить(НСтр("ru = 'Дополнительные реквизиты:'"));
			ИнструкцияМассив.Добавить("</b>");
			ИнструкцияМассив.Добавить("</tr></td>");
			ВыведенЗаголовокДопРеквизитов = Истина;
		КонецЕсли;
		
		Если СтруктураРеквизита.ЭтоТаблица Тогда
			ИнструкцияМассив.Добавить("<tr><td>");
			ИнструкцияМассив.Добавить("<b>");
			ИнструкцияМассив.Добавить(СтруктураРеквизита.Имя);
			ИнструкцияМассив.Добавить("</b></td>");
			
			Если СтруктураРеквизита.Представление <> СтруктураРеквизита.Имя Тогда
				ИнструкцияМассив.Добавить("<td><b>");
				ИнструкцияМассив.Добавить(СтруктураРеквизита.Представление);
				ИнструкцияМассив.Добавить("</b></td>");
			КонецЕсли;
			ИнструкцияМассив.Добавить("</tr>");
			
			РеквизитыТаблицы = СоставРеквизитов.НайтиСтроки(Новый Структура("Таблица", СтруктураРеквизита.Имя));
			Для Каждого РеквизитТаблицы Из РеквизитыТаблицы Цикл
				ИнструкцияМассив.Добавить("<tr><td>");
				ИнструкцияМассив.Добавить(РеквизитТаблицы.Имя);
				ИнструкцияМассив.Добавить("</td>");
				Если РеквизитТаблицы.Представление <> РеквизитТаблицы.Имя Тогда
					ИнструкцияМассив.Добавить("<td>");
					ИнструкцияМассив.Добавить(РеквизитТаблицы.Представление);
					ИнструкцияМассив.Добавить("</td>");
				КонецЕсли;
				ИнструкцияМассив.Добавить("</tr>");
			КонецЦикла;
			Продолжить;
		КонецЕсли;
		
		Если ЭтоДопРеквизит Тогда
			Если (ТипВыражения = "ПравилоЗагрузки" Или ТипВыражения = "УсловиеПрименимостиПриЗагрузке") Тогда
				ИмяРеквизита = СтрШаблон(НСтр("ru = 'УИД: ""%1""'"), СтруктураРеквизита.ДопРеквизитID);
			Иначе
				ИмяРеквизита = СтрШаблон(НСтр("ru = 'УИД: ""%1""'"), СтруктураРеквизита.Имя);
			КонецЕсли;
		Иначе
			ИмяРеквизита = СтруктураРеквизита.Имя;
		КонецЕсли;
		
		ИнструкцияМассив.Добавить("<tr>");
		Если ТипЗнч(СтруктураРеквизита.Тип) = Тип("СписокЗначений")
				И СтруктураРеквизита.Тип.Количество() > 0
				И Лев(СтруктураРеквизита.Тип[0], 2) = "DM" Тогда
			ИнструкцияМассив.Добавить("<td><a href=""#");
			ИнструкцияМассив.Добавить(СтруктураРеквизита.Тип[0]);
			ИнструкцияМассив.Добавить(""">");
			ИнструкцияМассив.Добавить(ИмяРеквизита);
			ИнструкцияМассив.Добавить("</a></td>");
		Иначе
			ИнструкцияМассив.Добавить("<td>");
			ИнструкцияМассив.Добавить(ИмяРеквизита);
			ИнструкцияМассив.Добавить("</td>");
		КонецЕсли;
		
		Если СтруктураРеквизита.Представление <> ИмяРеквизита Тогда
			ИнструкцияМассив.Добавить("<td>");
			ИнструкцияМассив.Добавить(СтруктураРеквизита.Представление);
			ИнструкцияМассив.Добавить("</td>");
		КонецЕсли;
		
		ИнструкцияМассив.Добавить("</tr>");
		
	КонецЦикла;
	
	ИнструкцияМассив.Добавить("</table>");
	ИнструкцияМассив.Добавить("</body></html>");
	
	Инструкция = СтрСоединить(ИнструкцияМассив);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура РеквизитыПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если Не ЗначениеЗаполнено(ДанныеСобытия.HRef) Тогда
		Возврат;
	КонецЕсли;
	
	Позиция = СтрНайти(ДанныеСобытия.HRef, "#", НаправлениеПоиска.СКонца);
	Ссылка = Сред(ДанныеСобытия.HRef, Позиция + 1);
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Ссылка", Ссылка);
	
	ОткрытьФорму("Обработка.ИнтеграцияС1СДокументооборотБазоваяФункциональность.Форма.ОписаниеВебСервисов",
		ПараметрыФормы, ЭтотОбъект,,,,, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаОчистить(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("КомандаОчиститьЗавершение", ЭтотОбъект);
	ТекстВопроса = НСтр("ru = 'Очистить введенное выражение?'");
	ИнтеграцияС1СДокументооборотБазоваяФункциональностьКлиент.ПоказатьВопросДаНет(ОписаниеОповещения, ТекстВопроса);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОК(Команда)
	
	Закрыть(ВычисляемоеВыражение);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПроверить(Команда)
	
	ОчиститьСообщения();
	ПроверитьВыражениеНаВстроенномЯзыке(ТипВыражения, ВычисляемоеВыражение, ТипОбъектаДО, ТипОбъектаИС);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура КомандаОчиститьЗавершение(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Закрыть("");
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПроверитьВыражениеНаВстроенномЯзыке(ТипВыражения, ВычисляемоеВыражение, ТипОбъектаДО, ТипОбъектаИС)
	
	Прокси = ИнтеграцияС1СДокументооборотБазоваяФункциональностьПовтИсп.ПолучитьПрокси();
	ОбъектXDTO = ИнтеграцияС1СДокументооборотБазоваяФункциональность.ПолучитьНовыйОбъект(Прокси, ТипОбъектаДО);
	
	МенеджерОбъектаИС = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(ТипОбъектаИС);
	МетаданныеОбъектаИС = Метаданные.НайтиПоПолномуИмени(ТипОбъектаИС);
	Если ОбщегоНазначения.ЭтоСправочник(МетаданныеОбъектаИС)
			Или ОбщегоНазначения.ЭтоПланВидовРасчета(МетаданныеОбъектаИС) Тогда
		ОбъектИС = МенеджерОбъектаИС.СоздатьЭлемент();
	ИначеЕсли ОбщегоНазначения.ЭтоДокумент(МетаданныеОбъектаИС) Тогда
		ОбъектИС = МенеджерОбъектаИС.СоздатьДокумент();
	КонецЕсли;
	ОбъектИС.Заполнить(Неопределено);
	
	Если ТипВыражения = "ПравилоВыгрузки" Тогда
		Справочники.ПравилаИнтеграцииС1СДокументооборотом.ПроверитьВыражениеПравилаВыгрузки(
			ВычисляемоеВыражение,
			ОбъектИС);
		
	ИначеЕсли ТипВыражения = "УсловиеПрименимостиПриВыгрузке" Тогда
		Справочники.ПравилаИнтеграцииС1СДокументооборотом.ПроверитьВыражениеУсловияПрименимостиПриВыгрузке(
			ВычисляемоеВыражение,
			ОбъектИС);
		
	ИначеЕсли ТипВыражения = "ПравилоЗагрузки" Тогда
		Справочники.ПравилаИнтеграцииС1СДокументооборотом.ПроверитьВыражениеПравилаЗагрузки(
			ВычисляемоеВыражение,
			ОбъектXDTO,
			ОбъектИС);
		
	ИначеЕсли ТипВыражения = "УсловиеПрименимостиПриЗагрузке" Тогда
		Справочники.ПравилаИнтеграцииС1СДокументооборотом.ПроверитьВыражениеУсловияПрименимостиПриЗагрузке(
			ВычисляемоеВыражение,
			ОбъектXDTO);
		
	КонецЕсли;
	
	ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Ошибок не обнаружено'"));
	
КонецПроцедуры

#КонецОбласти