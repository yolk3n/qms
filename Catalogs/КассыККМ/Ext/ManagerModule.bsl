#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС
#Область ПрограммныйИнтерфейс

// Функция определяет кассу кассу по умолчанию.
//
// Возвращает кассу ККМ, если найдена одна касса.
// Возвращает Неопределено, если касса не найдена или касс больше одной.
//
// Возвращаемое значение:
//	СправочникСсылка.КассыККМ - Найденная касса ККМ
//
Функция КассаККМФискальныйРегистраторПоУмолчанию() Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 2
	|	КассыККМ.Ссылка КАК КассаККМ
	|ИЗ
	|	Справочник.КассыККМ КАК КассыККМ
	|ГДЕ
	|	КассыККМ.ТипКассы = ЗНАЧЕНИЕ(Перечисление.ТипыКассККМ.ФискальныйРегистратор)
	|	И НЕ КассыККМ.ПометкаУдаления
	|	И (КассыККМ.ИспользоватьБезПодключенияОборудования
	|		ИЛИ КассыККМ.ПодключаемоеОборудование.РабочееМесто = &РабочееМесто)
	|");
	
	Запрос.УстановитьПараметр("РабочееМесто", МенеджерОборудованияВызовСервера.РабочееМестоКлиента());
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() = 1
	   И Выборка.Следующий() Тогда
		КассаККМ = Выборка.КассаККМ;
	Иначе
		КассаККМ = Неопределено;
	КонецЕсли;
	
	Возврат КассаККМ;
	
КонецФункции

// Функция определяет кассу кассу по умолчанию.
//
// Возвращает кассу ККМ, если найдена касса.
// Возвращает Неопределено, если касса не найдена.
//
// Возвращаемое значение:
//  СправочникСсылка.КассыККМ - Найденная касса ККМ
//
Функция КассаККМФискальныйРегистраторДляРМК() Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	КассыККМ.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.КассыККМ КАК КассыККМ
	|ГДЕ
	|	КассыККМ.ТипКассы = ЗНАЧЕНИЕ(Перечисление.ТипыКассККМ.ФискальныйРегистратор)
	|	И НЕ КассыККМ.ПометкаУдаления
	|	И НЕ КассыККМ.ИспользоватьБезПодключенияОборудования
	|	И КассыККМ.ПодключаемоеОборудование.РабочееМесто = &РабочееМесто
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	КассыККМ.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.КассыККМ КАК КассыККМ
	|ГДЕ
	|	КассыККМ.ТипКассы = ЗНАЧЕНИЕ(Перечисление.ТипыКассККМ.ФискальныйРегистратор)
	|	И НЕ КассыККМ.ПометкаУдаления
	|	И КассыККМ.ИспользоватьБезПодключенияОборудования
	|");
	Запрос.УстановитьПараметр("РабочееМесто", МенеджерОборудованияВызовСервера.РабочееМестоКлиента());
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

// Функция определяет кассу кассу по умолчанию.
//
// Возвращает кассу ККМ, если найдена одна касса.
// Возвращает Неопределено, если касса не найдена или касс больше одной.
//
// Возвращаемое значение:
//	СправочникСсылка.КассыККМ - Найденная касса ККМ
//
Функция АвтономнаяКассаККМПоУмолчанию() Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 2
	|	КассыККМ.Ссылка КАК КассаККМ
	|ИЗ
	|	Справочник.КассыККМ КАК КассыККМ
	|ГДЕ
	|	КассыККМ.ТипКассы = ЗНАЧЕНИЕ(Перечисление.ТипыКассККМ.АвтономнаяККМ)
	|	И НЕ КассыККМ.ПометкаУдаления
	|");
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() = 1
	   И Выборка.Следующий() Тогда
		КассаККМ = Выборка.КассаККМ;
	Иначе
		КассаККМ = Неопределено;
	КонецЕсли;
	
	Возврат КассаККМ;
	
КонецФункции

// Возвращает реквизиты кассы ККМ
//
// Параметры
//	КассаККМ - СправочникСсылка.КассыККМ
//
// Возвращаемое значение
//	Структура
//
Функция РеквизитыКассыККМ(КассаККМ) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КассыККМ.Ссылка                                  КАК КассаККМ,
	|	КассыККМ.ТипКассы                                КАК ТипКассы,
	|	КассыККМ.Владелец                                КАК Организация,
	|	КассыККМ.Склад                                   КАК Склад,
	|	КассыККМ.Склад.РозничныйВидЦены                  КАК ВидЦены,
	|	КассыККМ.Склад.РозничныйВидЦены.ЦенаВключаетНДС  КАК ЦенаВключаетНДС,
	|	КассыККМ.ВалютаДенежныхСредств                   КАК Валюта,
	|	КассыККМ.Склад.ИсточникФинансирования            КАК ИсточникФинансирования,
	|	КассыККМ.ПодключаемоеОборудование                КАК ФискальноеУстройство
	|ИЗ
	|	Справочник.КассыККМ КАК КассыККМ
	|ГДЕ
	|	КассыККМ.Ссылка = &КассаККМ
	|");
	Запрос.УстановитьПараметр("КассаККМ", КассаККМ);
	
	Реквизиты = Новый Структура;
	
	РезультатЗапроса = Запрос.Выполнить();
	Для Каждого Колонка Из РезультатЗапроса.Колонки Цикл
		Реквизиты.Вставить(Колонка.Имя);
	КонецЦикла;
	
	Если Не РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		ЗаполнитьЗначенияСвойств(Реквизиты, Выборка);
	КонецЕсли;
	
	Возврат Реквизиты;
	
КонецФункции

// Возвращает параметры кассы ККМ.
//
Функция ПараметрыКассыККМ(Знач КассаККМ) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	КассыККМ.Ссылка                                  КАК КассаККМ,
	|	КассыККМ.Владелец                                КАК Организация,
	|	КассыККМ.ВалютаДенежныхСредств                   КАК Валюта,
	|	ВЫБОР
	|		КОГДА КассыККМ.ТипКассы = ЗНАЧЕНИЕ(Перечисление.ТипыКассККМ.ФискальныйРегистратор)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                                            КАК ЭтоФискальныйРегистратор,
	|	КассыККМ.ПодключаемоеОборудование                КАК ИдентификаторУстройства,
	|	КассыККМ.ПодключаемоеОборудование.СпособФорматноЛогическогоКонтроля                КАК СпособФорматноЛогическогоКонтроля,
	|	КассыККМ.ПодключаемоеОборудование.ДопустимоеРасхождениеФорматноЛогическогоКонтроля КАК ДопустимоеРасхождениеФорматноЛогическогоКонтроля,
	|	ВЫБОР
	|		КОГДА КассыККМ.ПодключаемоеОборудование.ТипОборудования = ЗНАЧЕНИЕ(Перечисление.ТипыПодключаемогоОборудования.ККТ)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                                            КАК ДоступнаПередачаДанных,
	|	ВЫБОР
	|		КОГДА КассыККМ.ИспользоватьБезПодключенияОборудования
	|			ТОГДА КассыККМ.СерийныйНомер
	|		КОГДА КассыККМ.ПодключаемоеОборудование.СерийныйНомер <> """"
	|			ТОГДА КассыККМ.ПодключаемоеОборудование.СерийныйНомер
	|		ИНАЧЕ КассыККМ.СерийныйНомер
	|	КОНЕЦ                                            КАК СерийныйНомер,
	|	КассыККМ.ИспользоватьБезПодключенияОборудования  КАК ИспользоватьБезПодключенияОборудования
	|ИЗ
	|	Справочник.КассыККМ КАК КассыККМ
	|ГДЕ
	|	КассыККМ.Ссылка = &КассаККМ
	|");
	Запрос.УстановитьПараметр("КассаККМ", КассаККМ);
	
	УстановитьПривилегированныйРежим(Истина);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		
		Параметры = Новый Структура;
		Параметры.Вставить("КассаККМ"                              , Выборка.КассаККМ);
		Параметры.Вставить("СтрокиТекста"                          , "");
		Параметры.Вставить("Организация"                           , Выборка.Организация);
		Параметры.Вставить("Валюта"                                , Выборка.Валюта);
		Параметры.Вставить("ЭтоФискальныйРегистратор"              , Выборка.ЭтоФискальныйРегистратор);
		Параметры.Вставить("ИдентификаторУстройства"               , Выборка.ИдентификаторУстройства);
		Параметры.Вставить("ДоступнаПередачаДанных"                , Выборка.ДоступнаПередачаДанных);
		Параметры.Вставить("СерийныйНомер"                         , Выборка.СерийныйНомер);
		Параметры.Вставить("ИспользоватьБезПодключенияОборудования", Выборка.ИспользоватьБезПодключенияОборудования Или Не ПолучитьФункциональнуюОпцию("ИспользоватьПодключаемоеОборудование"));
		Параметры.Вставить("СпособФорматноЛогическогоКонтроля"     , Выборка.СпособФорматноЛогическогоКонтроля);
		Параметры.Вставить("ДопустимоеРасхождениеФорматноЛогическогоКонтроля", Выборка.ДопустимоеРасхождениеФорматноЛогическогоКонтроля);
		
		Если Не ЗначениеЗаполнено(Параметры.СерийныйНомер) Тогда
			Параметры.СерийныйНомер = "1";
		КонецЕсли;
		
	Иначе
		
		Параметры = Новый Структура;
		Параметры.Вставить("КассаККМ"                              , КассаККМ);
		Параметры.Вставить("СтрокиТекста"                          , "");
		Параметры.Вставить("Организация"                           , Справочники.Организации.ПустаяСсылка());
		Параметры.Вставить("Валюта"                                , Константы.ВалютаРегламентированногоУчета.Получить());
		Параметры.Вставить("ЭтоФискальныйРегистратор"              , Ложь);
		Параметры.Вставить("ИдентификаторУстройства"               , Справочники.ПодключаемоеОборудование.ПустаяСсылка());
		Параметры.Вставить("ДоступнаПередачаДанных"                , Ложь);
		Параметры.Вставить("СерийныйНомер"                         , "1");
		Параметры.Вставить("ИспользоватьБезПодключенияОборудования", Ложь);
		Параметры.Вставить("СпособФорматноЛогическогоКонтроля"     , Неопределено);
		Параметры.Вставить("ДопустимоеРасхождениеФорматноЛогическогоКонтроля", Неопределено);
		
	КонецЕсли;
	
	Возврат Параметры;
	
КонецФункции

// Возвращает кассу ККМ подключаемого оборудования
//
// Параметры:
//  ПодключаемоеОборудование - Справочник.ПодключаемоеОборудование
//
// Возвращаемое значение:
//  Справочник.КассыККМ
//
Функция ПолучитьКассуККМПодключаемогоОборудования(ПодключаемоеОборудование) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	КассыККМ.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.КассыККМ КАК КассыККМ
	|ГДЕ
	|	КассыККМ.ПодключаемоеОборудование = &ПодключаемоеОборудование
	|");
	Запрос.УстановитьПараметр("ПодключаемоеОборудование", ПодключаемоеОборудование);
	
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		Возврат Выборка.Ссылка;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Владелец)
	|	И ЗначениеРазрешено(Ссылка)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти // ПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

////////////////////////////////////////////////////////////////////////////////
// Команды формы
#Область КомандыФормы

// Заполняет список команд ввода на основании.
// 
// Параметры:
//   КомандыСоздатьНаОсновании - ТаблицаЗначений - Таблица команд для вывода в подменю. Для изменения.
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСоздатьНаОсновании, НастройкиФормы) Экспорт
	
	ВводНаОснованииБольничнаяАптека.ДобавитьКомандыСозданияНаОсновании(ПустаяСсылка().Метаданные().ПолноеИмя(), КомандыСоздатьНаОсновании, НастройкиФормы);
	
КонецПроцедуры

#КонецОбласти // КомандыФормы

#КонецОбласти // СлужебныеПроцедурыИФункции

////////////////////////////////////////////////////////////////////////////////
// СТАНДАРТНЫЕ ПОДСИСТЕМЫ
#Область СтандартныеПодсистемы

// Возвращает описание блокируемых реквизитов
//
// Возвращаемое значение:
//  Массив - имена блокируемых реквизитов
//   Элемент массива - Строка в формате:
//     ИмяРеквизита[;ИмяЭлементаФормы,...]
//      где
//       ИмяРеквизита     - имя реквизита объекта
//       ИмяЭлементаФормы - имя элемента формы, связанного с реквизитом
//
Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт
	
	Результат = Новый Массив;
	Результат.Добавить("ВалютаДенежныхСредств");
	Результат.Добавить("Владелец");
	Результат.Добавить("Склад");
	Результат.Добавить("ТипКассы");
	
	Возврат Результат;
	
КонецФункции

// Возвращает имена реквизитов, которые не должны отображаться в списке реквизитов обработки ГрупповоеИзменениеОбъектов.
//
// Возвращаемое значение:
//  Массив - массив имен реквизитов
//
Функция РеквизитыНеРедактируемыеВГрупповойОбработке() Экспорт
	
	НеРедактируемыеРеквизиты = Новый Массив;
	НеРедактируемыеРеквизиты.Добавить("Владелец");
	НеРедактируемыеРеквизиты.Добавить("ВалютаДенежныхСредств");
	НеРедактируемыеРеквизиты.Добавить("Склад");
	НеРедактируемыеРеквизиты.Добавить("ТипКассы");
	
	Возврат НеРедактируемыеРеквизиты;
	
КонецФункции

#КонецОбласти // СтандартныеПодсистемы

#КонецЕсли