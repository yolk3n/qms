#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ПолучитьГруппуБухгалтерскогоУчетаПоУмолчанию(ТипНоменклатуры) Экспорт
	
	Группа = Неопределено;
	НоменклатураПереопределяемый.ПриПолученииПредопределеннойГруппыБухгалтерскогоУчета(ТипНоменклатуры, Группа);
	Если ЗначениеЗаполнено(Группа) И ТипЗнч(Группа) = Тип("СправочникСсылка.ГруппыБухгалтерскогоУчета") Тогда
		Возврат Группа;
	КонецЕсли;
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Группы.Ссылка  КАК Ссылка
	|ИЗ
	|	Справочник.ГруппыБухгалтерскогоУчета КАК Группы
	|ГДЕ
	|	НЕ Группы.ПометкаУдаления
	|	И Группы.Наименование = &Наименование
	|");
	
	Если ТипНоменклатуры = Справочники.ТипыНоменклатурыРасширенные.ЛекарственноеСредство Тогда
		Наименование = НСтр("ru = 'Медикаменты'");
	ИначеЕсли ТипНоменклатуры = Справочники.ТипыНоменклатурыРасширенные.Товар Тогда
		Наименование = НСтр("ru = 'Товары'");
	ИначеЕсли ТипНоменклатуры = Справочники.ТипыНоменклатурыРасширенные.Услуга Тогда
		Наименование = НСтр("ru = 'Услуги'");
	Иначе
		ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Неизвестный тип номенклатуры: %1'"), ТипНоменклатуры);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Наименование", Наименование);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		ГруппаОбъект = Справочники.ГруппыБухгалтерскогоУчета.СоздатьЭлемент();
		ГруппаОбъект.Наименование = Наименование;
		ГруппаОбъект.Записать();
		Группа = ГруппаОбъект.Ссылка;
	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		Группа = Выборка.Ссылка;
	КонецЕсли;
	
	Возврат Группа;
	
КонецФункции

#КонецОбласти

#КонецЕсли