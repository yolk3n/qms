#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Функция ПрочитатьДанныеКлассификатораИзXDTO получает данные из Объекта XDTO
// и формирует таблицу значений.
//
// Параметры:
//  ОбъектXDTO     - ОбъектXDTO.
//
// Возвращаемое значение:
//  ТаблицаЗначений.
//
Функция ПрочитатьДанныеКлассификатораИзXDTO(ОбъектXDTO, ПараметрыЗагрузки) Экспорт
	
	Если ПараметрыЗагрузки.Свойство("ДополнительнаяЗагрузка") = Истина Тогда
		Если ПараметрыЗагрузки.ДополнительнаяЗагрузка = "ПравилаПодписи" Тогда
			Возврат ПрочитатьДанныеКлассификатораПравилПодписейИзXDTO(ОбъектXDTO, ПараметрыЗагрузки);
		КонецЕсли;
	КонецЕсли;
	
	Таблица_ = Новый ТаблицаЗначений();
	Таблица_.Колонки.Добавить("КодМинздрава", Новый ОписаниеТипов("Строка"));
	Таблица_.Колонки.Добавить("Роль", Новый ОписаниеТипов("Строка"));
	Таблица_.Колонки.Добавить("Наименование", Новый ОписаниеТипов("Строка"));
	Таблица_.Колонки.Добавить("ПравилаПодписи", Новый ОписаниеТипов("ТаблицаЗначений"));
	
	Если Не ТипЗнч(ОбъектXDTO) = Тип("ОбъектXDTO") Тогда
		Возврат Таблица_;
	КонецЕсли; 
	
	СписокЗаписей_ = ОбъектXDTO.item;
	Если ТипЗнч(СписокЗаписей_) <> Тип("СписокXDTO") Тогда
		// Ошибка
		Возврат Таблица_;
	КонецЕсли; 
	
	Для Каждого ЭлементВерхнегоУровня_ Из СписокЗаписей_ Цикл
		
		СписокПолей_ = ЭлементВерхнегоУровня_.children.item;
		
		НоваяСтрока_ = Таблица_.Добавить();
		
		Для Каждого Элемент_ Из СписокПолей_ Цикл
			Если ВРег(Элемент_.key) = "ID" Тогда
				НоваяСтрока_.КодМинздрава = Элемент_.value;
			ИначеЕсли ВРег(Элемент_.key) = "CODE_ROLE" Тогда
				НоваяСтрока_.Роль = Элемент_.value;
			ИначеЕсли ВРег(Элемент_.key) = "NAME_ROLE" Тогда
				НоваяСтрока_.Наименование = Элемент_.value;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	ЗаполнитьДополнительныеРеквизитыТаблицы(Таблица_, ЗагрузитьДанныеПоПравиламПодписей());
	
	Возврат Таблица_;
КонецФункции

// Функция позвращает параметры для запроса данных классификатора из веб-сервиса
//
// Возвращаемое значение:
//   Структура   - структура с параметрами.
//
Функция ПолучитьПараметрыЗапроса() Экспорт

	Параметры_ = Новый Структура;
	Параметры_.Вставить("OID", "1.2.643.5.1.13.2.1.1.734");
	
	Возврат Параметры_

КонецФункции

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

Функция ЗагрузитьДанныеПоПравиламПодписей()
	ИдентификаторКлассификатораСвязей_ = "1.2.643.5.1.13.13.99.2.42";
	Возврат НСИРосМинздрав.ЗапроситьКлассификатор(
		ИдентификаторКлассификатораСвязей_, 
		НСИРосМинздрав.ЗапроситьАктуальнуюВерсиюКлассификатора(ИдентификаторКлассификатораСвязей_),
		Справочники.РолиПриПодписанииРЭМД,
		Новый Структура("ДополнительнаяЗагрузка", "ПравилаПодписи")
	);
КонецФункции

Процедура ЗаполнитьДополнительныеРеквизитыТаблицы(ТаблицаДанных, ТаблицаПравилПодписи)
	Если ТаблицаПравилПодписи = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Для Каждого Строка_ Из ТаблицаДанных Цикл
		ЗаполнитьСтрокуТаблицыПравиламиПодписи(Строка_, ТаблицаПравилПодписи);
	КонецЦикла;
КонецПроцедуры

Процедура ЗаполнитьСтрокуТаблицыПравиламиПодписи(СтрокаТЗ, ТаблицаПравилПодписи)
	Таблица_ = Новый ТаблицаЗначений();
	Таблица_.Колонки.Добавить("КодМинздрава", Новый ОписаниеТипов("Строка"));
	Таблица_.Колонки.Добавить("КодМинздраваВидаДокумента", Новый ОписаниеТипов("Строка"));
	Таблица_.Колонки.Добавить("КодМинздраваДолжности", Новый ОписаниеТипов("Строка"));
	Таблица_.Колонки.Добавить("МинимальноеКоличествоПодписей", Новый ОписаниеТипов("Число"));
	Таблица_.Колонки.Добавить("МаксимальноеКоличествоПодписей", Новый ОписаниеТипов("Число"));

	ДопустимыеПравила_ = ТаблицаПравилПодписи.НайтиСтроки(Новый Структура("Роль", СтрокаТЗ.КодМинздрава));
	Для Каждого Правило_ Из ДопустимыеПравила_ Цикл 
		Должности_ = СтрРазделить(Правило_.Должности, ",", Ложь);
		Для Каждого КодДолжности_ Из Должности_ Цикл 
			КодДолжности_ = СокрЛП(КодДолжности_);
			НоваяСтрока_ = Таблица_.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока_, Правило_);
			НоваяСтрока_.КодМинздраваДолжности = КодДолжности_;
		КонецЦикла;
	КонецЦикла;
	СтрокаТЗ.ПравилаПодписи = Таблица_;
КонецПроцедуры

Функция ПрочитатьДанныеКлассификатораПравилПодписейИзXDTO(ОбъектXDTO, ПараметрыЗагрузки)
	Таблица_ = Новый ТаблицаЗначений();
	Таблица_.Колонки.Добавить("КодМинздрава", Новый ОписаниеТипов("Строка"));
	Таблица_.Колонки.Добавить("КодМинздраваВидаДокумента", Новый ОписаниеТипов("Строка"));
	Таблица_.Колонки.Добавить("Роль", Новый ОписаниеТипов("Строка"));
	Таблица_.Колонки.Добавить("Должности", Новый ОписаниеТипов("Строка"));
	Таблица_.Колонки.Добавить("МинимальноеКоличествоПодписей", Новый ОписаниеТипов("Число"));
	Таблица_.Колонки.Добавить("МаксимальноеКоличествоПодписей", Новый ОписаниеТипов("Число"));
	
	Если Не ТипЗнч(ОбъектXDTO) = Тип("ОбъектXDTO") Тогда
		Возврат Таблица_;
	КонецЕсли; 
	
	СписокЗаписей_ = ОбъектXDTO.item;
	Если ТипЗнч(СписокЗаписей_) <> Тип("СписокXDTO") Тогда
		// Ошибка
		Возврат Таблица_;
	КонецЕсли; 
	
	Для Каждого ЭлементВерхнегоУровня_ Из СписокЗаписей_ Цикл
		СписокПолей_ = ЭлементВерхнегоУровня_.children.item;
		
		НоваяСтрока_ = Таблица_.Добавить();
		
		Для Каждого Элемент_ Из СписокПолей_ Цикл
			Если ВРег(Элемент_.key) = "ID" Тогда
				НоваяСтрока_.КодМинздрава = Элемент_.value;
			ИначеЕсли ВРег(Элемент_.key) = "DOC_KIND" Тогда
				НоваяСтрока_.КодМинздраваВидаДокумента = Элемент_.value;
			ИначеЕсли ВРег(Элемент_.key) = "ROLE" Тогда
				НоваяСтрока_.Роль = Элемент_.value;
			ИначеЕсли ВРег(Элемент_.key) = "POSITIONS" Тогда
				НоваяСтрока_.Должности = Элемент_.value;
			ИначеЕсли ВРег(Элемент_.key) = "SIGN_COUNT_MIN" Тогда
				НоваяСтрока_.МинимальноеКоличествоПодписей = Элемент_.value;
			ИначеЕсли ВРег(Элемент_.key) = "SIGN_COUNT_MAX" Тогда 
				НоваяСтрока_.МаксимальноеКоличествоПодписей = Элемент_.value;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Возврат Таблица_;
КонецФункции

#КонецОбласти

#КонецЕсли