#Область ОбработчикиСобытий

&НаСервере
Перем УдаляемыеФайлы;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ПолучитьТекстОшибки();
	
	Если ЗначениеЗаполнено(Объект.Ссылка) И ЗначениеЗаполнено(Объект.ДокументИнформационнойБазы) Тогда
		Попытка
			СтатусРЭМД_ = ФедеральныеВебСервисыРЭМД.ПолучитьСтатусРегистрацииДокументаВРЭМД(Объект.ДокументИнформационнойБазы);
			ЭтотОбъект.СтатусРегистрацииДокументаВРЭМД = стрШаблон("%1 - %2", СтатусРЭМД_.СтатусСтрокой, СтатусРЭМД_.Описание);
		Исключение
			ЭтотОбъект.СтатусРегистрацииДокументаВРЭМД = "Ошибка получения статуса: " + ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		КонецПопытки;
	КонецЕсли;
	
	Если Не Пользователи.РолиДоступны("ПолныеПрава") Тогда
		Элементы.ФормаОтправитьДокументВРЭМД.Доступность = Ложь;
	КонецЕсли;
	
	Если Метаданные.Справочники.Найти("_ДемоКартотека") <> Неопределено Тогда
		// Это демо ИБ.
		Элементы.ФормаОтправитьДокументВРЭМД.Видимость = Истина;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПолучитьТекстОшибки()

	Если ЗначениеЗаполнено(Объект.ТекстПоследнейОшибки) Тогда
		ЭтотОбъект.Ошибка = "Ошибка при отправке или текст ошибки из синхронного ответа:" + Символы.ПС;
		ЭтотОбъект.Ошибка = ЭтотОбъект.Ошибка + Объект.ТекстПоследнейОшибки;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ИдентификаторДокумента) Тогда
		Запрос_ = Новый Запрос;
		Запрос_.Текст =
			"ВЫБРАТЬ
			|	ФедеральныеВебСервисыСообщенияРЭМД.ТекстОшибки КАК ТекстОшибки
			|ИЗ
			|	РегистрСведений.ФедеральныеВебСервисыСообщенияРЭМД КАК ФедеральныеВебСервисыСообщенияРЭМД
			|ГДЕ
			|	ФедеральныеВебСервисыСообщенияРЭМД.ИдентификаторДокумента = &ИдентификаторДокумента
			|
			|УПОРЯДОЧИТЬ ПО
			|	ФедеральныеВебСервисыСообщенияРЭМД.ДатаСообщения УБЫВ";
		Запрос_.УстановитьПараметр("ИдентификаторДокумента", Объект.ИдентификаторДокумента);
		Выборка_ = Запрос_.Выполнить().Выбрать();
		
		Если Выборка_.Следующий() Тогда
			Если Выборка_.ТекстОшибки <> "" Тогда
				ЭтотОбъект.Ошибка = ЭтотОбъект.Ошибка
					+ ?(ЗначениеЗаполнено(ЭтотОбъект.Ошибка), Символы.ПС + Символы.ПС, "")
					+ "Текст ошибки из асинхронного ответа:" + Символы.ПС + Выборка_.ТекстОшибки;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)

	УдаляемыеФайлы = Новый Массив;
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		// Составим список файлов в архиве ЭМД, которые надо удалить (пути к ним удалены из объекта).
		Запрос_ = Новый Запрос;
		Запрос_.Текст =
			"ВЫБРАТЬ
			|	ФедеральныеВебСервисыЭМДЭлектронныеПодписиЭМД.ОтносительныйПутьКФайлуПодписиЭМД КАК ОтносительныйПутьКФайлуПодписиЭМД,
			|	ФедеральныеВебСервисыЭМД.ОтносительныйПутьКФайлуЭМД КАК ОтносительныйПутьКФайлуЭМД
			|ИЗ
			|	Справочник.ФедеральныеВебСервисыЭМД КАК ФедеральныеВебСервисыЭМД
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФедеральныеВебСервисыЭМД.ЭлектронныеПодписиЭМД КАК ФедеральныеВебСервисыЭМДЭлектронныеПодписиЭМД
			|		ПО (ФедеральныеВебСервисыЭМДЭлектронныеПодписиЭМД.Ссылка = ФедеральныеВебСервисыЭМД.Ссылка)
			|ГДЕ
			|	ФедеральныеВебСервисыЭМД.Ссылка = &Ссылка";
			
		Запрос_.УстановитьПараметр("Ссылка", Объект.Ссылка);
		Выборка_ = Запрос_.Выполнить().Выбрать();
		
		Первый_ = Истина;
		Пока Выборка_.Следующий() Цикл
			Если Первый_ И ЗначениеЗаполнено(Выборка_.ОтносительныйПутьКФайлуЭМД) И Выборка_.ОтносительныйПутьКФайлуЭМД <> ТекущийОбъект.ОтносительныйПутьКФайлуЭМД Тогда
				УдаляемыеФайлы.Добавить(Выборка_.ОтносительныйПутьКФайлуЭМД);
			КонецЕсли;
			
			Первый_ = Ложь;

			Если ЗначениеЗаполнено(Выборка_.ОтносительныйПутьКФайлуПодписиЭМД) Тогда
				Найденные_ = ТекущийОбъект.ЭлектронныеПодписиЭМД.НайтиСтроки(Новый Структура("ОтносительныйПутьКФайлуПодписиЭМД", Выборка_.ОтносительныйПутьКФайлуПодписиЭМД));
				Если Найденные_.Количество() = 0 Тогда
					УдаляемыеФайлы.Добавить(Выборка_.ОтносительныйПутьКФайлуПодписиЭМД);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	Если УдаляемыеФайлы <> Неопределено Тогда
		ФедеральныеВебСервисыРЭМД.УдалитьФайлыИзАрхиваЭМД(УдаляемыеФайлы);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФайлДляПросмотра(Команда)
	Если ЗначениеЗаполнено(Объект.ОтносительныйПутьКФайлуЭМД) Тогда
		ДД_ = ФедеральныеВебСервисыРЭМД.ПолучитьДвоичныеДанныеДокументаИзХранилища(Объект.Ссылка);
		
		Если Объект.ФорматФайлаДляРЭМД = ПредопределенноеЗначение("Перечисление.ФорматФайлаДляРЭМД.CDA") Тогда
			
			XML_ = ОбщиеМеханизмыКлиентСервер.ДвоичныеДанныеВСтроку(ДД_);
			
			ОткрытьФорму(
				"Справочник.ФедеральныеВебСервисыЭМД.Форма.ФормаПросмотраТекстаСЭМД",
				Новый Структура("ТекстСЭМД", XML_)
			);
		Иначе
			ИмяВремФайла_ = КаталогВременныхФайлов() + Строка(Новый УникальныйИдентификатор) + ".pdf";
			ДД_.Записать(ИмяВремФайла_);
			ФайловаяСистемаКлиент.ОткрытьФайл(ИмяВремФайла_);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОтправитьДокументВРЭМДНаСервере()
	
	Попытка
		РезультатОтРЭМД_ = ФедеральныеВебСервисыРЭМД.ЗарегистрироватьДокументВРЭМД(Объект.Ссылка);
		
		Если РезультатОтРЭМД_ <> Истина Тогда
		
			ТекстОшибки_ = Справочники.ФедеральныеВебСервисыЭМД.ЗаписатьТекстОшибки(Объект.Ссылка, РезультатОтРЭМД_);
			
			Сообщить(ТекстОшибки_);
			
		КонецЕсли;
	Исключение
		Сообщить(ПодробноеПредставлениеОшибки(ИнформацияобОшибке()));
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьДокументВРЭМД(Команда)
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ОтправитьДокументВРЭМДНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СтатусРегистрацииДокументаВРЭМДНажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПараметрыФормы = Новый Структура("ДокументИнформационнойБазы", Объект.ДокументИнформационнойБазы);
	ОткрытьФорму("Справочник.ФедеральныеВебСервисыЭМД.Форма.СписокПодписейДляРЭМД", ПараметрыФормы);
КонецПроцедуры

&НаКлиенте
Процедура ДокументИнформационнойБазыОткрытие(Элемент, СтандартнаяОбработка)
	ФедеральныеВебСервисыКлиентПереопределяемый.ОбработчикСобытияДокументИнформационнойБазыОткрытие(ЭтотОбъект, Элемент, Объект.ДокументИнформационнойБазы, СтандартнаяОбработка);
КонецПроцедуры

#Область ЧтениеЖурналаРегистрации
&НаКлиенте
Процедура ПоказатьВсеСобытияСеансаЗапроса(Команда)
	
	Если ЗначениеЗаполнено(Объект.ИдентификаторДокумента) Тогда
		П_ = Новый Структура("Дата", ТекущаяДата());
		ОписаниеОповещения_ = Новый ОписаниеОповещения("ПослеВыбораПериода", ЭтотОбъект);
		ОткрытьФорму("ОбщаяФорма.ФормаВыбораДаты", П_, ЭтотОбъект,,,, ОписаниеОповещения_, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораПериода(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		ЗагрузитьДанныеИзЖР(Результат);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьДанныеИзЖР(ВыбраннаяДата)

	
	РезультатВыполнения = ФедеральныеВебСервисыРЭМД.ПрочитатьЖурналРегистрацииСОтборомПоКомментарию(
		Объект.ИдентификаторДокумента,
		НачалоДня(ВыбраннаяДата),
		КонецДня(ВыбраннаяДата),
		ЭтотОбъект.УникальныйИдентификатор
	);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Истина;
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ЗагрузитьДанныеИзЖРЗавершение", ЭтотОбъект, ВыбраннаяДата);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(РезультатВыполнения, ОповещениеОЗавершении, ПараметрыОжидания);
	
КонецПроцедуры


&НаКлиенте
Процедура ЗагрузитьДанныеИзЖРЗавершение(Результат, ВыбраннаяДата) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Выполнено" Тогда
		Сеансы_ = ПолучитьСписокСеансовИзРезультата(Результат.АдресРезультата);
		
		Если Сеансы_.Количество() > 0 Тогда
			П_ = Новый Структура("ДатаНачала, ДатаОкончания, Сеанс",
				НачалоДня(ВыбраннаяДата), КонецДня(ВыбраннаяДата), Сеансы_);
			ОткрытьФорму("Обработка.ЖурналРегистрации.Форма", П_,, Истина);
		Иначе
			Сообщить("Не найдены события журнала регистрации с отбором по идентификатору документа: " + Объект.ИдентификаторДокумента);
		КонецЕсли;

	ИначеЕсли Результат.Статус = "Ошибка" Тогда
		Сообщить(Результат.КраткоеПредставлениеОшибки);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСписокСеансовИзРезультата(АдресРезультата)
	
	Результат      = ПолучитьИзВременногоХранилища(АдресРезультата);
	СобытияЖурнала = Результат.СобытияЖурнала;
	
	ПоместитьВоВременноеХранилище(Неопределено, АдресРезультата);// удалим
	
	Сеансы_ = Новый СписокЗначений;
	
	Для Каждого строкаТЗ_ Из СобытияЖурнала Цикл
		Если Сеансы_.НайтиПоЗначению(строкаТЗ_.Сеанс) = Неопределено Тогда
			Сеансы_.Добавить(строкаТЗ_.Сеанс);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Сеансы_;
КонецФункции

#КонецОбласти

#КонецОбласти

