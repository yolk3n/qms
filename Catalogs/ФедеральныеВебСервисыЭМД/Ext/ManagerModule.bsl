#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс
// Добавляет документ в справочник ФедеральныеВебСервисыЭМД, либо обновляет данные.
// Параметры:
//  ДанныеЭлектронныхПодписей  - Массив - Массив с структур с полями (ОтносительныйПутьКФайлуПодписиЭМД,РольРЭМД,Сотрудник,ЭтоПодписьМО).
Функция ДобавитьДокументВСправочник(Пациент, ОтносительныйПутьКФайлуЭМД, ДанныеЭлектронныхПодписей, НомерДокумента, ИдентификаторДокумента, ДокументСсылка, ФорматФайлаДляРЭМД, ТипРЭМД, OutУдаляемыеФайлы = Неопределено) Экспорт
	
	Объект_ = Неопределено;
	
	Если ЗначениеЗаполнено(ДокументСсылка) Тогда
		Запрос_ = Новый Запрос;
		Запрос_.Текст =
			"ВЫБРАТЬ
			|	ФедеральныеВебСервисыЭМД.Ссылка КАК Ссылка
			|ИЗ
			|	Справочник.ФедеральныеВебСервисыЭМД КАК ФедеральныеВебСервисыЭМД
			|ГДЕ
			|	ФедеральныеВебСервисыЭМД.ДокументИнформационнойБазы = &ДокументСсылка
			|	И ФедеральныеВебСервисыЭМД.ПометкаУдаления = ЛОЖЬ";
			
		Запрос_.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
		Выборка_ = Запрос_.Выполнить().Выбрать();

		Если Выборка_.Следующий() Тогда
			Объект_ = Выборка_.Ссылка.ПолучитьОбъект();
		КонецЕсли;
		
		Если Объект_ = Неопределено Тогда
			ЭМДСсылка_ = ФедеральныеВебСервисыПереопределяемый.НайтиЭМДПоДокументуИнформационнойБазы(ДокументСсылка);
			Если ЗначениеЗаполнено(ЭМДСсылка_) Тогда
				Объект_ = ЭМДСсылка_.ПолучитьОбъект();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если Объект_ = Неопределено Тогда
		Запрос_ = Новый Запрос;
		Запрос_.Текст =
			"ВЫБРАТЬ
			|	ФедеральныеВебСервисыЭМД.Ссылка КАК Ссылка
			|ИЗ
			|	Справочник.ФедеральныеВебСервисыЭМД КАК ФедеральныеВебСервисыЭМД
			|ГДЕ
			|	ФедеральныеВебСервисыЭМД.НомерДокумента = &НомерДокумента
			|	И ФедеральныеВебСервисыЭМД.ПометкаУдаления = ЛОЖЬ";

		Запрос_.УстановитьПараметр("НомерДокумента", НомерДокумента);
		Выборка_ = Запрос_.Выполнить().Выбрать();

		Если Выборка_.Следующий() Тогда
			Объект_ = Выборка_.Ссылка.ПолучитьОбъект();
		КонецЕсли;
	КонецЕсли;
	
	Если Объект_ = Неопределено Тогда
		Объект_ = Справочники.ФедеральныеВебСервисыЭМД.СоздатьЭлемент();
		Объект_.ДатаСоздания = ТекущаяДатаСеанса();
	КонецЕсли;
	
	OutУдаляемыеФайлы = Новый Массив;
	
	Если ЗначениеЗаполнено(Объект_.ОтносительныйПутьКФайлуЭМД) Тогда
		OutУдаляемыеФайлы.Добавить(Объект_.ОтносительныйПутьКФайлуЭМД);
	КонецЕсли;
	
	Объект_.Пациент = Пациент;
	Объект_.ОтносительныйПутьКФайлуЭМД = ОтносительныйПутьКФайлуЭМД;
	Объект_.ДокументИнформационнойБазы = ДокументСсылка;
	Объект_.ТекстПоследнейОшибки = "";
	ПредыдущийИдентификаторДокумента_ = Объект_.ИдентификаторДокумента;
	Объект_.ИдентификаторДокумента = ИдентификаторДокумента;
	Объект_.НомерДокумента = НомерДокумента;
	Объект_.ФорматФайлаДляРЭМД = ФорматФайлаДляРЭМД;
	Объект_.ТипРЭМД = ТипРЭМД;
	Объект_.ДатаИзмененияСодержимогоДокумента = ТекущаяДатаСеанса();
	
	Если ЗначениеЗаполнено(Объект_.Ссылка) Тогда
		Если ЗначениеЗаполнено(Объект_.emdrId) Тогда
			Объект_.ОбновитьДанныеДокументаВРЭМД = Истина;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ПредыдущийИдентификаторДокумента_)
			И ПредыдущийИдентификаторДокумента_ <> ИдентификаторДокумента
		Тогда
			// Сохраним старый ИдентификаторДокумента, т.к. он может встречаться в регистрах и журналах.
			НоваяСтрокаИстории_ = Объект_.ИсторияИдентификаторов.Добавить();
			НоваяСтрокаИстории_.ДатаПомещенияВИсторию = ТекущаяДатаСеанса();
			Если Объект_.ИсторияИдентификаторов.НайтиСтроки(Новый Структура("emdrId", Объект_.emdrId)).Количество() = 0 Тогда
				// Подстрахуемся, чтобы из-за ошибки не получить две пары <emdrid, ИдентификаторДокумента>, иначе потом будет не просто
				// выяснить с каким значением ИдентификаторДокумента действительно документ зарегистрирован в РЭМД.
				НоваяСтрокаИстории_.emdrId = Объект_.emdrId;
			КонецЕсли;
			НоваяСтрокаИстории_.ИдентификаторДокумента = ПредыдущийИдентификаторДокумента_;
			Объект_.emdrId = Неопределено;
		КонецЕсли;
	КонецЕсли;
	
	Для Каждого строкаТЧ_ Из Объект_.ЭлектронныеПодписиЭМД Цикл
		Если ЗначениеЗаполнено(строкаТЧ_.ОтносительныйПутьКФайлуПодписиЭМД) Тогда
			OutУдаляемыеФайлы.Добавить(строкаТЧ_.ОтносительныйПутьКФайлуПодписиЭМД);
		КонецЕсли;
	КонецЦикла;
	
	Объект_.ЭлектронныеПодписиЭМД.Очистить();
	
	Если ДанныеЭлектронныхПодписей <> Неопределено Тогда
		Для Каждого Подпись_ Из ДанныеЭлектронныхПодписей Цикл
			НоваяСтрокаТЧ_ = Объект_.ЭлектронныеПодписиЭМД.Добавить();
			НоваяСтрокаТЧ_.ОтносительныйПутьКФайлуПодписиЭМД = Подпись_.ОтносительныйПутьКФайлуПодписиЭМД;
			НоваяСтрокаТЧ_.РольРЭМД = Подпись_.РольРЭМД;
			НоваяСтрокаТЧ_.ЭтоПодписьМО = Подпись_.ЭтоПодписьМО;
			НоваяСтрокаТЧ_.Сотрудник = Подпись_.Сотрудник;
		КонецЦикла;
	КонецЕсли;
	
	Если Объект_.ЭлектронныеПодписиЭМД.Количество() > 0 И ЗначениеЗаполнено(ДокументСсылка) Тогда
		ФедеральныеВебСервисыРЭМД.ПроверитьВозможностьДобавитьПодписьНеНарушивТребованияКСпискуПодписейПоДокументу(
			ДокументСсылка, Истина, Объект_.ЭлектронныеПодписиЭМД[0].Сотрудник, Объект_.ЭлектронныеПодписиЭМД[0].РольРЭМД, ТипРЭМД);
	КонецЕсли;
	
	Объект_.ДополнительныеСвойства.Вставить("НеУдалятьПодписиЭМД", Истина);// если изменяется пациент предотвратим удаление ЭЦП, т.к. здесь уже актуализировали подписи.
	
	Объект_.Записать();
	
	
	Возврат Объект_.Ссылка;
КонецФункции

// Обновляет emdrid у элемента справочника ФедеральныеВебСервисыЭМД.
Функция ЗаписатьEmdrId(ИдентификаторДокументаИлиЭМДСсылка, emdrId, НомерВерсии, ХранитьДо = Неопределено) Экспорт

	Если ТипЗнч(ИдентификаторДокументаИлиЭМДСсылка) = Тип("Строка") Тогда
		Запрос_ = Новый Запрос;
		
		Запрос_.Текст =
			"ВЫБРАТЬ
			|	ФедеральныеВебСервисыЭМД.Ссылка КАК Ссылка
			|ИЗ
			|	Справочник.ФедеральныеВебСервисыЭМД КАК ФедеральныеВебСервисыЭМД
			|ГДЕ
			|	ФедеральныеВебСервисыЭМД.ИдентификаторДокумента = &ИдентификаторДокумента
			|	И ФедеральныеВебСервисыЭМД.ПометкаУдаления = ЛОЖЬ";
		Запрос_.УстановитьПараметр("ИдентификаторДокумента", ИдентификаторДокументаИлиЭМДСсылка);
		Выборка_ = Запрос_.Выполнить().Выбрать();
		
		Если Выборка_.Следующий() Тогда
			ЭМДСсылка_ = Выборка_.Ссылка;
		Иначе
			Возврат Ложь;
		КонецЕсли;
	Иначе
		ЭМДСсылка_ = ИдентификаторДокументаИлиЭМДСсылка;
	КонецЕсли;
	
	Объект_ = ЭМДСсылка_.ПолучитьОбъект();
	Если Объект_.emdrId <> emdrId Или (Объект_.ХранитьДо <> ХранитьДо И ХранитьДо <> Неопределено) Или Объект_.НомерВерсии <> НомерВерсии Тогда
		Объект_.emdrId = emdrId;
		
		Если НомерВерсии <> Неопределено Тогда
			Объект_.НомерВерсии = НомерВерсии;
		КонецЕсли;
		Если ХранитьДо <> Неопределено Тогда
			Объект_.ХранитьДо = ХранитьДо;
		КонецЕсли;
		Объект_.Записать();
	КонецЕсли;
	
	Возврат Истина;
КонецФункции

// Обновляет ИдентификаторДокументаИЭМК у элемента справочника ФедеральныеВебСервисыЭМД.
Функция ЗаписатьИдентификаторДокументаИЭМК(ИдентификаторДокумента, ИдентификаторДокументаИЭМК, ИдентификаторКонтейнераДокументаИЭМК) Экспорт
	Запрос_ = Новый Запрос;
	
	Запрос_.Текст =
		"ВЫБРАТЬ
		|	ФедеральныеВебСервисыЭМД.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ФедеральныеВебСервисыЭМД КАК ФедеральныеВебСервисыЭМД
		|ГДЕ
		|	ФедеральныеВебСервисыЭМД.ИдентификаторДокумента = &ИдентификаторДокумента
		|	И ФедеральныеВебСервисыЭМД.ПометкаУдаления = ЛОЖЬ";
	Запрос_.УстановитьПараметр("ИдентификаторДокумента", ИдентификаторДокумента);
	Выборка_ = Запрос_.Выполнить().Выбрать();
	
	Если Выборка_.Следующий() Тогда
		Объект_ = Выборка_.Ссылка.ПолучитьОбъект();
		Если Объект_.ИдентификаторДокументаИЭМК <> ИдентификаторДокументаИЭМК Или Объект_.ИдентификаторКонтейнераДокументаИЭМК <> ИдентификаторКонтейнераДокументаИЭМК Тогда
			Объект_.ИдентификаторДокументаИЭМК = ИдентификаторДокументаИЭМК;
			Объект_.ИдентификаторКонтейнераДокументаИЭМК = ИдентификаторКонтейнераДокументаИЭМК;
			Объект_.ТекстПоследнейОшибкиИЭМК = "";
			Объект_.ОтправитьВИЭМК = Ложь;
			Объект_.Записать();
		КонецЕсли;
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
КонецФункции

// Возвращает значения реквизитов элемента справочника найденного по emdrId.
Функция ПолучитьДанныеДокументаПоEmdrId(emdrId, localUid = Неопределено) Экспорт
	Запрос_ = Новый Запрос;
	
	Запрос_.Текст =
		"ВЫБРАТЬ
		|	ФедеральныеВебСервисыЭМД.Ссылка КАК Ссылка,
		|	ФедеральныеВебСервисыЭМД.emdrId КАК emdrId,
		|	ФедеральныеВебСервисыЭМД.ОтносительныйПутьКФайлуЭМД КАК ОтносительныйПутьКФайлуЭМД,
		|	ФедеральныеВебСервисыЭМД.ДокументИнформационнойБазы КАК ДокументИнформационнойБазы,
		|	ФедеральныеВебСервисыЭМД.НомерДокумента КАК НомерДокумента,
		|	ФедеральныеВебСервисыЭМД.ИдентификаторДокумента КАК ИдентификаторДокумента
		|ИЗ
		|	Справочник.ФедеральныеВебСервисыЭМД КАК ФедеральныеВебСервисыЭМД
		|ГДЕ
		|	ФедеральныеВебСервисыЭМД.emdrId = &emdrId
		|	И ФедеральныеВебСервисыЭМД.ПометкаУдаления = ЛОЖЬ";
	
	Если ЗначениеЗаполнено(emdrId) Тогда
		Запрос_.УстановитьПараметр("emdrId", emdrId);
	Иначе
		Запрос_.УстановитьПараметр("localUid", localUid);
		Запрос_.Текст = стрЗаменить(Запрос_.Текст, "emdrId = &emdrId", "ИдентификаторДокумента = &localUid");
	КонецЕсли;
	
	Выборка_ = Запрос_.Выполнить().Выбрать();
	
	Если Выборка_.Следующий() Тогда
		Возврат Выборка_;
	Иначе
		Возврат Неопределено;
	КонецЕсли;

КонецФункции

// Записывает реквизит ТекстПоследнейОшибки.
Функция ЗаписатьТекстОшибки(ЭМДСсылка, Ошибка) Экспорт
	
	Объект_ = ЭМДСсылка.ПолучитьОбъект();
	
	Если ТипЗнч(Ошибка) = Тип("Структура") Тогда
		Текст_ = "";
		Для Каждого Деталь_ Из Ошибка.Детали Цикл
			Текст_ = Текст_ + ?(Текст_ <> "", Символы.ПС, "") + стрШаблон("%1 %2", Деталь_.Код, Деталь_.Сообщение);
		КонецЦикла;
		
		Если Объект_.ТекстПоследнейОшибки <> Текст_ Или Объект_.Отправить = Истина Тогда
			Объект_.ТекстПоследнейОшибки = Текст_;
			Объект_.Отправить = Ложь;
			Объект_.Записать();
		КонецЕсли;
	Иначе
		
		Если Объект_.ТекстПоследнейОшибки <> Ошибка Или Объект_.Отправить = Истина Тогда
			Объект_.ТекстПоследнейОшибки = Ошибка;
			Объект_.Отправить = Ложь;
			Объект_.Записать();
		КонецЕсли;
	КонецЕсли;
	
	Возврат Объект_.ТекстПоследнейОшибки;
	
КонецФункции

// Записывает реквизит ТекстПоследнейОшибкиИЭМК.
Процедура ЗаписатьТекстОшибкиИЭМК(Знач ИдентификаторДокумента, Знач Ошибка) Экспорт
	
	Запрос_ = Новый Запрос;
	
	Запрос_.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ФедеральныеВебСервисыЭМД.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ФедеральныеВебСервисыЭМД КАК ФедеральныеВебСервисыЭМД
		|ГДЕ
		|	ФедеральныеВебСервисыЭМД.ИдентификаторДокумента = &ИдентификаторДокумента
		|	И ФедеральныеВебСервисыЭМД.ПометкаУдаления = ЛОЖЬ";
	Запрос_.УстановитьПараметр("ИдентификаторДокумента", ИдентификаторДокумента);
	Выборка_ = Запрос_.Выполнить().Выбрать();
	
	Если Выборка_.Следующий() Тогда
		Объект_ = Выборка_.Ссылка.ПолучитьОбъект();

		Если Объект_.ТекстПоследнейОшибкиИЭМК <> Ошибка Тогда
			Объект_.ТекстПоследнейОшибкиИЭМК = Ошибка;
			Объект_.Записать();
		КонецЕсли;
		
		Объект_ = Неопределено;// Попытка избежать утечки памяти встречающейся в тех. журнале.

	Иначе
		ВызватьИсключение "Документ ЭМД с таким идентификатором не найден: " + ИдентификаторДокумента;
	КонецЕсли;
	
КонецПроцедуры

// Добавляет в элемент справочника данные о подписи.
Функция ДобавитьДанныеПодписиВСправочник(ЭМДСсылка, ДанныеЭлектронныхПодписей) Экспорт

	Объект_ = ЭМДСсылка.ПолучитьОбъект();
	
	Для Каждого Подпись_ Из ДанныеЭлектронныхПодписей Цикл
		НоваяСтрокаТЧ_ = Объект_.ЭлектронныеПодписиЭМД.Добавить();
		НоваяСтрокаТЧ_.ОтносительныйПутьКФайлуПодписиЭМД = Подпись_.ОтносительныйПутьКФайлуПодписиЭМД;
		НоваяСтрокаТЧ_.РольРЭМД = Подпись_.РольРЭМД;
		НоваяСтрокаТЧ_.ЭтоПодписьМО = Подпись_.ЭтоПодписьМО;
		НоваяСтрокаТЧ_.Сотрудник = Подпись_.Сотрудник;

		Если ЗначениеЗаполнено(Объект_.ДокументИнформационнойБазы) И Не Подпись_.ЭтоПодписьМО Тогда
			ФедеральныеВебСервисыРЭМД.ПроверитьВозможностьДобавитьПодписьНеНарушивТребованияКСпискуПодписейПоДокументу(
				Объект_.ДокументИнформационнойБазы, Ложь, Подпись_.Сотрудник, Подпись_.РольРЭМД);
		КонецЕсли;
	КонецЦикла;
	
	Если ЗначениеЗаполнено(Объект_.emdrid) Тогда
		Объект_.ОбновитьДанныеДокументаВРЭМД = Истина;
	КонецЕсли;
	Объект_.ТекстПоследнейОшибки = "";

	Объект_.Записать();
	
	Возврат Объект_.Ссылка;

КонецФункции

#КонецОбласти

#КонецЕсли