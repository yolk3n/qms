#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС
#Область ПрограммныйИнтерфейс

// Получает данные из файла классификатора и возвращает их в виде коллекции
//
// Параметры:
//  ИмяФайла - Строка - полный путь к файлу классификатора
//
// Возвращаемое значение:
//  ДеревоПолное - ДеревоЗначений - структурированные данные классификатора
//
Функция ПрочитатьФайлКлассификатора(ИмяФайла) Экспорт
	
	// Структура файла ОКПД2
	//	Идентификатор    Тип    Размер (байт)    Расшифровка
	//	Razdel            C       1                 Раздел
	//	Kod               C      12                 Код позиции
	//		XX              - класс
	//		XX.X            - подкласс
	//		XX.XX           - группа
	//		XX.XX.X         - подгруппа
	//		XX.XX.XX        - вид
	//		XX.XX.XX.XX0    - категория
	//		XX.XX.XX.XXX    - подкатегория
	//	Name (полей: 2)   C     250                 Наименование (500 символов)
	//	NomDescr          С     250                 Описание (8000 символов)
	//	NomAkt            N       3                 Номер последнего изменения
	//	Status            N       1                 Тип последнего изменения (фактически - 1 символ перед запятой), где
	//		1 - аннулировать;
	//		2 - изменить реквизит, кроме кода;
	//		3 - включить;
	//		0 - начальная загрузка
	//	DateUtv           D       10                Дата принятия последнего изменения
	//	DateVved          D       10                Дата введения последнего изменения
	
	ШаблонСтатуса = НСтр("ru = 'Текущий статус загрузки: Получено %1 из %2 элементов...'");
	
	ДанныеФайла = Новый XBase(ИмяФайла,, Истина);
	ДанныеФайла.Кодировка = КодировкаXBase.OEM;
	
	ОписаниеПолейФайла = Новый Структура;
	ОписаниеПолейФайла.Вставить("RAZDEL"   , Новый Структура("Тип, Длина, Точность", "S", 1, 0));
	ОписаниеПолейФайла.Вставить("KOD"      , Новый Структура("Тип, Длина, Точность", "S", 12, 0));
	ОписаниеПолейФайла.Вставить("NAME11"   , Новый Структура("Тип, Длина, Точность", "S", 250, 0));
	ОписаниеПолейФайла.Вставить("NAME12"   , Новый Структура("Тип, Длина, Точность", "S", 250, 0));
	ОписаниеПолейФайла.Вставить("NOMDESCR" , Новый Структура("Тип, Длина, Точность", "S", 250, 0));
	
	ОписаниеОшибки = "";
	
	ОписаниеПолейИсключения = Новый Массив;
	ОписаниеПолейИсключения.Добавить("PRAZDEL");
	
	Если Не ОбщегоНазначенияБольничнаяАптека.ПроверитьСтруктуруDBFФайла(ДанныеФайла, ОписаниеПолейФайла, ОписаниеОшибки, ОписаниеПолейИсключения) Тогда
		ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Некорректная структура файла: %1'"), ОписаниеОшибки);
	КонецЕсли;
	
	ДеревоПолное = Новый ДеревоЗначений;
	ДеревоПолное.Колонки.Добавить("Представление",      Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(0)));
	ДеревоПолное.Колонки.Добавить("Код",                Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(12)));
	ДеревоПолное.Колонки.Добавить("НаименованиеПолное", Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(500)));
	ДеревоПолное.Колонки.Добавить("Раздел",             Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(1)));
	ДеревоПолное.Колонки.Добавить("Описание",           Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(0)));
	ДеревоПолное.Колонки.Добавить("ПолныйКод",          Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(0)));
	ДеревоПолное.Колонки.Добавить("Пометка",            Новый ОписаниеТипов("Булево"));
	ДеревоПолное.Колонки.Добавить("ЭтоГруппа",          Новый ОписаниеТипов("Булево"));
	
	ТекущийРодитель = ДеревоПолное;
	ТекущаяСтрока = Неопределено;
	
	КоличествоЗаписейФайла = ДанныеФайла.КоличествоЗаписей();
	
	Пока Не ДанныеФайла.ВКонце() Цикл
		
		Раздел       = СокрЛП(ДанныеФайла.RAZDEL);
		Код          = СокрЛП(ДанныеФайла.KOD);
		Наименование = СокрЛП(ДанныеФайла.NAME11) + СокрЛП(ДанныеФайла.NAME12);
		Описание     = СокрЛП(ДанныеФайла.NOMDESCR);
		
		ДанныеФайла.Следующая();
		
		ПолныйКод = ОпределитьПолныйКодОКПД2(Раздел, Код);
		
		Если ТекущаяСтрока <> Неопределено И ТекущаяСтрока.ПолныйКод = ПолныйКод Тогда
			ТекущаяСтрока.Описание = ТекущаяСтрока.Описание + Описание;
			Продолжить;
		КонецЕсли;
		
		ПолныйКодРодителя = ОпределитьПолныйКодРодителяОКПД2(Раздел, Код);
		Если ПустаяСтрока(ПолныйКодРодителя) Тогда
			ТекущийРодитель = ДеревоПолное;
		Иначе
			Если ТекущаяСтрока.ПолныйКод = ПолныйКодРодителя Тогда
				ТекущийРодитель = ТекущаяСтрока;
			ИначеЕсли СтрДлина(ПолныйКод) = СтрДлина(ПолныйКодРодителя) Тогда
				// Используем текущего родителя
			Иначе
				Пока ТипЗнч(ТекущийРодитель) <> Тип("ДеревоЗначений") И ТекущийРодитель.ПолныйКод <> ПолныйКодРодителя Цикл
					ТекущийРодитель = ТекущийРодитель.Родитель;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		ТекущаяСтрока = ТекущийРодитель.Строки.Добавить();
		
		ТекущаяСтрока.Код = ?(ПустаяСтрока(Код), Раздел, Код);
		ТекущаяСтрока.Раздел = Раздел;
		ТекущаяСтрока.НаименованиеПолное = Наименование;
		ТекущаяСтрока.Описание = Описание;
		ТекущаяСтрока.Представление = ТекущаяСтрока.Код + " " + ТекущаяСтрока.НаименованиеПолное;
		ТекущаяСтрока.ПолныйКод = ПолныйКод;
		
		Если ДанныеФайла.НомерЗаписи() <> 0 Тогда
			ТекстСтатуса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСтатуса, Строка(ДанныеФайла.НомерЗаписи()), Строка(КоличествоЗаписейФайла));
			ДлительныеОперации.СообщитьПрогресс(100 * ДанныеФайла.НомерЗаписи() / КоличествоЗаписейФайла, ТекстСтатуса);
		Иначе
			ДлительныеОперации.СообщитьПрогресс(100, НСтр("ru = 'Обработка файлов классификатора...'"));
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ДеревоПолное;
	
КонецФункции

#КонецОбласти // ПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

////////////////////////////////////////////////////////////////////////////////
// Загрузка классификатора
#Область ЗагрузкаКлассификатора

Функция ОпределитьПолныйКодОКПД2(Раздел, Код)
	
	ПолныйКод = Раздел;
	Если Не ПустаяСтрока(Код) Тогда
		ПолныйКод = ПолныйКод + "." + Код;
	КонецЕсли;
	
	Возврат ПолныйКод;
	
КонецФункции

Функция ОпределитьПолныйКодРодителяОКПД2(Знач Раздел, Знач Код)
	
	ПолныйКод = "";
	
	Если Не ПустаяСтрока(Код) Тогда
		
		ПолныйКод = Раздел;
		ДлинаКода = СтрДлина(Код);
		ДлинаКодаБезРазделителей = СтрДлина(СтрЗаменить(Код, ".", ""));
		Если ДлинаКодаБезРазделителей = 9 Тогда
			Если Прав(Код, 1) = "0" Тогда
				ПолныйКод = ПолныйКод + "." + Лев(Код, ДлинаКода - 3);
			Иначе
				ПолныйКод = ПолныйКод + "." + Лев(Код, ДлинаКода - 1) + "0";
			КонецЕсли;
		ИначеЕсли ДлинаКодаБезРазделителей > 2 Тогда
			ПолныйКод = ПолныйКод + "." + Лев(Код, ДлинаКода - 1);
		КонецЕсли;
		
		Если Прав(ПолныйКод, 1) = "." Тогда
			ПолныйКод = Лев(ПолныйКод, СтрДлина(ПолныйКод) - 1);
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ПолныйКод;
	
КонецФункции

#КонецОбласти // ЗагрузкаКлассификатора

#КонецОбласти // СлужебныеПроцедурыИФункции

#КонецЕсли