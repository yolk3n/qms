#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
		ОбъектИсточник = Параметры.ЗначениеКопирования.ПолучитьОбъект();
	Иначе
		ОбъектИсточник = РеквизитФормыВЗначение("Объект", Тип("СправочникОбъект.ШаблоныЭтикетокИЦенниковБПО"));
	КонецЕсли;
	
	СхемаКомпоновкиДанных = ОбъектИсточник.СхемаКомпоновкиДанных.Получить();
	
	Если СхемаКомпоновкиДанных = Неопределено Тогда
		СхемаКомпоновкиДанных = ПечатьЭтикетокИЦенниковБПОПереопределяемый.МакетСхемыКомпоновкиДанных();
	КонецЕсли;
	
	АдресХранилищаСКД = ПоместитьВоВременноеХранилище(СхемаКомпоновкиДанных, УникальныйИдентификатор);
	
	Макет = ОбъектИсточник.Макет.Получить();
	АдресМакета = ПоместитьВоВременноеХранилище(ОбъектИсточник.Макет.Получить(), УникальныйИдентификатор);
	
	Эталон = ПолучитьМакетЭталон(); 
	
	ПечатьЭтикетокИЦенниковБПОПереопределяемый.ФормаШаблоныЭтикетокИЦенниковБПОПриСозданииНаСервере(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
		
	#Если ВебКлиент Тогда
		
		ОдинМиллиметрШирины = 0.535;
		ОдинМиллиметрВысоты = 2.711;
		
	#Иначе
	
		ЭталонМакета = Эталон;
		
		Рисунок = ЭталонМакета.Рисунки[0];
		ВысотаСтрокиВМиллиметрах = Рисунок.Верх;
		ШиринаСтолбцаВМиллиметрах = Рисунок.Лево;
		ВысотаСтроки	= Эталон.Область("R1").ВысотаСтроки;
		ШиринаСтолбца	= Эталон.Область("C1").ШиринаКолонки;
		
		ОдинМиллиметрШирины = ШиринаСтолбца / ШиринаСтолбцаВМиллиметрах;
		ОдинМиллиметрВысоты = ВысотаСтроки / ВысотаСтрокиВМиллиметрах;
	
	#КонецЕсли
	
	Макет.Область().АвтоВысотаСтроки = Ложь;	
	Макет.Область().ВысотаСтроки = ОдинМиллиметрВысоты;
	Макет.Область().ШиринаКолонки = ОдинМиллиметрШирины;
	Макет.Область().ЦветФона = Новый Цвет(128,128,128);
	Макет.Область(2, 2, ВысотаЭтикетки+1, ШиринаЭтикетки+1).ЦветФона = Новый Цвет(255,255,255);
	
	ШагСетки = 1;
	
	XMLОписаниеМакета = Объект.XMLОписаниеМакета;
	ПерезаполнитьМакет(XMLОписаниеМакета); 
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ЗначениеЗаполнено(АдресХранилищаСКД) Тогда
		СКД = ПолучитьИзВременногоХранилища(АдресХранилищаСКД);
		ТекущийОбъект.СхемаКомпоновкиДанных = Новый ХранилищеЗначения(СКД);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(АдресМакета) Тогда
		МакетШаблона = ПолучитьИзВременногоХранилища(АдресМакета);
		Если МакетШаблона <> Неопределено Тогда
			ЗаполнитьЗначенияСвойств(Макет, МакетШаблона,, "Области");
			ТекущийОбъект.Макет = Новый ХранилищеЗначения(Макет);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура РедактироватьШаблон(Команда)
	
	ОповещениеПриЗавершении = Новый ОписаниеОповещения("РедактироватьМакетЗавершение", ЭтотОбъект);
	ОборудованиеПринтерыЭтикетокКлиент.НачатьРедактированиеМакета(ОповещениеПриЗавершении, Объект.XMLОписаниеМакета, АдресХранилищаСКД, АдресМакета);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьСКД(Команда)
	
	ВыборФайлаСКД();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьСКДПоУмолчанию(Команда)
	ЗагрузитьСКДПоУмолчаниюНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ТипЦенникаПриИзменении(Элемент)
	ЗагрузитьСКДПоУмолчаниюНаСервере(Объект.ТипЦенника);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗагрузитьСКДПоУмолчаниюНаСервере(ТипЦенника = "")
	
	СхемаКомпоновкиДанных = ПечатьЭтикетокИЦенниковБПОПереопределяемый.МакетСхемыКомпоновкиДанных(ТипЦенника);
	АдресХранилищаСКД = ПоместитьВоВременноеХранилище(СхемаКомпоновкиДанных, УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьМакетЗавершение(Значение, Параметры) Экспорт
	
	Если Значение = КодВозвратаДиалога.ОК Тогда
		ПерезаполнитьМакет(Параметры.XMLОписаниеМакета);
		Объект.Поля.Очистить();
		Для каждого ПолеДанных Из Параметры.Поля Цикл
			ЗаполнитьЗначенияСвойств(Объект.Поля.Добавить(), ПолеДанных);
		КонецЦикла;
		
		Объект.XMLОписаниеМакета = Параметры.XMLОписаниеМакета;
		АдресМакета = Параметры.Макет;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПерезаполнитьМакет(XMLОписаниеМакета)
	
	СообщениеОбОшибке = Неопределено;
	СодержимоеXMLФайла = Новый Структура(); // см. ОборудованиеПринтерыЭтикетокВызовСервера.СоздатьОписаниеМакета
	
	Если НЕ ЗначениеЗаполнено(XMLОписаниеМакета) Тогда
		СообщениеОбОшибке = НСтр("ru = 'Необходимо настроить шаблон этикетки.'");
	ИначеЕсли ОборудованиеПринтерыЭтикетокВызовСервера.ПолучитьОписаниеМакета(XMLОписаниеМакета, СообщениеОбОшибке, СодержимоеXMLФайла) Тогда
		
		ШагСетки = СодержимоеXMLФайла.Масштаб;
		Поля.Очистить();
		ОчиститьОбласть(1, 1, ВысотаЭтикетки/ШагСетки, ШиринаЭтикетки/ШагСетки);
		ШиринаЭтикетки = СодержимоеXMLФайла.Ширина;
		ВысотаЭтикетки = СодержимоеXMLФайла.Высота;
		
		Для Каждого ТекПоле Из СодержимоеXMLФайла.Поля Цикл
			
			НовоеПоле = Поля.Добавить();
			ЗаполнитьЗначенияСвойств(НовоеПоле, ТекПоле);
			
			Если ТекПоле.Тип="Text" Или ТекПоле.Тип="UserData" Тогда
				НовоеПоле.Представление = ТекПоле.Значение;
			ИначеЕсли ТекПоле.Тип="Barcode" Тогда
				НовоеПоле.Представление = СтрШаблон(НСтр("ru = 'Штрихкод %1'"), Строка(ТекПоле.ТипШтрихкода));
			ИначеЕсли ТекПоле.Тип="Image" Тогда
				НовоеПоле.Представление = НСтр("ru = 'Картинка'");
			КонецЕсли;
			
			Если ТекПоле.Тип<>"UserData" Тогда
				СохранитьОформлениеПоля(НовоеПоле, Истина);
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьМакетЭталон()
	
	Возврат Справочники.ПодключаемоеОборудование.ПолучитьМакет("МакетДляОпределенияКоэффициентовЕдиницИзмерения");
	
КонецФункции

&НаКлиенте
Процедура СохранитьОформлениеПоля(ОписаниеПоля, ОткрытиеМакета=Ложь, ТабличныйДокумент=Неопределено)
	
	#Если ВебКлиент Тогда
		
		Если ТипЗнч(ОписаниеПоля)<>Тип("Структура") Тогда
			ОписаниеПоля = ПолучитьОписаниеПоля(ОписаниеПоля);
		КонецЕсли;
		
		СохранитьОформлениеПоляНаСервере(ОписаниеПоля, ОткрытиеМакета, ТабличныйДокумент);
		
	#Иначе
	
		Если ТабличныйДокумент=Неопределено Тогда
			ТабличныйДокумент = Макет;
		КонецЕсли;
		
		Область = Макет.Область((ОписаниеПоля.Верх-1)/ШагСетки+1, (ОписаниеПоля.Лево-1)/ШагСетки+1, ОписаниеПоля.Низ/ШагСетки, ОписаниеПоля.Право/ШагСетки);
		Область.Объединить();
		Область.Имя = ОписаниеПоля.Наименование;
		
		Если ОписаниеПоля.Тип = "Text" Тогда
			
			Если ОписаниеПоля.ТипЗаполнения = "Constant" Тогда
				Область.Заполнение=ТипЗаполненияОбластиТабличногоДокумента.Текст;
				Область.Текст = ОписаниеПоля.Значение;
			Иначе
				Область.Заполнение=ТипЗаполненияОбластиТабличногоДокумента.Параметр;
				Область.Параметр = ОписаниеПоля.Значение;
			КонецЕсли;
			
			Если ОписаниеПоля.Многострочность Тогда
				Область.РазмещениеТекста=ТипРазмещенияТекстаТабличногоДокумента.Переносить;
			Иначе
				Область.РазмещениеТекста=ТипРазмещенияТекстаТабличногоДокумента.Обрезать;
			КонецЕсли;
			
			Область.ОриентацияТекста = ОписаниеПоля.Ориентация;
			
			Если ОписаниеПоля.ПоложениеПоГоризонтали = "Left" Тогда
				Область.ГоризонтальноеПоложение=ГоризонтальноеПоложение.Лево;
			ИначеЕсли ОписаниеПоля.ПоложениеПоГоризонтали = "Center" Тогда
				Область.ГоризонтальноеПоложение=ГоризонтальноеПоложение.Центр;
			ИначеЕсли ОписаниеПоля.ПоложениеПоГоризонтали = "Right" Тогда
				Область.ГоризонтальноеПоложение=ГоризонтальноеПоложение.Право;
			Иначе
				Область.ГоризонтальноеПоложение=ГоризонтальноеПоложение.Лево;
			КонецЕсли;
			
			Если ОписаниеПоля.ПоложениеПоВертикали = "Top" Тогда
				Область.ВертикальноеПоложение=ВертикальноеПоложение.Верх;
			ИначеЕсли ОписаниеПоля.ПоложениеПоВертикали = "Center" Тогда
				Область.ВертикальноеПоложение=ВертикальноеПоложение.Центр;
			ИначеЕсли ОписаниеПоля.ПоложениеПоВертикали = "Bottom" Тогда
				Область.ВертикальноеПоложение=ВертикальноеПоложение.Низ;
			Иначе
				Область.ВертикальноеПоложение=ВертикальноеПоложение.Верх;
			КонецЕсли;
			
			Если ШагСетки=1 Тогда
				Множитель = 1;
			ИначеЕсли ШагСетки=0.5 Тогда
				Множитель = 2;
			ИначеЕсли ШагСетки = 0.2 Тогда
				Множитель = 5;
			Иначе
				Множитель = 10;
			КонецЕсли;
			
			Если ОткрытиеМакета Тогда
				Область.Шрифт = Новый Шрифт(ОписаниеПоля.ИмяШрифта,ОписаниеПоля.РазмерШрифта * Множитель, ОписаниеПоля.Жирный, ОписаниеПоля.Наклонный, ОписаниеПоля.Подчеркивание, ОписаниеПоля.Зачеркивание);
			Иначе
				Область.Шрифт = Новый Шрифт(ОписаниеПоля.Шрифт.Имя, ОписаниеПоля.Шрифт.Размер * Множитель, ОписаниеПоля.Шрифт.Жирный, ОписаниеПоля.Шрифт.Наклонный, ОписаниеПоля.Шрифт.Подчеркивание, ОписаниеПоля.Шрифт.Зачеркивание);
			КонецЕсли; 
			
			Если ОписаниеПоля.Фон = Новый Цвет(0,0,0) Тогда
				Область.ЦветФона = Новый Цвет(255,255,255);
			Иначе
				Область.ЦветФона = ОписаниеПоля.Фон;
			КонецЕсли;
			
			
		ИначеЕсли ОписаниеПоля.Тип = "Barcode" Тогда		
			
			Область.Текст = СтрШаблон(НСтр("ru = 'Штрихкод %1'"), Строка(ОписаниеПоля.ТипШтрихкода));
			Область.РазмещениеТекста=ТипРазмещенияТекстаТабличногоДокумента.Переносить;
			
			Если ШагСетки=1 Тогда
				РазмерШрифта = 8;
			ИначеЕсли ШагСетки=0.5 Тогда
				РазмерШрифта = 16;
			ИначеЕсли ШагСетки = 0.2 Тогда
				РазмерШрифта = 24;
			Иначе
				РазмерШрифта = 36;
			КонецЕсли;
			
			Область.Шрифт = Новый Шрифт(, РазмерШрифта);
			Область.ОриентацияТекста = ОписаниеПоля.Ориентация;
			Область.ГоризонтальноеПоложение=ГоризонтальноеПоложение.Центр;
			Область.ВертикальноеПоложение=ВертикальноеПоложение.Центр;		
			
		ИначеЕсли ОписаниеПоля.Тип = "Image" Тогда
			Область.Текст = НСтр("ru = 'Изображение'");
			Область.РазмещениеТекста=ТипРазмещенияТекстаТабличногоДокумента.Переносить;
			
			Если ШагСетки=1 Тогда
				РазмерШрифта = 8;
			ИначеЕсли ШагСетки=0.5 Тогда
				РазмерШрифта = 16;
			ИначеЕсли ШагСетки = 0.2 Тогда
				РазмерШрифта = 24;
			Иначе
				РазмерШрифта = 36;
			КонецЕсли;
			
			Область.Шрифт = Новый Шрифт(, РазмерШрифта);
			Область.ОриентацияТекста = ОписаниеПоля.Ориентация;
			Область.ГоризонтальноеПоложение=ГоризонтальноеПоложение.Центр;
			Область.ВертикальноеПоложение=ВертикальноеПоложение.Центр;
		КонецЕсли;
		
		Если ОписаниеПоля.Тип = "Text" Или ОписаниеПоля.Тип = "Image" Тогда
			
			Если ОписаниеПоля.ТипРамки = "Solid" Тогда
				ТипЛинии = ТипЛинииЯчейкиТабличногоДокумента.Сплошная;
			ИначеЕсли ОписаниеПоля.ТипРамки = "Double" Тогда
				ТипЛинии = ТипЛинииЯчейкиТабличногоДокумента.Двойная;
			ИначеЕсли ОписаниеПоля.ТипРамки = "Dotted" Тогда
				ТипЛинии = ТипЛинииЯчейкиТабличногоДокумента.Точечная;
			ИначеЕсли ОписаниеПоля.ТипРамки = "Dashed" Тогда
				ТипЛинии = ТипЛинииЯчейкиТабличногоДокумента.БольшойПунктир;
			Иначе
				ТипЛинии = ТипЛинииЯчейкиТабличногоДокумента.НетЛинии;
			КонецЕсли;
			
			Рамка = Новый Линия(ТипЛинии, ОписаниеПоля.ТолщинаРамки);
			
			Если ОписаниеПоля.РамкаСлева Тогда
				Область.ГраницаСлева=Рамка;
			Иначе
				Область.ГраницаСлева=Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.НетЛинии, 0);
			КонецЕсли;
			
			Если ОписаниеПоля.РамкаСправа Тогда
				Область.ГраницаСправа=Рамка;
			Иначе
				Область.ГраницаСправа=Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.НетЛинии, 0);
			КонецЕсли;
			
			Если ОписаниеПоля.РамкаСверху Тогда
				Область.ГраницаСверху=Рамка;
			Иначе
				Область.ГраницаСверху=Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.НетЛинии, 0);
			КонецЕсли;
			
			Если ОписаниеПоля.РамкаСнизу Тогда
				Область.ГраницаСнизу=Рамка;
			Иначе
				Область.ГраницаСнизу=Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.НетЛинии, 0);
			КонецЕсли;
			
		КонецЕсли;
		
		Если ОписаниеПоля.Тип = "Barcode" Или ОписаниеПоля.Тип = "Image" Тогда
			Область.ЦветФона = Новый Цвет(235, 235, 235);
		Иначе
			
			Если Не ОписаниеПоля.РамкаСлева И Не ОписаниеПоля.РамкаСверху И Не ОписаниеПоля.РамкаСправа И Не ОписаниеПоля.РамкаСнизу Тогда
				Рамка = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная, 1);
				Область.ГраницаСлева = Рамка;
				Область.ГраницаСверху = Рамка;
				Область.ГраницаСправа = Рамка;
				Область.ГраницаСнизу = Рамка;
				Область.ЦветРамки = Новый Цвет(235, 235, 235);
			Иначе
				Область.ЦветРамки = Новый Цвет(0, 0, 0);
			КонецЕсли;
			
		КонецЕсли;
	
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьОбласть(Верх, Лево, Низ, Право)
	
	#Если ВебКлиент Тогда
		
		ОчиститьОбластьНаСервере(Верх, Лево, Низ, Право);
		
	#Иначе
	
		Область = Макет.Область(Верх, Лево, Низ, Право);
		Область.Имя = "";
		Область.Картинка = Неопределено;
		Область.Разъединить();
		Область.Очистить(Истина, Истина, Истина);	
		Область.ЦветФона = Новый Цвет(255,255,255);
	
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборФайлаСКД()
	
	// АПК: 1348-выкл не используется модуль ФайловаяСистемаКлиент из БСП
	ДОФ = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДОФ.ПолноеИмяФайла = ИмяФайла;
	ДОФ.Фильтр = НСтр("ru = 'XML-файл'") + "(*.xml)|*.xml"; 
	ДОФ.МножественныйВыбор = Ложь;
	ДОФ.Заголовок = НСтр("ru= 'Выберите файл макета СКД'");
	ДОФ.Показать(Новый ОписаниеОповещения("ВыборФайлаЗавершение", ЭтотОбъект, Новый Структура("ДОФ", ДОФ)));
	// АПК: 1348-вкл
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборФайлаЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	ДОФ = ДополнительныеПараметры.ДОФ;
	
	Если (ВыбранныеФайлы <> Неопределено) Тогда
		ИмяФайла = ДОФ.ПолноеИмяФайла;
		ЗаполнитьПоДаннымМакета(Истина);
	Иначе
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоДаннымМакета(ЧтениеИзФайла = Ложь)
	
	ТекстСообщения = "";
	
	Если ЧтениеИзФайла Тогда
		Попытка
			
			ЧтениеXML = Новый ЧтениеXML;
			ЧтениеXML.ОткрытьФайл(ИмяФайла);
			
			СхемаКД = СериализаторXDTO.ПрочитатьXML(ЧтениеXML, Тип("СхемаКомпоновкиДанных"));
			
			ЧтениеXML.Закрыть();
			ЧтениеXML = Неопределено;
			
			Если СхемаКД.НастройкиПоУмолчанию.ДополнительныеСвойства.Свойство("СхемаКомпоновкиДанных") Тогда
				СхемаКД.НастройкиПоУмолчанию.ДополнительныеСвойства.СхемаКомпоновкиДанных = Неопределено;
			КонецЕсли;
			Объект.СхемаКомпоновкиДанных = Новый ХранилищеЗначения(СхемаКД);
			АдресХранилищаСКД = ПоместитьВоВременноеХранилище(СхемаКД, УникальныйИдентификатор);
			
		Исключение
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%", ИмяФайла);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			Возврат;
		КонецПопытки;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьОписаниеПоля(ОписаниеПоля)
	
	Результат = Новый Структура;
	
	Результат.Вставить("Наименование",			ОписаниеПоля.Наименование);
	Результат.Вставить("Тип",					ОписаниеПоля.Тип);
	Результат.Вставить("ТипЗаполнения",			ОписаниеПоля.ТипЗаполнения);
	Результат.Вставить("ЗначениеПоУмолчанию",	ОписаниеПоля.ЗначениеПоУмолчанию);
	Результат.Вставить("Значение",				ОписаниеПоля.Значение);
	Результат.Вставить("Верх",					ОписаниеПоля.Верх);
	Результат.Вставить("Лево",					ОписаниеПоля.Лево);
	Результат.Вставить("Низ",					ОписаниеПоля.Низ);
	Результат.Вставить("Право",					ОписаниеПоля.Право);
	Результат.Вставить("Ориентация",			ОписаниеПоля.Ориентация);
	Результат.Вставить("ИмяШрифта",				ОписаниеПоля.ИмяШрифта);
	Результат.Вставить("РазмерШрифта",			ОписаниеПоля.РазмерШрифта);
	Результат.Вставить("Жирный",				ОписаниеПоля.Жирный);
	Результат.Вставить("Наклонный",				ОписаниеПоля.Наклонный);
	Результат.Вставить("Подчеркивание",			ОписаниеПоля.Подчеркивание);
	Результат.Вставить("Зачеркивание",			ОписаниеПоля.Зачеркивание);
	Результат.Вставить("РамкаСлева",			ОписаниеПоля.РамкаСлева);
	Результат.Вставить("РамкаСверху",			ОписаниеПоля.РамкаСверху);
	Результат.Вставить("РамкаСправа",			ОписаниеПоля.РамкаСправа);
	Результат.Вставить("РамкаСнизу",			ОписаниеПоля.РамкаСнизу);
	Результат.Вставить("ТипРамки",				ОписаниеПоля.ТипРамки);
	Результат.Вставить("ТолщинаРамки",			ОписаниеПоля.ТолщинаРамки);
	Результат.Вставить("ТипШтрихкода",			ОписаниеПоля.ТипШтрихкода);
	Результат.Вставить("РазмерШрифтаПодписи",	ОписаниеПоля.РазмерШрифтаПодписи);
	Результат.Вставить("ПодписьШтрихкода",		ОписаниеПоля.ПодписьШтрихкода);
	Результат.Вставить("КонтрольныйСимвол",		ОписаниеПоля.КонтрольныйСимвол);
	Результат.Вставить("ПоложениеПоГоризонтали",ОписаниеПоля.ПоложениеПоГоризонтали);
	Результат.Вставить("ПоложениеПоВертикали",	ОписаниеПоля.ПоложениеПоВертикали);
	Результат.Вставить("Многострочность",		ОписаниеПоля.Многострочность);
	Результат.Вставить("Формат",				ОписаниеПоля.Формат);
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура СохранитьОформлениеПоляНаСервере(ОписаниеПоля, ОткрытиеМакета=Ложь, ТабличныйДокумент=Неопределено)
	
	Если ТабличныйДокумент=Неопределено Тогда
		ТабличныйДокумент = Макет;
	КонецЕсли;
	
	Область = ТабличныйДокумент.Область((ОписаниеПоля.Верх-1)/ШагСетки+1, (ОписаниеПоля.Лево-1)/ШагСетки+1, ОписаниеПоля.Низ/ШагСетки, ОписаниеПоля.Право/ШагСетки);
	Область.Объединить();
	Область.Имя = ОписаниеПоля.Наименование;
	
	Если ОписаниеПоля.Тип = "Text" Тогда
		
		Если ОписаниеПоля.ТипЗаполнения = "Constant" Тогда
			Область.Заполнение=ТипЗаполненияОбластиТабличногоДокумента.Текст;
			Область.Текст = ОписаниеПоля.Значение;
		Иначе
			Область.Заполнение=ТипЗаполненияОбластиТабличногоДокумента.Параметр;
			Область.Параметр = ОписаниеПоля.Значение;
		КонецЕсли;
		
		Если ОписаниеПоля.Многострочность Тогда
			Область.РазмещениеТекста=ТипРазмещенияТекстаТабличногоДокумента.Переносить;
		Иначе
			Область.РазмещениеТекста=ТипРазмещенияТекстаТабличногоДокумента.Обрезать;
		КонецЕсли;
		
		Область.ОриентацияТекста = ОписаниеПоля.Ориентация;
		
		Если ОписаниеПоля.ПоложениеПоГоризонтали = "Left" Тогда
			Область.ГоризонтальноеПоложение=ГоризонтальноеПоложение.Лево;
		ИначеЕсли ОписаниеПоля.ПоложениеПоГоризонтали = "Center" Тогда
			Область.ГоризонтальноеПоложение=ГоризонтальноеПоложение.Центр;
		ИначеЕсли ОписаниеПоля.ПоложениеПоГоризонтали = "Right" Тогда
			Область.ГоризонтальноеПоложение=ГоризонтальноеПоложение.Право;
		Иначе
			Область.ГоризонтальноеПоложение=ГоризонтальноеПоложение.Лево;
		КонецЕсли;
		
		Если ОписаниеПоля.ПоложениеПоВертикали = "Top" Тогда
			Область.ВертикальноеПоложение=ВертикальноеПоложение.Верх;
		ИначеЕсли ОписаниеПоля.ПоложениеПоВертикали = "Center" Тогда
			Область.ВертикальноеПоложение=ВертикальноеПоложение.Центр;
		ИначеЕсли ОписаниеПоля.ПоложениеПоВертикали = "Bottom" Тогда
			Область.ВертикальноеПоложение=ВертикальноеПоложение.Низ;
		Иначе
			Область.ВертикальноеПоложение=ВертикальноеПоложение.Верх;
		КонецЕсли;
		
		Если ШагСетки=1 Тогда
			Множитель = 1;
		ИначеЕсли ШагСетки=0.5 Тогда
			Множитель = 2;
		ИначеЕсли ШагСетки = 0.2 Тогда
			Множитель = 5;
		Иначе
			Множитель = 10;
		КонецЕсли;
		
		Если ОткрытиеМакета Тогда
			Область.Шрифт = Новый Шрифт(ОписаниеПоля.ИмяШрифта,ОписаниеПоля.РазмерШрифта * Множитель, ОписаниеПоля.Жирный, ОписаниеПоля.Наклонный, ОписаниеПоля.Подчеркивание, ОписаниеПоля.Зачеркивание);
		Иначе
			Область.Шрифт = Новый Шрифт(ОписаниеПоля.Шрифт.Имя, ОписаниеПоля.Шрифт.Размер * Множитель, ОписаниеПоля.Шрифт.Жирный, ОписаниеПоля.Шрифт.Наклонный, ОписаниеПоля.Шрифт.Подчеркивание, ОписаниеПоля.Шрифт.Зачеркивание);
		КонецЕсли;
		
	ИначеЕсли ОписаниеПоля.Тип = "Barcode" Тогда		
		
		Область.Текст = СтрШаблон(НСтр("ru = 'Штрихкод %1'"), Строка(ОписаниеПоля.ТипШтрихкода));
		Область.РазмещениеТекста=ТипРазмещенияТекстаТабличногоДокумента.Переносить;
		
		Если ШагСетки=1 Тогда
			РазмерШрифта = 8;
		ИначеЕсли ШагСетки=0.5 Тогда
			РазмерШрифта = 16;
		ИначеЕсли ШагСетки = 0.2 Тогда
			РазмерШрифта = 24;
		Иначе
			РазмерШрифта = 36;
		КонецЕсли;
		
		Область.Шрифт = Новый Шрифт(, РазмерШрифта);
		Область.ОриентацияТекста = ОписаниеПоля.Ориентация;
		Область.ГоризонтальноеПоложение=ГоризонтальноеПоложение.Центр;
		Область.ВертикальноеПоложение=ВертикальноеПоложение.Центр;		
		
	ИначеЕсли ОписаниеПоля.Тип = "Image" Тогда
		Область.Текст = НСтр("ru = 'Изображение'");
		Область.РазмещениеТекста=ТипРазмещенияТекстаТабличногоДокумента.Переносить;
		
		Если ШагСетки=1 Тогда
			РазмерШрифта = 8;
		ИначеЕсли ШагСетки=0.5 Тогда
			РазмерШрифта = 16;
		ИначеЕсли ШагСетки = 0.2 Тогда
			РазмерШрифта = 24;
		Иначе
			РазмерШрифта = 36;
		КонецЕсли;
		
		Область.Шрифт = Новый Шрифт(, РазмерШрифта);
		Область.ОриентацияТекста = ОписаниеПоля.Ориентация;
		Область.ГоризонтальноеПоложение=ГоризонтальноеПоложение.Центр;
		Область.ВертикальноеПоложение=ВертикальноеПоложение.Центр;
	КонецЕсли;
	
	Если ОписаниеПоля.Тип = "Text" Или ОписаниеПоля.Тип = "Image" Тогда
		
		Если ОписаниеПоля.ТипРамки = "Solid" Тогда
			ТипЛинии = ТипЛинииЯчейкиТабличногоДокумента.Сплошная;
		ИначеЕсли ОписаниеПоля.ТипРамки = "Double" Тогда
			ТипЛинии = ТипЛинииЯчейкиТабличногоДокумента.Двойная;
		ИначеЕсли ОписаниеПоля.ТипРамки = "Dotted" Тогда
			ТипЛинии = ТипЛинииЯчейкиТабличногоДокумента.Точечная;
		ИначеЕсли ОписаниеПоля.ТипРамки = "Dashed" Тогда
			ТипЛинии = ТипЛинииЯчейкиТабличногоДокумента.БольшойПунктир;
		Иначе
			ТипЛинии = ТипЛинииЯчейкиТабличногоДокумента.НетЛинии;
		КонецЕсли;
		
		Рамка = Новый Линия(ТипЛинии, ОписаниеПоля.ТолщинаРамки);
		
		Если ОписаниеПоля.РамкаСлева Тогда
			Область.ГраницаСлева=Рамка;
		Иначе
			Область.ГраницаСлева=Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.НетЛинии, 0);
		КонецЕсли;
		
		Если ОписаниеПоля.РамкаСправа Тогда
			Область.ГраницаСправа=Рамка;
		Иначе
			Область.ГраницаСправа=Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.НетЛинии, 0);
		КонецЕсли;
		
		Если ОписаниеПоля.РамкаСверху Тогда
			Область.ГраницаСверху=Рамка;
		Иначе
			Область.ГраницаСверху=Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.НетЛинии, 0);
		КонецЕсли;
		
		Если ОписаниеПоля.РамкаСнизу Тогда
			Область.ГраницаСнизу=Рамка;
		Иначе
			Область.ГраницаСнизу=Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.НетЛинии, 0);
		КонецЕсли;
		
	КонецЕсли;
	
	Если ОписаниеПоля.Тип = "Barcode" Или ОписаниеПоля.Тип = "Image" Тогда
		Область.ЦветФона = Новый Цвет(235, 235, 235);
	Иначе
		
		Если Не ОписаниеПоля.РамкаСлева И Не ОписаниеПоля.РамкаСверху И Не ОписаниеПоля.РамкаСправа И Не ОписаниеПоля.РамкаСнизу Тогда
			Рамка = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная, 1);
			Область.ГраницаСлева = Рамка;
			Область.ГраницаСверху = Рамка;
			Область.ГраницаСправа = Рамка;
			Область.ГраницаСнизу = Рамка;
			Область.ЦветРамки = Новый Цвет(235, 235, 235);
		Иначе
			Область.ЦветРамки = Новый Цвет(0, 0, 0);
		КонецЕсли;
		
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ОчиститьОбластьНаСервере(Верх, Лево, Низ, Право)
	
	Область = Макет.Область(Верх, Лево, Низ, Право);
	Область.Имя = "";
	Область.Картинка = Неопределено;
	Область.Разъединить();
	Область.Очистить(Истина, Истина, Истина);	
	Область.ЦветФона = Новый Цвет(255,255,255);
	
КонецПроцедуры

#КонецОбласти