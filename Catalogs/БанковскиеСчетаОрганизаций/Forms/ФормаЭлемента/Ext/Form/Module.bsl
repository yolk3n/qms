
////////////////////////////////////////////////////////////////////////////////
// ОПИСАНИЕ ПЕРЕМЕННЫХ
#Область ОписаниеПеременных

&НаКлиенте
Перем ИмяРедактируемогоРеквизита;

#КонецОбласти // ОписаниеПеременных

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);
	
	// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	
	// ИнтеграцияС1СДокументооборотом
	ИнтеграцияС1СДокументооборотБазоваяФункциональность.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец ИнтеграцияС1СДокументооборотом
	
	Если Объект.Ссылка.Пустая() Тогда
		ПриСозданииНовогоПриЧтенииНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	ПриСозданииНовогоПриЧтенииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(РезультатВыбора, ИсточникВыбора)
	
	Если (ИсточникВыбора.ИмяФормы = "Справочник.БанковскиеСчетаОрганизаций.Форма.РеквизитыБанка") Тогда
		Если Не ПустаяСтрока(РезультатВыбора) Тогда
			Если РезультатВыбора.Реквизит = "БИКБанка" Тогда
				Объект.РучноеИзменениеРеквизитовБанка = РезультатВыбора.РучноеИзменение;
				Если РезультатВыбора.РучноеИзменение Тогда
					Объект.Банк              = "";
					Объект.БИКБанка          = РезультатВыбора.ЗначенияПолей.БИК;
					Объект.НаименованиеБанка = РезультатВыбора.ЗначенияПолей.Наименование;
					Объект.КоррСчетБанка     = РезультатВыбора.ЗначенияПолей.КоррСчет;
					Объект.ГородБанка        = РезультатВыбора.ЗначенияПолей.Город;
					Объект.АдресБанка        = РезультатВыбора.ЗначенияПолей.Адрес;
					Объект.ТелефоныБанка     = РезультатВыбора.ЗначенияПолей.Телефоны;
					
					БИКБанка          = РезультатВыбора.ЗначенияПолей.БИК;
					КоррСчетБанка     = РезультатВыбора.ЗначенияПолей.КоррСчет;
					НаименованиеБанка = РезультатВыбора.ЗначенияПолей.Наименование;
					ГородБанка        = РезультатВыбора.ЗначенияПолей.Город;
				Иначе
					Объект.Банк              = РезультатВыбора.Банк;
					Объект.БИКБанка          = "";
					Объект.НаименованиеБанка = "";
					Объект.КоррСчетБанка     = "";
					Объект.ГородБанка        = "";
					Объект.АдресБанка        = "";
					Объект.ТелефоныБанка     = "";
					
					ЗаполнитьРеквизитыБанкаПоБанку(Объект.Банк, "Банк", Ложь);
				КонецЕсли;
			ИначеЕсли РезультатВыбора.Реквизит = "БИКБанкаДляРасчетов" Тогда
				Объект.РучноеИзменениеРеквизитовБанкаДляРасчетов = РезультатВыбора.РучноеИзменение;
				Если РезультатВыбора.РучноеИзменение Тогда
					Объект.БанкДляРасчетов              = "";
					Объект.БИКБанкаДляРасчетов          = РезультатВыбора.ЗначенияПолей.БИК;
					Объект.НаименованиеБанкаДляРасчетов = РезультатВыбора.ЗначенияПолей.Наименование;
					Объект.КоррСчетБанкаДляРасчетов     = РезультатВыбора.ЗначенияПолей.КоррСчет;
					Объект.ГородБанкаДляРасчетов        = РезультатВыбора.ЗначенияПолей.Город;
					Объект.АдресБанкаДляРасчетов        = РезультатВыбора.ЗначенияПолей.Адрес;
					Объект.ТелефоныБанкаДляРасчетов     = РезультатВыбора.ЗначенияПолей.Телефоны;
					
					БИКБанкаДляРасчетов          = РезультатВыбора.ЗначенияПолей.БИК; 
					КоррСчетБанкаДляРасчетов     = РезультатВыбора.ЗначенияПолей.КоррСчет;
					НаименованиеБанкаДляРасчетов = РезультатВыбора.ЗначенияПолей.Наименование;
					ГородБанкаДляРасчетов        = РезультатВыбора.ЗначенияПолей.Город;
				Иначе
					Объект.БанкДляРасчетов              = РезультатВыбора.Банк;
					Объект.БИКБанкаДляРасчетов          = "";
					Объект.НаименованиеБанкаДляРасчетов = "";
					Объект.КоррСчетБанкаДляРасчетов     = "";
					Объект.ГородБанкаДляРасчетов        = "";
					Объект.АдресБанкаДляРасчетов        = "";
					Объект.ТелефоныБанкаДляРасчетов     = "";
					
					ЗаполнитьРеквизитыБанкаПоБанку(Объект.БанкДляРасчетов, "БанкДляРасчетов", Ложь);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли (ИсточникВыбора.ИмяФормы = "Справочник.КлассификаторБанков.Форма.ФормаВыбора") Тогда
		Если ТипЗнч(РезультатВыбора) = Тип("СправочникСсылка.КлассификаторБанков") Тогда
			Если ИмяРедактируемогоРеквизита = "БИКБанка" Тогда
				Объект.Банк              = РезультатВыбора;
				Объект.БИКБанка          = "";
				Объект.НаименованиеБанка = "";
				Объект.КоррСчетБанка     = "";
				Объект.ГородБанка        = "";
				Объект.АдресБанка        = "";
				Объект.ТелефоныБанка     = "";
				
				ЗаполнитьРеквизитыБанкаПоБанку(РезультатВыбора, "Банк", Ложь);
			ИначеЕсли ИмяРедактируемогоРеквизита = "БИКБанкаДляРасчетов" Тогда
				Объект.БанкДляРасчетов              = РезультатВыбора;
				Объект.БИКБанкаДляРасчетов          = "";
				Объект.НаименованиеБанкаДляРасчетов = "";
				Объект.КоррСчетБанкаДляРасчетов     = "";
				Объект.ГородБанкаДляРасчетов        = "";
				Объект.АдресБанкаДляРасчетов        = "";
				Объект.ТелефоныБанкаДляРасчетов     = "";
				
				ЗаполнитьРеквизитыБанкаПоБанку(РезультатВыбора, "БанкДляРасчетов", Ложь);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если Окно <> Неопределено Тогда
		Окно.Активизировать();
	КонецЕсли;
	
	УправлениеЭлементамиФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ)

	Если Объект.РучноеИзменениеРеквизитовБанка Тогда
		Если БИКБанка <> Объект.БИКБанка Тогда
			Объект.БИКБанка = БИКБанка;
		КонецЕсли;
		Если КоррСчетБанка <> Объект.КоррСчетБанка Тогда
			Объект.КоррСчетБанка = КоррСчетБанка;
		КонецЕсли;
		Если НаименованиеБанка <> Объект.НаименованиеБанка Тогда
			Объект.НаименованиеБанка = НаименованиеБанка;
		КонецЕсли;
		Если ГородБанка <> Объект.ГородБанка Тогда
			Объект.ГородБанка = ГородБанка;
		КонецЕсли;
	КонецЕсли;
	
	Если Объект.РучноеИзменениеРеквизитовБанкаДляРасчетов Тогда
		Если БИКБанкаДляРасчетов <> Объект.БИКБанкаДляРасчетов Тогда
			Объект.БИКБанкаДляРасчетов = БИКБанкаДляРасчетов;
		КонецЕсли;
		Если КоррСчетБанкаДляРасчетов <> Объект.КоррСчетБанкаДляРасчетов Тогда
			Объект.КоррСчетБанкаДляРасчетов = КоррСчетБанкаДляРасчетов;
		КонецЕсли;
		Если НаименованиеБанкаДляРасчетов <> Объект.НаименованиеБанкаДляРасчетов Тогда
			Объект.НаименованиеБанкаДляРасчетов = НаименованиеБанкаДляРасчетов;
		КонецЕсли;
		Если ГородБанкаДляРасчетов <> Объект.ГородБанкаДляРасчетов Тогда
			Объект.ГородБанкаДляРасчетов = ГородБанкаДляРасчетов;
		КонецЕсли;
	КонецЕсли;
	
	// Заполним текст корреспондента.
	Если ИспользоватьТекстКорреспондента Тогда
		Объект.ТекстКорреспондента = ТекстКорреспондента;
	Иначе
		Объект.ТекстКорреспондента = "";
	КонецЕсли;
	
	Если ПустаяСтрока(Объект.Наименование) Тогда
		Объект.Наименование = СформироватьАвтоНаименование();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ
#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура НомерСчетаПриИзменении(Элемент)
	
	Если Не ПустаяСтрока(Объект.НомерСчета) Тогда
		НомерСчетаПриИзмененииСервер();
	КонецЕсли;
	
	УправлениеЭлементамиФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ВладелецПриИзменении(Элемент)
	
	ЗаполнитьТекстКорреспондента();
	СформироватьАвтоНаименование();
	
КонецПроцедуры

&НаКлиенте
Процедура ВалютаДенежныхСредствПриИзменении(Элемент)
	
	СформироватьАвтоНаименование();
	
КонецПроцедуры

&НаКлиенте
Процедура БИКБанкаПриИзменении(Элемент)
	
	ИмяРедактируемогоРеквизита = Элемент.Имя;
	РеквизитБанкаПриИзменении(ИмяРедактируемогоРеквизита);
	
КонецПроцедуры

&НаКлиенте
Процедура БИКБанкаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ИмяРедактируемогоРеквизита = Элемент.Имя;
	РеквизитБанкаПриВыборе(ИмяРедактируемогоРеквизита, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура БИКБанкаОткрытие(Элемент, СтандартнаяОбработка)
	
	ИмяРедактируемогоРеквизита = Элемент.Имя;
	СтандартнаяОбработка = Ложь;
	РеквизитБанкаОткрытие(ИмяРедактируемогоРеквизита);
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеБанкаПриИзменении(Элемент)
	
	СформироватьАвтоНаименование();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользуетсяБанкДляРасчетовПриИзменении(Элемент)
	
	Элементы.БИКБанкаДляРасчетов.Доступность                       = ИспользуетсяБанкДляРасчетов;
	Элементы.РучноеИзменениеРеквизитовБанкаДляРасчетов.Доступность = ИспользуетсяБанкДляРасчетов;
	Элементы.КоррСчетБанкаДляРасчетов.Доступность                  = ИспользуетсяБанкДляРасчетов;
	Элементы.НаименованиеБанкаДляРасчетов.Доступность              = ИспользуетсяБанкДляРасчетов;
	Элементы.ГородБанкаДляРасчетов.Доступность                     = ИспользуетсяБанкДляРасчетов;
	
	Если Не ИспользуетсяБанкДляРасчетов Тогда
		Объект.БанкДляРасчетов                           = "";
		Объект.РучноеИзменениеРеквизитовБанкаДляРасчетов = "";
		Объект.БИКБанкаДляРасчетов                       = "";
		Объект.НаименованиеБанкаДляРасчетов              = "";
		Объект.КоррСчетБанкаДляРасчетов                  = "";
		Объект.ГородБанкаДляРасчетов                     = "";
		Объект.АдресБанкаДляРасчетов                     = "";
		Объект.ТелефоныБанкаДляРасчетов                  = "";
		КоррСчетБанкаДляРасчетов                         = "";
		НаименованиеБанкаДляРасчетов                     = "";
		ГородБанкаДляРасчетов                            = "";
	КонецЕсли;
	
	УправлениеЭлементамиФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура БИКБанкаДляРасчетовПриИзменении(Элемент)
	
	ИмяРедактируемогоРеквизита = Элемент.Имя;
	РеквизитБанкаПриИзменении(ИмяРедактируемогоРеквизита);
	
КонецПроцедуры

&НаКлиенте
Процедура БИКБанкаДляРасчетовНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ИмяРедактируемогоРеквизита = Элемент.Имя;
	РеквизитБанкаПриВыборе(ИмяРедактируемогоРеквизита, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура БИКБанкаДляРасчетовОткрытие(Элемент, СтандартнаяОбработка)
	
	ИмяРедактируемогоРеквизита = Элемент.Имя;
	СтандартнаяОбработка = Ложь;
	РеквизитБанкаОткрытие(ИмяРедактируемогоРеквизита);
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьТекстКорреспондентаПриИзменении(Элемент)
	
	Элементы.ТекстКорреспондента.Доступность = ИспользоватьТекстКорреспондента;
	
КонецПроцедуры

&НаКлиенте
Процедура РучноеИзменениеРеквизитовБанкаПриИзменении(Элемент)
	
	ЗаписьОБанке = "";
	Если Объект.РучноеИзменениеРеквизитовБанка Тогда
		Если Не Объект.Банк.Пустая() Тогда
			ЗаполнитьРеквизитыБанкаПоБанку(Объект.Банк, "Банк", Истина);
		КонецЕсли;
		Объект.Банк = "";
	Иначе
		ЗаполнитьРеквизитыБанкаПоБИК(Объект.БИКБанка, "Банк", Истина);
		Объект.БИКБанка          = "";
		Объект.НаименованиеБанка = "";
		Объект.КоррСчетБанка     = "";
		Объект.ГородБанка        = "";
		Объект.АдресБанка        = "";
		Объект.ТелефоныБанка     = "";
	КонецЕсли;
	
	УправлениеЭлементамиФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура РучноеИзменениеРеквизитовБанкаДляРасчетовПриИзменении(Элемент)
	
	ЗаписьОБанке = "";
	Если Объект.РучноеИзменениеРеквизитовБанкаДляРасчетов Тогда
		Если НЕ Объект.БанкДляРасчетов.Пустая() Тогда
			ЗаполнитьРеквизитыБанкаПоБанку(Объект.БанкДляРасчетов, "БанкДляРасчетов", Истина);
		КонецЕсли;	
		Объект.БанкДляРасчетов = "";
	Иначе
		ЗаполнитьРеквизитыБанкаПоБИК(Объект.БИКБанкаДляРасчетов, "БанкДляРасчетов", Истина);
		Объект.БИКБанкаДляРасчетов          = "";
		Объект.НаименованиеБанкаДляРасчетов = "";
		Объект.КоррСчетБанкаДляРасчетов     = "";
		Объект.ГородБанкаДляРасчетов        = "";
		Объект.АдресБанкаДляРасчетов        = "";
		Объект.ТелефоныБанкаДляРасчетов     = "";
	КонецЕсли;
	
	УправлениеЭлементамиФормы();
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийЭлементовФормы

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПриСозданииНовогоПриЧтенииНаСервере()
	
	БИКБанка          = "";
	НаименованиеБанка = "";
	КоррСчетБанка     = "";
	ГородБанка        = "";
	
	БИКБанкаДляРасчетов          = "";
	КоррСчетБанкаДляРасчетов     = "";
	НаименованиеБанкаДляРасчетов = "";
	ГородБанкаДляРасчетов        = "";
	
	Если Объект.РучноеИзменениеРеквизитовБанка Тогда
		БИКБанка          = Объект.БИКБанка;
		НаименованиеБанка = Объект.НаименованиеБанка;
		КоррСчетБанка     = Объект.КоррСчетБанка;
		ГородБанка        = Объект.ГородБанка;
	Иначе
		Если Не Объект.Банк.Пустая() Тогда
			ЗаполнитьРеквизитыБанкаПоБанку(Объект.Банк, "Банк", Ложь);
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Если ЗначениеЗаполнено(Объект.БИКБанкаДляРасчетов) Или ЗначениеЗаполнено(Объект.БанкДляРасчетов) Тогда
			ИспользуетсяБанкДляРасчетов = Истина;
		Иначе
			ИспользуетсяБанкДляРасчетов = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Если Объект.РучноеИзменениеРеквизитовБанкаДляРасчетов Тогда
		БИКБанкаДляРасчетов          = Объект.БИКБанкаДляРасчетов;
		НаименованиеБанкаДляРасчетов = Объект.НаименованиеБанкаДляРасчетов;
		КоррСчетБанкаДляРасчетов     = Объект.КоррСчетБанкаДляРасчетов;
		ГородБанкаДляРасчетов        = Объект.ГородБанкаДляРасчетов;
	Иначе
		Если Не Объект.БанкДляРасчетов.Пустая() Тогда
			ЗаполнитьРеквизитыБанкаПоБанку(Объект.БанкДляРасчетов, "БанкДляРасчетов", Ложь);
		КонецЕсли;
	КонецЕсли;
	
	УправлениеЭлементамиФормы();
	
	СформироватьАвтоНаименование();
	
КонецПроцедуры

&НаСервере
Функция ЗаполнитьРеквизитыБанкаПоБанку(Банк, ТипБанка, ПеренестиЗначенияРеквизитов = Ложь)
	
	Если ТипЗнч(Банк) = Тип("СправочникСсылка.КлассификаторБанков") Тогда
		Если ТипБанка = "Банк" Тогда
			
			БИКБанка          = Банк.Код;
			КоррСчетБанка     = Банк.КоррСчет;
			НаименованиеБанка = Банк.Наименование;
			ГородБанка        = Банк.Город;
			
			Если ПеренестиЗначенияРеквизитов Тогда
				Объект.БИКБанка          = Банк.Код;
				Объект.НаименованиеБанка = Банк.Наименование;
				Объект.КоррСчетБанка     = Банк.КоррСчет;
				Объект.ГородБанка        = Банк.Город;
				Объект.АдресБанка        = Банк.Адрес;
				Объект.ТелефоныБанка     = Банк.Телефоны;
				Объект.Банк              = "";
			КонецЕсли;
			
		ИначеЕсли ТипБанка = "БанкДляРасчетов" Тогда
			
			БИКБанкаДляРасчетов          = Банк.Код;
			КоррСчетБанкаДляРасчетов     = Банк.КоррСчет;
			НаименованиеБанкаДляРасчетов = Банк.Наименование;
			ГородБанкаДляРасчетов        = Банк.Город;
			
			Если ПеренестиЗначенияРеквизитов Тогда
				Объект.БИКБанкаДляРасчетов          = Банк.Код;
				Объект.НаименованиеБанкаДляРасчетов = Банк.Наименование;
				Объект.КоррСчетБанкаДляРасчетов     = Банк.КоррСчет;
				Объект.ГородБанкаДляРасчетов        = Банк.Город;
				Объект.АдресБанкаДляРасчетов        = Банк.Адрес;
				Объект.ТелефоныБанкаДляРасчетов     = Банк.Телефоны;
				Объект.БанкДляРасчетов              = "";
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция ЗаполнитьРеквизитыБанкаПоБИК(БИК, ТипБанка, ПеренестиЗначенияРеквизитов = Ложь)
	
	НашлиПоБИК   = Ложь;
	ЗаписьОБанке = "";
	
	Если ТипБанка = "Банк" Тогда
		
		БИКБанка          = "";
		КоррСчетБанка     = "";
		НаименованиеБанка = "";
		ГородБанка        = "";
		РаботаСБанками.ПолучитьДанныеКлассификатора(БИК,,ЗаписьОБанке);
		
		Если НЕ ПустаяСтрока(ЗаписьОБанке) Тогда
			БИКБанка          = ЗаписьОБанке.Код;
			КоррСчетБанка     = ЗаписьОБанке.КоррСчет;
			НаименованиеБанка = ЗаписьОБанке.Наименование;
			ГородБанка        = ЗаписьОБанке.Город;
			НашлиПоБИК        = Истина;
			Если ПеренестиЗначенияРеквизитов Тогда
				Объект.БИКБанка          = "";
				Объект.НаименованиеБанка = "";
				Объект.КоррСчетБанка     = "";
				Объект.ГородБанка        = "";
				Объект.АдресБанка        = "";
				Объект.ТелефоныБанка     = "";
				Объект.Банк              = ЗаписьОБанке;
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли ТипБанка = "БанкДляРасчетов" Тогда
		
		БИКБанкаДляРасчетов          = "";
		КоррСчетБанкаДляРасчетов     = "";
		НаименованиеБанкаДляРасчетов = "";
		ГородБанкаДляРасчетов        = "";
		РаботаСБанками.ПолучитьДанныеКлассификатора(БИК,, ЗаписьОБанке);
		
		Если НЕ ПустаяСтрока(ЗаписьОБанке) Тогда
			БИКБанкаДляРасчетов          = ЗаписьОБанке.Код;
			КоррСчетБанкаДляРасчетов     = ЗаписьОБанке.КоррСчет;
			НаименованиеБанкаДляРасчетов = ЗаписьОБанке.Наименование;
			ГородБанкаДляРасчетов        = ЗаписьОБанке.Город;
			НашлиПоБИК                   = Истина;
			Если ПеренестиЗначенияРеквизитов Тогда
				Объект.БИКБанкаДляРасчетов          = "";
				Объект.НаименованиеБанкаДляРасчетов = "";
				Объект.КоррСчетБанкаДляРасчетов     = "";
				Объект.ГородБанкаДляРасчетов        = "";
				Объект.АдресБанкаДляРасчетов        = "";
				Объект.ТелефоныБанкаДляРасчетов     = "";
				Объект.БанкДляРасчетов              = ЗаписьОБанке;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат НашлиПоБИК;
	
КонецФункции

&НаКлиенте
Процедура РеквизитБанкаПриИзменении(ИмяЭлемента)
	
	Если (ИмяЭлемента = "БИКБанка") Тогда
		Если Не Объект.РучноеИзменениеРеквизитовБанка Тогда
			Если Не ЗаполнитьРеквизитыБанкаПоБИК(БИКБанка, "Банк", Истина) Тогда
				ВыборРеквизитовБанка(ИмяЭлемента);
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли (ИмяЭлемента = "БИКБанкаДляРасчетов") Тогда
		Если Не Объект.РучноеИзменениеРеквизитовБанкаДляРасчетов Тогда
			Если Не ЗаполнитьРеквизитыБанкаПоБИК(БИКБанкаДляРасчетов, "БанкДляРасчетов", Истина) Тогда
				ВыборРеквизитовБанка(ИмяЭлемента);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	УправлениеЭлементамиФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборРеквизитовБанка(ИмяЭлемента)
	
	СписокВариантовОтветовНаВопрос = Новый СписокЗначений;
	СписокВариантовОтветовНаВопрос.Добавить("ВыбратьИзСписка", НСтр("ru = 'Выбрать из списка'"));
	СписокВариантовОтветовНаВопрос.Добавить("ПродолжитьВвод",  НСтр("ru = 'Продолжить ввод'"));
	СписокВариантовОтветовНаВопрос.Добавить("ОтменитьВвод",    НСтр("ru = 'Отменить ввод'"));
	
	ТекстВопроса = НСтр("ru = 'Банк с БИК  %Значение% не найден в классификаторе банков.'");
	ТекстВопроса = СтрЗаменить(ТекстВопроса, "%Значение%", ЭтотОбъект[ИмяЭлемента]);
	
	Оповещение = Новый ОписаниеОповещения("ВыборРеквизитовБанкаЗавершение", ЭтотОбъект, ИмяЭлемента);
	Если (ИмяЭлемента = "БИКБанка") Тогда
		ПоказатьВопрос(Оповещение, ТекстВопроса, СписокВариантовОтветовНаВопрос, 0,,НСтр("ru = 'Выбор банка из классификатора'"));
	ИначеЕсли (ИмяЭлемента = "БИКБанкаДляРасчетов") Тогда
		ПоказатьВопрос(Оповещение, ТекстВопроса, СписокВариантовОтветовНаВопрос, 0,,НСтр("ru = 'Выбор банка-корреспондента из классификатора'"));
	КонецЕсли;
	
КонецПроцедуры

// Завершает заполнение значений реквизитов банка,
// в зависимости от ответа пользователя
//
// Продолжение процедуры ВыборРеквизитовБанка
//
&НаКлиенте
Процедура ВыборРеквизитовБанкаЗавершение(Ответ, ИмяЭлемента) Экспорт
	
	Если (ИмяЭлемента = "БИКБанка") Тогда
		
		Если Ответ = "ОтменитьВвод" Тогда
			БИКБанка = "";
		ИначеЕсли Ответ = "ПродолжитьВвод" Тогда
			Объект.РучноеИзменениеРеквизитовБанка = Истина;
			Объект.БИКБанка = БИКБанка;
		ИначеЕсли Ответ = "ВыбратьИзСписка" Тогда
			СтруктураПараметров = Новый Структура;
			СтруктураПараметров.Вставить("Реквизит", БИКБанка);
			ОткрытьФорму("Справочник.КлассификаторБанков.Форма.ФормаВыбора", СтруктураПараметров, ЭтотОбъект);
		КонецЕсли;
		
	ИначеЕсли (ИмяЭлемента = "БИКБанкаДляРасчетов") Тогда
		
		Если Ответ = "ОтменитьВвод" Тогда
			БИКБанкаДляРасчетов = "";
		ИначеЕсли Ответ = "ПродолжитьВвод" Тогда
			Объект.РучноеИзменениеРеквизитовБанкаДляРасчетов = Истина;
			Объект.БИКБанкаДляРасчетов = БИКБанкаДляРасчетов;
		ИначеЕсли Ответ = "ВыбратьИзСписка" Тогда
			СтруктураПараметров = Новый Структура;
			СтруктураПараметров.Вставить("Реквизит", "БИКБанкаДляРасчетов");
			ОткрытьФорму("Справочник.КлассификаторБанков.Форма.ФормаВыбора", СтруктураПараметров, ЭтотОбъект);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РеквизитБанкаПриВыборе(ИмяЭлемента, Форма)
	
	Если ИмяЭлемента = "БИКБанка" Тогда
		Если Не Объект.РучноеИзменениеРеквизитовБанка Тогда
			СтруктураПараметров = Новый Структура;
			СтруктураПараметров.Вставить("Реквизит", ИмяЭлемента);
			ОткрытьФорму("Справочник.КлассификаторБанков.Форма.ФормаВыбора", СтруктураПараметров, Форма);
		КонецЕсли;
	ИначеЕсли ИмяЭлемента = "БИКБанкаДляРасчетов" Тогда
		Если Не Объект.РучноеИзменениеРеквизитовБанкаДляРасчетов Тогда
			СтруктураПараметров = Новый Структура;
			СтруктураПараметров.Вставить("Реквизит", ИмяЭлемента);
			ОткрытьФорму("Справочник.КлассификаторБанков.Форма.ФормаВыбора", СтруктураПараметров, Форма);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РеквизитБанкаОткрытие(ИмяЭлемента)
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Реквизит", ИмяЭлемента);
	ЗначенияПараметров = Новый Структура;
	
	Если ИмяЭлемента = "БИКБанка" Тогда
		
		СтруктураПараметров.Вставить("РучноеИзменение", Объект.РучноеИзменениеРеквизитовБанка);
		
		Если Объект.РучноеИзменениеРеквизитовБанка Тогда
			ЗначенияПараметров.Вставить("БИК", БИКБанка);
			ЗначенияПараметров.Вставить("Наименование", НаименованиеБанка);
			ЗначенияПараметров.Вставить("КоррСчет", КоррСчетБанка);
			ЗначенияПараметров.Вставить("Город", ГородБанка);
			ЗначенияПараметров.Вставить("Адрес", Объект.АдресБанка);
			ЗначенияПараметров.Вставить("Телефоны", Объект.ТелефоныБанка);
		Иначе
		    СтруктураПараметров.Вставить("Банк", Объект.Банк);
		КонецЕсли;
		
	ИначеЕсли ИмяЭлемента = "БИКБанкаДляРасчетов" Тогда
		
		СтруктураПараметров.Вставить("РучноеИзменение", Объект.РучноеИзменениеРеквизитовБанкаДляРасчетов);
		
		Если Объект.РучноеИзменениеРеквизитовБанкаДляРасчетов Тогда
			ЗначенияПараметров.Вставить("БИК", БИКБанкаДляРасчетов);
			ЗначенияПараметров.Вставить("Наименование", НаименованиеБанкаДляРасчетов);
			ЗначенияПараметров.Вставить("КоррСчет", КоррСчетБанкаДляРасчетов);
			ЗначенияПараметров.Вставить("Город", ГородБанкаДляРасчетов);
			ЗначенияПараметров.Вставить("Адрес", Объект.АдресБанкаДляРасчетов);
			ЗначенияПараметров.Вставить("Телефоны", Объект.ТелефоныБанкаДляРасчетов);
		Иначе
			СтруктураПараметров.Вставить("Банк", Объект.БанкДляРасчетов);
		КонецЕсли;
		
	КонецЕсли;
	
	СтруктураПараметров.Вставить("ЗначенияПолей", ЗначенияПараметров);
	ОткрытьФорму("Справочник.БанковскиеСчетаОрганизаций.Форма.РеквизитыБанка",СтруктураПараметров, ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТекстКорреспондента()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	НаименованиеСокращенное КАК Наименование
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	Организации.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НаименованиеПолное КАК Наименование
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|ГДЕ
	|	Контрагенты.Ссылка = &Ссылка
	|";
	Запрос.УстановитьПараметр("Ссылка", Объект.Владелец);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Если Выборка.Следующий() Тогда
		ТекстКорреспондента = СокрЛП(Выборка.Наименование);
	Иначе
		ТекстКорреспондента = "";
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УправлениеЭлементамиФормы()
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Элементы.ВалютаДенежныхСредств.ТолькоПросмотр = Истина;
		Элементы.Владелец.ТолькоПросмотр = Истина;
	Иначе
		Элементы.ВалютаДенежныхСредств.ТолькоПросмотр = Ложь;
		Элементы.Владелец.ТолькоПросмотр = Ложь;
	КонецЕсли;
	
	Элементы.КоррСчетБанка.Доступность     = Объект.РучноеИзменениеРеквизитовБанка;
	Элементы.НаименованиеБанка.Доступность = Объект.РучноеИзменениеРеквизитовБанка;
	Элементы.ГородБанка.Доступность        = Объект.РучноеИзменениеРеквизитовБанка;
	
	Элементы.КоррСчетБанкаДляРасчетов.Доступность     = Объект.РучноеИзменениеРеквизитовБанкаДляРасчетов;
	Элементы.НаименованиеБанкаДляРасчетов.Доступность = Объект.РучноеИзменениеРеквизитовБанкаДляРасчетов;
	Элементы.ГородБанкаДляРасчетов.Доступность        = Объект.РучноеИзменениеРеквизитовБанкаДляРасчетов;
	
	Элементы.БИКБанкаДляРасчетов.Доступность                       = ИспользуетсяБанкДляРасчетов;
	Элементы.РучноеИзменениеРеквизитовБанкаДляРасчетов.Доступность = ИспользуетсяБанкДляРасчетов;
	
	// Установим редактирования текста наименования организации.
	ИспользоватьТекстКорреспондента = ЗначениеЗаполнено(Объект.ТекстКорреспондента);
	Элементы.ТекстКорреспондента.Доступность = ИспользоватьТекстКорреспондента;
	
	Если ИспользоватьТекстКорреспондента Тогда
		ТекстКорреспондента = Объект.ТекстКорреспондента;
	Иначе
		ЗаполнитьТекстКорреспондента();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция СформироватьАвтоНаименование()
	
	Элементы.Наименование.СписокВыбора.Очистить();
	
	Если Объект.РучноеИзменениеРеквизитовБанка Тогда
		СтрокаНаименования = Прав(СокрЛП(Объект.НомерСчета), 4)
			+ ?(ЗначениеЗаполнено(Объект.НаименованиеБанка), " в " + Строка(Объект.НаименованиеБанка), "")
			+ ", " + СокрЛП(Объект.Владелец);
		СтрокаНаименования = Лев(СтрокаНаименования, 150);
		
		Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
		
		СтрокаНаименования = ?(ЗначениеЗаполнено(Объект.НаименованиеБанка), Строка(Объект.НаименованиеБанка), "")
			+ ", " + СокрЛП(объект.Владелец)
			+ " (" + Строка(Объект.ВалютаДенежныхСредств) + ")";
		СтрокаНаименования = Лев(СтрокаНаименования, 150);
		
		Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
		
		
	Иначе
		
		СтрокаНаименования = Прав(СокрЛП(Объект.НомерСчета), 4)
			+ ?(ЗначениеЗаполнено(Объект.Банк), " в " + Строка(Объект.Банк), "")
			+ ", " + СокрЛП(Объект.Владелец);
		СтрокаНаименования = Лев(СтрокаНаименования, 150);
		
		Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
		
		СтрокаНаименования = ?(ЗначениеЗаполнено(Объект.Банк), Строка(Объект.Банк), "")
			+ ", " + СокрЛП(объект.Владелец)
			+ " (" + Строка(Объект.ВалютаДенежныхСредств) + ")";
		СтрокаНаименования = Лев(СтрокаНаименования, 150);
		
		Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
		
	КонецЕсли;
	
	Возврат СтрокаНаименования;
	
КонецФункции

&НаСервере
Процедура НомерСчетаПриИзмененииСервер()
	
	Валюта = ПолучитьВалютуПоНомеруСчета(Объект.НомерСчета);
	Если ЗначениеЗаполнено(Валюта) Тогда
		Объект.ВалютаДенежныхСредств = Валюта;
	КонецЕсли;
	СформироватьАвтоНаименование();
	
КонецПроцедуры 

&НаСервереБезКонтекста
Функция ПолучитьВалютуПоНомеруСчета(НомерСчета)
	
	УстановитьПривилегированныйРежим(Истина);
	
	КодВалюты = Сред(НомерСчета, 6, 3);
	Если КодВалюты = "810" Тогда
		КодВалюты = "643";
	КонецЕсли;
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	Валюты.Ссылка КАК Валюта
	|ИЗ
	|	Справочник.Валюты КАК Валюты
	|ГДЕ
	|	Валюты.Код = &КодВалюты
	|");
	Запрос.УстановитьПараметр("КодВалюты", КодВалюты);
	
	Валюта = Справочники.Валюты.ПустаяСсылка();
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Валюта = Выборка.Валюта;
	КонецЕсли;
	
	Возврат Валюта;
	
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции

////////////////////////////////////////////////////////////////////////////////
// СТАНДАРТНЫЕ ПОДСИСТЕМЫ
#Область СтандартныеПодсистемы

// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов

&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
	
	ЗапретРедактированияРеквизитовОбъектовБольничнаяАптекаКлиент.РазрешитьРедактированиеРеквизитовОбъекта(ЭтотОбъект);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов

// ИнтеграцияС1СДокументооборотом

&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуИнтеграции(Команда)
	
	// ИнтеграцияС1СДокументооборотом
	ИнтеграцияС1СДокументооборотБазоваяФункциональностьКлиент.ВыполнитьПодключаемуюКомандуИнтеграции(Команда, ЭтотОбъект, Объект);
	// Конец ИнтеграцияС1СДокументооборотом
	
КонецПроцедуры

// Конец ИнтеграцияС1СДокументооборотом

#КонецОбласти // СтандартныеПодсистемы
