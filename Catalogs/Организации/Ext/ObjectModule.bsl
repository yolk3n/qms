#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

//////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ
#Область ОбработчикиСобытийФормы

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Перем ТекстСообщения;
	
	НепроверяемыеРеквизиты = Новый Массив;
	
	ЭтоЮрЛицо = ОбщегоНазначенияБольничнаяАптекаКлиентСервер.ЭтоЮрЛицо(ЮрФизЛицо);
	
	Если Не ЭтоНовый() Тогда
		ЗначенияКодовВИнформационнойБазе = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, "ИНН,КПП,ОГРН,КодПоОКПО");
	КонецЕсли;
	
	Если Не ПустаяСтрока(ОГРН) 
		И (ЭтоНовый() Или ЗначенияКодовВИнформационнойБазе.ОГРН <> ОГРН)
		И Не РегламентированныеДанныеКлиентСервер.ОГРНСоответствуетТребованиям(ОГРН, ЭтоЮрЛицо, ТекстСообщения) Тогда
		
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ОГРН",, Отказ);
		
	КонецЕсли;
	
	Если Не ОбособленноеПодразделение Тогда
		НепроверяемыеРеквизиты.Добавить("ГоловнаяОрганизация");
	Иначе
		Если ЗначениеЗаполнено(ГоловнаяОрганизация) И ГоловнаяОрганизация = Ссылка Тогда
			ТекстСообщения = НСтр("ru = 'Организация не может быть обособленным подразделением, для самой себя.'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ГоловнаяОрганизация",, Отказ);
		КонецЕсли;
	КонецЕсли;
	
	Если Не ЭтоНовый()
	   И ОбособленноеПодразделение
	   И ЕстьОбособленныеПодразделенияОрганизации() Тогда
		
		ТекстСообщения = НСтр("ru = 'Организация не может быть обособленным подразделением, потому что она уже выбрана в качестве головной для других организаций.'");
		
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект,,, Отказ);
		
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, НепроверяемыеРеквизиты);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ОбщегоНазначенияБольничнаяАптекаКлиентСервер.ЭтоЮрЛицо(ЮрФизЛицо) Тогда
		
		Если Не ПустаяСтрока(КПП) Тогда
			КПП = "";
		КонецЕсли;
		
		ДатаРегистрации = Дата(1,1,1);
		
	Иначе
		
		Если ЗначениеЗаполнено(ИндивидуальныйПредприниматель) Тогда
			ИндивидуальныйПредприниматель = Справочники.ФизическиеЛица.ПустаяСсылка();
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СвидетельствоДатаВыдачи) Тогда
			СвидетельствоДатаВыдачи = Дата(1,1,1);
		КонецЕсли;
		
		Если Не ПустаяСтрока(СвидетельствоСерияНомер) Тогда
			СвидетельствоСерияНомер = ""
		КонецЕсли;
		
		Если ПустаяСтрока(ИНН) И Не ПустаяСтрока(КПП) Тогда
			КПП = "";
		КонецЕсли;
		
	КонецЕсли;
	
	Если Не ОбособленноеПодразделение Тогда
		
		Если ЭтоНовый() Тогда
			СсылкаНового = ПолучитьСсылкуНового();
			Если СсылкаНового.Пустая() Тогда
				СсылкаНового = Справочники.Организации.ПолучитьСсылку();
				УстановитьСсылкуНового(СсылкаНового);
			КонецЕсли;
			
			Если ГоловнаяОрганизация <> СсылкаНового Тогда
				ГоловнаяОрганизация = СсылкаНового;
			КонецЕсли;
			
		ИначеЕсли ГоловнаяОрганизация <> Ссылка Тогда
			ГоловнаяОрганизация = Ссылка;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	СинхронизироватьНастройкиОбособленныхПодразделений(Отказ);
	
	ОбновитьПовторноИспользуемыеЗначения();
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

Функция ЕстьОбособленныеПодразделенияОрганизации()
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Организации.Ссылка
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	Организации.ГоловнаяОрганизация = &Ссылка
	|	И Организации.Ссылка <> Организации.ГоловнаяОрганизация
	|");
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Возврат Не Запрос.Выполнить().Пустой();
	
КонецФункции

Процедура СинхронизироватьНастройкиОбособленныхПодразделений(Отказ)
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьОбособленныеПодразделенияВыделенныеНаБаланс") Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	Организации.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	Организации.ОбособленноеПодразделение
	|	И Организации.ГоловнаяОрганизация = &Ссылка
	|	И Организации.Ссылка <> &Ссылка
	|");
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Попытка
			ЗаблокироватьДанныеДляРедактирования(Выборка.Ссылка);
		Исключение
			
			ТекстОшибки = НСтр("ru='Не удалось заблокировать %Элемент%. %ОписаниеОшибки%'");
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Элемент%",        Выборка.Ссылка);
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%ОписаниеОшибки%", ОбработкаОшибок.КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ОбщегоНазначения.СообщитьПользователю(ТекстОшибки,,,,Отказ);
			
		КонецПопытки;
		
		Объект = Выборка.Ссылка.ПолучитьОбъект();
		Объект.ИНН = ИНН;
		Объект.ЮрФизЛицо = ЮрФизЛицо;
		
		Попытка
			
			Объект.Записать();
			
		Исключение
			
			ТекстОшибки = НСтр("ru='Не удалось записать %Элемент%. %ОписаниеОшибки%'");
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Элемент%",        Выборка.Ссылка);
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%ОписаниеОшибки%", ОбработкаОшибок.КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ОбщегоНазначения.СообщитьПользователю(ТекстОшибки,,,,Отказ);
			
		КонецПопытки
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти // СлужебныеПроцедурыИФункции

#КонецЕсли