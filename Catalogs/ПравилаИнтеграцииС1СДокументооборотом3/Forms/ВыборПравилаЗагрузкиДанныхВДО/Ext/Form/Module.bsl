#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("ТекущаяСтрока", ТекущаяСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбновитьПодходящиеПравилаЗагрузкиВДО();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПодходящиеПравилаЗагрузкиВДО

&НаКлиенте
Процедура ПодходящиеПравилаЗагрузкиВДОВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	
	ОбработатьВыборЭлементаДерева();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Выбрать(Команда)
	
	ОбработатьВыборЭлементаДерева();
	
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	
	ЭтотОбъект.ВладелецФормы.ПодходящиеПравилаЗагрузкиВДО.Очистить();
	
	МассивПравил = ИнтеграцияС1СДокументооборот3ВызовСервера.ПодходящиеПравилаЗагрузкиВДО(
		ЭтотОбъект.ВладелецФормы.Объект.ТипОбъектаИС);
	Для Каждого Правило Из МассивПравил Цикл
		НоваяСтрока = ЭтотОбъект.ВладелецФормы.ПодходящиеПравилаЗагрузкиВДО.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Правило);
	КонецЦикла;
	
	ОбновитьПодходящиеПравилаЗагрузкиВДО();
	
КонецПроцедуры

&НаКлиенте
Процедура Создать(Команда)
	
	ИнтеграцияС1СДокументооборот3Клиент.ОткрытьОбъектДО(
		"e1cib/command/Обработка.ПанельАдминистрированияБесшовнойИнтеграции.Команда.НастройкиИнтеграции");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбновитьПодходящиеПравилаЗагрузкиВДО()
	
	ЗаполнитьПодходящиеПравилаЗагрузкиВДО(ЭтотОбъект.ВладелецФормы.ПодходящиеПравилаЗагрузкиВДО);
	
	Строки = ПодходящиеПравилаЗагрузкиВДО.ПолучитьЭлементы();
	Для Каждого Строка Из Строки Цикл
		Элементы.ПодходящиеПравилаЗагрузкиВДО.Развернуть(Строка.ПолучитьИдентификатор(), Истина);
	КонецЦикла;
	
	Если ЗначениеЗаполнено(ТекущаяСтрока) Тогда
		Для Каждого СтрокаГруппа Из Строки Цикл
			Для Каждого Строка Из СтрокаГруппа.ПолучитьЭлементы() Цикл
				Если Строка.ПравилоЗагрузкиВДОID = ТекущаяСтрока Тогда
					Элементы.ПодходящиеПравилаЗагрузкиВДО.ТекущаяСтрока = Строка.ПолучитьИдентификатор();
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВыборЭлементаДерева()
	
	ТекущиеДанные = Элементы.ПодходящиеПравилаЗагрузкиВДО.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если ТекущиеДанные.ПравилоЗагрузкиВДОID = "" Тогда
		Возврат;
	КонецЕсли;
	
	Результат = Новый Структура;
	Результат.Вставить("ПравилоЗагрузкиВДО", ТекущиеДанные.ПравилоЗагрузкиВДО);
	Результат.Вставить("ПравилоЗагрузкиВДОID", ТекущиеДанные.ПравилоЗагрузкиВДОID);
	Результат.Вставить("ТипОбъектаДО", ТекущиеДанные.ТипОбъектаДО);
	Результат.Вставить("ВидДокументаДО", ТекущиеДанные.ВидДокументаДО);
	Результат.Вставить("ВидДокументаДОID", ТекущиеДанные.ВидДокументаДОID);
	
	Закрыть(Результат);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПодходящиеПравилаЗагрузкиВДО(Знач СписокПравилЗагрузкиВДО)
	
	Дерево = РеквизитФормыВЗначение("ПодходящиеПравилаЗагрузкиВДО");
	
	Дерево.Строки.Очистить();
	
	ЗаполнитьВеткуДереваМетаданных(
		Дерево,
		СписокПравилЗагрузкиВДО,
		"DMCorrespondent",
		БиблиотекаКартинок.Справочник,
		НСтр("ru = 'Справочники'"));
	ЗаполнитьВеткуДереваМетаданных(
		Дерево,
		СписокПравилЗагрузкиВДО,
		"DMMeeting",
		БиблиотекаКартинок.Справочник,
		НСтр("ru = 'Справочники'"));
	ЗаполнитьВеткуДереваМетаданных(
		Дерево,
		СписокПравилЗагрузкиВДО,
		"DMDocument",
		БиблиотекаКартинок.Документ,
		НСтр("ru = 'Документы'"));
	
	ЗначениеВРеквизитФормы(Дерево, "ПодходящиеПравилаЗагрузкиВДО");
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаполнитьВеткуДереваМетаданных(Дерево, СписокПравилЗагрузкиВДО, ТипОбъектаДО, Картинка, Представление)
	
	СтрокиПоТипу = СписокПравилЗагрузкиВДО.НайтиСтроки(Новый Структура("ТипОбъектаДО", ТипОбъектаДО));
	
	Если СтрокиПоТипу.Количество() > 0 Тогда
		СтрокаГруппа = Дерево.Строки.Найти(Представление, "ПравилоЗагрузкиВДО");
		Если СтрокаГруппа = Неопределено Тогда
			СтрокаГруппа = Дерево.Строки.Добавить();
			СтрокаГруппа.ПравилоЗагрузкиВДОID = "";
			СтрокаГруппа.ПравилоЗагрузкиВДО = Представление;
			СтрокаГруппа.Картинка = Картинка;
		КонецЕсли;
		
		Для Каждого СтрокаПоТипу Из СтрокиПоТипу Цикл
			ЗаполнитьЗначенияСвойств(СтрокаГруппа.Строки.Добавить(), СтрокаПоТипу);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти