
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ
#Область ОбработчикиСобытий

Функция ПолучитьНоменклатуруПоGTIN(Запрос)
	
	Попытка
		
		УстановитьПривилегированныйРежим(Истина);
		
		ИмяСобытия = НСтр("ru = 'Получение описания номенклатуры по GTIN для мобильного приложения.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		
		КодСостояния = Неопределено;
		
		РезультатПроверки = ТарификацияБольничнаяАптека.УслугаДоступна_ПоддержкаСмартфонаДляСканированияШтрихкодов();
		Если Не РезультатПроверки.УслугаДоступна Тогда
			КодСостояния = 403;
			ДанныеОтвета = Новый Структура("ТекстОшибки", РезультатПроверки.ТекстОшибки);
			ВызватьИсключение РезультатПроверки.ТекстОшибки;
		КонецЕсли;
		
		GTIN = Запрос.ПараметрыURL.Получить("GTIN");
		
		ЗаписатьСообщениеВЖурнал(ИмяСобытия, ТипЗнч(Запрос), GTIN);
		
		Если Не ЗначениеЗаполнено(GTIN) Тогда
			КодСостояния = 400;
			ТекстОшибки = НСтр("ru = 'Не указан GTIN.'");
			ДанныеОтвета = Новый Структура("ТекстОшибки", ТекстОшибки);
			ВызватьИсключение ТекстОшибки;
		КонецЕсли;
		
		ДанныеПоШтрихкодам = РегистрыСведений.ШтрихкодыНоменклатуры.ПолучитьДанныеПоШтрихкодам(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(GTIN));
		ДанныеПоШтрихкоду = ДанныеПоШтрихкодам[GTIN];
		
		Если ДанныеПоШтрихкоду = Неопределено
		 Или Не ЗначениеЗаполнено(ДанныеПоШтрихкоду.Номенклатура) Тогда
			КодСостояния = 400;
			ТекстОшибки = НСтр("ru = 'Номенклатура со штрихкодом ""%1"" не обнаружена.'");
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, GTIN);
			ДанныеОтвета = Новый Структура("ТекстОшибки", ТекстОшибки);
			ВызватьИсключение ТекстОшибки;
		КонецЕсли;
		
		КодСостояния = 200;
		ДанныеОтвета = Новый Структура("Номенклатура", СокрЛП(ДанныеПоШтрихкоду.Номенклатура));
		
	Исключение
		
		Если КодСостояния = Неопределено Тогда
			КодСостояния = 500;
			ТекстОшибки = НСтр("ru = 'Внутренняя ошибка сервера. Обратитесь к администратору.'");
			ДанныеОтвета = Новый Структура("ТекстОшибки", ТекстОшибки);
		КонецЕсли;
		
		ТекстДляЖурнала = НСтр("ru = 'Ошибка при получении описания номенклатуры по GTIN для мобильного приложения:'");
		ТекстДляЖурнала = ТекстДляЖурнала + Символы.ПС + ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ЗаписатьОшибкуВЖурнал(ИмяСобытия, ТекстДляЖурнала);
		
	КонецПопытки;
	
	ОтветJSON = ИнтеграцияСМобильнымПриложением.СтрокаJSONИзДанных(ДанныеОтвета);
	
	Ответ = Новый HTTPСервисОтвет(КодСостояния);
	Ответ.УстановитьТелоИзСтроки(ОтветJSON);
	
	ЗаписатьСообщениеВЖурнал(ИмяСобытия, ТипЗнч(Ответ), ОтветJSON);
	
	Возврат Ответ;
	
КонецФункции

Функция ЗаписатьШтрихкодыВОчередь(Запрос)
	
	Попытка
		
		УстановитьПривилегированныйРежим(Истина);
		
		ИмяСобытия = НСтр("ru = 'Запись штрихкода в очередь загрузки из мобильного приложения.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		
		КодСостояния = Неопределено;
		
		РезультатПроверки = ТарификацияБольничнаяАптека.УслугаДоступна_ПоддержкаСмартфонаДляСканированияШтрихкодов();
		Если Не РезультатПроверки.УслугаДоступна Тогда
			КодСостояния = 403;
			ДанныеОтвета = Новый Структура("ТекстОшибки", РезультатПроверки.ТекстОшибки);
			ВызватьИсключение РезультатПроверки.ТекстОшибки;
		КонецЕсли;
		
		ТелоЗапроса = Запрос.ПолучитьТелоКакСтроку();
		
		ЗаписатьСообщениеВЖурнал(ИмяСобытия, ТипЗнч(Запрос), ТелоЗапроса);
		
		ЧтениеJSON = Новый ЧтениеJSON;
		ЧтениеJSON.УстановитьСтроку(ТелоЗапроса);
		
		ДанныеИзПриложения = ПрочитатьJSON(ЧтениеJSON);
		
		Если ТипЗнч(ДанныеИзПриложения) <> Тип("Структура") Тогда
			КодСостояния = 415;
			ТекстОшибки = НСтр("ru = 'Некорректный формат тела запроса.'");
			ДанныеОтвета = Новый Структура("ТекстОшибки", ТекстОшибки);
			ВызватьИсключение ТекстОшибки;
		КонецЕсли;
		
		Если Не ДанныеИзПриложения.Свойство("Пользователь") Тогда
			КодСостояния = 400;
			ТекстОшибки = НСтр("ru = 'Не указан идентификатор пользователя.'");
			ДанныеОтвета = Новый Структура("ТекстОшибки", ТекстОшибки);
			ВызватьИсключение ТекстОшибки;
		КонецЕсли;
		
		Если Не ДанныеИзПриложения.Свойство("ДанныеУпаковок") Тогда
			КодСостояния = 400;
			ТекстОшибки = НСтр("ru = 'Не указаны данные упаковок.'");
			ДанныеОтвета = Новый Структура("ТекстОшибки", ТекстОшибки);
			ВызватьИсключение ТекстОшибки;
		КонецЕсли;
		
		Пользователь = Справочники.Пользователи.ПолучитьСсылку(Новый УникальныйИдентификатор(ДанныеИзПриложения.Пользователь));
		Если Не ОбщегоНазначения.СсылкаСуществует(Пользователь) Тогда
			КодСостояния = 400;
			ТекстОшибки = НСтр("ru = 'Пользователь с идентификатором ""%1"" не обнаружен.'");
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, ДанныеИзПриложения.Пользователь);
			ДанныеОтвета = Новый Структура("ТекстОшибки", ТекстОшибки);
			ВызватьИсключение ТекстОшибки;
		КонецЕсли;
		
		РегистрыСведений.ОчередьЗагрузкиШтрихкодовИзМобильногоПриложения.ЗаписатьШтрихкодыВОчередь(Пользователь, ДанныеИзПриложения.ДанныеУпаковок);
		
		КодСостояния = 200;
		ДанныеОтвета = Новый Структура("Описание", НСтр("ru = 'Запись данных штрихкодов выполнена успешно.'"));
		
	Исключение
		
		Если КодСостояния = Неопределено Тогда
			КодСостояния = 500;
			ТекстОшибки = НСтр("ru = 'Внутренняя ошибка сервера. Обратитесь к администратору.'");
			ДанныеОтвета = Новый Структура("ТекстОшибки", ТекстОшибки);
		КонецЕсли;
		
		ТекстДляЖурнала = НСтр("ru = 'Не удалось записать данные штрихкода в очередь загрузки из мобильного приложения:'");
		ТекстДляЖурнала = ТекстДляЖурнала + Символы.ПС + ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ЗаписатьОшибкуВЖурнал(ИмяСобытия, ТекстДляЖурнала);
		
	КонецПопытки;
	
	ОтветJSON = ИнтеграцияСМобильнымПриложением.СтрокаJSONИзДанных(ДанныеОтвета);
	
	Ответ = Новый HTTPСервисОтвет(КодСостояния);
	Ответ.УстановитьТелоИзСтроки(ОтветJSON);
	
	ЗаписатьСообщениеВЖурнал(ИмяСобытия, ТипЗнч(Ответ), ОтветJSON);
	
	Возврат Ответ;
	
КонецФункции

Процедура ЗаписатьСообщениеВЖурнал(ИмяСобытия, ТипСообщения, Сообщение)
	
	ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Информация,, ТипСообщения, Сообщение);
	
КонецПроцедуры

Процедура ЗаписатьОшибкуВЖурнал(ИмяСобытия, Текст)
	
	ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Ошибка,,, Текст);
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытий
