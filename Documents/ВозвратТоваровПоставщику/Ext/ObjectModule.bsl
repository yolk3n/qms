#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ
#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	
	Если ТипДанныхЗаполнения = Тип("ДокументСсылка.ПоступлениеТоваров") Тогда
		ЗаполнитьДокументНаОснованииПоступленияТоваров(ДанныеЗаполнения);
	ИначеЕсли ТипДанныхЗаполнения = Тип("Структура") Тогда
		ЗаполнитьДокументПоОтбору(ДанныеЗаполнения);
	КонецЕсли;
	
	ИнициализироватьДокумент();
	
	ЗаполнитьПоЗначениямАвтозаполнения();
	
	ОбщегоНазначенияБольничнаяАптека.ЗаполнитьРеквизитыПоСкладу(ЭтотОбъект);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ИнициализироватьДокумент();
	
	ЗапасыСервер.ЗаполнитьСтатусыУчетаНоменклатуры(ЭтотОбъект, ЗапасыСервер.ПолучитьПараметрыУчетаНоменклатуры(ЭтотОбъект));
	
	ОбщегоНазначенияБольничнаяАптека.ЗаполнитьРеквизитыПоСкладу(ЭтотОбъект);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	НепроверяемыеРеквизиты = Новый Массив;
	
	ОбработкаТабличнойЧастиСервер.ПроверитьЗаполнениеКоличества(ЭтотОбъект, НепроверяемыеРеквизиты, Отказ);
	ОбработкаТабличнойЧастиСервер.ПроверитьЗаполнениеИсточникаФинансирования(ЭтотОбъект, НепроверяемыеРеквизиты, Отказ);
	
	ПараметрыУчетаНоменклатуры = ЗапасыСервер.ПолучитьПараметрыУчетаНоменклатуры(ЭтотОбъект);
	ЗапасыСервер.ПроверитьЗаполнениеСерийНоменклатуры(ЭтотОбъект, ПараметрыУчетаНоменклатуры, НепроверяемыеРеквизиты, Отказ);
	ЗапасыСервер.ПроверитьЗаполнениеПартийНоменклатуры(ЭтотОбъект, ПараметрыУчетаНоменклатуры, НепроверяемыеРеквизиты, Отказ);
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, НепроверяемыеРеквизиты);
	
	ПроверитьКорректностьВозвращаемыхТоваров(Отказ);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	ОбработкаТабличнойЧастиСервер.ОкруглитьКоличествоШтучныхТоваров(ЭтотОбъект, РежимЗаписи);
	
	СуммаДокумента = ЦенообразованиеБольничнаяАптекаКлиентСервер.ПолучитьСуммуДокумента(Товары, ЦенаВключаетНДС);
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		ОбработкаТабличнойЧастиСервер.ЗаполнитьИсточникФинансирования(ЭтотОбъект);
	КонецЕсли;
	
	ЗапасыСервер.ОчиститьНеиспользуемыеРеквизиты(ЭтотОбъект, ЗапасыСервер.ПолучитьПараметрыУчетаНоменклатуры(ЭтотОбъект));
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеБольничнаяАптека.СформироватьДвиженияПоРегистрам(ЭтотОбъект, Отказ, РежимПроведения);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПроведениеБольничнаяАптека.СформироватьДвиженияПоРегистрам(ЭтотОбъект, Отказ);
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытий

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

////////////////////////////////////////////////////////////////////////////////
// Инициализация и заполнение документа
#Область ИнициализацияИЗаполнение

Процедура ИнициализироватьДокумент()
	
	Автор = Пользователи.ТекущийПользователь();
	Ответственный = Пользователи.ТекущийПользователь();
	
	Если Не ЗначениеЗаполнено(Валюта) Тогда
		Валюта = ЗначениеНастроекБольничнаяАптекаПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ВалютаВзаиморасчетов) Тогда
		ВалютаВзаиморасчетов = Валюта;
	КонецЕсли;
	
	ЗаполнитьПоляПоУмолчанию();
	
КонецПроцедуры

Процедура ЗаполнитьПоляПоУмолчанию()
	
	Организация = ЗначениеНастроекБольничнаяАптекаПовтИсп.ПолучитьОрганизациюПоУмолчанию(Организация);
	ПодразделениеОрганизации = ЗначениеНастроекБольничнаяАптекаПовтИсп.ПолучитьПодразделениеПоУмолчанию(ПодразделениеОрганизации, Организация);
	Склад = ЗначениеНастроекБольничнаяАптекаПовтИсп.ПолучитьСкладПоУмолчанию(Склад, ПодразделениеОрганизации);
	
КонецПроцедуры

Процедура ЗаполнитьПоЗначениямАвтозаполнения()
	
	ОбщегоНазначенияБольничнаяАптека.ЗаполнитьПоЗначениямАвтозаполнения(ЭтотОбъект, Неопределено, "Организация, Склад");
	ОбщегоНазначенияБольничнаяАптека.ЗаполнитьПоЗначениямАвтозаполнения(ЭтотОбъект, Неопределено, "ПодразделениеОрганизации", "Организация");
	
КонецПроцедуры

Процедура ЗаполнитьДокументПоОтбору(ДанныеЗаполнения)
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
	ОбщегоНазначенияБольничнаяАптека.ПроверитьЗаполнениеДоговораКонтрагента(ЭтотОбъект);
	ОбщегоНазначенияБольничнаяАптека.ПроверитьЗаполнениеПодразделенияОрганизации(ЭтотОбъект);
	
КонецПроцедуры

Процедура ЗаполнитьДокументНаОснованииПоступленияТоваров(ДокументОснование)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	Документ.Ссылка                    КАК ДокументПоступления,
	|	Документ.Организация               КАК Организация,
	|	Документ.ПодразделениеОрганизации  КАК ПодразделениеОрганизации,
	|	Документ.Контрагент                КАК Контрагент,
	|	Документ.ДоговорКонтрагента        КАК ДоговорКонтрагента,
	|	Документ.Валюта                    КАК Валюта,
	|	Документ.ЦенаВключаетНДС           КАК ЦенаВключаетНДС,
	|	Документ.ПринятьНДСКВычету         КАК ПринятьНДСКВычету,
	|	Документ.ВалютаВзаиморасчетов      КАК ВалютаВзаиморасчетов,
	|	Документ.Склад                     КАК Склад,
	|	Документ.ИсточникФинансирования    КАК ИсточникФинансирования,
	|	НЕ Документ.Проведен               КАК ЕстьОшибкиПроведен
	|ИЗ
	|	Документ.ПоступлениеТоваров КАК Документ
	|ГДЕ
	|	Документ.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(Товары.НомерСтроки)          КАК НомерСтроки,
	|	Товары.Номенклатура                  КАК Номенклатура,
	|	Товары.СерияНоменклатуры             КАК СерияНоменклатуры,
	|	Товары.Партия                        КАК Партия,
	|	МАКСИМУМ(Товары.ЕдиницаИзмерения)    КАК ЕдиницаИзмерения,
	|	МАКСИМУМ(Товары.СтавкаНДС)           КАК СтавкаНДС,
	|	СУММА(Товары.Количество)             КАК Количество,
	|	СУММА(Товары.Сумма)                  КАК Сумма,
	|	СУММА(Товары.СуммаНДС)               КАК СуммаНДС,
	|	СУММА(Товары.СуммаСНДС)              КАК СуммаСНДС
	|ПОМЕСТИТЬ ТоварыПоступления
	|ИЗ
	|	Документ.ПоступлениеТоваров.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|СГРУППИРОВАТЬ ПО
	|	Номенклатура,
	|	СерияНоменклатуры,
	|	Партия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура                  КАК Номенклатура,
	|	Товары.СерияНоменклатуры             КАК СерияНоменклатуры,
	|	Товары.Партия                        КАК Партия,
	|	МАКСИМУМ(Товары.ЕдиницаИзмерения)    КАК ЕдиницаИзмерения,
	|	СУММА(Товары.Количество)             КАК Количество,
	|	СУММА(Товары.Сумма)                  КАК Сумма,
	|	СУММА(Товары.СуммаНДС)               КАК СуммаНДС,
	|	СУММА(Товары.СуммаСНДС)              КАК СуммаСНДС
	|ПОМЕСТИТЬ ТоварыВозврата
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику.Товары КАК Товары
	|ГДЕ
	|	Товары.ДокументПоступления = &ДокументОснование
	|	И Товары.Ссылка.Проведен
	|СГРУППИРОВАТЬ ПО
	|	Номенклатура,
	|	СерияНоменклатуры,
	|	Партия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыПоступления.НомерСтроки             КАК НомерСтроки,
	|	&ДокументОснование                        КАК ДокументПоступления,
	|	ТоварыПоступления.Номенклатура            КАК Номенклатура,
	|	ТоварыПоступления.СерияНоменклатуры       КАК СерияНоменклатуры,
	|	ТоварыПоступления.Партия                  КАК Партия,
	|	ТоварыПоступления.ЕдиницаИзмерения        КАК ЕдиницаИзмерения,
	|	ТоварыПоступления.СтавкаНДС               КАК СтавкаНДС,
	|	ТоварыПоступления.Количество - ЕСТЬNULL(ТоварыВозврата.Количество, 0)  КАК Количество,
	|	ТоварыПоступления.Сумма - ЕСТЬNULL(ТоварыВозврата.Сумма, 0)            КАК Сумма,
	|	ТоварыПоступления.СуммаНДС - ЕСТЬNULL(ТоварыВозврата.СуммаНДС, 0)      КАК СуммаНДС,
	|	ТоварыПоступления.СуммаСНДС - ЕСТЬNULL(ТоварыВозврата.СуммаСНДС, 0)    КАК СуммаСНДС
	|
	|ИЗ
	|	ТоварыПоступления КАК ТоварыПоступления
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТоварыВозврата КАК ТоварыВозврата
	|		ПО
	|			ТоварыПоступления.Номенклатура = ТоварыВозврата.Номенклатура
	|			И ТоварыПоступления.СерияНоменклатуры = ТоварыВозврата.СерияНоменклатуры
	|			И ТоварыПоступления.Партия = ТоварыВозврата.Партия
	|ГДЕ
	|	ТоварыПоступления.Количество - ЕСТЬNULL(ТоварыВозврата.Количество, 0) > 0
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|";
	
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	Шапка = РезультатЗапроса[0].Выбрать();
	Шапка.Следующий();
	
	ОбщегоНазначенияБольничнаяАптека.ПроверитьВозможностьВводаНаОсновании(Шапка.ДокументПоступления, Шапка.ЕстьОшибкиПроведен);
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Шапка);
	
	КэшированныеЗначения = Неопределено;
	
	Действия = ОбработкаТабличнойЧастиКлиентСервер;
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить(Действия.Действие_ПересчитатьКоэффициент());
	СтруктураДействий.Вставить(Действия.Действие_ПересчитатьКоличествоУпаковок());
	СтруктураДействий.Вставить(Действия.Действие_ПересчитатьЦену());
	
	Выборка = РезультатЗапроса[3].Выбрать();
	Пока Выборка.Следующий() Цикл
		ТекущаяСтрока = Товары.Добавить();
		ЗаполнитьЗначенияСвойств(ТекущаяСтрока, Выборка);
		ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТабличнойЧасти(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	КонецЦикла;
	
	ПараметрыУчетаНоменклатуры = ЗапасыСервер.ПолучитьПараметрыУчетаНоменклатуры(ЭтотОбъект);
	ЗапасыСервер.ЗаполнитьСтатусыУчетаНоменклатуры(ЭтотОбъект, ПараметрыУчетаНоменклатуры);
	
КонецПроцедуры

#КонецОбласти // ИнициализацияИЗаполнение

////////////////////////////////////////////////////////////////////////////////
// Прочее
#Область Прочее

Функция СписокРегистровДляКонтроля() Экспорт
	
	РегистрыДляКонтроля = Новый Массив;
	
	Если ДополнительныеСвойства.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		
		РегистрыДляКонтроля.Добавить(Движения.СвободныеОстатки);
		РегистрыДляКонтроля.Добавить(Движения.СебестоимостьТоваров);
		
	КонецЕсли;
	
	Возврат РегистрыДляКонтроля;
	
КонецФункции

Процедура ПроверитьКорректностьВозвращаемыхТоваров(Отказ)
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаТовары.ДокументПоступления    КАК ДокументПоступления,
	|	ТаблицаТовары.Номенклатура           КАК Номенклатура,
	|	ТаблицаТовары.СерияНоменклатуры      КАК СерияНоменклатуры,
	|	ТаблицаТовары.Партия                 КАК Партия,
	|	ТаблицаТовары.ЕдиницаИзмерения       КАК ЕдиницаИзмерения,
	|	ТаблицаТовары.Количество             КАК Количество
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	&ТаблицаПроверяемыеТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.ДокументПоступления <> ЗНАЧЕНИЕ(Документ.ПоступлениеТоваров.ПустаяСсылка)
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.ДокументПоступления         КАК ДокументПоступления,
	|	ТаблицаТовары.Номенклатура                КАК Номенклатура,
	|	ТаблицаТовары.СерияНоменклатуры           КАК СерияНоменклатуры,
	|	ТаблицаТовары.Партия                      КАК Партия,
	|	МАКСИМУМ(ТаблицаТовары.ЕдиницаИзмерения)  КАК ЕдиницаИзмерения,
	|	СУММА(ТаблицаТовары.Количество)           КАК Количество
	|ПОМЕСТИТЬ ПроверяемыеТовары
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументПоступления,
	|	Номенклатура,
	|	СерияНоменклатуры,
	|	Партия
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументПоступления,
	|	Номенклатура,
	|	СерияНоменклатуры,
	|	Партия
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка             КАК ДокументПоступления,
	|	ТаблицаТовары.Номенклатура       КАК Номенклатура,
	|	ТаблицаТовары.СерияНоменклатуры  КАК СерияНоменклатуры,
	|	ТаблицаТовары.Партия             КАК Партия,
	|	СУММА(ТаблицаТовары.Количество)  КАК Количество
	|ПОМЕСТИТЬ ДанныеПоступления
	|ИЗ
	|	Документ.ПоступлениеТоваров.Товары КАК ТаблицаТовары
	|
	|ГДЕ
	|	ТаблицаТовары.Ссылка.Проведен
	|	И (Ссылка, Номенклатура, СерияНоменклатуры, Партия) В
	|	(ВЫБРАТЬ 
	|		ПроверяемыеТовары.ДокументПоступления КАК Ссылка,
	|		ПроверяемыеТовары.Номенклатура КАК Номенклатура,
	|		ПроверяемыеТовары.СерияНоменклатуры КАК СерияНоменклатуры,
	|		ПроверяемыеТовары.Партия КАК Партия
	|	ИЗ
	|		ПроверяемыеТовары КАК ПроверяемыеТовары
	|	)
	|СГРУППИРОВАТЬ ПО
	|	Ссылка,
	|	Номенклатура,
	|	СерияНоменклатуры,
	|	Партия
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументПоступления,
	|	Номенклатура,
	|	СерияНоменклатуры,
	|	Партия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.ДокументПоступления  КАК ДокументПоступления,
	|	ТаблицаТовары.Номенклатура         КАК Номенклатура,
	|	ТаблицаТовары.СерияНоменклатуры    КАК СерияНоменклатуры,
	|	ТаблицаТовары.Партия               КАК Партия,
	|	СУММА(ТаблицаТовары.Количество)    КАК Количество
	|
	|ПОМЕСТИТЬ ДанныеВозврата
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику.Товары КАК ТаблицаТовары
	|
	|ГДЕ
	|	ТаблицаТовары.Ссылка.Проведен
	|	И (ДокументПоступления, Номенклатура, СерияНоменклатуры, Партия) В
	|	(ВЫБРАТЬ 
	|		ПроверяемыеТовары.ДокументПоступления КАК Ссылка,
	|		ПроверяемыеТовары.Номенклатура КАК Номенклатура,
	|		ПроверяемыеТовары.СерияНоменклатуры КАК СерияНоменклатуры,
	|		ПроверяемыеТовары.Партия КАК Партия
	|	ИЗ
	|		ПроверяемыеТовары КАК ПроверяемыеТовары
	|	)
	|	И ТаблицаТовары.Ссылка <> &ЭтотВозвратСсылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументПоступления,
	|	Номенклатура,
	|	СерияНоменклатуры,
	|	Партия
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументПоступления,
	|	Номенклатура,
	|	СерияНоменклатуры,
	|	Партия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПроверяемыеТовары.ДокументПоступления  КАК ДокументПоступления,
	|	ПроверяемыеТовары.Номенклатура         КАК Номенклатура,
	|	ПроверяемыеТовары.СерияНоменклатуры    КАК СерияНоменклатуры,
	|	ПроверяемыеТовары.Партия               КАК Партия,
	|	ПроверяемыеТовары.ЕдиницаИзмерения     КАК ЕдиницаИзмерения,
	|	ЕСТЬNULL(ДанныеПоступления.Количество, 0) - ЕСТЬNULL(ДанныеВозврата.Количество, 0) - ЕСТЬNULL(ПроверяемыеТовары.Количество, 0)  КАК Количество,
	|	ВЫРАЗИТЬ(ПроверяемыеТовары.ДокументПоступления КАК Документ.ПоступлениеТоваров).Номер  КАК НомерПоступления
	|ИЗ
	|	ПроверяемыеТовары КАК ПроверяемыеТовары
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ДанныеПоступления КАК ДанныеПоступления
	|		ПО
	|			ДанныеПоступления.ДокументПоступления = ПроверяемыеТовары.ДокументПоступления
	|			И ДанныеПоступления.Номенклатура = ПроверяемыеТовары.Номенклатура
	|			И ДанныеПоступления.СерияНоменклатуры = ПроверяемыеТовары.СерияНоменклатуры
	|			И ДанныеПоступления.Партия = ПроверяемыеТовары.Партия
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеВозврата КАК ДанныеВозврата
	|		ПО
	|			ДанныеВозврата.ДокументПоступления = ПроверяемыеТовары.ДокументПоступления
	|			И ДанныеВозврата.Номенклатура = ПроверяемыеТовары.Номенклатура
	|			И ДанныеВозврата.СерияНоменклатуры = ПроверяемыеТовары.СерияНоменклатуры
	|			И ДанныеВозврата.Партия = ПроверяемыеТовары.Партия
	|		
	|ГДЕ
	|	ЕСТЬNULL(ДанныеПоступления.Количество, 0) - ЕСТЬNULL(ДанныеВозврата.Количество, 0) - ЕСТЬNULL(ПроверяемыеТовары.Количество, 0) < 0
	|";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ТаблицаПроверяемыеТовары", Товары.Выгрузить());
	Запрос.УстановитьПараметр("ЭтотВозвратСсылка", Ссылка);
	
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить().Выгрузить();
	Если Результат.Количество() > 0 Тогда
		СообщитьОбОшибкахКорректностиВозвращаемыхТоваров(Результат, Отказ);
	КонецЕсли; 
	
КонецПроцедуры

Процедура СообщитьОбОшибкахКорректностиВозвращаемыхТоваров(ТаблицаОшибок, Отказ)
	
	ШаблонСообщения = НСтр("ru='Возврат по номенклатуре %1 превышает количество закупленных товаров по документу поступления %2 на %3 %4'");
	
	Для каждого СтрокаОшибки Из ТаблицаОшибок Цикл
		Если СтрокаОшибки.Количество < 0 Тогда
			СообщениеОбОшибке = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ШаблонСообщения,
				ОбщегоНазначенияБольничнаяАптека.ПолучитьПредставлениеНоменклатуры(СтрокаОшибки.Номенклатура, СтрокаОшибки.СерияНоменклатуры, СтрокаОшибки.Партия),
				СтрокаОшибки.НомерПоступления,
				СтрокаОшибки.Количество / НоменклатураСервер.КоэффициентЕдиницыИзмерения(СтрокаОшибки.Номенклатура, СтрокаОшибки.ЕдиницаИзмерения),
				СтрокаОшибки.ЕдиницаИзмерения);
			ОбщегоНазначения.СообщитьПользователю(СообщениеОбОшибке, ЭтотОбъект,,, Отказ);
		КонецЕсли;
	КонецЦикла; 
	
КонецПроцедуры

#КонецОбласти // Прочее

#КонецОбласти // СлужебныеПроцедурыИФункции

#КонецЕсли