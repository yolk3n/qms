#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС
#Область ПрограммныйИнтерфейс

// Имена реквизитов, от значений которых зависят параметры учета номенклатуры
//
// Возвращаемое значение:
//   Строка - имена реквизитов, перечисленные через запятую
//
Функция ИменаРеквизитовДляЗаполненияПараметровУчетаНоменклатуры() Экспорт
	
	Возврат "Склад";
	
КонецФункции

// Возвращает параметры учета для номенклатуры, указанной в документе
//
// Параметры
//   Объект - Структура - структура значений реквизитов объекта, необходимых для заполнения параметров указания серий
// Возвращаемое значение
//   Структура - Состав полей задается в функции НоменклатураКлиентСервер.ПараметрыУчетаНоменклатуры
//
Функция ПараметрыУчетаНоменклатуры(Объект) Экспорт
	
	ПараметрыУчета = ЗапасыСервер.ПараметрыУчетаНоменклатуры();
	ПараметрыУчета.ПолноеИмяОбъекта = ПустаяСсылка().Метаданные().ПолноеИмя();
	
	ПараметрыУчетаНаСкладе = СкладыСервер.ПараметрыУчетаНоменклатуры(Объект.Склад);
	ПараметрыУчета.ИспользоватьСерии = ПараметрыУчетаНаСкладе.ИспользоватьСерииНоменклатуры;
	ПараметрыУчета.ИспользоватьПартии = ПараметрыУчетаНаСкладе.ИспользоватьПартии;
	ПараметрыУчета.Склад = Объект.Склад;
	
	Возврат ПараметрыУчета;
	
КонецФункции

// Возвращает текст запроса для расчета статусов указания параметров учета номенклатуры
//
// Параметры
//   ПараметрыУчетаНоменклатуры - Структура - состав полей задается в функции ЗапасыСервер.ПараметрыУчетаНоменклатуры
//
// Возвращаемое значение
//   Строка - текст запроса
//
Функция ТекстЗапросаРасчетаСтатусовУчетаНоменклатуры(ПараметрыУчетаНоменклатуры) Экспорт
	
	Возврат ЗапасыСервер.ТекстЗапросаРасчетаСтатусовУчетаНоменклатуры(ПараметрыУчетаНоменклатуры);
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	И ЗначениеРазрешено(Склад)
	|	И ЗначениеРазрешено(ПодразделениеОрганизации)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти // ПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

////////////////////////////////////////////////////////////////////////////////
// Проведение
#Область Проведение

// Инициализирует таблицы значений, содержащие данные для проведения документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицыДвиженийДляПроведения(ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	ОсновныеДанныеДокумента = ПодготовитьОсновныеДанныеДляПроведения(ДополнительныеСвойства);
	
	ИнициализироватьКлючиАналитикиВидаУчета(ОсновныеДанныеДокумента);
	ИнициализироватьКлючиАналитикиУчетаНоменклатуры(ОсновныеДанныеДокумента);
	
	ПроведениеБольничнаяАптека.ДобавитьТекстЗапросаДвижений(ДополнительныеСвойства, ТекстЗапросаВтТаблицаТовары());
	ПроведениеБольничнаяАптека.ДобавитьТекстЗапросаДвижений(ДополнительныеСвойства, ТекстЗапросаТоварыНаСкладах(), Метаданные.РегистрыНакопления.ТоварыНаСкладах);
	ПроведениеБольничнаяАптека.ДобавитьТекстЗапросаДвижений(ДополнительныеСвойства, ТекстЗапросаСвободныеОстатки(), Метаданные.РегистрыНакопления.СвободныеОстатки);
	ПроведениеБольничнаяАптека.ДобавитьТекстЗапросаДвижений(ДополнительныеСвойства, ТекстЗапросаВтАналитика());
	ПроведениеБольничнаяАптека.ДобавитьТекстЗапросаДвижений(ДополнительныеСвойства, ТекстЗапросаСебестоимостьТоваров(), Метаданные.РегистрыНакопления.СебестоимостьТоваров);
	ПроведениеБольничнаяАптека.ДобавитьТекстЗапросаДвижений(ДополнительныеСвойства, ТекстЗапросаЗакупки(), Метаданные.РегистрыНакопления.Закупки);
	ПроведениеБольничнаяАптека.ДобавитьТекстЗапросаДвижений(ДополнительныеСвойства, ТекстЗапросаЗаказыПоставщикам(), Метаданные.РегистрыНакопления.ЗаказыПоставщикам);
	
	Запрос = Новый Запрос(ПроведениеБольничнаяАптека.ПолучитьТекстЗапросаДвижений(ДополнительныеСвойства, Регистры));
	
	Для Каждого ДанныеДокумента Из ОсновныеДанныеДокумента Цикл
		Запрос.УстановитьПараметр(ДанныеДокумента.Ключ, ДанныеДокумента.Значение);
	КонецЦикла;
	
	ПроведениеБольничнаяАптека.ЗаполнитьТаблицыДвижений(ДополнительныеСвойства, Запрос.ВыполнитьПакет(), Регистры);
	
КонецПроцедуры

Функция ПодготовитьОсновныеДанныеДляПроведения(ДополнительныеСвойства)
	
	ЗапрашиваемыеДанные = Новый Структура;
	ЗапрашиваемыеДанные.Вставить("Ссылка");
	ЗапрашиваемыеДанные.Вставить("Период", "Дата");
	ЗапрашиваемыеДанные.Вставить("Организация");
	ЗапрашиваемыеДанные.Вставить("Склад");
	ЗапрашиваемыеДанные.Вставить("ПодразделениеОрганизации");
	ЗапрашиваемыеДанные.Вставить("Контрагент");
	ЗапрашиваемыеДанные.Вставить("ДоговорКонтрагента");
	ЗапрашиваемыеДанные.Вставить("Валюта");
	ЗапрашиваемыеДанные.Вставить("ПринятьНДСКВычету");
	
	ОсновныеДанныеДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
		ПроведениеБольничнаяАптека.ПолучитьСсылкуНаДокументДляПроведения(ДополнительныеСвойства),
		ЗапрашиваемыеДанные);
	
	ОсновныеДанныеДокумента.Вставить("ВестиУчетПоИсточникамФинансирования", ПолучитьФункциональнуюОпцию("ИспользоватьИсточникиФинансирования"));
	ОсновныеДанныеДокумента.Вставить("ИспользоватьМестаХранения", ПолучитьФункциональнуюОпцию("ИспользоватьМестаХранения", Новый Структура("Склад", ОсновныеДанныеДокумента.Склад)));
	ОсновныеДанныеДокумента.Вставить("ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВозвратТоваровПоставщику);
	ОсновныеДанныеДокумента.Вставить("Граница", Новый Граница(ОсновныеДанныеДокумента.Ссылка.МоментВремени(), ВидГраницы.Исключая));
	
	СтруктураКурсаДокумента = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ОсновныеДанныеДокумента.Валюта, ОсновныеДанныеДокумента.Период);
	КоэффициентПересчетаВВалютуРегл = СтруктураКурсаДокумента.Курс / СтруктураКурсаДокумента.Кратность;
	ОсновныеДанныеДокумента.Вставить("КоэффициентПересчетаВВалютуРегл", КоэффициентПересчетаВВалютуРегл);
	
	ЗапасыСервер.ПриПодготовкеОсновныхДанныхДляПроведения(ДополнительныеСвойства, ОсновныеДанныеДокумента);
	
	Возврат ОсновныеДанныеДокумента;
	
КонецФункции

Функция ТекстЗапросаВтТаблицаТовары()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки                               КАК НомерСтроки,
	|	&Организация                                            КАК Организация,
	|	ТаблицаТовары.ДокументПоступления                       КАК ДокументПоступления,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ТаблицаТовары.ДокументПоступления.ЗаказПоставщику КАК Документ.ЗаказПоставщику), ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка))
	|	                                                        КАК ЗаказПоставщику,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.ДокументПоступления.ЗаказПоставщику ССЫЛКА Документ.СпецификацияКДоговору
	|			ТОГДА ТаблицаТовары.ДокументПоступления.ЗаказПоставщику
	|		ИНАЧЕ ЕСТЬNULL(ВЫРАЗИТЬ(ТаблицаТовары.ДокументПоступления.ЗаказПоставщику КАК Документ.ЗаказПоставщику).СпецификацияКДоговору, ЗНАЧЕНИЕ(Документ.СпецификацияКДоговору.ПустаяСсылка))
	|	КОНЕЦ                                                    КАК Спецификация,
	|	ТаблицаТовары.КодСтроки                                  КАК КодСтроки,
	|	ВЫБОР
	|		КОГДА &ИспользоватьМестаХранения
	|			ТОГДА ТаблицаТовары.МестоХранения
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.МестаХранения.ПустаяСсылка)
	|	КОНЕЦ                                                   КАК МестоХранения,
	|	ТаблицаТовары.Номенклатура                              КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерий В (&СтатусУчетПоСериям, &СтатусУчетСебестоимостиПоСериям)
	|			ТОГДА ТаблицаТовары.СерияНоменклатуры
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ                                                   КАК СерияНоменклатуры,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияПартий В (&СтатусУчетПоПартиям, &СтатусУчетСебестоимостиПоПартиям)
	|			ТОГДА ТаблицаТовары.Партия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ                                                   КАК Партия,
	|	ВЫБОР 
	|		КОГДА &ВестиУчетПоИсточникамФинансирования
	|			ТОГДА ТаблицаТовары.ИсточникФинансирования
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИсточникиФинансирования.ПустаяСсылка)
	|	КОНЕЦ                                                   КАК ИсточникФинансирования,
	|	ТаблицаТовары.Количество                                КАК Количество,
	|	ТаблицаТовары.СтавкаНДС                                 КАК СтавкаНДС,
	|	ВЫРАЗИТЬ(ТаблицаТовары.СуммаСНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2)) КАК СуммаСНДС,
	|	ВЫРАЗИТЬ(ТаблицаТовары.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2)) КАК СуммаНДС,
	|	ВЫРАЗИТЬ((ТаблицаТовары.СуммаСНДС + ВЫБОР КОГДА &ПринятьНДСКВычету ТОГДА - ТаблицаТовары.СуммаНДС ИНАЧЕ 0 КОНЕЦ) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2)) КАК СуммаРегл,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерий В (&СтатусУчетСебестоимостиПоСериям)
	|			ТОГДА ТаблицаТовары.СерияНоменклатуры
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ                                                   КАК СерияНоменклатурыДляСебестоимости,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияПартий В (&СтатусУчетСебестоимостиПоПартиям)
	|			ТОГДА ТаблицаТовары.Партия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ                                                   КАК ПартияДляСебестоимости
	|ПОМЕСТИТЬ ВтТаблицаТовары
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТоварыНаСкладах()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки               КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)  КАК ВидДвижения,
	|	&Период                                 КАК Период,
	|	ТаблицаТовары.Организация               КАК Организация,
	|	&Склад                                  КАК Склад,
	|	ТаблицаТовары.МестоХранения             КАК МестоХранения,
	|	ТаблицаТовары.Номенклатура              КАК Номенклатура,
	|	ТаблицаТовары.СерияНоменклатуры         КАК СерияНоменклатуры,
	|	ТаблицаТовары.Партия                    КАК Партия,
	|	ТаблицаТовары.ИсточникФинансирования    КАК ИсточникФинансирования,
	|	ТаблицаТовары.Количество                КАК Количество
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаСвободныеОстатки()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки               КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)  КАК ВидДвижения,
	|	&Период                                 КАК Период,
	|	ТаблицаТовары.Организация               КАК Организация,
	|	&Склад                                  КАК Склад,
	|	ТаблицаТовары.МестоХранения             КАК МестоХранения,
	|	ТаблицаТовары.Номенклатура              КАК Номенклатура,
	|	ТаблицаТовары.СерияНоменклатуры         КАК СерияНоменклатуры,
	|	ТаблицаТовары.Партия                    КАК Партия,
	|	ТаблицаТовары.ИсточникФинансирования    КАК ИсточникФинансирования,
	|	ТаблицаТовары.Количество                КАК ВНаличии
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтАналитика()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТовары.Номенклатура                       КАК Номенклатура,
	|	ТаблицаТовары.СерияНоменклатурыДляСебестоимости  КАК СерияНоменклатуры,
	|	ТаблицаТовары.ПартияДляСебестоимости             КАК Партия,
	|	ТаблицаТовары.ИсточникФинансирования             КАК ИсточникФинансирования,
	|	АналитикаУчетаНоменклатуры.КлючАналитики         КАК АналитикаУчетаНоменклатуры,
	|	АналитикаВидаУчета.КлючАналитики                 КАК АналитикаВидаУчета,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета
	|ПОМЕСТИТЬ ВтАналитика
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
	|		ПО
	|			ТаблицаТовары.Номенклатура                        = АналитикаУчетаНоменклатуры.Номенклатура
	|			И ТаблицаТовары.СерияНоменклатурыДляСебестоимости = АналитикаУчетаНоменклатуры.СерияНоменклатуры
	|			И ТаблицаТовары.ПартияДляСебестоимости            = АналитикаУчетаНоменклатуры.Партия
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РегистрСведений.АналитикаВидаУчета КАК АналитикаВидаУчета
	|		ПО
	|			АналитикаВидаУчета.Организация                = ТаблицаТовары.Организация
	|			И АналитикаВидаУчета.Склад                    = &Склад
	|			И АналитикаВидаУчета.ИсточникФинансирования   = ТаблицаТовары.ИсточникФинансирования
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	АналитикаВидаУчета,
	|	РазделУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаСебестоимостьТоваров()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки                                 КАК НомерСтроки,
	|	&Период                                                   КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)                    КАК ВидДвижения,
	|	Аналитика.АналитикаУчетаНоменклатуры                      КАК АналитикаУчетаНоменклатуры,
	|	Аналитика.АналитикаВидаУчета                              КАК АналитикаВидаУчета,
	|	Аналитика.РазделУчета                                     КАК РазделУчета,
	|	ТаблицаТовары.Количество                                  КАК Количество,
	|	ТаблицаТовары.СуммаСНДС                                   КАК Стоимость,
	|	ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС          КАК СтоимостьБезНДС,
	|	ТаблицаТовары.СуммаРегл                                   КАК СтоимостьРегл,
	|	&ХозяйственнаяОперация                                    КАК ХозяйственнаяОперация,
	|	&Ссылка                                                   КАК ДокументДвижения,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.РазницыСтоимостиВозвратаИФактическойСтоимостиТоваров) КАК СтатьяДоходов,
	|	&Контрагент                                               КАК АналитикаДоходов,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.РазницыСтоимостиВозвратаИФактическойСтоимостиТоваров) КАК СтатьяРасходов,
	|	&Контрагент                                               КАК АналитикаРасходов,
	|	&ПодразделениеОрганизации                                 КАК ПодразделениеОрганизации,
	|	ТаблицаТовары.ИсточникФинансирования                      КАК ИсточникФинансирования,
	|	&Контрагент                                               КАК Контрагент,
	|	&ДоговорКонтрагента                                       КАК ДоговорКонтрагента,
	|	ТаблицаТовары.СтавкаНДС                                   КАК СтавкаНДС,
	|	ТаблицаТовары.ДокументПоступления                         КАК ДокументИсточник,
	|	ТаблицаТовары.ЗаказПоставщику                             КАК Заказ,
	|	ТаблицаТовары.Спецификация                                КАК Спецификация
	|	
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			ВтАналитика КАК Аналитика
	|		ПО
	|			ТаблицаТовары.Номенклатура                        = Аналитика.Номенклатура
	|			И ТаблицаТовары.СерияНоменклатурыДляСебестоимости = Аналитика.СерияНоменклатуры
	|			И ТаблицаТовары.ПартияДляСебестоимости            = Аналитика.Партия
	|			И ТаблицаТовары.ИсточникФинансирования            = Аналитика.ИсточникФинансирования
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаЗакупки()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки                                 КАК НомерСтроки,
	|	&Период                                                   КАК Период,
	|	&ХозяйственнаяОперация                                    КАК ХозяйственнаяОперация,
	|	ТаблицаТовары.Организация                                 КАК Организация,
	|	&ПодразделениеОрганизации                                 КАК ПодразделениеОрганизации,
	|	&Контрагент                                               КАК Контрагент,
	|	&ДоговорКонтрагента                                       КАК ДоговорКонтрагента,
	|	ТаблицаТовары.ДокументПоступления                         КАК ДокументЗакупки,
	|	ТаблицаТовары.Спецификация                                КАК Спецификация,
	|	АналитикаУчетаНоменклатуры.КлючАналитики                  КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.ИсточникФинансирования                      КАК ИсточникФинансирования,
	|	&Ссылка                                                   КАК ДокументДвижения,
	|	ТаблицаТовары.СтавкаНДС                                   КАК СтавкаНДС,
	|	&Склад                                                    КАК Склад,
	|	ТаблицаТовары.Количество                                  КАК Количество,
	|	ТаблицаТовары.СуммаСНДС                                   КАК Сумма,
	|	ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС          КАК СуммаБезНДС,
	|	ТаблицаТовары.СуммаНДС                                    КАК СуммаНДС,
	|	ТаблицаТовары.СуммаСНДС                                   КАК Стоимость,
	|	ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС          КАК СтоимостьБезНДС,
	|	ТаблицаТовары.СуммаРегл                                   КАК СтоимостьРегл
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
	|		ПО
	|			ТаблицаТовары.Номенклатура                        = АналитикаУчетаНоменклатуры.Номенклатура
	|			И ТаблицаТовары.СерияНоменклатурыДляСебестоимости = АналитикаУчетаНоменклатуры.СерияНоменклатуры
	|			И ТаблицаТовары.ПартияДляСебестоимости            = АналитикаУчетаНоменклатуры.Партия
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаЗаказыПоставщикам()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки               КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)  КАК ВидДвижения,
	|	&Период                                 КАК Период,
	|	ТаблицаТовары.Спецификация              КАК Спецификация,
	|	ТоварыЗаказа.КодСтрокиСпецификации      КАК КодСтрокиСпецификации,
	|	ТоварыЗаказа.Номенклатура               КАК Номенклатура,
	|	-ТаблицаТовары.Количество               КАК ПоСпецификации
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ЗаказПоставщику.Товары КАК ТоварыЗаказа
	|		ПО
	|			ТаблицаТовары.ЗаказПоставщику <> ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|			И ТоварыЗаказа.Ссылка = ТаблицаТовары.ЗаказПоставщику
	|			И ТоварыЗаказа.КодСтроки = ТаблицаТовары.КодСтроки
	|			И ТоварыЗаказа.КодСтрокиСпецификации <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки               КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)  КАК ВидДвижения,
	|	&Период                                 КАК Период,
	|	ТаблицаТовары.Спецификация              КАК Спецификация,
	|	ТоварыСпецификации.КодСтроки            КАК КодСтрокиСпецификации,
	|	ТоварыСпецификации.Номенклатура         КАК Номенклатура,
	|	-ТаблицаТовары.Количество               КАК ПоСпецификации
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СпецификацияКДоговору.Товары КАК ТоварыСпецификации
	|		ПО
	|			ТаблицаТовары.ЗаказПоставщику = ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|			И ТоварыСпецификации.Ссылка = ТаблицаТовары.Спецификация
	|			И ТоварыСпецификации.КодСтроки = ТаблицаТовары.КодСтроки
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ИнициализироватьКлючиАналитикиУчетаНоменклатуры(Реквизиты)

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерий В (&СтатусУчетСебестоимостиПоСериям)
	|			ТОГДА ТаблицаТовары.СерияНоменклатуры
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК СерияНоменклатуры,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияПартий В (&СтатусУчетСебестоимостиПоПартиям)
	|			ТОГДА ТаблицаТовары.Партия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК Партия
	|ПОМЕСТИТЬ втТаблицаАналитики
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	СерияНоменклатуры,
	|	Партия";
	
	Запрос.УстановитьПараметр("Ссылка", Реквизиты.Ссылка);
	Запрос.УстановитьПараметр("СтатусУчетСебестоимостиПоСериям", Реквизиты.СтатусУчетСебестоимостиПоСериям);
	Запрос.УстановитьПараметр("СтатусУчетСебестоимостиПоПартиям", Реквизиты.СтатусУчетСебестоимостиПоПартиям);
	Запрос.Выполнить();
	
	Справочники.КлючиАналитикиУчетаНоменклатуры.ИнициализироватьКлючиАналитики(Запрос.МенеджерВременныхТаблиц);

КонецПроцедуры

Процедура ИнициализироватьКлючиАналитикиВидаУчета(Реквизиты)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Организация КАК Организация,
	|	&Склад КАК Склад,
	|	ВЫБОР
	|		КОГДА &ВестиУчетПоИсточникамФинансирования
	|			ТОГДА ТаблицаТовары.ИсточникФинансирования
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИсточникиФинансирования.ПустаяСсылка)
	|	КОНЕЦ КАК ИсточникФинансирования
	|ПОМЕСТИТЬ втТаблицаАналитики
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Склад,
	|	ИсточникФинансирования";
	
	Запрос.УстановитьПараметр("Ссылка", Реквизиты.Ссылка);
	Запрос.УстановитьПараметр("Организация", Реквизиты.Организация);
	Запрос.УстановитьПараметр("Склад", Реквизиты.Склад);
	Запрос.УстановитьПараметр("ВестиУчетПоИсточникамФинансирования", Реквизиты.ВестиУчетПоИсточникамФинансирования);
	Запрос.Выполнить();
	
	Справочники.КлючиАналитикиВидаУчета.ИнициализироватьКлючиАналитики(Запрос.МенеджерВременныхТаблиц);
	
КонецПроцедуры

#КонецОбласти // Проведение

////////////////////////////////////////////////////////////////////////////////
// Печать
#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	УправлениеПечатьюБольничнаяАптека.ДобавитьКомандыПечати(ПустаяСсылка().Метаданные().ПолноеИмя(), КомандыПечати);
	
КонецПроцедуры

// Возвращает список доступных печатных форм документа
//
Функция ДоступныеПечатныеФормы() Экспорт
	
	ПечатныеФормы = УправлениеПечатьюБольничнаяАптека.СоздатьКоллекциюДоступныхПечатныхФорм();
	
	Обработки.ПечатьНакладнаяНаОтпускМатериалов0504205.ДобавитьПечатнуюФорму(ПечатныеФормы);
	Обработки.ПечатьМ15.ДобавитьПечатнуюФорму(ПечатныеФормы);
	Обработки.ПечатьТОРГ12.ДобавитьПечатнуюФорму(ПечатныеФормы);
	
	МетаданныеДокумента = ПустаяСсылка().Метаданные();
	МенеджерПечати      = МетаданныеДокумента.ПолноеИмя();
	МетаданныеМакетов   = МетаданныеДокумента.Макеты;
	
	ПечатнаяФорма = УправлениеПечатьюБольничнаяАптека.ДобавитьПечатнуюФорму(ПечатныеФормы, "ВедомостьНаСписание", МенеджерПечати);
	ПечатнаяФорма.Представление = МетаданныеМакетов.ПФ_MXL_Накладная.Представление();
	ПечатнаяФорма.ПутьКМакету = ФормированиеПечатныхФормБольничнаяАптека.ПутьКМакету(МетаданныеМакетов.ПФ_MXL_Накладная);
	УправлениеПечатьюБольничнаяАптека.ДобавитьКомандуПечати(ПечатнаяФорма);
	
	Возврат ПечатныеФормы;
	
КонецФункции

Функция ПечатьВедомостьНаСписание(МассивОбъектов, ОбъектыПечати) Экспорт
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.АвтоМасштаб        = Истина;
	
	ПолноеИмяМакета = ФормированиеПечатныхФормБольничнаяАптека.ПутьКМакету(ПустаяСсылка().Метаданные().Макеты.ПФ_MXL_Накладная);
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_" + ПолноеИмяМакета;
	Макет = УправлениеПечатью.МакетПечатнойФормы(ПолноеИмяМакета);
	
	МассивВыводимыхОбластей = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ПолучитьТекстЗапросаДанныеДляПечати();
	Запрос.УстановитьПараметр("ТекущийДокумент", МассивОбъектов);
	
	Шапка = Запрос.Выполнить().Выбрать();
	
	ПервыйДокумент = Истина;
	Пока Шапка.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(Шапка.Ссылка, ТабличныйДокумент, Макет);
		
		// Получение параметров для заполнения
		ПараметрыИзШапки = ПолучитьПараметрыШапкиВедомостьНаСписание(Шапка);
		
		// Вывод области Заголовок
		ФормированиеПечатныхФормБольничнаяАптека.ВывестиОбластьПоИмени(ТабличныйДокумент, Макет, "Заголовок", ПараметрыИзШапки);
		
		// Вывод области РеквизитыШапки
		ФормированиеПечатныхФормБольничнаяАптека.ВывестиОбластьПоИмени(ТабличныйДокумент, Макет, "РеквизитыШапки", ПараметрыИзШапки);
		
		// Вывод области ШапкаТаблицы
		ФормированиеПечатныхФормБольничнаяАптека.ВывестиОбластьПоИмени(ТабличныйДокумент, Макет, "ШапкаТаблицы", ПараметрыИзШапки);
		
		// Инициализация итогов по документу
		ПараметрыИтого = Новый Структура;
		ПараметрыИтого.Вставить("Сумма"   , 0);
		ПараметрыИтого.Вставить("СуммаНДС", 0);
		
		ВыборкаСтрокТовары = Шапка.Товары.Выбрать();
		КлючиПараметров = ФормированиеПечатныхФормБольничнаяАптека.ПолучитьИменаКолонокТаблицы(ВыборкаСтрокТовары);
		
		ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
		
		КоличествоСтрок = ВыборкаСтрокТовары.Количество();
		НомерСтроки = 0;
		Пока ВыборкаСтрокТовары.Следующий() Цикл
			
			НомерСтроки = НомерСтроки + 1;
			
			ДанныеСтроки = Новый Структура(КлючиПараметров);
			ЗаполнитьЗначенияСвойств(ДанныеСтроки, ВыборкаСтрокТовары);
			
			ТоварНаименование = ОбщегоНазначенияБольничнаяАптека.ПолучитьПредставлениеНоменклатурыДляПечати(
				ВыборкаСтрокТовары.ТоварНаименование,
				ВыборкаСтрокТовары.Серия,
				ВыборкаСтрокТовары.Партия);
			
			ДанныеСтроки.Вставить("ТоварНаименование", ТоварНаименование);
			
			ОбластьСтрока.Параметры.Заполнить(ДанныеСтроки);
			
			МассивВыводимыхОбластей.Очистить();
			МассивВыводимыхОбластей.Добавить(ОбластьСтрока);
			Если НомерСтроки = КоличествоСтрок Тогда
				МассивВыводимыхОбластей.Добавить(Макет.ПолучитьОбласть("Итого"));
				МассивВыводимыхОбластей.Добавить(Макет.ПолучитьОбласть("СуммаПрописью"));
				МассивВыводимыхОбластей.Добавить(Макет.ПолучитьОбласть("Подписи"));
			КонецЕсли;
			
			Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабличныйДокумент, МассивВыводимыхОбластей) Тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ТабличныйДокумент.Вывести(Макет.ПолучитьОбласть("Строка"));
			КонецЕсли;
			
			// Вывод области Строка
			ТабличныйДокумент.Вывести(ОбластьСтрока);
			
			ФормированиеПечатныхФормБольничнаяАптека.РассчитатьИтоги(ДанныеСтроки, ПараметрыИтого);
			
		КонецЦикла;
		
		// Вывод области Итого
		ПараметрыИтого.Вставить("НДС", ?(Шапка.ЦенаВключаетНДС, НСтр("ru = 'В том числе НДС'"), НСтр("ru = 'Сумма НДС'")) + ":");
		ФормированиеПечатныхФормБольничнаяАптека.ВывестиОбластьПоИмени(ТабличныйДокумент, Макет, "Итого", ПараметрыИтого);
		
		// Вывод области СуммаПрописью
		СуммаКПрописи = ПараметрыИтого.Сумма + ?(Шапка.ЦенаВключаетНДС, 0, ПараметрыИтого.СуммаНДС);
		ФорматированнаяСумма = ОбщегоНазначенияБольничнаяАптека.ФорматСумм(СуммаКПрописи, Шапка.Валюта);
		ИтоговаяСтрока = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Всего выпущено наименований %1, на сумму %2'"), КоличествоСтрок, ФорматированнаяСумма);
		
		ПараметрыСуммаПрописью = Новый Структура;
		ПараметрыСуммаПрописью.Вставить("ИтоговаяСтрока", ИтоговаяСтрока);
		ПараметрыСуммаПрописью.Вставить("СуммаПрописью" , РаботаСКурсамиВалют.СформироватьСуммуПрописью(СуммаКПрописи, Шапка.Валюта));
		
		ФормированиеПечатныхФормБольничнаяАптека.ВывестиОбластьПоИмени(ТабличныйДокумент, Макет, "СуммаПрописью", ПараметрыСуммаПрописью);
		
		// Вывод области Подписи
		ФормированиеПечатныхФормБольничнаяАптека.ВывестиОбластьПоИмени(ТабличныйДокумент, Макет, "Подписи", ПараметрыИзШапки);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПолучитьПараметрыШапкиВедомостьНаСписание(Шапка)
	
	КлючиПараметров = ФормированиеПечатныхФормБольничнаяАптека.ПолучитьИменаКолонокТаблицы(Шапка);
	
	Параметры = Новый Структура(КлючиПараметров);
	ЗаполнитьЗначенияСвойств(Параметры, Шапка);
	
	// Данные заголовка
	НомерДокумента = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Шапка.НомерДокумента);
	ШаблонТекстЗаголовка = НСтр("ru = 'Возврат поставщику № %1 от %2'");
	ТекстЗаголовка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		ШаблонТекстЗаголовка, НомерДокумента, Формат(Шапка.ДатаДокумента, "ДЛФ=DD"));
	
	СведенияОПолучателе = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Шапка.Получатель, Шапка.ДатаДокумента);
	ПолучательПредставление = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПолучателе, "ПолноеНаименование,");
	
	СведенияОбОтправителе = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Шапка.Отправитель, Шапка.ДатаДокумента);
	ОтправительПредставление = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОтправителе, "ПолноеНаименование,");
	
	Параметры.Вставить("ТекстЗаголовка"          , ТекстЗаголовка);
	Параметры.Вставить("ПолучательПредставление" , ПолучательПредставление);
	Параметры.Вставить("ОтправительПредставление", ОтправительПредставление);
	
	// Данные подписей документа
	МОЛ = РегистрыСведений.МатериальноОтветственныеЛица.ПолучитьДанныеОтветственного(Шапка.Склад, Шапка.ДатаДокумента);
	
	Параметры.Вставить("Отпустил", МОЛ.ФИО);
	
	Возврат Параметры;
	
КонецФункции

Функция ПолучитьТекстЗапросаДанныеДляПечати()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Документ.Ссылка                                            КАК Ссылка,
	|	Документ.Номер                                             КАК НомерДокумента,
	|	Документ.Дата                                              КАК ДатаДокумента,
	|	Документ.Организация                                       КАК Организация,
	|	Документ.ПодразделениеОрганизации                          КАК Подразделение,
	|	Документ.ПодразделениеОрганизации.Представление            КАК ПредставлениеПодразделения,
	|	Документ.Склад                                             КАК Склад,
	|	Документ.Склад                                             КАК СкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)                   КАК СкладПолучатель,
	|	Документ.Контрагент                                        КАК Контрагент,
	|	Документ.ДоговорКонтрагента                                КАК Договор,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)              КАК Перевозчик,
	|	ВЫБОР
	|		КОГДА Документ.Грузополучатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА Документ.Контрагент
	|		ИНАЧЕ Документ.Грузополучатель
	|	КОНЕЦ                                                      КАК Грузополучатель,
	|	ВЫБОР
	|		КОГДА Документ.Грузополучатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА Документ.Контрагент
	|		ИНАЧЕ Документ.Грузополучатель
	|	КОНЕЦ                                                      КАК Получатель,
	|	ВЫБОР
	|		КОГДА Документ.Грузоотправитель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА Документ.Организация
	|		ИНАЧЕ Документ.Грузоотправитель
	|	КОНЕЦ                                                      КАК Грузоотправитель,
	|	ВЫБОР
	|		КОГДА Документ.Грузоотправитель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА Документ.Организация
	|		ИНАЧЕ Документ.Грузоотправитель
	|	КОНЕЦ                                                      КАК Отправитель,
	|	Документ.Валюта                                            КАК Валюта,
	|	Документ.ЦенаВключаетНДС                                   КАК ЦенаВключаетНДС,
	|	Неопределено                                               КАК БанковскийСчет,
	|	""""                                                       КАК АдресДоставки,
	|	""""                                                       КАК ДоверенностьНомер,
	|	""""                                                       КАК ДоверенностьДата,
	|	""""                                                       КАК ДоверенностьВыдана,
	|	""""                                                       КАК ДоверенностьЛицо,
	|	ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)           КАК Исполнитель,
	|	""""                                                       КАК ИсполнительДолжность,
	|	Документ.Товары.(
	|		НомерСтроки                      КАК НомерСтроки,
	|		Номенклатура                     КАК Номенклатура,
	|		Номенклатура.НаименованиеПолное  КАК ТоварНаименование,
	|		Номенклатура.Код                 КАК ТоварКод,
	|		СерияНоменклатуры                КАК Серия,
	|		Партия                           КАК Партия,
	|		ЕдиницаИзмерения                 КАК ЕдиницаИзмерения,
	|		ЕдиницаИзмерения.КодОКЕИ         КАК КодПоОКЕИ,
	|		КоличествоВЕдиницахИзмерения     КАК Количество,
	|		КоличествоВЕдиницахИзмерения     КАК КОтгрузке,
	|		КоличествоВЕдиницахИзмерения     КАК Отпущено,
	|		0                                КАК КоличествоМест,
	|		Цена                             КАК Цена,
	|		Сумма                            КАК Сумма,
	|		СтавкаНДС                        КАК СтавкаНДС,
	|		СуммаНДС                         КАК СуммаНДС,
	|		ЛОЖЬ                             КАК ЭтоВозвратнаяТара
	|	)
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику КАК Документ
	|
	|ГДЕ
	|	Документ.Ссылка В (&ТекущийДокумент)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ПолучитьКурсыВалютДокументов(МассивДокументов)
	
	ВалютаРегламентированногоУчета = ЗначениеНастроекБольничнаяАптекаПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(Документ.Дата, ДЕНЬ) КАК Дата,
	|	Документ.Валюта КАК Валюта
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику КАК Документ
	|ГДЕ
	|	Документ.Ссылка В(&МассивДокументов)
	|	И Документ.Валюта <> &ВалютаРегламентированногоУчета
	|
	|СГРУППИРОВАТЬ ПО
	|	Документ.Валюта,
	|	НАЧАЛОПЕРИОДА(Документ.Дата, ДЕНЬ)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Валюта,
	|	Дата
	|");
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", ВалютаРегламентированногоУчета);
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	
	ТаблицаКурсовВалют = Новый ТаблицаЗначений;
	ТаблицаКурсовВалют.Колонки.Добавить("Валюта",    Новый ОписаниеТипов("СправочникСсылка.Валюты"));
	ТаблицаКурсовВалют.Колонки.Добавить("Дата",      Новый ОписаниеТипов("Дата"));
	ТаблицаКурсовВалют.Колонки.Добавить("Курс",      Новый ОписаниеТипов("Число"));
	ТаблицаКурсовВалют.Колонки.Добавить("Кратность", Новый ОписаниеТипов("Число"));
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = ТаблицаКурсовВалют.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		
		КурсыВалюты = РаботаСКурсамиВалют.ПолучитьКурсВалюты(Выборка.Валюта, Выборка.Дата);
		НоваяСтрока.Курс = КурсыВалюты.Курс;
		НоваяСтрока.Кратность = КурсыВалюты.Кратность;
		
	КонецЦикла;
	
	Возврат ТаблицаКурсовВалют;
	
КонецФункции

Функция ПолучитьДанныеДляПечати(МассивОбъектов, ПараметрыПечати = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаДанныеДляПечати();
	Запрос.УстановитьПараметр("ТекущийДокумент", МассивОбъектов);
	Запрос.УстановитьПараметр("ИспользоватьИсточникиФинансирования", ПолучитьФункциональнуюОпцию("ИспользоватьИсточникиФинансирования"));
	ЗапасыСервер.УстановитьСтатусыПараметровУчетаВПараметрахЗапроса(Запрос);
	
	РезультатыЗапросов = Запрос.ВыполнитьПакет();
	
	ДанныеДляПечати = Новый Структура;
	ДанныеДляПечати.Вставить("РезультатПоШапке"          , РезультатыЗапросов[РезультатыЗапросов.ВГраница() - 1]);
	ДанныеДляПечати.Вставить("РезультатПоТабличнойЧасти" , РезультатыЗапросов[РезультатыЗапросов.ВГраница()]);
	ДанныеДляПечати.Вставить("ТаблицаКурсовВалют"        , ПолучитьКурсыВалютДокументов(МассивОбъектов));
	
	Возврат ДанныеДляПечати;
	
КонецФункции

Функция ТекстЗапросаДанныеДляПечати()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Документ.Ссылка                                            КАК Ссылка,
	|	Документ.Номер                                             КАК НомерДокумента,
	|	Документ.Дата                                              КАК ДатаДокумента,
	|	Документ.Организация                                       КАК Организация,
	|	Документ.ПодразделениеОрганизации                          КАК Подразделение,
	|	Документ.ПодразделениеОрганизации.Представление            КАК ПодразделениеПредставление,
	|	Документ.ПодразделениеОрганизации                          КАК ПодразделениеОтправителя,
	|	Документ.Склад                                             КАК Склад,
	|	Документ.Склад.Представление                               КАК СкладПредставление,
	|	Документ.Склад                                             КАК СкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)                   КАК СкладПолучатель,
	|	Документ.Контрагент                                        КАК Контрагент,
	|	Документ.ДоговорКонтрагента                                КАК Договор,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)              КАК Перевозчик,
	|	ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)           КАК Исполнитель,
	|	""""                                                       КАК ИсполнительДолжность,
	|	ВЫБОР
	|		КОГДА Документ.Грузополучатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА Документ.Контрагент
	|		ИНАЧЕ Документ.Грузополучатель
	|	КОНЕЦ                                                      КАК Грузополучатель,
	|	Документ.Контрагент                                        КАК Получатель,
	|	ВЫБОР
	|		КОГДА Документ.Грузоотправитель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА Документ.Организация
	|		ИНАЧЕ Документ.Грузоотправитель
	|	КОНЕЦ                                                      КАК Грузоотправитель,
	|	Документ.Организация                                       КАК Отправитель,
	|	Документ.Валюта                                            КАК Валюта,
	|	Документ.ЦенаВключаетНДС                                   КАК ЦенаВключаетНДС,
	|	Неопределено                                               КАК БанковскийСчет,
	|	""""                                                       КАК АдресДоставки,
	|	""""                                                       КАК ДоверенностьНомер,
	|	""""                                                       КАК ДоверенностьДата,
	|	""""                                                       КАК ДоверенностьВыдана,
	|	""""                                                       КАК ДоверенностьЛицо
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику КАК Документ
	|ГДЕ
	|	Документ.Ссылка В (&ТекущийДокумент)
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Ссылка                            КАК Документ,
	|	Товары.НомерСтроки                       КАК НомерСтроки,
	|	Товары.Номенклатура                      КАК Номенклатура,
	|	Товары.Номенклатура.НаименованиеПолное   КАК ТоварНаименование,
	|	Товары.Номенклатура.Код                  КАК ТоварКод,
	|	Товары.СерияНоменклатуры                 КАК СерияНоменклатуры,
	|	ЕСТЬNULL(Товары.СерияНоменклатуры.ГоденДо, ДАТАВРЕМЯ(1,1,1,0,0,0))
	|	                                         КАК СрокГодности,
	|	Товары.Партия                            КАК Партия,
	|	Товары.МестоХранения                     КАК МестоХранения,
	|	Товары.ЕдиницаИзмерения                  КАК ЕдиницаИзмерения,
	|	Товары.ЕдиницаИзмерения.КодОКЕИ          КАК КодПоОКЕИ,
	|	Товары.КоличествоВЕдиницахИзмерения      КАК Количество,
	|	Товары.КоличествоВЕдиницахИзмерения      КАК КОтгрузке,
	|	Товары.КоличествоВЕдиницахИзмерения      КАК Отпущено,
	|	Товары.Количество                        КАК КоличествоБазовых,
	|	ВЫБОР
	|		КОГДА &ИспользоватьИсточникиФинансирования
	|			ТОГДА Товары.ИсточникФинансирования
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИсточникиФинансирования.ПустаяСсылка)
	|	КОНЕЦ                                    КАК ИсточникФинансирования,
	|	Товары.Коэффициент                       КАК Коэффициент,
	|	Товары.Цена                              КАК Цена,
	|	Товары.Сумма                             КАК Сумма,
	|	Товары.СтавкаНДС                         КАК СтавкаНДС,
	|	Товары.СуммаНДС                          КАК СуммаНДС,
	|	Товары.СуммаСНДС                         КАК СуммаСНДС,
	|	ЛОЖЬ                                     КАК ЭтоВозвратнаяТара
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка В (&ТекущийДокумент)
	|УПОРЯДОЧИТЬ ПО
	|	Документ,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Документ
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти // Печать

////////////////////////////////////////////////////////////////////////////////
// Команды формы
#Область КомандыФормы

// Заполняет список команд ввода на основании.
// 
// Параметры:
//   КомандыСоздатьНаОсновании - ТаблицаЗначений - Таблица команд для вывода в подменю. Для изменения.
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСоздатьНаОсновании, НастройкиФормы) Экспорт
	
	ВводНаОснованииБольничнаяАптека.ДобавитьКомандыСозданияНаОсновании(ПустаяСсылка().Метаданные().ПолноеИмя(), КомандыСоздатьНаОсновании, НастройкиФормы);
	
КонецПроцедуры

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица команд для вывода в подменю. Для изменения.
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, НастройкиФормы) Экспорт
	
	МенюОтчетыБольничнаяАптека.ДобавитьОбщиеКоманды(ПустаяСсылка().Метаданные().ПолноеИмя(), КомандыОтчетов, НастройкиФормы);
	
КонецПроцедуры

#КонецОбласти // КомандыФормы

#КонецОбласти // СлужебныеПроцедурыИФункции

////////////////////////////////////////////////////////////////////////////////
// СТАНДАРТНЫЕ ПОДСИСТЕМЫ
#Область СтандартныеПодсистемы

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
//
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти // СтандартныеПодсистемы

////////////////////////////////////////////////////////////////////////////////
// ОБНОВЛЕНИЕ ИНФОРМАЦИОННОЙ БАЗЫ
#Область ОбновлениеИнформационнойБазы

Процедура ЗаполнитьДокументыПоступленияОтложенно(Параметры) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1000
	|	ДанныеДокумента.Дата КАК ДатаДокумента,
	|	ДанныеДокумента.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.ДокументПоступления <> ЗНАЧЕНИЕ(Документ.ПоступлениеТоваров.ПустаяСсылка)
	|	И НЕ ИСТИНА В
	|			(ВЫБРАТЬ ПЕРВЫЕ 1
	|				ИСТИНА
	|			ИЗ
	|				Документ.ВозвратТоваровПоставщику.Товары КАК ТаблицаТовары
	|			ГДЕ
	|				ТаблицаТовары.Ссылка = ДанныеДокумента.Ссылка
	|				И ТаблицаТовары.ДокументПоступления <> ЗНАЧЕНИЕ(Документ.ПоступлениеТоваров.ПустаяСсылка))
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДокумента УБЫВ
	|");
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			// Устанавливаем управляемую блокировку, чтобы провести ответственное чтение объекта.
			Блокировка = Новый БлокировкаДанных;
			
			ЭлементБлокировки = Блокировка.Добавить(Выборка.Ссылка.Метаданные().ПолноеИмя());
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
			
			Блокировка.Заблокировать();
			
			ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
			
			// Если объект ранее был удален или обработан другими сеансами, пропускаем его.
			Если ДокументОбъект = Неопределено Тогда
				
				ОтменитьТранзакцию();
				Продолжить;
				
			КонецЕсли;
			
			Для Каждого ТекущаяСтрока Из ДокументОбъект.Товары Цикл
				
				ТекущаяСтрока.ДокументПоступления = ДокументОбъект.ДокументПоступления;
				
			КонецЦикла;
			
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокументОбъект);
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстСообщения = НСтр("ru = 'Не удалось обработать документ: %Ссылка% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", Выборка.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(
				ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Предупреждение,
				Метаданные.Документы.ИзготовлениеПоЛекарственнойПрописи,
				Выборка.Ссылка,
				ТекстСообщения);
			
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = (Выборка.Количество() = 0);
	
КонецПроцедуры

#КонецОбласти // ОбновлениеИнформационнойБазы

#КонецЕсли