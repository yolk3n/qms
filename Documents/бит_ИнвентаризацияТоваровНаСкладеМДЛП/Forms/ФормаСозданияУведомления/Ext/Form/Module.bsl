
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Ссылка") тогда
		ЗаполнитьДанные(Параметры.Ссылка);
	КонецЕсли;
	
КонецПроцедуры 

&НаСервере                            
Процедура ЗаполнитьДанные(Ссылка)
	
	МестоДеятельности = Ссылка.МестоДеятельности;
	Организация = ОрганизацияМДЛП(Ссылка.Организация);
	КлючГруппыНастроекКонтроляКМ = "ПараметрыКонтроляСредствамиАПИМДЛП"; 
	Основание = Ссылка;
	Запрос = Новый Запрос;
	
	// Установка значений параметров
	Запрос.УстановитьПараметр("Ссылка", Документы.бит_ИнвентаризацияТоваровНаСкладеМДЛП.ПолучитьСсылку(Новый УникальныйИдентификатор("00636E3A-FE18-11ED-8600-005056BCEC0A")));// Инвентаризация товаров на складе МДЛП 00000000002 от 29.05.2023 14:55:44 (Документы.бит_ИнвентаризацияТоваровНаСкладеМДЛП)
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	бит_ИнвентаризацияТоваровНаСкладеМДЛПТовары.Номенклатура КАК Номенклатура,
	|	бит_ИнвентаризацияТоваровНаСкладеМДЛПТовары.СерияНоменклатуры КАК СерияНоменклатуры,
	|	бит_ИнвентаризацияТоваровНаСкладеМДЛПТовары.ЕдиницаИзмерения КАК Упаковка,
	|	бит_ИнвентаризацияТоваровНаСкладеМДЛПТовары.ИдентификаторСтроки КАК ИдентификаторСтроки
	|ПОМЕСТИТЬ ВТ_Товары
	|ИЗ
	|	Документ.бит_ИнвентаризацияТоваровНаСкладеМДЛП.Товары КАК бит_ИнвентаризацияТоваровНаСкладеМДЛПТовары
	|ГДЕ
	|	бит_ИнвентаризацияТоваровНаСкладеМДЛПТовары.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	бит_ИнвентаризацияТоваровНаСкладеМДЛПНомераУпаковок.НомерКИЗ КАК НомерКИЗ,
	|	бит_ИнвентаризацияТоваровНаСкладеМДЛПНомераУпаковок.Количество КАК Количество,
	|	УпаковкиМДЛП.Статус КАК Статус,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыУпаковокМДЛП.ПустаяСсылка) КАК СтатусМДЛП,
	|	бит_ИнвентаризацияТоваровНаСкладеМДЛПНомераУпаковок.ИдентификаторСтроки КАК ИдентификаторСтроки
	|ПОМЕСТИТЬ ВТ_Упаковки
	|ИЗ
	|	Документ.бит_ИнвентаризацияТоваровНаСкладеМДЛП.НомераУпаковок КАК бит_ИнвентаризацияТоваровНаСкладеМДЛПНомераУпаковок
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УпаковкиМДЛП КАК УпаковкиМДЛП
	|		ПО бит_ИнвентаризацияТоваровНаСкладеМДЛПНомераУпаковок.НомерКИЗ = УпаковкиМДЛП.НомерУпаковки
	|ГДЕ
	|	бит_ИнвентаризацияТоваровНаСкладеМДЛПНомераУпаковок.Ссылка = &Ссылка
	|	И бит_ИнвентаризацияТоваровНаСкладеМДЛПНомераУпаковок.СтатусСканирования = ЗНАЧЕНИЕ(Перечисление.бит_СтатусыСканирования.Неотсканирован)
	|
	|СГРУППИРОВАТЬ ПО
	|	бит_ИнвентаризацияТоваровНаСкладеМДЛПНомераУпаковок.НомерКИЗ,
	|	УпаковкиМДЛП.Статус,
	|	бит_ИнвентаризацияТоваровНаСкладеМДЛПНомераУпаковок.Количество,
	|	бит_ИнвентаризацияТоваровНаСкладеМДЛПНомераУпаковок.ИдентификаторСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Товары.Номенклатура КАК Номенклатура,
	|	ВТ_Товары.СерияНоменклатуры КАК СерияНоменклатуры,
	|	ВТ_Товары.Упаковка КАК Упаковка,
	|	ВТ_Товары.ИдентификаторСтроки КАК ИдентификаторСтроки
	|ИЗ
	|	ВТ_Товары КАК ВТ_Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Упаковки КАК ВТ_Упаковки
	|		ПО ВТ_Товары.ИдентификаторСтроки = ВТ_Упаковки.ИдентификаторСтроки
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Товары.ИдентификаторСтроки,
	|	ВТ_Товары.Упаковка,
	|	ВТ_Товары.СерияНоменклатуры,
	|	ВТ_Товары.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Упаковки.НомерКИЗ КАК НомерКИЗ,
	|	ВТ_Упаковки.Количество КАК Количество,
	|	ВТ_Упаковки.Статус КАК Статус,
	|	ВТ_Упаковки.СтатусМДЛП КАК СтатусМДЛП,
	|	ВТ_Упаковки.ИдентификаторСтроки КАК ИдентификаторСтроки
	|ИЗ
	|	ВТ_Упаковки КАК ВТ_Упаковки";

	Пакет = Запрос.ВыполнитьПакет();

	Товары.Загрузить(Пакет[2].Выгрузить());
	НомераУпаковок.Загрузить(Пакет[3].Выгрузить());
	
	
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриАктивизацииСтроки(Элемент)

	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда
		УстановитьОтборНомеровУпаковок(ТекущиеДанные.ИдентификаторСтроки);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборНомеровУпаковок(ИдентификаторСтроки)
	
	Если ИдентификаторТекущейСтроки <> ИдентификаторСтроки Тогда
		ИдентификаторТекущейСтроки = ИдентификаторСтроки;
	КонецЕсли;
	
	ИнтеграцияМДЛПКлиент.УстановитьОтборСтрок(Элементы.НомераУпаковок.ОтборСтрок,Новый Структура("ИдентификаторСтроки", ИдентификаторТекущейСтроки));
    	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьСтатусыМДЛП(Команда)
	
	ДанныеДляПроверки = Новый Массив;
	Для Каждого СтрокаТаблицы Из НомераУпаковок Цикл
		
			
		ЭлементДанных = КонтрольКодовМаркировкиМДЛПКлиент.ЭлементДанныхДляПроверки();
		ЭлементДанных.КодМаркировки         = СтрокаТаблицы.НомерКИЗ;
		ЭлементДанных.ПолныйКодМаркировки   = Base64Строка(ПолучитьДвоичныеДанныеИзСтроки(СтрокаТаблицы.НомерКИЗ));//СтрокаТаблицы.ПолныйКодМаркировки;
		ЭлементДанных.ИдентификаторЭлемента = СтрокаТаблицы.ИдентификаторСтроки;
		
		ДанныеДляПроверки.Добавить(ЭлементДанных);
		
	КонецЦикла;
	
	Если ДанныеДляПроверки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Доступность = Ложь;
	
	ОповещениеОЗавершенииПроверкиКМ = Новый ОписаниеОповещения("ЗакончитьПроверкуКМ", ЭтотОбъект);
	
	ПараметрыПроверкиКМ = КонтрольКодовМаркировкиМДЛПКлиент.ПараметрыПроверкиКМ(ЭтотОбъект);
	ПараметрыПроверкиКМ.ОповещениеОЗавершении = ОповещениеОЗавершенииПроверкиКМ;
	
	ПараметрыПроверкиКМ.Организация       = Организация;
	ПараметрыПроверкиКМ.МестоДеятельности = МестоДеятельности;
	ПараметрыПроверкиКМ.ДанныеДляПроверки = ДанныеДляПроверки;
	
	ПараметрыПроверкиКМ.ИнтерактивныйРежим        = Ложь;
	ПараметрыПроверкиКМ.СообщатьОбОшибкахПроверки = Истина;
	
	КонтрольКодовМаркировкиМДЛПКлиент.НачатьПроверкуКМ(ПараметрыПроверкиКМ);

КонецПроцедуры   

&НаКлиенте
Процедура ЗакончитьПроверкуКМ(РезультатПроверки, ДополнительныеПараметры) Экспорт
	
	Доступность = Истина;
	
	ФлагМодифицированность = Ложь;
	Если ЗначениеЗаполнено(РезультатПроверки) Тогда
		
		Для Каждого СтрокаТаблицы Из НомераУпаковок Цикл 		
				
			Данные = РезультатПроверки.ДанныеПроверки[СтрокаТаблицы.ИдентификаторСтроки];
			ЗаполнитьЗначенияСвойств(СтрокаТаблицы, Данные);			
			ФлагМодифицированность = Истина;
			
			Если Отладка Тогда
				СтрокаТаблицы.СтатусМДЛП = ПредопределенноеЗначение("Перечисление.СтатусыУпаковокМДЛП.ВОбороте");	
			КонецЕсли; 
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если ФлагМодифицированность Тогда
		Модифицированность = Истина;
		Элементы.ФормаПроверитьСтатусыМДЛП.КнопкаПоУмолчанию = Ложь;
		Элементы.ФормаСоздатьУведомление.Видимость = Истина;
		Элементы.ФормаСоздатьУведомление.КнопкаПоУмолчанию = Истина;
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Функция ИдентификаторМестаДеятельности()

	Возврат МестоДеятельности.Идентификатор;
	
КонецФункции  

Функция ОрганизацияМДЛП(Организация)
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ОрганизацияКонтрагент", Организация);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СубъектыОбращенияМДЛП.Организация КАК Организация
	|ИЗ
	|	РегистрСведений.СубъектыОбращенияМДЛП КАК СубъектыОбращенияМДЛП
	|ГДЕ
	|	СубъектыОбращенияМДЛП.ОрганизацияКонтрагент = &ОрганизацияКонтрагент
	|";
	Результат = Запрос.Выполнить();
	
	// Выборка
	Выборка = Результат.Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Организация;
	КонецЕСли;;                     
	
	Возврат Неопределено;
	
КонецФункции

Функция ПолучитьОтборыУпаковокМДЛП()
	
	Отбор = Новый Структура;
	ПараметрыОтборов = ПараметрыОтборовУпаковокМДЛП();
	Для Каждого КлючИЗначение Из ПараметрыОтборов Цикл
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ЭтотОбъект, КлючИЗначение.Ключ) И ЗначениеЗаполнено(ЭтотОбъект[КлючИЗначение.Ключ]) Тогда
			Если КлючИЗначение.Ключ = "status_Отбор" Тогда
				Отбор.Вставить(КлючИЗначение.Значение.ИмяМДЛП, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ЭтотОбъект[КлючИЗначение.Ключ]));
			Иначе
				Отбор.Вставить(КлючИЗначение.Значение.ИмяМДЛП, ЭтотОбъект[КлючИЗначение.Ключ]);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Отбор;
	
КонецФункции

Функция ПараметрыОтборовУпаковокМДЛП()
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("НомерУпаковки_Отбор", Новый Структура("Тип, Заголовок, ИмяМДЛП", Метаданные.ОпределяемыеТипы.НомерУпаковкиМДЛП.Тип, НСтр("ru = 'Номер упаковки'"), "sgtin"));
	ПараметрыОтбора.Вставить("gtin_Отбор"         , Новый Структура("Тип, Заголовок, ИмяМДЛП", Метаданные.ОпределяемыеТипы.GTIN.Тип, НСтр("ru = 'GTIN'"), "gtin"));
	ПараметрыОтбора.Вставить("status_Отбор"       , Новый Структура("Тип, Заголовок, ИмяМДЛП", Новый ОписаниеТипов("Строка"), НСтр("ru = 'Статус МДЛП'"), "status"));
	
	Возврат ПараметрыОтбора;
	
КонецФункции

