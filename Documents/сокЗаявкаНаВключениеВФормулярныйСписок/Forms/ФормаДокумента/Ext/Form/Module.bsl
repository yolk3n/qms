#Область БуферОбменаТоварами
&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьКомандБуфераОбмена(Форма, ЕстьДанныеВБуфереОбмена)
	
	//Элементы = Форма.Элементы;
	//Элементы.ТоварыБуферОбменаВставить.Доступность = ЕстьДанныеВБуфереОбмена;
	//Элементы.ТоварыКонтекстноеМенюБуферОбменаВставить.Доступность = ЕстьДанныеВБуфереОбмена;
	//Элементы.ТоварыБуферОбмена.Доступность = ЕстьДанныеВБуфереОбмена;
	
КонецПроцедуры

#КонецОбласти // БуферОбменаТоварами

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.Свойства
	//ДополнительныеПараметры = Новый Структура;
	//ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", Элементы.ГруппаДополнительныеРеквизиты.Имя);
	//УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.УчетОригиналовПервичныхДокументов
	//УчетОригиналовПервичныхДокументов.ПриСозданииНаСервере_ФормаДокумента(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.УчетОригиналовПервичныхДокументов
	
	// ПодключаемоеОборудование
	//ПодключаемоеОборудованиеСервер.НастроитьФормуДляИспользованияПодключаемогоОборудования(ЭтотОбъект);
	// Конец ПодключаемоеОборудование
	
	// ИнтеграцияС1СДокументооборотом
	//Если ОбщегоНазначения.ПодсистемаСуществует("ИнтеграцияС1СДокументооборотом") Тогда
	//	МодульИнтеграцияС1СДокументооборот = ОбщегоНазначения.ОбщийМодуль("ИнтеграцияС1СДокументооборот");
	//	МодульИнтеграцияС1СДокументооборот.ПриСозданииНаСервере(ЭтотОбъект);
	//КонецЕсли;
	// Конец ИнтеграцияС1СДокументооборотом
	
	// БуферОбменаТоварами
	//УстановитьДоступностьКомандБуфераОбмена(ЭтотОбъект, Не ОбработкаТабличнойЧастиСервер.БуферОбменаПустой());
	// Конец БуферОбменаТоварами
	
	// ЭлектроннаяПодпись
	//ЭлектроннаяПодписьБольничнаяАптека.ПриСозданииНаСервере(ЭтотОбъект, Элементы.ГруппаЭлектронныеПодписи);
	// Конец ЭлектроннаяПодпись
	
	// ИнтеграцияСМобильнымПриложением
	//ИнтеграцияСМобильнымПриложением.СоздатьКомандуЗагрузкиДанныхИзМобильногоПриложенияНаФорме(ЭтотОбъект, "Товары", Элементы.ТоварыГруппаЗаполнить.Имя);
	// Конец ИнтеграцияСМобильнымПриложением
	
	// ЭлектронноеВзаимодействие.ОбменСКонтрагентами
	//ОбменСКонтрагентамиБольничнаяАптека.ПриСозданииНаСервере_ФормаДокумента(ЭтотОбъект);
	// Конец ЭлектронноеВзаимодействие.ОбменСКонтрагентами
	
	НастройкаФормБольничнаяАптека.ФормаДокумента_ПриСозданииНаСервере(ЭтотОбъект);
	
	Если Объект.Ссылка.Пустая() Тогда
		Объект.Автор=ПараметрыСеанса.ТекущийПользователь;
		Объект.Ответственный=ПараметрыСеанса.ТекущийПользователь;
		Спр=Справочники.Организации.Выбрать();
		Если Спр.Следующий() Тогда
			Объект.Организация=Спр.Ссылка;
		КонецЕсли;	
	Конецесли;	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьВидимостьДоступность();
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьДоступность()
	Если сок_Сервер.ЭтоСовсемПолныеПрава() Тогда   
		Элементы.ФормаОтправитьККлинФармакологу.Видимость=Истина;
		Элементы.ФормаОтклонить.Доступность=Истина;
		Элементы.ФормаУтвердить.Доступность=Истина;
	ИначеЕсли сок_Сервер.ЭтоКлинФармаколог()  Тогда
		Элементы.ФормаОтклонить.Доступность= Объект.Проведен И Объект.Состояние=Перечисления.сок_СостоянияФормулярныхСписков.Согласован;
		Элементы.ФормаУтвердить.Доступность=Объект.Проведен И Объект.Состояние=Перечисления.сок_СостоянияФормулярныхСписков.Согласован;
		Элементы.ФормаОтправитьККлинФармакологу.Видимость=Ложь;
		Если Объект.Состояние=Перечисления.сок_СостоянияФормулярныхСписков.Утвержден ИЛИ Объект.Состояние=Перечисления.сок_СостоянияФормулярныхСписков.Отклонен Тогда
			Этаформа.ТолькоПросмотр=Истина;
		КонецЕсли;	
	Иначе
		Этаформа.ТолькоПросмотр=НЕ Объект.Состояние=Перечисления.сок_СостоянияФормулярныхСписков.Подготовлен;
		Элементы.ФормаОтклонить.Видимость=Ложь;
		Элементы.ФормаУтвердить.Видимость=Ложь;
		Если Объект.Состояние=Перечисления.сок_СостоянияФормулярныхСписков.Подготовлен И сок_Сервер.ЭтоПользовательКоторомуРазрешеноОтправлятьЗаявкуНаВключениеВформулярныйСписок() Тогда
			Элементы.ФормаОтправитьККлинФармакологу.Доступность=Объект.Состояние=Перечисления.сок_СостоянияФормулярныхСписков.Подготовлен;
		Иначе	
			Элементы.ФормаОтправитьККлинФармакологу.Доступность=Ложь;
		КонецЕсли;	
	КонецЕсли;	
	
КонецПроцедуры	
	

&НаСервере
Процедура ОтправитьККлинФармакологуНаСервере()
	Объект.Состояние=Перечисления.сок_СостоянияФормулярныхСписков.Согласован;
	Объект.ДатаСогласования=ТекущаяДата();
	Объект.Согласован=Истина;
	Записать();  
	сок_Сервер.ОтправитьОповещениеПоПочте(Объект.Организация.КлинФармаколог,"Вам на согласование отправлен формулярный список "+Объект.Номер+" от "+Формат(Объект.Дата,"ДЛФ=Д"));
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьККлинФармакологу(Команда)
	Если Объект.Проведен Тогда
		ОтправитьККлинФармакологуНаСервере();
		УстановитьВидимостьДоступность();
	Иначе
		Показатьпредупреждение(,"Проведите документ до отправки клинфармакологу");
	КонецЕсли;	
КонецПроцедуры


&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	УстановитьВидимостьДоступность();
КонецПроцедуры


&НаСервере
Процедура ОтклонитьНаСервере()
	Объект.Состояние=Перечисления.сок_СостоянияФормулярныхСписков.Отклонен;
	Записать();  
	Группа=Справочники.ГруппыПользователей.НайтиПоНаименованию("Разрешено формировать запрос на вклчение в формулярный список");
	Масс=Новый Массив;
	Для Каждого стр из Группа.Состав Цикл
		Масс.Добавить(Стр.Пользователь);
	КонецЦикла;	
	Масс.Добавить(Объект.Организация.ПолучателиОповещенияОбИзмененииФормулярногоСписка);
	сок_Сервер.ОтправитьОповещениеПоПочте(Масс,"Утвержден формулярный список "+Объект.Номер+" от "+Формат(Объект.Дата,"ДЛФ=Д"));
КонецПроцедуры


&НаКлиенте
Процедура Отклонить(Команда)
	ОтклонитьНаСервере();
КонецПроцедуры


&НаСервере
Процедура УтвердитьНаСервере()
	Объект.Состояние=Перечисления.сок_СостоянияФормулярныхСписков.Утвержден;
	Записать();                                                                                               
	Группа=Справочники.ГруппыПользователей.НайтиПоНаименованию("Разрешено формировать запрос на вклчение в формулярный список");
	Масс=Новый Массив;
	Для Каждого стр из Группа.Состав Цикл
		Масс.Добавить(Стр.Пользователь);
	КонецЦикла;	
	сок_Сервер.ОтправитьОповещениеПоПочте(Масс,"Утвержден формулярный список "+Объект.Номер+" от "+Формат(Объект.Дата,"ДЛФ=Д"));
КонецПроцедуры


&НаКлиенте
Процедура Утвердить(Команда)
	УтвердитьНаСервере();
КонецПроцедуры

