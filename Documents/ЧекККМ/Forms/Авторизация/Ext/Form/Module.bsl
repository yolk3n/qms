
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// ПодключаемоеОборудование
	ПодключаемоеОборудованиеСервер.НастроитьФормуДляИспользованияПодключаемогоОборудования(ЭтотОбъект);
	// Конец ПодключаемоеОборудование
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// ПодключаемоеОборудование
	МенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПриОткрытииФормы(Неопределено, ЭтотОбъект, "СканерШтрихкода,СчитывательМагнитныхКарт");
	// Конец ПодключаемоеОборудование
	Активизировать();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// ПодключаемоеОборудование
	Если ПодключаемоеОборудованиеКлиент.ОбрабатыватьОповещение(ЭтотОбъект, Источник) Тогда
		Если ПодключаемоеОборудованиеКлиент.ОбработатьПолучениеДанныхОтСканераШтрихкода(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
			ОбработатьШтрихкоды(ОбщегоНазначенияБольничнаяАптекаКлиентСервер.ПолучитьДанныеШтрихкода(Параметр, 1));
		ИначеЕсли ИмяСобытия ="TracksData" Тогда
			ОбработатьДанныеСчитывателяМагнитныхКарт(Параметр);
		КонецЕсли;
	КонецЕсли;
	// Конец ПодключаемоеОборудование
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Не ЗакрытьФорму И Не ЗавершениеРаботы Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	// ПодключаемоеОборудование
	МенеджерОборудованияКлиент.НачатьОтключениеОборудованиеПриЗакрытииФормы(Неопределено, ЭтотОбъект);
	// Конец ПодключаемоеОборудование
	
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ПолучитьПользователяПоШтрихкоду(Штрихкод)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИдентификационныеДанныеПользователей.Пользователь КАК Пользователь
	|ИЗ
	|	РегистрСведений.ИдентификационныеДанныеПользователей КАК ИдентификационныеДанныеПользователей
	|ГДЕ
	|	ИдентификационныеДанныеПользователей.Штрихкод = &Штрихкод
	|");
	
	Запрос.УстановитьПараметр("Штрихкод", Штрихкод);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	Возврат Выборка.Пользователь;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьПользователяПоМагнитномуКоду(МагнитныйКод)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИдентификационныеДанныеПользователей.Пользователь КАК Пользователь
	|ИЗ
	|	РегистрСведений.ИдентификационныеДанныеПользователей КАК ИдентификационныеДанныеПользователей
	|ГДЕ
	|	ИдентификационныеДанныеПользователей.МагнитныйКод = &МагнитныйКод
	|");
	
	Запрос.УстановитьПараметр("МагнитныйКод", МагнитныйКод);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	Возврат Выборка.Пользователь;
	
КонецФункции

#Область ШтрихкодыИТорговоеОборудование

&НаКлиенте
Процедура ОбработатьШтрихкоды(ДанныеШтрихкода)
	
	Пользователь = ПолучитьПользователяПоШтрихкоду(ДанныеШтрихкода.Штрихкод);
	Если ЗначениеЗаполнено(Пользователь) Тогда
		ПодключитьОбработчикОжидания("ВыбратьПользователя", 0.1, Истина);
	Иначе
		ПоказатьПредупреждение(Неопределено, НСтр("ru = 'Пользователь не обнаружен.'"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьДанныеСчитывателяМагнитныхКарт(Данные)
	
	СписокКодов = Новый СписокЗначений;
	
	РасшифрованныеДанные = Данные[1][3];
	Если РасшифрованныеДанные <> Неопределено Тогда
		Для Каждого Структура Из РасшифрованныеДанные Цикл
			
			ШаблонМагнитнойКарты = Структура.Шаблон;
			КодКарты             = Неопределено;
			Для Каждого ДанныеПоля Из Структура.ДанныеДорожек Цикл
				Если ДанныеПоля.Поле = ПредопределенноеЗначение("Перечисление.ПоляШаблоновМагнитныхКарт.Код") Тогда
					СписокКодов.Добавить(ДанныеПоля.ЗначениеПоля);
				КонецЕсли;
			КонецЦикла;
			
		КонецЦикла;
	КонецЕсли;
	
	Если СписокКодов.Количество() = 1 Тогда
		МагнитныйКод = СписокКодов.Получить(0).Значение;
	ИначеЕсли СписокКодов.Количество() = 0 Тогда
		ПоказатьПредупреждение(Неопределено, НСтр("ru = 'Код карты не соответствует ни одному из шаблонов магнитных карт.'"));
		Возврат;
	Иначе
		ВыбранноеЗначение = Неопределено;
		
		СписокКодов.ПоказатьВыборЭлемента(Новый ОписаниеОповещения("ОбработатьДанныеСчитывателяМагнитныхКартЗавершение", ЭтотОбъект), НСтр("ru = 'Выбор кода магнитной карты'"));
		Возврат;
	КонецЕсли;
	
	ОбработатьДанныеСчитывателяМагнитныхКартФрагмент(МагнитныйКод);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьДанныеСчитывателяМагнитныхКартЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	
	ВыбранноеЗначение = ВыбранныйЭлемент;
	Если ВыбранноеЗначение <> Неопределено Тогда
		МагнитныйКод = ВыбранноеЗначение.Значение;
	КонецЕсли;
	
	ОбработатьДанныеСчитывателяМагнитныхКартФрагмент(МагнитныйКод);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьДанныеСчитывателяМагнитныхКартФрагмент(Знач МагнитныйКод)
	
	Пользователь = ПолучитьПользователяПоМагнитномуКоду(МагнитныйКод);
	Если ЗначениеЗаполнено(Пользователь) Тогда
		ПодключитьОбработчикОжидания("ВыбратьПользователя", 0.1, Истина);
	Иначе
		ПоказатьПредупреждение(Неопределено, НСтр("ru = 'Пользователь не обнаружен.'"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПользователя()
	
	ЗакрытьФорму = Истина;
	Оповестить("АвторизованПользователь", Новый Структура(
		"ФормаВладелец, Пользователь, Режим", ЭтотОбъект.ВладелецФормы.УникальныйИдентификатор, Пользователь, "СменитьПрава"));
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьЧекККМ(Команда)
	
	ЗакрытьФорму = Истина;
	Оповестить("АвторизованПользователь",
		Новый Структура(
			"ФормаВладелец, Пользователь, Режим",,
			Пользователь,
			"ЗакрытьЧекККМ"));
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
