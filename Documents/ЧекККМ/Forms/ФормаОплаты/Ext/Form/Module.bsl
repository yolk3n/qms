
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	РозничныеПродажи.ПодписатьГорячиеКлавишиНаКнопках(ЭтотОбъект);
	
	СписокОтбор = МенеджерОборудованияКлиентСервер.СписокОборудованияОтбор();
	СписокОтбор.ТипыПО = "ДисплейПокупателя";
	СписокОтбор.СетевоеОборудование = Истина;
	Дисплеи.ЗагрузитьЗначения(МенеджерОборудованияВызовСервера.СписокОборудования(СписокОтбор));
	
	КоличествоСимволовПослеЗапятой = 2;
	
	ИнформацияОбОплате = Параметры.ИнформацияОбОплате;
	ОплатаНаличными = Параметры.ОплатаНаличными Или Не ИнформацияОбОплате.ДоступныеВидыОплаты.ПлатежныеКарты;
	Документ = ИнформацияОбОплате.Документ;
	
	Если ТипЗнч(Документ) = Тип("ДокументСсылка.ЧекККМВозврат") Тогда
		
		Если ОплатаНаличными Тогда
			Заголовок = НСтр("ru = 'Возврат оплаты наличными'");
		Иначе
			Заголовок = НСтр("ru = 'Возврат оплаты'");
		КонецЕсли;
		
		Элементы.КОплате.Заголовок      = НСтр("ru = 'К возврату'");
		Элементы.СуммаСдачи.Заголовок   = НСтр("ru = 'Получить сдачу'");
		Элементы.СуммаДоплаты.Заголовок = НСтр("ru = 'Осталось вернуть'");
		
		Элементы.ОплатаПлатежнаяКарта.Заголовок = НСтр("ru = 'Отменить оплату платежными картами'");
		Элементы.КомандаСторно.Видимость = Ложь;
		
		ОплаченоПлатежнымиКартами = ИнформацияОбОплате.ПлатежныеКартыОтменено;
		
	Иначе
		ОплаченоПлатежнымиКартами = ИнформацияОбОплате.ПлатежныеКарты;
		Если ОплатаНаличными Тогда
			Заголовок = НСтр("ru = 'Оплата наличными'");
		КонецЕсли;
	КонецЕсли;
	
	КОплате           = ИнформацияОбОплате.СуммаКОплате;
	ПолученоНаличными = Формат(ИнформацияОбОплате.Наличные, "ЧЦ=15; ЧДЦ=2; ЧН=0; ЧГ=3,0");
	ПервыйВвод = Не ЗначениеЗаполнено(ИнформацияОбОплате.Наличные);
	
	Если ОплатаНаличными Тогда
		Элементы.ПолеОплаченоПлатежнымиКартами.Видимость = Ложь;
		Элементы.ГруппаВидыОплаты.Видимость = Ложь;
		КлючСохраненияПоложенияОкна = "ОплатаНаличными";
	КонецЕсли;
	
	ЦветФонаВыделенияПоля = ЦветаСтиля.ФонУправляющегоПоля;
	
	ДоступнаПередачаДанных = Параметры.ДоступнаПередачаДанных;
	Если ДоступнаПередачаДанных Тогда
		
		КлючСохраненияПоложенияОкна = КлючСохраненияПоложенияОкна + "ДоступнаПередачаДанных";
		
		ВариантОтправки = Параметры.ВариантОтправкиЭлектронногоЧека;
		Если Не ЗначениеЗаполнено(ВариантОтправки) Тогда
			ВариантОтправки = Перечисления.ВариантыОтправкиЭлектронногоЧекаПокупателю.НеОтправлять;
		КонецЕсли;
		
		Если ВариантОтправки = Перечисления.ВариантыОтправкиЭлектронногоЧекаПокупателю.ОтправитьEmail Тогда
			АдресЭП = Параметры.КонтактныеДанныеЭлектронногоЧека;
		ИначеЕсли ВариантОтправки = Перечисления.ВариантыОтправкиЭлектронногоЧекаПокупателю.ОтправитьSMS Тогда
			Телефон10Знаков = Параметры.КонтактныеДанныеЭлектронногоЧека;
		КонецЕсли;
		НомерТелефона = РозничныеПродажиКлиентСервер.ОтформатироватьНомерТелефона(Телефон10Знаков);
		УстановитьВариантОтправкиЭлектронногоЧека(ЭтотОбъект, ВариантОтправки);
	КонецЕсли;
	
	Элементы.ГруппаОтправкаЭлектронногоЧека.Видимость = ДоступнаПередачаДанных;
	
	УстановитьАктивныйЭлемент(ЭтотОбъект, Элементы.ПолеПолученоНаличными);
	
	РассчитатьИтоги(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПодключитьОбработчикОжидания("ВывестиИнформациюНаДисплейПокупателя", 1, Истина);
	
	Если ДоступнаПередачаДанных Тогда
		ПодключитьОбработчикОжидания("УстановитьАктивностьЭлементов", 1, Ложь);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ПринудительноЗакрытьФорму Или ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ОплатаНаличными
	   И ОплаченоПлатежнымиКартами <> 0 Тогда
		
		Отказ = Истина;
		
		Если ТипЗнч(Документ) = Тип("ДокументСсылка.ЧекККМВозврат") Тогда
			
			Кнопки = РежимДиалогаВопрос.ОК;
			
			Текст = НСтр("ru = 'Операция отмены оплаты уже выполнена на эквайринговом терминале. Необходимо пробить чек.'");
			
		Иначе
			
			Кнопки = Новый СписокЗначений;
			Кнопки.Добавить("ОтменитьОплату", НСтр("ru = 'Отменить оплату'"));
			Кнопки.Добавить("Отмена", НСтр("ru = 'Отмена'"));
			
			Текст = НСтр("ru = 'Перед закрытием формы оплаты требуется отменить произведенную оплату.'");
			
		КонецЕсли;
		
		ПоказатьВопрос(Новый ОписаниеОповещения("ПередЗакрытиемВопросЗавершение", ЭтотОбъект), Текст, Кнопки);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ
#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаЦифра(Команда)
	
	ДобавитьЦифру(Сред(Команда.Имя, СтрДлина("Команда") + 1, 1));
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаТочка(Команда)
	
	Если АктивноеПоле = Элементы.ПолеПолученоНаличными.Имя Тогда
		Если ПервыйВвод Тогда
			ПервыйВвод = Ложь;
		КонецЕсли;
		
		КоличествоЗапятых = СтрЧислоВхождений(ПолученоНаличными, ",");
		Если КоличествоЗапятых = 0 Тогда
			ПолученоНаличными = ПолученоНаличными + ",";
		КонецЕсли;
		
		РассчитатьИтоги(ЭтотОбъект);
		ПодключитьОбработчикОжидания("ВывестиИнформациюНаДисплейПокупателя", 0.1, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаСтеретьПоследнийСимвол(Команда)
	
	Если АктивноеПоле = Элементы.ПолеПолученоНаличными.Имя Тогда
		
		Если ПервыйВвод Тогда
			Возврат;
		КонецЕсли;
		
		ПолученоНаличными = Лев(ПолученоНаличными, СтрДлина(ПолученоНаличными) - 1);
		Если ПустаяСтрока(ПолученоНаличными) Тогда
			ПолученоНаличными = "0";
			ПервыйВвод = Истина;
		ИначеЕсли СтрНайти(ПолученоНаличными, ",") = 0 Тогда
			ПолученоНаличными = Формат(ПривестиСтрокуКЧислу(ПолученоНаличными), "ЧН=0; ЧГ=3,0");
		КонецЕсли;
		
		РассчитатьИтоги(ЭтотОбъект);
		ПодключитьОбработчикОжидания("ВывестиИнформациюНаДисплейПокупателя", 0.1, Истина);
		
	ИначеЕсли АктивноеПоле = Элементы.Телефон.Имя Тогда
		
		Телефон10Знаков = Лев(Телефон10Знаков, СтрДлина(Телефон10Знаков) - 1);
		НомерТелефона = РозничныеПродажиКлиентСервер.ОтформатироватьНомерТелефона(Телефон10Знаков);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаСтереть(Команда)
	
	Если АктивноеПоле = Элементы.ПолеПолученоНаличными.Имя Тогда
		
		ПолученоНаличными = "0";
		ПервыйВвод = Истина;
		
		РассчитатьИтоги(ЭтотОбъект);
		ПодключитьОбработчикОжидания("ВывестиИнформациюНаДисплейПокупателя", 0.1, Истина);
		
	ИначеЕсли АктивноеПоле = Элементы.Телефон.Имя Тогда
		
		Телефон10Знаков = "";
		НомерТелефона = РозничныеПродажиКлиентСервер.ОтформатироватьНомерТелефона(Телефон10Знаков);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПробитьЧек(Команда)
	
	Если Не ВозможноПробитьЧек() Тогда
		Возврат;
	КонецЕсли;
	
	СуммаОплатыЧисло = ПривестиСтрокуКЧислу(ПолученоНаличными);
	
	ВариантОтправки = ?(
		ЗначениеЗаполнено(ВариантОтправкиЭлектронногоЧека),
		ВариантОтправкиЭлектронногоЧека,
		ПредопределенноеЗначение("Перечисление.ВариантыОтправкиЭлектронногоЧекаПокупателю.НеОтправлять"));
	
	ДанныеЭлектронногоЧека = Новый Структура;
	ДанныеЭлектронногоЧека.Вставить("ВариантОтправкиЭлектронногоЧека", ВариантОтправки);
	ДанныеЭлектронногоЧека.Вставить("КонтактныеДанныеЭлектронногоЧека", "");
	Если ВариантОтправки = ПредопределенноеЗначение("Перечисление.ВариантыОтправкиЭлектронногоЧекаПокупателю.ОтправитьEmail") Тогда
		ДанныеЭлектронногоЧека.КонтактныеДанныеЭлектронногоЧека = АдресЭП;
	ИначеЕсли ВариантОтправки = ПредопределенноеЗначение("Перечисление.ВариантыОтправкиЭлектронногоЧекаПокупателю.ОтправитьSMS") Тогда
		ДанныеЭлектронногоЧека.КонтактныеДанныеЭлектронногоЧека = Телефон10Знаков;
	КонецЕсли;
	
	РезультатОплаты = Новый Структура;
	РезультатОплаты.Вставить("ПолученоНаличными"     , СуммаОплатыЧисло);
	РезультатОплаты.Вставить("ДанныеЭлектронногоЧека", ДанныеЭлектронногоЧека);
	
	ПринудительноЗакрытьФорму = Истина;
	Закрыть(РезультатОплаты);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьФорму(Команда)
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ОплатаПлатежнаяКарта(Команда)
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ОповещениеВФормуОплаты", Новый ОписаниеОповещения("ОплатаЗавершение", ЭтотОбъект));
	ДополнительныеПараметры.Вставить("ПолученоНаличными", ПривестиСтрокуКЧислу(ПолученоНаличными));
	
	Если ТипЗнч(Документ) = Тип("ДокументСсылка.ЧекККМ") Тогда
		ВыполнитьОбработкуОповещения(
			Новый ОписаниеОповещения("ДобавитьОплатуКартой", ВладелецФормы, ДополнительныеПараметры));
	Иначе
		ВыполнитьОбработкуОповещения(
			Новый ОписаниеОповещения("ОтменитьОплату", ВладелецФормы, ДополнительныеПараметры));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаСторно(Команда)
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ОповещениеВФормуОплаты", Новый ОписаниеОповещения("ОплатаЗавершение", ЭтотОбъект));
	ДополнительныеПараметры.Вставить("ПолученоНаличными", ПривестиСтрокуКЧислу(ПолученоНаличными));
	
	ВыполнитьОбработкуОповещения(
		Новый ОписаниеОповещения("ОтменитьОплатыПлатежнымиКартами", ВладелецФормы, ДополнительныеПараметры),
		Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтправитьSMS(Команда)
	
	УстановитьАктивныйЭлемент(ЭтотОбъект, Элементы.Телефон);
	УстановитьВариантОтправкиЭлектронногоЧека(ЭтотОбъект, ПредопределенноеЗначение("Перечисление.ВариантыОтправкиЭлектронногоЧекаПокупателю.ОтправитьSMS"));
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтправитьEmail(Команда)
	
	УстановитьАктивныйЭлемент(ЭтотОбъект, Элементы.Email);
	УстановитьВариантОтправкиЭлектронногоЧека(ЭтотОбъект, ПредопределенноеЗначение("Перечисление.ВариантыОтправкиЭлектронногоЧекаПокупателю.ОтправитьEmail"));
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтправкаНеТребуется(Команда)
	
	УстановитьАктивныйЭлемент(ЭтотОбъект, Элементы.ПолеПолученоНаличными);
	УстановитьВариантОтправкиЭлектронногоЧека(ЭтотОбъект, ПредопределенноеЗначение("Перечисление.ВариантыОтправкиЭлектронногоЧекаПокупателю.НеОтправлять"));
	
КонецПроцедуры

&НаКлиенте
Процедура ТелефонПриИзменении(Элемент)
	
	Телефон10Знаков = РозничныеПродажиКлиентСервер.НомерТелефонаВФормате10Знаков(НомерТелефона);
	НомерТелефона = РозничныеПродажиКлиентСервер.ОтформатироватьНомерТелефона(Телефон10Знаков);
	
КонецПроцедуры

&НаКлиенте
Процедура EmailПриИзменении(Элемент)
	
	УстановитьВариантОтправкиЭлектронногоЧека(ЭтотОбъект, ПредопределенноеЗначение("Перечисление.ВариантыОтправкиЭлектронногоЧекаПокупателю.ОтправитьEmail"));
	
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура РассчитатьИтоги(Форма)
	
	Форма.СуммаОплаты = ПривестиСтрокуКЧислу(Форма.ПолученоНаличными) + Форма.ОплаченоПлатежнымиКартами;
	
	Если Форма.СуммаОплаты >= Форма.КОплате Тогда
		
		Форма.СуммаСдачи   = Форма.СуммаОплаты - Форма.КОплате;
		Форма.СуммаДоплаты = 0;
		
		Форма.Элементы.ГруппаИтого.ТекущаяСтраница = Форма.Элементы.ГруппаСдача;
		Форма.Элементы.КомандаПробитьЧек.Доступность = Истина;
		
		Форма.ТекущийЭлемент = Форма.Элементы.КомандаПробитьЧек;
		
	Иначе
		
		Форма.СуммаСдачи   = 0;
		Форма.СуммаДоплаты = Форма.КОплате - Форма.СуммаОплаты;
		
		Форма.Элементы.ГруппаИтого.ТекущаяСтраница = Форма.Элементы.ГруппаДоплата;
		Форма.Элементы.КомандаПробитьЧек.Доступность = Ложь;
		
	КонецЕсли;
	
	Форма.Элементы.ОплатаПлатежнаяКарта.Доступность = Форма.ОплаченоПлатежнымиКартами < Форма.КОплате;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьЦифру(ВведеннаяЦифраСтрокой)
	
	Если АктивноеПоле = Элементы.ПолеПолученоНаличными.Имя Тогда
		
		Если ПервыйВвод Тогда
			Если ВведеннаяЦифраСтрокой = "0" Тогда
				Возврат;
			КонецЕсли;
			ПолученоНаличными = "";
			ПервыйВвод = Ложь;
		КонецЕсли;
		
		Запятая = Сред(ПолученоНаличными, СтрДлина(ПолученоНаличными) - КоличествоСимволовПослеЗапятой, 1);
		
		Если Запятая <> "," Тогда
			ПолученоНаличными = ПолученоНаличными + ВведеннаяЦифраСтрокой;
		КонецЕсли;
		
		Если СтрНайти(ПолученоНаличными, ",") = 0 Тогда
			ПолученоНаличными = Формат(ПривестиСтрокуКЧислу(ПолученоНаличными), "ЧН=0; ЧГ=3,0");
		КонецЕсли;
		
		РассчитатьИтоги(ЭтотОбъект);
		ПодключитьОбработчикОжидания("ВывестиИнформациюНаДисплейПокупателя", 0.1, Истина);
		
	ИначеЕсли АктивноеПоле = Элементы.Телефон.Имя Тогда
		
		Телефон10Знаков = Телефон10Знаков + ВведеннаяЦифраСтрокой;
		НомерТелефона = РозничныеПродажиКлиентСервер.ОтформатироватьНомерТелефона(Телефон10Знаков);
		
		Если СтрДлина(Телефон10Знаков) = 10 Тогда
			ТекущийЭлемент = Элементы.КомандаПробитьЧек;
		КонецЕсли;
		
		УстановитьВариантОтправкиЭлектронногоЧека(ЭтотОбъект, ПредопределенноеЗначение("Перечисление.ВариантыОтправкиЭлектронногоЧекаПокупателю.ОтправитьSMS"));
		
	КонецЕсли;
	
КонецПроцедуры

// Функция выполняет приведение строки к числу.
// Параметры:
//  ЧислоСтрокой           - Строка - Строка приводимая к числу.
//  ВозвращатьНеопределено - Булево - Если Истина и строка содержит некорректное значение, то возвращать Неопределено.
//
// Возвращаемое значение:
//  Число
//
&НаКлиентеНаСервереБезКонтекста
Функция ПривестиСтрокуКЧислу(ЧислоСтрокой)
	
	ОписаниеТипаЧисла = Новый ОписаниеТипов("Число");
	ЗначениеЧисла = ОписаниеТипаЧисла.ПривестиЗначение(ЧислоСтрокой);
	
	Возврат ЗначениеЧисла;
	
КонецФункции

&НаКлиенте
Процедура ВывестиИнформациюНаДисплейПокупателя()
	
	Если Не ВводДоступен() Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Документ) = Тип("ДокументСсылка.ЧекККМ") Тогда
		ТекстКОплате = НСтр("ru = 'К оплате'")  + ":";
		ТекстСдача   = НСтр("ru = 'Сдача'")     + ":";
		ТекстДоплата = НСтр("ru = 'Доплатить'") + ":";
	Иначе
		ТекстКОплате = НСтр("ru = 'К возврату'") + ":";
		ТекстСдача   = НСтр("ru = 'Сдача'")      + ":";
		ТекстДоплата = НСтр("ru = 'Вернуть'")    + ":";
	КонецЕсли;
	
	ДПТекст1 = РозничныеПродажиКлиент.ПодготовитьСтрокуКВыводуНаДисплейПокупателя(ТекстКОплате, КОплате);
	
	Если СуммаДоплаты > 0 Тогда
		ДПТекст2 = РозничныеПродажиКлиент.ПодготовитьСтрокуКВыводуНаДисплейПокупателя(ТекстДоплата, СуммаДоплаты);
	ИначеЕсли СуммаСдачи > 0 Тогда
		ДПТекст2 = РозничныеПродажиКлиент.ПодготовитьСтрокуКВыводуНаДисплейПокупателя(ТекстСдача, СуммаСдачи);
	Иначе
		ДПТекст2 = "";
	КонецЕсли;
	
	Текст = ДПТекст1 + Символы.ПС + ДПТекст2;
	
	Для Каждого ЭлементСписка Из Дисплеи Цикл
		
		Дисплей = ЭлементСписка.Значение;
		
		Если Не ПодключаемоеОборудованиеКлиент.ОборудованиеПодключено(Дисплей.Ссылка) Тогда
			Продолжить;
		КонецЕсли;
		
		Оповестить = Новый ОписаниеОповещения("ВывестиИнформациюНаДисплейПокупателяЗавершение", ЭтотОбъект);
		
		ПараметрыВыводаНаДисплей = ОборудованиеДисплеиПокупателяКлиент.ПараметрыОперацииДисплейПокупателя(Текст);
		ОборудованиеДисплеиПокупателяКлиент.НачатьВыводИнформацииНаДисплейПокупателя(Оповестить, УникальныйИдентификатор, Дисплей.ИдентификаторУстройства, ПараметрыВыводаНаДисплей);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ВывестиИнформациюНаДисплейПокупателяЗавершение(РезультатВыполнения, ДополнительныеПараметры) Экспорт
	
	Если Не РезультатВыполнения.Результат Тогда
		ТекстСообщения = НСтр(
			"ru = 'При использовании дисплея покупателя произошла ошибка.
			|Дополнительное описание:
			|%ДополнительноеОписание%'");
		ТекстСообщения = СтрЗаменить(
			ТекстСообщения,
			"%ДополнительноеОписание%",
			РезультатВыполнения.ОписаниеОшибки);
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемВопросЗавершение(ОтветНаВопрос, ДополнительныеПараметры) Экспорт
	
	Если ОтветНаВопрос = "ОтменитьОплату" Тогда
		
		ПринудительноЗакрытьФормуПриУспешнойОтменеОплаты = Истина;
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("ОповещениеВФормуОплаты", Новый ОписаниеОповещения("ОплатаЗавершение", ЭтотОбъект));
		ДополнительныеПараметры.Вставить("ПолученоНаличными", ПривестиСтрокуКЧислу(ПолученоНаличными));
		
		ВыполнитьОбработкуОповещения(
			Новый ОписаниеОповещения("ОтменитьОплату", ВладелецФормы, ДополнительныеПараметры));
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОплатаЗавершение(ИнформацияОбОплате, ДополнительныеПараметры) Экспорт
	
	КОплате = ИнформацияОбОплате.СуммаКОплате;
	
	ПолученоНаличными = ИнформацияОбОплате.Наличные;
	
	Если ТипЗнч(ИнформацияОбОплате.Документ) = Тип("ДокументСсылка.ЧекККМВозврат") Тогда
		ОплаченоПлатежнымиКартами = ИнформацияОбОплате.ПлатежныеКартыОтменено;
	Иначе
		ОплаченоПлатежнымиКартами = ИнформацияОбОплате.ПлатежныеКарты;
	КонецЕсли;
	
	РассчитатьИтоги(ЭтотОбъект);
	ПодключитьОбработчикОжидания("ВывестиИнформациюНаДисплейПокупателя", 0.1, Истина);
	
	Если ПринудительноЗакрытьФормуПриУспешнойОтменеОплаты Тогда
		
		Если ИнформацияОбОплате.ИтогоОплачено = 0 Тогда
			ПринудительноЗакрытьФорму = Истина;
			Закрыть();
		Иначе
			ПринудительноЗакрытьФормуПриУспешнойОтменеОплаты = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьАктивныйЭлемент(Форма, Элемент)
	
	Форма.АктивноеПоле = Элемент.Имя;
	
	МассивЭлементов = Новый Массив;
	МассивЭлементов.Добавить(Форма.Элементы.ПолеПолученоНаличными);
	МассивЭлементов.Добавить(Форма.Элементы.Телефон);
	МассивЭлементов.Добавить(Форма.Элементы.Email);
	
	Для Каждого ЭлементФормы Из МассивЭлементов Цикл
		ЭлементФормы.ЦветФона = Новый Цвет;
	КонецЦикла;
	
	Форма.Элементы[Форма.АктивноеПоле].ЦветФона = Форма.ЦветФонаВыделенияПоля;
	
	Если Форма.АктивноеПоле = Форма.Элементы.Email.Имя Тогда
		Форма.Элементы.ГруппаРяды.Видимость              = Ложь;
		Форма.Элементы.ГруппаРядыДополнительно.Видимость = Ложь;
		Форма.Элементы.ГруппаСтраницы.ТекущаяСтраница    = Форма.Элементы.ГруппаРежимКлавиатуры;
		Форма.ТекущийЭлемент = Форма.Элементы.Email;
	Иначе
		Форма.Элементы.ГруппаРяды.Видимость              = Истина;
		Форма.Элементы.ГруппаРядыДополнительно.Видимость = Истина;
		Форма.Элементы.ГруппаСтраницы.ТекущаяСтраница    = Форма.Элементы.ГруппаРяды;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВариантОтправкиЭлектронногоЧека(Форма, ВариантОтправки)
	
	Если Форма.ВариантОтправкиЭлектронногоЧека = ВариантОтправки Тогда
		Возврат;
	КонецЕсли;
	
	МассивЭлементов = Новый Массив;
	МассивЭлементов.Добавить(Форма.Элементы.КомандаОтправитьSMS);
	МассивЭлементов.Добавить(Форма.Элементы.КомандаОтправитьEmail);
	МассивЭлементов.Добавить(Форма.Элементы.КомандаОтправкаНеТребуется);
	
	Для Каждого ЭлементФормы Из МассивЭлементов Цикл
		ЭлементФормы.ЦветФона = Новый Цвет;
	КонецЦикла;
	
	Форма.ВариантОтправкиЭлектронногоЧека = ВариантОтправки;
	Если ВариантОтправки = ПредопределенноеЗначение("Перечисление.ВариантыОтправкиЭлектронногоЧекаПокупателю.ОтправитьSMS") Тогда
		Форма.Элементы.КомандаОтправитьSMS.ЦветФона = Форма.ЦветФонаВыделенияПоля;
	ИначеЕсли ВариантОтправки = ПредопределенноеЗначение("Перечисление.ВариантыОтправкиЭлектронногоЧекаПокупателю.ОтправитьEmail") Тогда
		Форма.Элементы.КомандаОтправитьEmail.ЦветФона = Форма.ЦветФонаВыделенияПоля;
	Иначе
		Форма.Элементы.КомандаОтправкаНеТребуется.ЦветФона = Форма.ЦветФонаВыделенияПоля;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьАктивностьЭлементов()
	
	Если ТекущийЭлемент = Элементы.ПолеПолученоНаличными
	   И АктивноеПоле <> Элементы.ПолеПолученоНаличными.Имя Тогда
		
		УстановитьАктивныйЭлемент(ЭтотОбъект, Элементы.ПолеПолученоНаличными);
		
	КонецЕсли;
	
	Если ТекущийЭлемент = Элементы.Телефон
	   И АктивноеПоле <> Элементы.Телефон.Имя Тогда
		
		УстановитьАктивныйЭлемент(ЭтотОбъект, Элементы.Телефон);
		
	КонецЕсли;
	
	Если ТекущийЭлемент = Элементы.Email
	   И АктивноеПоле <> Элементы.Email.Имя Тогда
		
		УстановитьАктивныйЭлемент(ЭтотОбъект, Элементы.Email);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ВозможноПробитьЧек()
	
	Если ВариантОтправкиЭлектронногоЧека = ПредопределенноеЗначение("Перечисление.ВариантыОтправкиЭлектронногоЧекаПокупателю.ОтправитьSMS") Тогда
		
		Если Не НомерТелефонаЗаполненКорректно() Тогда
			ПоказатьПредупреждение(, НСтр("ru = 'Указан некорректный номер телефона'"));
			УстановитьАктивныйЭлемент(ЭтотОбъект, Элементы.Телефон);
			ТекущийЭлемент = Элементы.Телефон;
			Возврат Ложь;
		КонецЕсли
		
	ИначеЕсли ВариантОтправкиЭлектронногоЧека = ПредопределенноеЗначение("Перечисление.ВариантыОтправкиЭлектронногоЧекаПокупателю.ОтправитьEmail") Тогда
		
		Если Не ОбщегоНазначенияКлиентСервер.АдресЭлектроннойПочтыСоответствуетТребованиям(АдресЭП) Тогда
			ПоказатьПредупреждение(, НСтр("ru = 'Указан некорректный адрес электронной почты'"));
			УстановитьАктивныйЭлемент(ЭтотОбъект, Элементы.Email);
			ТекущийЭлемент = Элементы.Email;
			Возврат Ложь;
		КонецЕсли
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Функция НомерТелефонаЗаполненКорректно()
	
	Если СтрДлина(СокрЛП(Телефон10Знаков)) <> 10 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если Не СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(Телефон10Знаков) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти