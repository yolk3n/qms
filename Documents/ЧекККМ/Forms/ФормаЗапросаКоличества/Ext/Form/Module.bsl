
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Номенклатура                    = Параметры.Номенклатура;
	ДанныеПотребительскойУпаковки   = ДанныеПотребительскойУпаковки(Номенклатура);
	ЕдиницаИзмерения                = ?(ЗначениеЗаполнено(Параметры.ЕдиницаИзмерения), Параметры.ЕдиницаИзмерения, ДанныеПотребительскойУпаковки.ПотребительскаяУпаковка);
	КоличествоВЕдиницахИзмерения    = ?(ЗначениеЗаполнено(Параметры.КоличествоВЕдиницахИзмерения), Параметры.КоличествоВЕдиницахИзмерения, 1);
	СерияПромаркированаДляЦелейМДЛП = Параметры.СерияПромаркированаДляЦелейМДЛП;
	ТаблицаДанныхЕдиницИзмерения    = ДанныеЕдиницИзмерения(Номенклатура, СерияПромаркированаДляЦелейМДЛП, ДанныеПотребительскойУпаковки);
	
	ДанныеЕдиницИзмерения.Загрузить(ТаблицаДанныхЕдиницИзмерения);
	
	Элементы.ЕдиницаИзмерения.СписокВыбора.ЗагрузитьЗначения(ТаблицаДанныхЕдиницИзмерения.ВыгрузитьКолонку("ЕдиницаИзмерения"));
	Элементы.КоличествоВЕдиницахИзмерения.ФорматРедактирования = ?(СерияПромаркированаДляЦелейМДЛП, "ЧДЦ=0", Неопределено);
	Элементы.КоличествоВЕдиницахИзмерения.Формат               = ?(СерияПромаркированаДляЦелейМДЛП, "ЧДЦ=0", Неопределено);
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ
#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомендаОК(Команда)
	
	Если СерияПромаркированаДляЦелейМДЛП Тогда
		
		Если ЕдиницаИзмерения = ДанныеПотребительскойУпаковки.ПотребительскаяУпаковка Тогда
			КоличествоНекорректно = КоличествоВЕдиницахИзмерения > 1;
		Иначе
			ОписаниеВыбраннойЕдиницыИзмерения = ДанныеЕдиницИзмерения.НайтиСтроки(Новый Структура("ЕдиницаИзмерения", ЕдиницаИзмерения))[0];
			КоличествоНекорректно = КоличествоВЕдиницахИзмерения * ОписаниеВыбраннойЕдиницыИзмерения.Коэффициент > ДанныеПотребительскойУпаковки.Коэффициент;
		КонецЕсли;
		
		Если КоличествоНекорректно Тогда
			Текст = НСтр("ru = 'Серия номенклатуры промаркирована для целей МДЛП.
				|Количество маркированного товара, не может быть больше одной потребительской упаковки.'");
			ОбщегоНазначенияКлиент.СообщитьПользователю(Текст,, "КоличествоВЕдиницахИзмерения");
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	РезультатВыбора = Новый Структура;
	РезультатВыбора.Вставить("ЕдиницаИзмерения"            , ЕдиницаИзмерения);
	РезультатВыбора.Вставить("КоличествоВЕдиницахИзмерения", КоличествоВЕдиницахИзмерения);
	
	ОповеститьОВыборе(РезультатВыбора);
	
КонецПроцедуры

#КонецОбласти // ОбработчикиКомандФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ
#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ЕдиницаИзмеренияПриИзменении(Элемент)
	
	Если СерияПромаркированаДляЦелейМДЛП Тогда
		
		Если ЕдиницаИзмерения = ДанныеПотребительскойУпаковки.ПотребительскаяУпаковка Тогда
			КоличествоВЕдиницахИзмерения = 1;
		Иначе
			ОписаниеВыбраннойЕдиницыИзмерения = ДанныеЕдиницИзмерения.НайтиСтроки(Новый Структура("ЕдиницаИзмерения", ЕдиницаИзмерения))[0];
			КоличествоВЕдиницахИзмерения = ДанныеПотребительскойУпаковки.Коэффициент / ОписаниеВыбраннойЕдиницыИзмерения.Коэффициент;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийЭлементовФормы

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ДанныеПотребительскойУпаковки(Номенклатура)
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ЕдиницыИзмеренияНоменклатуры.ЕдиницаИзмерения  КАК ПотребительскаяУпаковка,
	|	ЕдиницыИзмеренияНоменклатуры.Коэффициент       КАК Коэффициент
	|ИЗ
	|	РегистрСведений.ЕдиницыИзмеренияНоменклатуры КАК ЕдиницыИзмеренияНоменклатуры
	|ГДЕ
	|	ЕдиницыИзмеренияНоменклатуры.Номенклатура = &Номенклатура
	|	И ЕдиницыИзмеренияНоменклатуры.ЕдиницаИзмерения = ЕдиницыИзмеренияНоменклатуры.Номенклатура.Упаковка
	|");
	
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Возврат Новый ФиксированнаяСтруктура(Новый Структура("ПотребительскаяУпаковка, Коэффициент", Выборка.ПотребительскаяУпаковка, Выборка.Коэффициент));
	
КонецФункции

&НаСервереБезКонтекста
Функция ДанныеЕдиницИзмерения(Номенклатура, СерияПромаркированаДляЦелейМДЛП, ДанныеПотребительскойУпаковки)
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ЕдиницыИзмеренияНоменклатуры.ЕдиницаИзмерения  КАК ЕдиницаИзмерения,
	|	ЕдиницыИзмеренияНоменклатуры.Коэффициент       КАК Коэффициент
	|ИЗ
	|	РегистрСведений.ЕдиницыИзмеренияНоменклатуры КАК ЕдиницыИзмеренияНоменклатуры
	|ГДЕ
	|	ЕдиницыИзмеренияНоменклатуры.Номенклатура = &Номенклатура
	|УПОРЯДОЧИТЬ ПО
	|	Порядок УБЫВ,
	|	Коэффициент УБЫВ
	|");
	
	Если СерияПромаркированаДляЦелейМДЛП Тогда
		
		СхемаЗапроса = Новый СхемаЗапроса;
		СхемаЗапроса.УстановитьТекстЗапроса(Запрос.Текст);
		ЗапросОбъект = СхемаЗапроса.ПакетЗапросов[СхемаЗапроса.ПакетЗапросов.Количество() - 1].Операторы[0];
		ЗапросОбъект.Отбор.Добавить("ЕдиницаИзмерения.ТипЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыЕдиницИзмерения.Упаковка)");
		ЗапросОбъект.Отбор.Добавить("ЕдиницыИзмеренияНоменклатуры.Коэффициент <= &КоэффициентПотребительскойУпаковки");
		Запрос.Текст = СхемаЗапроса.ПолучитьТекстЗапроса();
		
		Запрос.УстановитьПараметр("КоэффициентПотребительскойУпаковки", ДанныеПотребительскойУпаковки.Коэффициент);
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции
