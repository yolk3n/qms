
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ВозвратТовараТолькоТекущейСмены = Параметры.ВозвратТовараТолькоТекущейСмены;
	КассаККМ = Параметры.КассаККМ;
	СостояниеКассовойСмены = РозничныеПродажи.ПолучитьСостояниеКассовойСмены(КассаККМ);
	Склад = СостояниеКассовойСмены.Склад;
	УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура("Склад", Склад));
	
	Период = Новый СтандартныйПериод(ВариантСтандартногоПериода.Сегодня);
	
	Элементы.Период.Видимость = Не ВозвратТовараТолькоТекущейСмены;
	
	ЗаполнитьТаблицуТоваров();
	
	НастройкаФормБольничнаяАптека.НастроитьОтображениеИтогов(Элементы.ГруппаИтого);
	
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ
#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура НайтиТовары(Команда)
	
	ЗаполнитьТаблицуТоваров();
	
КонецПроцедуры

&НаКлиенте
Процедура ОформитьВозврат(Команда)
	
	Если ПодобраноПозиций = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ЧекККМ = Неопределено;
	КассоваяСмена = Неопределено;
	Для Каждого СтрокаТЧ Из ТаблицаТоваров Цикл
		Если СтрокаТЧ.Выбран Тогда
			ЧекККМ = СтрокаТЧ.ЧекККМ;
			КассоваяСмена = СтрокаТЧ.КассоваяСмена;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("Товары", АдресВоВременномХранилище(ВладелецФормы.УникальныйИдентификатор));
	ПараметрыОткрытия.Вставить("ЧекККМ", ЧекККМ);
	
	Если СостояниеКассовойСмены.ОтчетОРозничныхПродажах = КассоваяСмена И СменаОткрыта(КассоваяСмена) Тогда
		ОткрытьФорму("Документ.ЧекККМВозврат.Форма.ФормаДокументаМастер", Новый Структура("Основание", ПараметрыОткрытия), ВладелецФормы);
	Иначе
		ОткрытьФорму("Документ.ВозвратТоваровОтКлиента.ФормаОбъекта", Новый Структура("Основание", ПараметрыОткрытия), ВладелецФормы);
	КонецЕсли;
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ
#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ТаблицаТоваровВыбранПриИзменении(Элемент)
	
	ОбработатьИзменениеВыбранСтроки();
	
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция АдресВоВременномХранилище(УникальныйИдентификатор)
	
	Товары = ТаблицаТоваров.Выгрузить(Новый Структура("Выбран", Истина));
	
	Возврат ПоместитьВоВременноеХранилище(Товары, УникальныйИдентификатор);
	
КонецФункции

&НаСервере
Процедура ЗаполнитьТаблицуТоваров()
	
	ТаблицаТоваров.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЧекККМ.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ЧекиККМ
	|ИЗ
	|	Документ.ЧекККМ КАК ЧекККМ
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ФискальныеОперации КАК ФискальныеОперации
	|	ПО
	|		ФискальныеОперации.ДокументОснование = ЧекККМ.Ссылка
	|ГДЕ
	|	ЧекККМ.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЧековККМ.Пробит)
	|	И &ОтборПоПериоду
	|	И &ОтборНомерЧекаККМ
	|	И &ОтборНоменклатура
	|";
	Запрос.Параметры.Вставить("КассаККМ"     , КассаККМ);
	Запрос.Параметры.Вставить("ДатаНачала"   , Период.ДатаНачала);
	Запрос.Параметры.Вставить("ДатаОкончания", Период.ДатаОкончания);
	Запрос.Параметры.Вставить("КассоваяСмена", СостояниеКассовойСмены.ОтчетОРозничныхПродажах);
	
	Если ВозвратТовараТолькоТекущейСмены Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОтборПоПериоду", "ЧекККМ.КассоваяСмена = &КассоваяСмена");
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОтборПоПериоду", "ЧекККМ.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Номенклатура) Тогда
		Если ВозвратТовараТолькоТекущейСмены Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОтборНоменклатура", "ЧекККМ.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ Документ.ЧекККМ.Товары КАК Т ГДЕ Т.Ссылка.КассоваяСмена = &КассоваяСмена И Т.Номенклатура = &Номенклатура)");
		Иначе
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОтборНоменклатура", "ЧекККМ.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ Документ.ЧекККМ.Товары КАК Т ГДЕ Т.Ссылка.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания И Т.Номенклатура = &Номенклатура)");
		КонецЕсли;
		Запрос.Параметры.Вставить("Номенклатура", Номенклатура);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОтборНоменклатура", "ИСТИНА");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(НомерЧекаККМ) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОтборНомерЧекаККМ", "ФискальныеОперации.НомерЧекаККМ = &НомерЧекаККМ");
		Запрос.Параметры.Вставить("НомерЧекаККМ", НомерЧекаККМ);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОтборНомерЧекаККМ", "ИСТИНА");
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	Если Выборка.Количество = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОплатаПлатежнымиКартами.Ссылка  КАК Ссылка,
	|	ИСТИНА                          КАК ОплаченКартой
	|ПОМЕСТИТЬ ЧекиККМОплаченныеКартами
	|ИЗ
	|	Документ.ЧекККМ.ОплатаПлатежнымиКартами КАК ОплатаПлатежнымиКартами
	|ГДЕ
	|	ОплатаПлатежнымиКартами.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ЧекиККМ КАК Т)
	|;
	|
	|///////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Ссылка                        КАК ЧекККМ,
	|	Товары.Номенклатура                  КАК Номенклатура,
	|	Товары.СерияНоменклатуры             КАК СерияНоменклатуры,
	|	Товары.Партия                        КАК Партия,
	|	Товары.ЕдиницаИзмерения              КАК ЕдиницаИзмерения,
	|	Товары.Коэффициент                   КАК Коэффициент,
	|	Товары.КоличествоВЕдиницахИзмерения  КАК КоличествоВЕдиницахИзмерения,
	|	Товары.Количество                    КАК Количество,
	|	Товары.Цена                          КАК Цена,
	|	Товары.Сумма                         КАК Сумма,
	|	Товары.СтавкаНДС                     КАК СтавкаНДС,
	|	Товары.СуммаНДС                      КАК СуммаНДС,
	|	Товары.СуммаСНДС                     КАК СуммаСНДС
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	Документ.ЧекККМ.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ЧекиККМ КАК Т)
	|	И Товары.Номенклатура.ТипНоменклатурыРасширенный <> ЗНАЧЕНИЕ(Справочник.ТипыНоменклатурыРасширенные.ЛекарственноеСредство)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Товары.Ссылка.ЧекККМ                  КАК ЧекККМ,
	|	Товары.Номенклатура                   КАК Номенклатура,
	|	Товары.СерияНоменклатуры              КАК СерияНоменклатуры,
	|	Товары.Партия                         КАК Партия,
	|	Товары.ЕдиницаИзмерения               КАК ЕдиницаИзмерения,
	|	Товары.Коэффициент                    КАК Коэффициент,
	|	-Товары.КоличествоВЕдиницахИзмерения  КАК КоличествоВЕдиницахИзмерения,
	|	-Товары.Количество                    КАК Количество,
	|	Товары.Цена                           КАК Цена,
	|	-Товары.Сумма                         КАК Сумма,
	|	Товары.СтавкаНДС                      КАК СтавкаНДС,
	|	-Товары.СуммаНДС                      КАК СуммаНДС,
	|	-Товары.СуммаСНДС                     КАК СуммаСНДС
	|ИЗ
	|	Документ.ЧекККМВозврат.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка.ЧекККМ В (ВЫБРАТЬ Т.Ссылка ИЗ ЧекиККМ КАК Т)
	|	И Товары.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЧековККМ.Пробит)
	|	И Товары.Номенклатура.ТипНоменклатурыРасширенный <> ЗНАЧЕНИЕ(Справочник.ТипыНоменклатурыРасширенные.ЛекарственноеСредство)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Товары.Ссылка.ЧекККМ                  КАК ЧекККМ,
	|	Товары.Номенклатура                   КАК Номенклатура,
	|	Товары.СерияНоменклатуры              КАК СерияНоменклатуры,
	|	Товары.Партия                         КАК Партия,
	|	Товары.ЕдиницаИзмерения               КАК ЕдиницаИзмерения,
	|	Товары.Коэффициент                    КАК Коэффициент,
	|	-Товары.КоличествоВЕдиницахИзмерения  КАК КоличествоВЕдиницахИзмерения,
	|	-Товары.Количество                    КАК Количество,
	|	Товары.Цена                           КАК Цена,
	|	-Товары.Сумма                         КАК Сумма,
	|	Товары.СтавкаНДС                      КАК СтавкаНДС,
	|	-Товары.СуммаНДС                      КАК СуммаНДС,
	|	-Товары.СуммаСНДС                     КАК СуммаСНДС
	|ИЗ
	|	Документ.ВозвратТоваровОтКлиента.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка.ЧекККМ В (ВЫБРАТЬ Т.Ссылка ИЗ ЧекиККМ КАК Т)
	|	И Товары.Ссылка.Проведен
	|	И Товары.Номенклатура.ТипНоменклатурыРасширенный <> ЗНАЧЕНИЕ(Справочник.ТипыНоменклатурыРасширенные.ЛекарственноеСредство)
	|;
	|
	|///////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.ЧекККМ                               КАК ЧекККМ,
	|	Товары.Номенклатура                         КАК Номенклатура,
	|	Товары.СерияНоменклатуры                    КАК СерияНоменклатуры,
	|	Товары.Партия                               КАК Партия,
	|	Товары.ЕдиницаИзмерения                     КАК ЕдиницаИзмерения,
	|	Товары.Коэффициент                          КАК Коэффициент,
	|	Товары.СтавкаНДС                            КАК СтавкаНДС,
	|	Товары.Цена                                 КАК Цена,
	|	СУММА(Товары.КоличествоВЕдиницахИзмерения)  КАК КоличествоВЕдиницахИзмерения,
	|	СУММА(Товары.Количество)                    КАК Количество,
	|	СУММА(Товары.Сумма)                         КАК Сумма,
	|	СУММА(Товары.СуммаНДС)                      КАК СуммаНДС,
	|	СУММА(Товары.СуммаСНДС)                     КАК СуммаСНДС
	|ПОМЕСТИТЬ Результат
	|ИЗ
	|	Товары КАК Товары
	|СГРУППИРОВАТЬ ПО
	|	Товары.ЧекККМ,
	|	Товары.Номенклатура,
	|	Товары.СерияНоменклатуры,
	|	Товары.Партия,
	|	Товары.ЕдиницаИзмерения,
	|	Товары.Коэффициент,
	|	Товары.СтавкаНДС,
	|	Товары.Цена
	|ИМЕЮЩИЕ
	|	СУММА(Товары.Количество) > 0
	|;
	|
	|///////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таблица.ЧекККМ                                          КАК ЧекККМ,
	|	ФискальныеОперации.НомерЧекаККМ                         КАК НомерЧекаККМ,
	|	Таблица.ЧекККМ.КассоваяСмена                            КАК КассоваяСмена,
	|	ЕСТЬNULL(ЧекиККМОплаченныеКартами.ОплаченКартой, ЛОЖЬ)  КАК ОплаченКартой,
	|	Таблица.Номенклатура                                    КАК Номенклатура,
	|	Таблица.СерияНоменклатуры                               КАК СерияНоменклатуры,
	|	Таблица.Партия                                          КАК Партия,
	|	Таблица.ЕдиницаИзмерения                                КАК ЕдиницаИзмерения,
	|	Таблица.Коэффициент                                     КАК Коэффициент,
	|	Таблица.СтавкаНДС                                       КАК СтавкаНДС,
	|	Таблица.Цена                                            КАК Цена,
	|	Таблица.КоличествоВЕдиницахИзмерения                    КАК КоличествоВЕдиницахИзмерения,
	|	Таблица.Количество                                      КАК Количество,
	|	Таблица.Сумма                                           КАК Сумма,
	|	Таблица.СуммаНДС                                        КАК СуммаНДС,
	|	Таблица.СуммаСНДС                                       КАК СуммаСНДС
	|ИЗ
	|	Результат КАК Таблица
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ЧекиККМОплаченныеКартами
	|	ПО
	|		Таблица.ЧекККМ = ЧекиККМОплаченныеКартами.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ФискальныеОперации КАК ФискальныеОперации
	|	ПО
	|		ФискальныеОперации.ДокументОснование = Таблица.ЧекККМ
	|УПОРЯДОЧИТЬ ПО
	|	Таблица.ЧекККМ.Дата УБЫВ
	|";
	
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	УстановитьПривилегированныйРежим(Ложь);
	
	ПодобраноПозиций = 0;
	Всего = 0;
	
	Пока Выборка.Следующий() Цикл
		
		СтрокаТЧ = ТаблицаТоваров.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТЧ, Выборка);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьИтоги()
	
	ПодобраноПозиций = 0;
	Всего            = 0;
	
	Для Каждого СтрокаТЧ Из ТаблицаТоваров Цикл
		
		Если Не СтрокаТЧ.Выбран Тогда
			Продолжить;
		КонецЕсли;
		
		ПодобраноПозиций = ПодобраноПозиций + 1;
		Всего = Всего + СтрокаТЧ.Сумма;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьИзменениеВыбранСтроки()
	
	ТекущиеДанные = Элементы.ТаблицаТоваров.ТекущиеДанные;
	
	ЧекККМ        = ТекущиеДанные.ЧекККМ;
	ОплаченКартой = ТекущиеДанные.ОплаченКартой;
	
	Для Каждого СтрокаТЧ Из ТаблицаТоваров Цикл
		Если СтрокаТЧ.ЧекККМ = ЧекККМ И ОплаченКартой Тогда
			СтрокаТЧ.Выбран = ТекущиеДанные.Выбран;
		КонецЕсли;
		Если СтрокаТЧ.ЧекККМ <> ЧекККМ Тогда
			СтрокаТЧ.Выбран = Ложь;
		КонецЕсли;
	КонецЦикла;
	
	ПересчитатьИтоги();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СменаОткрыта(Знач КассоваяСмена)
	Возврат РозничныеПродажи.СменаОткрыта(КассоваяСмена, ТекущаяДатаСеанса());
КонецФункции

#КонецОбласти
