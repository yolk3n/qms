
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформлениеФормы();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// ИнтеграцияМДЛП.КонтрольКМ
	КонтрольКодовМаркировкиМДЛП.ПриСозданииНаСервере(ЭтотОбъект, Отказ);
	// Конец ИнтеграцияМДЛП.КонтрольКМ
	
	НастройкаФормБольничнаяАптека.ФормаДокумента_ПриСозданииНаСервере(ЭтотОбъект);
	
	Если ПараметрыКассыККМ = Неопределено Тогда
		ПараметрыКассыККМ = Новый ФиксированнаяСтруктура(Справочники.КассыККМ.ПараметрыКассыККМ(Объект.КассаККМ));
		ВерсияФФД = ОборудованиеЧекопечатающиеУстройстваВызовСервера.ФискальноеУстройствоПоддерживаетВерсиюФФД(ПараметрыКассыККМ.ИдентификаторУстройства);
	КонецЕсли;
	
	Если Объект.Ссылка.Пустая() Тогда
		ПриСозданииНовогоПриЧтенииНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// ИнтеграцияМДЛП.КонтрольКМ
	КонтрольКодовМаркировкиМДЛП.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец ИнтеграцияМДЛП.КонтрольКМ

	НастройкаФормБольничнаяАптека.ФормаДокумента_ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	
	Если ПараметрыКассыККМ = Неопределено Тогда
		ПараметрыКассыККМ = Новый ФиксированнаяСтруктура(Справочники.КассыККМ.ПараметрыКассыККМ(Объект.КассаККМ));
		ВерсияФФД = ОборудованиеЧекопечатающиеУстройстваВызовСервера.ФискальноеУстройствоПоддерживаетВерсиюФФД(ПараметрыКассыККМ.ИдентификаторУстройства);
	КонецЕсли;
	
	ПриСозданииНовогоПриЧтенииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	ОценкаПроизводительностиБольничнаяАптекаКлиент.НачатьЗамерПроведенияДокумента(Объект.Ссылка, Отказ, ПараметрыЗаписи);
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// ИнтеграцияМДЛП.КонтрольКМ
	КонтрольКодовМаркировкиМДЛП.ПриЗаписиНаСервере(ЭтотОбъект, Отказ, ТекущийОбъект, ПараметрыЗаписи);
	// Конец ИнтеграцияМДЛП.КонтрольКМ
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// ИнтеграцияМДЛП.КонтрольКМ
	КонтрольКодовМаркировкиМДЛП.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец ИнтеграцияМДЛП.КонтрольКМ
	
	НастройкаФормБольничнаяАптека.ФормаДокумента_ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	
	ЗаполнитьСлужебныеРеквизиты();
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ
#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ДанныеФискальнойОперацииОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылка, СтандартнаяОбработка)
	
	Если НавигационнаяСсылка = "ОткрытьЗаписьЖурналаФискальныхОпераций" Тогда
		СтандартнаяОбработка = Ложь;
		РозничныеПродажиКлиент.ОткрытьЗаписьЖурналаФискальныхОпераций(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийЭлементовФормы

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПриСозданииНовогоПриЧтенииНаСервере()
	
	ЗаполнитьСлужебныеРеквизиты();
	
	СуммаСдачи = Объект.ОплатаПлатежнымиКартами.Итог("Сумма")
	           + Объект.ПолученоНаличными
	           + Объект.Товары.Итог("СуммаЛьготы")
	           - Объект.СуммаДокумента;
	
	ДанныеФискальнойОперации = РозничныеПродажи.ПредставлениеДанныхФискальнойОперации(Объект.Ссылка);
	
	НастроитьРецептИЛьготыДокумента();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформлениеФормы()
	
	ОбработкаТабличнойЧастиСервер.УстановитьОформлениеЦенаВключаетНДС(ЭтотОбъект);
	ОбработкаТабличнойЧастиСервер.УстановитьОформлениеСуммНДС(ЭтотОбъект);
	
	ОбработкаТабличнойЧастиСервер.УстановитьОформлениеСерийНоменклатуры(ЭтотОбъект);
	ОбработкаТабличнойЧастиСервер.УстановитьОформлениеПартий(ЭтотОбъект);
	
	ОбработкаТабличнойЧастиСервер.УстановитьОформлениеЗабракованнойСерии(ЭтотОбъект);
	
	// Видимость поля ТоварыШтрихкод строки табличной части Товары.
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТоварыШтрихкод.Имя);
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(Элемент.Отбор,
		"Объект.Товары.СерияПромаркированаДляЦелейМДЛП", ВидСравненияКомпоновкиДанных.Равно, Истина);
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
	// Видимость поля ТоварыНомерКиЗ строки табличной части Товары.
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТоварыНомерКиЗ.Имя);
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТоварыКодСтатусаПроверкиКМ.Имя);
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТоварыПояснениеСтатусаПроверкиКМ.Имя);
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(Элемент.Отбор,
		"Объект.Товары.СерияПромаркированаДляЦелейМДЛП", ВидСравненияКомпоновкиДанных.НеРавно, Истина);
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
	// Отметка незаполненного поля ТоварыСуммаЛьготы табличной части Товары.
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТоварыСуммаЛьготы.Имя);
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(Элемент.Отбор,
		"ВерсияФФД", ВидСравненияКомпоновкиДанных.БольшеИлиРавно, "1.2");
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(Элемент.Отбор,
		"Объект.Товары.ПроцентЛьготы", ВидСравненияКомпоновкиДанных.Равно, ПредопределенноеЗначение("Справочник.ПроцентыЛьгот.ПустаяСсылка"));
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСлужебныеРеквизиты()
	
	Если ВерсияФФД >= "1.2" Тогда
		Для Каждого ТекущиеДанные Из Объект.Товары Цикл
			ТекущиеДанные.Рецепт = ОписаниеРецептаИлиЛьготы(ТекущиеДанные);
		КонецЦикла;
	КонецЕсли;
	
	Действия = ОбработкаТабличнойЧастиКлиентСервер;
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить(Действия.Действие_ЗаполнитьЗабраковкуСерий());
	СтруктураДействий.Вставить(Действия.Действие_ЗаполнитьПризнакСерияПромаркированаДляЦелейМДЛП());
	
	ОбработкаТабличнойЧастиСервер.ОбработатьТабличнуюЧасть(Объект.Товары, СтруктураДействий, Неопределено);
	
КонецПроцедуры

&НаСервере
Процедура НастроитьРецептИЛьготыДокумента()
	
	Элементы.ГруппаЛьготы.Видимость = Ложь;
	Элементы.ГруппаРецепт.Видимость = Ложь;
	
	ПроцентЛьготыЧислом       = 0;
	Элементы.Льгота.Заголовок = НСтр("ru = 'Льгота:'");
	
	Если ВерсияФФД >= "1.2" Тогда
		Элементы.ТоварыРецепт.Видимость = Истина;
	Иначе
		
		Элементы.ТоварыРецепт.Видимость = Ложь;
		
		Если Объект.ИспользоватьЛьготы Тогда
			
			Если ЗначениеЗаполнено(Объект.ПроцентЛьготы) Тогда
				ПроцентЛьготыЧислом = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ПроцентЛьготы, "Процент");
				Элементы.Льгота.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Льгота %1'"), СокрЛП(Объект.ПроцентЛьготы));
			КонецЕсли;
			
			Элементы.Льгота.Видимость            = Истина;
			Элементы.ТоварыСуммаЛьготы.Видимость = Истина;
			Элементы.ГруппаЛьготы.Видимость      = Истина;
			Элементы.ГруппаРецепт.Видимость      = Ложь;
			Элементы.ТоварыРецепт.Видимость      = Ложь;
			
		Иначе
			Элементы.Льгота.Видимость            = Ложь;
			Элементы.ТоварыСуммаЛьготы.Видимость = Ложь;
			Элементы.ГруппаЛьготы.Видимость      = Ложь;
			Элементы.ГруппаРецепт.Видимость      = Истина;
			Элементы.ТоварыРецепт.Видимость      = Ложь;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ОписаниеРецептаИлиЛьготы(Знач Источник)
	
	Если ЗначениеЗаполнено(Источник.ПроцентЛьготы) Тогда
		ОписаниеРецептаВид   = НСтр("ru = 'Льгота %1'");
		ОписаниеРецептаВид   = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ОписаниеРецептаВид, Источник.ПроцентЛьготы);
		ОписаниеРецептаДата  = Формат(Источник.ДатаРегистрацииЛьготногоРецепта, "ДЛФ=D");
		ОписаниеРецептаСерия = СокрЛП(Источник.НомерСерииЛьготногоРецепта);
		ОписаниеРецептаНомер = СокрЛП(Источник.НомерЛьготногоРецепта);
	ИначеЕсли ЗначениеЗаполнено(Источник.ДатаРегистрацииРецепта) Тогда
		ОписаниеРецептаВид   = НСтр("ru = 'Рецепт'");
		ОписаниеРецептаДата  = Формат(Источник.ДатаРегистрацииРецепта, "ДЛФ=D");
		ОписаниеРецептаСерия = СокрЛП(Источник.НомерСерииРецепта);
		ОписаниеРецептаНомер = СокрЛП(Источник.НомерРецепта);
	Иначе
		Возврат "";
	КонецЕсли;
	
	ШаблонОписанияРецепта = НСтр("ru = '%1 от %2 %3 %4'");
	
	Возврат СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		ШаблонОписанияРецепта,
		ОписаниеРецептаВид,
		ОписаниеРецептаДата,
		ОписаниеРецептаСерия,
		ОписаниеРецептаНомер);
	
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции

////////////////////////////////////////////////////////////////////////////////
// СТАНДАРТНЫЕ ПОДСИСТЕМЫ
#Область СтандартныеПодсистемы

// СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры

// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти // СтандартныеПодсистемы
