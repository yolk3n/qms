
// Возвращает цену последней закупки номенклатуры.
//
Функция ПолучитьЦенуПоследнейЗакупки(Номенклатура, ЕдиницаИзмерения, Дата, Склад, Поставщик) Экспорт
	
	Валюта = ЗначениеНастроекБольничнаяАптекаПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
	                      |	Документ.Валюта КАК Валюта,
	                      |	ТЧТовары.Цена КАК Цена,
	                      |	ТЧТовары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	                      |	Документ.Контрагент КАК Контрагент
	                      |ИЗ
	                      |	Документ.ПоступлениеТоваров.Товары КАК ТЧТовары
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваров КАК Документ
	                      |		ПО ТЧТовары.Ссылка = Документ.Ссылка
	                      |ГДЕ
	                      |	ТЧТовары.Номенклатура = &Номенклатура
	                      |	И Документ.Дата <= &Дата
	                      |	И (Документ.Склад = &Склад
	                      |			ИЛИ &Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка))
	                      |	И Документ.Проведен
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Документ.Дата УБЫВ");
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса()));
	Запрос.УстановитьПараметр("Склад", Склад);
	
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Если Результат.Пустой() Тогда
		Возврат 0;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	
	Поставщик = Выборка.Контрагент;
	
	Цена = Выборка.Цена;
	Если Выборка.ЕдиницаИзмерения <> ЕдиницаИзмерения Тогда
		
		Цена = Цена
			* НоменклатураСервер.КоэффициентЕдиницыИзмерения(Номенклатура, ЕдиницаИзмерения)
			/ НоменклатураСервер.КоэффициентЕдиницыИзмерения(Номенклатура, Выборка.ЕдиницаИзмерения);
		
	КонецЕсли;
	
	Если Валюта <> Выборка.Валюта Тогда
		
		ПараметрыТекущегоКурса = РаботаСКурсамиВалют.ПолучитьКурсВалюты(Выборка.Валюта, Дата);
		ПараметрыНовогоКурса = РаботаСКурсамиВалют.ПолучитьКурсВалюты(Валюта, Дата);
		
		Цена = РаботаСКурсамиВалютКлиентСервер.ПересчитатьПоКурсу(Цена, ПараметрыТекущегоКурса, ПараметрыНовогоКурса);
		
	КонецЕсли;
	
	Возврат Цена;
	
КонецФункции

Процедура ЗаполнитьЦены(ТЧТовары, ОтборНоменклатура, ДатаДокумента, Склад) Экспорт
	
	Валюта = ЗначениеНастроекБольничнаяАптекаПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПоступлениеТоваровТовары.Номенклатура КАК Номенклатура,
	|	ПоступлениеТоваровТовары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ПоступлениеТоваровТовары.Ссылка.Дата КАК ДатаПоступления,
	|	ПоступлениеТоваровТовары.Ссылка.Контрагент КАК Поставщик,
	|	СУММА(ПоступлениеТоваровТовары.Сумма) КАК Сумма,
	|	СУММА(ПоступлениеТоваровТовары.Количество) КАК Количество,
	|	ПоступлениеТоваровТовары.Ссылка.Валюта КАК Валюта
	|ПОМЕСТИТЬ ВсеПоступления
	|ИЗ
	|	Документ.ПоступлениеТоваров.Товары КАК ПоступлениеТоваровТовары
	|ГДЕ
	|	ПоступлениеТоваровТовары.Номенклатура В(&ОтборНоменклатура)
	|	И ПоступлениеТоваровТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				ПоступлениеТоваров.Ссылка КАК Ссылка
	|			ИЗ
	|				Документ.ПоступлениеТоваров КАК ПоступлениеТоваров
	|			ГДЕ
	|				НЕ ПоступлениеТоваров.ПометкаУдаления
	|				И ПоступлениеТоваров.Проведен
	|				И ПоступлениеТоваров.Дата <= &Дата
	|				И ПоступлениеТоваров.Склад = &Склад)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоступлениеТоваровТовары.Номенклатура,
	|	ПоступлениеТоваровТовары.ЕдиницаИзмерения,
	|	ПоступлениеТоваровТовары.Ссылка.Дата,
	|	ПоступлениеТоваровТовары.Ссылка.Контрагент,
	|	ПоступлениеТоваровТовары.Ссылка.Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВсеПоступления.Номенклатура КАК Номенклатура,
	|	ВсеПоступления.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВсеПоступления.Поставщик КАК Поставщик,
	|	ВсеПоступления.Сумма / ВсеПоступления.Количество КАК ЦенаСред,
	|	ВсеПоступления.Валюта КАК Валюта
	|ИЗ
	|	ВсеПоступления КАК ВсеПоступления
	|ГДЕ
	|	(ВсеПоступления.Номенклатура, ВсеПоступления.ДатаПоступления) В
	|			(ВЫБРАТЬ
	|				ВсеПоступленияВл.Номенклатура,
	|				МАКСИМУМ(ВсеПоступленияВл.ДатаПоступления)
	|			ИЗ
	|				ВсеПоступления КАК ВсеПоступленияВл
	|			СГРУППИРОВАТЬ ПО
	|				ВсеПоступленияВл.Номенклатура)";
	
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("Дата", ДатаДокумента);
	Запрос.УстановитьПараметр("ОтборНоменклатура", ОтборНоменклатура);
	
	Выборка = Запрос.Выполнить().Выбрать();
	СтрПоиска = Новый Структура("Номенклатура",Справочники.Номенклатура.ПустаяСсылка());
	Пока Выборка.Следующий() Цикл
		
		СтрПоиска.Номенклатура = Выборка.Номенклатура;
		Для Каждого СтрТЧ из ТЧТовары.НайтиСтроки(СтрПоиска) Цикл
			
			СтрТЧ.Поставщик = Выборка.Поставщик;
			
			Цена = Окр(Выборка.ЦенаСред,2,РежимОкругления.Окр15как20);
			Если Выборка.ЕдиницаИзмерения <> СтрТЧ.ЕдиницаИзмерения Тогда
				
				Цена = Цена
				* НоменклатураСервер.КоэффициентЕдиницыИзмерения(СтрТЧ.Номенклатура, СтрТЧ.ЕдиницаИзмерения)
				/ НоменклатураСервер.КоэффициентЕдиницыИзмерения(СтрТЧ.Номенклатура, Выборка.ЕдиницаИзмерения);
				
			КонецЕсли;
			
			Если Валюта <> Выборка.Валюта Тогда
				
				ПараметрыТекущегоКурса = РаботаСКурсамиВалют.ПолучитьКурсВалюты(Выборка.Валюта, ДатаДокумента);
				ПараметрыНовогоКурса = РаботаСКурсамиВалют.ПолучитьКурсВалюты(Валюта, ДатаДокумента);
				
				Цена = РаботаСКурсамиВалютКлиентСервер.ПересчитатьПоКурсу(Цена, ПараметрыТекущегоКурса, ПараметрыНовогоКурса);
				
			КонецЕсли;
			
			СтрТЧ.Цена = Цена;
			СтрТЧ.Сумма = Цена*СтрТЧ.КоличествоВЕдиницахИзмерения;
			
		КонецЦикла;	
		
	КонецЦикла;	
КонецПроцедуры

Процедура ЗаписатьСпрНборов() Экспорт
	
	Если Справочники.НаборыДополнительныхРеквизитовИСведений.НайтиПоНаименованию("Заявка на закупку",Истина).Пустая() Тогда
		
		НовыйСпр = Справочники.НаборыДополнительныхРеквизитовИСведений.СоздатьЭлемент();
		НовыйСпр.УстановитьСсылкуНового(Справочники.НаборыДополнительныхРеквизитовИСведений.ПолучитьСсылку(Новый УникальныйИдентификатор("de247b6f-a894-41dc-a71d-5de676f63457")));
		НовыйСпр.Наименование = "Заявка на закупку";
		НовыйСпр.Используется = Истина;
		НовыйСпр.ИмяПредопределенногоНабора = "Документ_ЗаявкаНаЗакупку";
		НовыйСпр.Записать();
		
	КонецЕсли;
	
КонецПроцедуры	


////////////////////////////////////////////////////////////////////////////////
// Проведение
#Область Проведение

// Инициализирует таблицы значений, содержащие данные для проведения документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицыДвиженийДляПроведения(ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	ОсновныеДанныеДокумента = ПодготовитьОсновныеДанныеДляПроведения(ДополнительныеСвойства);
	
	ИнициализироватьКлючиАналитикиОписанийОтборовНоменклатуры(ОсновныеДанныеДокумента);
	
	ПроведениеБольничнаяАптека.ДобавитьТекстЗапросаДвижений(ДополнительныеСвойства, ТекстЗапросаВтТаблицаТовары());
	ПроведениеБольничнаяАптека.ДобавитьТекстЗапросаДвижений(ДополнительныеСвойства, ТекстЗапросаЗаказыПоставщикам(), Метаданные.РегистрыНакопления.ЗаявкиНаЗакупку);
	
	Запрос = Новый Запрос(ПроведениеБольничнаяАптека.ПолучитьТекстЗапросаДвижений(ДополнительныеСвойства, Регистры));
	
	Для Каждого ДанныеДокумента Из ОсновныеДанныеДокумента Цикл
		Запрос.УстановитьПараметр(ДанныеДокумента.Ключ, ДанныеДокумента.Значение);
	КонецЦикла;
	
	ПроведениеБольничнаяАптека.ЗаполнитьТаблицыДвижений(ДополнительныеСвойства, Запрос.ВыполнитьПакет(), Регистры);
	
КонецПроцедуры

Процедура ИнициализироватьКлючиАналитикиОписанийОтборовНоменклатуры(Реквизиты)   Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	0 КАК ДействующиеВеществаМНН,
	|	0 КАК ТорговоеНаименование,
	|	0 КАК ФормаВыпуска,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура
	|ПОМЕСТИТЬ втТаблицаАналитики
	|ИЗ
	|	Документ.ЗаявкаНаЗакупку.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	ТорговоеНаименование,
	|	ДействующиеВеществаМНН,
	|	ФормаВыпуска
	|";
	
	Запрос.УстановитьПараметр("Ссылка", Реквизиты.Ссылка);
	Запрос.Выполнить();
	
	Справочники.КлючиАналитикиОписанийОтборовНоменклатуры.ИнициализироватьКлючиАналитики(Запрос.МенеджерВременныхТаблиц);
	
КонецПроцедуры

Процедура ИнициализироватьКлючиАналитикиПоТЗ(ТабЗначИзТЧ)   Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	0 КАК ДействующиеВеществаМНН,
	               |	0 КАК ТорговоеНаименование,
	               |	0 КАК ФормаВыпуска,
	               |	ТаблицаТовары.Номенклатура КАК Номенклатура
	               |ПОМЕСТИТЬ втТаблицаАналитики
	               |ИЗ
	               |	&ТабЗначИзТЧ КАК ТаблицаТовары
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Номенклатура,
	               |	ТорговоеНаименование,
	               |	ДействующиеВеществаМНН,
	               |	ФормаВыпуска";
	
	Запрос.УстановитьПараметр("ТабЗначИзТЧ", ТабЗначИзТЧ);
	Запрос.Выполнить();
	
	Справочники.КлючиАналитикиОписанийОтборовНоменклатуры.ИнициализироватьКлючиАналитики(Запрос.МенеджерВременныхТаблиц);
	
КонецПроцедуры

Функция ПодготовитьОсновныеДанныеДляПроведения(ДополнительныеСвойства)
	
	ЗапрашиваемыеДанные = Новый Структура;
	ЗапрашиваемыеДанные.Вставить("Ссылка");
	ЗапрашиваемыеДанные.Вставить("Период", "Дата");
	ЗапрашиваемыеДанные.Вставить("Организация");
	ЗапрашиваемыеДанные.Вставить("Склад");
	ЗапрашиваемыеДанные.Вставить("ИсточникФинансирования");
	ЗапрашиваемыеДанные.Вставить("Статус");
	
	ОсновныеДанныеДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
	ПроведениеБольничнаяАптека.ПолучитьСсылкуНаДокументДляПроведения(ДополнительныеСвойства),
	ЗапрашиваемыеДанные);
	
	Возврат ОсновныеДанныеДокумента;
	
КонецФункции

Функция ТекстЗапросаВтТаблицаТовары()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗаявкаНаЗакупкуТовары.НомерСтроки КАК НомерСтроки,
	|	&Организация КАК Организация,
	|	ЗаявкаНаЗакупкуТовары.КодСтроки КАК КодСтроки,
	|	ЗаявкаНаЗакупкуТовары.Номенклатура КАК Номенклатура,
	|	ЗаявкаНаЗакупкуТовары.НоменклатураЗаказа КАК НоменклатураЗаказа,
	|	ЗаявкаНаЗакупкуТовары.Количество КАК Количество,
	|	ЗаявкаНаЗакупкуТовары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ЗаявкаНаЗакупкуТовары.Цена КАК Цена,
	|	ЗаявкаНаЗакупкуТовары.Сумма КАК Сумма,
	|	ЗаявкаНаЗакупкуТовары.Отделение КАК Отделение
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	Документ.ЗаявкаНаЗакупку.Товары КАК ЗаявкаНаЗакупкуТовары
	|ГДЕ
	|	ЗаявкаНаЗакупкуТовары.Ссылка = &Ссылка
	|	И НЕ ЗаявкаНаЗакупкуТовары.Отменено";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаЗаказыПоставщикам()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	1                                       КАК Порядок,
	|	Товары.НомерСтроки                      КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)  КАК ВидДвижения,
	|	&Период                                 КАК Период,
	|	&Ссылка									КАК ЗаявкиНаЗакупку,
	|	Товары.НоменклатураЗаказа				КАК ОтборНоменклатуры,
	|	Товары.ЕдиницаИзмерения					КАК ЕдиницаИзмерения,
	|	Товары.НомерСтроки						КАК КодСтроки,
	|	Товары.Количество                       КАК Заказано,
	|	ВЫБОР КОГДА &Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовПоставщикам.КПоступлению),
	|						ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовПоставщикам.Закрыт)) ТОГДА
	|			Товары.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ                                   КАК КОформлению
	|ИЗ
	|	ТаблицаТовары КАК Товары
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти // Проведение

#Область КомандыФормы

// Заполняет список команд ввода на основании.
// 
// Параметры:
//   КомандыСоздатьНаОсновании - ТаблицаЗначений - Таблица команд для вывода в подменю. Для изменения.
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСоздатьНаОсновании, НастройкиФормы) Экспорт
	
	ВводНаОснованииБольничнаяАптека.ДобавитьКомандыСозданияНаОсновании(ПустаяСсылка().Метаданные().ПолноеИмя(), КомандыСоздатьНаОсновании, НастройкиФормы);
	
КонецПроцедуры

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица команд для вывода в подменю. Для изменения.
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, НастройкиФормы) Экспорт
	
	МенюОтчетыБольничнаяАптека.ДобавитьОбщиеКоманды(ПустаяСсылка().Метаданные().ПолноеИмя(), КомандыОтчетов, НастройкиФормы);
	
	Отчеты.СостояниеВыполненияДокументов.ДобавитьКомандуОтчета(КомандыОтчетов);
	
КонецПроцедуры

#КонецОбласти // КомандыФормы
