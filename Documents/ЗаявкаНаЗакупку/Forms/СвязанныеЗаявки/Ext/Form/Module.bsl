
&НаСервере
Процедура ОбновитьТаблицыНаСервере()
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьТаблицы(Команда)
	ОбновитьТаблицыНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//Если Параметры.Заявки.Количество() > 0 Тогда
		
		ЗаполнитьЗаявки(Параметры.Заявки);
		
	//ИначеЕсли Параметры.Требования.Количество() > 0 Тогда
		
		ЗаполнитьТребования(Параметры.Требования);

	//КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьТипСписка(СтрокаТаблицы,ИмяРек ="Заявки")
	
	Типы = ?(ИмяРек ="Заявки","ДокументСсылка.ЗаявкаНаЗакупку","ДокументСсылка.ТребованиеОтделения");
	СтрокаТаблицы[ИмяРек].ТипЗначения = Новый ОписаниеТипов(Типы);
	
КонецПроцедуры	

&НаСервере
Процедура ЗаполнитьТребования(СписокТреб)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылки", СписокТреб);
	
	//Для Каждого СтрСЗ из СписокТреб Цикл
	//		Запрос.Параметры.Ссылки.Добавить(СтрСЗ.Значение);
	//КонецЦикла;	
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗаявкаНаЗакупкуТовары.ТребованиеОтделения КАК Требование,
	|	ЗаявкаНаЗакупкуТовары.Ссылка КАК Заявка
	|ИЗ
	|	Документ.ЗаявкаНаЗакупку.Товары КАК ЗаявкаНаЗакупкуТовары
	|ГДЕ
	|	ЗаявкаНаЗакупкуТовары.ТребованиеОтделения <> ЗНАЧЕНИЕ(Документ.ТребованиеОтделения.ПустаяСсылка)
	|	И ЗаявкаНаЗакупкуТовары.ТребованиеОтделения В(&Ссылки)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Редупликатор = Новый Соответствие;
	Пока Выборка.Следующий() Цикл
		СтрокаТЗ = Редупликатор.Получить(Выборка.Заявка);
		Если СтрокаТЗ = Неопределено Тогда
			СтрокаТЗ = ТаблицаЗаявки.Добавить();
			ИнициализироватьТипСписка(СтрокаТЗ,"Требования");
			Редупликатор.Вставить(Выборка.Заявка,СтрокаТЗ);
			СтрокаТЗ.Заявка =  Выборка.Заявка;
		КонецЕсли;
		СтрокаТЗ.Требования.Добавить(Выборка.Требование);

		СтрокаТЗ = Редупликатор.Получить(Выборка.Требование);
		Если СтрокаТЗ = Неопределено Тогда
			СтрокаТЗ = ТаблицаТребования.Добавить();
			ИнициализироватьТипСписка(СтрокаТЗ);
			Редупликатор.Вставить(Выборка.Требование,СтрокаТЗ);
			СтрокаТЗ.Требование =  Выборка.Требование;
		КонецЕсли;
		СтрокаТЗ.Заявки.Добавить(Выборка.Заявка);
	КонецЦикла;	
	//ТаблицаТребования.Загрузить(Запрос.Выполнить().Выгрузить());
	//Для Каждого СтрСЗ из ТаблицаТребования Цикл
	//	Если Редупликатор.Получить(СтрСЗ.Заявка) = Неопределено Тогда
	//		Редупликатор.Вставить(СтрСЗ.Заявка,Истина);;
	//		НовСтр = ТаблицаЗаявки.Добавить();
	//		НовСтр.Заявка = СтрСЗ.Заявка;
	//	КонецЕсли;	
	//КонецЦикла;
	
	//Сок 2022 05 18
	Если ТаблицаТребования.Количество()=0 Тогда
		Треб = Новый СпиСокЗначений;
		Для Каждого Стр Из ТаблицаЗаявки Цикл
			Треб.Добавить(Стр.Заявка);
		КонецЦикла;
		Запрос = Новый Запрос;
		Запрос.Текст =  "ВЫБРАТЬ РАЗЛИЧНЫЕ
						|	ЗаявкаНаЗакупкуДокументыОснований.Основание.Ссылка КАК ОснованиеСсылка
						|ИЗ
						|	Документ.ЗаявкаНаЗакупку.ДокументыОснований КАК ЗаявкаНаЗакупкуДокументыОснований
						|ГДЕ
						|	ЗаявкаНаЗакупкуДокументыОснований.Ссылка В(&Ссылки)";
		Запрос.УстановитьПараметр("Ссылки", Треб);
		Выборка = Запрос.Выполнить().Выбрать();
		
		//Запрос.Выполнить().Выгрузить().Количество()
		Пока Выборка.Следующий() Цикл
			Стр = ТаблицаТребования.Добавить();
			Стр.Требование = Выборка.ОснованиеСсылка;
		КонецЦикла;
	КонецЕсли;
	//Сок
КонецПроцедуры	

&НаСервере
Процедура ЗаполнитьЗаявки(СписокЗаявок)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылки", Новый Массив);
	Редупликатор = Новый Соответствие;
	
	Для Каждого СтрСЗ из СписокЗаявок Цикл
		Если Редупликатор.Получить(СтрСЗ.Значение) = Неопределено Тогда
			Редупликатор.Вставить(СтрСЗ.Значение,Истина);
			Запрос.Параметры.Ссылки.Добавить(СтрСЗ.Значение);
			НовСтр = ТаблицаЗаявки.Добавить();
			НовСтр.Заявка = СтрСЗ.Значение;
		КонецЕсли;	
	КонецЦикла;	
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗаявкаНаЗакупкуТовары.Требование КАК Требование,
	|	ЗаявкаНаЗакупкуТовары.Ссылка КАК Заявка
	|ИЗ
	|	Документ.ЗаявкаНаЗакупку.Товары КАК ЗаявкаНаЗакупкуТовары
	|ГДЕ
	|	ЗаявкаНаЗакупкуТовары.Ссылка В(&Ссылки)
	|	И ЗаявкаНаЗакупкуТовары.ТребованиеОтделения <> ЗНАЧЕНИЕ(Документ.ТребованиеОтделения.ПустаяСсылка)";
	
	ТаблицаТребования.Загрузить(Запрос.Выполнить().Выгрузить());
	
	//Сок 2022 05 18
	
	Если ТаблицаЗаказы.Количество()=0 Тогда
		Запрос = Новый Запрос;
		Запрос.Текст="ВЫБРАТЬ
		             |	ЗаказПоставщику.Ссылка КАК Ссылка
		             |ИЗ
		             |	Документ.ЗаказПоставщику КАК ЗаказПоставщику
		             |ГДЕ
		             |	ЗаказПоставщику.ЗаявкаНаЗакупку В(&Ссылки)";
		Запрос.УстановитьПараметр("Ссылки",СписокЗаявок);
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			Стр = ТаблицаЗаказы.Добавить();
			Стр.Заказ = Выборка.Ссылка;
		КонецЦикла;
	КонецЕсли;
	//Сок
	
КонецПроцедуры	

&НаКлиенте
Процедура ТаблицаТребованияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	СтрокаТЗ = Элемент.ДанныеСтроки(ВыбраннаяСтрока);
	ПоказатьЗначение(,СтрокаТЗ.Требование);
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаЗаявкиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	СтрокаТЗ = Элемент.ДанныеСтроки(ВыбраннаяСтрока);
	ПоказатьЗначение(,СтрокаТЗ.Заявка);
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаЗаказыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	СтрокаТЗ = Элемент.ДанныеСтроки(ВыбраннаяСтрока);
	ПоказатьЗначение(,СтрокаТЗ.Заказ);
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПриАктивизацииСтроки(Элемент)
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		Если Элемент.Имя = "ТаблицаЗаявки" Тогда
			ТекущаяЗаявка = Элемент.ТекущиеДанные.Заявка; 
			ПодключитьОбработчикОжидания("ПереключательКартинок",0.5,Истина);
		ИначеЕсли Элемент.Имя = "ТаблицаТребования" Тогда
			ТекущаяЗаявка = Элемент.ТекущиеДанные.Требование; 
			ПодключитьОбработчикОжидания("ПереключательКартинок",0.5,Истина);
		КонецЕсли;	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПереключательКартинок()
	ПоискТреб = ТипЗнч(ТекущаяЗаявка) = Тип("ДокументСсылка.ТребованиеОтделения");
	ПоискЗаявок = ТипЗнч(ТекущаяЗаявка) = Тип("ДокументСсылка.ЗаявкаНаЗакупку");
	Для Каждого СтрТЗ из ТаблицаЗаказы Цикл
		//СтрТЗ.ТекущаяЗаявка = 1;
		//Если ПоискТреб И СтрТЗ.Требования.НайтиПоЗначению(ТекущаяЗаявка)<>Неопределено Тогда
		//	СтрТЗ.ТекущаяЗаявка = 0;
		//КонецЕсли;
		//Если ПоискЗаявок И СтрТЗ.Заявка = ТекущаяЗаявка Тогда
		//	СтрТЗ.ТекущаяЗаявка = 0;
		//КонецЕсли;
	КонецЦикла;
	
	ИдентСтрТЗ = Неопределено;
	Для Каждого СтрТЗ из ТаблицаЗаявки Цикл
		СтрТЗ.ТекущаяЗаявка = 1;
		Если ПоискТреб И СтрТЗ.Требования.НайтиПоЗначению(ТекущаяЗаявка)<>Неопределено Тогда
			СтрТЗ.ТекущаяЗаявка = 0;     
			ИдентСтрТЗ = СтрТЗ.ПолучитьИдентификатор(); 
		КонецЕсли;
		Если ПоискЗаявок И СтрТЗ.Заявка = ТекущаяЗаявка Тогда
			СтрТЗ.ТекущаяЗаявка = 0;
		КонецЕсли;
	КонецЦикла;
	
	Если ИдентСтрТЗ <> Неопределено Тогда
		Элементы.ТаблицаТребования.ТекущаяСтрока = ИдентСтрТЗ;
		Попытка	
			ОтключитьОбработчикОжидания("ПереключательКартинок");
		Исключение
		КонецПопытки;
	КонецЕсли;
	
	ИдентСтрТЗ = Неопределено;
	Для Каждого СтрТЗ из ТаблицаТребования Цикл
		СтрТЗ.ТекущаяЗаявка = 1;
		Если ПоискТреб И СтрТЗ.Требование = ТекущаяЗаявка Тогда
			СтрТЗ.ТекущаяЗаявка = 0;
		КонецЕсли;
		Если ПоискЗаявок И СтрТЗ.Заявки.НайтиПоЗначению(ТекущаяЗаявка)<>Неопределено Тогда
			СтрТЗ.ТекущаяЗаявка = 0;   
			ИдентСтрТЗ = СтрТЗ.ПолучитьИдентификатор(); 
		КонецЕсли;
	КонецЦикла;
	
	Если ИдентСтрТЗ <> Неопределено Тогда
		Элементы.ТаблицаТребования.ТекущаяСтрока = ИдентСтрТЗ;
		Попытка	
			ОтключитьОбработчикОжидания("ПереключательКартинок");
		Исключение
		КонецПопытки;
	КонецЕсли;
	
КонецПроцедуры	

&НаКлиенте
Процедура ТаблицаПриАктивизацииЯчейки(Элемент)
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		Если Элемент.Имя = "ТаблицаЗаявки" Тогда
			ТекущаяЗаявка = Элемент.ТекущиеДанные.Заявка; 
			ПодключитьОбработчикОжидания("ПереключательКартинок",0.5,Истина);
		ИначеЕсли Элемент.Имя = "ТаблицаТребования" Тогда
			ТекущаяЗаявка = Элемент.ТекущиеДанные.Требование; 
			ПодключитьОбработчикОжидания("ПереключательКартинок",0.5,Истина);
		КонецЕсли;	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПриАктивизацииПоля(Элемент)
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		Если Элемент.Имя = "ТаблицаЗаявки" Тогда
			ТекущаяЗаявка = Элемент.ТекущиеДанные.Заявка; 
			ПодключитьОбработчикОжидания("ПереключательКартинок",0.5,Истина);
		ИначеЕсли Элемент.Имя = "ТаблицаТребования" Тогда
			ТекущаяЗаявка = Элемент.ТекущиеДанные.Требование; 
			ПодключитьОбработчикОжидания("ПереключательКартинок",0.5,Истина);
		КонецЕсли;	
	КонецЕсли;
КонецПроцедуры

//&НаСервере
//Процедура ПереключательКартинок()
//	
//КонецПроцедуры	

