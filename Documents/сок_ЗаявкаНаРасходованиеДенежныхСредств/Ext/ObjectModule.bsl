Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	Движения.сок_Взаиморасчеты.Очистить();
	Движения.сок_ГрафикПлатежей.Очистить();
	Если ЭтотОбъект.Оплаты.Итог("сумма")>0 Тогда
		Движение=Движения.сок_Взаиморасчеты.Добавить();
		Движение.ВидДвижения=ВидДвиженияНакопления.Расход;
		Движение.ДоговорКонтрагента=ЭтотОбъект.ДоговорКонтрагента;
		Движение.Контрагент=ЭтотОбъект.Контрагент;
		Движение.Период=Дата;
		Движение.Регистратор=Ссылка;
		Движение.Сумма=ЭтотОбъект.Оплаты.Итог("сумма");
	КонецЕсли;
	
	Если ЭтотОбъект.СуммаДокумента-ЭтотОбъект.Оплаты.Итог("сумма")>0 Тогда
		Движение=Движения.сок_ГрафикПлатежей.Добавить();
		Движение.ДатаОплаты=ЭтотОбъект.ДатаОплатыПлан;
		Движение.ЗаявкаНаРасходованиеДенежныхСредств=Ссылка;
		Движение.ДоговорКонтрагента=ЭтотОбъект.ДоговорКонтрагента;
		Движение.Контрагент=ЭтотОбъект.Контрагент;
		Движение.Период=Дата;
		Движение.Регистратор=Ссылка;
		Движение.Сумма=ЭтотОбъект.СуммаДокумента;
	КонецЕсли;	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	//Если ЭтотОбъект.Отправлена Тогда
	//	Отказ = Истина;
	//	Возврат;	
	//КонецЕсли;	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если Ложь Тогда ДанныеЗаполнения=Документы.ПоступлениеТоваров.СоздатьДокумент(); КонецЕсли;
		
	Если ТипЗнч(ДанныеЗаполнения)=Тип("ДокументСсылка.ЗаказПоставщику") Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект,ДанныеЗаполнения,,"Номер,Дата,ПометкаУдаления");
		ЭтотОбъект.ЗаказПоставщику=ДанныеЗаполнения.Ссылка;
		ЭтотОбъект.ДокументОснование=ДанныеЗаполнения.Ссылка;
		ЭтотОбъект.ДатаОплатыПлан=ДанныеЗаполнения.Дата;
	ИначеЕсли ТипЗнч(ДанныеЗаполнения)=Тип("ДокументСсылка.ПоступлениеТоваров") Тогда	
		ЗаполнитьЗначенияСвойств(ЭтотОбъект,ДанныеЗаполнения,,"Номер,Дата,ПометкаУдаления");
		ЭтотОбъект.ЗаказПоставщику=ДанныеЗаполнения.Ссылка.ЗаказПоставщику;
		ЭтотОбъект.ДокументОснование=ДанныеЗаполнения.Ссылка;
		ЭтотОбъект.ДатаОплатыПлан=ДанныеЗаполнения.Дата+ЭтотОбъект.ДоговорКонтрагента.ДнейОтсрочки*86400;
		ЭтотОбъект.ВидЗаявки=пЕРЕЧИСЛЕНИЯ.сок_ВидЗаявкиАвансКредит.Кредит;
	Иначе
		Возврат;
	КонецЕсли;	  
	
	ТЗ=ДанныеЗаполнения.Товары.Выгрузить(,"Сумма,СтавкаНДС,СуммаНДС");
	ТЗ.Свернуть("СтавкаНДС","Сумма,СуммаНДС");
	РасшифровкаПлатежа.Очистить();
	Для Каждого Стр из ТЗ Цикл
		СтрДок=РасшифровкаПлатежа.Добавить();
		СтрДок.Сумма=Стр.Сумма+?(ДанныеЗаполнения.ЦенаВключаетНДС,0,Стр.СуммаНДС);
		СтрДок.СуммаНДС=Стр.СуммаНДС;
		СтрДок.СтавкаНДС=Стр.СтавкаНДС;
	КонецЦикла;	
	ЭтотОбъект.СуммаДокумента=РасшифровкаПлатежа.Итог("Сумма");
	ЭтотОбъект.Ответственный=ПараметрыСеанса.ТекущийПользователь;
	
	
	ЭтотОбъект.БанковскийСчетКонтрагента=?(ЗначениеЗаполнено(ДанныеЗаполнения.БанковскийСчетКонтрагента),ДанныеЗаполнения.БанковскийСчетКонтрагента,ДанныеЗаполнения.Контрагент.ОсновнойБанковскийСчет);
	сок_Сервер.УстановитьНазначениеПлатежа(ЭтотОбъект);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	ЭтотОбъект.СуммаДокумента=ЭтотОбъект.РасшифровкаПлатежа.Итог("Сумма");
	ЭтотОбъект.СуммаНДСДокумента=ЭтотОбъект.РасшифровкаПлатежа.Итог("СуммаНДС");
	ЭтотОбъект.СуммаОплатыФакт=ЭтотОбъект.Оплаты.Итог("Сумма");
	
КонецПроцедуры



