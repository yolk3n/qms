#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС
#Область ПрограммныйИнтерфейс

// Имена реквизитов, от значений которых зависят параметры учета номенклатуры
//
// Возвращаемое значение:
//   Строка - имена реквизитов, перечисленные через запятую
//
Функция ИменаРеквизитовДляЗаполненияПараметровУчетаНоменклатуры() Экспорт
	
	Возврат "СкладОтправитель, СкладПолучатель, Статус";
	
КонецФункции

// Возвращает параметры учета для номенклатуры, указанной в документе
//
// Параметры
//   Объект - Структура - структура значений реквизитов объекта, необходимых для заполнения параметров указания серий
// Возвращаемое значение
//   Структура - Состав полей задается в функции НоменклатураКлиентСервер.ПараметрыУчетаНоменклатуры
//
Функция ПараметрыУчетаНоменклатуры(Объект) Экспорт
	
	ПараметрыУчета = ЗапасыСервер.ПараметрыУчетаНоменклатуры();
	ПараметрыУчета.ПолноеИмяОбъекта = ПустаяСсылка().Метаданные().ПолноеИмя();
	
	ПараметрыУчетаНаСкладе = СкладыСервер.ПараметрыУчетаНоменклатуры(Объект.СкладОтправитель);
	ПараметрыУчетаНаСкладеПолучателе = СкладыСервер.ПараметрыУчетаНоменклатуры(Объект.СкладПолучатель);
	
	ПараметрыУчета.ИспользоватьСерии =
		ПараметрыУчетаНаСкладе.ИспользоватьСерииНоменклатуры
		Или (ПараметрыУчетаНаСкладеПолучателе.ИспользоватьСерииНоменклатуры И Объект.Статус <> Перечисления.СтатусыПеремещенийТоваров.КОтгрузке);
	ПараметрыУчета.ИспользоватьПартии =
		ПараметрыУчетаНаСкладе.ИспользоватьПартии
		Или (ПараметрыУчетаНаСкладеПолучателе.ИспользоватьПартии И Объект.Статус <> Перечисления.СтатусыПеремещенийТоваров.КОтгрузке);
		
	ПараметрыУчета.Склад = Новый Структура("Отправитель, Получатель", Объект.СкладОтправитель, Объект.СкладПолучатель);
	
	ПараметрыУчета.ЭтоПеремещениеМеждуСкладами = Истина;
	ПараметрыУчета.Отгружено = (Объект.Статус <> Перечисления.СтатусыПеремещенийТоваров.КОтгрузке);
	
	ПараметрыУчета.СуффиксыСтатусов.Добавить("");
	ПараметрыУчета.СуффиксыСтатусов.Добавить("Отправитель");
	ПараметрыУчета.СуффиксыСтатусов.Добавить("Получатель");
	
	Возврат ПараметрыУчета;
	
КонецФункции

// Возвращает текст запроса для расчета статусов указания параметров учета номенклатуры
//
// Параметры
//   ПараметрыУчетаНоменклатуры - Структура - состав полей задается в функции ЗапасыСервер.ПараметрыУчетаНоменклатуры
//
// Возвращаемое значение
//   Строка - текст запроса
//
Функция ТекстЗапросаРасчетаСтатусовУчетаНоменклатуры(ПараметрыУчетаНоменклатуры) Экспорт
	
	Возврат ЗапасыСервер.ТекстЗапросаРасчетаСтатусовУчетаНоменклатуры(ПараметрыУчетаНоменклатуры);
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	И ( ЗначениеРазрешено(СкладПолучатель) И ЗначениеРазрешено(ПодразделениеОрганизации) И Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыПеремещенийТоваров.КОтгрузке)
	|		ИЛИ ЗначениеРазрешено(СкладОтправитель) И ЗначениеРазрешено(Отделение))
	|";
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти // ПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

////////////////////////////////////////////////////////////////////////////////
// Проведение
#Область Проведение

// Инициализирует таблицы значений, содержащие данные для проведения документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицыДвиженийДляПроведения(ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	ОсновныеДанныеДокумента = ПодготовитьОсновныеДанныеДляПроведения(ДополнительныеСвойства);
	
	Если ОсновныеДанныеДокумента.Принято Тогда
		
		ИнициализироватьКлючиАналитикиВидаУчета(ОсновныеДанныеДокумента);
		ИнициализироватьКлючиАналитикиУчетаНоменклатуры(ОсновныеДанныеДокумента);
		
	КонецЕсли;
	
	ПроведениеБольничнаяАптека.ДобавитьТекстЗапросаДвижений(ДополнительныеСвойства, ТекстЗапросаВтТаблицаТовары());
	ПроведениеБольничнаяАптека.ДобавитьТекстЗапросаДвижений(ДополнительныеСвойства, ТекстЗапросаТоварыНаСкладахВОтделениях(), Метаданные.РегистрыНакопления.ТоварыНаСкладахВОтделениях);
	ПроведениеБольничнаяАптека.ДобавитьТекстЗапросаДвижений(ДополнительныеСвойства, ТекстЗапросаТоварыНаСкладах(), Метаданные.РегистрыНакопления.ТоварыНаСкладах);
	ПроведениеБольничнаяАптека.ДобавитьТекстЗапросаДвижений(ДополнительныеСвойства, ТекстЗапросаСвободныеОстатки(), Метаданные.РегистрыНакопления.СвободныеОстатки);
	ПроведениеБольничнаяАптека.ДобавитьТекстЗапросаДвижений(ДополнительныеСвойства, ТекстЗапросаВтАналитика());
	ПроведениеБольничнаяАптека.ДобавитьТекстЗапросаДвижений(ДополнительныеСвойства, ТекстЗапросаСебестоимостьТоваров(), Метаданные.РегистрыНакопления.СебестоимостьТоваров);
	ПроведениеБольничнаяАптека.ДобавитьТекстЗапросаДвижений(ДополнительныеСвойства, ТекстЗапросаДвиженияНоменклатураНоменклатура(), Метаданные.РегистрыНакопления.ДвиженияНоменклатураНоменклатура);
	
	Запрос = Новый Запрос(ПроведениеБольничнаяАптека.ПолучитьТекстЗапросаДвижений(ДополнительныеСвойства, Регистры));
	
	Для Каждого ДанныеДокумента Из ОсновныеДанныеДокумента Цикл
		Запрос.УстановитьПараметр(ДанныеДокумента.Ключ, ДанныеДокумента.Значение);
	КонецЦикла;
	
	ПроведениеБольничнаяАптека.ЗаполнитьТаблицыДвижений(ДополнительныеСвойства, Запрос.ВыполнитьПакет(), Регистры);
	
КонецПроцедуры

Функция ПодготовитьОсновныеДанныеДляПроведения(ДополнительныеСвойства)
	
	ЗапрашиваемыеДанные = Новый Структура;
	ЗапрашиваемыеДанные.Вставить("Ссылка");
	ЗапрашиваемыеДанные.Вставить("Период", "Дата");
	ЗапрашиваемыеДанные.Вставить("Организация");
	ЗапрашиваемыеДанные.Вставить("СкладОтправитель");
	ЗапрашиваемыеДанные.Вставить("СкладПолучатель");
	ЗапрашиваемыеДанные.Вставить("Отделение");
	ЗапрашиваемыеДанные.Вставить("ПодразделениеОрганизации");
	ЗапрашиваемыеДанные.Вставить("Статус");
	ЗапрашиваемыеДанные.Вставить(
		"Отгружено",
		"ВЫБОР
		|	КОГДА Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПеремещенийТоваров.Отгружено)
		|			ИЛИ Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПеремещенийТоваров.Принято)
		|		ТОГДА ИСТИНА
		|	ИНАЧЕ ЛОЖЬ
		|КОНЕЦ");
	ЗапрашиваемыеДанные.Вставить(
		"Принято",
		"ВЫБОР
		|	КОГДА Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПеремещенийТоваров.Принято)
		|		ТОГДА ИСТИНА
		|	ИНАЧЕ ЛОЖЬ
		|КОНЕЦ");
		
	ОсновныеДанныеДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
		ПроведениеБольничнаяАптека.ПолучитьСсылкуНаДокументДляПроведения(ДополнительныеСвойства),
		ЗапрашиваемыеДанные);
	
	ОсновныеДанныеДокумента.Вставить("ВестиУчетПоИсточникамФинансирования", ПолучитьФункциональнуюОпцию("ИспользоватьИсточникиФинансирования"));
	ОсновныеДанныеДокумента.Вставить("ИспользоватьМестаХранения", ПолучитьФункциональнуюОпцию("ИспользоватьМестаХранения", Новый Структура("Склад", ОсновныеДанныеДокумента.СкладОтправитель)));
	ОсновныеДанныеДокумента.Вставить("ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВозвратТоваровИзОтделения);
	
	ЗапасыСервер.ПриПодготовкеОсновныхДанныхДляПроведения(ДополнительныеСвойства, ОсновныеДанныеДокумента);
	
	Возврат ОсновныеДанныеДокумента;
	
КонецФункции

Функция ТекстЗапросаВтТаблицаТовары()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки                                                                КАК НомерСтроки,
	|	&Организация                                                                             КАК Организация,
	|	ВЫБОР
	|		КОГДА &ИспользоватьМестаХранения
	|			ТОГДА ТаблицаТовары.МестоХранения
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.МестаХранения.ПустаяСсылка)
	|	КОНЕЦ                                                                                    КАК МестоХранения,
	|	ТаблицаТовары.Номенклатура                                                               КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерийОтправитель В (&СтатусУчетПоСериям, &СтатусУчетСебестоимостиПоСериям)
	|			ТОГДА ТаблицаТовары.СерияНоменклатуры
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ                                                                                    КАК СерияНоменклатурыОтправитель,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерийПолучатель В (&СтатусУчетПоСериям, &СтатусУчетСебестоимостиПоСериям)
	|			ТОГДА ТаблицаТовары.СерияНоменклатуры
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ                                                                                    КАК СерияНоменклатурыПолучатель,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияПартийОтправитель В (&СтатусУчетПоПартиям, &СтатусУчетСебестоимостиПоПартиям)
	|			ТОГДА ТаблицаТовары.Партия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ                                                                                    КАК ПартияОтправитель,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияПартийПолучатель В (&СтатусУчетПоПартиям, &СтатусУчетСебестоимостиПоПартиям)
	|			ТОГДА ТаблицаТовары.Партия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ                                                                                    КАК ПартияПолучатель,
	|	ВЫБОР
	|		КОГДА &ВестиУчетПоИсточникамФинансирования
	|			ТОГДА ТаблицаТовары.ИсточникФинансирования
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИсточникиФинансирования.ПустаяСсылка)
	|	КОНЕЦ                                                                                    КАК ИсточникФинансирования,
	|	ТаблицаТовары.Количество                                                                 КАК Количество,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерийОтправитель В (&СтатусУчетСебестоимостиПоСериям)
	|			ТОГДА ТаблицаТовары.СерияНоменклатуры
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ                                                                                    КАК СерияНоменклатурыДляСебестоимостиОтправитель,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерийПолучатель В (&СтатусУчетСебестоимостиПоСериям)
	|			ТОГДА ТаблицаТовары.СерияНоменклатуры
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ                                                                                    КАК СерияНоменклатурыДляСебестоимостиПолучатель,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияПартийОтправитель В (&СтатусУчетСебестоимостиПоПартиям)
	|			ТОГДА ТаблицаТовары.Партия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ                                                                                    КАК ПартияДляСебестоимостиОтправитель,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияПартийПолучатель В (&СтатусУчетСебестоимостиПоПартиям)
	|			ТОГДА ТаблицаТовары.Партия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ                                                                                    КАК ПартияДляСебестоимостиПолучатель
	|ПОМЕСТИТЬ ВтТаблицаТовары
	|ИЗ
	|	Документ.ВозвратТоваровИзОтделения.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТоварыНаСкладахВОтделениях()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки                                     КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)                        КАК ВидДвижения,
	|	&Период                                                       КАК Период,
	|	ТаблицаТовары.Организация                                     КАК Организация,
	|	&СкладОтправитель                                             КАК Склад,
	|	ТаблицаТовары.МестоХранения                                   КАК МестоХранения,
	|	ТаблицаТовары.Номенклатура                                    КАК Номенклатура,
	|	ТаблицаТовары.СерияНоменклатурыОтправитель                    КАК СерияНоменклатуры,
	|	ТаблицаТовары.ПартияОтправитель                               КАК Партия,
	|	ТаблицаТовары.ИсточникФинансирования                          КАК ИсточникФинансирования,
	|	ТаблицаТовары.Количество                                      КАК Количество
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|
	|ГДЕ
	|	&Отгружено
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТоварыНаСкладах()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки                         КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)            КАК ВидДвижения,
	|	&Период                                           КАК Период,
	|	ТаблицаТовары.Организация                         КАК Организация,
	|	&СкладПолучатель                                  КАК Склад,
	|	ЗНАЧЕНИЕ(Справочник.МестаХранения.ПустаяСсылка)   КАК МестоХранения,
	|	ТаблицаТовары.Номенклатура                        КАК Номенклатура,
	|	ТаблицаТовары.СерияНоменклатурыПолучатель         КАК СерияНоменклатуры,
	|	ТаблицаТовары.ПартияПолучатель                    КАК Партия,
	|	ТаблицаТовары.ИсточникФинансирования              КАК ИсточникФинансирования,
	|	ТаблицаТовары.Количество                          КАК Количество
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ 
	|	&Принято
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаСвободныеОстатки()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	1                                                 КАК Порядок,
	|	ТаблицаТовары.НомерСтроки                         КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)            КАК ВидДвижения,
	|	&Период                                           КАК Период,
	|	ТаблицаТовары.Организация                         КАК Организация,
	|	&СкладОтправитель                                 КАК Склад,
	|	ТаблицаТовары.МестоХранения                       КАК МестоХранения,
	|	ТаблицаТовары.Номенклатура                        КАК Номенклатура,
	|	ТаблицаТовары.СерияНоменклатурыОтправитель        КАК СерияНоменклатуры,
	|	ТаблицаТовары.ПартияОтправитель                   КАК Партия,
	|	ТаблицаТовары.ИсточникФинансирования              КАК ИсточникФинансирования,
	|	0                                                 КАК ВНаличии,
	|	ТаблицаТовары.Количество                          КАК ВРезервеСоСклада
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПеремещенийТоваров.КОтгрузке)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2                                                 КАК Порядок,
	|	ТаблицаТовары.НомерСтроки                         КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)            КАК ВидДвижения,
	|	&Период                                           КАК Период,
	|	ТаблицаТовары.Организация                         КАК Организация,
	|	&СкладОтправитель                                 КАК Склад,
	|	ТаблицаТовары.МестоХранения                       КАК МестоХранения,
	|	ТаблицаТовары.Номенклатура                        КАК Номенклатура,
	|	ТаблицаТовары.СерияНоменклатурыОтправитель        КАК СерияНоменклатуры,
	|	ТаблицаТовары.ПартияОтправитель                   КАК Партия,
	|	ТаблицаТовары.ИсточникФинансирования              КАК ИсточникФинансирования,
	|	ТаблицаТовары.Количество                          КАК ВНаличии,
	|	0                                                 КАК ВРезервеСоСклада
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&Отгружено
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	3                                                 КАК Порядок,
	|	ТаблицаТовары.НомерСтроки                         КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)            КАК ВидДвижения,
	|	&Период                                           КАК Период,
	|	ТаблицаТовары.Организация                         КАК Организация,
	|	&СкладПолучатель                                  КАК Склад,
	|	ЗНАЧЕНИЕ(Справочник.МестаХранения.ПустаяСсылка)   КАК МестоХранения,
	|	ТаблицаТовары.Номенклатура                        КАК Номенклатура,
	|	ТаблицаТовары.СерияНоменклатурыПолучатель         КАК СерияНоменклатуры,
	|	ТаблицаТовары.ПартияПолучатель                    КАК Партия,
	|	ТаблицаТовары.ИсточникФинансирования              КАК ИсточникФинансирования,
	|	ТаблицаТовары.Количество                          КАК ВНаличии,
	|	0                                                 КАК ВРезервеСоСклада
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|
	|ГДЕ
	|	&Принято
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтАналитика()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТовары.Номенклатура                                                        КАК Номенклатура,
	|	ТаблицаТовары.СерияНоменклатурыДляСебестоимостиОтправитель                        КАК СерияНоменклатурыОтгружено,
	|	ТаблицаТовары.ПартияДляСебестоимостиОтправитель                                   КАК ПартияОтгружено,
	|	ТаблицаТовары.СерияНоменклатурыДляСебестоимостиПолучатель                         КАК СерияНоменклатурыПринято,
	|	ТаблицаТовары.ПартияДляСебестоимостиПолучатель                                    КАК ПартияПринято,
	|	ТаблицаТовары.ИсточникФинансирования                                              КАК ИсточникФинансирования,
	|	АналитикаУчетаНоменклатуры.КлючАналитики                                          КАК АналитикаУчетаНоменклатуры,
	|	АналитикаВидаУчета.КлючАналитики                                                  КАК АналитикаВидаУчета,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыВОтделениях)         КАК РазделУчета,
	|	АналитикаУчетаНоменклатурыПолучатель.КлючАналитики                                КАК АналитикаУчетаНоменклатурыПолучатель,
	|	АналитикаВидаУчетаПолучатель.КлючАналитики                                        КАК АналитикаВидаУчетаПолучатель,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)           КАК РазделУчетаПолучатель
	|ПОМЕСТИТЬ ВтАналитика
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
	|		ПО
	|			АналитикаУчетаНоменклатуры.Номенклатура        = ТаблицаТовары.Номенклатура
	|			И АналитикаУчетаНоменклатуры.СерияНоменклатуры = ТаблицаТовары.СерияНоменклатурыДляСебестоимостиОтправитель
	|			И АналитикаУчетаНоменклатуры.Партия            = ТаблицаТовары.ПартияДляСебестоимостиОтправитель
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаВидаУчета КАК АналитикаВидаУчета
	|		ПО
	|			АналитикаВидаУчета.Организация                = ТаблицаТовары.Организация
	|			И АналитикаВидаУчета.Склад                    = &СкладОтправитель
	|			И АналитикаВидаУчета.ИсточникФинансирования   = ТаблицаТовары.ИсточникФинансирования
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатурыПолучатель
	|		ПО
	|			АналитикаУчетаНоменклатурыПолучатель.Номенклатура        = ТаблицаТовары.Номенклатура
	|			И АналитикаУчетаНоменклатурыПолучатель.СерияНоменклатуры = ТаблицаТовары.СерияНоменклатурыДляСебестоимостиПолучатель
	|			И АналитикаУчетаНоменклатурыПолучатель.Партия            = ТаблицаТовары.ПартияДляСебестоимостиПолучатель
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаВидаУчета КАК АналитикаВидаУчетаПолучатель
	|		ПО
	|			АналитикаВидаУчетаПолучатель.Организация                = ТаблицаТовары.Организация
	|			И АналитикаВидаУчетаПолучатель.Склад                    = &СкладПолучатель
	|			И АналитикаВидаУчетаПолучатель.ИсточникФинансирования   = ТаблицаТовары.ИсточникФинансирования
	|
	|ГДЕ
	|	&Отгружено
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаСебестоимостьТоваров()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	1                                                   КАК Порядок,
	|	ТаблицаТовары.НомерСтроки                           КАК НомерСтроки,
	|	&Период                                             КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)              КАК ВидДвижения,
	|	Аналитика.АналитикаУчетаНоменклатуры                КАК АналитикаУчетаНоменклатуры,
	|	Аналитика.АналитикаВидаУчета                        КАК АналитикаВидаУчета,
	|	Аналитика.РазделУчета                               КАК РазделУчета,
	|	ТаблицаТовары.Количество                            КАК Количество,
	|	&ХозяйственнаяОперация                              КАК ХозяйственнаяОперация,
	|	&Ссылка                                             КАК ДокументДвижения,
	|	Аналитика.АналитикаУчетаНоменклатурыПолучатель      КАК КорАналитикаУчетаНоменклатуры,
	|	Аналитика.АналитикаВидаУчетаПолучатель              КАК КорАналитикаВидаУчета,
	|	Аналитика.РазделУчетаПолучатель                     КАК КорРазделУчета,
	|	ТаблицаТовары.Количество                            КАК КорКоличество
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			ВтАналитика КАК Аналитика
	|		ПО
	|			ТаблицаТовары.Номенклатура                                   = Аналитика.Номенклатура
	|			И ТаблицаТовары.СерияНоменклатурыДляСебестоимостиОтправитель = Аналитика.СерияНоменклатурыОтгружено
	|			И ТаблицаТовары.ПартияДляСебестоимостиОтправитель            = Аналитика.ПартияОтгружено
	|			И ТаблицаТовары.СерияНоменклатурыДляСебестоимостиПолучатель  = Аналитика.СерияНоменклатурыПринято
	|			И ТаблицаТовары.ПартияДляСебестоимостиПолучатель             = Аналитика.ПартияПринято
	|			И ТаблицаТовары.ИсточникФинансирования                       = Аналитика.ИсточникФинансирования
	|ГДЕ
	|	&Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыПеремещенийТоваров.КОтгрузке)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2                                                   КАК Порядок,
	|	ТаблицаТовары.НомерСтроки                           КАК НомерСтроки,
	|	&Период                                             КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)              КАК ВидДвижения,
	|	Аналитика.АналитикаУчетаНоменклатурыПолучатель      КАК АналитикаУчетаНоменклатуры,
	|	Аналитика.АналитикаВидаУчетаПолучатель              КАК АналитикаВидаУчета,
	|	Аналитика.РазделУчетаПолучатель                     КАК РазделУчета,
	|	ТаблицаТовары.Количество                            КАК Количество,
	|	&ХозяйственнаяОперация                              КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО                                        КАК ДокументДвижения,
	|	НЕОПРЕДЕЛЕНО                                        КАК КорАналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО                                        КАК КорАналитикаВидаУчета,
	|	НЕОПРЕДЕЛЕНО                                        КАК КорРазделУчета,
	|	0                                                   КАК КорКоличество
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			ВтАналитика КАК Аналитика
	|		ПО
	|			ТаблицаТовары.Номенклатура                                   = Аналитика.Номенклатура
	|			И ТаблицаТовары.СерияНоменклатурыДляСебестоимостиОтправитель = Аналитика.СерияНоменклатурыОтгружено
	|			И ТаблицаТовары.ПартияДляСебестоимостиОтправитель            = Аналитика.ПартияОтгружено
	|			И ТаблицаТовары.СерияНоменклатурыДляСебестоимостиПолучатель  = Аналитика.СерияНоменклатурыПринято
	|			И ТаблицаТовары.ПартияДляСебестоимостиПолучатель             = Аналитика.ПартияПринято
	|			И ТаблицаТовары.ИсточникФинансирования                       = Аналитика.ИсточникФинансирования
	|ГДЕ
	|	&Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыПеремещенийТоваров.КОтгрузке)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаДвиженияНоменклатураНоменклатура()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки                           КАК НомерСтроки,
	|	&Период                                             КАК Период,
	|	&ХозяйственнаяОперация                              КАК ХозяйственнаяОперация,
	|	Аналитика.АналитикаВидаУчета                        КАК АналитикаВидаУчета,
	|	Аналитика.АналитикаУчетаНоменклатуры                КАК АналитикаУчетаНоменклатуры,
	|	Аналитика.АналитикаВидаУчетаПолучатель              КАК КорАналитикаВидаУчета,
	|	Аналитика.АналитикаУчетаНоменклатурыПолучатель      КАК КорАналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.Количество                            КАК Количество,
	|	ТаблицаТовары.Количество                            КАК КорКоличество,
	|	&Ссылка                                             КАК ДокументДвижения
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			ВтАналитика КАК Аналитика
	|		ПО
	|			ТаблицаТовары.Номенклатура                                   = Аналитика.Номенклатура
	|			И ТаблицаТовары.СерияНоменклатурыДляСебестоимостиОтправитель = Аналитика.СерияНоменклатурыОтгружено
	|			И ТаблицаТовары.ПартияДляСебестоимостиОтправитель            = Аналитика.ПартияОтгружено
	|			И ТаблицаТовары.СерияНоменклатурыДляСебестоимостиПолучатель  = Аналитика.СерияНоменклатурыПринято
	|			И ТаблицаТовары.ПартияДляСебестоимостиПолучатель             = Аналитика.ПартияПринято
	|			И ТаблицаТовары.ИсточникФинансирования                       = Аналитика.ИсточникФинансирования
	|ГДЕ
	|	&Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыПеремещенийТоваров.КОтгрузке)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ИнициализироватьКлючиАналитикиУчетаНоменклатуры(Реквизиты)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерийОтправитель В (&СтатусУчетСебестоимостиПоСериям)
	|			ТОГДА ТаблицаТовары.СерияНоменклатуры
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК СерияНоменклатуры,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияПартийОтправитель В (&СтатусУчетСебестоимостиПоПартиям)
	|			ТОГДА ТаблицаТовары.Партия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК Партия
	|ПОМЕСТИТЬ втТаблицаАналитики
	|ИЗ
	|	Документ.ВозвратТоваровИзОтделения.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &Отгружено
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТовары.Номенклатура,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерийПолучатель В (&СтатусУчетСебестоимостиПоСериям)
	|			ТОГДА ТаблицаТовары.СерияНоменклатуры
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК СерияНоменклатуры,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияПартийПолучатель В (&СтатусУчетСебестоимостиПоПартиям)
	|			ТОГДА ТаблицаТовары.Партия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК Партия
	|ИЗ
	|	Документ.ВозвратТоваровИзОтделения.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &Отгружено
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	СерияНоменклатуры,
	|	Партия
	|";
	
	Запрос.УстановитьПараметр("Ссылка", Реквизиты.Ссылка);
	Запрос.УстановитьПараметр("Отгружено", Реквизиты.Отгружено);
	Запрос.УстановитьПараметр("Принято", Реквизиты.Принято);
	Запрос.УстановитьПараметр("СтатусУчетСебестоимостиПоСериям", Реквизиты.СтатусУчетСебестоимостиПоСериям);
	Запрос.УстановитьПараметр("СтатусУчетСебестоимостиПоПартиям", Реквизиты.СтатусУчетСебестоимостиПоПартиям);
	Запрос.Выполнить();
	
	Справочники.КлючиАналитикиУчетаНоменклатуры.ИнициализироватьКлючиАналитики(Запрос.МенеджерВременныхТаблиц);
	
КонецПроцедуры

Процедура ИнициализироватьКлючиАналитикиВидаУчета(Реквизиты)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Организация КАК Организация,
	|	&СкладПолучатель КАК Склад,
	|	ВЫБОР
	|		КОГДА &ВестиУчетПоИсточникамФинансирования
	|			ТОГДА ТаблицаТовары.ИсточникФинансирования
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИсточникиФинансирования.ПустаяСсылка)
	|	КОНЕЦ КАК ИсточникФинансирования
	|ПОМЕСТИТЬ втТаблицаАналитики
	|ИЗ
	|	Документ.ВозвратТоваровИзОтделения.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &Отгружено
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Организация,
	|	&СкладОтправитель,
	|	ВЫБОР
	|		КОГДА &ВестиУчетПоИсточникамФинансирования
	|			ТОГДА ТаблицаТовары.ИсточникФинансирования
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИсточникиФинансирования.ПустаяСсылка)
	|	КОНЕЦ
	|ИЗ
	|	Документ.ВозвратТоваровИзОтделения.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &Отгружено
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Склад,
	|	ИсточникФинансирования
	|";
	
	Запрос.УстановитьПараметр("Ссылка", Реквизиты.Ссылка);
	Запрос.УстановитьПараметр("Организация", Реквизиты.Организация);
	Запрос.УстановитьПараметр("СкладОтправитель", Реквизиты.СкладОтправитель);
	Запрос.УстановитьПараметр("СкладПолучатель", Реквизиты.СкладПолучатель);
	Запрос.УстановитьПараметр("ВестиУчетПоИсточникамФинансирования", Реквизиты.ВестиУчетПоИсточникамФинансирования);
	Запрос.УстановитьПараметр("Отгружено", Реквизиты.Отгружено);
	Запрос.УстановитьПараметр("Принято", Реквизиты.Принято);
	Запрос.Выполнить();
	
	Справочники.КлючиАналитикиВидаУчета.ИнициализироватьКлючиАналитики(Запрос.МенеджерВременныхТаблиц);
	
КонецПроцедуры

#КонецОбласти // Проведение

////////////////////////////////////////////////////////////////////////////////
// Электронная подпись
#Область ЭлектроннаяПодпись

// Возвращает описание ключевых полей для подписи.
//
// Возвращаемое значение:
//  Структура - описание ключевых полей см. ЭлектроннаяПодписьБольничнаяАптека.ПустоеОписаниеКлючевыхПолей().
//
Функция ОписаниеКлючевыхПолей(Версия = Неопределено) Экспорт
	
	МетаданныеОбъекта = ПустаяСсылка().Метаданные();
	
	ОписаниеКлючевыхПолей = ЭлектроннаяПодписьБольничнаяАптека.ПустоеОписаниеКлючевыхПолей();
	
	СтандартныеРеквизиты = МетаданныеОбъекта.СтандартныеРеквизиты;
	ЭлектроннаяПодписьБольничнаяАптека.ДобавитьОписаниеРеквизита(ОписаниеКлючевыхПолей, СтандартныеРеквизиты.Номер.Имя);
	ЭлектроннаяПодписьБольничнаяАптека.ДобавитьОписаниеРеквизита(ОписаниеКлючевыхПолей, СтандартныеРеквизиты.Дата.Имя);
	
	ПоляШапки = МетаданныеОбъекта.Реквизиты;
	ЭлектроннаяПодписьБольничнаяАптека.ДобавитьОписаниеРеквизита(ОписаниеКлючевыхПолей, ПоляШапки.Организация.Имя);
	ЭлектроннаяПодписьБольничнаяАптека.ДобавитьОписаниеРеквизита(ОписаниеКлючевыхПолей, ПоляШапки.Отделение.Имя);
	ЭлектроннаяПодписьБольничнаяАптека.ДобавитьОписаниеРеквизита(ОписаниеКлючевыхПолей, ПоляШапки.СкладОтправитель.Имя);
	ЭлектроннаяПодписьБольничнаяАптека.ДобавитьОписаниеРеквизита(ОписаниеКлючевыхПолей, ПоляШапки.ПодразделениеОрганизации.Имя);
	ЭлектроннаяПодписьБольничнаяАптека.ДобавитьОписаниеРеквизита(ОписаниеКлючевыхПолей, ПоляШапки.СкладПолучатель.Имя);
	
	// Товары
	ИмяТаблицы = МетаданныеОбъекта.ТабличныеЧасти.Товары.Имя;
	ТаблицаТовары = ЭлектроннаяПодписьБольничнаяАптека.ДобавитьПустоеОписаниеТабличнойЧасти(ОписаниеКлючевыхПолей, ИмяТаблицы);
	
	ПоляТовары = МетаданныеОбъекта.ТабличныеЧасти.Товары.Реквизиты;
	ЭлектроннаяПодписьБольничнаяАптека.ДобавитьГруппируемоеПолеТабличнойЧасти(ТаблицаТовары, ПоляТовары.Номенклатура.Имя);
	ЭлектроннаяПодписьБольничнаяАптека.ДобавитьГруппируемоеПолеТабличнойЧасти(ТаблицаТовары, ПоляТовары.СерияНоменклатуры.Имя);
	ЭлектроннаяПодписьБольничнаяАптека.ДобавитьГруппируемоеПолеТабличнойЧасти(ТаблицаТовары, ПоляТовары.Партия.Имя);
	ЭлектроннаяПодписьБольничнаяАптека.ДобавитьГруппируемоеПолеТабличнойЧасти(ТаблицаТовары, ПоляТовары.ИсточникФинансирования.Имя);
	ЭлектроннаяПодписьБольничнаяАптека.ДобавитьГруппируемоеПолеТабличнойЧасти(ТаблицаТовары, ПоляТовары.ЕдиницаИзмерения.Имя);
	
	ЭлектроннаяПодписьБольничнаяАптека.ДобавитьПолеРесурсаТабличнойЧасти(ТаблицаТовары, ПоляТовары.КоличествоВЕдиницахИзмерения.Имя);
	ЭлектроннаяПодписьБольничнаяАптека.ДобавитьПолеРесурсаТабличнойЧасти(ТаблицаТовары, ПоляТовары.Количество.Имя);
	
	Возврат ОписаниеКлючевыхПолей;
	
КонецФункции

#КонецОбласти // ЭлектроннаяПодпись

////////////////////////////////////////////////////////////////////////////////
// Печать
#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	УправлениеПечатьюБольничнаяАптека.ДобавитьКомандыПечати(ПустаяСсылка().Метаданные().ПолноеИмя(), КомандыПечати);
	
КонецПроцедуры

// Возвращает список доступных печатных форм документа
//
Функция ДоступныеПечатныеФормы() Экспорт
	
	ПечатныеФормы = УправлениеПечатьюБольничнаяАптека.СоздатьКоллекциюДоступныхПечатныхФорм();
	
	Обработки.ПечатьНакладнаяНаПеремещение.ДобавитьПечатнуюФорму(ПечатныеФормы);
	
	// ТребованиеНакладная0504204
	ПечатнаяФорма = Обработки.ПечатьТребованиеНакладная0504204.ДобавитьПечатнуюФорму(ПечатныеФормы);
	КомандаПечати = УправлениеПечатьюБольничнаяАптека.ДобавитьКомандуПечати(ПечатнаяФорма);
	
	КомандаПечати = УправлениеПечатьюБольничнаяАптека.ДобавитьКомандуПечати(ПечатнаяФорма);
	КомандаПечати.Представление = КомандаПечати.Представление + " " + НСтр("ru = 'на лат.'");
	КомандаПечати.ДополнительныеПараметры.ПредставлениеИзДействующегоВещества = Истина;
	КомандаПечати.ДополнительныеПараметры.ПредставлениеИзТорговогоНаименования = Ложь;
	
	КомандаПечати = УправлениеПечатьюБольничнаяАптека.ДобавитьКомандуПечати(ПечатнаяФорма);
	КомандаПечати.Представление = КомандаПечати.Представление + " " + НСтр("ru = 'на англ.'");
	КомандаПечати.ДополнительныеПараметры.ПредставлениеИзДействующегоВещества = Ложь;
	КомандаПечати.ДополнительныеПараметры.ПредставлениеИзТорговогоНаименования = Истина;
	
	// ТребованиеНакладная0510451
	ПечатнаяФорма = Обработки.ПечатьТребованиеНакладная0510451.ДобавитьПечатнуюФорму(ПечатныеФормы);
	УправлениеПечатьюБольничнаяАптека.ДобавитьКомандуПечати(ПечатнаяФорма);
	
	КомандаПечати = УправлениеПечатьюБольничнаяАптека.ДобавитьКомандуПечати(ПечатнаяФорма);
	КомандаПечати.Представление = КомандаПечати.Представление + " " + НСтр("ru = 'на лат.'");
	КомандаПечати.ДополнительныеПараметры.ПредставлениеИзДействующегоВещества = Истина;
	КомандаПечати.ДополнительныеПараметры.ПредставлениеИзТорговогоНаименования = Ложь;
	
	КомандаПечати = УправлениеПечатьюБольничнаяАптека.ДобавитьКомандуПечати(ПечатнаяФорма);
	КомандаПечати.Представление = КомандаПечати.Представление + " " + НСтр("ru = 'на англ.'");
	КомандаПечати.ДополнительныеПараметры.ПредставлениеИзДействующегоВещества = Ложь;
	КомандаПечати.ДополнительныеПараметры.ПредставлениеИзТорговогоНаименования = Истина;
	
	// М11
	ПечатнаяФорма = Обработки.ПечатьМ11.ДобавитьПечатнуюФорму(ПечатныеФормы);
	КомандаПечати = УправлениеПечатьюБольничнаяАптека.ДобавитьКомандуПечати(ПечатнаяФорма);
	
	КомандаПечати = УправлениеПечатьюБольничнаяАптека.ДобавитьКомандуПечати(ПечатнаяФорма);
	КомандаПечати.Представление = КомандаПечати.Представление + " " + НСтр("ru = 'на лат.'");
	КомандаПечати.ДополнительныеПараметры.ПредставлениеИзДействующегоВещества = Истина;
	КомандаПечати.ДополнительныеПараметры.ПредставлениеИзТорговогоНаименования = Ложь;
	
	КомандаПечати = УправлениеПечатьюБольничнаяАптека.ДобавитьКомандуПечати(ПечатнаяФорма);
	КомандаПечати.Представление = КомандаПечати.Представление + " " + НСтр("ru = 'на англ.'");
	КомандаПечати.ДополнительныеПараметры.ПредставлениеИзДействующегоВещества = Ложь;
	КомандаПечати.ДополнительныеПараметры.ПредставлениеИзТорговогоНаименования = Истина;
	
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(Обработки.ПечатьЭтикетокИЦенников.ДоступныеПечатныеФормы(), ПечатныеФормы);
	
	Возврат ПечатныеФормы;
	
КонецФункции

Функция ПолучитьДанныеДляПечати(МассивОбъектов, ПараметрыПечати = Неопределено) Экспорт
	
	ПолучатьЦены = Ложь;
	ПолучатьЦеныПоНастройкамСклада = Ложь;
	
	Если ТипЗнч(ПараметрыПечати) = Тип("Структура") Тогда
		ПолучатьЦеныПоНастройкамСклада = ПараметрыПечати.Свойство("ПолучатьЦеныПоНастройкамСклада");
		ПолучатьЦены = ПолучатьЦеныПоНастройкамСклада Или ПараметрыПечати.Свойство("ПолучатьЦены");
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаДанныеДляПечати(ПолучатьЦены, ПолучатьЦеныПоНастройкамСклада);
	Запрос.УстановитьПараметр("ТекущийДокумент", МассивОбъектов);
	Запрос.УстановитьПараметр("ИспользоватьИсточникиФинансирования", ПолучитьФункциональнуюОпцию("ИспользоватьИсточникиФинансирования"));
	Запрос.УстановитьПараметр("ПолучатьЦеныПоНастройкамСклада", ПолучатьЦеныПоНастройкамСклада);
	ЗапасыСервер.УстановитьСтатусыПараметровУчетаВПараметрахЗапроса(Запрос);
	
	РезультатыЗапросов = Запрос.ВыполнитьПакет();
	
	ДанныеДляПечати = Новый Структура;
	ДанныеДляПечати.Вставить("РезультатПоШапке"          , РезультатыЗапросов[РезультатыЗапросов.ВГраница() - 1]);
	ДанныеДляПечати.Вставить("РезультатПоТабличнойЧасти" , РезультатыЗапросов[РезультатыЗапросов.ВГраница()]);
	
	Возврат ДанныеДляПечати;
	
КонецФункции

Функция ТекстЗапросаДанныеДляПечати(ПолучатьЦены = Ложь, ПолучатьЦеныПоНастройкамСклада = Ложь)
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Документ.Ссылка                                                     КАК Ссылка,
	|	Документ.Номер                                                      КАК НомерДокумента,
	|	Документ.Дата                                                       КАК ДатаДокумента,
	|	Документ.Организация                                                КАК Организация,
	|	Документ.Организация.Префикс                                        КАК Префикс,
	|	Документ.Организация.КодПоОКПО                                      КАК КодОКПО,
	|	Документ.СкладОтправитель                                           КАК Склад,
	|	Документ.СкладОтправитель                                           КАК СкладОтправитель,
	|	Документ.СкладОтправитель                                           КАК Отправитель,
	|	Документ.СкладОтправитель.Представление                             КАК ОтправительПредставление,
	|	Документ.СкладПолучатель                                            КАК СкладПолучатель,
	|	Документ.СкладПолучатель                                            КАК Получатель,
	|	Документ.СкладПолучатель.Представление                              КАК ПолучательПредставление,
	|	Документ.ПодразделениеОрганизации                                   КАК Подразделение,
	|	Документ.ПодразделениеОрганизации.Представление                     КАК ПодразделениеПредставление,
	|	Документ.ПодразделениеОрганизации.ТекущийРуководитель.Наименование  КАК ЗаведующийАптекой,
	|	Документ.ПодразделениеОрганизации.ТекущаяДолжностьРуководителя      КАК ДолжностьЗаведующегоАптекой,
	|	Документ.Отделение                                                  КАК Отделение,
	|	Документ.Отделение.Представление                                    КАК ОтделениеПредставление,
	|	Документ.Отделение.ТекущийРуководитель.Наименование                 КАК ЗаведующийОтделением,
	|	Документ.Отделение.ТекущаяДолжностьРуководителя                     КАК ДолжностьЗаведующегоОтделением,
	|	Документ.Отделение.ТекущаяСтаршаяМедСестра.Наименование             КАК СтаршаяМедСестра,
	|	ВЫБОР
	|		КОГДА &ИспользоватьИсточникиФинансирования
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ИсточникиФинансирования.ПустаяСсылка)
	|		ИНАЧЕ Документ.ИсточникФинансирования
	|	КОНЕЦ                                                               КАК ИсточникФинансирования,
	|	Документ.Отделение.ТекущийРуководитель.Наименование                 КАК Затребовал,
	|	Документ.Отделение.ТекущаяДолжностьРуководителя                     КАК ЗатребовалДолжность,
	|	ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)                    КАК Разрешил,
	|	""""                                                                КАК РазрешилДолжность,
	|	ВЫБОР
	|		КОГДА &ПолучатьЦеныПоНастройкамСклада
	|			ТОГДА Документ.СкладОтправитель.УчетныйВидЦены
	|		ИНАЧЕ Документ.ВидЦены
	|	КОНЕЦ                                            КАК ВидЦены,
	|	ВЫБОР
	|		КОГДА &ПолучатьЦеныПоНастройкамСклада
	|			ТОГДА Документ.СкладОтправитель.ИсточникИнформацииОЦенахДляПечати
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПоВидуЦен)
	|	КОНЕЦ                                            КАК ИсточникИнформацииОЦенах,
	|	РасчетСебестоимостиТоваров.ПредварительныйРасчет КАК ПредварительныйРасчет
	|ПОМЕСТИТЬ втШапка
	|ИЗ
	|	Документ.ВозвратТоваровИзОтделения КАК Документ
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.РасчетСебестоимостиТоваров КАК РасчетСебестоимостиТоваров
	|	ПО
	|		&ПолучатьЦеныПоНастройкамСклада
	|		И РасчетСебестоимостиТоваров.Дата МЕЖДУ НАЧАЛОПЕРИОДА(Документ.Дата, МЕСЯЦ) И КОНЕЦПЕРИОДА(Документ.Дата, МЕСЯЦ)
	|		И РасчетСебестоимостиТоваров.Проведен
	|		И Документ.Организация = РасчетСебестоимостиТоваров.Организация
	|ГДЕ
	|	Документ.Ссылка В (&ТекущийДокумент)
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Ссылка                            КАК Документ,
	|	Товары.НомерСтроки                       КАК НомерСтроки,
	|	КОНЕЦПЕРИОДА(Шапка.ДатаДокумента, ДЕНЬ)  КАК ДатаПолученияЦены,
	|	Шапка.Организация                        КАК Организация,
	|	Шапка.Склад                              КАК Склад,
	|	Шапка.ВидЦены                            КАК ВидЦены,
	|	Шапка.ИсточникИнформацииОЦенах           КАК ИсточникИнформацииОЦенах,
	|	Шапка.ПредварительныйРасчет              КАК ПредварительныйРасчет,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыВОтделениях) КАК РазделУчета,
	|	Товары.Номенклатура                      КАК Номенклатура,
	|	Товары.Номенклатура.НаименованиеПолное   КАК ТоварНаименование,
	|	Товары.Номенклатура.Код                  КАК ТоварКод,
	|	Товары.СерияНоменклатуры                 КАК СерияНоменклатуры,
	|	ВЫБОР
	|		КОГДА Товары.СтатусУказанияСерий В (&СтатусУчетСебестоимостиПоСериям)
	|			ТОГДА Товары.СерияНоменклатуры
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ                                    КАК СерияНоменклатурыДляСебестоимости,
	|	ЕСТЬNULL(Товары.СерияНоменклатуры.ГоденДо, ДАТАВРЕМЯ(1,1,1,0,0,0))
	|	                                         КАК СрокГодности,
	|	Товары.Партия                            КАК Партия,
	|	ВЫБОР
	|		КОГДА Товары.СтатусУказанияПартий В (&СтатусУчетСебестоимостиПоПартиям)
	|			ТОГДА Товары.Партия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ                                    КАК ПартияДляСебестоимости,
	|	Товары.МестоХранения                     КАК МестоХранения,
	|	Товары.ЕдиницаИзмерения                  КАК ЕдиницаИзмерения,
	|	Товары.ЕдиницаИзмерения.КодОКЕИ          КАК КодПоОКЕИ,
	|	Товары.КоличествоВЕдиницахИзмерения      КАК Количество,
	|	Товары.КоличествоВЕдиницахИзмерения      КАК Затребовано,
	|	Товары.КоличествоВЕдиницахИзмерения      КАК Отпущено,
	|	Товары.Количество                        КАК КоличествоБазовых,
	|	ВЫБОР
	|		КОГДА &ИспользоватьИсточникиФинансирования
	|			ТОГДА Товары.ИсточникФинансирования
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИсточникиФинансирования.ПустаяСсылка)
	|	КОНЕЦ                                    КАК ИсточникФинансирования,
	|	Товары.Коэффициент                       КАК Коэффициент,
	|	ЛОЖЬ                                     КАК Отменено
	|ПОМЕСТИТЬ втТовары
	|ИЗ
	|	Документ.ВозвратТоваровИзОтделения.Товары КАК Товары
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		втШапка КАК Шапка
	|	ПО
	|		Товары.Ссылка = Шапка.Ссылка
	|ГДЕ
	|	Товары.Ссылка В (&ТекущийДокумент)
	|";
	
	ПараметрыПолученияЦен = ФормированиеПечатныхФормБольничнаяАптека.ПараметрыПолученияЦен();
	
	Если ПолучатьЦены Тогда
		
		ПараметрыПолученияЦен.ИспользоватьЦеныПоВидуЦен = Истина;
		ПараметрыПолученияЦен.ТочноеСоответствиеЦеныПоВидуЦен = Ложь;
		Если ПолучатьЦеныПоНастройкамСклада Тогда
			ПараметрыПолученияЦен.ИспользоватьЦеныПоСебестоимости = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	ТекстЗапроса = ФормированиеПечатныхФормБольничнаяАптека.ТекстЗапросаСЦенами(ТекстЗапроса, ПараметрыПолученияЦен);
	
	Возврат ТекстЗапроса;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Печать этикеток, ценников и стеллажных карточек
#Область ПечатьЭтикетокИЦенников

Функция ТекстЗапросаДанныеДляПечатиЭтикетокИЦенников()
	
	Возврат "
	|ВЫБРАТЬ
	|	МИНИМУМ(ТаблицаТоваров.НомерСтроки)                 КАК Порядок,
	|	ТаблицаТоваров.Ссылка.Дата                          КАК ДатаДокумента,
	|	ТаблицаТоваров.Ссылка.Организация                   КАК Организация,
	|	ТаблицаТоваров.Ссылка.СкладПолучатель               КАК Склад,
	|	ТаблицаТоваров.ИсточникФинансирования               КАК ИсточникФинансирования,
	|	ТаблицаТоваров.Номенклатура                         КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ТаблицаТоваров.СтатусУказанияСерийПолучатель = &СтатусСерииНеУказываются
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|		ИНАЧЕ ТаблицаТоваров.СерияНоменклатуры
	|	КОНЕЦ                                               КАК СерияНоменклатуры,
	|	ВЫБОР
	|		КОГДА ТаблицаТоваров.СтатусУказанияПартийПолучатель = &СтатусПартииНеУказываются
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка)
	|		ИНАЧЕ ТаблицаТоваров.Партия
	|	КОНЕЦ                                               КАК Партия,
	|	ТаблицаТоваров.ЕдиницаИзмерения                     КАК Упаковка,
	|	СУММА(ТаблицаТоваров.КоличествоВЕдиницахИзмерения)  КАК Количество
	|ИЗ
	|	Документ.ВозвратТоваровИзОтделения.Товары КАК ТаблицаТоваров
	|ГДЕ
	|	ТаблицаТоваров.Ссылка В(&МассивДокументов)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.Ссылка.Дата,
	|	ТаблицаТоваров.ИсточникФинансирования,
	|	ТаблицаТоваров.Номенклатура,
	|	ВЫБОР
	|		КОГДА ТаблицаТоваров.СтатусУказанияСерийПолучатель = &СтатусСерииНеУказываются
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|		ИНАЧЕ ТаблицаТоваров.СерияНоменклатуры
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаТоваров.СтатусУказанияПартийПолучатель = &СтатусПартииНеУказываются
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка)
	|		ИНАЧЕ ТаблицаТоваров.Партия
	|	КОНЕЦ,
	|	ТаблицаТоваров.ЕдиницаИзмерения,
	|	ТаблицаТоваров.Ссылка.Организация,
	|	ТаблицаТоваров.Ссылка.СкладПолучатель
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Документ.Организация                       КАК Организация,
	|	Документ.СкладПолучатель                   КАК Склад,
	|	Документ.ВидЦены                           КАК ВидЦены
	|ИЗ
	|	Документ.ВозвратТоваровИзОтделения КАК Документ
	|ГДЕ
	|	Документ.Ссылка В(&МассивДокументов)
	|";
	
КонецФункции

// Функция помещает необходимые данные в структуру. Структура помещается во временное хранилище.
//
// Возвращаемое значение:
//   Адрес   - адрес структуры данных во временном хранилище
//
Функция ПолучитьДанныеДляПечатиЭтикеток(МассивДокументов) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаДанныеДляПечатиЭтикетокИЦенников();
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	ЗапасыСервер.УстановитьСтатусыПараметровУчетаВПараметрахЗапроса(Запрос);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	ТаблицаРеквизитыДокументов = МассивРезультатов[1].Выгрузить();
	МассивОрганизаций = Обработки.ПечатьЭтикетокИЦенников.СвернутьТаблицуЗначенийПоРеквизиту(ТаблицаРеквизитыДокументов, "Организация").ВыгрузитьКолонку(0);
	МассивСкладов     = Обработки.ПечатьЭтикетокИЦенников.СвернутьТаблицуЗначенийПоРеквизиту(ТаблицаРеквизитыДокументов, "Склад").ВыгрузитьКолонку(0);
	МассивВидовЦен    = Обработки.ПечатьЭтикетокИЦенников.СвернутьТаблицуЗначенийПоРеквизиту(ТаблицаРеквизитыДокументов, "ВидЦены").ВыгрузитьКолонку(0);
	
	// Подготовка структуры действий для обработки печати ценников и этикеток
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ЗаполнитьОрганизацию", ?(МассивОрганизаций.Количество() = 1,МассивОрганизаций[0], Неопределено));
	СтруктураДействий.Вставить("ЗаполнитьСклад",       ?(МассивСкладов.Количество() = 1,МассивСкладов[0], МассивСкладов));
	СтруктураДействий.Вставить("ЗаполнитьВидЦены",     ?(МассивВидовЦен.Количество() = 1,    МассивВидовЦен[0],    Неопределено));
	
	// Подготовка данных для заполнения табличной части обработки печати ценников и этикеток
	СтруктураРезультат = Новый Структура;
	СтруктураРезультат.Вставить("Товары", МассивРезультатов[0].Выгрузить());
	СтруктураРезультат.Вставить("СтруктураДействий", СтруктураДействий);
	
	Возврат СтруктураРезультат;
	
КонецФункции

// Функция помещает необходимые данные в структуру. Структура помещается во временное хранилище.
//
// Возвращаемое значение:
//   Адрес   - адрес структуры данных во временном хранилище
//
Функция ПолучитьДанныеДляПечатиЦенников(МассивДокументов) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаДанныеДляПечатиЭтикетокИЦенников();
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	ЗапасыСервер.УстановитьСтатусыПараметровУчетаВПараметрахЗапроса(Запрос);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	ТаблицаРеквизитыДокументов = МассивРезультатов[1].Выгрузить();
	МассивОрганизаций = Обработки.ПечатьЭтикетокИЦенников.СвернутьТаблицуЗначенийПоРеквизиту(ТаблицаРеквизитыДокументов, "Организация").ВыгрузитьКолонку(0);
	МассивСкладов     = Обработки.ПечатьЭтикетокИЦенников.СвернутьТаблицуЗначенийПоРеквизиту(ТаблицаРеквизитыДокументов, "Склад").ВыгрузитьКолонку(0);
	МассивВидовЦен    = Обработки.ПечатьЭтикетокИЦенников.СвернутьТаблицуЗначенийПоРеквизиту(ТаблицаРеквизитыДокументов, "ВидЦены").ВыгрузитьКолонку(0);
	
	// Подготовка структуры действий для обработки печати ценников и этикеток
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ЗаполнитьОрганизацию", ?(МассивОрганизаций.Количество() = 1,МассивОрганизаций[0], Неопределено));
	СтруктураДействий.Вставить("ЗаполнитьСклад",       ?(МассивСкладов.Количество() = 1,МассивСкладов[0], МассивСкладов));
	СтруктураДействий.Вставить("ЗаполнитьВидЦены",     ?(МассивВидовЦен.Количество() = 1,    МассивВидовЦен[0],    Неопределено));
	
	
	// Подготовка данных для заполнения табличной части обработки печати ценников и этикеток
	СтруктураРезультат = Новый Структура;
	СтруктураРезультат.Вставить("Товары", МассивРезультатов[0].Выгрузить());
	СтруктураРезультат.Вставить("СтруктураДействий", СтруктураДействий);
	
	Возврат СтруктураРезультат;
	
КонецФункции

// Функция помещает необходимые данные в структуру. Структура помещается во временное хранилище.
//
// Возвращаемое значение:
//   Адрес   - адрес структуры данных во временном хранилище
//
Функция ПолучитьДанныеДляПечатиСтеллажныхКарточек(МассивДокументов) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаДанныеДляПечатиЭтикетокИЦенников();
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	ЗапасыСервер.УстановитьСтатусыПараметровУчетаВПараметрахЗапроса(Запрос);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	ТаблицаРеквизитыДокументов = МассивРезультатов[1].Выгрузить();
	МассивОрганизаций = Обработки.ПечатьЭтикетокИЦенников.СвернутьТаблицуЗначенийПоРеквизиту(ТаблицаРеквизитыДокументов, "Организация").ВыгрузитьКолонку(0);
	МассивСкладов     = Обработки.ПечатьЭтикетокИЦенников.СвернутьТаблицуЗначенийПоРеквизиту(ТаблицаРеквизитыДокументов, "Склад").ВыгрузитьКолонку(0);
	МассивВидовЦен    = Обработки.ПечатьЭтикетокИЦенников.СвернутьТаблицуЗначенийПоРеквизиту(ТаблицаРеквизитыДокументов, "ВидЦены").ВыгрузитьКолонку(0);
	
	// Подготовка структуры действий для обработки печати ценников и этикеток
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ЗаполнитьОрганизацию", ?(МассивОрганизаций.Количество() = 1,МассивОрганизаций[0], Неопределено));
	СтруктураДействий.Вставить("ЗаполнитьСклад",       ?(МассивСкладов.Количество() = 1,МассивСкладов[0], МассивСкладов));
	СтруктураДействий.Вставить("ЗаполнитьВидЦены",     ?(МассивВидовЦен.Количество() = 1,    МассивВидовЦен[0],    Неопределено));
	
	// Подготовка данных для заполнения табличной части обработки печати ценников и этикеток
	СтруктураРезультат = Новый Структура;
	СтруктураРезультат.Вставить("Товары", МассивРезультатов[0].Выгрузить());
	СтруктураРезультат.Вставить("СтруктураДействий", СтруктураДействий);
	
	Возврат СтруктураРезультат;
	
КонецФункции

#КонецОбласти // ПечатьЭтикетокИЦенников

#КонецОбласти // Печать

////////////////////////////////////////////////////////////////////////////////
// Команды формы
#Область КомандыФормы

// Заполняет список команд ввода на основании.
// 
// Параметры:
//   КомандыСоздатьНаОсновании - ТаблицаЗначений - Таблица команд для вывода в подменю. Для изменения.
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСоздатьНаОсновании, НастройкиФормы) Экспорт
	
	ВводНаОснованииБольничнаяАптека.ДобавитьКомандыСозданияНаОсновании(ПустаяСсылка().Метаданные().ПолноеИмя(), КомандыСоздатьНаОсновании, НастройкиФормы);
	
КонецПроцедуры

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица команд для вывода в подменю. Для изменения.
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, НастройкиФормы) Экспорт
	
	МенюОтчетыБольничнаяАптека.ДобавитьОбщиеКоманды(ПустаяСсылка().Метаданные().ПолноеИмя(), КомандыОтчетов, НастройкиФормы);
	
КонецПроцедуры

#КонецОбласти // КомандыФормы

#КонецОбласти // СлужебныеПроцедурыИФункции

////////////////////////////////////////////////////////////////////////////////
// СТАНДАРТНЫЕ ПОДСИСТЕМЫ
#Область СтандартныеПодсистемы

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
//
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти // СтандартныеПодсистемы

#КонецЕсли