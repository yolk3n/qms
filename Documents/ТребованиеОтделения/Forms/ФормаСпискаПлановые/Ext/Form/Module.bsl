
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Элементы.ЗавОтделением.Видимость=сок_Сервер.ЭтоЗавОтделением();
	Элементы.СтаршаяМедСестра.Видимость=сок_Сервер.ЭтоСтаршаяМедСерстра() ИЛИ сок_Сервер.ЭтоЗавОтделением();
	Элементы.КлинФармаколог.Видимость=сок_Сервер.ЭтоКлинФармаколог();
	Элементы.СписокСоздатьЗаявкуНаЗакупку.Видимость=сок_Сервер.ЭтоАптека();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если сок_Сервер.ЭтоКлинФармаколог() И Не сок_Сервер.ЭтоСовсемПолныеПрава() Тогда
		Элементы.ГруппаСтраницы.ТекущаяСтраница=Элементы.КлинФармаколог;
	ИначеЕсли сок_Сервер.ЭтоЗавОтделением() И Не сок_Сервер.ЭтоСовсемПолныеПрава() Тогда
		Элементы.ГруппаСтраницы.ТекущаяСтраница=Элементы.ЗавОтделением;
	КонецЕсли;	
	ГруппаСтраницыПриСменеСтраницы(Элементы.ГруппаСтраницы, Элементы.ГруппаСтраницы.ТекущаяСтраница);
КонецПроцедуры


&НаКлиенте
Процедура ГруппаСтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	Список.Отбор.Элементы.Очистить();
	
	ЭлементОтбораВида = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбораВида.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ВидОперации");
	ЭлементОтбораВида.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбораВида.Использование = Истина;
	ЭлементОтбораВида.ПравоеЗначение = ПредопределенноеЗначение("Перечисление.ТипыТребованийОтделений.ЛСМесячные");   
	
	Если ТекущаяСтраница=Элементы.ВсеТребования Тогда
		
		Элементы.Список.Обновить();
	ИначеЕсли ТекущаяСтраница=Элементы.СтаршаяМедСестра Тогда	
		
		ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Статус");
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.Использование = Истина;
		ЭлементОтбора.ПравоеЗначение = ПредопределенноеЗначение("Перечисление.СтатусыТребованийОтделений.НеСогласован");   

		Элементы.СписокСтаршаяМедСестра.Обновить();
	ИначеЕсли ТекущаяСтраница=Элементы.ЗавОтделением Тогда

		ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Статус");
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.Использование = Истина;
		ЭлементОтбора.ПравоеЗначение = ПредопределенноеЗначение("Перечисление.СтатусыТребованийОтделений.НаСогласовании");   
		Элементы.СписокЗавОтделения.Обновить();
	ИначеЕсли ТекущаяСтраница=Элементы.КлинФармаколог Тогда

		ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Статус");
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.Использование = Истина;
		ЭлементОтбора.ПравоеЗначение = ПредопределенноеЗначение("Перечисление.СтатусыТребованийОтделений.КлинФармаколог");   
		Элементы.СписокКлинФармаколог.Обновить();
	КонецЕсли;
КонецПроцедуры


#Область КомандыСогласования
&НаСервере
Процедура сок_НаСогласованиеЗавОтделенияПослеНаСервере()
	Для Каждого Стр из Элементы.СписокСтаршаяМедСестра.ВыделенныеСтроки Цикл
		Элемент=Стр.Ссылка.ПолучитьОбъект();
		Элемент.Статус=Перечисления.СтатусыТребованийОтделений.НаСогласовании;
		Элемент.СтаршаяМедСестра=ПараметрыСеанса.ТекущийПользователь;
		Элемент.ДатаОтправкиНаСогласованиеСтаршейМедСестрой=ТекущаяДата();
		//Попытка
			Элемент.Записать(РежимЗаписиДокумента.Проведение);
			ТекстСообщения=""+ПараметрыСеанса.ТекущийПользователь+" отправил Вам на согласование "+Элемент.Ссылка;
			сок_Сервер.ОтправитьОповещениеПоПочте(Элемент.Отделение.ТекущийРуководитель,ТекстСообщения);
		//Исключение   
			//ОбщегоНазначенияКлиентСервер.СообщитьПользователю("не удалось изменить статус документа "+Стр.Ссылка,Стр.Ссылка);
		//Конецпопытки;	
	КонецЦикла;
КонецПроцедуры


&НаКлиенте
Процедура НаСогласованиеЗавОтделения(Команда)
	сок_НаСогласованиеЗавОтделенияПослеНаСервере();   
	Элементы.СписокСтаршаяМедСестра.Обновить();
КонецПроцедуры

&НаСервере
Процедура сок_ЗакрытьЗаказСтаршейМедсестройПослеНаСервере()
	Для Каждого Стр из Элементы.СписокСтаршаяМедСестра.ВыделенныеСтроки Цикл
		Элемент=Стр.Ссылка.ПолучитьОбъект();
		Элемент.Статус=Перечисления.СтатусыТребованийОтделений.Закрыт;
		Попытка
			Элемент.Записать(РежимЗаписиДокумента.Проведение);
		Исключение   
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("не удалось изменить статус документа "+Стр.Ссылка,Стр.Ссылка);
		Конецпопытки;	
	КонецЦикла;
КонецПроцедуры


&НаКлиенте
Процедура ЗакрытьЗаказСтаршейМедсестрой(Команда)
	сок_ЗакрытьЗаказСтаршейМедсестройПослеНаСервере();
	Элементы.СписокСтаршаяМедСестра.Обновить();
КонецПроцедуры

&НаСервере
Процедура ВернутьСтаршейМедСестреНаСервере()
	Для Каждого Стр из Элементы.СписокЗавОтделения.ВыделенныеСтроки Цикл
		Элемент=Стр.Ссылка.ПолучитьОбъект();
		Элемент.Статус=Перечисления.СтатусыТребованийОтделений.НеСогласован;
		Элемент.СтаршаяМедСестра=Справочники.Пользователи.ПустаяСсылка();
		Элемент.ДатаОтправкиНаСогласованиеСтаршейМедСестрой='20221002';
		Попытка
			Элемент.Записать(РежимЗаписиДокумента.Проведение);
			Элемент.Записать(РежимЗаписиДокумента.Проведение);
			ТекстСообщения=""+ПараметрыСеанса.ТекущийПользователь+" вернул Вам на доработку "+Элемент.Ссылка;
			сок_Сервер.ОтправитьОповещениеПоПочте(Элемент.Отделение.ТекущаяСтаршаяМедСестра,ТекстСообщения);
		Исключение   
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("не удалось изменить статус документа "+Стр.Ссылка,Стр.Ссылка);
		Конецпопытки;	
		
		
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ВернутьСтаршейМедСестре(Команда)
	ВернутьСтаршейМедСестреНаСервере();
	Элементы.СписокЗавОтделения.Обновить();
КонецПроцедуры


&НаСервере
Процедура сок_ККлинФармаколагуПослеНаСервере()
	Для Каждого Стр из Элементы.СписокЗавОтделения.ВыделенныеСтроки Цикл
		Элемент=Стр.Ссылка.ПолучитьОбъект();
		Если Ложь Тогда Элемент=Документы.ТребованиеОтделения.СоздатьДокумент() КонецЕсли;
		//Провериместь ли не согласованые
		Если Элемент.ЕстьЗапрещенные Тогда
			Элемент.Статус=Перечисления.СтатусыТребованийОтделений.КлинФармаколог; 
			
		Иначе	               
			Элемент.Статус=Перечисления.СтатусыТребованийОтделений.КВыполнению; 
		КонецЕсли;	
		Элемент.СогласовноЗавОтделением=Истина;
		Элемент.ЗавОтделением=ПараметрыСеанса.ТекущийПользователь;
		Элемент.ДатаСогласованияЗавОтделением=ТекущаяДата();
		Попытка
			Элемент.Записать(РежимЗаписиДокумента.Проведение);
			
			Если Элемент.ЕстьЗапрещенные Тогда
				ТекстСообщения=""+ПараметрыСеанса.ТекущийПользователь+" отправил Вам на согласование "+Элемент.Ссылка;
				сок_Сервер.ОтправитьОповещениеПоПочте(Константы.КлинФармаколог.Получить(),ТекстСообщения);
			Иначе
				ТекстСообщения=""+ПараметрыСеанса.ТекущийПользователь+" отправил Вам для закупки "+Элемент.Ссылка;
				сок_Сервер.ОтправитьОповещениеПоПочте(Константы.ПолучательСообщенийАптеки.Получить(),ТекстСообщения);
			КонецЕсли;
		Исключение   
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("не удалось изменить статус документа "+Стр.Ссылка,Стр.Ссылка);
		Конецпопытки;	
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ККлинФармаколагу(Команда)
	сок_ККлинФармаколагуПослеНаСервере();
	Элементы.СписокЗавОтделения.Обновить();;
КонецПроцедуры

&НаСервере
Процедура ВернутьЗавОтделениемНаСервере()
	Для Каждого Стр из Элементы.СписокЗавОтделения.ВыделенныеСтроки Цикл
		Элемент=Стр.Ссылка.ПолучитьОбъект();
		Элемент.Статус=Перечисления.СтатусыТребованийОтделений.НеСогласован;
		Элемент.СтаршаяМедСестра=Справочники.Пользователи.ПустаяСсылка();
		Элемент.ДатаОтправкиНаСогласованиеСтаршейМедСестрой='20221002';
		Попытка
			Элемент.Записать(РежимЗаписиДокумента.Проведение);
			Элемент.Записать(РежимЗаписиДокумента.Проведение);
			ТекстСообщения=""+ПараметрыСеанса.ТекущийПользователь+" вернул Вам на доработку "+Элемент.Ссылка;
			сок_Сервер.ОтправитьОповещениеПоПочте(Элемент.Отделение.ТекущийРуководитель,ТекстСообщения);
		Исключение   
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("не удалось изменить статус документа "+Стр.Ссылка,Стр.Ссылка);
		Конецпопытки;	
		
		
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ВернутьЗавОтделением(Команда)
	ВернутьЗавОтделениемНаСервере(); 
	Элементы.СписокКлинФармаколог.Обновить();;
КонецПроцедуры

&НаСервере
Процедура сок_ПередатьВАптекуПослеНаСервере()
	Для Каждого Стр из Элементы.СписокКлинФармаколог.ВыделенныеСтроки Цикл
		Элемент=Стр.Ссылка.ПолучитьОбъект();                   
		Если Ложь Тогда Элемент=Документы.ТребованиеОтделения.СоздатьДокумент() КонецЕсли;
		//Провериместь ли не согласованые
		Для Каждого СтрТ из Элемент.Товары Цикл
			Если Не СтрТ.Разрешено И НЕ СтрТ.Отменено Тогда
				СтрТ.Отменено=Истина;
			КонецЕсли;	
		КонецЦикла;	
		
		Элемент.Статус=Перечисления.СтатусыТребованийОтделений.КВыполнению; 
		Элемент.СогласованоКлинФармакологом=Истина;
		Элемент.КлинФармаколог=ПараметрыСеанса.ТекущийПользователь;
		Элемент.ДатаСогласованияКлинФармакологом=ТекущаяДата();
		Попытка
			Элемент.Записать(РежимЗаписиДокумента.Проведение);
			ТекстСообщения=""+ПараметрыСеанса.ТекущийПользователь+" отправил Вам для закупки "+Элемент.Ссылка;
			сок_Сервер.ОтправитьОповещениеПоПочте(Константы.ПолучательСообщенийАптеки.Получить(),ТекстСообщения);
		Исключение   
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("не удалось изменить статус документа "+Стр.Ссылка,Стр.Ссылка);
		Конецпопытки;	
	КонецЦикла;
КонецПроцедуры


&НаКлиенте
Процедура ПередатьВАптеку(Команда)
	сок_ПередатьВАптекуПослеНаСервере();
	Элементы.СписокКлинФармаколог.Обновить();
КонецПроцедуры


&НаСервере
Функция МожноCоздаватьЗаявкуНаЗакупку(СтрокаОшибки)
	Разрешено = Истина;
	
	Для Каждого Стр из Элементы.СписокСтаршаяМедСестра.ВыделенныеСтроки Цикл
		Если Стр.ссылка.Срочно И Элементы.Список.ВыделенныеСтроки.Количество()>1 Тогда
			Разрешено = Ложь;
			СтрокаОшибки=СтрокаОшибки+"
									  | Запрещено создавать заявку по нескольким срочным заказам";
		Конецесли;	
		
	КонецЦикла;
	
	
	
	Возврат Разрешено;
КонецФункции


&НаСервере
Процедура СоздатьЗаявкуНаЗакупкНаСервере(ДанныеФормы, Знач СписокСтрок)
	
	
	ЦентральныйСклад = Справочники.Склады.НайтиПоНаименованию("Склад Аптеки Общий");
	
	Элемент = Документы.ЗаявкаНаЗакупку.СоздатьДокумент();
	Элемент.Дата=ТекущаяДата();
	Элемент.ДокументыОснований.Очистить();
	//Элемент.ЖелаемаяДатаПоступления=ТекущаяДата();
	Элемент.Ответственный=ПараметрыСеанса.ТекущийПользователь;
	Элемент.Склад=ЦентральныйСклад;
	Элемент.Статус=Перечисления.СтатусыЗаказовПоставщикам.НеСогласован;

	НеПроверятьОстатки=Ложь;
	
	Для Каждого СтрДок из СписокСтрок Цикл
		СтрД=Элемент.ДокументыОснований.Добавить();
		СтрД.Основание=СтрДок.Ссылка;
		Элемент.Организация=СтрДок.Ссылка.Организация;
		НеПроверятьОстатки=НеПроверятьОстатки ИЛИ (СтрДок.Ссылка.ВИдОперации=Перечисления.ТипыТребованийОтделений.ЛСМесячные ИЛИ СтрДок.Ссылка.ВИдОперации=Перечисления.ТипыТребованийОтделений.ЛСТекущие);
		Для Каждого Стр из СтрДок.Товары Цикл
			Если НЕ Стр.Отменено Тогда
				СтрН=Элемент.Товары.Найти(Стр.Номенклатура,"Номенклатура");
				Если СтрН=Неопределено Тогда
					СтрН=Элемент.Товары.Добавить();
					СтрН.Номенклатура=Стр.Номенклатура;
					СтрН.ЕдиницаИзмерения=Стр.Номенклатура.ОсновнаяЕдиницаУчета;
					СтрН.Коэффициент=?(СтрН.ЕдиницаИзмерения.Коэффициент=0,1,СтрН.ЕдиницаИзмерения.Коэффициент);
					
					СтрН.КодСтроки=СтрН.НомерСтроки;
					СтрН.Заказано=СтрН.КоличествоВЕдиницахИзмерения;
					СтрН.ДатаПоступления=?(СтрДок.ПоступлениеОднойДатой,СтрДок.ДатаПоступления,Стр.ДатаПоступления);
					СтрН.Цена=сок_Сервер.ПоследняяЦенаЗакупки(СтрН.Номенклатура,КонецДня(Элемент.Дата))*СтрН.Коэффициент;
				Конецесли;	
				
				Если Стр.ЕдиницаИзмерения=Стр.Номенклатура.ЕдиницаИзмерения Тогда  
					СтрН.КоличествоВЕдиницахИзмерения=СтрН.КоличествоВЕдиницахИзмерения+Стр.КоличествоВЕдиницахИзмерения/СтрН.Коэффициент;
				Иначе	
					СтрН.КоличествоВЕдиницахИзмерения=СтрН.КоличествоВЕдиницахИзмерения+Стр.КоличествоВЕдиницахИзмерения*Стр.ЕдиницаИзмерения.Коэффициент/СтрН.Коэффициент;
				КонецЕсли;	
				
				СтрН.Количество=СтрН.КоличествоВЕдиницахИзмерения;
				СтрН.Сумма=СтрН.Цена * СтрН.КоличествоВЕдиницахИзмерения;
				
				СтрН.Заказано=СтрН.Количество;
			КонецЕсли;	
		КонецЦикла;	
	КонецЦикла;
	Если НЕ НепроверятьОстатки Тогда
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ДатаНач",НачалоДня(ТекущаяДата())-Константы.сок_ПериодАнализаРасхода.Получить()*86400);
		Запрос.УстановитьПараметр("ДатаКон",КонецДня(ТекущаяДата()));
		Запрос.УстановитьПараметр("Склад",ЦентральныйСклад );
		Запрос.УстановитьПараметр("Номенклатура",Элемент.Товары.Выгрузить().ВыгрузитьКолонку("Номенклатура"));
		Запрос.Текст=
		"ВЫБРАТЬ
		|	СвободныеОстаткиОстаткиИОбороты.Номенклатура КАК Номенклатура,
		|	СвободныеОстаткиОстаткиИОбороты.ВНаличииКонечныйОстаток КАК Остаток
		|ИЗ
		|	РегистрНакопления.СвободныеОстатки.ОстаткиИОбороты(
		|			&ДатаНач,
		|			&ДатаКон,
		|			,
		|			,
		|			Номенклатура В (&Номенклатура)
		|				И Склад = &Склад) КАК СвободныеОстаткиОстаткиИОбороты";
		Выборка = Запрос.Выполнить().Выгрузить();
		Выборка.Свернуть("Номенклатура","Остаток");
		Для Каждого Стр из Элемент.Товары Цикл
			СтрН=Выборка.Найти(Стр.Номенклатура,"Номенклатура");
			Если НЕ СтрН=Неопределено Тогда
				Если СтрН.Остаток>=Стр.Количество Тогда
					Стр.Количество=0;
					Стр.КоличествоВЕдиницахИзмерения=0;
				ИначеЕсли СтрН.Остаток>0 Тогда
					Стр.КоличествоВЕдиницахИзмерения=Стр.КоличествоВЕдиницахИзмерения-Цел(СтрН.Остаток/Стр.Коэффициент);
					Стр.Количество=Стр.КоличествоВЕдиницахИзмерения*Стр.Коэффициент;
				КонецЕсли;	
			Конецесли;	
			Стр.Сумма=Стр.Цена * Стр.Количество;
		КонецЦикла;
		
		
	КонецЕсли;	
	
	ТЗ=Элемент.Товары.Выгрузить();
	ТЗ.Свернуть("ДатаПоступления");
	Если ТЗ.Количество()=1 Тогда
		Элемент.ПоступлениеОднойДатой=Истина;
		Элемент.ДатаПоступления=ТЗ[0].ДатаПоступления;
	КонецЕсли;	
	Элемент.СуммаДокумента=Элемент.Товары.Итог("Сумма");
	ЗначениеВДанныеФормы(Элемент,ДанныеФормы); 
	
КонецПроцедуры


&НаКлиенте
Процедура СоздатьЗаявкуНаЗакупку(Команда)
	СтрокаОшибки="";
	Если МожноCоздаватьЗаявкуНаЗакупку(СтрокаОшибки) Тогда
		Форма = ПолучитьФорму("Документ.ЗаявкаНаЗакупку.ФормаОбъекта");
		ДанныеФормы = Форма.Объект; // Получаем объект формы в переменную
		СоздатьЗаявкуНаЗакупкНаСервере(ДанныеФормы,Элементы.СписокСтаршаяМедСестра.ВыделенныеСтроки); // Заполняем документ на сервере
		КопироватьДанныеФормы(ДанныеФормы, Форма.Объект); // копируем наш объект в объект формы и далее открываем ее
		Форма.Открыть();	
	Иначе
		ПоказатьПредупреждение(,"Создание заказа на закупку не возможно."+СтрокаОшибки);
	Конецесли;	
КонецПроцедуры



#КонецОбласти
