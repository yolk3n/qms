#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ИнтеграцияМДЛППереопределяемый.ОбработкаЗаполнения(ЭтотОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	СостояниеПодтверждения = Метаданные().Реквизиты.СостояниеПодтверждения.ЗначениеЗаполнения;
	НомераУпаковок.Очистить();
	ТранспортныеУпаковки.Очистить();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	НепроверяемыеРеквизиты = Новый Массив;
	
	Если Не ИнтеграцияМДЛП.ИспользоватьХарактеристикиНоменклатуры() Тогда
		НепроверяемыеРеквизиты.Добавить("Товары.Характеристика");
	КонецЕсли;
	
	Если Не ИнтеграцияМДЛП.ИспользоватьСерииНоменклатуры() Тогда
		НепроверяемыеРеквизиты.Добавить("Товары.Серия");
	КонецЕсли;
	
	Если КонтрагентФизическоеЛицо Тогда
		НепроверяемыеРеквизиты.Добавить("КонтрагентКПП");
	КонецЕсли;
	
	ТекстСообщения = НСтр("ru = 'Не заполнена колонка ""Реквизиты решения"" в строке %1 списка ""%2""'");
	
	НепроверяемыеРеквизиты.Добавить("НомераУпаковок.РеквизитыРешения");
	Для Каждого Строка Из НомераУпаковок Цикл
		Если Строка.ОснованиеПередачиНаУничтожение = Перечисления.ОснованияПередачиНаУничтожениеМДЛП.ПоРешениюРосздравнадзора
		   И Не ЗначениеЗаполнено(Строка.РеквизитыРешения) Тогда
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, Строка.НомерСтроки, НСтр("ru = 'Номера упаковок'"));
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстОшибки,
				ЭтотОбъект,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("НомераУпаковок", Строка.НомерСтроки, "РеквизитыРешения")
				,
				,
				Отказ);
		КонецЕсли;
	КонецЦикла;
	НепроверяемыеРеквизиты.Добавить("ТранспортныеУпаковки.РеквизитыРешения");
	Для Каждого Строка Из ТранспортныеУпаковки Цикл
		Если Строка.ОснованиеПередачиНаУничтожение = Перечисления.ОснованияПередачиНаУничтожениеМДЛП.ПоРешениюРосздравнадзора
		   И Не ЗначениеЗаполнено(Строка.РеквизитыРешения) Тогда
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, Строка.НомерСтроки, НСтр("ru = 'Транспортные упаковки'"));
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстОшибки,
				ЭтотОбъект,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ТранспортныеУпаковки", Строка.НомерСтроки, "РеквизитыРешения")
				,
				,
				Отказ);
		КонецЕсли;
	КонецЦикла;
	
	ИнтеграцияМДЛП.ПроверитьЗаполнениеУпаковок(ЭтотОбъект, Отказ);
	
	ИнтеграцияМДЛППереопределяемый.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты, НепроверяемыеРеквизиты);
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, НепроверяемыеРеквизиты);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтоНовый());
	
	Для Каждого Строка Из НомераУпаковок Цикл
		Если Строка.ОснованиеПередачиНаУничтожение <> Перечисления.ОснованияПередачиНаУничтожениеМДЛП.ПоРешениюРосздравнадзора
		   И ЗначениеЗаполнено(Строка.РеквизитыРешения) Тогда
			Строка.РеквизитыРешения = "";
		КонецЕсли;
	КонецЦикла;
	Для Каждого Строка Из ТранспортныеУпаковки Цикл
		Если Строка.ОснованиеПередачиНаУничтожение <> Перечисления.ОснованияПередачиНаУничтожениеМДЛП.ПоРешениюРосздравнадзора
		   И ЗначениеЗаполнено(Строка.РеквизитыРешения) Тогда
			Строка.РеквизитыРешения = "";
		КонецЕсли;
	КонецЦикла;
	
	ИнтеграцияМДЛП.ПроверитьВозможностьЗаписиУведомления(ЭтотОбъект, РежимЗаписи);
	
	ИнтеграцияМДЛП.УбратьНезначащиеСимволы(ЭтотОбъект, "НомерДокумента");
	
	ИнтеграцияМДЛППереопределяемый.ПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ИнтеграцияМДЛП.ЗаписатьСтатусДокументаПоУмолчанию(ЭтотОбъект);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	СтандартнаяОбработка = Истина;
	ИнтеграцияМДЛППереопределяемый.ОбработкаПроведения(ЭтотОбъект, Отказ, РежимПроведения, СтандартнаяОбработка);
	Если Не СтандартнаяОбработка Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыОперации = ИнтеграцияМДЛП.ПараметрыОперацииИзмененияСтатусаУпаковок();
	ИсходныеСтатусы = Новый Массив;
	ИсходныеСтатусы.Добавить(Перечисления.СтатусыУпаковокМДЛП.ОжидаетВыпуска);
	ИсходныеСтатусы.Добавить(Перечисления.СтатусыУпаковокМДЛП.ВОбороте);
	ИсходныеСтатусы.Добавить(Перечисления.СтатусыУпаковокМДЛП.ВвезенНаТерриториюРФ);
	ИсходныеСтатусы.Добавить(Перечисления.СтатусыУпаковокМДЛП.ОборотПриостановлен);
	ПараметрыОперации.ИсходныйСтатус = ИсходныеСтатусы;
	ПараметрыОперации.НовыйСтатус    = Перечисления.СтатусыУпаковокМДЛП.ПереданаНаУничтожение;
	ПараметрыОперации.КонтролироватьОстаткиДолей = Ложь;
	ИнтеграцияМДЛП.ПровестиДокументПоРегиструУпаковок(Ссылка, ПараметрыОперации, Отказ);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	СтандартнаяОбработка = Истина;
	ИнтеграцияМДЛППереопределяемый.ОбработкаУдаленияПроведения(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	Если Не СтандартнаяОбработка Тогда
		Возврат;
	КонецЕсли;
	
	ИнтеграцияМДЛП.ОтменитьРезерв(Ссылка);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли