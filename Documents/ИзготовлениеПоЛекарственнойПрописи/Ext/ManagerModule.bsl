#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС
#Область ПрограммныйИнтерфейс

// Имена реквизитов, от значений которых зависят параметры учета номенклатуры
//
// Возвращаемое значение:
//   Строка - имена реквизитов, перечисленные через запятую
//
Функция ИменаРеквизитовДляЗаполненияПараметровУчетаНоменклатуры() Экспорт
	
	Возврат "Склад";
	
КонецФункции

// Возвращает параметры учета для номенклатуры, указанной в документе
//
// Параметры
//   Объект - Структура - структура значений реквизитов объекта, необходимых для заполнения параметров указания серий
// Возвращаемое значение
//   Структура - Состав полей задается в функции НоменклатураКлиентСервер.ПараметрыУчетаНоменклатуры
//
Функция ПараметрыУчетаНоменклатуры(Объект) Экспорт
	
	ПараметрыУчетаНаСкладе = СкладыСервер.ПараметрыУчетаНоменклатуры(Объект.Склад);
	
	ПараметрыУчетаШапка = ЗапасыСервер.ПараметрыУчетаНоменклатуры();
	ПараметрыУчетаШапка.ПолноеИмяОбъекта = ПустаяСсылка().Метаданные().ПолноеИмя();
	ПараметрыУчетаШапка.ТоварВШапке = Истина;
	ПараметрыУчетаШапка.ИспользоватьСерии = ПараметрыУчетаНаСкладе.ИспользоватьСерииНоменклатуры;
	ПараметрыУчетаШапка.ИспользоватьПартии = ПараметрыУчетаНаСкладе.ИспользоватьПартии;
	ПараметрыУчетаШапка.Склад = Объект.Склад;
	
	ПараметрыУчетаТабличнаяЧасть = ЗапасыСервер.ПараметрыУчетаНоменклатуры();
	ПараметрыУчетаТабличнаяЧасть.ПолноеИмяОбъекта = ПустаяСсылка().Метаданные().ПолноеИмя();
	ПараметрыУчетаТабличнаяЧасть.ИспользоватьСерии = ПараметрыУчетаНаСкладе.ИспользоватьСерииНоменклатуры;
	ПараметрыУчетаТабличнаяЧасть.ИспользоватьПартии = ПараметрыУчетаНаСкладе.ИспользоватьПартии;
	ПараметрыУчетаТабличнаяЧасть.Склад = Объект.Склад;
	
	ПараметрыУчета = Новый Структура;
	ПараметрыУчета.Вставить("Шапка", ПараметрыУчетаШапка);
	ПараметрыУчета.Вставить("ТабличнаяЧасть", ПараметрыУчетаТабличнаяЧасть);
	
	Возврат ПараметрыУчета;
	
КонецФункции

// Возвращает текст запроса для расчета статусов указания параметров учета номенклатуры
//
// Параметры
//   ПараметрыУчетаНоменклатуры - Структура - состав полей задается в функции ЗапасыСервер.ПараметрыУчетаНоменклатуры
//
// Возвращаемое значение
//   Строка - текст запроса
//
Функция ТекстЗапросаРасчетаСтатусовУчетаНоменклатуры(ПараметрыУчетаНоменклатуры) Экспорт
	
	Возврат ЗапасыСервер.ТекстЗапросаРасчетаСтатусовУчетаНоменклатуры(ПараметрыУчетаНоменклатуры);
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	И ЗначениеРазрешено(Склад)
	|	И ЗначениеРазрешено(ПодразделениеОрганизации)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти // ПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

////////////////////////////////////////////////////////////////////////////////
// Проведение
#Область Проведение

// Инициализирует таблицы значений, содержащие данные для проведения документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицыДвиженийДляПроведения(ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	ОсновныеДанныеДокумента = ПодготовитьОсновныеДанныеДляПроведения(ДополнительныеСвойства);
	
	ИнициализироватьКлючиАналитикиВидаУчета(ОсновныеДанныеДокумента);
	ИнициализироватьКлючиАналитикиУчетаНоменклатуры(ОсновныеДанныеДокумента);
	
	ПроведениеБольничнаяАптека.ДобавитьТекстЗапросаДвижений(ДополнительныеСвойства, ТекстЗапросаВтТаблицаТовары());
	ПроведениеБольничнаяАптека.ДобавитьТекстЗапросаДвижений(ДополнительныеСвойства, ТекстЗапросаВтТаблицаПродукция());
	ПроведениеБольничнаяАптека.ДобавитьТекстЗапросаДвижений(ДополнительныеСвойства, ТекстЗапросаТоварыНаСкладах(), Метаданные.РегистрыНакопления.ТоварыНаСкладах);
	ПроведениеБольничнаяАптека.ДобавитьТекстЗапросаДвижений(ДополнительныеСвойства, ТекстЗапросаСвободныеОстатки(), Метаданные.РегистрыНакопления.СвободныеОстатки);
	ПроведениеБольничнаяАптека.ДобавитьТекстЗапросаДвижений(ДополнительныеСвойства, ТекстЗапросаВтАналитика());
	ПроведениеБольничнаяАптека.ДобавитьТекстЗапросаДвижений(ДополнительныеСвойства, ТекстЗапросаВтАналитикаПродукция());
	ПроведениеБольничнаяАптека.ДобавитьТекстЗапросаДвижений(ДополнительныеСвойства, ТекстЗапросаЗатратыНаВыпускПродукции(), "ЗатратыНаВыпускПродукции");
	ПроведениеБольничнаяАптека.ДобавитьТекстЗапросаДвижений(ДополнительныеСвойства, ТекстЗапросаВыпускПродукции(), "ВыпускПродукции");
	
	РегистрыДляПроведения = Неопределено;
	Если Регистры <> Неопределено Тогда
		Если ТипЗнч(Регистры) = Тип("Строка") Тогда
			РегистрыДляПроведения = Новый Структура(Регистры);
		ИначеЕсли ТипЗнч(Регистры) = Тип("Массив") Тогда
			РегистрыДляПроведения = Новый Структура(СтрСоединить(Регистры, ","));
		Иначе
			РегистрыДляПроведения = ОбщегоНазначения.СкопироватьРекурсивно(Регистры);
		КонецЕсли;
		
		Если РегистрыДляПроведения.Свойство(Метаданные.РегистрыНакопления.СебестоимостьТоваров.Имя)
		 Или РегистрыДляПроведения.Свойство(Метаданные.РегистрыНакопления.ДвиженияНоменклатураНоменклатура.Имя) Тогда
			РегистрыДляПроведения.Вставить("ЗатратыНаВыпускПродукции");
			РегистрыДляПроведения.Вставить("ВыпускПродукции");
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос = Новый Запрос(ПроведениеБольничнаяАптека.ПолучитьТекстЗапросаДвижений(ДополнительныеСвойства, РегистрыДляПроведения));
	
	Для Каждого ДанныеДокумента Из ОсновныеДанныеДокумента Цикл
		Запрос.УстановитьПараметр(ДанныеДокумента.Ключ, ДанныеДокумента.Значение);
	КонецЦикла;
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ПроведениеБольничнаяАптека.ЗаполнитьТаблицыДвижений(ДополнительныеСвойства, РезультатЗапроса, РегистрыДляПроведения);
	
	Если РегистрыДляПроведения = Неопределено
	 Или РегистрыДляПроведения.Свойство(Метаданные.РегистрыНакопления.СебестоимостьТоваров.Имя)
	 Или РегистрыДляПроведения.Свойство(Метаданные.РегистрыНакопления.ДвиженияНоменклатураНоменклатура.Имя) Тогда
		
		НомерТаблицыВыпускПродукции = ПроведениеБольничнаяАптека.ПолучитьНомерТаблицыЗапросаДвижений(ДополнительныеСвойства, "ВыпускПродукции");
		НомерТаблицыЗатратыНаВыпуск = ПроведениеБольничнаяАптека.ПолучитьНомерТаблицыЗапросаДвижений(ДополнительныеСвойства, "ЗатратыНаВыпускПродукции");
		
		ТаблицаВыпуска =РезультатЗапроса[НомерТаблицыВыпускПродукции].Выгрузить();
		ТаблицаЗатрат = РезультатЗапроса[НомерТаблицыЗатратыНаВыпуск].Выгрузить();
		Распределение = РаспределитьЗатратыНаПродукцию(ТаблицаВыпуска, ТаблицаЗатрат, ОсновныеДанныеДокумента);
		
		Если РегистрыДляПроведения = Неопределено Или РегистрыДляПроведения.Свойство(Метаданные.РегистрыНакопления.СебестоимостьТоваров.Имя) Тогда
			ДополнительныеСвойства.ТаблицыДляДвижений.Вставить(Метаданные.РегистрыНакопления.СебестоимостьТоваров.Имя, Распределение.СебестоимостьТоваров);
		КонецЕсли;
		Если РегистрыДляПроведения = Неопределено Или РегистрыДляПроведения.Свойство(Метаданные.РегистрыНакопления.ДвиженияНоменклатураНоменклатура.Имя) Тогда
			ДополнительныеСвойства.ТаблицыДляДвижений.Вставить(Метаданные.РегистрыНакопления.ДвиженияНоменклатураНоменклатура.Имя, Распределение.ДвиженияНоменклатураНоменклатура);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Функция ПодготовитьОсновныеДанныеДляПроведения(ДополнительныеСвойства)
	
	ЗапрашиваемыеДанные = Новый Структура;
	ЗапрашиваемыеДанные.Вставить("Ссылка");
	ЗапрашиваемыеДанные.Вставить("Период", "Дата");
	ЗапрашиваемыеДанные.Вставить("Организация");
	ЗапрашиваемыеДанные.Вставить("Склад");
	ЗапрашиваемыеДанные.Вставить("ПодразделениеОрганизации");
	ЗапрашиваемыеДанные.Вставить("ИсточникФинансирования");
	ЗапрашиваемыеДанные.Вставить("Статус");
	
	ОсновныеДанныеДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
		ПроведениеБольничнаяАптека.ПолучитьСсылкуНаДокументДляПроведения(ДополнительныеСвойства),
		ЗапрашиваемыеДанные);
	
	ОсновныеДанныеДокумента.Вставить("ВестиУчетПоИсточникамФинансирования", ПолучитьФункциональнуюОпцию("ИспользоватьИсточникиФинансирования"));
	ОсновныеДанныеДокумента.Вставить("ИспользоватьМестаХранения", ПолучитьФункциональнуюОпцию("ИспользоватьМестаХранения", Новый Структура("Склад", ОсновныеДанныеДокумента.Склад)));
	ОсновныеДанныеДокумента.Вставить("ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.Изготовление);
	
	Если Не ОсновныеДанныеДокумента.ВестиУчетПоИсточникамФинансирования Тогда
		ОсновныеДанныеДокумента.ИсточникФинансирования = Справочники.ИсточникиФинансирования.ПустаяСсылка();
	КонецЕсли;
	
	ЗапасыСервер.ПриПодготовкеОсновныхДанныхДляПроведения(ДополнительныеСвойства, ОсновныеДанныеДокумента);
	
	Возврат ОсновныеДанныеДокумента;
	
КонецФункции

Функция ТекстЗапросаВтТаблицаТовары()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки               КАК НомерСтроки,
	|	&Организация                            КАК Организация,
	|	&Склад                                  КАК Склад,
	|	ВЫБОР
	|		КОГДА &ИспользоватьМестаХранения
	|			ТОГДА ТаблицаТовары.МестоХранения
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.МестаХранения.ПустаяСсылка)
	|	КОНЕЦ                                   КАК МестоХранения,
	|	ТаблицаТовары.Номенклатура              КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерий В (&СтатусУчетПоСериям, &СтатусУчетСебестоимостиПоСериям)
	|			ТОГДА ТаблицаТовары.СерияНоменклатуры
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ                                   КАК СерияНоменклатуры,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияПартий В (&СтатусУчетПоПартиям, &СтатусУчетСебестоимостиПоПартиям)
	|			ТОГДА ТаблицаТовары.Партия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ                                   КАК Партия,
	|	ВЫБОР 
	|		КОГДА &ВестиУчетПоИсточникамФинансирования
	|			ТОГДА ТаблицаТовары.ИсточникФинансирования
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИсточникиФинансирования.ПустаяСсылка)
	|	КОНЕЦ                                   КАК ИсточникФинансирования,
	|	ТаблицаТовары.Количество                КАК Количество,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерий В (&СтатусУчетСебестоимостиПоСериям)
	|			ТОГДА ТаблицаТовары.СерияНоменклатуры
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ                                   КАК СерияНоменклатурыДляСебестоимости,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияПартий В (&СтатусУчетСебестоимостиПоПартиям)
	|			ТОГДА ТаблицаТовары.Партия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ                                   КАК ПартияДляСебестоимости
	|ПОМЕСТИТЬ ВтТаблицаТовары
	|ИЗ
	|	Документ.ИзготовлениеПоЛекарственнойПрописи.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтТаблицаПродукция()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	1                                                   КАК НомерСтроки,
	|	&Организация                                        КАК Организация,
	|	&Склад                                              КАК Склад,
	|	ЗНАЧЕНИЕ(Справочник.МестаХранения.ПустаяСсылка)     КАК МестоХранения,
	|	ТаблицаТовары.Номенклатура                          КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерий В (&СтатусУчетПоСериям, &СтатусУчетСебестоимостиПоСериям)
	|			ТОГДА ТаблицаТовары.СерияНоменклатуры
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ                                               КАК СерияНоменклатуры,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияПартий В (&СтатусУчетПоПартиям, &СтатусУчетСебестоимостиПоПартиям)
	|			ТОГДА ТаблицаТовары.Партия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ                                               КАК Партия,
	|	&ИсточникФинансирования                             КАК ИсточникФинансирования,
	|	ТаблицаТовары.Количество                            КАК Количество,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерий В (&СтатусУчетСебестоимостиПоСериям)
	|			ТОГДА ТаблицаТовары.СерияНоменклатуры
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ                                               КАК СерияНоменклатурыДляСебестоимости,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияПартий В (&СтатусУчетСебестоимостиПоПартиям)
	|			ТОГДА ТаблицаТовары.Партия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ                                                КАК ПартияДляСебестоимости
	|ПОМЕСТИТЬ ВтТаблицаПродукция
	|ИЗ
	|	Документ.ИзготовлениеПоЛекарственнойПрописи КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТоварыНаСкладах()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	1                                       КАК Порядок,
	|	ТаблицаТовары.НомерСтроки               КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)  КАК ВидДвижения,
	|	&Период                                 КАК Период,
	|	ТаблицаТовары.Организация               КАК Организация,
	|	ТаблицаТовары.Склад                     КАК Склад,
	|	ТаблицаТовары.МестоХранения             КАК МестоХранения,
	|	ТаблицаТовары.Номенклатура              КАК Номенклатура,
	|	ТаблицаТовары.СерияНоменклатуры         КАК СерияНоменклатуры,
	|	ТаблицаТовары.Партия                    КАК Партия,
	|	ТаблицаТовары.ИсточникФинансирования    КАК ИсточникФинансирования,
	|	ТаблицаТовары.Количество                КАК Количество
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыИзготовлений.Изготовлено)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2                                       КАК Порядок,
	|	ТаблицаТовары.НомерСтроки               КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)  КАК ВидДвижения,
	|	&Период                                 КАК Период,
	|	ТаблицаТовары.Организация               КАК Организация,
	|	ТаблицаТовары.Склад                     КАК Склад,
	|	ТаблицаТовары.МестоХранения             КАК МестоХранения,
	|	ТаблицаТовары.Номенклатура              КАК Номенклатура,
	|	ТаблицаТовары.СерияНоменклатуры         КАК СерияНоменклатуры,
	|	ТаблицаТовары.Партия                    КАК Партия,
	|	ТаблицаТовары.ИсточникФинансирования    КАК ИсточникФинансирования,
	|	ТаблицаТовары.Количество                КАК Количество
	|ИЗ
	|	ВтТаблицаПродукция КАК ТаблицаТовары
	|ГДЕ
	|	&Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыИзготовлений.Изготовлено)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаСвободныеОстатки()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	1                                       КАК Порядок,
	|	ТаблицаТовары.НомерСтроки               КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)  КАК ВидДвижения,
	|	&Период                                 КАК Период,
	|	ТаблицаТовары.Организация               КАК Организация,
	|	ТаблицаТовары.Склад                     КАК Склад,
	|	ТаблицаТовары.МестоХранения             КАК МестоХранения,
	|	ТаблицаТовары.Номенклатура              КАК Номенклатура,
	|	ТаблицаТовары.СерияНоменклатуры         КАК СерияНоменклатуры,
	|	ТаблицаТовары.Партия                    КАК Партия,
	|	ТаблицаТовары.ИсточникФинансирования    КАК ИсточникФинансирования,
	|	0                                       КАК ВНаличии,
	|	ТаблицаТовары.Количество                КАК ВРезервеСоСклада
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыИзготовлений.ВРаботе)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	1                                       КАК Порядок,
	|	ТаблицаТовары.НомерСтроки               КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)  КАК ВидДвижения,
	|	&Период                                 КАК Период,
	|	ТаблицаТовары.Организация               КАК Организация,
	|	ТаблицаТовары.Склад                     КАК Склад,
	|	ТаблицаТовары.МестоХранения             КАК МестоХранения,
	|	ТаблицаТовары.Номенклатура              КАК Номенклатура,
	|	ТаблицаТовары.СерияНоменклатуры         КАК СерияНоменклатуры,
	|	ТаблицаТовары.Партия                    КАК Партия,
	|	ТаблицаТовары.ИсточникФинансирования    КАК ИсточникФинансирования,
	|	ТаблицаТовары.Количество                КАК ВНаличии,
	|	0                                       КАК ВРезервеСоСклада
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыИзготовлений.Изготовлено)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2                                       КАК Порядок,
	|	ТаблицаТовары.НомерСтроки               КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)  КАК ВидДвижения,
	|	&Период                                 КАК Период,
	|	ТаблицаТовары.Организация               КАК Организация,
	|	ТаблицаТовары.Склад                     КАК Склад,
	|	ТаблицаТовары.МестоХранения             КАК МестоХранения,
	|	ТаблицаТовары.Номенклатура              КАК Номенклатура,
	|	ТаблицаТовары.СерияНоменклатуры         КАК СерияНоменклатуры,
	|	ТаблицаТовары.Партия                    КАК Партия,
	|	ТаблицаТовары.ИсточникФинансирования    КАК ИсточникФинансирования,
	|	ТаблицаТовары.Количество                КАК ВНаличии,
	|	0                                       КАК ВРезервеСоСклада
	|ИЗ
	|	ВтТаблицаПродукция КАК ТаблицаТовары
	|ГДЕ
	|	&Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыИзготовлений.Изготовлено)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтАналитика()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТовары.Номенклатура                       КАК Номенклатура,
	|	ТаблицаТовары.СерияНоменклатурыДляСебестоимости  КАК СерияНоменклатуры,
	|	ТаблицаТовары.ПартияДляСебестоимости             КАК Партия,
	|	ТаблицаТовары.ИсточникФинансирования             КАК ИсточникФинансирования,
	|	АналитикаУчетаНоменклатуры.КлючАналитики         КАК АналитикаУчетаНоменклатуры,
	|	АналитикаВидаУчета.КлючАналитики                 КАК АналитикаВидаУчета
	|ПОМЕСТИТЬ ВтАналитика
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
	|		ПО 
	|			ТаблицаТовары.Номенклатура                        = АналитикаУчетаНоменклатуры.Номенклатура
	|			И ТаблицаТовары.СерияНоменклатурыДляСебестоимости = АналитикаУчетаНоменклатуры.СерияНоменклатуры
	|			И ТаблицаТовары.ПартияДляСебестоимости            = АналитикаУчетаНоменклатуры.Партия
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаВидаУчета КАК АналитикаВидаУчета
	|		ПО 
	|			АналитикаВидаУчета.Организация                = ТаблицаТовары.Организация
	|			И АналитикаВидаУчета.Склад                    = &Склад
	|			И АналитикаВидаУчета.ИсточникФинансирования   = ТаблицаТовары.ИсточникФинансирования
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	СерияНоменклатуры,
	|	Партия,
	|	ИсточникФинансирования
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтАналитикаПродукция()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура                           КАК Номенклатура,
	|	ТаблицаТовары.СерияНоменклатурыДляСебестоимости      КАК СерияНоменклатуры,
	|	ТаблицаТовары.ПартияДляСебестоимости                 КАК Партия,
	|	ТаблицаТовары.ИсточникФинансирования                 КАК ИсточникФинансирования,
	|	АналитикаУчетаНоменклатуры.КлючАналитики             КАК АналитикаУчетаНоменклатуры,
	|	АналитикаВидаУчета.КлючАналитики                     КАК АналитикаВидаУчета
	|ПОМЕСТИТЬ ВтАналитикаПродукция
	|ИЗ
	|	ВтТаблицаПродукция КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
	|		ПО 
	|			ТаблицаТовары.Номенклатура                        = АналитикаУчетаНоменклатуры.Номенклатура
	|			И ТаблицаТовары.СерияНоменклатурыДляСебестоимости = АналитикаУчетаНоменклатуры.СерияНоменклатуры
	|			И ТаблицаТовары.ПартияДляСебестоимости            = АналитикаУчетаНоменклатуры.Партия
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаВидаУчета КАК АналитикаВидаУчета
	|		ПО 
	|			АналитикаВидаУчета.Организация                = ТаблицаТовары.Организация
	|			И АналитикаВидаУчета.Склад                    = &Склад
	|			И АналитикаВидаУчета.ИсточникФинансирования   = ТаблицаТовары.ИсточникФинансирования
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	СерияНоменклатуры,
	|	Партия,
	|	ИсточникФинансирования
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаЗатратыНаВыпускПродукции()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки                               КАК НомерСтроки,
	|	&Период                                                 КАК Период,
	|	Аналитика.АналитикаУчетаНоменклатуры                    КАК АналитикаУчетаЗатрат,
	|	Аналитика.АналитикаВидаУчета                            КАК АналитикаВидаУчетаЗатрат,
	|	ТаблицаТовары.Количество                                КАК Количество
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			ВтАналитика КАК Аналитика
	|		ПО
	|			ТаблицаТовары.Номенклатура                        = Аналитика.Номенклатура
	|			И ТаблицаТовары.СерияНоменклатурыДляСебестоимости = Аналитика.СерияНоменклатуры
	|			И ТаблицаТовары.ПартияДляСебестоимости            = Аналитика.Партия
	|			И ТаблицаТовары.ИсточникФинансирования            = Аналитика.ИсточникФинансирования
	|ГДЕ
	|	&Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыИзготовлений.Изготовлено)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВыпускПродукции()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки                        КАК НомерСтроки,
	|	&Период                                          КАК Период,
	|	Аналитика.АналитикаВидаУчета                     КАК АналитикаВидаУчета,
	|	Аналитика.АналитикаУчетаНоменклатуры             КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.Количество                         КАК Количество,
	|	1                                                КАК ДоляРаспределения
	|ИЗ
	|	ВтТаблицаПродукция КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			ВтАналитикаПродукция КАК Аналитика
	|		ПО 
	|			ТаблицаТовары.Номенклатура                        = Аналитика.Номенклатура
	|			И ТаблицаТовары.СерияНоменклатурыДляСебестоимости = Аналитика.СерияНоменклатуры
	|			И ТаблицаТовары.ПартияДляСебестоимости            = Аналитика.Партия
	|			И ТаблицаТовары.ИсточникФинансирования            = Аналитика.ИсточникФинансирования
	|ГДЕ
	|	&Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыИзготовлений.Изготовлено)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция РаспределитьЗатратыНаПродукцию(ТаблицаВыпуска, ТаблицаЗатрат, ОсновныеДанныеДокумента)
	
	СебестоимостьТоваров = РегистрыНакопления.СебестоимостьТоваров.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	СебестоимостьТоваров.Колонки.Удалить("Активность");
	
	ДвиженияНоменклатураНоменклатура = РегистрыНакопления.ДвиженияНоменклатураНоменклатура.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	ДвиженияНоменклатураНоменклатура.Колонки.Удалить("Активность");
	
	Распределение = Новый Структура;
	Распределение.Вставить("СебестоимостьТоваров", СебестоимостьТоваров);
	Распределение.Вставить("ДвиженияНоменклатураНоменклатура", ДвиженияНоменклатураНоменклатура);
	
	Если ТаблицаВыпуска.Количество() = 0 Или ТаблицаЗатрат.Количество() = 0 Тогда
		Возврат Распределение;
	КонецЕсли;
	
	Для Каждого СтрокаВыпуска Из ТаблицаВыпуска Цикл
		
		ЗаписьВыпуск = СебестоимостьТоваров.Добавить();
		ЗаписьВыпуск.Период = СтрокаВыпуска.Период;
		ЗаписьВыпуск.ВидДвижения = ВидДвиженияНакопления.Приход;
		ЗаписьВыпуск.ХозяйственнаяОперация = ОсновныеДанныеДокумента.ХозяйственнаяОперация;
		
		ЗаписьВыпуск.АналитикаВидаУчета = СтрокаВыпуска.АналитикаВидаУчета;
		ЗаписьВыпуск.АналитикаУчетаНоменклатуры = СтрокаВыпуска.АналитикаУчетаНоменклатуры;
		ЗаписьВыпуск.РазделУчета = Перечисления.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах;
		
		ЗаписьВыпуск.Количество = СтрокаВыпуска.Количество;
		
	КонецЦикла;
	
	КоэффициентыРаспределения = ТаблицаВыпуска.ВыгрузитьКолонку("ДоляРаспределения");
	База = ТаблицаЗатрат.Количество();
	
	Для Каждого СтрокаЗатраты Из ТаблицаЗатрат Цикл
		
		РаспределенноеКоличество = ОбщегоНазначенияКлиентСервер.РаспределитьСуммуПропорциональноКоэффициентам(СтрокаЗатраты.Количество, КоэффициентыРаспределения, 3);
		
		Индекс = 0;
		Для Каждого СтрокаВыпуска Из ТаблицаВыпуска Цикл
			
			ЗаписьЗатраты = СебестоимостьТоваров.Добавить();
			ЗаписьЗатраты.Период = СтрокаЗатраты.Период;
			ЗаписьЗатраты.ВидДвижения = ВидДвиженияНакопления.Расход;
			ЗаписьЗатраты.ХозяйственнаяОперация = ОсновныеДанныеДокумента.ХозяйственнаяОперация;
			
			ЗаписьЗатраты.АналитикаВидаУчета = СтрокаЗатраты.АналитикаВидаУчетаЗатрат;
			ЗаписьЗатраты.АналитикаУчетаНоменклатуры = СтрокаЗатраты.АналитикаУчетаЗатрат;
			ЗаписьЗатраты.РазделУчета = Перечисления.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах;
			
			ЗаписьЗатраты.КорАналитикаВидаУчета = СтрокаВыпуска.АналитикаВидаУчета;
			ЗаписьЗатраты.КорАналитикаУчетаНоменклатуры = СтрокаВыпуска.АналитикаУчетаНоменклатуры;
			ЗаписьЗатраты.КорРазделУчета = Перечисления.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах;
			
			ЗаписьЗатраты.ДокументДвижения = ОсновныеДанныеДокумента.Ссылка;
			
			ЗаписьЗатраты.Количество = РаспределенноеКоличество[Индекс];
			
			// Движение Номенклатура - Номенклатура
			
			Если База <> 0 Тогда
				КоличествоВыпуска = Окр(СтрокаВыпуска.Количество / База, 3, РежимОкругления.Окр15как20);
			Иначе
				КоличествоВыпуска = СтрокаВыпуска.Количество;
			КонецЕсли;
			
			СтрокаВыпуска.Количество = СтрокаВыпуска.Количество - КоличествоВыпуска;
			
			ЗаписьНоменклатураНоменклатура = ДвиженияНоменклатураНоменклатура.Добавить();
			ЗаполнитьЗначенияСвойств(ЗаписьНоменклатураНоменклатура, ЗаписьЗатраты);
			ЗаписьНоменклатураНоменклатура.КорКоличество = КоличествоВыпуска;
			
		КонецЦикла;
		
		База = База - 1;
		
	КонецЦикла;
	
	Возврат Распределение;
	
КонецФункции

Процедура ИнициализироватьКлючиАналитикиУчетаНоменклатуры(Реквизиты)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерий В (&СтатусУчетСебестоимостиПоСериям)
	|			ТОГДА ТаблицаТовары.СерияНоменклатуры
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК СерияНоменклатуры,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияПартий В (&СтатусУчетСебестоимостиПоПартиям)
	|			ТОГДА ЕСТЬNULL(Партии.Ссылка, ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка))
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК Партия
	|ПОМЕСТИТЬ втТаблицаАналитики
	|ИЗ
	|	Документ.ИзготовлениеПоЛекарственнойПрописи КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПартииНоменклатуры КАК Партии
	|		ПО (Партии.Поставщик = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка))
	|			И (Партии.ДокументОприходования = &Ссылка)
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТовары.Номенклатура,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерий В (&СтатусУчетСебестоимостиПоСериям)
	|			ТОГДА ТаблицаТовары.СерияНоменклатуры
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияПартий В (&СтатусУчетСебестоимостиПоПартиям)
	|			ТОГДА ТаблицаТовары.Партия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ
	|ИЗ
	|	Документ.ИзготовлениеПоЛекарственнойПрописи.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	СерияНоменклатуры,
	|	Партия
	|";
	
	Запрос.УстановитьПараметр("Ссылка", Реквизиты.Ссылка);
	Запрос.УстановитьПараметр("СтатусУчетСебестоимостиПоСериям", Реквизиты.СтатусУчетСебестоимостиПоСериям);
	Запрос.УстановитьПараметр("СтатусУчетСебестоимостиПоПартиям", Реквизиты.СтатусУчетСебестоимостиПоПартиям);
	Запрос.Выполнить();
	
	Справочники.КлючиАналитикиУчетаНоменклатуры.ИнициализироватьКлючиАналитики(Запрос.МенеджерВременныхТаблиц);
	
КонецПроцедуры

Процедура ИнициализироватьКлючиАналитикиВидаУчета(Реквизиты)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	&Организация КАК Организация,
	|	&Склад КАК Склад,
	|	&ИсточникФинансирования КАК ИсточникФинансирования
	|ПОМЕСТИТЬ втТаблицаАналитики
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	&Организация,
	|	&Склад,
	|	ВЫБОР
	|		КОГДА &ВестиУчетПоИсточникамФинансирования
	|			ТОГДА ТаблицаТовары.ИсточникФинансирования
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИсточникиФинансирования.ПустаяСсылка)
	|	КОНЕЦ
	|ИЗ
	|	Документ.ИзготовлениеПоЛекарственнойПрописи.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Склад,
	|	ИсточникФинансирования
	|";
	
	Запрос.УстановитьПараметр("Ссылка", Реквизиты.Ссылка);
	Запрос.УстановитьПараметр("Организация", Реквизиты.Организация);
	Запрос.УстановитьПараметр("Склад", Реквизиты.Склад);
	Запрос.УстановитьПараметр("ИсточникФинансирования"	, Реквизиты.ИсточникФинансирования);
	Запрос.УстановитьПараметр("ВестиУчетПоИсточникамФинансирования", Реквизиты.ВестиУчетПоИсточникамФинансирования);
	Запрос.Выполнить();
	
	Справочники.КлючиАналитикиВидаУчета.ИнициализироватьКлючиАналитики(Запрос.МенеджерВременныхТаблиц);
	
КонецПроцедуры

#КонецОбласти // Проведение

////////////////////////////////////////////////////////////////////////////////
// Печать
#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	УправлениеПечатьюБольничнаяАптека.ДобавитьКомандыПечати(ПустаяСсылка().Метаданные().ПолноеИмя(), КомандыПечати);
	
КонецПроцедуры

// Возвращает список доступных печатных форм документа
//
Функция ДоступныеПечатныеФормы() Экспорт
	
	МетаданныеДокумента = ПустаяСсылка().Метаданные();
	МенеджерПечати      = МетаданныеДокумента.ПолноеИмя();
	МетаданныеМакетов   = МетаданныеДокумента.Макеты;
	
	ПечатныеФормы = УправлениеПечатьюБольничнаяАптека.СоздатьКоллекциюДоступныхПечатныхФорм();
	
	ПечатнаяФорма = УправлениеПечатьюБольничнаяАптека.ДобавитьПечатнуюФорму(ПечатныеФормы, "АктВыпускаПродукции", МенеджерПечати);
	ПечатнаяФорма.Представление = МетаданныеМакетов.ПФ_MXL_АктВыпускаПродукции.Представление();
	ПечатнаяФорма.ПутьКМакету = ФормированиеПечатныхФормБольничнаяАптека.ПутьКМакету(МетаданныеМакетов.ПФ_MXL_АктВыпускаПродукции);
	УправлениеПечатьюБольничнаяАптека.ДобавитьКомандуПечати(ПечатнаяФорма);
	
	Возврат ПечатныеФормы;
	
КонецФункции

Функция ПечатьАктВыпускаПродукции(МассивОбъектов, ОбъектыПечати) Экспорт
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.АвтоМасштаб        = Истина;
	
	ПолноеИмяМакета = ФормированиеПечатныхФормБольничнаяАптека.ПутьКМакету(ПустаяСсылка().Метаданные().Макеты.ПФ_MXL_АктВыпускаПродукции);
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_" + ПолноеИмяМакета;
	Макет = УправлениеПечатью.МакетПечатнойФормы(ПолноеИмяМакета);
	
	МассивВыводимыхОбластей = Новый Массив;
	
	ВалютаПечати = ЗначениеНастроекБольничнаяАптекаПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	
	ПараметрыПечати = Новый Структура;
	ПараметрыПечати.Вставить("ПолучатьЦеныПоНастройкамСклада");
	ДанныеДляПечати = ПолучитьДанныеДляПечати(МассивОбъектов, ПараметрыПечати);
	
	Шапка = ДанныеДляПечати.РезультатПоШапке.Выбрать();
	ВыборкаПоДокументам = ДанныеДляПечати.РезультатПоТабличнойЧасти.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	Пока Шапка.Следующий() Цикл
		
		Если Шапка.ИсточникИнформацииОЦенах = Перечисления.ИсточникиИнформацииОЦенахДляПечати.ПоСебестоимости Тогда
			Если Шапка.ПредварительныйРасчет = Null Тогда
				ТекстСообщения = НСтр("ru = 'Не удалось получить цены по себестоимости для документа %Документ%: на %Период% не произведен расчет себестоимости.'");
				
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Документ%", Шапка.Ссылка);
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Период%", Формат(НачалоМесяца(Шапка.ДатаДокумента),"ДЛФ=DD"));
				
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Шапка.Ссылка);
				
				Продолжить;
				
			ИначеЕсли Шапка.ПредварительныйРасчет Тогда
				
				ТекстСообщения = НСтр("ru = 'При печати цен документа %Документ% использовались данные предварительного расчета себестоимости.'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Документ%", Шапка.Ссылка);
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Шапка.Ссылка);
				
			КонецЕсли;
		КонецЕсли;
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(Шапка.Ссылка, ТабличныйДокумент, Макет);
		
		// Получение параметров для заполнения
		ПараметрыИзШапки = ПолучитьПараметрыШапкиАктВыпускаПродукции(Шапка);
		
		// Вывод области Заголовок
		ФормированиеПечатныхФормБольничнаяАптека.ВывестиОбластьПоИмени(ТабличныйДокумент, Макет, "Заголовок", ПараметрыИзШапки);
		
		// Вывод области РеквизитыШапки
		ФормированиеПечатныхФормБольничнаяАптека.ВывестиОбластьПоИмени(ТабличныйДокумент, Макет, "РеквизитыШапки", ПараметрыИзШапки);
		
		// Вывод области ШапкаТаблицы
		ФормированиеПечатныхФормБольничнаяАптека.ВывестиОбластьПоИмени(ТабличныйДокумент, Макет, "ШапкаТаблицы", ПараметрыИзШапки);
		
		// Инициализация итогов по документу
		ПараметрыИтого = Новый Структура;
		ПараметрыИтого.Вставить("Сумма", 0);
		
		ВыборкаПоДокументам.Сбросить();
		ПараметрыПоиска = Новый Структура("Документ", Шапка.Ссылка);
		Если ВыборкаПоДокументам.НайтиСледующий(ПараметрыПоиска) Тогда
			ВыборкаСтрокТовары = ВыборкаПоДокументам.Выбрать();
			КлючиПараметров = ФормированиеПечатныхФормБольничнаяАптека.ПолучитьИменаКолонокТаблицы(ВыборкаСтрокТовары);
			
			// Формирование области Строка
			МассивСтрокТаблицы = Новый Массив;
			КоличествоСтрок = ВыборкаСтрокТовары.Количество();
			НомерСтроки = 0;
			Пока ВыборкаСтрокТовары.Следующий() Цикл
				
				НомерСтроки = НомерСтроки + 1;
				
				ДанныеСтроки = Новый Структура(КлючиПараметров);
				ЗаполнитьЗначенияСвойств(ДанныеСтроки, ВыборкаСтрокТовары);
				
				ТоварНаименование = ОбщегоНазначенияБольничнаяАптека.ПолучитьПредставлениеНоменклатурыДляПечати(
					ВыборкаСтрокТовары.ТоварНаименование,
					ВыборкаСтрокТовары.СерияНоменклатуры,
					ВыборкаСтрокТовары.Партия);
				ДанныеСтроки.Вставить("ТоварНаименование", ТоварНаименование);
				
				ФормированиеПечатныхФормБольничнаяАптека.ДобавитьОбластьВМассивПоОписанию(Макет, "Строка", МассивСтрокТаблицы, ДанныеСтроки);
				
				ФормированиеПечатныхФормБольничнаяАптека.РассчитатьИтоги(ДанныеСтроки, ПараметрыИтого);
				
			КонецЦикла;
		КонецЕсли;
		
		// Вывод области СтрокаПродукция
		ПараметрыИзШапки.Вставить("Цена" , ПараметрыИтого.Сумма / ?(Шапка.Количество = 0, 1, Шапка.Количество));
		ПараметрыИзШапки.Вставить("Сумма", ПараметрыИтого.Сумма);
		ФормированиеПечатныхФормБольничнаяАптека.ВывестиОбластьПоИмени(ТабличныйДокумент, Макет, "СтрокаПродукция", ПараметрыИзШапки);
		
		// Вывод области Строка
		ГраницаОбластейСтрока = МассивСтрокТаблицы.ВГраница();
		Для ИндексОбласти = 0 По ГраницаОбластейСтрока Цикл
			
			ОбластьСтрока = МассивСтрокТаблицы[ИндексОбласти];
			
			МассивВыводимыхОбластей.Очистить();
			МассивВыводимыхОбластей.Добавить(ОбластьСтрока);
			Если ИндексОбласти = ГраницаОбластейСтрока Тогда
				МассивВыводимыхОбластей.Добавить(Макет.ПолучитьОбласть("Итого"));
				МассивВыводимыхОбластей.Добавить(Макет.ПолучитьОбласть("СуммаПрописью"));
				МассивВыводимыхОбластей.Добавить(Макет.ПолучитьОбласть("Подписи"));
			КонецЕсли;
			
			Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабличныйДокумент, МассивВыводимыхОбластей) Тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ФормированиеПечатныхФормБольничнаяАптека.ВывестиОбластьПоИмени(ТабличныйДокумент, Макет, "ШапкаТаблицы", ПараметрыИзШапки);
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьСтрока);
			
		КонецЦикла;
		
		// Вывод области Итого
		ФормированиеПечатныхФормБольничнаяАптека.ВывестиОбластьПоИмени(ТабличныйДокумент, Макет, "Итого", ПараметрыИтого);
		
		// Вывод области СуммаПрописью
		ФорматированнаяСумма = ОбщегоНазначенияБольничнаяАптека.ФорматСумм(ПараметрыИтого.Сумма, ВалютаПечати);
		ИтоговаяСтрока = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Всего выпущено наименований %1, на сумму %2'"), КоличествоСтрок, ФорматированнаяСумма);
		
		ПараметрыСуммаПрописью = Новый Структура;
		ПараметрыСуммаПрописью.Вставить("ИтоговаяСтрока", ИтоговаяСтрока);
		ПараметрыСуммаПрописью.Вставить("СуммаПрописью" , РаботаСКурсамиВалют.СформироватьСуммуПрописью(ПараметрыИтого.Сумма, ВалютаПечати));
		
		ФормированиеПечатныхФормБольничнаяАптека.ВывестиОбластьПоИмени(ТабличныйДокумент, Макет, "СуммаПрописью", ПараметрыСуммаПрописью);
		
		// Вывод области Подписи
		ФормированиеПечатныхФормБольничнаяАптека.ВывестиОбластьПоИмени(ТабличныйДокумент, Макет, "Подписи", ПараметрыИзШапки);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПолучитьПараметрыШапкиАктВыпускаПродукции(Шапка)
	
	КлючиПараметров = ФормированиеПечатныхФормБольничнаяАптека.ПолучитьИменаКолонокТаблицы(Шапка);
	
	Параметры = Новый Структура(КлючиПараметров);
	ЗаполнитьЗначенияСвойств(Параметры, Шапка);
	
	ТоварНаименование = ОбщегоНазначенияБольничнаяАптека.ПолучитьПредставлениеНоменклатурыДляПечати(
		Шапка.ТоварНаименование,
		Шапка.СерияНоменклатуры,
		Шапка.Партия);
	Параметры.Вставить("ТоварНаименование", ТоварНаименование);
	
	// Данные заголовка
	НомерДокумента = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Шапка.НомерДокумента);
	ШаблонТекстЗаголовка = НСтр("ru = 'Акт выпуска продукции фармацевтического производства № %1 от %2'");
	ТекстЗаголовка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		ШаблонТекстЗаголовка, НомерДокумента, Формат(Шапка.ДатаДокумента, "ДЛФ=DD"));
	
	Параметры.Вставить("ТекстЗаголовка"      , ТекстЗаголовка);
	Параметры.Вставить("НомерСтрокиПродукции", 1);
	
	Возврат Параметры;
	
КонецФункции

Функция ПолучитьДанныеДляПечати(МассивОбъектов, ПараметрыПечати = Неопределено) Экспорт
	
	ПолучатьЦены = Ложь;
	ПолучатьЦеныПоНастройкамСклада = Истина;
	
	Если ТипЗнч(ПараметрыПечати) = Тип("Структура") Тогда
		ПолучатьЦены = ПараметрыПечати.Свойство("ПолучатьЦеныПоНастройкамСклада") Или ПараметрыПечати.Свойство("ПолучатьЦены");
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаДанныеДляПечати(ПолучатьЦены, ПолучатьЦеныПоНастройкамСклада);
	Запрос.УстановитьПараметр("ТекущийДокумент", МассивОбъектов);
	Запрос.УстановитьПараметр("ИспользоватьИсточникиФинансирования", ПолучитьФункциональнуюОпцию("ИспользоватьИсточникиФинансирования"));
	Запрос.УстановитьПараметр("ПолучатьЦеныПоНастройкамСклада", ПолучатьЦеныПоНастройкамСклада);
	ЗапасыСервер.УстановитьСтатусыПараметровУчетаВПараметрахЗапроса(Запрос);
	
	РезультатыЗапросов = Запрос.ВыполнитьПакет();
	
	ДанныеДляПечати = Новый Структура;
	ДанныеДляПечати.Вставить("РезультатПоШапке"          , РезультатыЗапросов[РезультатыЗапросов.ВГраница() - 1]);
	ДанныеДляПечати.Вставить("РезультатПоТабличнойЧасти" , РезультатыЗапросов[РезультатыЗапросов.ВГраница()]);
	
	Возврат ДанныеДляПечати;
	
КонецФункции

Функция ТекстЗапросаДанныеДляПечати(ПолучатьЦены = Ложь, ПолучатьЦеныПоНастройкамСклада = Ложь)
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Документ.Ссылка                                   КАК Ссылка,
	|	Документ.Номер                                    КАК НомерДокумента,
	|	Документ.Дата                                     КАК ДатаДокумента,
	|	Документ.Организация                              КАК Организация,
	|	Документ.ПодразделениеОрганизации                 КАК Подразделение,
	|	Документ.ПодразделениеОрганизации                 КАК Изготовитель,
	|	Документ.ПодразделениеОрганизации.Представление   КАК ПодразделениеПредставление,
	|	Документ.Склад                                    КАК Склад,
	|	Документ.Склад.Представление                      КАК СкладПредставление,
	|	Документ.ИсточникФинансирования                   КАК ИсточникФинансирования,
	|	Документ.Номенклатура                             КАК Номенклатура,
	|	Документ.Номенклатура.НаименованиеПолное          КАК ТоварНаименование,
	|	Документ.СерияНоменклатуры                        КАК СерияНоменклатуры,
	|	ЕСТЬNULL(Документ.СерияНоменклатуры.Номер, """")  КАК НомерСерии,
	|	ЕСТЬNULL(Документ.СерияНоменклатуры.ГоденДо, ДАТАВРЕМЯ(1,1,1,0,0,0))
	|	                                                  КАК СрокГодности,
	|	Документ.Партия                                   КАК Партия,
	|	Документ.ЕдиницаИзмерения                         КАК ЕдиницаИзмерения,
	|	Документ.КоличествоВЕдиницахИзмерения             КАК Количество,
	|	Документ.Количество                               КАК КоличествоБазовых,
	|	Документ.Склад.УчетныйВидЦены                     КАК ВидЦены,
	|	Документ.Склад.ИсточникИнформацииОЦенахДляПечати  КАК ИсточникИнформацииОЦенах,
	|	РасчетСебестоимостиТоваров.ПредварительныйРасчет  КАК ПредварительныйРасчет
	|ПОМЕСТИТЬ втШапка
	|ИЗ
	|	Документ.ИзготовлениеПоЛекарственнойПрописи КАК Документ
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.РасчетСебестоимостиТоваров КАК РасчетСебестоимостиТоваров
	|	ПО
	|		&ПолучатьЦеныПоНастройкамСклада
	|		И РасчетСебестоимостиТоваров.Дата МЕЖДУ НАЧАЛОПЕРИОДА(Документ.Дата, МЕСЯЦ) И КОНЕЦПЕРИОДА(Документ.Дата, МЕСЯЦ)
	|		И РасчетСебестоимостиТоваров.Проведен
	|		И Документ.Организация = РасчетСебестоимостиТоваров.Организация
	|ГДЕ
	|	Документ.Ссылка В (&ТекущийДокумент)
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Ссылка                            КАК Документ,
	|	Товары.НомерСтроки                       КАК НомерСтроки,
	|	КОНЕЦПЕРИОДА(Шапка.ДатаДокумента, ДЕНЬ)  КАК ДатаПолученияЦены,
	|	Шапка.Организация                        КАК Организация,
	|	Шапка.Склад                              КАК Склад,
	|	Шапка.ВидЦены                            КАК ВидЦены,
	|	Шапка.ИсточникИнформацииОЦенах           КАК ИсточникИнформацииОЦенах,
	|	Шапка.ПредварительныйРасчет              КАК ПредварительныйРасчет,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
	|	Товары.Номенклатура                      КАК Номенклатура,
	|	Товары.Номенклатура.НаименованиеПолное   КАК ТоварНаименование,
	|	Товары.Номенклатура.Код                  КАК ТоварКод,
	|	Товары.СерияНоменклатуры                 КАК СерияНоменклатуры,
	|	ВЫБОР
	|		КОГДА Товары.СтатусУказанияСерий В (&СтатусУчетСебестоимостиПоСериям)
	|			ТОГДА Товары.СерияНоменклатуры
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ                                    КАК СерияНоменклатурыДляСебестоимости,
	|	ЕСТЬNULL(Товары.СерияНоменклатуры.Номер, """")
	|	                                         КАК НомерСерии,
	|	ЕСТЬNULL(Товары.СерияНоменклатуры.ГоденДо, ДАТАВРЕМЯ(1,1,1,0,0,0))
	|	                                         КАК СрокГодности,
	|	Товары.Партия                            КАК Партия,
	|	ВЫБОР
	|		КОГДА Товары.СтатусУказанияПартий В (&СтатусУчетСебестоимостиПоПартиям)
	|			ТОГДА Товары.Партия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ                                    КАК ПартияДляСебестоимости,
	|	Товары.МестоХранения                     КАК МестоХранения,
	|	Товары.ЕдиницаИзмерения                  КАК ЕдиницаИзмерения,
	|	Товары.ЕдиницаИзмерения.КодОКЕИ          КАК КодПоОКЕИ,
	|	Товары.КоличествоВЕдиницахИзмерения      КАК Количество,
	|	Товары.Количество                        КАК КоличествоБазовых,
	|	ВЫБОР
	|		КОГДА &ИспользоватьИсточникиФинансирования
	|			ТОГДА Товары.ИсточникФинансирования
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИсточникиФинансирования.ПустаяСсылка)
	|	КОНЕЦ                                    КАК ИсточникФинансирования,
	|	Товары.Коэффициент                       КАК Коэффициент
	|ПОМЕСТИТЬ втТовары
	|ИЗ
	|	Документ.ИзготовлениеПоЛекарственнойПрописи.Товары КАК Товары
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		втШапка КАК Шапка
	|	ПО
	|		Товары.Ссылка = Шапка.Ссылка
	|ГДЕ
	|	Товары.Ссылка В (&ТекущийДокумент)
	|";
	
	ПараметрыПолученияЦен = ФормированиеПечатныхФормБольничнаяАптека.ПараметрыПолученияЦен();
	
	Если ПолучатьЦены Тогда
		
		ПараметрыПолученияЦен.ИспользоватьЦеныПоВидуЦен = Истина;
		Если ПолучатьЦеныПоНастройкамСклада Тогда
			ПараметрыПолученияЦен.ИспользоватьЦеныПоСебестоимости = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	ТекстЗапроса = ФормированиеПечатныхФормБольничнаяАптека.ТекстЗапросаСЦенами(ТекстЗапроса, ПараметрыПолученияЦен);
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти // Печать

////////////////////////////////////////////////////////////////////////////////
// Команды формы
#Область КомандыФормы

// Заполняет список команд ввода на основании.
// 
// Параметры:
//   КомандыСоздатьНаОсновании - ТаблицаЗначений - Таблица команд для вывода в подменю. Для изменения.
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСоздатьНаОсновании, НастройкиФормы) Экспорт
	
	ВводНаОснованииБольничнаяАптека.ДобавитьКомандыСозданияНаОсновании(ПустаяСсылка().Метаданные().ПолноеИмя(), КомандыСоздатьНаОсновании, НастройкиФормы);
	
КонецПроцедуры

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица команд для вывода в подменю. Для изменения.
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, НастройкиФормы) Экспорт
	
	МенюОтчетыБольничнаяАптека.ДобавитьОбщиеКоманды(ПустаяСсылка().Метаданные().ПолноеИмя(), КомандыОтчетов, НастройкиФормы);
	
КонецПроцедуры

#КонецОбласти // КомандыФормы

#КонецОбласти // СлужебныеПроцедурыИФункции

////////////////////////////////////////////////////////////////////////////////
// СТАНДАРТНЫЕ ПОДСИСТЕМЫ
#Область СтандартныеПодсистемы

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
//
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти // СтандартныеПодсистемы

#КонецЕсли