#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС
#Область ПрограммныйИнтерфейс

// Имена реквизитов, от значений которых зависят параметры учета номенклатуры
//
// Возвращаемое значение:
//   Строка - имена реквизитов, перечисленные через запятую
//
Функция ИменаРеквизитовДляЗаполненияПараметровУчетаНоменклатуры() Экспорт
	
	Возврат "Склад";
	
КонецФункции

// Возвращает параметры учета для номенклатуры, указанной в документе
//
// Параметры
//   Объект - Структура - структура значений реквизитов объекта, необходимых для заполнения параметров указания серий
// Возвращаемое значение
//   Структура - Состав полей задается в функции НоменклатураКлиентСервер.ПараметрыУчетаНоменклатуры
//
Функция ПараметрыУчетаНоменклатуры(Объект) Экспорт
	
	ПараметрыУчета = ЗапасыСервер.ПараметрыУчетаНоменклатуры();
	ПараметрыУчета.ПолноеИмяОбъекта = ПустаяСсылка().Метаданные().ПолноеИмя();
	
	ПараметрыУчетаНаСкладе = СкладыСервер.ПараметрыУчетаНоменклатуры(Объект.Склад);
	ПараметрыУчета.ИспользоватьСерии = ПараметрыУчетаНаСкладе.ИспользоватьСерииНоменклатуры;
	ПараметрыУчета.ИспользоватьПартии = ПараметрыУчетаНаСкладе.ИспользоватьПартии;
	ПараметрыУчета.Склад = Объект.Склад;
	
	Возврат ПараметрыУчета;
	
КонецФункции

// Возвращает текст запроса для расчета статусов указания параметров учета номенклатуры
//
// Параметры
//   ПараметрыУчетаНоменклатуры - Структура - состав полей задается в функции ЗапасыСервер.ПараметрыУчетаНоменклатуры
//
// Возвращаемое значение
//   Строка - текст запроса
//
Функция ТекстЗапросаРасчетаСтатусовУчетаНоменклатуры(ПараметрыУчетаНоменклатуры) Экспорт
	
	Возврат ЗапасыСервер.ТекстЗапросаРасчетаСтатусовУчетаНоменклатуры(ПараметрыУчетаНоменклатуры);
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	И ЗначениеРазрешено(Склад)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти // ПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьИменаРеквизитовПоТипуОперации(ХозяйственнаяОперация, ВсеРеквизиты, РеквизитыОперации) Экспорт
	
	ВсеРеквизиты = Новый Массив;
	ВсеРеквизиты.Добавить("МестоХранения");
	ВсеРеквизиты.Добавить("Товары.МестоХранения");
	ВсеРеквизиты.Добавить("Товары.МестоХраненияНовое");
	
	РеквизитыОперации = Новый Массив;
	Если ХозяйственнаяОперация = Перечисления.ОперацииРазмещенияПоМестамХраненияВОтделении.РазмещениеПоМестамХранения Тогда
		РеквизитыОперации.Добавить("Товары.МестоХранения");
		РеквизитыОперации.Добавить("Товары.МестоХраненияНовое");
	Иначе
		РеквизитыОперации.Добавить("МестоХранения");
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Проведение
#Область Проведение

// Инициализирует таблицы значений, содержащие данные для проведения документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицыДвиженийДляПроведения(ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	ОсновныеДанныеДокумента = ПодготовитьОсновныеДанныеДляПроведения(ДополнительныеСвойства);
	
	ПроведениеБольничнаяАптека.ДобавитьТекстЗапросаДвижений(ДополнительныеСвойства, ТекстЗапросаВтТаблицаТовары());
	ПроведениеБольничнаяАптека.ДобавитьТекстЗапросаДвижений(ДополнительныеСвойства, ТекстЗапросаТоварыНаСкладахВОтделениях(), Метаданные.РегистрыНакопления.ТоварыНаСкладахВОтделениях);
	ПроведениеБольничнаяАптека.ДобавитьТекстЗапросаДвижений(ДополнительныеСвойства, ТекстЗапросаСвободныеОстатки(), Метаданные.РегистрыНакопления.СвободныеОстатки);
	
	Запрос = Новый Запрос(ПроведениеБольничнаяАптека.ПолучитьТекстЗапросаДвижений(ДополнительныеСвойства, Регистры));
	
	Для Каждого ДанныеДокумента Из ОсновныеДанныеДокумента Цикл
		Запрос.УстановитьПараметр(ДанныеДокумента.Ключ, ДанныеДокумента.Значение);
	КонецЦикла;
	
	ПроведениеБольничнаяАптека.ЗаполнитьТаблицыДвижений(ДополнительныеСвойства, Запрос.ВыполнитьПакет(), Регистры);
	
КонецПроцедуры

Функция ПодготовитьОсновныеДанныеДляПроведения(ДополнительныеСвойства)
	
	ЗапрашиваемыеДанные = Новый Структура;
	ЗапрашиваемыеДанные.Вставить("Ссылка");
	ЗапрашиваемыеДанные.Вставить("Период", "Дата");
	ЗапрашиваемыеДанные.Вставить("Организация");
	ЗапрашиваемыеДанные.Вставить("Склад");
	ЗапрашиваемыеДанные.Вставить("Статус");
	
	ОсновныеДанныеДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
		ПроведениеБольничнаяАптека.ПолучитьСсылкуНаДокументДляПроведения(ДополнительныеСвойства),
		ЗапрашиваемыеДанные);
	
	ОсновныеДанныеДокумента.Вставить("ВестиУчетПоИсточникамФинансирования", ПолучитьФункциональнуюОпцию("ИспользоватьИсточникиФинансирования"));
	ОсновныеДанныеДокумента.Вставить("ИспользоватьМестаХранения", ПолучитьФункциональнуюОпцию("ИспользоватьМестаХранения", Новый Структура("Склад", ОсновныеДанныеДокумента.Склад)));
	
	ЗапасыСервер.ПриПодготовкеОсновныхДанныхДляПроведения(ДополнительныеСвойства, ОсновныеДанныеДокумента);
	
	Возврат ОсновныеДанныеДокумента;
	
КонецФункции

Функция ТекстЗапросаВтТаблицаТовары()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки                               КАК НомерСтроки,
	|	&Организация                                            КАК Организация,
	|	&Склад                                                  КАК Склад,
	|	ТаблицаТовары.МестоХранения                             КАК МестоХранения,
	|	ТаблицаТовары.МестоХраненияНовое                        КАК МестоХраненияНовое,
	|	ТаблицаТовары.Номенклатура                              КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерий В (&СтатусУчетПоСериям, &СтатусУчетСебестоимостиПоСериям)
	|			ТОГДА ТаблицаТовары.СерияНоменклатуры
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ                                                   КАК СерияНоменклатуры,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияПартий В (&СтатусУчетПоПартиям, &СтатусУчетСебестоимостиПоПартиям)
	|			ТОГДА ТаблицаТовары.Партия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ                                                   КАК Партия,
	|	ВЫБОР 
	|		КОГДА &ВестиУчетПоИсточникамФинансирования
	|			ТОГДА ТаблицаТовары.ИсточникФинансирования
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИсточникиФинансирования.ПустаяСсылка)
	|	КОНЕЦ                                                   КАК ИсточникФинансирования,
	|	ТаблицаТовары.Количество                                КАК Количество
	|ПОМЕСТИТЬ ВтТаблицаТовары
	|ИЗ
	|	Документ.РазмещениеТоваровПоМестамХраненияВОтделении.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТоварыНаСкладахВОтделениях()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	1                                       КАК Порядок,
	|	ТаблицаТовары.НомерСтроки               КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)  КАК ВидДвижения,
	|	&Период                                 КАК Период,
	|	ТаблицаТовары.Организация               КАК Организация,
	|	ТаблицаТовары.Склад                     КАК Склад,
	|	ТаблицаТовары.МестоХранения             КАК МестоХранения,
	|	ТаблицаТовары.Номенклатура              КАК Номенклатура,
	|	ТаблицаТовары.СерияНоменклатуры         КАК СерияНоменклатуры,
	|	ТаблицаТовары.Партия                    КАК Партия,
	|	ТаблицаТовары.ИсточникФинансирования    КАК ИсточникФинансирования,
	|	ТаблицаТовары.Количество                КАК Количество
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПеремещенийТоваров.Принято)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2                                       КАК Порядок,
	|	ТаблицаТовары.НомерСтроки               КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)  КАК ВидДвижения,
	|	&Период                                 КАК Период,
	|	ТаблицаТовары.Организация               КАК Организация,
	|	ТаблицаТовары.Склад                     КАК Склад,
	|	ТаблицаТовары.МестоХраненияНовое        КАК МестоХранения,
	|	ТаблицаТовары.Номенклатура              КАК Номенклатура,
	|	ТаблицаТовары.СерияНоменклатуры         КАК СерияНоменклатуры,
	|	ТаблицаТовары.Партия                    КАК Партия,
	|	ТаблицаТовары.ИсточникФинансирования    КАК ИсточникФинансирования,
	|	ТаблицаТовары.Количество                КАК Количество
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПеремещенийТоваров.Принято)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаСвободныеОстатки()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	1                                       КАК Порядок,
	|	ТаблицаТовары.НомерСтроки               КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)  КАК ВидДвижения,
	|	&Период                                 КАК Период,
	|	ТаблицаТовары.Организация               КАК Организация,
	|	ТаблицаТовары.Склад                     КАК Склад,
	|	ТаблицаТовары.МестоХранения             КАК МестоХранения,
	|	ТаблицаТовары.Номенклатура              КАК Номенклатура,
	|	ТаблицаТовары.СерияНоменклатуры         КАК СерияНоменклатуры,
	|	ТаблицаТовары.Партия                    КАК Партия,
	|	ТаблицаТовары.ИсточникФинансирования    КАК ИсточникФинансирования,
	|	ТаблицаТовары.Количество                КАК ВНаличии
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПеремещенийТоваров.Принято)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2                                       КАК Порядок,
	|	ТаблицаТовары.НомерСтроки               КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)  КАК ВидДвижения,
	|	&Период                                 КАК Период,
	|	ТаблицаТовары.Организация               КАК Организация,
	|	ТаблицаТовары.Склад                     КАК Склад,
	|	ТаблицаТовары.МестоХраненияНовое        КАК МестоХранения,
	|	ТаблицаТовары.Номенклатура              КАК Номенклатура,
	|	ТаблицаТовары.СерияНоменклатуры         КАК СерияНоменклатуры,
	|	ТаблицаТовары.Партия                    КАК Партия,
	|	ТаблицаТовары.ИсточникФинансирования    КАК ИсточникФинансирования,
	|	ТаблицаТовары.Количество                КАК ВНаличии
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПеремещенийТоваров.Принято)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти // Проведение

////////////////////////////////////////////////////////////////////////////////
// Печать
#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	УправлениеПечатьюБольничнаяАптека.ДобавитьКомандыПечати(ПустаяСсылка().Метаданные().ПолноеИмя(), КомандыПечати);
	
КонецПроцедуры

// Возвращает список доступных печатных форм документа
//
Функция ДоступныеПечатныеФормы() Экспорт
	
	МенеджерПечати = "Документ.РазмещениеТоваровПоМестамХраненияВОтделении";
	
	ПечатныеФормы = УправлениеПечатьюБольничнаяАптека.СоздатьКоллекциюДоступныхПечатныхФорм();
	
	ПечатнаяФорма = УправлениеПечатьюБольничнаяАптека.ДобавитьПечатнуюФорму(ПечатныеФормы, "АП73", МенеджерПечати);
	ПечатнаяФорма.Представление = НСтр("ru='Стеллажная карточка (Форма АП-73)'");
	ПечатнаяФорма.ПутьКМакету = "Документ.ПоступлениеТоваров.ПФ_MXL_АП73";
	УправлениеПечатьюБольничнаяАптека.ДобавитьКомандуПечати(ПечатнаяФорма);
	
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(Обработки.ПечатьЭтикетокИЦенников.ДоступныеПечатныеФормы("СтеллажныеКарточки"), ПечатныеФормы);
	
	Возврат ПечатныеФормы;
	
КонецФункции

Функция ПолучитьТекстЗапросаДанныеДляПечати()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Документ.Ссылка               КАК Ссылка,
	|	Документ.Номер                КАК НомерДокумента,
	|	Документ.Дата                 КАК ДатаДокумента,
	|	Документ.Организация          КАК Организация,
	|	Документ.Склад                КАК Склад,
	|	Документ.Склад.Представление  КАК СкладПредставление,
	|	Документ.Товары.(
	|		НомерСтроки                      КАК НомерСтроки,
	|		Номенклатура                     КАК Номенклатура,
	|		Номенклатура.НаименованиеПолное  КАК ТоварНаименование,
	|		Номенклатура.Код                 КАК ТоварКод,
	|		СерияНоменклатуры                КАК Серия,
	|		ЕСТЬNULL(СерияНоменклатуры.Номер, """")  КАК СерийныйНомер,
	|		ЕСТЬNULL(СерияНоменклатуры.ГоденДо, ДАТАВРЕМЯ(1,1,1,0,0,0))  КАК СрокГодности,
	|		Партия                           КАК Партия,
	|		ВЫБОР
	|			КОГДА ВестиУчетПоИсточникамФинансирования.Значение
	|				ТОГДА ИсточникФинансирования
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИсточникиФинансирования.ПустаяСсылка)
	|		КОНЕЦ                            КАК ИсточникФинансирования,
	|		ЕдиницаИзмерения                 КАК ЕдиницаИзмерения,
	|		ЕдиницаИзмерения.КодОКЕИ         КАК КодПоОКЕИ,
	|		КоличествоВЕдиницахИзмерения     КАК Количество,
	|		МестоХраненияНовое               КАК МестоХранения
	|	)
	|ИЗ
	|	Документ.РазмещениеТоваровПоМестамХраненияВОтделении КАК Документ,
	|	Константа.ИспользоватьИсточникиФинансирования КАК ВестиУчетПоИсточникамФинансирования
	|
	|ГДЕ
	|	Документ.Ссылка В (&ТекущийДокумент)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ПолучитьТекстЗапросаПоДействующемуВеществу()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура  КАК Номенклатура,
	|	ЕСТЬNULL(ОписанияЭлементаКЛП.ДействующиеВеществаМНН, ЕСТЬNULL(ОписанияЭлементаРЛС.ДействующиеВеществаМНН, ЗНАЧЕНИЕ(Справочник.ДействующиеВеществаМНН.ПустаяСсылка))) КАК ДействующиеВеществаМНН
	|ИЗ
	|	Документ.РазмещениеТоваровПоМестамХраненияВОтделении.Товары КАК ТаблицаТовары
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.КЛП КАК ОписанияЭлементаКЛП
	|		ПО
	|			ТаблицаТовары.Номенклатура.ЭтоЛекарственноеСредство
	|			И ТаблицаТовары.Номенклатура.ЭлементКАТ ССЫЛКА Справочник.КЛП
	|			И ОписанияЭлементаКЛП.Ссылка = ТаблицаТовары.Номенклатура.ЭлементКАТ
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.РегистрЛекарственныхСредств КАК ОписанияЭлементаРЛС
	|		ПО
	|			ТаблицаТовары.Номенклатура.ЭтоЛекарственноеСредство
	|			И ТаблицаТовары.Номенклатура.ЭлементКАТ ССЫЛКА Справочник.РегистрЛекарственныхСредств
	|			И ОписанияЭлементаРЛС.Ссылка = ТаблицаТовары.Номенклатура.ЭлементКАТ
	|ГДЕ
	|	ТаблицаТовары.Ссылка В(&ТекущийДокумент)
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ПечатьАП73(МассивОбъектов, ОбъектыПечати) Экспорт
	
	ВалютаПечати = ЗначениеНастроекБольничнаяАптекаПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	// Зададим параметры макета
	ТабДокумент.АвтоМасштаб = Истина;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РазмещениеТоваровПоМестамХраненияВОтделении_АП73";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПоступлениеТоваров.ПФ_MXL_АП73");
	
	// Создаем массив для проверки вывода
	МассивВыводимыхОбластей = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ПолучитьТекстЗапросаДанныеДляПечати() + ";" + ПолучитьТекстЗапросаПоДействующемуВеществу();
	Запрос.УстановитьПараметр("ТекущийДокумент", МассивОбъектов);
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	Шапка = РезультатыЗапроса[0].Выбрать();
	
	ТаблицаДействующихВеществ = РезультатыЗапроса[1].Выгрузить();
	
	ПервыйДокумент = Истина;
	Пока Шапка.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		// Выводим общие реквизиты шапки
		СведенияОПокупателе = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Шапка.Организация, Шапка.ДатаДокумента);
		
		ПредставлениеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПокупателе, "ПолноеНаименование");
		
		ВыборкаСтрокТовары = Шапка.Товары.Выбрать();
		
		Пока ВыборкаСтрокТовары.Следующий() Цикл
			
			Цена  = 0;
			
			ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
			ТабДокумент.Вывести(ОбластьШапка);
			
			ОбластьШапкаТабл = Макет.ПолучитьОбласть("ШапкаТабл");
			ТабДокумент.Вывести(ОбластьШапкаТабл);
			
			ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
			
			ОбластьСтрока.Параметры.Заполнить(ВыборкаСтрокТовары);
			ОбластьСтрока.Параметры.Наименование  =ВыборкаСтрокТовары.ТоварНаименование;
			ОбластьСтрока.Параметры.КодЛекарства  =ВыборкаСтрокТовары.ТоварКод;
			ОбластьСтрока.Параметры.ЦенаРозничная =Цена;
			ОбластьСтрока.Параметры.ЦенаОптовая   =Цена;
			
			ТабДокумент.Вывести(ОбластьСтрока);   
			
			ОбластьПодвал=Макет.ПолучитьОбласть("ПодвалИзТЗ");
			ОбластьПодвал.Параметры.Заполнить(Шапка);
			ОбластьПодвал.Параметры.Заполнить(ВыборкаСтрокТовары);
			
			ОбластьПодвал.Параметры.ПредставлениеОрганизации = ПредставлениеОрганизации;
			ОбластьПодвал.Параметры.НомерНакладной = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Шапка.НомерДокумента);
			ОбластьПодвал.Параметры.ДатаНакладной = Формат(Шапка.ДатаДокумента, "ДЛФ=D");
			ОбластьПодвал.Параметры.ЦенаЗаУпаковку = Цена;
			ОбластьПодвал.Параметры.ПоступившееКоличество = ВыборкаСтрокТовары.Количество;
			
			СтрокаТаблицы = ТаблицаДействующихВеществ.Найти(ВыборкаСтрокТовары.Номенклатура, "Номенклатура");
			ОбластьПодвал.Параметры.ТорговоеНазваниеЛекарственногоСредства = 
				?(СтрокаТаблицы = Неопределено, "", СтрокаТаблицы.ДействующиеВеществаМНН);
			
			ТабДокумент.Вывести(ОбластьПодвал); 
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
		КонецЦикла;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Печать этикеток, ценников и стеллажных карточек

Функция ПолучитьТекстЗапросаПечатиЭтикетокИЦенников()
	
	Возврат "
	|ВЫБРАТЬ
	|	МИНИМУМ(ТаблицаТоваров.НомерСтроки)                 КАК Порядок,
	|	ТаблицаТоваров.Ссылка.Дата                          КАК ДатаДокумента,
	|	ТаблицаТоваров.Ссылка.Организация                   КАК Организация,
	|	ТаблицаТоваров.Ссылка.Склад                         КАК Склад,
	|	ТаблицаТоваров.ИсточникФинансирования               КАК ИсточникФинансирования,
	|	ТаблицаТоваров.Номенклатура                         КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ТаблицаТоваров.СтатусУказанияСерий = &СтатусСерииНеУказываются
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|		ИНАЧЕ ТаблицаТоваров.СерияНоменклатуры
	|	КОНЕЦ                                               КАК СерияНоменклатуры,
	|	ВЫБОР
	|		КОГДА ТаблицаТоваров.СтатусУказанияПартий  = &СтатусПартииНеУказываются
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка)
	|		ИНАЧЕ ТаблицаТоваров.Партия
	|	КОНЕЦ                                               КАК Партия,
	|	ТаблицаТоваров.МестоХраненияНовое                   КАК МестоХранения,
	|	ТаблицаТоваров.ЕдиницаИзмерения                     КАК Упаковка,
	|	0                                                   КАК Цена,
	|	СУММА(ТаблицаТоваров.КоличествоВЕдиницахИзмерения)  КАК Количество
	|ИЗ
	|	Документ.РазмещениеТоваровПоМестамХраненияВОтделении.Товары КАК ТаблицаТоваров
	|ГДЕ
	|	ТаблицаТоваров.Ссылка В(&МассивДокументов)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.Ссылка.Дата,
	|	ТаблицаТоваров.ИсточникФинансирования,
	|	ТаблицаТоваров.Номенклатура,
	|	ВЫБОР
	|		КОГДА ТаблицаТоваров.СтатусУказанияСерий = &СтатусСерииНеУказываются
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|		ИНАЧЕ ТаблицаТоваров.СерияНоменклатуры
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаТоваров.СтатусУказанияПартий  = &СтатусПартииНеУказываются
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка)
	|		ИНАЧЕ ТаблицаТоваров.Партия
	|	КОНЕЦ,
	|	ТаблицаТоваров.ЕдиницаИзмерения,
	|	ТаблицаТоваров.Ссылка.Организация,
	|	ТаблицаТоваров.Ссылка.Склад,
	|	ТаблицаТоваров.МестоХраненияНовое
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Документ.Организация  КАК Организация,
	|	Документ.Склад        КАК Склад
	|ИЗ
	|	Документ.РазмещениеТоваровПоМестамХраненияВОтделении КАК Документ
	|ГДЕ
	|	Документ.Ссылка В(&МассивДокументов)
	|";
	
КонецФункции

// Функция помещает необходимые данные в структуру. Структура помещается во временное хранилище.
//
// Возвращаемое значение:
//   Адрес   - адрес структуры данных во временном хранилище
//
Функция ПолучитьДанныеДляПечатиСтеллажныхКарточек(МассивДокументов) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = ПолучитьТекстЗапросаПечатиЭтикетокИЦенников();
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	ЗапасыСервер.УстановитьСтатусыПараметровУчетаВПараметрахЗапроса(Запрос);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	ТаблицаРеквизитыДокументов = МассивРезультатов[1].Выгрузить();
	МассивОрганизаций = Обработки.ПечатьЭтикетокИЦенников.СвернутьТаблицуЗначенийПоРеквизиту(
		ТаблицаРеквизитыДокументов,
		"Организация").ВыгрузитьКолонку(0);
	МассивСкладов = Обработки.ПечатьЭтикетокИЦенников.СвернутьТаблицуЗначенийПоРеквизиту(
		ТаблицаРеквизитыДокументов,
		"Склад").ВыгрузитьКолонку(0);
	
	// Подготовка структуры действий для обработки печати ценников и этикеток
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ЗаполнитьОрганизацию", ?(МассивОрганизаций.Количество() = 1,МассивОрганизаций[0], Неопределено));
	СтруктураДействий.Вставить("ЗаполнитьСклад"      , ?(МассивСкладов.Количество() = 1,МассивСкладов[0], МассивСкладов));
	СтруктураДействий.Вставить("МестоХраненияОстатка", "Отделение");
	
	// Подготовка данных для заполнения табличной части обработки печати ценников и этикеток
	СтруктураРезультат = Новый Структура;
	СтруктураРезультат.Вставить("Товары", МассивРезультатов[0].Выгрузить());
	СтруктураРезультат.Вставить("СтруктураДействий", СтруктураДействий);
	
	Возврат СтруктураРезультат;
	
КонецФункции

#КонецОбласти // Печать

////////////////////////////////////////////////////////////////////////////////
// Команды формы
#Область КомандыФормы

// Заполняет список команд ввода на основании.
// 
// Параметры:
//   КомандыСоздатьНаОсновании - ТаблицаЗначений - Таблица команд для вывода в подменю. Для изменения.
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСоздатьНаОсновании, НастройкиФормы) Экспорт
	
	ВводНаОснованииБольничнаяАптека.ДобавитьКомандыСозданияНаОсновании(ПустаяСсылка().Метаданные().ПолноеИмя(), КомандыСоздатьНаОсновании, НастройкиФормы);
	
КонецПроцедуры

Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании, НастройкиФормы) Экспорт
	
	МетаданныеОбъекта = ПустаяСсылка().Метаданные();
	Команда = КомандыСоздатьНаОсновании.Добавить();
	Команда.Менеджер      = МетаданныеОбъекта.ПолноеИмя();
	Команда.Представление = ОбщегоНазначенияБольничнаяАптека.ПредставлениеОбъекта(МетаданныеОбъекта);
	Команда.РежимЗаписи   = "Проводить";
	
	Если Не НастройкиФормы.ЭтоФормаОбъекта Тогда
		Если НастройкиФормы.ТипыИсточников.Количество() = 1 Тогда
			МетаданныеОбъекта = Метаданные.НайтиПоТипу(НастройкиФормы.ТипыИсточников[0]);
			Если ОбщегоНазначения.ЕстьРеквизитОбъекта("СкладПолучатель", МетаданныеОбъекта) Тогда
				ПодключаемыеКоманды.ДобавитьУсловиеВидимостиКоманды(Команда, "СкладПолучатель.ИспользоватьМестаХранения", Истина);
			Иначе
				ПодключаемыеКоманды.ДобавитьУсловиеВидимостиКоманды(Команда, "Склад.ИспользоватьМестаХранения", Истина);
			КонецЕсли;
		Иначе
			ПодключаемыеКоманды.ДобавитьУсловиеВидимостиКоманды(Команда, "ИспользоватьМестаХранения", Истина);
		КонецЕсли;
	КонецЕсли;
	
	Возврат Команда;
	
КонецФункции

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица команд для вывода в подменю. Для изменения.
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, НастройкиФормы) Экспорт
	
	МенюОтчетыБольничнаяАптека.ДобавитьОбщиеКоманды(ПустаяСсылка().Метаданные().ПолноеИмя(), КомандыОтчетов, НастройкиФормы);
	
КонецПроцедуры

#КонецОбласти // КомандыФормы

#КонецОбласти // СлужебныеПроцедурыИФункции

////////////////////////////////////////////////////////////////////////////////
// СТАНДАРТНЫЕ ПОДСИСТЕМЫ
#Область СтандартныеПодсистемы

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
//
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти // СтандартныеПодсистемы

#КонецЕсли