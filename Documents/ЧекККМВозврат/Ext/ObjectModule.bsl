#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ
#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	
	Если ТипДанныхЗаполнения = Тип("Структура") И ДанныеЗаполнения.Свойство("Товары") Тогда
		ВозвращаемыеТовары = ПолучитьИзВременногоХранилища(ДанныеЗаполнения.Товары);
		ЗаполнитьДокументПоЧекуККМ(ДанныеЗаполнения.ЧекККМ, ВозвращаемыеТовары);
	ИначеЕсли ТипДанныхЗаполнения = Тип("ДокументСсылка.ЧекККМ") Тогда
		ЗаполнитьДокументПоЧекуККМ(ДанныеЗаполнения);
	Иначе
		ВызватьИсключение НСтр("ru = 'Чеки ККМ на возврат должны вводится на основании чеков ККМ.'");
	КонецЕсли;
	
	ИнициализироватьДокумент();
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ВызватьИсключение НСтр("ru = 'Чек на возврат вводится только на основании чека ККМ.'");
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	НепроверяемыеРеквизиты = Новый Массив;
	
	ОбработкаТабличнойЧастиСервер.ПроверитьЗаполнениеКоличества(ЭтотОбъект, НепроверяемыеРеквизиты, Отказ);
	
	Запрос = Новый Запрос;
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЧекККМ.КассоваяСмена КАК КассоваяСмена,
	|	ЧекККМ.Дата          КАК Дата,
	|	ЧекККМ.Проведен      КАК Проведен,
	|	ЧекККМ.Статус        КАК Статус
	|ИЗ
	|	Документ.ЧекККМ КАК ЧекККМ
	|ГДЕ
	|	ЧекККМ.Ссылка = &ЧекККМ
	|;
	|
	|///////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура       КАК Номенклатура,
	|	Товары.СерияНоменклатуры  КАК СерияНоменклатуры,
	|	Товары.Партия             КАК Партия,
	|	Товары.Количество         КАК Количество
	|ПОМЕСТИТЬ ТЧТовары
	|ИЗ
	|	&ТЗТовары КАК Товары
	|;
	|
	|///////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Количество         КАК КоличествоВЧеке,
	|	Товары.Номенклатура       КАК Номенклатура,
	|	Товары.СерияНоменклатуры  КАК СерияНоменклатуры,
	|	Товары.Партия             КАК Партия,
	|	Товары.Количество         КАК Количество
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	Документ.ЧекККМ.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка = &ЧекККМ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0                         КАК КоличествоВЧеке,
	|	Товары.Номенклатура       КАК Номенклатура,
	|	Товары.СерияНоменклатуры  КАК СерияНоменклатуры,
	|	Товары.Партия             КАК Партия,
	|	-Товары.Количество        КАК Количество
	|ИЗ
	|	Документ.ЧекККМВозврат.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка.ЧекККМ = &ЧекККМ
	|	И Товары.Ссылка <> &ЧекККМВозврат
	|	И Товары.Ссылка.Проведен
	|	И Товары.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЧековККМ.Пробит)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0                         КАК КоличествоВЧеке,
	|	Товары.Номенклатура       КАК Номенклатура,
	|	Товары.СерияНоменклатуры  КАК СерияНоменклатуры,
	|	Товары.Партия             КАК Партия,
	|	-Товары.Количество        КАК Количество
	|ИЗ
	|	ТЧТовары КАК Товары
	|
	|;
	|
	|///////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура                   КАК Номенклатура,
	|	Товары.Номенклатура.ЕдиницаИзмерения  КАК ЕдиницаИзмерения,
	|	Товары.СерияНоменклатуры              КАК СерияНоменклатуры,
	|	Товары.Партия                         КАК Партия,
	|	СУММА(Товары.Количество)              КАК Количество,
	|	СУММА(Товары.КоличествоВЧеке)         КАК КоличествоВЧеке
	|ИЗ
	|	Товары КАК Товары
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.СерияНоменклатуры,
	|	Товары.Партия
	|ИМЕЮЩИЕ
	|	СУММА(Товары.Количество) < 0
	|";
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("ЧекККМ"       , ЧекККМ);
	Запрос.УстановитьПараметр("ЧекККМВозврат", Ссылка);
	Запрос.УстановитьПараметр("ТЗТовары"     , Товары.Выгрузить(,"Номенклатура, СерияНоменклатуры, Партия, Количество"));
	
	Результат = Запрос.ВыполнитьПакет();
	
	Выборка = Результат[0].Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		Если КассоваяСмена <> Выборка.КассоваяСмена Тогда
			ТекстОшибки = НСтр("ru='Кассовая смена чека на возврат отличается от кассовой смены чека продажи'");
			ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, ЭтотОбъект, "КассоваяСмена",, Отказ);
		КонецЕсли;
		
		Если Не Выборка.Проведен Тогда
			ТекстОшибки = НСтр("ru='Чек ККМ не проведен'");
			ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, ЭтотОбъект, "ЧекККМ",, Отказ);
		КонецЕсли;
		
		Если Выборка.Статус <> Перечисления.СтатусыЧековККМ.Пробит Тогда
			ТекстОшибки = НСтр("ru='Чек ККМ продажи не пробит'");
			ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, ЭтотОбъект, "ЧекККМ",, Отказ);
		КонецЕсли;
		
		ТекстОшибки = "";
		Если Не РозничныеПродажи.СменаОткрыта(КассоваяСмена, Дата, ТекстОшибки) Тогда
			ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, ЭтотОбъект, "КассоваяСмена",, Отказ);
		КонецЕсли;
		
		ВыборкаПоТоварам = Результат[3].Выбрать();
		Если Статус <> Перечисления.СтатусыЧековККМ.Пробит Тогда
			
			Пока ВыборкаПоТоварам.Следующий() Цикл
				
				Остаток = -ВыборкаПоТоварам.Количество;
				ТоварПрисутствуетВИсходномЧеке = ВыборкаПоТоварам.КоличествоВЧеке > 0;
				
				МассивСтрок = Товары.НайтиСтроки(Новый Структура("Номенклатура, СерияНоменклатуры, Партия", ВыборкаПоТоварам.Номенклатура, ВыборкаПоТоварам.СерияНоменклатуры, ВыборкаПоТоварам.Партия));
				
				// Изменим порядок строк на обратный
				НайденныеСтроки = Новый Массив;
				Для Каждого Строка Из МассивСтрок Цикл
					НайденныеСтроки.Вставить(0, Строка);
				КонецЦикла;
				
				ВерхняяГраница = НайденныеСтроки.Количество();
				Для Индекс = 0 По ВерхняяГраница Цикл
					
					НайденнаяСтрока = НайденныеСтроки[ВерхняяГраница - Индекс];
					
					Количество = ?(НайденнаяСтрока.Количество >= Остаток, Остаток, НайденнаяСтрока.Количество);
					Остаток = Остаток - Количество;
					
					Если ТоварПрисутствуетВИсходномЧеке Тогда
						ТекстОшибки = НСтр("ru='Количество возвращаемого товара превышает количество проданного на %1% %2%'");
						ТекстОшибки = СтрЗаменить(ТекстОшибки, "%1%", Количество * (НайденнаяСтрока.КоличествоВЕдиницахИзмерения / НайденнаяСтрока.Количество));
						ТекстОшибки = СтрЗаменить(ТекстОшибки, "%2%", НайденнаяСтрока.ЕдиницаИзмерения);
						
						АдресОшибки = НСтр("ru='в строке %НомерСтроки% списка ""Товары""'");
						АдресОшибки = СтрЗаменить(АдресОшибки, "%НомерСтроки%", НайденнаяСтрока.НомерСтроки);
						
						ОбщегоНазначения.СообщитьПользователю(
							ТекстОшибки + " " + АдресОшибки,
							ЭтотОбъект,
							ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", НайденнаяСтрока.НомерСтроки, "КоличествоВЕдиницахИзмерения"),
							,
							Отказ);
					Иначе
						ТекстОшибки = НСтр("ru='Номенклатура %1% не продавалась по чеку %2%. Удалите номенклатурную позицию'");
						ТекстОшибки = СтрЗаменить(ТекстОшибки, "%1%", НайденнаяСтрока.Номенклатура);
						ТекстОшибки = СтрЗаменить(ТекстОшибки, "%2%", ЧекККМ);
						
						АдресОшибки = НСтр("ru='в строке %НомерСтроки% списка ""Товары""'");
						АдресОшибки = СтрЗаменить(АдресОшибки, "%НомерСтроки%", НайденнаяСтрока.НомерСтроки);
						
						ОбщегоНазначения.СообщитьПользователю(
							ТекстОшибки + " " + АдресОшибки,
							ЭтотОбъект,
							ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", НайденнаяСтрока.НомерСтроки, "Номенклатура"),
							,
							Отказ);
					КонецЕсли;
					
					Если Остаток <= 0 Тогда
						Прервать;
					КонецЕсли;
					
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;
		
	КонецЕсли;
	
	ОбработкаТабличнойЧастиСервер.ПроверитьЗаполнениеИсточникаФинансирования(ЭтотОбъект, НепроверяемыеРеквизиты, Отказ);
	
	ПараметрыУчетаНоменклатуры = ЗапасыСервер.ПолучитьПараметрыУчетаНоменклатуры(ЭтотОбъект);
	ЗапасыСервер.ПроверитьЗаполнениеСерийНоменклатуры(ЭтотОбъект, ПараметрыУчетаНоменклатуры, НепроверяемыеРеквизиты, Отказ);
	ЗапасыСервер.ПроверитьЗаполнениеПартийНоменклатуры(ЭтотОбъект, ПараметрыУчетаНоменклатуры, НепроверяемыеРеквизиты, Отказ);
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, НепроверяемыеРеквизиты);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	Если Не ЗначениеЗаполнено(Статус) Тогда
		Статус = Перечисления.СтатусыЧековККМ.Отложен;
	КонецЕсли;
	
	ПроведениеБольничнаяАптека.УстановитьРежимПроведения(ЭтотОбъект, РежимЗаписи, РежимПроведения);
	
	Если Статус = Перечисления.СтатусыЧековККМ.Пробит И РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда
		ТекстОшибки = НСтр("ru='Чек ККМ пробит. Отмена проведения невозможна'");
		ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, ЭтотОбъект,,, Отказ);
		Возврат;
	КонецЕсли;
	
	ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	ОбработкаТабличнойЧастиСервер.ОкруглитьКоличествоШтучныхТоваров(ЭтотОбъект, РежимЗаписи);
	
	СуммаДокумента = ЦенообразованиеБольничнаяАптекаКлиентСервер.ПолучитьСуммуДокумента(Товары, ЦенаВключаетНДС);
	
	ЗапасыСервер.ОчиститьНеиспользуемыеРеквизиты(ЭтотОбъект, ЗапасыСервер.ПолучитьПараметрыУчетаНоменклатуры(ЭтотОбъект));
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		ОбработкаТабличнойЧастиСервер.ЗаполнитьИсточникФинансирования(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеБольничнаяАптека.СформироватьДвиженияПоРегистрам(ЭтотОбъект, Отказ, РежимПроведения);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПроведениеБольничнаяАптека.СформироватьДвиженияПоРегистрам(ЭтотОбъект, Отказ);
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытий

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

////////////////////////////////////////////////////////////////////////////////
// Инициализация и заполнение документа
#Область ИнициализацияИЗаполнение

Процедура ИнициализироватьДокумент()
	
	Автор = Пользователи.ТекущийПользователь();
	Кассир = Пользователи.ТекущийПользователь();
	
КонецПроцедуры

Процедура ЗаполнитьДокументПоКассеККМ(КассаККМ)
	
	СостояниеКассовойСмены = РозничныеПродажи.ПолучитьСостояниеКассовойСмены(КассаККМ);
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, СостояниеКассовойСмены);
	
КонецПроцедуры

Процедура ЗаполнитьДокументПоЧекуККМ(ЧекККМСсылка, ВозвращаемыеТовары = Неопределено)
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ЧекККМ.Валюта              КАК Валюта,
	|	ЧекККМ.Ссылка              КАК ЧекККМ,
	|	ЧекККМ.ВидЦены             КАК ВидЦены,
	|	ЧекККМ.Организация         КАК Организация,
	|	ЧекККМ.КассаККМ            КАК КассаККМ,
	|	ЧекККМ.Склад               КАК Склад,
	|	ЧекККМ.ЦенаВключаетНДС     КАК ЦенаВключаетНДС,
	|	ЧекККМ.НалогообложениеНДС  КАК НалогообложениеНДС,
	|	ЧекККМ.Статус              КАК Статус,
	|	ЧекККМ.Проведен            КАК Проведен
	|ИЗ
	|	Документ.ЧекККМ КАК ЧекККМ
	|ГДЕ
	|	ЧекККМ.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура                  КАК Номенклатура,
	|	Товары.СерияНоменклатуры             КАК СерияНоменклатуры,
	|	Товары.Партия                        КАК Партия,
	|	Товары.СтатусУказанияСерий           КАК СтатусУказанияСерий,
	|	Товары.СтатусУказанияПартий          КАК СтатусУказанияПартий,
	|	Товары.ЕдиницаИзмерения              КАК ЕдиницаИзмерения,
	|	Товары.Коэффициент                   КАК Коэффициент,
	|	Товары.КоличествоВЕдиницахИзмерения  КАК КоличествоВЕдиницахИзмерения,
	|	Товары.Количество                    КАК Количество,
	|	Товары.Цена                          КАК Цена,
	|	Товары.Сумма                         КАК Сумма,
	|	Товары.СтавкаНДС                     КАК СтавкаНДС,
	|	Товары.СуммаНДС                      КАК СуммаНДС,
	|	Товары.СуммаСНДС                     КАК СуммаСНДС
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	Документ.ЧекККМ.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка = &Ссылка
	|	И Товары.Номенклатура.ТипНоменклатурыРасширенный <> ЗНАЧЕНИЕ(Справочник.ТипыНоменклатурыРасширенные.ЛекарственноеСредство)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Товары.Номенклатура                   КАК Номенклатура,
	|	Товары.СерияНоменклатуры              КАК СерияНоменклатуры,
	|	Товары.Партия                         КАК Партия,
	|	Товары.СтатусУказанияСерий            КАК СтатусУказанияСерий,
	|	Товары.СтатусУказанияПартий           КАК СтатусУказанияПартий,
	|	Товары.ЕдиницаИзмерения               КАК ЕдиницаИзмерения,
	|	Товары.Коэффициент                    КАК Коэффициент,
	|	-Товары.КоличествоВЕдиницахИзмерения  КАК КоличествоВЕдиницахИзмерения,
	|	-Товары.Количество                    КАК Количество,
	|	Товары.Цена                           КАК Цена,
	|	-Товары.Сумма                         КАК Сумма,
	|	Товары.СтавкаНДС                      КАК СтавкаНДС,
	|	-Товары.СуммаНДС                      КАК СуммаНДС,
	|	-Товары.СуммаСНДС                     КАК СуммаСНДС
	|ИЗ
	|	Документ.ЧекККМВозврат.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка.ЧекККМ = &Ссылка
	|	И Товары.Ссылка.Проведен
	|	И Товары.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЧековККМ.Пробит) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура                         КАК Номенклатура,
	|	Товары.СерияНоменклатуры                    КАК СерияНоменклатуры,
	|	Товары.Партия                               КАК Партия,
	|	Товары.СтатусУказанияСерий                  КАК СтатусУказанияСерий,
	|	Товары.СтатусУказанияПартий                 КАК СтатусУказанияПартий,
	|	Товары.ЕдиницаИзмерения                     КАК ЕдиницаИзмерения,
	|	Товары.Коэффициент                          КАК Коэффициент,
	|	Товары.СтавкаНДС                            КАК СтавкаНДС,
	|	Товары.Цена                                 КАК Цена,
	|	СУММА(Товары.КоличествоВЕдиницахИзмерения)  КАК КоличествоВЕдиницахИзмерения,
	|	СУММА(Товары.Количество)                    КАК Количество,
	|	СУММА(Товары.Сумма)                         КАК Сумма,
	|	СУММА(Товары.СуммаНДС)                      КАК СуммаНДС,
	|	СУММА(Товары.СуммаСНДС)                     КАК СуммаСНДС
	|ИЗ
	|	Товары КАК Товары
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.СерияНоменклатуры,
	|	Товары.Партия,
	|	Товары.СтатусУказанияСерий,
	|	Товары.СтатусУказанияПартий,
	|	Товары.ЕдиницаИзмерения,
	|	Товары.Коэффициент,
	|	Товары.СтавкаНДС,
	|	Товары.Цена
	|
	|ИМЕЮЩИЕ
	|	СУММА(Товары.Количество) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОплатаПлатежнымиКартами.ЭквайринговыйТерминал  КАК ЭквайринговыйТерминал,
	|	ОплатаПлатежнымиКартами.ВидПлатежнойКарты      КАК ВидПлатежнойКарты,
	|	ОплатаПлатежнымиКартами.КодАвторизации         КАК КодАвторизации,
	|	ОплатаПлатежнымиКартами.НомерПлатежнойКарты    КАК НомерПлатежнойКарты,
	|	ОплатаПлатежнымиКартами.Сумма                  КАК Сумма,
	|	ОплатаПлатежнымиКартами.СсылочныйНомер         КАК СсылочныйНомер,
	|	ОплатаПлатежнымиКартами.НомерЧекаЭТ            КАК НомерЧекаЭТ
	|ИЗ
	|	Документ.ЧекККМ.ОплатаПлатежнымиКартами КАК ОплатаПлатежнымиКартами
	|ГДЕ
	|	ОплатаПлатежнымиКартами.Ссылка = &Ссылка
	|	И НЕ (ОплатаПлатежнымиКартами.ЭквайринговыйТерминал, ОплатаПлатежнымиКартами.КодАвторизации, ОплатаПлатежнымиКартами.НомерПлатежнойКарты, ОплатаПлатежнымиКартами.Сумма) В
	|				(ВЫБРАТЬ
	|					Т.ЭквайринговыйТерминал,
	|					Т.КодАвторизации,
	|					Т.НомерПлатежнойКарты,
	|					Т.Сумма
	|				ИЗ
	|					Документ.ЧекККМВозврат.ОплатаПлатежнымиКартами КАК Т
	|				ГДЕ
	|					Т.Ссылка.ЧекККМ = &Ссылка
	|					И Т.ОплатаОтменена)
	|");
	
	Запрос.УстановитьПараметр("Ссылка", ЧекККМСсылка);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	Выборка = РезультатЗапроса[0].Выбрать();
	Выборка.Следующий();
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка,, "Статус, Проведен");
	
	Если РезультатЗапроса[2].Пустой() Тогда
		ТекстОшибки = НСтр("ru = 'По данному чеку ККМ нет товаров которые можно вернуть.'");
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
	Если Не Выборка.Проведен Тогда
		ТекстОшибки = НСтр("ru = 'Чек ККМ не проведен. Ввод на основании невозможен.'");
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
	Если Выборка.Статус <> Перечисления.СтатусыЧековККМ.Пробит Тогда
		ТекстОшибки = НСтр("ru = 'Чек ККМ не пробит. Ввод на основании невозможен.'");
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
	ЗаполнитьДокументПоКассеККМ(КассаККМ);
	
	Если ВозвращаемыеТовары = Неопределено Тогда
		Товары.Загрузить(РезультатЗапроса[2].Выгрузить());
	Иначе
		Товары.Очистить();
		Для Каждого СтрокаТЧ Из ВозвращаемыеТовары Цикл
			НоваяСтрока = Товары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЧ);
		КонецЦикла;
	КонецЕсли;
	
	ЗапасыСервер.ЗаполнитьСтатусыУчетаНоменклатуры(ЭтотОбъект, ЗапасыСервер.ПолучитьПараметрыУчетаНоменклатуры(ЭтотОбъект));
	
	ОплатаПлатежнымиКартами.Загрузить(РезультатЗапроса[3].Выгрузить());
	
	СуммаДокумента = ЦенообразованиеБольничнаяАптекаКлиентСервер.ПолучитьСуммуДокумента(Товары, ЦенаВключаетНДС);
	
КонецПроцедуры

#КонецОбласти // ИнициализацияИЗаполнение

////////////////////////////////////////////////////////////////////////////////
// Прочее
#Область Прочее

Функция СписокРегистровДляКонтроля() Экспорт
	
	РегистрыДляКонтроля = Новый Массив;
	
	Возврат РегистрыДляКонтроля;
	
КонецФункции

#КонецОбласти // Прочее

#КонецОбласти // СлужебныеПроцедурыИФункции

#КонецЕсли