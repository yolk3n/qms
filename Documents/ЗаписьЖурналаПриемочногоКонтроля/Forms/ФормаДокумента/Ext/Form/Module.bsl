
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьВидимостьЭлементовФормы();
	УстановитьНадписи();
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьЭлементовФормы()
	Элементы.ВизуальныйОсмотрТекст.Видимость = НЕ Объект.ВизуальныйОсмотр;
	Элементы.СоответствиеТовараСопроводительнымДокументамТекст.Видимость = НЕ Объект.СоответствиеТовараСопроводительнымДокументам;
	Элементы.ПолнотаКомплектацииСопроводительныхДокументовТекст.Видимость = НЕ Объект.ПолнотаКомплектацииСопроводительныхДокументов;	
    ЭтаФорма.ТолькоПросмотр = Объект.Завершено;
КонецПроцедуры 

&НаКлиенте
Процедура ВизуальныйОсмотрПриИзменении(Элемент)
	УстановитьВидимостьЭлементовФормы();
КонецПроцедуры

&НаКлиенте
Процедура ЗавершеноПриИзменении(Элемент)
	Если Объект.Завершено Тогда
		НовСтр = Объект.ПринятыеМеры.Добавить();
		НовСтр.ДатаМероприятия = ТекущаяДата();
		НовСтр.Описание = "Решено";
	КонецЕсли;
	УстановитьВидимостьЭлементовФормы();
КонецПроцедуры

&НаКлиенте
Процедура СоответствиеТовараСопроводительнымДокументамПриИзменении(Элемент)
	УстановитьВидимостьЭлементовФормы();
КонецПроцедуры

&НаКлиенте
Процедура ПолнотаКомплектацииСопроводительныхДокументовПриИзменении(Элемент)
	УстановитьВидимостьЭлементовФормы();
КонецПроцедуры

&НаКлиенте
Процедура ПринятыеМерыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока Тогда
		Элемент.ТекущиеДанные.ДатаМероприятия = ТекущаяДата();
		Элемент.ТекущиеДанные.Ответственный = ПользователиКлиент.ТекущийПользователь();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьИнформациюОбИзъятииНаСервере(ДокументСсылка)
	
	СтруктураОтвет = Бит_Автозаказ.ПроверитьИнформациюОбИзъятииЗабракованныхСерий(ДокументСсылка);
	Объект.СостояниеПроверкиИзъятия = Истина;
	Объект.Изъятие = СтруктураОтвет.ОбнаруженоИзъятие;
	Объект.ДатаПроверкиИзъятия = ТекущаяДата();
	Если СтруктураОтвет.МассивЗабракованных.Количество() > 0 Тогда 
		Объект.РезультатПроверкиИзъятия.Очистить();
		Для Каждого ЭлементМассива Из СтруктураОтвет.МассивЗабракованных Цикл 
			Стр = Объект.РезультатПроверкиИзъятия.Добавить();
			ЗаполнитьЗначенияСвойств(Стр,ЭлементМассива);
		КонецЦикла;
	КонецЕсли;
	ЭтотОбъект.Записать();
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьИнформациюОбИзъятии(Команда)
	
	ПроверитьИнформациюОбИзъятииНаСервере(Объект.ДокументПоступления); 	
	УстановитьНадписи();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьНадписи()
	
	Элементы.НадписьСостояниеПроверки.Шрифт = Новый Шрифт(,,Истина);
	Если Объект.СостояниеПроверкиИзъятия Тогда
		Элементы.НадписьСостояниеПроверки.Заголовок = "Проверка выполнена "+Формат(Объект.ДатаПроверкиИзъятия,"ДЛФ=DT")+": ";
		Элементы.НадписьСостояниеПроверки.ЦветТекста = WebЦвета.ЗеленыйЛес;
		Если Объект.Изъятие Тогда
			Элементы.НадписьИзъятие.Заголовок = "обнаружено изъятие";
			Элементы.НадписьИзъятие.ЦветТекста = WebЦвета.Красный;
		Иначе
			Элементы.НадписьИзъятие.Заголовок = "не обнаружено";
			Элементы.НадписьИзъятие.ЦветТекста = WebЦвета.ЗеленыйЛес;
		КонецЕсли;
	Иначе
		Элементы.НадписьСостояниеПроверки.Заголовок = "Проверка не выполнялась";
		Элементы.НадписьСостояниеПроверки.ЦветТекста = WebЦвета.Красный;
		Элементы.НадписьИзъятие.Заголовок = "";
	КонецЕсли;
	КоличествоЗабракованных = Объект.РезультатПроверкиИзъятия.Количество();
	Элементы.ГруппаРезультатыПроверкиИзъятия.Заголовок = ?(КоличествоЗабракованных > 0,
	      "Результаты проверки изъятия ("+Строка(КоличествоЗабракованных)+")","Результаты проверки изъятия");
	Элементы.ГруппаРезультатыПроверкиИзъятия.Видимость = (КоличествоЗабракованных > 0);
	 
КонецПроцедуры 

////////////////////////////////////////////////////////////////////////////////
// Электронная подпись
#Область ЭлектроннаяПодпись
&НаКлиенте
Процедура Подписать(Команда)
	
	ОбработчикЗавершения = Новый ОписаниеОповещения("ПодписатьДокументЗавершение", ЭтотОбъект);
	ЭлектроннаяПодписьБольничнаяАптекаКлиент.ПодписатьОбъектВФорме(ЭтотОбъект, ОбработчикЗавершения);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ЭлектронныеПодписи_ОткрытьПодпись(Команда)
	
	ЭлектроннаяПодписьБольничнаяАптекаКлиент.ОткрытьПодпись(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ЭлектронныеПодписи_Проверить(Команда)
	
	ЭлектроннаяПодписьБольничнаяАптекаКлиент.ПроверитьПодписи(ЭтотОбъект, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ЭлектронныеПодписи_ПроверитьВсе(Команда)
	
	ЭлектроннаяПодписьБольничнаяАптекаКлиент.ПроверитьПодписи(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ЭлектронныеПодписи_УдалитьПодпись(Команда)
	
	УдалитьПодписи();
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ЭлектронныеПодписи_СохранитьПодпись(Команда)
	
	ЭлектроннаяПодписьБольничнаяАптекаКлиент.СохранитьПодпись(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ЭлектронныеПодписи_ОбновитьСписокПодписей(Команда)
	
	ЗаполнитьСписокПодписей();
	
	Коллекция = ЭлектроннаяПодписьБольничнаяАптекаКлиентСервер.ТаблицаПодписей(ЭтотОбъект).ПолучитьЭлементы();
	Элемент = ЭлектроннаяПодписьБольничнаяАптекаКлиентСервер.ЭлементТаблицаПодписей(ЭтотОбъект);
	Для Каждого Строка Из Коллекция Цикл
		Элемент.Развернуть(Строка.ПолучитьИдентификатор(), Истина);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодписатьДокументЗавершение(Результат, НеИспользуется) Экспорт
	
	Если Не Результат Тогда
		Возврат;
	КонецЕсли;
	
	Прочитать();
	ЗаполнитьСписокПодписей();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокПодписей()
	
	ЭлектроннаяПодписьБольничнаяАптека.ЗаполнитьПодписи(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьПодписи()
	
	Если ЭлектроннаяПодписьБольничнаяАптекаКлиентСервер.ЭлементТаблицаПодписей(ЭтотОбъект).ВыделенныеСтроки.Количество() > 1 Тогда
		ТекстВопроса = НСтр("ru = 'Удалить выделенные подписи?'");
	Иначе
		ТекстВопроса = НСтр("ru = 'Удалить выделенную подпись?'");
	КонецЕсли;
	
	Обработчик = Новый ОписаниеОповещения("УдалитьПодписиЗавершение", ЭтотОбъект);
	ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьПодписиЗавершение(Ответ, ПараметрыВыполнения) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	УдалитьПодписиИОбновитьСписок();
	
КонецПроцедуры

&НаСервере
Процедура УдалитьПодписиИОбновитьСписок()
	
	ЭлектроннаяПодписьБольничнаяАптека.УдалитьПодписиИОбновитьСписок(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// ЭлектроннаяПодпись
	ЭлектроннаяПодписьБольничнаяАптека.ПриСозданииНаСервере(ЭтотОбъект, Элементы.ГруппаЭлектронныеПодписи);
	// Конец ЭлектроннаяПодпись
	УстановитьДоступностьЭлементовЭПСервер();
	

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	УстановитьДоступностьЭлементовЭПСервер();
КонецПроцедуры

#КонецОбласти // ЭлектроннаяПодпись

&НаСервере
Процедура УстановитьДоступностьЭлементовЭПСервер()
	
	МассивЭлементов = Новый Массив;
	ДоступностьЭлементов = Истина;	
	Если Объект.ПодписанЭП Тогда
		ДоступностьЭлементов = Ложь;
	КонецЕсли;
	
	// ЭлектроннаяПодпись
	СписокЭлементов = ЭлектроннаяПодписьБольничнаяАптека.ИменаЭлементовПодписываемыхДанных(ЭтотОбъект);
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивЭлементов, СписокЭлементов, Истина);
	// Конец ЭлектроннаяПодпись
	
	КонтрольНесогласованныхИзменений.НастроитьКонтрольИзмененияДанных(ЭтотОбъект, МассивЭлементов, Не ДоступностьЭлементов);
	
	Для Каждого Элемент из МассивЭлементов Цикл
			Элементы[Элемент].ТолькоПросмотр= НЕ ДоступностьЭлементов;	
	КонецЦикла;	 
	
КонецПроцедуры
