#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ИнтеграцияМДЛППереопределяемый.ОбработкаЗаполнения(ЭтотОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	СостояниеПодтверждения = Метаданные().Реквизиты.СостояниеПодтверждения.ЗначениеЗаполнения;
	НомераУпаковок.Очистить();
	ТранспортныеУпаковки.Очистить();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	НепроверяемыеРеквизиты = Новый Массив;
	
	Если Не ИнтеграцияМДЛП.ИспользоватьХарактеристикиНоменклатуры() Тогда
		НепроверяемыеРеквизиты.Добавить("Товары.Характеристика");
		НепроверяемыеРеквизиты.Добавить("СоставТранспортныхУпаковок.Характеристика");
	КонецЕсли;
	
	Если Не ИнтеграцияМДЛП.ИспользоватьСерииНоменклатуры() Тогда
		НепроверяемыеРеквизиты.Добавить("Товары.Серия");
		НепроверяемыеРеквизиты.Добавить("СоставТранспортныхУпаковок.Серия");
	КонецЕсли;
	
	ИнтеграцияМДЛП.ПроверитьЗаполнениеУпаковок(ЭтотОбъект, Отказ);
	
	ИнтеграцияМДЛППереопределяемый.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты, НепроверяемыеРеквизиты);
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, НепроверяемыеРеквизиты);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтоНовый());
	
	ИнтеграцияМДЛП.ПроверитьВозможностьЗаписиУведомления(ЭтотОбъект, РежимЗаписи);
	
	ИнтеграцияМДЛП.УбратьНезначащиеСимволы(ЭтотОбъект, "НомерДокумента");
	
	ИнтеграцияМДЛППереопределяемый.ПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ИнтеграцияМДЛП.ЗаписатьСтатусДокументаПоУмолчанию(ЭтотОбъект);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	СтандартнаяОбработка = Истина;
	ИнтеграцияМДЛППереопределяемый.ОбработкаПроведения(ЭтотОбъект, Отказ, РежимПроведения, СтандартнаяОбработка);
	Если Не СтандартнаяОбработка Тогда
		Возврат;
	КонецЕсли;
	
	Если Операция = Перечисления.ОперацииПеремещенияМДЛП.ПриходныйОрдер Тогда
		ОтразитьПоступление(Отказ);
	Иначе
		
		ПараметрыОперации = ИнтеграцияМДЛП.ПараметрыОперацииИзмененияСтатусаУпаковок();
		Статусы = Новый Массив;
		Статусы.Добавить(Перечисления.СтатусыУпаковокМДЛП.ОжидаетВыпуска);
		Статусы.Добавить(Перечисления.СтатусыУпаковокМДЛП.ВОбороте);
		Статусы.Добавить(Перечисления.СтатусыУпаковокМДЛП.ПринятаНаСкладИзЗТК);
		Статусы.Добавить(Перечисления.СтатусыУпаковокМДЛП.ОборотПриостановлен);
		ПараметрыОперации.ИсходныйСтатус = Статусы;
		Если Операция = Перечисления.ОперацииПеремещенияМДЛП.РасходныйОрдер Тогда
			ПараметрыОперации.НовыйСтатус = Перечисления.СтатусыУпаковокМДЛП.ПустаяСсылка();
		Иначе
			ПараметрыОперации.ЭтоПеремещение = Истина;
			ПараметрыОперации.МестоДеятельностиПолучатель = МестоДеятельностиПолучатель;
		КонецЕсли;
		
		ИнтеграцияМДЛП.ПровестиДокументПоРегиструУпаковок(Ссылка, ПараметрыОперации, Отказ);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	СтандартнаяОбработка = Истина;
	ИнтеграцияМДЛППереопределяемый.ОбработкаУдаленияПроведения(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	Если Не СтандартнаяОбработка Тогда
		Возврат;
	КонецЕсли;
	
	ИнтеграцияМДЛП.ОтменитьРезерв(Ссылка);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОтразитьПоступление(Отказ)
	
	ПараметрыОперации = ИнтеграцияМДЛП.ПараметрыОперацииИзмененияСтатусаУпаковок();
	ПараметрыОперации.ИсходныйСтатус    = Перечисления.СтатусыУпаковокМДЛП.ПустаяСсылка();
	ПараметрыОперации.СтатусВРезерве    = Перечисления.СтатусыУпаковокМДЛП.КПоступлению;
	ПараметрыОперации.МестоДеятельности = МестоДеятельностиПолучатель;
	ПараметрыОперации.ДокументРезерва   = Ссылка;
	ПараметрыОперации.ДатаОперации      = Дата;
	
	Если СостояниеПодтверждения = Перечисления.СостоянияПодтвержденияМДЛП.ПринятоГИСМ Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Запрос.УстановитьПараметр("ДокументРезерва", ПараметрыОперации.ДокументРезерва);
		Запрос.УстановитьПараметр("МестоДеятельности", ПараметрыОперации.МестоДеятельности);
		Запрос.УстановитьПараметр("ДатаСтатуса", ПараметрыОперации.ДатаОперации);
		Запрос.УстановитьПараметр("СтатусОжидаетВыпуска", "marked");
		Запрос.УстановитьПараметр("Владелец", Владелец);
		
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		
		Запрос.Текст = "
		|ВЫБРАТЬ
		|	ПодтвержденныеУпаковки.НомерКиЗ  КАК НомерУпаковки,
		|	ВЫБОР
		|		КОГДА ПодтвержденныеУпаковки.Статус В (&СтатусОжидаетВыпуска)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтатусыУпаковокМДЛП.ОжидаетВыпуска)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СтатусыУпаковокМДЛП.ВОбороте)
		|	КОНЕЦ                            КАК Статус
		|ПОМЕСТИТЬ ПодтвержденныеУпаковки
		|ИЗ
		|	Документ.УведомлениеОПеремещенииМДЛП.НомераУпаковок КАК ПодтвержденныеУпаковки
		|ГДЕ
		|	ПодтвержденныеУпаковки.Ссылка = &Ссылка
		|	И НЕ ПодтвержденныеУпаковки.Отклонено
		|	И ПодтвержденныеУпаковки.НомерРодительскойУпаковки = """"
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПодтвержденныеУпаковки.НомерУпаковки  КАК НомерУпаковки,
		|	ВЫБОР
		|		КОГДА ПодтвержденныеУпаковки.Статус В (&СтатусОжидаетВыпуска)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтатусыУпаковокМДЛП.ОжидаетВыпуска)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СтатусыУпаковокМДЛП.ВОбороте)
		|	КОНЕЦ                                 КАК Статус
		|ИЗ
		|	Документ.УведомлениеОПеремещенииМДЛП.ТранспортныеУпаковки КАК ПодтвержденныеУпаковки
		|ГДЕ
		|	ПодтвержденныеУпаковки.Ссылка = &Ссылка
		|	И НЕ ПодтвержденныеУпаковки.Отклонено
		|;
		|
		|//////////////////////////////////////////////////////////////////////////////
		|";
		
		Запрос.Выполнить();
		ИнтеграцияМДЛП.ДобавитьКлючиУпаковок(Запрос.МенеджерВременныхТаблиц, "ПодтвержденныеУпаковки");
		
		Запрос.Текст = "
		|ВЫБРАТЬ
		|	ДанныеУпаковок.НомерУпаковки                   КАК НомерУпаковки,
		|	&МестоДеятельности                             КАК МестоДеятельности,
		|	НЕОПРЕДЕЛЕНО                                   КАК ДокументРезерва,
		|	ПодтвержденныеУпаковки.Статус                  КАК Статус,
		|	&ДатаСтатуса                                   КАК ДатаСтатуса,
		|	&Владелец                                      КАК Владелец,
		|	""""                                           КАК НомерГрупповойУпаковки,
		|	ЛОЖЬ                                           КАК ГрупповаяУпаковка,
		|	ЛОЖЬ                                           КАК ВложеныПотребительскиеУпаковки
		|ИЗ
		|	ПодтвержденныеУпаковки КАК ПодтвержденныеУпаковки
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		РегистрСведений.УпаковкиМДЛП КАК ДанныеУпаковок
		|	ПО
		|		ПодтвержденныеУпаковки.НомерУпаковки = ДанныеУпаковок.НомерУпаковки
		|		И ПодтвержденныеУпаковки.КлючУпаковки = ДанныеУпаковок.КлючУпаковки
		|		И ДанныеУпаковок.ДокументРезерва = &ДокументРезерва
		|		И НЕ ДанныеУпаковок.ГрупповаяУпаковка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДанныеУпаковок.НомерУпаковки                      КАК НомерУпаковки,
		|	&МестоДеятельности                                КАК МестоДеятельности,
		|	НЕОПРЕДЕЛЕНО                                      КАК ДокументРезерва,
		|	ПодтвержденныеУпаковки.Статус                     КАК Статус,
		|	&ДатаСтатуса                                      КАК ДатаСтатуса,
		|	&Владелец                                         КАК Владелец,
		|	""""                                              КАК НомерГрупповойУпаковки,
		|	ИСТИНА                                            КАК ГрупповаяУпаковка,
		|	НЕ ПервыйУровеньУпаковок.НомерУпаковки ЕСТЬ NULL  КАК ВложеныПотребительскиеУпаковки
		|ИЗ
		|	ПодтвержденныеУпаковки КАК ПодтвержденныеУпаковки
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		РегистрСведений.УпаковкиМДЛП КАК ДанныеУпаковок
		|	ПО
		|		ПодтвержденныеУпаковки.НомерУпаковки = ДанныеУпаковок.НомерУпаковки
		|		И ПодтвержденныеУпаковки.КлючУпаковки = ДанныеУпаковок.КлючУпаковки
		|		И ДанныеУпаковок.ДокументРезерва = &ДокументРезерва
		|		И ДанныеУпаковок.ГрупповаяУпаковка
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			Т.НомерРодительскойУпаковки КАК НомерУпаковки
		|		ИЗ
		|			Документ.УведомлениеОПеремещенииМДЛП.НомераУпаковок КАК Т
		|		ГДЕ
		|			Т.Ссылка = &Ссылка) КАК ПервыйУровеньУпаковок
		|	ПО
		|		ПервыйУровеньУпаковок.НомерУпаковки = ПодтвержденныеУпаковки.НомерУпаковки
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	НомераУпаковок.НомерКиЗ                               КАК НомерУпаковки,
		|	&МестоДеятельности                                    КАК МестоДеятельности,
		|	ВерхнеуровневыеУпаковки.НомерУпаковки                 КАК ДокументРезерва,
		|	ЗНАЧЕНИЕ(Перечисление.СтатусыУпаковокМДЛП.ВУпаковке)  КАК Статус,
		|	&ДатаСтатуса                                          КАК ДатаСтатуса,
		|	&Владелец                                             КАК Владелец,
		|	НомераУпаковок.НомерРодительскойУпаковки              КАК НомерГрупповойУпаковки,
		|	ЛОЖЬ                                                  КАК ГрупповаяУпаковка,
		|	ЛОЖЬ                                                  КАК ВложеныПотребительскиеУпаковки
		|ИЗ
		|	Документ.УведомлениеОПеремещенииМДЛП.ТранспортныеУпаковки КАК ТранспортныеУпаковки
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		Документ.УведомлениеОПеремещенииМДЛП.СоставТранспортныхУпаковок КАК СоставТранспортныхУпаковок
		|	ПО
		|		СоставТранспортныхУпаковок.Ссылка = ТранспортныеУпаковки.Ссылка
		|		И СоставТранспортныхУпаковок.ИдентификаторСтроки = ТранспортныеУпаковки.ИдентификаторСтроки
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		Документ.УведомлениеОПеремещенииМДЛП.НомераУпаковок КАК НомераУпаковок
		|	ПО
		|		НомераУпаковок.Ссылка = ТранспортныеУпаковки.Ссылка
		|		И НомераУпаковок.ИдентификаторСтроки = СоставТранспортныхУпаковок.ИдентификаторСтрокиУпаковки
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		ПодтвержденныеУпаковки КАК ВерхнеуровневыеУпаковки
		|	ПО
		|		ВерхнеуровневыеУпаковки.НомерУпаковки = ТранспортныеУпаковки.НомерУпаковки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|			РегистрСведений.УпаковкиМДЛП КАК ДанныеУпаковок
		|		ПО
		|			ВерхнеуровневыеУпаковки.НомерУпаковки = ДанныеУпаковок.НомерУпаковки
		|			И ВерхнеуровневыеУпаковки.КлючУпаковки = ДанныеУпаковок.КлючУпаковки
		|			И ДанныеУпаковок.ДокументРезерва = &ДокументРезерва
		|ГДЕ
		|	ТранспортныеУпаковки.Ссылка = &Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	НомераУпаковок.НомерУпаковки                          КАК НомерУпаковки,
		|	&МестоДеятельности                                    КАК МестоДеятельности,
		|	ВерхнеуровневыеУпаковки.НомерУпаковки                 КАК ДокументРезерва,
		|	ЗНАЧЕНИЕ(Перечисление.СтатусыУпаковокМДЛП.ВУпаковке)  КАК Статус,
		|	&ДатаСтатуса                                          КАК ДатаСтатуса,
		|	&Владелец                                             КАК Владелец,
		|	НомераУпаковок.НомерРодительскойУпаковки              КАК НомерГрупповойУпаковки,
		|	ИСТИНА                                                КАК ГрупповаяУпаковка,
		|	НЕ ПервыйУровеньУпаковок.НомерУпаковки ЕСТЬ NULL      КАК ВложеныПотребительскиеУпаковки
		|ИЗ
		|	Документ.УведомлениеОПеремещенииМДЛП.ТранспортныеУпаковки КАК ТранспортныеУпаковки
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		Документ.УведомлениеОПеремещенииМДЛП.ИерархияГрупповыхУпаковок КАК НомераУпаковок
		|	ПО
		|		НомераУпаковок.Ссылка = НомераУпаковок.Ссылка
		|		И НомераУпаковок.ИдентификаторСтроки = ТранспортныеУпаковки.ИдентификаторСтроки
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		ПодтвержденныеУпаковки КАК ВерхнеуровневыеУпаковки
		|	ПО
		|		ВерхнеуровневыеУпаковки.НомерУпаковки = ТранспортныеУпаковки.НомерУпаковки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|			РегистрСведений.УпаковкиМДЛП КАК ДанныеУпаковок
		|		ПО
		|			ВерхнеуровневыеУпаковки.НомерУпаковки = ДанныеУпаковок.НомерУпаковки
		|			И ВерхнеуровневыеУпаковки.КлючУпаковки = ДанныеУпаковок.КлючУпаковки
		|			И ДанныеУпаковок.ДокументРезерва = &ДокументРезерва
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			Т.НомерРодительскойУпаковки КАК НомерУпаковки
		|		ИЗ
		|			Документ.УведомлениеОПеремещенииМДЛП.НомераУпаковок КАК Т
		|		ГДЕ
		|			Т.Ссылка = &Ссылка) КАК ПервыйУровеньУпаковок
		|	ПО
		|		ПервыйУровеньУпаковок.НомерУпаковки = НомераУпаковок.НомерУпаковки
		|ГДЕ
		|	НомераУпаковок.Ссылка = &Ссылка
		|";
		
		Набор = РегистрыСведений.УпаковкиМДЛП.СоздатьНаборЗаписей();
		Набор.Загрузить(Запрос.Выполнить().Выгрузить());
		Набор.Записать(Ложь);
		
		Набор = РегистрыСведений.УпаковкиМДЛП.СоздатьНаборЗаписей();
		Набор.Отбор.ДокументРезерва.Установить(ПараметрыОперации.ДокументРезерва);
		Набор.Записать();
		
	Иначе
		ИнтеграцияМДЛП.ПровестиДокументПоРегиструУпаковок(Ссылка, ПараметрыОперации, Отказ);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли