
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Ключ.Пустая() Тогда
		ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект);
	КонецЕсли;
	
	УстановитьУсловноеОформление();
	
	УстановитьЗаголовокФормы();
	
	УстановитьОформлениеПредставленияСостоянияДокументооборота();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект);
	
	ПриСозданииЧтенииНаСервере();
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбновитьСостояниеЭД" Тогда
		
		ОбработатьОповещение = Истина;
		
		ЭлементСхемы = ЭлементСхемыИнформацияОтправителя();
		
		ДанныеПроверки = ИнтерфейсДокументовЭДОКлиент.НовыеДанныеПроверкиОповещения();
		ДанныеПроверки.Сообщение = ЭлементСхемы.Сообщение;
		ДанныеПроверки.ЭлектронныйДокумент = Объект.Ссылка;

		ИнтерфейсДокументовЭДОКлиент.ПриОбработкеОповещенияФормыПросмотраЭД(ДанныеПроверки, Параметр, ОбработатьОповещение);
		
		Если Не ОбработатьОповещение Тогда
			Возврат;
		КонецЕсли;		

		ОбновитьДанныеДокументооборотаНаСервере();
	
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СформироватьПредставлениеЭД(Команда)
	
	#Если МобильныйКлиент Тогда
	
	ЭлементСхемы = СхемаДокументооборота.НайтиПоИдентификатору(ИдентификаторТекущегоЭлемента);
	
	ТабличныйДокумент = ИнтерфейсДокументовЭДОВызовСервера.ПредставлениеСообщения(ЭлементСхемы.Сообщение);		
			
	Если ТабличныйДокумент <> Неопределено Тогда
		
		ИмяФайла = ПолучитьИмяВременногоФайла("pdf");		
		ТабличныйДокумент.Записать(ИмяФайла, ТипФайлаТабличногоДокумента.PDF);

	Иначе
		
		ДанныеФайла = РаботаСФайламиКлиент.ДанныеФайла(ЭлементСхемы.ПрисоединенныйФайл);
		ИмяФайла = ПолучитьИмяВременногоФайла(ДанныеФайла.Расширение);
		ДвоичныеДанныеФайла = ПолучитьИзВременногоХранилища(ДанныеФайла.СсылкаНаДвоичныеДанныеФайла);
		ДвоичныеДанныеФайла.Записать(ИмяФайла);
		
	КонецЕсли;

	НачатьЗапускПриложения(Новый ОписаниеОповещения, ИмяФайла);
	
	#КонецЕсли

КонецПроцедуры   

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПодписи

&НаКлиенте
Процедура ПодписиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если Элемент.ТекущиеДанные <> Неопределено
		И Элемент.ТекущиеДанные.Сертификат <> Неопределено Тогда
		
		АдресДанныхСертификата = АдресДанныхСертификата(Элемент.ТекущиеДанные.НомерСтроки);
	
		Если АдресДанныхСертификата <> Неопределено Тогда
			ИнтеграцияБСПБЭДКлиент.ПоказатьСертификат(АдресДанныхСертификата);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОткрытьСертификат(Команда)

	ТекущиеДанные =  Элементы.Подписи.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		
		АдресДанныхСертификата = АдресДанныхСертификата(ТекущиеДанные.НомерСтроки);

		Если АдресДанныхСертификата <> Неопределено Тогда
			ИнтеграцияБСПБЭДКлиент.ПоказатьСертификат(АдресДанныхСертификата);
		КонецЕсли;
	
	Иначе
		ОчиститьСообщения();
		ТекстОшибки = НСтр("ru = 'Выберите сертификат в списке установленных подписей.'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстОшибки);
	КонецЕсли;

КонецПроцедуры

#Область ДействияПоЭДО

&НаКлиенте
Процедура ВыполнитьОтправкуПолучениеЭД(Элемент)
	
	Элементы.КартинкаОбновить.Картинка = БиблиотекаКартинок.СинхронизацияДанныхДлительнаяОперация;
		
	Оповещение = Новый ОписаниеОповещения("ОтправкаПолучениеЭДЗавершение", ЭтотОбъект);
	СинхронизацияЭДОКлиент.ВыполнитьОбменЭлектроннымиДокументами(ЭтаФорма, Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура Утвердить(Команда)

	НаборДействий = Новый Соответствие;	
	ЭлектронныеДокументыЭДОКлиентСервер.ДобавитьДействие(НаборДействий, ПредопределенноеЗначение(
		"Перечисление.ДействияПоЭДО.Утвердить"));
	
	ВыполнитьДействияПоЭДО(НаборДействий);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодписатьОтправить(Команда)
	
	НаборДействий = Новый Соответствие;	
	ЭлектронныеДокументыЭДОКлиентСервер.ДобавитьДействие(НаборДействий, ПредопределенноеЗначение(
		"Перечисление.ДействияПоЭДО.Подписать"));
	ЭлектронныеДокументыЭДОКлиентСервер.ДобавитьДействие(НаборДействий, ПредопределенноеЗначение(
		"Перечисление.ДействияПоЭДО.ПодготовитьКОтправке"));
	ЭлектронныеДокументыЭДОКлиентСервер.ДобавитьДействие(НаборДействий, ПредопределенноеЗначение(
		"Перечисление.ДействияПоЭДО.Отправить"));
	
	ВыполнитьДействияПоЭДО(НаборДействий);
	
КонецПроцедуры

&НаКлиенте
Процедура Подписать(Команда)
	
	НаборДействий = Новый Соответствие;	
	ЭлектронныеДокументыЭДОКлиентСервер.ДобавитьДействие(НаборДействий, ПредопределенноеЗначение(
		"Перечисление.ДействияПоЭДО.Подписать"));
	ЭлектронныеДокументыЭДОКлиентСервер.ДобавитьДействие(НаборДействий, ПредопределенноеЗначение(
		"Перечисление.ДействияПоЭДО.ПодготовитьКОтправке"));
		
	ВыполнитьДействияПоЭДО(НаборДействий);
	
КонецПроцедуры

&НаКлиенте
Процедура Отправить(Команда)
	
	НаборДействий = Новый Соответствие;	
	ЭлектронныеДокументыЭДОКлиентСервер.ДобавитьДействие(НаборДействий, ПредопределенноеЗначение(
		"Перечисление.ДействияПоЭДО.ПодготовитьКОтправке"));
	ЭлектронныеДокументыЭДОКлиентСервер.ДобавитьДействие(НаборДействий, ПредопределенноеЗначение(
		"Перечисление.ДействияПоЭДО.Отправить"));
	
	ВыполнитьДействияПоЭДО(НаборДействий);
	
КонецПроцедуры

&НаКлиенте
Процедура ПринятьАннулирование(Команда)
	
	НаборДействий = Новый Соответствие;	
	ЭлектронныеДокументыЭДОКлиентСервер.ДобавитьДействие(НаборДействий, ПредопределенноеЗначение(
		"Перечисление.ДействияПоЭДО.ПринятьАннулирование"));
	ЭлектронныеДокументыЭДОКлиентСервер.ДобавитьДействие(НаборДействий, ПредопределенноеЗначение(
		"Перечисление.ДействияПоЭДО.Подписать"));
	ЭлектронныеДокументыЭДОКлиентСервер.ДобавитьДействие(НаборДействий, ПредопределенноеЗначение(
		"Перечисление.ДействияПоЭДО.ПодготовитьКОтправке"));
	ЭлектронныеДокументыЭДОКлиентСервер.ДобавитьДействие(НаборДействий, ПредопределенноеЗначение(
		"Перечисление.ДействияПоЭДО.Отправить"));
		
	ВыполнитьДействияПоЭДО(НаборДействий);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтклонитьАннулирование(Команда)
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ЭлектронныйДокумент", Объект.Ссылка);
	
	НаборДействий = Новый Соответствие;	
	ЭлектронныеДокументыЭДОКлиентСервер.ДобавитьДействие(НаборДействий, ПредопределенноеЗначение(
		"Перечисление.ДействияПоЭДО.ОтклонитьАннулирование"));
	ЭлектронныеДокументыЭДОКлиентСервер.ДобавитьДействие(НаборДействий, ПредопределенноеЗначение(
		"Перечисление.ДействияПоЭДО.Подписать"));
	ЭлектронныеДокументыЭДОКлиентСервер.ДобавитьДействие(НаборДействий, ПредопределенноеЗначение(
		"Перечисление.ДействияПоЭДО.ПодготовитьКОтправке"));
	ЭлектронныеДокументыЭДОКлиентСервер.ДобавитьДействие(НаборДействий, ПредопределенноеЗначение(
		"Перечисление.ДействияПоЭДО.Отправить"));
		
	ДополнительныеПараметры.Вставить("НаборДействий", НаборДействий);
	ДополнительныеПараметры.Вставить("ОсновноеДействие", ПредопределенноеЗначение(
			"Перечисление.ДействияПоЭДО.ОтклонитьАннулирование"));
				
	Обработчик = Новый ОписаниеОповещения("ВыполнитьДействияПоЭДОПослеВводаСтроки", ЭтотОбъект, ДополнительныеПараметры);
	
	ДополнительныеПараметры = ОбщегоНазначенияБЭДКлиент.ПараметрыВводаСтроки();
	ДополнительныеПараметры.ЗаголовокФормы = НСтр("ru = 'Укажите причины отклонения предложения об аннулировании'");
	ДополнительныеПараметры.НазваниеКнопкиПоУмолчанию = НСтр("ru = 'Отклонить аннулирование'");
	ДополнительныеПараметры.Многострочность = Истина;
	ДополнительныеПараметры.Обязательность = Истина;
	ДополнительныеПараметры.КомментарийОбязательностиВвода =
		НСтр("ru = 'Для отклонения предложения об аннулировании документа необходимо указать причину.'");
	ОбщегоНазначенияБЭДКлиент.ПоказатьВводСтрокиБЭД(Обработчик, ДополнительныеПараметры);
	
КонецПроцедуры

&НаКлиенте
Процедура Отклонить(Команда)
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ЭлектронныйДокумент", Объект.Ссылка);
	
	НаборДействий = Новый Соответствие;	
	ЭлектронныеДокументыЭДОКлиентСервер.ДобавитьДействие(НаборДействий, ПредопределенноеЗначение(
		"Перечисление.ДействияПоЭДО.Отклонить"));
	ЭлектронныеДокументыЭДОКлиентСервер.ДобавитьДействие(НаборДействий, ПредопределенноеЗначение(
		"Перечисление.ДействияПоЭДО.Подписать"));
	ЭлектронныеДокументыЭДОКлиентСервер.ДобавитьДействие(НаборДействий, ПредопределенноеЗначение(
		"Перечисление.ДействияПоЭДО.ПодготовитьКОтправке"));
	ЭлектронныеДокументыЭДОКлиентСервер.ДобавитьДействие(НаборДействий, ПредопределенноеЗначение(
		"Перечисление.ДействияПоЭДО.Отправить"));
	ДополнительныеПараметры.Вставить("НаборДействий", НаборДействий);
	ДополнительныеПараметры.Вставить("ОсновноеДействие", ПредопределенноеЗначение(
			"Перечисление.ДействияПоЭДО.Отклонить"));	
			
	Обработчик = Новый ОписаниеОповещения("ВыполнитьДействияПоЭДОПослеВводаСтроки", ЭтотОбъект, ДополнительныеПараметры);
	
	ДополнительныеПараметры = ОбщегоНазначенияБЭДКлиент.ПараметрыВводаСтроки();
	ДополнительныеПараметры.ЗаголовокФормы = НСтр("ru = 'Укажите причины отклонения документа'");
	ДополнительныеПараметры.НазваниеКнопкиПоУмолчанию = НСтр("ru = 'Отклонить'");
	ДополнительныеПараметры.Многострочность = Истина;
	ДополнительныеПараметры.Обязательность = Истина;
	ДополнительныеПараметры.КомментарийОбязательностиВвода =
		НСтр("ru = 'Для отклонения документа необходимо указать причину.'");
	ОбщегоНазначенияБЭДКлиент.ПоказатьВводСтрокиБЭД(Обработчик, ДополнительныеПараметры);

КонецПроцедуры

&НаКлиенте
Процедура Аннулировать(Команда)
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ЭлектронныйДокумент", Объект.Ссылка);
	
	НаборДействий = Новый Соответствие;	
	ЭлектронныеДокументыЭДОКлиентСервер.ДобавитьДействие(НаборДействий, ПредопределенноеЗначение(
		"Перечисление.ДействияПоЭДО.Аннулировать"));
	ДополнительныеПараметры.Вставить("ОсновноеДействие", ПредопределенноеЗначение(
			"Перечисление.ДействияПоЭДО.Аннулировать"));
			
	ДополнительныеПараметры.Вставить("НаборДействий", НаборДействий);
		
	Обработчик = Новый ОписаниеОповещения("ВыполнитьДействияПоЭДОПослеВводаСтроки", ЭтотОбъект, ДополнительныеПараметры);
	
	ДополнительныеПараметры = ОбщегоНазначенияБЭДКлиент.ПараметрыВводаСтроки();
	ДополнительныеПараметры.ЗаголовокФормы = НСтр("ru = 'Укажите причины аннулирования документа'");
	ДополнительныеПараметры.НазваниеКнопкиПоУмолчанию = НСтр("ru = 'Аннулировать'");
	ДополнительныеПараметры.Многострочность = Истина;
	ДополнительныеПараметры.Обязательность = Истина;
	ДополнительныеПараметры.КомментарийОбязательностиВвода =
		НСтр("ru = 'Для аннулирования документа необходимо указать причину.'");
	ОбщегоНазначенияБЭДКлиент.ПоказатьВводСтрокиБЭД(Обработчик, ДополнительныеПараметры);
	
КонецПроцедуры

&НаКлиенте
Процедура Завершить(Команда)
	
	НаборДействий = Новый Соответствие;	
	ЭлектронныеДокументыЭДОКлиентСервер.ДобавитьДействие(НаборДействий, ПредопределенноеЗначение(
		"Перечисление.ДействияПоЭДО.ЗакрытьПринудительно"));
	
	ВыполнитьДействияПоЭДО(НаборДействий);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьДействияПоЭДОПослеВводаСтроки(Комментарий, ДополнительныеПараметры) Экспорт
	
	Если Комментарий = Неопределено Тогда
		Возврат; 
	КонецЕсли;
	
	Оповещение = Новый ОписаниеОповещения("ПослеВыполненияДействийПоЭДО", ЭтотОбъект, ДополнительныеПараметры.НаборДействий);

	ПараметрыВыполненияДействийПоЭДО = ЭлектронныеДокументыЭДОКлиентСервер.НовыеПараметрыВыполненияДействийПоЭДО();
	ПараметрыВыполненияДействийПоЭДО.НаборДействий = ДополнительныеПараметры.НаборДействий;
	ПараметрыВыполненияДействийПоЭДО.ОбъектыДействий.ЭлектронныеДокументы = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(
		ДополнительныеПараметры.ЭлектронныйДокумент);
	
	ПараметрыДействия = ЭлектронныеДокументыЭДОКлиентСервер.НовыеДополнительныеПараметрыДействия();
	ПараметрыДействия.Комментарий = Комментарий; 
				
	Для Каждого Действие Из ДополнительныеПараметры.НаборДействий Цикл
		ПараметрыВыполненияДействийПоЭДО.ДополнительныеПараметрыДействий.Вставить(Действие, ПараметрыДействия);
	КонецЦикла;	
	
	ЭлектронныеДокументыЭДОКлиент.НачатьВыполнениеДействийПоЭДО(Оповещение, ПараметрыВыполненияДействийПоЭДО);
		
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьВАрхив(Команда)
	
	НаборДействий = Новый Соответствие;	
	ЭлектронныеДокументыЭДОКлиентСервер.ДобавитьДействие(НаборДействий, ПредопределенноеЗначение(
		"Перечисление.ДействияПоЭДО.ОтправитьВАрхив"));
		
	ВыполнитьДействияПоЭДО(НаборДействий);
	
КонецПроцедуры

&НаКлиенте
Процедура ВернутьВРаботу(Команда)
	
	НаборДействий = Новый Соответствие;	
	ЭлектронныеДокументыЭДОКлиентСервер.ДобавитьДействие(НаборДействий, ПредопределенноеЗначение(
		"Перечисление.ДействияПоЭДО.ВернутьВРаботу"));
	
	ВыполнитьДействияПоЭДО(НаборДействий);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьПовторно(Команда)
	
	НаборДействий = Новый Соответствие;	
	ЭлектронныеДокументыЭДОКлиентСервер.ДобавитьДействие(НаборДействий, ПредопределенноеЗначение(
		"Перечисление.ДействияПоЭДО.ОтправитьПовторно"));
		
	ВыполнитьДействияПоЭДО(НаборДействий);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ПодписиПодписьВернаПредставление.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Подписи.ПодписьВерна");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", Новый Цвет(255, 0, 0));
		
КонецПроцедуры

&НаСервере
Процедура ПриСозданииЧтенииНаСервере()
	
	ЕстьПравоВыполненияОбмена = СинхронизацияЭДО.ЕстьПравоВыполненияОбмена();
	
	ИспользуетсяОтложеннаяОтправка = НастройкиЭДО.ОтложеннаяОтправкаЭлектронныхДокументов();
	
	ЗаполнитьДанныеТекущегоДокументооборота();
	
	Если Параметры.Свойство("ЭлектронныйДокумент") Тогда
		УстановитьИдентификаторТекущегоЭлемента(СхемаДокументооборота, Параметры.ЭлектронныйДокумент);
	КонецЕсли;
	
	ЭлементСхемы = СхемаДокументооборота.НайтиПоИдентификатору(ИдентификаторТекущегоЭлемента);
	
	НастроитьОформлениеФормы();

	ЗаполнитьПодписи(ЭлементСхемы);
	
	ЗаполнитьТекстСопроводительнойЗаписки(ЭлементСхемы);
	

КонецПроцедуры

&НаСервере
Функция НастройкиСхемыРегламента()
	
	НастройкиСхемы = РегламентыЭДО.НовыеНастройкиСхемыРегламента();
	НастройкиСхемы.ТипРегламента = Объект.ТипРегламента;
	НастройкиСхемы.СпособОбмена = Объект.СпособОбмена;
	НастройкиСхемы.ТребуетсяИзвещение = Объект.ТребуетсяИзвещение;
	НастройкиСхемы.ТребуетсяПодтверждение = Объект.ТребуетсяПодтверждение;

	Возврат НастройкиСхемы;
	
КонецФункции

&НаСервере
Процедура НастроитьОформлениеФормы()
	
	НастроитьВидимостьДействийПоЭДО();
	
	Элементы.СтраницаСопроводительнаяЗаписка.Картинка = ОбщегоНазначенияКлиентСервер.КартинкаКомментария(
		СопроводительнаяЗаписка);
	
	Если СостояниеЭДО = Перечисления.СостоянияДокументовЭДО.ТребуетсяПодписание Тогда
		ЭлементСхемы = СхемаДокументооборота.НайтиПоИдентификатору(ИдентификаторТекущегоЭлемента);
		ТекстКоличестваПодписей = МаршрутыПодписанияБЭД.ПредставлениеПрогрессаПодписания(ЭлементСхемы.Сообщение, Подписи.Количество())
	ИначеЕсли Подписи.Количество() > 0 Тогда
		ТекстКоличестваПодписей = "(" + Подписи.Количество() + ")";
	Иначе
		ТекстКоличестваПодписей = "";
	КонецЕсли;
	
	Элементы.СтраницаПодписиИСтатусы.Заголовок = СтрШаблон(НСтр("ru = 'Подписи %1'"), ТекстКоличестваПодписей);
	
	Если Подписи.НайтиСтроки(Новый Структура("ПодписьВерна", Ложь)).Количество() = 0 Тогда
		Элементы.СтраницаПодписиИСтатусы.Картинка = Новый Картинка;
	Иначе
		Элементы.СтраницаПодписиИСтатусы.Картинка = БиблиотекаКартинок.Предупреждение;
	КонецЕсли;
	
	СостояниеДокументаПодробное = ЭлектронныеДокументыЭДО.СостояниеДокументаПодробное(Объект.Ссылка);
	
	Если ЗначениеЗаполнено(СостояниеДокументаПодробное.Комментарий) Тогда
		ШаблонПредставления = "%1 (%2)";
		СостояниеДокументаПодробное = ЭлектронныеДокументыЭДО.СостояниеДокументаПодробное(Объект.Ссылка);
		ПредставлениеСостояния = СтрШаблон(ШаблонПредставления, СостояниеДокументаПодробное.Значение,
			СостояниеДокументаПодробное.Комментарий);
	ИначеЕсли ЗначениеЗаполнено(СостояниеДокументаПодробное.Значение) Тогда		
		ПредставлениеСостояния = СостояниеДокументаПодробное.Значение;
	Иначе
		ПредставлениеСостояния = ЭлектронныеДокументыЭДО.НачальноеСостояниеДокумента();
	КонецЕсли;
		
	Элементы.ПредставлениеСостояния.Заголовок = ПредставлениеСостояния;
	
	ОбновитьДеревоМаршрутаПодписания();
	
КонецПроцедуры

&НаСервере
Функция ЭлементСхемыИнформацияОтправителя()
	Возврат СхемаДокументооборота.ПолучитьЭлементы()[0];
КонецФункции

&НаСервере
Процедура ЗаполнитьДанныеТекущегоДокументооборота()

	ДанныеДокументооборота = ИнтерфейсДокументовЭДО.ДанныеФормыПросмотраЭлектронногоДокумента(Объект.Ссылка, Истина);
	
	ВыборкаСвойствДокумента = ДанныеДокументооборота.ВыборкаСвойствОсновногоДокумента;
	Если ВыборкаСвойствДокумента.Следующий() Тогда
		ВидДокумента = ВыборкаСвойствДокумента.ВидДокумента;
		ТипДокумента = ВыборкаСвойствДокумента.ВидДокумента.ТипДокумента;
		ТипПроизвольногоДокумента = ВыборкаСвойствДокумента.ВидДокумента.ТипПроизвольногоДокумента;
		ПрикладнойТипДокумента = ВыборкаСвойствДокумента.ВидДокумента.ПрикладнойТипДокумента;
		НомерДокумента = ВыборкаСвойствДокумента.НомерДокумента;
		ДатаДокумента = ВыборкаСвойствДокумента.ДатаДокумента;
		СуммаДокумента = ВыборкаСвойствДокумента.СуммаДокумента;
		МаршрутПодписания = ВыборкаСвойствДокумента.МаршрутПодписания;
	КонецЕсли;
	
	ВыборкаСостоянияЭДО = ДанныеДокументооборота.ВыборкаСостоянияЭДО;
	Если ВыборкаСостоянияЭДО.Следующий() Тогда
		СостояниеЭДО = ВыборкаСостоянияЭДО.Состояние; 
	КонецЕсли;
	
	Основания = Новый СписокЗначений;
	ВыборкаОбъектовУчета = ДанныеДокументооборота.ВыборкаОбъектовУчета;
	Пока ВыборкаОбъектовУчета.Следующий() Цикл
		ОбъектУчета = ВыборкаОбъектовУчета.ОбъектУчета;		
		Основания.Добавить(ОбъектУчета);
	КонецЦикла;
	
	НастройкиСхемыРегламента = НастройкиСхемыРегламента();
	ИнтерфейсДокументовЭДО.ЗаполнитьСхемуРегламента(НастройкиСхемыРегламента,
		ДанныеДокументооборота.ДанныеЭлементовСхемы, СхемаДокументооборота);
	
	Если Параметры.Свойство("ЭлектронныйДокумент") Тогда
		ИдентификаторТекущегоЭлемента = ИнтерфейсДокументовЭДО.ИдентификаторЭлементаСхемыРегламента(
			СхемаДокументооборота, Параметры.ЭлектронныйДокумент);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДеревоМаршрутаПодписания()
	
	ЭлементСхемы = ЭлементСхемыИнформацияОтправителя();
	
	Если ЗначениеЗаполнено(ЭлементСхемы.Сообщение) Тогда
		
		ИсточникМаршрута = ЭлементСхемы.Сообщение;
		
	Иначе
		
		ИсточникМаршрута = МаршрутыПодписанияБЭД.ТаблицаМаршрутаПоПараметрам(Объект.Ссылка, МаршрутПодписания);
		
	КонецЕсли;
	
	ОсновнойРеквизит = "Подписант";
	
	МаршрутыПодписанияБЭД.ЗаполнитьДеревоМаршрутаНаФорме(ЭтотОбъект, ИсточникМаршрута, 
		"СхемаМаршрутаПодписания", ОсновнойРеквизит);
	
КонецПроцедуры

&НаСервере
Процедура НастроитьВидимостьДействийПоЭДО()
	
	ДействияНаЭтапе = ЭлектронныеДокументыЭДО.ДействияПоСостояниюДокумента(СостояниеЭДО, Объект);
	
	Элементы.Подписать.Видимость = Ложь;
	Элементы.Отправить.Видимость = Ложь;
	Элементы.ПодписатьОтправить.Видимость = Ложь;
		
	Если ЕстьДействиеПоЭДО(ДействияНаЭтапе, Перечисления.ДействияПоЭДО.Подписать)
		И ЕстьДействиеПоЭДО(ДействияНаЭтапе, Перечисления.ДействияПоЭДО.Отправить) 
		И Не ИспользуетсяОтложеннаяОтправка Тогда
		Элементы.ПодписатьОтправить.Видимость = Истина;
	ИначеЕсли ЕстьДействиеПоЭДО(ДействияНаЭтапе, Перечисления.ДействияПоЭДО.Подписать) Тогда
		Элементы.Подписать.Видимость = Истина;
	ИначеЕсли ЕстьДействиеПоЭДО(ДействияНаЭтапе, Перечисления.ДействияПоЭДО.Отправить) 
		Или ЕстьДействиеПоЭДО(ДействияНаЭтапе, Перечисления.ДействияПоЭДО.ПодготовитьКОтправке) Тогда
		Элементы.Отправить.Видимость = Истина;
	КонецЕсли;
	
	Элементы.ПринятьАннулирование.Видимость = ЕстьДействиеПоЭДО(ДействияНаЭтапе,
		Перечисления.ДействияПоЭДО.ПринятьАннулирование);
	Элементы.ОтклонитьАннулирование.Видимость = ЕстьДействиеПоЭДО(ДействияНаЭтапе,
		Перечисления.ДействияПоЭДО.ОтклонитьАннулирование);
	
	Элементы.Утвердить.Видимость = ЕстьДействиеПоЭДО(ДействияНаЭтапе, Перечисления.ДействияПоЭДО.Утвердить);	
	Элементы.Отклонить.Видимость = ЕстьДействиеПоЭДО(ДействияНаЭтапе, Перечисления.ДействияПоЭДО.Отклонить);
	Элементы.Аннулировать.Видимость = ЕстьДействиеПоЭДО(ДействияНаЭтапе, Перечисления.ДействияПоЭДО.Аннулировать);
	Элементы.Завершить.Видимость = ЕстьДействиеПоЭДО(ДействияНаЭтапе, Перечисления.ДействияПоЭДО.ЗакрытьПринудительно);
	Элементы.ОтправитьВАрхив.Видимость = ЕстьДействиеПоЭДО(ДействияНаЭтапе, Перечисления.ДействияПоЭДО.ОтправитьВАрхив);
	Элементы.ВернутьВРаботу.Видимость = ЕстьДействиеПоЭДО(ДействияНаЭтапе, Перечисления.ДействияПоЭДО.ВернутьВРаботу);
	Элементы.ОтправитьПовторно.Видимость = ЕстьДействиеПоЭДО(ДействияНаЭтапе,
		Перечисления.ДействияПоЭДО.ОтправитьПовторно);
	
КонецПроцедуры

&НаСервере
Функция ЕстьДействиеПоЭДО(ДоступныеДействия, ДействиеПоЭДО)
	Возврат ИнтерфейсДокументовЭДО.ЕстьДействиеПоЭДО(ДоступныеДействия, ДействиеПоЭДО);
КонецФункции

&НаКлиенте
Процедура ВыполнитьДействияПоЭДО(НаборДействий)

	Оповещение = Новый ОписаниеОповещения("ПослеВыполненияДействийПоЭДО", ЭтотОбъект, НаборДействий);
	
	ПараметрыВыполненияДействийПоЭДО = ЭлектронныеДокументыЭДОКлиентСервер.НовыеПараметрыВыполненияДействийПоЭДО();
	ПараметрыВыполненияДействийПоЭДО.НаборДействий = НаборДействий;
	ПараметрыВыполненияДействийПоЭДО.ОбъектыДействий.Документообороты = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Объект.Ссылка);

	ЭлектронныеДокументыЭДОКлиент.НачатьВыполнениеДействийПоЭДО(Оповещение, ПараметрыВыполненияДействийПоЭДО);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьИдентификаторТекущегоЭлемента(ЭлементСхемыРодитель, ЭлектронныйДокумент, Установлен = Ложь)
	
	Если Установлен Тогда
		Возврат;
	КонецЕсли;
	
	КоллекцияЭлементовСхемы = ЭлементСхемыРодитель.ПолучитьЭлементы();
	Если КоллекцияЭлементовСхемы.Количество() = 0 Тогда
		Возврат;
	ИначеЕсли Не ЗначениеЗаполнено(ЭлектронныйДокумент) Тогда
		ИдентификаторТекущегоЭлемента = КоллекцияЭлементовСхемы[0].ПолучитьИдентификатор();
		Установлен = Истина;
		Возврат;
	КонецЕсли;
	
	Для Каждого ЭлементСхемы Из КоллекцияЭлементовСхемы Цикл
		Если ЭлементСхемы.Сообщение = ЭлектронныйДокумент Тогда
			ИдентификаторТекущегоЭлемента = ЭлементСхемы.ПолучитьИдентификатор();
			Установлен = Истина;
		Иначе
			УстановитьИдентификаторТекущегоЭлемента(ЭлементСхемы, ЭлектронныйДокумент, Установлен);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПодписи(ЭлементСхемы)
	
	Если Подписи.Количество() Тогда
		Подписи.Очистить();
	КонецЕсли;
	
	Если Объект.ОбменБезПодписи
		ИЛИ Не ЗначениеЗаполнено(ЭлементСхемы.ПрисоединенныйФайл) Тогда
		Возврат;
	КонецЕсли;
	
	УстановленныеПодписи = ИнтерфейсДокументовЭДО.УстановленныеПодписи(ЭлементСхемы, Объект.ТипРегламента);
	Для Каждого СтрокаПодпись Из УстановленныеПодписи Цикл
		НоваяСтрока = Подписи.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаПодпись);
		НоваяСтрока.НомерСтроки = Подписи.Индекс(НоваяСтрока);
	КонецЦикла;
	ИнтерфейсДокументовЭДО.ЗаполнитьПредставлениеСостоянияПодписей(Подписи);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТекстСопроводительнойЗаписки(ЭлементСхемы);
	СопроводительнаяЗаписка = ЭлементСхемы.ДополнительнаяИнформация;	
КонецПроцедуры

&НаСервере
Процедура УстановитьЗаголовокФормы()
	
	Если Не ЗначениеЗаполнено(Объект.ВидДокумента) Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыПредставления = ЭлектронныеДокументыЭДО.НовыеСвойстваПредставленияДокумента();
	ПараметрыПредставления.ВидДокумента = Объект.ВидДокумента;
	ПараметрыПредставления.НомерДокумента = Объект.НомерДокумента;
	ПараметрыПредставления.ДатаДокументаОтправителя = ДатаДокументаОтправителя;
		
	Заголовок = ЭлектронныеДокументыЭДО.ПредставлениеДокументаПоСвойствам(ПараметрыПредставления, Объект.Ссылка.Пустая());
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОформлениеПредставленияСостоянияДокументооборота()
	
	ВидыДокументовДляПроизвольногоФормата = ЭлектронныеДокументыЭДО.ВидыДокументовДляПроизвольногоФормата();
	Если ВидыДокументовДляПроизвольногоФормата.Найти(ВидДокумента) = Неопределено Тогда
		Элементы.НадписьСостояние.Ширина = 0;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыполненияДействийПоЭДО(Результат, НаборДействий) Экспорт
	
	ОбновитьДанныеДокументооборотаНаСервере();
			
	Если НаборДействий.Получить(ПредопределенноеЗначение("Перечисление.ДействияПоЭДО.ОтправитьВАрхив")) = Истина Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДанныеДокументооборотаНаСервере()
	
	НастроитьОформлениеФормы();
	
	ЗаполнитьДанныеТекущегоДокументооборота();
	
	ЭлементСхемы = СхемаДокументооборота.НайтиПоИдентификатору(ИдентификаторТекущегоЭлемента);
	ЗаполнитьПодписи(ЭлементСхемы);
	
	ЗаполнитьТекстСопроводительнойЗаписки(ЭлементСхемы);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправкаПолучениеЭДЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Элементы.КартинкаОбновить.Картинка = БиблиотекаКартинок.Обновить;
	ОбновитьДанныеДокументооборотаНаСервере();
	
КонецПроцедуры

&НаСервере
Функция АдресДанныхСертификата(НомерСтроки)
	
	ДвоичныеДанныеСертификата = Подписи[НомерСтроки].Сертификат.Получить();
	СсылкаНаХранилищеДанныхСертификата = ПоместитьВоВременноеХранилище(ДвоичныеДанныеСертификата, УникальныйИдентификатор);
	Возврат СсылкаНаХранилищеДанныхСертификата;
	
КонецФункции

#КонецОбласти