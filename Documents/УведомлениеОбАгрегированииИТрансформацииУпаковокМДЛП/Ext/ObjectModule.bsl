#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ИнтеграцияМДЛППереопределяемый.ОбработкаЗаполнения(ЭтотОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	СостояниеПодтверждения = Перечисления.СостоянияПодтвержденияМДЛП.КПередаче;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	НепроверяемыеРеквизиты = Новый Массив;
	
	Если Не ИнтеграцияМДЛП.ИспользоватьХарактеристикиНоменклатуры() Тогда
		НепроверяемыеРеквизиты.Добавить("Товары.Характеристика");
	КонецЕсли;
	
	Если Не ИнтеграцияМДЛП.ИспользоватьСерииНоменклатуры() Тогда
		НепроверяемыеРеквизиты.Добавить("Товары.Серия");
	КонецЕсли;
	
	ИнтеграцияМДЛП.ПроверитьЗаполнениеУпаковок(ЭтотОбъект, Отказ);
	
	Если Операция = Перечисления.ОперацииАгрегированияИТрансформацииУпаковокМДЛП.Изъятие Тогда
		Для Каждого Поле Из ПроверяемыеРеквизиты Цикл
			Если СтрНачинаетсяС(Поле, "ГруппировочныеУпаковки") Тогда
				НепроверяемыеРеквизиты.Добавить(Поле);
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли Операция = Перечисления.ОперацииАгрегированияИТрансформацииУпаковокМДЛП.Расформирование Тогда
		Для Каждого Поле Из ПроверяемыеРеквизиты Цикл
			Если СтрНачинаетсяС(Поле, "Товары.")
			 Или СтрНачинаетсяС(Поле, "НомераУпаковок.")
			 Или СтрНачинаетсяС(Поле, "ГруппировочныеУпаковки") Тогда
				НепроверяемыеРеквизиты.Добавить(Поле);
			КонецЕсли;
		КонецЦикла;
	Иначе
		Для Каждого ГрупповаяУпаковка Из ГруппировочныеУпаковки Цикл
			Отбор = Новый Структура("ИдентификаторГрупповойУпаковки, НомерУпаковки", ГрупповаяУпаковка.ИдентификаторСтроки, ГрупповаяУпаковка.НомерУпаковки);
			НайденныеСтроки = ТранспортныеУпаковки.НайтиСтроки(Отбор);
			Для Каждого СтрокаУпаковки Из НайденныеСтроки Цикл
				ТекстОшибки = НСтр("ru = 'Нельзя вкладывать упаковку саму в себя.'");
				Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ТранспортныеУпаковки", СтрокаУпаковки.НомерСтроки, "НомерУпаковки");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, ЭтотОбъект, Поле,, Отказ);
			КонецЦикла;
		КонецЦикла;
		
	КонецЕсли;
	
	ИнтеграцияМДЛППереопределяемый.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты, НепроверяемыеРеквизиты);
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, НепроверяемыеРеквизиты);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтоНовый());
	
	Если Операция = Перечисления.ОперацииАгрегированияИТрансформацииУпаковокМДЛП.Расформирование Тогда
		Товары.Очистить();
		НомераУпаковок.Очистить();
	ИначеЕсли Операция = Перечисления.ОперацииАгрегированияИТрансформацииУпаковокМДЛП.Агрегирование Тогда
		ОчиститьНеиспользуемыеУпаковки();
	КонецЕсли;
	
	ИнтеграцияМДЛП.ПроверитьВозможностьЗаписиУведомления(ЭтотОбъект, РежимЗаписи);
	
	ИнтеграцияМДЛППереопределяемый.ПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ИнтеграцияМДЛП.ЗаписатьСтатусДокументаПоУмолчанию(ЭтотОбъект);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	СтандартнаяОбработка = Истина;
	ИнтеграцияМДЛППереопределяемый.ОбработкаПроведения(ЭтотОбъект, Отказ, РежимПроведения, СтандартнаяОбработка);
	Если Не СтандартнаяОбработка Тогда
		Возврат;
	КонецЕсли;
	
	ОбрабатываемыеСостояния = Новый Массив;
	ОбрабатываемыеСостояния.Добавить(Перечисления.СостоянияПодтвержденияМДЛП.КПередаче);
	ОбрабатываемыеСостояния.Добавить(Перечисления.СостоянияПодтвержденияМДЛП.ПринятоГИСМ);
	ОбрабатываемыеСостояния.Добавить(Перечисления.СостоянияПодтвержденияМДЛП.ОтклоненоГИСМ);
	
	Если ОбрабатываемыеСостояния.Найти(СостояниеПодтверждения) = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыОперации = ИнтеграцияМДЛП.ПараметрыОперацииИзмененияСтатусаУпаковок();
	ПараметрыОперации.ДатаОперации = Дата;
	ПараметрыОперации.МестоДеятельности = ?(ЗначениеЗаполнено(МестоДеятельности), МестоДеятельности, Организация);
	ПараметрыОперации.ДокументРезерва = Ссылка;
	ПараметрыОперации.Владелец = Владелец;
	ПараметрыОперации.ИсходныйСтатус = СтатусУпаковок;
	
	ПараметрыОперации.ИспользуетсяЗонаТаможенногоКонтроля = Истина;
	ПараметрыОперации.ИсходнаяЗонаТаможенногоКонтроля     = ЗонаТаможенногоКонтроля;
	ПараметрыОперации.НоваяЗонаТаможенногоКонтроля        = ЗонаТаможенногоКонтроля;
	
	Если СостояниеПодтверждения = Перечисления.СостоянияПодтвержденияМДЛП.ОтклоненоГИСМ Тогда
		ИнтеграцияМДЛП.ОтменитьРезерв(Ссылка);
	Иначе
	
		Если Операция = Перечисления.ОперацииАгрегированияИТрансформацииУпаковокМДЛП.Расформирование Тогда
			РасформироватьУпаковку(ПараметрыОперации, Отказ);
		ИначеЕсли Операция = Перечисления.ОперацииАгрегированияИТрансформацииУпаковокМДЛП.Изъятие Тогда
			ИзъятьУпаковки(ПараметрыОперации, Отказ);
		ИначеЕсли Операция = Перечисления.ОперацииАгрегированияИТрансформацииУпаковокМДЛП.Включение Тогда
			ВключитьУпаковки(ПараметрыОперации, Отказ);
		ИначеЕсли Операция = Перечисления.ОперацииАгрегированияИТрансформацииУпаковокМДЛП.Агрегирование Тогда
			АгрегироватьУпаковки(ПараметрыОперации, Отказ);
		ИначеЕсли Операция = Перечисления.ОперацииАгрегированияИТрансформацииУпаковокМДЛП.ВключениеВЕдиничнуюУпаковку Тогда
			// Для совместимости с версией схем 1.34
			ВключитьВЕдиничнуюУпаковку(ПараметрыОперации, Отказ);
			// Конец Для совместимости с версией схем 1.34
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	СтандартнаяОбработка = Истина;
	ИнтеграцияМДЛППереопределяемый.ОбработкаУдаленияПроведения(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	Если Не СтандартнаяОбработка Тогда
		Возврат;
	КонецЕсли;
	
	ИнтеграцияМДЛП.ОтменитьРезерв(Ссылка);
	
КонецПроцедуры

Процедура АгрегироватьУпаковки(ПараметрыОперации, Отказ)
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	НовыеУпаковки.Ссылка                          КАК Ссылка,
	|	НовыеУпаковки.НомерСтроки                     КАК НомерСтроки,
	|	НовыеУпаковки.НомерУпаковки                   КАК НомерУпаковки,
	|	НовыеУпаковки.Ссылка.ВложеныПотребительскиеУпаковки  КАК ВложеныПотребительскиеУпаковки,
	|	Новыеупаковки.ИдентификаторСтроки             КАК ИдентификаторСтроки
	|ПОМЕСТИТЬ НовыеУпаковки
	|ИЗ
	|	Документ.УведомлениеОбАгрегированииИТрансформацииУпаковокМДЛП.ГруппировочныеУпаковки КАК НовыеУпаковки
	|ГДЕ
	|	НовыеУпаковки.Ссылка = &Ссылка
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныеУпаковки.НомерСтроки  КАК НомерСтроки,
	|	НовыеУпаковки.НомерУпаковки    КАК НомерГрупповойУпаковки,
	|	ВложенныеУпаковки.НомерКиЗ     КАК НомерУпаковки,
	|	""НомераУпаковок""             КАК ИмяТабличнойЧасти,
	|	""НомерКиЗ""                   КАК ИмяПоля,
	|	ЛОЖЬ                           КАК ГрупповаяУпаковка,
	|	ВложенныеУпаковки.Отклонено    КАК Отклонено
	|ПОМЕСТИТЬ ВложенныеУпаковки
	|ИЗ
	|	Документ.УведомлениеОбАгрегированииИТрансформацииУпаковокМДЛП.НомераУпаковок КАК ВложенныеУпаковки
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.УведомлениеОбАгрегированииИТрансформацииУпаковокМДЛП.Товары КАК Товары
	|	ПО
	|		Товары.Ссылка = ВложенныеУпаковки.Ссылка
	|		И Товары.ИдентификаторСтроки = ВложенныеУпаковки.ИдентификаторСтроки
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		НовыеУпаковки КАК НовыеУпаковки
	|	ПО
	|		НовыеУпаковки.Ссылка = Товары.Ссылка
	|		И НовыеУпаковки.ИдентификаторСтроки = Товары.ИдентификаторГрупповойУпаковки
	|ГДЕ
	|	ВложенныеУпаковки.Ссылка = &Ссылка
	|	И &ВложеныПотребительскиеУпаковки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВложенныеУпаковки.НомерСтроки    КАК НомерСтроки,
	|	НовыеУпаковки.НомерУпаковки      КАК НомерГрупповойУпаковки,
	|	ВложенныеУпаковки.НомерУпаковки  КАК НомерУпаковки,
	|	""ТранспортныеУпаковки""         КАК ИмяТабличнойЧасти,
	|	""НомерУпаковки""                КАК ИмяПоля,
	|	ИСТИНА                           КАК ГрупповаяУпаковка,
	|	ВложенныеУпаковки.Отклонено      КАК Отклонено
	|ИЗ
	|	Документ.УведомлениеОбАгрегированииИТрансформацииУпаковокМДЛП.ТранспортныеУпаковки КАК ВложенныеУпаковки
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		НовыеУпаковки КАК НовыеУпаковки
	|	ПО
	|		НовыеУпаковки.Ссылка = ВложенныеУпаковки.Ссылка
	|		И НовыеУпаковки.ИдентификаторСтроки = ВложенныеУпаковки.ИдентификаторГрупповойУпаковки
	|ГДЕ
	|	ВложенныеУпаковки.Ссылка = &Ссылка
	|	И НЕ &ВложеныПотребительскиеУпаковки
	|");
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ВложеныПотребительскиеУпаковки", ВложеныПотребительскиеУпаковки);
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
	ИнтеграцияМДЛП.ДобавитьКлючиУпаковок(Запрос.МенеджерВременныхТаблиц, "НовыеУпаковки");
	ИнтеграцияМДЛП.ДобавитьКлючиУпаковок(Запрос.МенеджерВременныхТаблиц, "ВложенныеУпаковки");
	
	Если СостояниеПодтверждения = Перечисления.СостоянияПодтвержденияМДЛП.КПередаче Тогда
		Запрос.Текст = "
		|ВЫБРАТЬ
		|	НовыеУпаковки.НомерСтроки    КАК НомерСтроки,
		|	НовыеУпаковки.НомерУпаковки  КАК НомерУпаковки,
		|	НовыеУпаковки.КлючУпаковки   КАК КлючУпаковки,
		|	1                            КАК ДоляУпаковки,
		|	ИСТИНА                       КАК ГрупповаяУпаковка,
		|	""ГруппировочныеУпаковки""   КАК ИмяТабличнойЧасти,
		|	""НомерУпаковки""            КАК ИмяПоля
		|ПОМЕСТИТЬ НомераУпаковок
		|ИЗ
		|	НовыеУпаковки КАК НовыеУпаковки
		|";
		Запрос.Выполнить();
		
		ПараметрыОперации.ИсходныйСтатус = Перечисления.СтатусыУпаковокМДЛП.ПустаяСсылка();
		ПараметрыОперации.ИсходнаяЗонаТаможенногоКонтроля = Справочники.ЗоныТаможенногоКонтроляМДЛП.ПустаяСсылка();
		ПроверкаПройдена = ИнтеграцияМДЛП.ПроверитьДоступностьУпаковок(Запрос.МенеджерВременныхТаблиц, ПараметрыОперации, Отказ);
		
		Запрос.Текст = "
		|УНИЧТОЖИТЬ НомераУпаковок
		|;
		|
		|/////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВложенныеУпаковки.НомерСтроки        КАК НомерСтроки,
		|	ВложенныеУпаковки.НомерУпаковки      КАК НомерУпаковки,
		|	ВложенныеУпаковки.КлючУпаковки       КАК КлючУпаковки,
		|	1                                    КАК ДоляУпаковки,
		|	ВложенныеУпаковки.ГрупповаяУпаковка  КАК ГрупповаяУпаковка,
		|	ВложенныеУпаковки.ИмяТабличнойЧасти  КАК ИмяТабличнойЧасти,
		|	ВложенныеУпаковки.ИмяПоля            КАК ИмяПоля
		|ПОМЕСТИТЬ НомераУпаковок
		|ИЗ
		|	ВложенныеУпаковки КАК ВложенныеУпаковки
		|";
		
		Запрос.Выполнить();
		
		ПараметрыОперации.ИсходныйСтатус = СтатусУпаковок;
		ПараметрыОперации.ИсходнаяЗонаТаможенногоКонтроля = ЗонаТаможенногоКонтроля;
		ПроверкаПройдена = ПроверкаПройдена И ИнтеграцияМДЛП.ПроверитьДоступностьУпаковок(Запрос.МенеджерВременныхТаблиц, ПараметрыОперации, Отказ);
		
		Если ПроверкаПройдена Тогда
			Запрос.Текст = "
			|УНИЧТОЖИТЬ НомераУпаковок
			|;
			|
			|/////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	НовыеУпаковки.НомерУпаковки  КАК НомерУпаковки,
			|	НовыеУпаковки.КлючУпаковки   КАК КлючУпаковки,
			|	1                            КАК ДоляУпаковки,
			|	ИСТИНА                       КАК ГрупповаяУпаковка
			|ПОМЕСТИТЬ НомераУпаковок
			|ИЗ
			|	НовыеУпаковки КАК НовыеУпаковки
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ВложенныеУпаковки.НомерУпаковки      КАК НомерУпаковки,
			|	ВложенныеУпаковки.КлючУпаковки       КАК КлючУпаковки,
			|	1                                    КАК ДоляУпаковки,
			|	ВложенныеУпаковки.ГрупповаяУпаковка  КАК ГрупповаяУпаковка
			|ИЗ
			|	ВложенныеУпаковки КАК ВложенныеУпаковки
			|";
			Запрос.Выполнить();
			
			ИнтеграцияМДЛП.ЗарезервироватьУпаковки(Запрос.МенеджерВременныхТаблиц, ПараметрыОперации);
		КонецЕсли;
		
	ИначеЕсли СостояниеПодтверждения = Перечисления.СостоянияПодтвержденияМДЛП.ПринятоГИСМ Тогда
		
		Запрос.Текст = "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	&МестоДеятельности                            КАК МестоДеятельности,
		|	&НоваяЗонаТаможенногоКонтроля                 КАК ЗонаТаможенногоКонтроля,
		|	НЕОПРЕДЕЛЕНО                                  КАК ДокументРезерва,
		|	""""                                          КАК НомерГрупповойУпаковки,
		|	НовыеУпаковки.НомерУпаковки                   КАК НомерУпаковки,
		|	ИСТИНА                                        КАК ГрупповаяУпаковка,
		|	НовыеУпаковки.ВложеныПотребительскиеУпаковки  КАК ВложеныПотребительскиеУпаковки,
		|	&СтатусУпаковок                               КАК Статус,
		|	&ДатаСтатуса                                  КАК ДатаСтатуса,
		|	&Владелец                                     КАК Владелец,
		|	&ИсходнаяЗонаТаможенногоКонтроля              КАК ИсходнаяЗонаТаможенногоКонтроля,
		|	ЛОЖЬ                                          КАК Отклонено
		|ИЗ
		|	НовыеУпаковки КАК НовыеУпаковки
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		РегистрСведений.УпаковкиМДЛП КАК ТекущиеДанныеУпаковок
		|	ПО
		|		ТекущиеДанныеУпаковок.НомерУпаковки = НовыеУпаковки.НомерУпаковки
		|		И ТекущиеДанныеУпаковок.ДокументРезерва = &ДокументРезерва
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		ВложенныеУпаковки КАК ВложенныеУпаковки
		|	ПО
		|		ВложенныеУпаковки.НомерГрупповойУпаковки = НовыеУпаковки.НомерУпаковки
		|		И НЕ ВложенныеУпаковки.Отклонено
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	&МестоДеятельности                                    КАК МестоДеятельности,
		|	&НоваяЗонаТаможенногоКонтроля                         КАК ЗонаТаможенногоКонтроля,
		|	ВложенныеУпаковки.НомерГрупповойУпаковки              КАК ДокументРезерва,
		|	ВложенныеУпаковки.НомерГрупповойУпаковки              КАК НомерГрупповойУпаковки,
		|	ВложенныеУпаковки.НомерУпаковки                       КАК НомерУпаковки,
		|	ВложенныеУпаковки.ГрупповаяУпаковка                   КАК ГрупповаяУпаковка,
		|	ТекущиеДанныеУпаковок.ВложеныПотребительскиеУпаковки  КАК ВложеныПотребительскиеУпаковки,
		|	ЗНАЧЕНИЕ(Перечисление.СтатусыУпаковокМДЛП.ВУпаковке)  КАК Статус,
		|	&ДатаСтатуса                                          КАК ДатаСтатуса,
		|	ТекущиеДанныеУпаковок.Владелец                        КАК Владелец,
		|	&ИсходнаяЗонаТаможенногоКонтроля                      КАК ИсходнаяЗонаТаможенногоКонтроля,
		|	ЛОЖЬ                                                  КАК Отклонено
		|ИЗ
		|	ВложенныеУпаковки КАК ВложенныеУпаковки
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		РегистрСведений.УпаковкиМДЛП КАК ТекущиеДанныеУпаковок
		|	ПО
		|		ТекущиеДанныеУпаковок.НомерУпаковки = ВложенныеУпаковки.НомерУпаковки
		|		И ТекущиеДанныеУпаковок.КлючУпаковки = ВложенныеУпаковки.КлючУпаковки
		|		И ТекущиеДанныеУпаковок.ДокументРезерва = &ДокументРезерва
		|ГДЕ
		|	НЕ ВложенныеУпаковки.Отклонено
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	&МестоДеятельности                                      КАК МестоДеятельности,
		|	&НоваяЗонаТаможенногоКонтроля                           КАК ЗонаТаможенногоКонтроля,
		|	ВложенныеУпаковки.НомерГрупповойУпаковки                КАК ДокументРезерва,
		|	ДанныеВложенныхУпаковок.НомерГрупповойУпаковки          КАК НомерГрупповойУпаковки,
		|	ДанныеВложенныхУпаковок.НомерУпаковки                   КАК НомерУпаковки,
		|	ДанныеВложенныхУпаковок.ГрупповаяУпаковка               КАК ГрупповаяУпаковка,
		|	ДанныеВложенныхУпаковок.ВложеныПотребительскиеУпаковки  КАК ВложеныПотребительскиеУпаковки,
		|	ЗНАЧЕНИЕ(Перечисление.СтатусыУпаковокМДЛП.ВУпаковке)    КАК Статус,
		|	&ДатаСтатуса                                            КАК ДатаСтатуса,
		|	ДанныеВложенныхУпаковок.Владелец                        КАК Владелец,
		|	&ИсходнаяЗонаТаможенногоКонтроля                        КАК ИсходнаяЗонаТаможенногоКонтроля,
		|	ЛОЖЬ                                                    КАК Отклонено
		|ИЗ
		|	ВложенныеУпаковки КАК ВложенныеУпаковки
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		РегистрСведений.УпаковкиМДЛП КАК ТекущиеДанныеУпаковок
		|	ПО
		|		ТекущиеДанныеУпаковок.НомерУпаковки = ВложенныеУпаковки.НомерУпаковки
		|		И ТекущиеДанныеУпаковок.ДокументРезерва = &ДокументРезерва
		|		И ВложенныеУпаковки.ГрупповаяУпаковка
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		РегистрСведений.УпаковкиМДЛП КАК ДанныеВложенныхУпаковок
		|	ПО
		|		ДанныеВложенныхУпаковок.ДокументРезерва = ВложенныеУпаковки.НомерУпаковки
		|ГДЕ
		|	НЕ ВложенныеУпаковки.Отклонено
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТекущиеДанныеУпаковок.МестоДеятельности                КАК МестоДеятельности,
		|	ТекущиеДанныеУпаковок.ИсходнаяЗонаТаможенногоКонтроля  КАК ЗонаТаможенногоКонтроля,
		|	НЕОПРЕДЕЛЕНО                                           КАК ДокументРезерва,
		|	НЕОПРЕДЕЛЕНО                                           КАК НомерГрупповойУпаковки,
		|	ВложенныеУпаковки.НомерУпаковки                        КАК НомерУпаковки,
		|	ВложенныеУпаковки.ГрупповаяУпаковка                    КАК ГрупповаяУпаковка,
		|	ТекущиеДанныеУпаковок.ВложеныПотребительскиеУпаковки   КАК ВложеныПотребительскиеУпаковки,
		|	ТекущиеДанныеУпаковок.ИсходныйСтатус                   КАК Статус,
		|	ТекущиеДанныеУпаковок.ДатаСтатуса                      КАК ДатаСтатуса,
		|	ТекущиеДанныеУпаковок.Владелец                         КАК Владелец,
		|	НЕОПРЕДЕЛЕНО                                           КАК ИсходнаяЗонаТаможенногоКонтроля,
		|	ИСТИНА                                                 КАК Отклонено
		|ИЗ
		|	ВложенныеУпаковки КАК ВложенныеУпаковки
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		РегистрСведений.УпаковкиМДЛП КАК ТекущиеДанныеУпаковок
		|	ПО
		|		ТекущиеДанныеУпаковок.НомерУпаковки = ВложенныеУпаковки.НомерУпаковки
		|		И ТекущиеДанныеУпаковок.КлючУпаковки = ВложенныеУпаковки.КлючУпаковки
		|		И ТекущиеДанныеУпаковок.ДокументРезерва = &ДокументРезерва
		|ГДЕ
		|	ВложенныеУпаковки.Отклонено
		|";
		
		Запрос.УстановитьПараметр("МестоДеятельности", ПараметрыОперации.МестоДеятельности);
		Запрос.УстановитьПараметр("ДатаСтатуса", Дата);
		Запрос.УстановитьПараметр("Владелец", Владелец);
		Запрос.УстановитьПараметр("ДокументРезерва", Ссылка);
		Запрос.УстановитьПараметр("СтатусУпаковок", СтатусУпаковок);
		Запрос.УстановитьПараметр("НоваяЗонаТаможенногоКонтроля", ПараметрыОперации.НоваяЗонаТаможенногоКонтроля);
		Запрос.УстановитьПараметр("ИсходнаяЗонаТаможенногоКонтроля", ПараметрыОперации.ИсходнаяЗонаТаможенногоКонтроля);
		
		Набор = РегистрыСведений.УпаковкиМДЛП.СоздатьНаборЗаписей();
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(Набор.Добавить(), Выборка);
			Если Выборка.НомерГрупповойУпаковки = Выборка.ДокументРезерва И Выборка.ГрупповаяУпаковка И Не Выборка.Отклонено Тогда
				УдалитьНабор = РегистрыСведений.УпаковкиМДЛП.СоздатьНаборЗаписей();
				УдалитьНабор.Отбор.ДокументРезерва.Установить(Выборка.НомерУпаковки);
				УдалитьНабор.Записать();
			КонецЕсли;
		КонецЦикла;
		Набор.Записать(Ложь);
		
		Набор = РегистрыСведений.УпаковкиМДЛП.СоздатьНаборЗаписей();
		Набор.Отбор.ДокументРезерва.Установить(Ссылка);
		Набор.Записать();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура РасформироватьУпаковку(ПараметрыОперации, Отказ)
	
	Если СостояниеПодтверждения = Перечисления.СостоянияПодтвержденияМДЛП.КПередаче Тогда
		
		Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	Упаковки.НомерСтроки      КАК НомерСтроки,
		|	Упаковки.НомерУпаковки    КАК НомерУпаковки,
		|	1                         КАК ДоляУпаковки,
		|	ИСТИНА                    КАК ГрупповаяУпаковка,
		|	""ТранспортныеУпаковки""  КАК ИмяТабличнойЧасти,
		|	""НомерУпаковки""         КАК ИмяПоля
		|ПОМЕСТИТЬ НомераУпаковок
		|ИЗ
		|	Документ.УведомлениеОбАгрегированииИТрансформацииУпаковокМДЛП.ТранспортныеУпаковки КАК Упаковки
		|ГДЕ
		|	Упаковки.Ссылка = &Ссылка
		|	И НЕ Упаковки.Отклонено
		|");
		
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
		Запрос.Выполнить();
		ИнтеграцияМДЛП.ДобавитьКлючиУпаковок(Запрос.МенеджерВременныхТаблиц);
		
		Статусы = Новый Массив;
		Статусы.Добавить(Перечисления.СтатусыУпаковокМДЛП.ОжидаетВыпуска);
		Статусы.Добавить(Перечисления.СтатусыУпаковокМДЛП.ВОбороте);
		Статусы.Добавить(Перечисления.СтатусыУпаковокМДЛП.ОжидаетОтгрузкиВРФ);
		Статусы.Добавить(Перечисления.СтатусыУпаковокМДЛП.МаркированаВЗТК);
		Статусы.Добавить(Перечисления.СтатусыУпаковокМДЛП.ВвезенНаТерриториюРФ);
		Статусы.Добавить(Перечисления.СтатусыУпаковокМДЛП.Задекларирована);
		Статусы.Добавить(Перечисления.СтатусыУпаковокМДЛП.ПринятаНаСкладИзЗТК);
		ПараметрыОперации.ИсходныйСтатус = Статусы;
		
		ПараметрыОперации.ИспользуетсяЗонаТаможенногоКонтроля = Ложь;
		
		ПроверкаПройдена = ИнтеграцияМДЛП.ПроверитьДоступностьУпаковок(Запрос.МенеджерВременныхТаблиц, ПараметрыОперации, Отказ);
		Если ПроверкаПройдена Тогда
			ИнтеграцияМДЛП.ЗарезервироватьУпаковки(Запрос.МенеджерВременныхТаблиц, ПараметрыОперации);
		КонецЕсли;
		
	ИначеЕсли СостояниеПодтверждения = Перечисления.СостоянияПодтвержденияМДЛП.ПринятоГИСМ Тогда
		
		Запрос = Новый Запрос("
		// Выборка зарезервированных потребительских и групповых упаковок,
		// подчененных непосредственно верхнеуровневой групповой упаковке.
		|ВЫБРАТЬ
		|	ДанныеУпаковок.НомерУпаковки                   КАК НомерУпаковки,
		|	&МестоДеятельности                             КАК МестоДеятельности,
		|	Упаковка.ЗонаТаможенногоКонтроля               КАК ЗонаТаможенногоКонтроля,
		|	НЕОПРЕДЕЛЕНО                                   КАК ДокументРезерва,
		|	Упаковка.ИсходныйСтатус                        КАК Статус,
		|	&ДатаСтатуса                                   КАК ДатаСтатуса,
		|	ДанныеУпаковок.Владелец                        КАК Владелец,
		|	""""                                           КАК НомерГрупповойУпаковки,
		|	ДанныеУпаковок.ГрупповаяУпаковка               КАК ГрупповаяУпаковка,
		|	ДанныеУпаковок.ВложеныПотребительскиеУпаковки  КАК ВложеныПотребительскиеУпаковки,
		|	Упаковка.ИсходнаяЗонаТаможенногоКонтроля       КАК ИсходнаяЗонаТаможенногоКонтроля
		|ИЗ
		|	РегистрСведений.УпаковкиМДЛП КАК ДанныеУпаковок
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		РегистрСведений.УпаковкиМДЛП КАК Упаковка
		|	ПО
		|		Упаковка.НомерУпаковки = ДанныеУпаковок.ДокументРезерва
		|		И Упаковка.НомерУпаковки = ДанныеУпаковок.НомерГрупповойУпаковки
		|		И Упаковка.ДокументРезерва = &ДокументРезерва
		|ГДЕ
		|	(НЕ &РаспаковыватьРекурсивно
		|	ИЛИ НЕ ДанныеУпаковок.ГрупповаяУпаковка)
		|	И ДанныеУпаковок.МестоДеятельности = &МестоДеятельности
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		// Выборка зарезервированных потребительских упаковок на уровнях иерархии,
		// не подчененных непосредственно верхнеуровневой групповой упаковке.
		|ВЫБРАТЬ
		|	ДанныеУпаковок.НомерУпаковки  КАК НомерУпаковки,
		|	&МестоДеятельности            КАК МестоДеятельности,
		|	Упаковка.ЗонаТаможенногоКонтроля  КАК ЗонаТаможенногоКонтроля,
		|	НЕОПРЕДЕЛЕНО                  КАК ДокументРезерва,
		|	Упаковка.ИсходныйСтатус       КАК Статус,
		|	&ДатаСтатуса                  КАК ДатаСтатуса,
		|	ДанныеУпаковок.Владелец       КАК Владелец,
		|	""""                          КАК НомерГрупповойУпаковки,
		|	ЛОЖЬ                          КАК ГрупповаяУпаковка,
		|	НЕОПРЕДЕЛЕНО                  КАК ВложеныПотребительскиеУпаковки,
		|	Упаковка.ИсходнаяЗонаТаможенногоКонтроля  КАК ИсходнаяЗонаТаможенногоКонтроля
		|ИЗ
		|	РегистрСведений.УпаковкиМДЛП КАК ДанныеУпаковок
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		РегистрСведений.УпаковкиМДЛП КАК Упаковка
		|	ПО
		|		Упаковка.НомерУпаковки = ДанныеУпаковок.ДокументРезерва
		|		И Упаковка.НомерУпаковки <> ДанныеУпаковок.НомерГрупповойУпаковки
		|		И Упаковка.ДокументРезерва = &ДокументРезерва
		|ГДЕ
		|	&РаспаковыватьРекурсивно
		|	И НЕ ДанныеУпаковок.ГрупповаяУпаковка
		|	И ДанныеУпаковок.МестоДеятельности = &МестоДеятельности
		|");
		
		Запрос.УстановитьПараметр("ДокументРезерва", Ссылка);
		Запрос.УстановитьПараметр("МестоДеятельности", ПараметрыОперации.МестоДеятельности);
		Запрос.УстановитьПараметр("ДатаСтатуса", Дата);
		Запрос.УстановитьПараметр("РаспаковыватьРекурсивно", РаспаковыватьРекурсивно);
		
		Набор = РегистрыСведений.УпаковкиМДЛП.СоздатьНаборЗаписей();
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Запрос.Текст = "
		// Получаются упаковки, вложенные в изъятые, при расформировании, групповые упаковки.
		// Им будет перезаписан ДокументРезерва (перезаписана верхнеуровневая групповая упаковка).
		|ВЫБРАТЬ
		|	ДанныеУпаковок.НомерУпаковки                   КАК НомерУпаковки,
		|	&МестоДеятельности                             КАК МестоДеятельности,
		|	Упаковка.ЗонаТаможенногоКонтроля               КАК ЗонаТаможенногоКонтроля,
		|	&НомерВерхнейУпаковки                          КАК ДокументРезерва,
		|	ДанныеУпаковок.Статус                          КАК Статус,
		|	ДанныеУпаковок.ДатаСтатуса                     КАК ДатаСтатуса,
		|	ДанныеУпаковок.Владелец                        КАК Владелец,
		|	ДанныеУпаковок.НомерГрупповойУпаковки          КАК НомерГрупповойУпаковки,
		|	ДанныеУпаковок.ГрупповаяУпаковка               КАК ГрупповаяУпаковка,
		|	ДанныеУпаковок.ВложеныПотребительскиеУпаковки  КАК ВложеныПотребительскиеУпаковки,
		|	Упаковка.ИсходнаяЗонаТаможенногоКонтроля       КАК ИсходнаяЗонаТаможенногоКонтроля
		|ИЗ
		|	РегистрСведений.УпаковкиМДЛП КАК ДанныеУпаковок
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		РегистрСведений.УпаковкиМДЛП КАК Упаковка
		|	ПО
		|		Упаковка.НомерУпаковки = ДанныеУпаковок.ДокументРезерва
		|		И Упаковка.ДокументРезерва = &ДокументРезерва
		|ГДЕ
		|	ДанныеУпаковок.НомерГрупповойУпаковки В (&НомераУпаковок)
		|	И ДанныеУпаковок.МестоДеятельности = &МестоДеятельности
		|";
		Пока Выборка.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(Набор.Добавить(), Выборка);
			Если Не РаспаковыватьРекурсивно И Выборка.ГрупповаяУпаковка Тогда
				ВложенныеУпаковки = ИнтеграцияМДЛП.ПолучитьВложенныеУпаковки(Выборка.НомерУпаковки, ПараметрыОперации.МестоДеятельности);
				ВложенныеУпаковки.Добавить(Выборка.НомерУпаковки);
				Запрос.УстановитьПараметр("НомерВерхнейУпаковки", Выборка.НомерУпаковки);
				Запрос.УстановитьПараметр("НомераУпаковок", ВложенныеУпаковки);
				ВыборкаВложенныеУпаковки = Запрос.Выполнить().Выбрать();
				Пока ВыборкаВложенныеУпаковки.Следующий() Цикл
					ЗаполнитьЗначенияСвойств(Набор.Добавить(), ВыборкаВложенныеУпаковки);
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
		Набор.Записать(Ложь);
		
		// Новые записи изъятых, при расформировании, упаковок были добавлены в регистр,
		// но старые записи, в которых упаковки еще находятся в транспортной упаковке, еще не были удалены.
		// Для того чтобы удалить старые записи перезаписываем набор с отбором по верхнеуровневой расформированной упаковке, без заполнения.
		Если Выборка.Количество() > 0 Тогда
			Запрос.Текст = "
			|ВЫБРАТЬ
			|	ДанныеУпаковок.НомерУпаковки КАК ДокументРезерва
			|ИЗ
			|	РегистрСведений.УпаковкиМДЛП КАК ДанныеУпаковок
			|ГДЕ
			|	ДанныеУпаковок.МестоДеятельности = &МестоДеятельности
			|	И ДанныеУпаковок.ДокументРезерва = &ДокументРезерва
			|";
			Результат = Запрос.Выполнить();
			Выборка = Результат.Выбрать();
			Пока Выборка.Следующий() Цикл
				Набор = РегистрыСведений.УпаковкиМДЛП.СоздатьНаборЗаписей();
				Набор.Отбор.ДокументРезерва.Установить(Выборка.ДокументРезерва);
				Набор.Записать();
			КонецЦикла;
		КонецЕсли;
		
		Набор = РегистрыСведений.УпаковкиМДЛП.СоздатьНаборЗаписей();
		Набор.Отбор.ДокументРезерва.Установить(Ссылка);
		Набор.Записать();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ВключитьУпаковки(ПараметрыОперации, Отказ)
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	НовыеУпаковки.Ссылка               КАК Ссылка,
	|	НовыеУпаковки.НомерСтроки          КАК НомерСтроки,
	|	НовыеУпаковки.НомерУпаковки        КАК НомерУпаковки,
	|	Новыеупаковки.ИдентификаторСтроки  КАК ИдентификаторСтроки
	|ПОМЕСТИТЬ НовыеУпаковки
	|ИЗ
	|	Документ.УведомлениеОбАгрегированииИТрансформацииУпаковокМДЛП.ГруппировочныеУпаковки КАК НовыеУпаковки
	|ГДЕ
	|	НовыеУпаковки.Ссылка = &Ссылка
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныеУпаковки.НомерСтроки  КАК НомерСтроки,
	|	Новыеупаковки.НомерУпаковки    КАК НомерГрупповойУпаковки,
	|	ВложенныеУпаковки.НомерКиЗ     КАК НомерУпаковки,
	|	""НомераУпаковок""             КАК ИмяТабличнойЧасти,
	|	""НомерКиЗ""                   КАК ИмяПоля,
	|	ЛОЖЬ                           КАК ГрупповаяУпаковка
	|ПОМЕСТИТЬ ВложенныеУпаковки
	|ИЗ
	|	Документ.УведомлениеОбАгрегированииИТрансформацииУпаковокМДЛП.НомераУпаковок КАК ВложенныеУпаковки
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.УведомлениеОбАгрегированииИТрансформацииУпаковокМДЛП.Товары КАК Товары
	|	ПО
	|		Товары.Ссылка = ВложенныеУпаковки.Ссылка
	|		И Товары.ИдентификаторСтроки = ВложенныеУпаковки.ИдентификаторСтроки
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		НовыеУпаковки КАК НовыеУпаковки
	|	ПО
	|		НовыеУпаковки.Ссылка = Товары.Ссылка
	|		И НовыеУпаковки.ИдентификаторСтроки = Товары.ИдентификаторГрупповойУпаковки
	|ГДЕ
	|	ВложенныеУпаковки.Ссылка = &Ссылка
	|	И НЕ ВложенныеУпаковки.Отклонено
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВложенныеУпаковки.НомерСтроки    КАК НомерСтроки,
	|	НовыеУпаковки.НомерУпаковки      КАК НомерГрупповойУпаковки,
	|	ВложенныеУпаковки.НомерУпаковки  КАК НомерУпаковки,
	|	""ТранспортныеУпаковки""         КАК ИмяТабличнойЧасти,
	|	""НомерУпаковки""                КАК ИмяПоля,
	|	ИСТИНА                           КАК ГрупповаяУпаковка
	|ИЗ
	|	Документ.УведомлениеОбАгрегированииИТрансформацииУпаковокМДЛП.ТранспортныеУпаковки КАК ВложенныеУпаковки
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		НовыеУпаковки КАК НовыеУпаковки
	|	ПО
	|		НовыеУпаковки.Ссылка = ВложенныеУпаковки.Ссылка
	|		И НовыеУпаковки.ИдентификаторСтроки = ВложенныеУпаковки.ИдентификаторГрупповойУпаковки
	|ГДЕ
	|	ВложенныеУпаковки.Ссылка = &Ссылка
	|	И НЕ ВложенныеУпаковки.Отклонено
	|");
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
	ИнтеграцияМДЛП.ДобавитьКлючиУпаковок(Запрос.МенеджерВременныхТаблиц, "НовыеУпаковки");
	ИнтеграцияМДЛП.ДобавитьКлючиУпаковок(Запрос.МенеджерВременныхТаблиц, "ВложенныеУпаковки");
	
	Если СостояниеПодтверждения = Перечисления.СостоянияПодтвержденияМДЛП.КПередаче Тогда
		
		Запрос.Текст = "
		|ВЫБРАТЬ
		|	НовыеУпаковки.НомерСтроки    КАК НомерСтроки,
		|	НовыеУпаковки.НомерУпаковки  КАК НомерУпаковки,
		|	НовыеУпаковки.КлючУпаковки   КАК КлючУпаковки,
		|	1                            КАК ДоляУпаковки,
		|	ИСТИНА                       КАК ГрупповаяУпаковка,
		|	""ГруппировочныеУпаковки""   КАК ИмяТабличнойЧасти,
		|	""НомерУпаковки""            КАК ИмяПоля
		|ПОМЕСТИТЬ НомераУпаковок
		|ИЗ
		|	НовыеУпаковки КАК НовыеУпаковки
		|";
		Запрос.Выполнить();
		
		Статусы = Новый Массив;
		Статусы.Добавить(Перечисления.СтатусыУпаковокМДЛП.ОжидаетВыпуска);
		Статусы.Добавить(Перечисления.СтатусыУпаковокМДЛП.ОжидаетОтгрузкиВРФ);
		Статусы.Добавить(Перечисления.СтатусыУпаковокМДЛП.МаркированаВЗТК);
		Статусы.Добавить(Перечисления.СтатусыУпаковокМДЛП.ВвезенНаТерриториюРФ);
		Статусы.Добавить(Перечисления.СтатусыУпаковокМДЛП.Задекларирована);
		Статусы.Добавить(Перечисления.СтатусыУпаковокМДЛП.ПринятаНаСкладИзЗТК);
		Статусы.Добавить(Перечисления.СтатусыУпаковокМДЛП.ВОбороте);
		ПараметрыОперации.ИсходныйСтатус = Статусы;
		
		ПроверкаПройдена = ИнтеграцияМДЛП.ПроверитьДоступностьУпаковок(Запрос.МенеджерВременныхТаблиц, ПараметрыОперации, Отказ);
		
		Запрос.Текст = "
		|УНИЧТОЖИТЬ НомераУпаковок
		|;
		|
		|/////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВложенныеУпаковки.НомерСтроки        КАК НомерСтроки,
		|	ВложенныеУпаковки.НомерУпаковки      КАК НомерУпаковки,
		|	ВложенныеУпаковки.КлючУпаковки       КАК КлючУпаковки,
		|	1                                    КАК ДоляУпаковки,
		|	ВложенныеУпаковки.ГрупповаяУпаковка  КАК ГрупповаяУпаковка,
		|	ВложенныеУпаковки.ИмяТабличнойЧасти  КАК ИмяТабличнойЧасти,
		|	ВложенныеУпаковки.ИмяПоля            КАК ИмяПоля
		|ПОМЕСТИТЬ НомераУпаковок
		|ИЗ
		|	ВложенныеУпаковки КАК ВложенныеУпаковки
		|";
		
		Запрос.Выполнить();
		
		Статусы = Новый Массив;
		Статусы.Добавить(Перечисления.СтатусыУпаковокМДЛП.ОжидаетВыпуска);
		Статусы.Добавить(Перечисления.СтатусыУпаковокМДЛП.ОжидаетОтгрузкиВРФ);
		Статусы.Добавить(Перечисления.СтатусыУпаковокМДЛП.МаркированаВЗТК);
		Статусы.Добавить(Перечисления.СтатусыУпаковокМДЛП.ВвезенНаТерриториюРФ);
		Статусы.Добавить(Перечисления.СтатусыУпаковокМДЛП.Задекларирована);
		Статусы.Добавить(Перечисления.СтатусыУпаковокМДЛП.ПринятаНаСкладИзЗТК);
		Статусы.Добавить(Перечисления.СтатусыУпаковокМДЛП.ВОбороте);
		ПараметрыОперации.ИсходныйСтатус = Статусы;
		
		ПроверкаПройдена = ПроверкаПройдена И ИнтеграцияМДЛП.ПроверитьДоступностьУпаковок(Запрос.МенеджерВременныхТаблиц, ПараметрыОперации, Отказ);
		
		Если ПроверкаПройдена Тогда
			Запрос.Текст = "
			|УНИЧТОЖИТЬ НомераУпаковок
			|;
			|
			|/////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	НовыеУпаковки.НомерУпаковки  КАК НомерУпаковки,
			|	НовыеУпаковки.КлючУпаковки   КАК КлючУпаковки,
			|	1                            КАК ДоляУпаковки,
			|	ИСТИНА                       КАК ГрупповаяУпаковка
			|ПОМЕСТИТЬ НомераУпаковок
			|ИЗ
			|	НовыеУпаковки КАК НовыеУпаковки
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ВложенныеУпаковки.НомерУпаковки      КАК НомерУпаковки,
			|	ВложенныеУпаковки.КлючУпаковки       КАК КлючУпаковки,
			|	1                                    КАК ДоляУпаковки,
			|	ВложенныеУпаковки.ГрупповаяУпаковка  КАК ГрупповаяУпаковка
			|ИЗ
			|	ВложенныеУпаковки КАК ВложенныеУпаковки
			|";
			Запрос.Выполнить();
			
			ИнтеграцияМДЛП.ЗарезервироватьУпаковки(Запрос.МенеджерВременныхТаблиц, ПараметрыОперации);
		КонецЕсли;
		
	ИначеЕсли СостояниеПодтверждения = Перечисления.СостоянияПодтвержденияМДЛП.ПринятоГИСМ Тогда
		
		Запрос.Текст = "
		|ВЫБРАТЬ
		|	&МестоДеятельности                                    КАК МестоДеятельности,
		|	&НоваяЗонаТаможенногоКонтроля                         КАК ЗонаТаможенногоКонтроля,
		|	НЕОПРЕДЕЛЕНО                                          КАК ДокументРезерва,
		|	""""                                                  КАК НомерГрупповойУпаковки,
		|	НовыеУпаковки.НомерУпаковки                           КАК НомерУпаковки,
		|	ИСТИНА                                                КАК ГрупповаяУпаковка,
		|	ТекущиеДанныеУпаковок.ВложеныПотребительскиеУпаковки  КАК ВложеныПотребительскиеУпаковки,
		|	ТекущиеДанныеУпаковок.ИсходныйСтатус                  КАК Статус,
		|	&ДатаСтатуса                                          КАК ДатаСтатуса,
		|	&Владелец                                             КАК Владелец,
		|	&ИсходнаяЗонаТаможенногоКонтроля                      КАК ИсходнаяЗонаТаможенногоКонтроля
		|ИЗ
		|	НовыеУпаковки КАК НовыеУпаковки
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		РегистрСведений.УпаковкиМДЛП КАК ТекущиеДанныеУпаковок
		|	ПО
		|		ТекущиеДанныеУпаковок.НомерУпаковки = НовыеУпаковки.НомерУпаковки
		|		И ТекущиеДанныеУпаковок.ДокументРезерва = &ДокументРезерва
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	&МестоДеятельности                                    КАК МестоДеятельности,
		|	&НоваяЗонаТаможенногоКонтроля                         КАК ЗонаТаможенногоКонтроля,
		|	ВложенныеУпаковки.НомерГрупповойУпаковки              КАК ДокументРезерва,
		|	ВложенныеУпаковки.НомерГрупповойУпаковки              КАК НомерГрупповойУпаковки,
		|	ВложенныеУпаковки.НомерУпаковки                       КАК НомерУпаковки,
		|	ВложенныеУпаковки.ГрупповаяУпаковка                   КАК ГрупповаяУпаковка,
		|	ТекущиеДанныеУпаковок.ВложеныПотребительскиеУпаковки  КАК ВложеныПотребительскиеУпаковки,
		|	ЗНАЧЕНИЕ(Перечисление.СтатусыУпаковокМДЛП.ВУпаковке)  КАК Статус,
		|	&ДатаСтатуса                                          КАК ДатаСтатуса,
		|	ТекущиеДанныеУпаковок.Владелец                        КАК Владелец,
		|	&ИсходнаяЗонаТаможенногоКонтроля                      КАК ИсходнаяЗонаТаможенногоКонтроля
		|ИЗ
		|	ВложенныеУпаковки КАК ВложенныеУпаковки
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		РегистрСведений.УпаковкиМДЛП КАК ТекущиеДанныеУпаковок
		|	ПО
		|		ТекущиеДанныеУпаковок.НомерУпаковки = ВложенныеУпаковки.НомерУпаковки
		|		И ТекущиеДанныеУпаковок.КлючУпаковки = ВложенныеУпаковки.КлючУпаковки
		|		И ТекущиеДанныеУпаковок.ДокументРезерва = &ДокументРезерва
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	&МестоДеятельности                                      КАК МестоДеятельности,
		|	&НоваяЗонаТаможенногоКонтроля                           КАК ЗонаТаможенногоКонтроля,
		|	ВложенныеУпаковки.НомерГрупповойУпаковки                КАК ДокументРезерва,
		|	ДанныеВложенныхУпаковок.НомерГрупповойУпаковки          КАК НомерГрупповойУпаковки,
		|	ДанныеВложенныхУпаковок.НомерУпаковки                   КАК НомерУпаковки,
		|	ДанныеВложенныхУпаковок.ГрупповаяУпаковка               КАК ГрупповаяУпаковка,
		|	ДанныеВложенныхУпаковок.ВложеныПотребительскиеУпаковки  КАК ВложеныПотребительскиеУпаковки,
		|	ЗНАЧЕНИЕ(Перечисление.СтатусыУпаковокМДЛП.ВУпаковке)    КАК Статус,
		|	&ДатаСтатуса                                            КАК ДатаСтатуса,
		|	ДанныеВложенныхУпаковок.Владелец                        КАК Владелец,
		|	&ИсходнаяЗонаТаможенногоКонтроля                        КАК ИсходнаяЗонаТаможенногоКонтроля
		|ИЗ
		|	ВложенныеУпаковки КАК ВложенныеУпаковки
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		РегистрСведений.УпаковкиМДЛП КАК ТекущиеДанныеУпаковок
		|	ПО
		|		ТекущиеДанныеУпаковок.НомерУпаковки = ВложенныеУпаковки.НомерУпаковки
		|		И ТекущиеДанныеУпаковок.ДокументРезерва = &ДокументРезерва
		|		И ВложенныеУпаковки.ГрупповаяУпаковка
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		РегистрСведений.УпаковкиМДЛП КАК ДанныеВложенныхУпаковок
		|	ПО
		|		ДанныеВложенныхУпаковок.ДокументРезерва = ВложенныеУпаковки.НомерУпаковки
		|";
		
		Запрос.УстановитьПараметр("МестоДеятельности", ПараметрыОперации.МестоДеятельности);
		Запрос.УстановитьПараметр("ДатаСтатуса", Дата);
		Запрос.УстановитьПараметр("Владелец", Владелец);
		Запрос.УстановитьПараметр("ДокументРезерва", Ссылка);
		Запрос.УстановитьПараметр("НоваяЗонаТаможенногоКонтроля", ПараметрыОперации.НоваяЗонаТаможенногоКонтроля);
		Запрос.УстановитьПараметр("ИсходнаяЗонаТаможенногоКонтроля", ПараметрыОперации.ИсходнаяЗонаТаможенногоКонтроля);
		
		Набор = РегистрыСведений.УпаковкиМДЛП.СоздатьНаборЗаписей();
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(Набор.Добавить(), Выборка);
			Если Выборка.НомерГрупповойУпаковки = Выборка.ДокументРезерва И Выборка.ГрупповаяУпаковка Тогда
				УдалитьНабор = РегистрыСведений.УпаковкиМДЛП.СоздатьНаборЗаписей();
				УдалитьНабор.Отбор.ДокументРезерва.Установить(Выборка.НомерУпаковки);
				УдалитьНабор.Записать();
			КонецЕсли;
		КонецЦикла;
		Набор.Записать(Ложь);
		
		Набор = РегистрыСведений.УпаковкиМДЛП.СоздатьНаборЗаписей();
		Набор.Отбор.ДокументРезерва.Установить(Ссылка);
		Набор.Записать();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ИзъятьУпаковки(ПараметрыОперации, Отказ)
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	Упаковки.НомерСтроки    КАК НомерСтроки,
	|	Упаковки.НомерКиЗ       КАК НомерУпаковки,
	|	1                       КАК ДоляУпаковки,
	|	ЛОЖЬ                    КАК ГрупповаяУпаковка,
	|	""НомераУпаковок""      КАК ИмяТабличнойЧасти,
	|	""НомерКиЗ""            КАК ИмяПоля
	|ПОМЕСТИТЬ ИзымаемыеУпаковки
	|ИЗ
	|	Документ.УведомлениеОбАгрегированииИТрансформацииУпаковокМДЛП.НомераУпаковок КАК Упаковки
	|ГДЕ
	|	Упаковки.Ссылка = &Ссылка
	|	И НЕ Упаковки.Отклонено
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Упаковки.НомерСтроки      КАК НомерСтроки,
	|	Упаковки.НомерУпаковки    КАК НомерУпаковки,
	|	1                         КАК ДоляУпаковки,
	|	ИСТИНА                    КАК ГрупповаяУпаковка,
	|	""ТранспортныеУпаковки""  КАК ИмяТабличнойЧасти,
	|	""НомерУпаковки""         КАК ИмяПоля
	|ИЗ
	|	Документ.УведомлениеОбАгрегированииИТрансформацииУпаковокМДЛП.ТранспортныеУпаковки КАК Упаковки
	|ГДЕ
	|	Упаковки.Ссылка = &Ссылка
	|	И НЕ Упаковки.Отклонено
	|");
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
	Запрос.Выполнить();
	ИнтеграцияМДЛП.ДобавитьКлючиУпаковок(Запрос.МенеджерВременныхТаблиц, "ИзымаемыеУпаковки");
	
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	0                                КАК НомерСтроки,
	|	ГрупповыеУпаковки.НомерУпаковки  КАК НомерУпаковки,
	|	ГрупповыеУпаковки.КлючУпаковки   КАК КлючУпаковки,
	|	1                                КАК ДоляУпаковки,
	|	ИСТИНА                           КАК ГрупповаяУпаковка,
	|	""""                             КАК ИмяТабличнойЧасти,
	|	""""                             КАК ИмяПоля
	|ПОМЕСТИТЬ ГрупповыеУпаковки
	|ИЗ
	|	РегистрСведений.УпаковкиМДЛП КАК ГрупповыеУпаковки
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.УпаковкиМДЛП КАК ДанныеУпаковок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			ИзымаемыеУпаковки КАК ИзымаемыеУпаковки
	|		ПО
	|			ДанныеУпаковок.НомерУпаковки = ИзымаемыеУпаковки.НомерУпаковки
	|			И ДанныеУпаковок.КлючУпаковки = ИзымаемыеУпаковки.КлючУпаковки
	|	ПО
	|		ГрупповыеУпаковки.НомерУпаковки = ДанныеУпаковок.ДокументРезерва
	|";
	
	Запрос.Выполнить();
	
	Если СостояниеПодтверждения = Перечисления.СостоянияПодтвержденияМДЛП.КПередаче Тогда
		
		Запрос.Текст = "
		|ВЫБРАТЬ
		|	Упаковки.НомерСтроки        КАК НомерСтроки,
		|	Упаковки.НомерУпаковки      КАК НомерУпаковки,
		|	Упаковки.КлючУпаковки       КАК КлючУпаковки,
		|	Упаковки.ДоляУпаковки       КАК ДоляУпаковки,
		|	Упаковки.ГрупповаяУпаковка  КАК ГрупповаяУпаковка,
		|	Упаковки.ИмяТабличнойЧасти  КАК ИмяТабличнойЧасти,
		|	Упаковки.ИмяПоля            КАК ИмяПоля
		|ПОМЕСТИТЬ НомераУпаковок
		|ИЗ
		|	ИзымаемыеУпаковки КАК Упаковки
		|";
		Запрос.Выполнить();
		
		ПараметрыОперации.ИсходныйСтатус = Перечисления.СтатусыУпаковокМДЛП.ВУпаковке;
		
		ПараметрыОперации.ИспользуетсяЗонаТаможенногоКонтроля = Ложь;
		
		ПроверкаПройдена = ИнтеграцияМДЛП.ПроверитьДоступностьУпаковок(Запрос.МенеджерВременныхТаблиц, ПараметрыОперации, Отказ);
		
		Запрос.Текст = "
		|УНИЧТОЖИТЬ НомераУпаковок
		|;
		|
		|/////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Упаковки.НомерСтроки        КАК НомерСтроки,
		|	Упаковки.НомерУпаковки      КАК НомерУпаковки,
		|	Упаковки.КлючУпаковки       КАК КлючУпаковки,
		|	Упаковки.ДоляУпаковки       КАК ДоляУпаковки,
		|	Упаковки.ГрупповаяУпаковка  КАК ГрупповаяУпаковка,
		|	Упаковки.ИмяТабличнойЧасти  КАК ИмяТабличнойЧасти,
		|	Упаковки.ИмяПоля            КАК ИмяПоля
		|ПОМЕСТИТЬ НомераУпаковок
		|ИЗ
		|	ГрупповыеУпаковки КАК Упаковки
		|";
		
		Запрос.Выполнить();
		
		Статусы = Новый Массив;
		Статусы.Добавить(Перечисления.СтатусыУпаковокМДЛП.ОжидаетВыпуска);
		Статусы.Добавить(Перечисления.СтатусыУпаковокМДЛП.ВОбороте);
		Статусы.Добавить(Перечисления.СтатусыУпаковокМДЛП.ОжидаетОтгрузкиВРФ);
		Статусы.Добавить(Перечисления.СтатусыУпаковокМДЛП.МаркированаВЗТК);
		Статусы.Добавить(Перечисления.СтатусыУпаковокМДЛП.ВвезенНаТерриториюРФ);
		Статусы.Добавить(Перечисления.СтатусыУпаковокМДЛП.Задекларирована);
		Статусы.Добавить(Перечисления.СтатусыУпаковокМДЛП.ПринятаНаСкладИзЗТК);
		ПараметрыОперации.ИсходныйСтатус = Статусы;
		
		ПараметрыОперации.ИспользуетсяЗонаТаможенногоКонтроля = Ложь;
		
		ПроверкаПройдена = ПроверкаПройдена И ИнтеграцияМДЛП.ПроверитьДоступностьУпаковок(Запрос.МенеджерВременныхТаблиц, ПараметрыОперации, Отказ);
		
		Если ПроверкаПройдена Тогда
			ИнтеграцияМДЛП.ЗарезервироватьУпаковки(Запрос.МенеджерВременныхТаблиц, ПараметрыОперации);
		КонецЕсли;
		
	ИначеЕсли СостояниеПодтверждения = Перечисления.СостоянияПодтвержденияМДЛП.ПринятоГИСМ Тогда
		
		Запрос.Текст = "
		|ВЫБРАТЬ
		|	ДанныеУпаковок.НомерУпаковки                   КАК НомерУпаковки,
		|	&МестоДеятельности                             КАК МестоДеятельности,
		|	ДанныеУпаковок.ЗонаТаможенногоКонтроля         КАК ЗонаТаможенногоКонтроля,
		|	НЕОПРЕДЕЛЕНО                                   КАК ДокументРезерва,
		|	ДанныеУпаковок.ИсходныйСтатус                  КАК Статус,
		|	ДанныеУпаковок.ДатаСтатуса                     КАК ДатаСтатуса,
		|	ДанныеУпаковок.Владелец                        КАК Владелец,
		|	""""                                           КАК НомерГрупповойУпаковки,
		|	ДанныеУпаковок.ГрупповаяУпаковка               КАК ГрупповаяУпаковка,
		|	ДанныеУпаковок.ВложеныПотребительскиеУпаковки  КАК ВложеныПотребительскиеУпаковки,
		|	ДанныеУпаковок.ИсходнаяЗонаТаможенногоКонтроля КАК ИсходнаяЗонаТаможенногоКонтроля
		|ПОМЕСТИТЬ ДанныеГрупповыхУпаковок
		|ИЗ
		|	РегистрСведений.УпаковкиМДЛП КАК ДанныеУпаковок
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		ГрупповыеУпаковки КАК ГрупповыеУпаковки
		|	ПО
		|		ГрупповыеУпаковки.НомерУпаковки = ДанныеУпаковок.НомерУпаковки
		|		И ГрупповыеУпаковки.КлючУпаковки = ДанныеУпаковок.КлючУпаковки
		|ГДЕ
		|	ДанныеУпаковок.ДокументРезерва = &ДокументРезерва
		|;
		|
		|/////////////////////////////////////////////////////////////////////////////
		// Получаются упаковки (и потребительские и групповые), которые будут записаны
		// без указания значений НомерГрупповойУпаковки и ДокументРезерва, т.к. они изъяты.
		|ВЫБРАТЬ
		|	ИСТИНА                                         КАК ИзъятаяУпаковка,
		|	ДанныеГрупповыхУпаковок.НомерУпаковки          КАК ТекущаяВерхняяУпаковка,
		|	ДанныеУпаковок.НомерУпаковки                   КАК НомерУпаковки,
		|	&МестоДеятельности                             КАК МестоДеятельности,
		|	ДанныеГрупповыхУпаковок.ЗонаТаможенногоКонтроля  КАК ЗонаТаможенногоКонтроля,
		|	НЕОПРЕДЕЛЕНО                                   КАК ДокументРезерва,
		|	ДанныеГрупповыхУпаковок.Статус                 КАК Статус,
		|	&ДатаСтатуса                                   КАК ДатаСтатуса,
		|	ДанныеУпаковок.Владелец                        КАК Владелец,
		|	""""                                           КАК НомерГрупповойУпаковки,
		|	ДанныеУпаковок.ГрупповаяУпаковка               КАК ГрупповаяУпаковка,
		|	ДанныеУпаковок.ВложеныПотребительскиеУпаковки  КАК ВложеныПотребительскиеУпаковки,
		|	ДанныеГрупповыхУпаковок.ИсходнаяЗонаТаможенногоКонтроля  КАК ИсходнаяЗонаТаможенногоКонтроля
		|ИЗ
		|	ИзымаемыеУпаковки КАК ИзымаемыеУпаковки
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		РегистрСведений.УпаковкиМДЛП КАК ДанныеУпаковок
		|	ПО
		|		ДанныеУпаковок.НомерУпаковки = ИзымаемыеУпаковки.НомерУпаковки
		|		И ДанныеУпаковок.КлючУпаковки = ИзымаемыеУпаковки.КлючУпаковки
		|		И ДанныеУпаковок.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыУпаковокМДЛП.ВУпаковке)
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		ДанныеГрупповыхУпаковок КАК ДанныеГрупповыхУпаковок
		|	ПО
		|		ДанныеГрупповыхУпаковок.НомерУпаковки = ДанныеУпаковок.ДокументРезерва
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		// Получаются верхнеуровневые упаковки, которые нужно добавить в набор записей, чтоб не удалить при записи.
		|ВЫБРАТЬ
		|	Ложь                                           КАК ИзъятаяУпаковка,
		|	""""                                           КАК ТекущаяВерхняяУпаковка,
		|	ДанныеУпаковок.НомерУпаковки                   КАК НомерУпаковки,
		|	ДанныеУпаковок.МестоДеятельности               КАК МестоДеятельности,
		|	ДанныеУпаковок.ЗонаТаможенногоКонтроля         КАК ЗонаТаможенногоКонтроля,
		|	НЕОПРЕДЕЛЕНО                                   КАК ДокументРезерва,
		|	ДанныеУпаковок.Статус                          КАК Статус,
		|	ДанныеУпаковок.ДатаСтатуса                     КАК ДатаСтатуса,
		|	ДанныеУпаковок.Владелец                        КАК Владелец,
		|	ДанныеУпаковок.НомерГрупповойУпаковки          КАК НомерГрупповойУпаковки,
		|	ДанныеУпаковок.ГрупповаяУпаковка               КАК ГрупповаяУпаковка,
		|	ДанныеУпаковок.ВложеныПотребительскиеУпаковки  КАК ВложеныПотребительскиеУпаковки,
		|	ДанныеУпаковок.ИсходнаяЗонаТаможенногоКонтроля КАК ИсходнаяЗонаТаможенногоКонтроля
		|ИЗ
		|	ДанныеГрупповыхУпаковок КАК ДанныеУпаковок
		|";
		
		Запрос.УстановитьПараметр("ДокументРезерва", Ссылка);
		Запрос.УстановитьПараметр("МестоДеятельности", ПараметрыОперации.МестоДеятельности);
		Запрос.УстановитьПараметр("ДатаСтатуса", Дата);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Запрос.Текст = "
		// Получаются упаковки, вложенные в изъятые групповые упаковки.
		// Им будет перезаписан ДокументРезерва (перезаписана верхнеуровневая групповая упаковка).
		|ВЫБРАТЬ
		|	ДанныеУпаковок.НомерУпаковки                   КАК НомерУпаковки,
		|	ДанныеУпаковок.МестоДеятельности               КАК МестоДеятельности,
		|	ДанныеУпаковок.ЗонаТаможенногоКонтроля         КАК ЗонаТаможенногоКонтроля,
		|	&НомерВерхнейУпаковки                          КАК ДокументРезерва,
		|	ДанныеУпаковок.Статус                          КАК Статус,
		|	ДанныеУпаковок.ДатаСтатуса                     КАК ДатаСтатуса,
		|	ДанныеУпаковок.Владелец                        КАК Владелец,
		|	ДанныеУпаковок.НомерГрупповойУпаковки          КАК НомерГрупповойУпаковки,
		|	ДанныеУпаковок.ГрупповаяУпаковка               КАК ГрупповаяУпаковка,
		|	ДанныеУпаковок.ВложеныПотребительскиеУпаковки  КАК ВложеныПотребительскиеУпаковки,
		|	ДанныеУпаковок.ИсходнаяЗонаТаможенногоКонтроля КАК ИсходнаяЗонаТаможенногоКонтроля
		|ИЗ
		|	РегистрСведений.УпаковкиМДЛП КАК ДанныеУпаковок
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		ДанныеГрупповыхУпаковок КАК ДанныеГрупповыхУпаковок
		|	ПО
		|		ДанныеГрупповыхУпаковок.НомерУпаковки = ДанныеУпаковок.ДокументРезерва
		|ГДЕ
		|	ДанныеУпаковок.НомерГрупповойУпаковки В (&НомераУпаковок)
		|	И ДанныеУпаковок.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыУпаковокМДЛП.ВУпаковке)
		|	И ДанныеУпаковок.МестоДеятельности = &МестоДеятельности
		|";
		
		ИзъятыеУпаковки = Новый ТаблицаЗначений;
		ИзъятыеУпаковки.Колонки.Добавить("НомерУпаковки", ОбщегоНазначения.ОписаниеТипаСтрока(27));
		ИзъятыеУпаковки.Колонки.Добавить("КлючУпаковки", ОбщегоНазначения.ОписаниеТипаСтрока(100));
		Набор = РегистрыСведений.УпаковкиМДЛП.СоздатьНаборЗаписей();
		Пока Выборка.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(Набор.Добавить(), Выборка);
			Если Выборка.ИзъятаяУпаковка Тогда
				ИзъятаяУпаковка = ИзъятыеУпаковки.Добавить();
				ИзъятаяУпаковка.НомерУпаковки = Выборка.НомерУпаковки;
				ИзъятаяУпаковка.КлючУпаковки = ИнтеграцияМДЛПКлиентСервер.ПолучитьКлючУпаковки(Выборка.НомерУпаковки);
				Если Выборка.ГрупповаяУпаковка Тогда
					ВложенныеУпаковки = ИнтеграцияМДЛП.ПолучитьВложенныеУпаковки(Выборка.НомерУпаковки, Выборка.МестоДеятельности);
					ВложенныеУпаковки.Добавить(Выборка.НомерУпаковки);
					Запрос.УстановитьПараметр("НомерВерхнейУпаковки", Выборка.НомерУпаковки);
					Запрос.УстановитьПараметр("НомераУпаковок", ВложенныеУпаковки);
					ВыборкаВложенныеУпаковки = Запрос.Выполнить().Выбрать();
					Пока ВыборкаВложенныеУпаковки.Следующий() Цикл
						ЗаполнитьЗначенияСвойств(Набор.Добавить(), ВыборкаВложенныеУпаковки);
						ИзъятаяУпаковка = ИзъятыеУпаковки.Добавить();
						ИзъятаяУпаковка.НомерУпаковки = ВыборкаВложенныеУпаковки.НомерУпаковки;
						ИзъятаяУпаковка.КлючУпаковки = ИнтеграцияМДЛПКлиентСервер.ПолучитьКлючУпаковки(ВыборкаВложенныеУпаковки.НомерУпаковки);
					КонецЦикла;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		Набор.Записать(Ложь);
		
		// Новые записи изъятых упаковок были добавлены в регистр,
		// но старые записи, в которых упаковки еще находятся в транспортной упаковке, еще не были удалены.
		// Для того чтобы удалить старые записи перезаписываем набор только с теми записями,
		// у которых упаковки должны находится в транспортной упаковке (т.е. те, которые не были изъяты).
		Если ИзъятыеУпаковки.Количество() > 0 Тогда
			Запрос.Текст = "
			|ВЫБРАТЬ
			|	ИзъятыеУпаковки.НомерУпаковки  КАК НомерУпаковки,
			|	ИзъятыеУпаковки.КлючУпаковки   КАК КлючУпаковки
			|ПОМЕСТИТЬ ИзъятыеУпаковки
			|ИЗ
			|	&ИзъятыеУпаковки КАК ИзъятыеУпаковки
			|;
			|
			|////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ДанныеУпаковок.НомерУпаковки                   КАК НомерУпаковки,
			|	ДанныеУпаковок.МестоДеятельности               КАК МестоДеятельности,
			|	ДанныеУпаковок.ЗонаТаможенногоКонтроля         КАК ЗонаТаможенногоКонтроля,
			|	ДанныеУпаковок.ДокументРезерва                 КАК ДокументРезерва,
			|	ДанныеУпаковок.Статус                          КАК Статус,
			|	ДанныеУпаковок.ДатаСтатуса                     КАК ДатаСтатуса,
			|	ДанныеУпаковок.Владелец                        КАК Владелец,
			|	ДанныеУпаковок.НомерГрупповойУпаковки          КАК НомерГрупповойУпаковки,
			|	ДанныеУпаковок.ГрупповаяУпаковка               КАК ГрупповаяУпаковка,
			|	ДанныеУпаковок.ВложеныПотребительскиеУпаковки  КАК ВложеныПотребительскиеУпаковки,
			|	ДанныеУпаковок.ИсходнаяЗонаТаможенногоКонтроля КАК ИсходнаяЗонаТаможенногоКонтроля,
			|	ИзъятыеУпаковки.НомерУпаковки ЕСТЬ NULL        КАК УпаковкаНеИзъята
			|ИЗ
			|	РегистрСведений.УпаковкиМДЛП КАК ДанныеУпаковок
			|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
			|		ДанныеГрупповыхУпаковок КАК ДанныеГрупповыхУпаковок
			|	ПО
			|		ДанныеГрупповыхУпаковок.НомерУпаковки = ДанныеУпаковок.ДокументРезерва
			|	ЛЕВОЕ СОЕДИНЕНИЕ
			|		ИзъятыеУпаковки КАК ИзъятыеУпаковки
			|	ПО
			|		ИзъятыеУпаковки.НомерУпаковки = ДанныеУпаковок.НомерУпаковки
			|		И ИзъятыеУпаковки.КлючУпаковки = ДанныеУпаковок.КлючУпаковки
			|ГДЕ
			|	ДанныеУпаковок.МестоДеятельности = &МестоДеятельности
			|ИТОГИ ПО
			|	ДокументРезерва
			|";
			Запрос.УстановитьПараметр("ИзъятыеУпаковки", ИзъятыеУпаковки);
			Результат = Запрос.Выполнить();
			Выборка = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока Выборка.Следующий() Цикл
				Набор = РегистрыСведений.УпаковкиМДЛП.СоздатьНаборЗаписей();
				Набор.Отбор.ДокументРезерва.Установить(Выборка.ДокументРезерва);
				ВыборкаВложенныхУпаковок = Выборка.Выбрать();
				Пока ВыборкаВложенныхУпаковок.Следующий() Цикл
					Если ВыборкаВложенныхУпаковок.УпаковкаНеИзъята Тогда
						// Записи, не попавшие в набор будут удалены.
						ЗаполнитьЗначенияСвойств(Набор.Добавить(), ВыборкаВложенныхУпаковок);
					КонецЕсли;
				КонецЦикла;
				Набор.Записать();
			КонецЦикла;
		КонецЕсли;
		
		Набор = РегистрыСведений.УпаковкиМДЛП.СоздатьНаборЗаписей();
		Набор.Отбор.ДокументРезерва.Установить(Ссылка);
		Набор.Записать();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ВключитьВЕдиничнуюУпаковку(ПараметрыОперации, Отказ)
	
	Если СостояниеПодтверждения = Перечисления.СостоянияПодтвержденияМДЛП.КПередаче Тогда
		
		Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	0                       КАК НомерСтроки,
		|	Упаковки.НомерУпаковки  КАК НомерУпаковки,
		|	1                       КАК ДоляУпаковки,
		|	ИСТИНА                  КАК ГрупповаяУпаковка,
		|	""Объект""              КАК ИмяТабличнойЧасти,
		|	""НомерУпаковки""       КАК ИмяПоля
		|ПОМЕСТИТЬ НомераУпаковок
		|ИЗ
		|	Документ.УведомлениеОбАгрегированииИТрансформацииУпаковокМДЛП КАК Упаковки
		|ГДЕ
		|	Упаковки.Ссылка = &Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Упаковки.НомерСтроки    КАК НомерСтроки,
		|	Упаковки.НомерКиЗ       КАК НомерУпаковки,
		|	1                       КАК ДоляУпаковки,
		|	ЛОЖЬ                    КАК ГрупповаяУпаковка,
		|	""НомераУпаковок""      КАК ИмяТабличнойЧасти,
		|	""НомерКиЗ""            КАК ИмяПоля
		|ИЗ
		|	Документ.УведомлениеОбАгрегированииИТрансформацииУпаковокМДЛП.НомераУпаковок КАК Упаковки
		|ГДЕ
		|	Упаковки.Ссылка = &Ссылка
		|	И НЕ Упаковки.Отклонено
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Упаковки.НомерСтроки      КАК НомерСтроки,
		|	Упаковки.НомерУпаковки    КАК НомерУпаковки,
		|	1                         КАК ДоляУпаковки,
		|	ИСТИНА                    КАК ГрупповаяУпаковка,
		|	""ТранспортныеУпаковки""  КАК ИмяТабличнойЧасти,
		|	""НомерУпаковки""         КАК ИмяПоля
		|ИЗ
		|	Документ.УведомлениеОбАгрегированииИТрансформацииУпаковокМДЛП.ТранспортныеУпаковки КАК Упаковки
		|ГДЕ
		|	Упаковки.Ссылка = &Ссылка
		|	И НЕ Упаковки.Отклонено
		|");
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
		Запрос.Выполнить();
		ИнтеграцияМДЛП.ДобавитьКлючиУпаковок(Запрос.МенеджерВременныхТаблиц);
		
		ПараметрыОперации.ИсходныйСтатус = СтатусУпаковок;
		ПараметрыОперации.Владелец = Владелец;
		
		ПроверкаПройдена = ИнтеграцияМДЛП.ПроверитьДоступностьУпаковок(Запрос.МенеджерВременныхТаблиц, ПараметрыОперации, Отказ);
		Если ПроверкаПройдена Тогда
			ИнтеграцияМДЛП.ЗарезервироватьУпаковки(Запрос.МенеджерВременныхТаблиц, ПараметрыОперации);
		КонецЕсли;
		
	ИначеЕсли СостояниеПодтверждения = Перечисления.СостоянияПодтвержденияМДЛП.ПринятоГИСМ Тогда
		
		Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	ДанныеУпаковок.НомерУпаковки                   КАК НомерУпаковки,
		|	&МестоДеятельности                             КАК МестоДеятельности,
		|	&НоваяЗонаТаможенногоКонтроля                  КАК ЗонаТаможенногоКонтроля,
		|	НЕОПРЕДЕЛЕНО                                   КАК ДокументРезерва,
		|	ДанныеУпаковок.ИсходныйСтатус                  КАК Статус,
		|	&ДатаСтатуса                                   КАК ДатаСтатуса,
		|	ДанныеУпаковок.Владелец                        КАК Владелец,
		|	""""                                           КАК НомерГрупповойУпаковки,
		|	ДанныеУпаковок.ГрупповаяУпаковка               КАК ГрупповаяУпаковка,
		|	ДанныеУпаковок.ВложеныПотребительскиеУпаковки  КАК ВложеныПотребительскиеУпаковки,
		|	&ИсходнаяЗонаТаможенногоКонтроля               КАК ИсходнаяЗонаТаможенногоКонтроля
		|ИЗ
		|	РегистрСведений.УпаковкиМДЛП КАК ДанныеУпаковок
		|ГДЕ
		|	ДанныеУпаковок.ДокументРезерва = &Ссылка
		|	И ДанныеУпаковок.НомерУпаковки = &НомерУпаковки
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДанныеУпаковок.НомерУпаковки                   КАК НомерУпаковки,
		|	&МестоДеятельности                             КАК МестоДеятельности,
		|	&НоваяЗонаТаможенногоКонтроля                  КАК ЗонаТаможенногоКонтроля,
		|	&НомерУпаковки                                 КАК ДокументРезерва,
		|	ЗНАЧЕНИЕ(Перечисление.СтатусыУпаковокМДЛП.ВУпаковке)  КАК Статус,
		|	&ДатаСтатуса                                   КАК ДатаСтатуса,
		|	ДанныеУпаковок.Владелец                        КАК Владелец,
		|	&НомерУпаковки                                 КАК НомерГрупповойУпаковки,
		|	ДанныеУпаковок.ГрупповаяУпаковка               КАК ГрупповаяУпаковка,
		|	ДанныеУпаковок.ВложеныПотребительскиеУпаковки  КАК ВложеныПотребительскиеУпаковки,
		|	&ИсходнаяЗонаТаможенногоКонтроля               КАК ИсходнаяЗонаТаможенногоКонтроля
		|ИЗ
		|	РегистрСведений.УпаковкиМДЛП КАК ДанныеУпаковок
		|ГДЕ
		|	ДанныеУпаковок.ДокументРезерва = &Ссылка
		|	И ДанныеУпаковок.НомерУпаковки <> &НомерУпаковки
		|	И ДанныеУпаковок.МестоДеятельности = &МестоДеятельности
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДанныеУпаковок.НомерУпаковки                   КАК НомерУпаковки,
		|	&МестоДеятельности                             КАК МестоДеятельности,
		|	&НоваяЗонаТаможенногоКонтроля                  КАК ЗонаТаможенногоКонтроля,
		|	&НомерУпаковки                                 КАК ДокументРезерва,
		|	ДанныеУпаковок.Статус                          КАК Статус,
		|	ДанныеУпаковок.ДатаСтатуса                     КАК ДатаСтатуса,
		|	ДанныеУпаковок.Владелец                        КАК Владелец,
		|	ДанныеУпаковок.НомерГрупповойУпаковки          КАК НомерГрупповойУпаковки,
		|	ДанныеУпаковок.ГрупповаяУпаковка               КАК ГрупповаяУпаковка,
		|	ДанныеУпаковок.ВложеныПотребительскиеУпаковки  КАК ВложеныПотребительскиеУпаковки,
		|	&ИсходнаяЗонаТаможенногоКонтроля               КАК ИсходнаяЗонаТаможенногоКонтроля
		|ИЗ
		|	РегистрСведений.УпаковкиМДЛП КАК ДанныеУпаковок
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		РегистрСведений.УпаковкиМДЛП КАК Упаковка
		|	ПО
		|		Упаковка.НомерУпаковки = ДанныеУпаковок.ДокументРезерва
		|		И Упаковка.ДокументРезерва = &Ссылка
		|		И Упаковка.НомерУпаковки <> &НомерУпаковки
		|ГДЕ
		|	ДанныеУпаковок.МестоДеятельности = &МестоДеятельности
		|");
		
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Запрос.УстановитьПараметр("ДокументРезерва", Ссылка);
		Запрос.УстановитьПараметр("МестоДеятельности", ПараметрыОперации.МестоДеятельности);
		Запрос.УстановитьПараметр("ДатаСтатуса", Дата);
		Запрос.УстановитьПараметр("НомерУпаковки", НомерУпаковки);
		Запрос.УстановитьПараметр("НоваяЗонаТаможенногоКонтроля", ПараметрыОперации.НоваяЗонаТаможенногоКонтроля);
		Запрос.УстановитьПараметр("ИсходнаяЗонаТаможенногоКонтроля", ПараметрыОперации.ИсходнаяЗонаТаможенногоКонтроля);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Набор = РегистрыСведений.УпаковкиМДЛП.СоздатьНаборЗаписей();
		Пока Выборка.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(Набор.Добавить(), Выборка);
			Если Выборка.НомерГрупповойУпаковки = Выборка.ДокументРезерва Тогда
				НаборУдалить = РегистрыСведений.УпаковкиМДЛП.СоздатьНаборЗаписей();
				НаборУдалить.Отбор.ДокументРезерва.Установить(Выборка.НомерУпаковки);
				НаборУдалить.Записать();
			КонецЕсли;
		КонецЦикла;
		Набор.Записать(Ложь);
		
		Набор = РегистрыСведений.УпаковкиМДЛП.СоздатьНаборЗаписей();
		Набор.Отбор.ДокументРезерва.Установить(Ссылка);
		Набор.Записать();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОчиститьНеиспользуемыеУпаковки()
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	Товары.ИдентификаторГрупповойУпаковки  КАК ИдентификаторГрупповойУпаковки,
	|	Товары.ИдентификаторСтроки             КАК ИдентификаторСтроки
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТранспортныеУпаковки.ИдентификаторГрупповойУпаковки КАК ИдентификаторГрупповойУпаковки
	|ПОМЕСТИТЬ ТранспортныеУпаковки
	|ИЗ
	|	&ТранспортныеУпаковки КАК ТранспортныеУпаковки
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НовыеУпаковки.ИдентификаторСтроки  КАК ИдентификаторСтроки
	|ПОМЕСТИТЬ НовыеУпаковки
	|ИЗ
	|	&НовыеУпаковки КАК НовыеУпаковки
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.ИдентификаторГрупповойУпаковки  КАК ИдентификаторГрупповойУпаковки,
	|	Товары.ИдентификаторСтроки             КАК ИдентификаторСтроки
	|ИЗ
	|	Товары КАК Товары
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		НовыеУпаковки КАК НовыеУпаковки
	|	ПО
	|		НовыеУпаковки.ИдентификаторСтроки = Товары.ИдентификаторГрупповойУпаковки
	|		И &ВложеныПотребительскиеУпаковки
	|ГДЕ
	|	НовыеУпаковки.ИдентификаторСтроки ЕСТЬ NULL
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТранспортныеУпаковки.ИдентификаторГрупповойУпаковки КАК ИдентификаторГрупповойУпаковки
	|ИЗ
	|	ТранспортныеУпаковки КАК ТранспортныеУпаковки
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		НовыеУпаковки КАК НовыеУпаковки
	|	ПО
	|		НовыеУпаковки.ИдентификаторСтроки = ТранспортныеУпаковки.ИдентификаторГрупповойУпаковки
	|		И НЕ &ВложеныПотребительскиеУпаковки
	|ГДЕ
	|	НовыеУпаковки.ИдентификаторСтроки ЕСТЬ NULL
	|");
	Запрос.УстановитьПараметр("Товары", Товары.Выгрузить(, "ИдентификаторГрупповойУпаковки, ИдентификаторСтроки"));
	Запрос.УстановитьПараметр("ТранспортныеУпаковки", ТранспортныеУпаковки.Выгрузить(, "ИдентификаторГрупповойУпаковки"));
	Запрос.УстановитьПараметр("НовыеУпаковки", ГруппировочныеУпаковки.Выгрузить(, "ИдентификаторСтроки"));
	Запрос.УстановитьПараметр("ВложеныПотребительскиеУпаковки", ВложеныПотребительскиеУпаковки);
	
	Результат = Запрос.ВыполнитьПакет();
	ВыборкаТовары = Результат[Результат.ВГраница() - 1].Выбрать();
	Пока ВыборкаТовары.Следующий() Цикл
		
		Строка = Товары.Найти(ВыборкаТовары.ИдентификаторСтроки, "ИдентификаторСтроки");
		Товары.Удалить(Строка);
		
		НайденныеСтроки = НомераУпаковок.НайтиСтроки(Новый Структура("ИдентификаторСтроки", ВыборкаТовары.ИдентификаторСтроки));
		Для Каждого Строка Из НайденныеСтроки Цикл
			НомераУпаковок.Удалить(Строка);
		КонецЦикла;
		
	КонецЦикла;
	
	ВыборкаУпаковки = Результат[Результат.ВГраница()].Выбрать();
	Пока ВыборкаУпаковки.Следующий() Цикл
		НайденныеСтроки = ТранспортныеУпаковки.НайтиСтроки(Новый Структура("ИдентификаторГрупповойУпаковки", ВыборкаУпаковки.ИдентификаторГрупповойУпаковки));
		Для Каждого Строка Из НайденныеСтроки Цикл
			ТранспортныеУпаковки.Удалить(Строка);
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли