#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС
#Область ПрограммныйИнтерфейс

// Функция формирует результат запроса по неотгруженной части заказа
//
// Параметры
//  СпецификацияКДоговору - ссылка на спецификацию к гос. контракту по которой необходимы остатки.
//  ЗаказПоставщику - ссылка на заказ поставщику (или пустая ссылка)
// 
// Возвращаемое значение
//  Результат запроса - результат запроса по неотгруженной части заказа\заявки.
//
Функция ПолучитьРезультатЗапросаПоОстаткам(Спецификация, Документ = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Спецификация", Спецификация);
	Запрос.УстановитьПараметр("Регистратор", Документ);
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ТаблицаЗаказы.Номенклатура           КАК Номенклатура,
	|	ТаблицаЗаказы.КодСтроки              КАК КодСтроки,
	|	СУММА(ТаблицаЗаказы.ПоСпецификации)  КАК Количество
	|ПОМЕСТИТЬ ТаблицаОстатки
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗаказыОстатки.Номенклатура            КАК Номенклатура,
	|		ЗаказыОстатки.КодСтрокиСпецификации   КАК КодСтроки,
	|		ЗаказыОстатки.ПоСпецификацииОстаток   КАК ПоСпецификации
	|	ИЗ
	|		РегистрНакопления.ЗаказыПоставщикам.Остатки(,
	|				Спецификация = &Спецификация
	|			) КАК ЗаказыОстатки
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ЗаказыДвижения.Номенклатура,
	|		ЗаказыДвижения.КодСтрокиСпецификации,
	|		ВЫБОР КОГДА ЗаказыДвижения.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
	|				-ЗаказыДвижения.ПоСпецификации
	|			ИНАЧЕ
	|				ЗаказыДвижения.ПоСпецификации
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.ЗаказыПоставщикам КАК ЗаказыДвижения
	|	ГДЕ
	|		ЗаказыДвижения.Регистратор = &Регистратор
	|		И ЗаказыДвижения.Спецификация = &Спецификация
	|		И ЗаказыДвижения.Активность
	|	) КАК ТаблицаЗаказы
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТаблицаЗаказы.Номенклатура,
	|		ТаблицаЗаказы.КодСтроки
	|	
	|	ИМЕЮЩИЕ
	|		СУММА(ТаблицаЗаказы.ПоСпецификации) > 0
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаказТовары.НоменклатураПоставщика        КАК НоменклатураПоставщика,
	|	ТаблицаОстатки.Номенклатура               КАК Номенклатура,
	|	ТаблицаОстатки.КодСтроки                  КАК КодСтроки,
	|	ТаблицаОстатки.Количество                 КАК Количество,
	|	ЗаказТовары.ЕдиницаИзмерения              КАК ЕдиницаИзмерения,
	|	ЗаказТовары.Коэффициент                   КАК Коэффициент,
	|	ВЫБОР
	|		КОГДА ТаблицаОстатки.Количество = ЗаказТовары.Количество
	|			ТОГДА ЗаказТовары.КоличествоВЕдиницахИзмерения
	|		КОГДА ЗаказТовары.Коэффициент = 0
	|			ТОГДА 0		
	|		ИНАЧЕ ТаблицаОстатки.Количество / ЗаказТовары.Коэффициент
	|	КОНЕЦ                                     КАК КоличествоВЕдиницахИзмерения,
	|	ЗаказТовары.Цена                          КАК Цена,
	|	ЗаказТовары.Количество                    КАК КоличествоПоДокументу,
	|	ЗаказТовары.КоличествоВЕдиницахИзмерения  КАК КоличествоВЕдиницахИзмеренияПоДокументу,
	|	ЗаказТовары.СтавкаНДС                     КАК СтавкаНДС,
	|	ЗаказТовары.Сумма                         КАК Сумма,
	|	ЗаказТовары.СуммаНДС                      КАК СуммаНДС,
	|	ЗаказТовары.СуммаСНДС                     КАК СуммаСНДС,
	|	ДанныеЗаказа.ЦенаВключаетНДС              КАК ЦенаВключаетНДС,
	|	ДанныеЗаказа.Валюта                       КАК Валюта,
	|	ДанныеЗаказа.Дата                         КАК ДатаДокумента
	|ИЗ
	|	ТаблицаОстатки КАК ТаблицаОстатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СпецификацияКДоговору КАК ДанныеЗаказа
	|		ПО
	|			ДанныеЗаказа.Ссылка = &Спецификация
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СпецификацияКДоговору.Товары КАК ЗаказТовары
	|		ПО
	|			ТаблицаОстатки.Номенклатура = ЗаказТовары.Номенклатура
	|			И ТаблицаОстатки.КодСтроки = ЗаказТовары.КодСтроки
	|			И ЗаказТовары.Ссылка = &Спецификация
	|
	|УПОРЯДОЧИТЬ ПО ЗаказТовары.НомерСтроки
	|";
	УстановитьПривилегированныйРежим(Истина);
	Возврат Запрос.Выполнить();
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	И ЗначениеРазрешено(ПодразделениеОрганизации)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти // ПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

////////////////////////////////////////////////////////////////////////////////
// Проведение
#Область Проведение

// Инициализирует таблицы значений, содержащие данные для проведения документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицыДвиженийДляПроведения(ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	ОсновныеДанныеДокумента = ПодготовитьОсновныеДанныеДляПроведения(ДополнительныеСвойства);
	
	ПроведениеБольничнаяАптека.ДобавитьТекстЗапросаДвижений(ДополнительныеСвойства, ТекстЗапросаВтТаблицаТовары());
	ПроведениеБольничнаяАптека.ДобавитьТекстЗапросаДвижений(ДополнительныеСвойства, ТекстЗапросаЗаказыПоставщикам(), Метаданные.РегистрыНакопления.ЗаказыПоставщикам);
	
	Запрос = Новый Запрос(ПроведениеБольничнаяАптека.ПолучитьТекстЗапросаДвижений(ДополнительныеСвойства, Регистры));
	
	Для Каждого ДанныеДокумента Из ОсновныеДанныеДокумента Цикл
		Запрос.УстановитьПараметр(ДанныеДокумента.Ключ, ДанныеДокумента.Значение);
	КонецЦикла;
	
	ПроведениеБольничнаяАптека.ЗаполнитьТаблицыДвижений(ДополнительныеСвойства, Запрос.ВыполнитьПакет(), Регистры);
	
КонецПроцедуры

Функция ПодготовитьОсновныеДанныеДляПроведения(ДополнительныеСвойства)
	
	ЗапрашиваемыеДанные = Новый Структура;
	ЗапрашиваемыеДанные.Вставить("Ссылка");
	ЗапрашиваемыеДанные.Вставить("Период", "Дата");
	ЗапрашиваемыеДанные.Вставить("Организация");
	ЗапрашиваемыеДанные.Вставить("Статус");
	ЗапрашиваемыеДанные.Вставить("Контрагент");
	ЗапрашиваемыеДанные.Вставить("ДоговорКонтрагента");
	ЗапрашиваемыеДанные.Вставить("Валюта", "Валюта");
	
	ОсновныеДанныеДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
		ПроведениеБольничнаяАптека.ПолучитьСсылкуНаДокументДляПроведения(ДополнительныеСвойства),
		ЗапрашиваемыеДанные);
	
	ОсновныеДанныеДокумента.Вставить("ВестиУчетПоИсточникамФинансирования", ПолучитьФункциональнуюОпцию("ИспользоватьИсточникиФинансирования"));
	
	Возврат ОсновныеДанныеДокумента;
	
КонецФункции

Функция ТекстЗапросаВтТаблицаТовары()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	1                               КАК Порядок,
	|	ТаблицаТовары.НомерСтроки       КАК НомерСтроки,
	|	&Организация                    КАК Организация,
	|	ТаблицаТовары.КодСтроки         КАК КодСтроки,
	|	ТаблицаТовары.Номенклатура      КАК Номенклатура,
	|	ТаблицаТовары.ЕдиницаИзмерения  КАК ЕдиницаИзмерения,
	|	ТаблицаТовары.Количество        КАК Количество
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	Документ.СпецификацияКДоговору.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаЗаказыПоставщикам()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки               КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)  КАК ВидДвижения,
	|	&Период                                 КАК Период,
	|	0                                       КАК КодСтроки,
	|	ТаблицаТовары.КодСтроки                 КАК КодСтрокиСпецификации,
	|	&Ссылка                                 КАК Спецификация,
	|	ТаблицаТовары.Номенклатура              КАК Номенклатура,
	|	ТаблицаТовары.ЕдиницаИзмерения          КАК ЕдиницаИзмерения,
	|	ТаблицаТовары.Количество                КАК ПоСпецификации,
	|	0                                       КАК Заказано,
	|	0                                       КАК КОформлению
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСпецификацийКДоговорам.КВыполнению)
	|	ИЛИ &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСпецификацийКДоговорам.Закрыт)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти // Проведение

////////////////////////////////////////////////////////////////////////////////
// Печать
#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	УправлениеПечатьюБольничнаяАптека.ДобавитьКомандыПечати(ПустаяСсылка().Метаданные().ПолноеИмя(), КомандыПечати);
	
КонецПроцедуры

// Возвращает список доступных печатных форм документа
//
Функция ДоступныеПечатныеФормы() Экспорт
	
	МетаданныеДокумента = ПустаяСсылка().Метаданные();
	МенеджерПечати      = МетаданныеДокумента.ПолноеИмя();
	МетаданныеМакетов   = МетаданныеДокумента.Макеты;
	
	ПечатныеФормы = УправлениеПечатьюБольничнаяАптека.СоздатьКоллекциюДоступныхПечатныхФорм();
	
	ПечатнаяФорма = УправлениеПечатьюБольничнаяАптека.ДобавитьПечатнуюФорму(ПечатныеФормы, "СпецификацияКДоговору", МенеджерПечати);
	ПечатнаяФорма.Представление = МетаданныеМакетов.ПФ_MXL_СпецификацияКДоговору.Представление();
	ПечатнаяФорма.ПутьКМакету = ФормированиеПечатныхФормБольничнаяАптека.ПутьКМакету(МетаданныеМакетов.ПФ_MXL_СпецификацияКДоговору);
	УправлениеПечатьюБольничнаяАптека.ДобавитьКомандуПечати(ПечатнаяФорма);
	
	Возврат ПечатныеФормы;
	
КонецФункции

Функция ПолучитьТекстЗапросаДанныеДляПечати()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Документ.Ссылка              КАК Ссылка,
	|	Документ.Номер               КАК НомерДокумента,
	|	Документ.Дата                КАК ДатаДокумента,
	|	Документ.Организация         КАК Организация,
	|	Документ.Организация         КАК Получатель,
	|	Документ.Контрагент          КАК Контрагент,
	|	Документ.Контрагент          КАК Отправитель,
	|	Документ.ДоговорКонтрагента  КАК Договор,
	|	НЕОПРЕДЕЛЕНО                 КАК БанковскийСчет,
	|	НЕОПРЕДЕЛЕНО                 КАК БанковскийСчетТекстКорреспондента,
	|	Документ.ЦенаВключаетНДС     КАК ЦенаВключаетНДС,
	|	Документ.Валюта              КАК Валюта,
	|	Документ.Товары.(
	|		НомерСтроки                      КАК НомерСтроки,
	|		Номенклатура                     КАК Номенклатура,
	|		Номенклатура.НаименованиеПолное  КАК ТоварНаименование,
	|		Номенклатура.Код                 КАК ТоварКод,
	|		ЕдиницаИзмерения                 КАК ЕдиницаИзмерения,
	|		ЕдиницаИзмерения.КодОКЕИ         КАК КодПоОКЕИ,
	|		КоличествоВЕдиницахИзмерения     КАК Количество,
	|		Цена                             КАК Цена,
	|		Сумма                            КАК Сумма,
	|		СтавкаНДС                        КАК СтавкаНДС,
	|		СуммаНДС                         КАК СуммаНДС
	|	)
	|ИЗ
	|	Документ.СпецификацияКДоговору КАК Документ
	|
	|ГДЕ
	|	Документ.Ссылка В (&ТекущийДокумент)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ПечатьСпецификацияКДоговору(МассивОбъектов, ОбъектыПечати) Экспорт
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.АвтоМасштаб        = Истина;
	
	ПолноеИмяМакета = ФормированиеПечатныхФормБольничнаяАптека.ПутьКМакету(ПустаяСсылка().Метаданные().Макеты.ПФ_MXL_СпецификацияКДоговору);
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_" + ПолноеИмяМакета;
	Макет = УправлениеПечатью.МакетПечатнойФормы(ПолноеИмяМакета);
	
	МассивВыводимыхОбластей = Новый Массив;
	
	ИмяОбластьШапка  = "ШапкаТаблицы";
	ИмяОбластьСтрока = "Строка";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ПолучитьТекстЗапросаДанныеДляПечати();
	Запрос.УстановитьПараметр("ТекущийДокумент", МассивОбъектов);
	
	Шапка = Запрос.Выполнить().Выбрать();
	
	ПервыйДокумент = Истина;
	Пока Шапка.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(Шапка.Ссылка, ТабличныйДокумент, Макет);
		
		// Получение параметров для заполнения
		ПараметрыИзШапки = ПолучитьПараметрыШапкиСпецификацияКДоговору(Шапка);
		
		// Вывод области Заголовок
		ФормированиеПечатныхФормБольничнаяАптека.ВывестиОбластьПоИмени(ТабличныйДокумент, Макет, "Заголовок", ПараметрыИзШапки);
		
		// Вывод области РеквизитыШапки
		ФормированиеПечатныхФормБольничнаяАптека.ВывестиОбластьПоИмени(ТабличныйДокумент, Макет, "РеквизитыШапки", ПараметрыИзШапки);
		
		// Вывод области ШапкаТаблицы
		ФормированиеПечатныхФормБольничнаяАптека.ВывестиОбластьПоИмени(ТабличныйДокумент, Макет, ИмяОбластьШапка, ПараметрыИзШапки);
		
		// Инициализация итогов по документу
		ПараметрыИтого = Новый Структура;
		ПараметрыИтого.Вставить("Сумма"   , 0);
		ПараметрыИтого.Вставить("СуммаНДС", 0);
		
		ВыборкаСтрокТовары = Шапка.Товары.Выбрать();
		
		ОбластьСтрока = Макет.ПолучитьОбласть(ИмяОбластьСтрока);
		
		КоличествоСтрок = ВыборкаСтрокТовары.Количество();
		НомерСтроки = 0;
		Пока ВыборкаСтрокТовары.Следующий() Цикл
			
			НомерСтроки = НомерСтроки + 1;
			
			ОбластьСтрока.Параметры.Заполнить(ВыборкаСтрокТовары);
			
			МассивВыводимыхОбластей.Очистить();
			МассивВыводимыхОбластей.Добавить(ОбластьСтрока);
			Если НомерСтроки = КоличествоСтрок Тогда
				МассивВыводимыхОбластей.Добавить(Макет.ПолучитьОбласть("Итого"));
				МассивВыводимыхОбластей.Добавить(Макет.ПолучитьОбласть("СуммаПрописью"));
				МассивВыводимыхОбластей.Добавить(Макет.ПолучитьОбласть("Подписи"));
			КонецЕсли;
			
			Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабличныйДокумент, МассивВыводимыхОбластей) Тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ТабличныйДокумент.Вывести(Макет.ПолучитьОбласть(ИмяОбластьШапка));
			КонецЕсли;
			
			// Вывод области Строка
			ТабличныйДокумент.Вывести(ОбластьСтрока);
			
			ФормированиеПечатныхФормБольничнаяАптека.РассчитатьИтоги(ВыборкаСтрокТовары, ПараметрыИтого);
			
		КонецЦикла;
		
		// Вывод области Итого
		ПараметрыИтого.Вставить("НДС", ?(Шапка.ЦенаВключаетНДС, НСтр("ru = 'В том числе НДС'"), НСтр("ru = 'Сумма НДС'")) + ":");
		ФормированиеПечатныхФормБольничнаяАптека.ВывестиОбластьПоИмени(ТабличныйДокумент, Макет, "Итого", ПараметрыИтого);
		
		// Вывод области СуммаПрописью
		СуммаКПрописи = ПараметрыИтого.Сумма + ?(Шапка.ЦенаВключаетНДС, 0, ПараметрыИтого.СуммаНДС);
		ФорматированнаяСумма = ОбщегоНазначенияБольничнаяАптека.ФорматСумм(СуммаКПрописи, Шапка.Валюта);
		ИтоговаяСтрока = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Всего наименований %1, на сумму %2'"), КоличествоСтрок, ФорматированнаяСумма);
		
		ПараметрыСуммаПрописью = Новый Структура;
		ПараметрыСуммаПрописью.Вставить("ИтоговаяСтрока", ИтоговаяСтрока);
		ПараметрыСуммаПрописью.Вставить("СуммаПрописью" , РаботаСКурсамиВалют.СформироватьСуммуПрописью(СуммаКПрописи, Шапка.Валюта));
		
		ФормированиеПечатныхФормБольничнаяАптека.ВывестиОбластьПоИмени(ТабличныйДокумент, Макет, "СуммаПрописью", ПараметрыСуммаПрописью);
		
		// Вывод области Подписи
		ФормированиеПечатныхФормБольничнаяАптека.ВывестиОбластьПоИмени(ТабличныйДокумент, Макет, "Подписи", ПараметрыИзШапки);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПолучитьПараметрыШапкиСпецификацияКДоговору(Шапка)
	
	КлючиПараметров = ФормированиеПечатныхФормБольничнаяАптека.ПолучитьИменаКолонокТаблицы(Шапка);
	
	Параметры = Новый Структура(КлючиПараметров);
	ЗаполнитьЗначенияСвойств(Параметры, Шапка);
	
	// Данные заголовка
	НомерДокумента = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Шапка.НомерДокумента);
	ШаблонТекстЗаголовка = НСтр("ru = 'Спецификация к договору № %1 от %2'");
	ТекстЗаголовка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		ШаблонТекстЗаголовка, НомерДокумента, Формат(Шапка.ДатаДокумента, "ДЛФ=DD"));
	
	СведенияОПолучателе = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Шапка.Получатель, Шапка.ДатаДокумента);
	ПолучательПредставление = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПолучателе, "ПолноеНаименование,ИНН,КПП,ЮридическийАдрес,Телефоны,");
	
	СведенияОбОтправителе = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Шапка.Отправитель, Шапка.ДатаДокумента);
	ОтправительПредставление = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОтправителе, "ПолноеНаименование,ИНН,КПП,ЮридическийАдрес,Телефоны,");
	
	Параметры.Вставить("ТекстЗаголовка"          , ТекстЗаголовка);
	Параметры.Вставить("ПолучательПредставление" , ПолучательПредставление);
	Параметры.Вставить("ОтправительПредставление", ОтправительПредставление);
	
	// Данные шапки таблицы
	Параметры.Вставить("ИмяКолонкиКодов", НСтр("ru = 'Код'"));
	Параметры.Вставить("ИмяКолонкиТовар", НСтр("ru = 'Товары (работы, услуги)'"));
	
	// Данные подписей
	Параметры.Вставить("РуководительФИО", "");
	Параметры.Вставить("БухгалтерФИО"   , "");
	
	
	Возврат Параметры;
	
КонецФункции

#КонецОбласти // Печать

////////////////////////////////////////////////////////////////////////////////
// Формирование отчетов
#Область ФормированиеОтчетов

// Возвращает данные для заполнения отчета Состояние выполнения документов.
//
// Параметры:
//  ВходящиеДокументы - СписокЗначений - ссылки документов Спецификация к гос. контракту,
//                                       для которых получается состояние выполнения.
//
// Возвращаемое значение:
//  ДанныеОтчета - Структура - структурированные данные для заполнения отчета.
//
Функция ПолучитьДанныеОтчетаСостоянияВыполненияДокументов(ВходящиеДокументы) Экспорт
	
	ТекстЗапроса = ТекстЗапросаСостоянияВыполненияДокументов();
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Спецификации", ВходящиеДокументы);
	
	РезультатыЗапросов = Запрос.ВыполнитьПакет();
	
	ПоследнийРезультат = РезультатыЗапросов.ВГраница();
	ДанныеОтчета = Новый Структура;
	ДанныеОтчета.Вставить("ПоСпецификации"      , РезультатыЗапросов[ПоследнийРезультат - 5].Выгрузить());
	ДанныеОтчета.Вставить("КЗаказу"             , РезультатыЗапросов[ПоследнийРезультат - 4].Выгрузить());
	ДанныеОтчета.Вставить("Заказано"            , РезультатыЗапросов[ПоследнийРезультат - 3].Выгрузить());
	ДанныеОтчета.Вставить("ВПроцессеПоступления", РезультатыЗапросов[ПоследнийРезультат - 2].Выгрузить());
	ДанныеОтчета.Вставить("Поступило"           , РезультатыЗапросов[ПоследнийРезультат - 1].Выгрузить());
	ДанныеОтчета.Вставить("Возвращено"          , РезультатыЗапросов[ПоследнийРезультат    ].Выгрузить());
	
	Возврат ДанныеОтчета;
	
КонецФункции

Функция ТекстЗапросаСостоянияВыполненияДокументов()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Документы.Ссылка  КАК Документ
	|ПОМЕСТИТЬ Документы
	|ИЗ
	|	Документ.СпецификацияКДоговору КАК Документы
	|ГДЕ
	|	Документы.Ссылка В (&Спецификации)
	|	И Документы.Проведен
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	
	// Обороты по заказам
	
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОборотыЗаказов.Регистратор            КАК Регистратор,
	|	ОборотыЗаказов.Спецификация           КАК Спецификация,
	|	ОборотыЗаказов.ЗаказПоставщику        КАК ЗаказПоставщику,
	|	ОборотыЗаказов.Номенклатура           КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ОборотыЗаказов.Номенклатура.Упаковка = ЗНАЧЕНИЕ(Справочник.ЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА ОборотыЗаказов.Номенклатура.ОсновнаяЕдиницаУчета
	|		ИНАЧЕ ОборотыЗаказов.Номенклатура.Упаковка
	|	КОНЕЦ                                 КАК ЕдиницаИзмерения,
	|	ОборотыЗаказов.КодСтрокиСпецификации  КАК КодСтрокиСпецификации,
	|	ОборотыЗаказов.КодСтроки              КАК КодСтроки,
	
	|	СУММА(ВЫБОР
	|		КОГДА ОборотыЗаказов.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ОборотыЗаказов.ПоСпецификации / Упаковки.Коэффициент
	|		ИНАЧЕ 0
	|	КОНЕЦ)                                КАК ПоСпецификации,
	
	|	СУММА(ВЫБОР
	|		КОГДА ОборотыЗаказов.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ОборотыЗаказов.ПоСпецификации / Упаковки.Коэффициент
	|		ИНАЧЕ 0
	|	КОНЕЦ)                                КАК КЗаказу,
	
	|	СУММА(ВЫБОР
	|		КОГДА ОборотыЗаказов.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ОборотыЗаказов.Заказано / Упаковки.Коэффициент
	|		ИНАЧЕ 0
	|	КОНЕЦ)                                КАК Заказано,
	
	|	СУММА(ВЫБОР
	|		КОГДА ОборотыЗаказов.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ОборотыЗаказов.КОформлению / Упаковки.Коэффициент
	|		ИНАЧЕ 0
	|	КОНЕЦ)                                КАК КПоступлению,
	
	|	СУММА(ВЫБОР
	|		КОГДА ОборотыЗаказов.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|			ТОГДА ОборотыЗаказов.КОформлению / Упаковки.Коэффициент
	|		ИНАЧЕ 0
	|	КОНЕЦ)                                КАК Принято,
	
	|	СУММА(ВЫБОР
	|		КОГДА ОборотыЗаказов.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|			ТОГДА ОборотыЗаказов.ПоСпецификации / Упаковки.Коэффициент
	|		ИНАЧЕ 0
	|	КОНЕЦ)                                КАК ПринятоПоСпецификации,
	
	|	СУММА(ВЫБОР
	|		КОГДА ОборотыЗаказов.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|			ТОГДА -ОборотыЗаказов.ПоСпецификации / Упаковки.Коэффициент
	|		ИНАЧЕ 0
	|	КОНЕЦ)                                КАК Возвращено
	
	|ПОМЕСТИТЬ ОборотыЗаказов
	|ИЗ
	|	РегистрНакопления.ЗаказыПоставщикам КАК ОборотыЗаказов
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РегистрСведений.ЕдиницыИзмеренияНоменклатуры КАК Упаковки
	|		ПО
	|			Упаковки.Номенклатура = ОборотыЗаказов.Номенклатура
	|			И ВЫБОР
	|				КОГДА ОборотыЗаказов.Номенклатура.Упаковка = ЗНАЧЕНИЕ(Справочник.ЕдиницыИзмерения.ПустаяСсылка)
	|					ТОГДА Упаковки.ЕдиницаИзмерения = ОборотыЗаказов.Номенклатура.ОсновнаяЕдиницаУчета
	|				ИНАЧЕ Упаковки.ЕдиницаИзмерения = ОборотыЗаказов.Номенклатура.Упаковка
	|			КОНЕЦ
	|ГДЕ
	|	ОборотыЗаказов.Спецификация В (ВЫБРАТЬ Документ ИЗ Документы)
	|СГРУППИРОВАТЬ ПО
	|	ОборотыЗаказов.Регистратор,
	|	ОборотыЗаказов.Спецификация,
	|	ОборотыЗаказов.ЗаказПоставщику,
	|	ОборотыЗаказов.Номенклатура,
	|	ОборотыЗаказов.КодСтрокиСпецификации,
	|	ОборотыЗаказов.КодСтроки,
	|	ОборотыЗаказов.ПричинаОтмены
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	
	// Суммы оборотов
	
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СуммыСпецификаций.Ссылка            КАК Спецификация,
	|	СуммыСпецификаций.Номенклатура      КАК Номенклатура,
	|	СуммыСпецификаций.КодСтроки         КАК КодСтроки,
	|	СУММА(СуммыСпецификаций.СуммаСНДС)  КАК Сумма
	|ПОМЕСТИТЬ СуммыСпецификаций
	|ИЗ
	|	Документ.СпецификацияКДоговору.Товары КАК СуммыСпецификаций
	|ГДЕ
	|	СуммыСпецификаций.Ссылка В (ВЫБРАТЬ Документ ИЗ Документы)
	|СГРУППИРОВАТЬ ПО
	|	СуммыСпецификаций.Ссылка,
	|	СуммыСпецификаций.Номенклатура,
	|	СуммыСпецификаций.КодСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СуммыЗаказов.Ссылка            КАК ЗаказПоставщику,
	|	СуммыЗаказов.Номенклатура      КАК Номенклатура,
	|	СуммыЗаказов.КодСтроки         КАК КодСтроки,
	|	СУММА(СуммыЗаказов.СуммаСНДС)  КАК Сумма
	|ПОМЕСТИТЬ СуммыЗаказов
	|ИЗ
	|	Документ.ЗаказПоставщику.Товары КАК СуммыЗаказов
	|ГДЕ
	|	СуммыЗаказов.Ссылка В (ВЫБРАТЬ РАЗЛИЧНЫЕ Регистратор ИЗ ОборотыЗаказов ГДЕ ОборотыЗаказов.Регистратор ССЫЛКА Документ.ЗаказПоставщику)
	|СГРУППИРОВАТЬ ПО
	|	СуммыЗаказов.Ссылка,
	|	СуммыЗаказов.Номенклатура,
	|	СуммыЗаказов.КодСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СуммыПоступлений.Ссылка            КАК ПоступлениеТоваров,
	|	СуммыПоступлений.Номенклатура      КАК Номенклатура,
	|	СуммыПоступлений.КодСтроки         КАК КодСтроки,
	|	СУММА(СуммыПоступлений.СуммаСНДС)  КАК Сумма
	|ПОМЕСТИТЬ СуммыПоступлений
	|ИЗ
	|	Документ.ПоступлениеТоваров.Товары КАК СуммыПоступлений
	|ГДЕ
	|	СуммыПоступлений.Ссылка В (ВЫБРАТЬ РАЗЛИЧНЫЕ Регистратор ИЗ ОборотыЗаказов ГДЕ ОборотыЗаказов.Регистратор ССЫЛКА Документ.ПоступлениеТоваров)
	|СГРУППИРОВАТЬ ПО
	|	СуммыПоступлений.Ссылка,
	|	СуммыПоступлений.Номенклатура,
	|	СуммыПоступлений.КодСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СуммыВозвратов.Ссылка            КАК ВозвратТоваров,
	|	СуммыВозвратов.Номенклатура      КАК Номенклатура,
	|	СуммыВозвратов.КодСтроки         КАК КодСтроки,
	|	СУММА(СуммыВозвратов.СуммаСНДС)  КАК Сумма
	|ПОМЕСТИТЬ СуммыВозвратов
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику.Товары КАК СуммыВозвратов
	|ГДЕ
	|	СуммыВозвратов.Ссылка В (ВЫБРАТЬ РАЗЛИЧНЫЕ Регистратор ИЗ ОборотыЗаказов ГДЕ ОборотыЗаказов.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику)
	|СГРУППИРОВАТЬ ПО
	|	СуммыВозвратов.Ссылка,
	|	СуммыВозвратов.Номенклатура,
	|	СуммыВозвратов.КодСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	
	// Расчет показателей
	
	|ВЫБРАТЬ
	|	ОборотыЗаказов.Спецификация           КАК Спецификация,
	|	ОборотыЗаказов.Номенклатура           КАК Номенклатура,
	|	ОборотыЗаказов.ЕдиницаИзмерения       КАК ЕдиницаИзмерения,
	|	ОборотыЗаказов.ПоСпецификации         КАК ПоСпецификации,
	|	ОборотыЗаказов.КЗаказу                КАК КЗаказу,
	|	ОборотыЗаказов.КЗаказу                КАК ОсталосьЗаказать,
	|	0                                     КАК Заказано,
	|	0                                     КАК КПоступлению,
	|	0                                     КАК ОсталосьПринять,
	|	0                                     КАК Принято,
	|	0                                     КАК Возвращено,
	|	ЕСТЬNULL(СуммыСпецификаций.Сумма, 0)  КАК СуммаПоСпецификации,
	|	0                                     КАК СуммаЗаказано,
	|	0                                     КАК СуммаПринято,
	|	0                                     КАК СуммаВозвращено
	|ПОМЕСТИТЬ Заказы
	|ИЗ
	|	ОборотыЗаказов КАК ОборотыЗаказов
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			СуммыСпецификаций КАК СуммыСпецификаций
	|		ПО
	|			СуммыСпецификаций.Спецификация = ОборотыЗаказов.Спецификация
	|			И СуммыСпецификаций.Номенклатура = ОборотыЗаказов.Номенклатура
	|			И СуммыСпецификаций.КодСтроки = ОборотыЗаказов.КодСтрокиСпецификации
	|ГДЕ
	|	ОборотыЗаказов.Регистратор = ОборотыЗаказов.Спецификация
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОборотыЗаказов.Спецификация      КАК Спецификация,
	|	ОборотыЗаказов.Номенклатура      КАК Номенклатура,
	|	ОборотыЗаказов.ЕдиницаИзмерения  КАК ЕдиницаИзмерения,
	|	0                                КАК ПоСпецификации,
	|	0                                КАК КЗаказу,
	|	-ОборотыЗаказов.Заказано         КАК ОсталосьЗаказать,
	|	ОборотыЗаказов.Заказано          КАК Заказано,
	|	ОборотыЗаказов.КПоступлению      КАК КПоступлению,
	|	ОборотыЗаказов.КПоступлению      КАК ОсталосьПринять,
	|	0                                КАК Принято,
	|	0                                КАК Возвращено,
	|	0                                КАК СуммаПоСпецификации,
	|	ЕСТЬNULL(СуммыЗаказов.Сумма, 0)  КАК СуммаЗаказано,
	|	0                                КАК СуммаПринято,
	|	0                                КАК СуммаВозвращено
	|ИЗ
	|	ОборотыЗаказов КАК ОборотыЗаказов
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			СуммыЗаказов КАК СуммыЗаказов
	|		ПО
	|			СуммыЗаказов.ЗаказПоставщику = ОборотыЗаказов.ЗаказПоставщику
	|			И СуммыЗаказов.Номенклатура = ОборотыЗаказов.Номенклатура
	|			И СуммыЗаказов.КодСтроки = ОборотыЗаказов.КодСтроки
	|ГДЕ
	|	ОборотыЗаказов.Регистратор = ОборотыЗаказов.ЗаказПоставщику
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОборотыЗаказов.Спецификация            КАК Спецификация,
	|	ОборотыЗаказов.Номенклатура            КАК Номенклатура,
	|	ОборотыЗаказов.ЕдиницаИзмерения        КАК ЕдиницаИзмерения,
	|	0                                      КАК ПоСпецификации,
	|	0                                      КАК КЗаказу,
	|	0                                      КАК ОсталосьЗаказать,
	|	0                                      КАК Заказано,
	|	0                                      КАК КПоступлению,
	|	-ОборотыЗаказов.Принято                КАК ОсталосьПринять,
	|	ОборотыЗаказов.Принято                 КАК Принято,
	|	0                                      КАК Возвращено,
	|	0                                      КАК СуммаПоСпецификации,
	|	0                                      КАК СуммаЗаказано,
	|	ЕСТЬNULL(СуммыПоступлений.Сумма, 0)    КАК СуммаПринято,
	|	0                                      КАК СуммаВозвращено
	|ИЗ
	|	ОборотыЗаказов КАК ОборотыЗаказов
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			СуммыПоступлений КАК СуммыПоступлений
	|		ПО
	|			СуммыПоступлений.ПоступлениеТоваров = ОборотыЗаказов.Регистратор
	|			И СуммыПоступлений.Номенклатура = ОборотыЗаказов.Номенклатура
	|			И СуммыПоступлений.КодСтроки = ОборотыЗаказов.КодСтроки
	|ГДЕ
	|	ОборотыЗаказов.Регистратор ССЫЛКА Документ.ПоступлениеТоваров
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОборотыЗаказов.Спецификация            КАК Спецификация,
	|	ОборотыЗаказов.Номенклатура            КАК Номенклатура,
	|	ОборотыЗаказов.ЕдиницаИзмерения        КАК ЕдиницаИзмерения,
	|	0                                      КАК ПоСпецификации,
	|	0                                      КАК КЗаказу,
	|	-ОборотыЗаказов.ПринятоПоСпецификации  КАК ОсталосьЗаказать,
	|	0                                      КАК Заказано,
	|	0                                      КАК КПоступлению,
	|	0                                      КАК ОсталосьПринять,
	|	0                                      КАК Принято,
	|	0                                      КАК Возвращено,
	|	0                                      КАК СуммаПоСпецификации,
	|	0                                      КАК СуммаЗаказано,
	|	ЕСТЬNULL(СуммыПоступлений.Сумма, 0)    КАК СуммаПринято,
	|	0                                      КАК СуммаВозвращено
	|ИЗ
	|	ОборотыЗаказов КАК ОборотыЗаказов
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			СуммыПоступлений КАК СуммыПоступлений
	|		ПО
	|			СуммыПоступлений.ПоступлениеТоваров = ОборотыЗаказов.Регистратор
	|			И СуммыПоступлений.Номенклатура = ОборотыЗаказов.Номенклатура
	|			И СуммыПоступлений.КодСтроки <> ОборотыЗаказов.КодСтроки
	|			И СуммыПоступлений.КодСтроки = ОборотыЗаказов.КодСтрокиСпецификации
	|ГДЕ
	|	ОборотыЗаказов.Регистратор ССЫЛКА Документ.ПоступлениеТоваров
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОборотыЗаказов.Спецификация        КАК Спецификация,
	|	ОборотыЗаказов.Номенклатура        КАК Номенклатура,
	|	ОборотыЗаказов.ЕдиницаИзмерения    КАК ЕдиницаИзмерения,
	|	0                                  КАК ПоСпецификации,
	|	0                                  КАК КЗаказу,
	|	ОборотыЗаказов.Возвращено          КАК ОсталосьЗаказать,
	|	0                                  КАК Заказано,
	|	0                                  КАК КПоступлению,
	|	0                                  КАК ОсталосьПринять,
	|	0                                  КАК Принято,
	|	ОборотыЗаказов.Возвращено          КАК Возвращено,
	|	0                                  КАК СуммаПоСпецификации,
	|	0                                  КАК СуммаЗаказано,
	|	0                                  КАК СуммаПринято,
	|	ЕСТЬNULL(СуммыВозвратов.Сумма, 0)  КАК СуммаВозвращено
	|ИЗ
	|	ОборотыЗаказов КАК ОборотыЗаказов
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			СуммыВозвратов КАК СуммыВозвратов
	|		ПО
	|			СуммыВозвратов.ВозвратТоваров = ОборотыЗаказов.Регистратор
	|			И СуммыВозвратов.Номенклатура = ОборотыЗаказов.Номенклатура
	|			И СуммыВозвратов.КодСтроки = ОборотыЗаказов.КодСтрокиСпецификации
	|ГДЕ
	|	ОборотыЗаказов.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СводныеДанныеПоЗаказам.Спецификация                КАК Спецификация,
	|	СводныеДанныеПоЗаказам.Номенклатура                КАК Номенклатура,
	|	СводныеДанныеПоЗаказам.ЕдиницаИзмерения            КАК ЕдиницаИзмерения,
	|	СУММА(СводныеДанныеПоЗаказам.ПоСпецификации)       КАК ПоСпецификации,
	|	СУММА(СводныеДанныеПоЗаказам.КЗаказу)              КАК КЗаказу,
	|	СУММА(СводныеДанныеПоЗаказам.ОсталосьЗаказать)     КАК ОсталосьЗаказать,
	|	СУММА(СводныеДанныеПоЗаказам.Заказано)             КАК Заказано,
	|	СУММА(СводныеДанныеПоЗаказам.КПоступлению)         КАК КПоступлению,
	|	СУММА(СводныеДанныеПоЗаказам.ОсталосьПринять)      КАК ОсталосьПринять,
	|	СУММА(СводныеДанныеПоЗаказам.Принято)              КАК Принято,
	|	СУММА(СводныеДанныеПоЗаказам.Возвращено)           КАК Возвращено,
	|	СУММА(СводныеДанныеПоЗаказам.СуммаПоСпецификации)  КАК СуммаПоСпецификации,
	|	СУММА(СводныеДанныеПоЗаказам.СуммаЗаказано)        КАК СуммаЗаказано,
	|	СУММА(СводныеДанныеПоЗаказам.СуммаПринято)         КАК СуммаПринято,
	|	СУММА(СводныеДанныеПоЗаказам.СуммаВозвращено)      КАК СуммаВозвращено
	|ПОМЕСТИТЬ СводныеДанныеПоЗаказам
	|ИЗ
	|	Заказы КАК СводныеДанныеПоЗаказам
	|
	|СГРУППИРОВАТЬ ПО
	|	СводныеДанныеПоЗаказам.Спецификация,
	|	СводныеДанныеПоЗаказам.Номенклатура,
	|	СводныеДанныеПоЗаказам.ЕдиницаИзмерения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	
	// По спецификации
	
	|ВЫБРАТЬ
	|	СводныеДанныеПоЗаказам.Спецификация         КАК Документ,
	|	СводныеДанныеПоЗаказам.Номенклатура         КАК Номенклатура,
	|	СводныеДанныеПоЗаказам.ЕдиницаИзмерения     КАК ЕдиницаИзмерения,
	|	СводныеДанныеПоЗаказам.ПоСпецификации       КАК ПоСпецификации,
	|	СводныеДанныеПоЗаказам.СуммаПоСпецификации  КАК СуммаПоСпецификации
	|ИЗ
	|	СводныеДанныеПоЗаказам КАК СводныеДанныеПоЗаказам
	|ГДЕ
	|	СводныеДанныеПоЗаказам.ПоСпецификации > 0
	|	И СводныеДанныеПоЗаказам.Заказано = 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Документ,
	|	Номенклатура,
	|	ЕдиницаИзмерения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	
	// В процессе заказа
	
	|ВЫБРАТЬ
	|	СводныеДанныеПоЗаказам.Спецификация      КАК Документ,
	|	СводныеДанныеПоЗаказам.Номенклатура      КАК Номенклатура,
	|	СводныеДанныеПоЗаказам.ЕдиницаИзмерения  КАК ЕдиницаИзмерения,
	|	СводныеДанныеПоЗаказам.КЗаказу           КАК КЗаказу,
	|	СводныеДанныеПоЗаказам.ОсталосьЗаказать  КАК ОсталосьЗаказать,
	|	СводныеДанныеПоЗаказам.Заказано          КАК Заказано
	|ИЗ
	|	СводныеДанныеПоЗаказам КАК СводныеДанныеПоЗаказам
	|ГДЕ
	|	СводныеДанныеПоЗаказам.ОсталосьЗаказать > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Документ,
	|	Номенклатура,
	|	ЕдиницаИзмерения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	
	// Заказано
	
	|ВЫБРАТЬ
	|	СводныеДанныеПоЗаказам.Спецификация      КАК Документ,
	|	СводныеДанныеПоЗаказам.Номенклатура      КАК Номенклатура,
	|	СводныеДанныеПоЗаказам.ЕдиницаИзмерения  КАК ЕдиницаИзмерения,
	|	СводныеДанныеПоЗаказам.Заказано          КАК Заказано,
	|	СводныеДанныеПоЗаказам.СуммаЗаказано     КАК СуммаЗаказано
	|ИЗ
	|	СводныеДанныеПоЗаказам КАК СводныеДанныеПоЗаказам
	|ГДЕ
	|	СводныеДанныеПоЗаказам.Заказано > 0
	|	И СводныеДанныеПоЗаказам.Принято = 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Документ,
	|	Номенклатура,
	|	ЕдиницаИзмерения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	
	// В процессе поступления
	
	|ВЫБРАТЬ
	|	СводныеДанныеПоЗаказам.Спецификация      КАК Документ,
	|	СводныеДанныеПоЗаказам.Номенклатура      КАК Номенклатура,
	|	СводныеДанныеПоЗаказам.ЕдиницаИзмерения  КАК ЕдиницаИзмерения,
	|	СводныеДанныеПоЗаказам.КПоступлению      КАК КПоступлению,
	|	СводныеДанныеПоЗаказам.ОсталосьПринять   КАК ОсталосьПринять,
	|	СводныеДанныеПоЗаказам.Принято           КАК Принято
	|ИЗ
	|	СводныеДанныеПоЗаказам КАК СводныеДанныеПоЗаказам
	|ГДЕ
	|	СводныеДанныеПоЗаказам.ОсталосьПринять > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Документ,
	|	Номенклатура,
	|	ЕдиницаИзмерения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	
	// Поступило полностью
	
	|ВЫБРАТЬ
	|	СводныеДанныеПоЗаказам.Спецификация      КАК Документ,
	|	СводныеДанныеПоЗаказам.Номенклатура      КАК Номенклатура,
	|	СводныеДанныеПоЗаказам.ЕдиницаИзмерения  КАК ЕдиницаИзмерения,
	|	СводныеДанныеПоЗаказам.Принято           КАК Принято,
	|	СводныеДанныеПоЗаказам.СуммаПринято      КАК СуммаПринято
	|ИЗ
	|	СводныеДанныеПоЗаказам КАК СводныеДанныеПоЗаказам
	|ГДЕ
	|	СводныеДанныеПоЗаказам.ОсталосьПринять <= 0
	|	И СводныеДанныеПоЗаказам.Принято > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Документ,
	|	Номенклатура,
	|	ЕдиницаИзмерения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	
	// Возвращено
	
	|ВЫБРАТЬ
	|	СводныеДанныеПоЗаказам.Спецификация      КАК Документ,
	|	СводныеДанныеПоЗаказам.Номенклатура      КАК Номенклатура,
	|	СводныеДанныеПоЗаказам.ЕдиницаИзмерения  КАК ЕдиницаИзмерения,
	|	СводныеДанныеПоЗаказам.Возвращено        КАК Возвращено,
	|	СводныеДанныеПоЗаказам.СуммаВозвращено   КАК СуммаВозвращено
	|ИЗ
	|	СводныеДанныеПоЗаказам КАК СводныеДанныеПоЗаказам
	|ГДЕ
	|	СводныеДанныеПоЗаказам.Возвращено > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Документ,
	|	Номенклатура,
	|	ЕдиницаИзмерения
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти // ФормированиеОтчетов

////////////////////////////////////////////////////////////////////////////////
// Команды формы
#Область КомандыФормы

// Заполняет список команд ввода на основании.
// 
// Параметры:
//   КомандыСоздатьНаОсновании - ТаблицаЗначений - Таблица команд для вывода в подменю. Для изменения.
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСоздатьНаОсновании, НастройкиФормы) Экспорт
	
	ВводНаОснованииБольничнаяАптека.ДобавитьКомандыСозданияНаОсновании(ПустаяСсылка().Метаданные().ПолноеИмя(), КомандыСоздатьНаОсновании, НастройкиФормы);
	
КонецПроцедуры

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица команд для вывода в подменю. Для изменения.
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, НастройкиФормы) Экспорт
	
	МенюОтчетыБольничнаяАптека.ДобавитьОбщиеКоманды(ПустаяСсылка().Метаданные().ПолноеИмя(), КомандыОтчетов, НастройкиФормы);
	
	Отчеты.СостояниеВыполненияДокументов.ДобавитьКомандуОтчета(КомандыОтчетов);
	
КонецПроцедуры

#КонецОбласти // КомандыФормы

#КонецОбласти // СлужебныеПроцедурыИФункции

////////////////////////////////////////////////////////////////////////////////
// СТАНДАРТНЫЕ ПОДСИСТЕМЫ
#Область СтандартныеПодсистемы

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
//
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти // СтандартныеПодсистемы

////////////////////////////////////////////////////////////////////////////////
// ОБНОВЛЕНИЕ ИНФОРМАЦИОННОЙ БАЗЫ
#Область ОбновлениеИнформационнойБазы

Процедура ЗаполнитьНалогообложениеНДСДанныеДляОбновления(Параметры) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	Ссылка
	|ИЗ
	|	Документ.СпецификацияКДоговору
	|ГДЕ
	|	НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|	И НЕ ПометкаУдаления
	|");
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
КонецПроцедуры

Процедура ЗаполнитьНалогообложениеНДСОтложено(Параметры) Экспорт
	
	МетаданныеОбъекта = ПустаяСсылка().Метаданные();
	ПолноеИмяОбъекта = МетаданныеОбъекта.ПолноеИмя();
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Выборка = ОбновлениеИнформационнойБазы.ВыбратьСсылкиДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта);
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъекта);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
			Блокировка.Заблокировать();
			
			Документ = Выборка.Ссылка.ПолучитьОбъект();
			
			Если Документ = Неопределено
			 Или ЗначениеЗаполнено(Документ.НалогообложениеНДС) Тогда
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Ссылка);
				ЗафиксироватьТранзакцию();
				Продолжить;
			КонецЕсли;
			
			Документ.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС;
			
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(Документ);
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстСообщения = НСтр("ru = 'Не удалось обработать документ: %Ссылка% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%",  Выборка.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(
				ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Предупреждение,
				МетаданныеОбъекта,
				Выборка.Ссылка,
				ТекстСообщения);
			
			ВызватьИсключение;
			
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры

#КонецОбласти // ОбновлениеИнформационнойБазы

#КонецЕсли