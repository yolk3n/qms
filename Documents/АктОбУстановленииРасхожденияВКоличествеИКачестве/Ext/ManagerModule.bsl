#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС
#Область ПрограммныйИнтерфейс

// Имена реквизитов, от значений которых зависят параметры учета номенклатуры.
//
// Возвращаемое значение:
//   Строка - имена реквизитов, перечисленные через запятую.
//
Функция ИменаРеквизитовДляЗаполненияПараметровУчетаНоменклатуры() Экспорт
	
	Возврат "ДокументПоступления";
	
КонецФункции

// Возвращает параметры учета для номенклатуры, указанной в документе.
//
// Параметры
//   Объект - Структура - структура значений реквизитов объекта, необходимых для заполнения параметров указания серий.
// Возвращаемое значение
//   Структура - Состав полей задается в функции НоменклатураКлиентСервер.ПараметрыУчетаНоменклатуры.
//
Функция ПараметрыУчетаНоменклатуры(Объект) Экспорт
	
	ПараметрыУчета = ЗапасыСервер.ПараметрыУчетаНоменклатуры();
	ПараметрыУчета.ПолноеИмяОбъекта = ПустаяСсылка().Метаданные().ПолноеИмя();
	
	Склад = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ДокументПоступления, "Склад");
	
	ПараметрыУчетаНаСкладе = СкладыСервер.ПараметрыУчетаНоменклатуры(Склад);
	ПараметрыУчета.ИспользоватьСерии = ПараметрыУчетаНаСкладе.ИспользоватьСерииНоменклатуры;
	ПараметрыУчета.Склад = Склад;
	
	Возврат ПараметрыУчета;
	
КонецФункции

// Возвращает текст запроса для расчета статусов указания параметров учета номенклатуры.
//
// Параметры
//   ПараметрыУчетаНоменклатуры - Структура - состав полей задается в функции ЗапасыСервер.ПараметрыУчетаНоменклатуры.
//
// Возвращаемое значение
//   Строка - текст запроса
//
Функция ТекстЗапросаРасчетаСтатусовУчетаНоменклатуры(ПараметрыУчетаНоменклатуры) Экспорт
	
	Возврат ЗапасыСервер.ТекстЗапросаРасчетаСтатусовУчетаНоменклатуры(ПараметрыУчетаНоменклатуры);
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	И ЗначениеРазрешено(ПодразделениеОрганизации)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти // ПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

////////////////////////////////////////////////////////////////////////////////
// Печать
#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	УправлениеПечатьюБольничнаяАптека.ДобавитьКомандыПечати(ПустаяСсылка().Метаданные().ПолноеИмя(), КомандыПечати);
	
КонецПроцедуры

// Возвращает список доступных печатных форм документа
//
Функция ДоступныеПечатныеФормы() Экспорт
	
	ПечатныеФормы = УправлениеПечатьюБольничнаяАптека.СоздатьКоллекциюДоступныхПечатныхФорм();
	
	Обработки.ПечатьАктПриемкиМатериалов0504220.ДобавитьПечатнуюФорму(ПечатныеФормы);
	
	МетаданныеДокумента = ПустаяСсылка().Метаданные();
	МенеджерПечати      = МетаданныеДокумента.ПолноеИмя();
	МетаданныеМакетов   = МетаданныеДокумента.Макеты;
	
	ПечатнаяФорма = УправлениеПечатьюБольничнаяАптека.ДобавитьПечатнуюФорму(ПечатныеФормы, "ТОРГ2", МенеджерПечати);
	ПечатнаяФорма.Представление = НСтр("ru='Акт об установлении расхождения по количеству (ТОРГ-2)'");
	ПечатнаяФорма.ПутьКМакету = ФормированиеПечатныхФормБольничнаяАптека.ПутьКМакету(МетаданныеМакетов.ПФ_MXL_ТОРГ2);
	УправлениеПечатьюБольничнаяАптека.ДобавитьКомандуПечати(ПечатнаяФорма);
	
	ПечатнаяФорма = УправлениеПечатьюБольничнаяАптека.ДобавитьПечатнуюФорму(ПечатныеФормы, "АП2_88", МенеджерПечати);
	ПечатнаяФорма.Представление = НСтр("ru='Акт об установленном расхождении в количестве и качестве(АП-2)'");
	ПечатнаяФорма.ПутьКМакету = ФормированиеПечатныхФормБольничнаяАптека.ПутьКМакету(МетаданныеМакетов.ПФ_MXL_АП2_88);
	УправлениеПечатьюБольничнаяАптека.ДобавитьКомандуПечати(ПечатнаяФорма);
	
	ПечатнаяФорма = УправлениеПечатьюБольничнаяАптека.ДобавитьПечатнуюФорму(ПечатныеФормы, "М7_Шапка", МенеджерПечати);
	ПечатнаяФорма.Представление = НСтр("ru='М-7 (Акт о приемке материалов)'");
	ПечатнаяФорма.ПутьКМакету = ФормированиеПечатныхФормБольничнаяАптека.ПутьКМакету(МетаданныеМакетов.ПФ_MXL_М7_Шапка);
	
	ПечатнаяФорма = УправлениеПечатьюБольничнаяАптека.ДобавитьПечатнуюФорму(ПечатныеФормы, "М7_ТабличнаяЧасть", МенеджерПечати);
	ПечатнаяФорма.Представление = НСтр("ru='М-7 (Акт о приемке материалов)(таблицы)'");
	ПечатнаяФорма.ПутьКМакету = ФормированиеПечатныхФормБольничнаяАптека.ПутьКМакету(МетаданныеМакетов.ПФ_MXL_М7_ТабличнаяЧасть);
	
	ПечатнаяФорма = УправлениеПечатьюБольничнаяАптека.ДобавитьПечатнуюФорму(ПечатныеФормы, "М7_Шапка,М7_ТабличнаяЧасть", МенеджерПечати);
	ПечатнаяФорма.Представление = НСтр("ru='Акт о приемке материалов (М-7)'");
	ПечатнаяФорма.ФиксированныйКомплект = Истина;
	УправлениеПечатьюБольничнаяАптека.ДобавитьКомандуПечати(ПечатнаяФорма);
	
	Возврат ПечатныеФормы;
	
КонецФункции

Функция ПолучитьТекстЗапросаДанныеДляПечати()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Документ.Ссылка                                            КАК Ссылка,
	|	Документ.Номер                                             КАК НомерДокумента,
	|	Документ.Дата                                              КАК ДатаДокумента,
	|	Документ.ДокументПоступления.НомерВходящегоДокумента       КАК НомерВходящегоДокумента,
	|	Документ.ДокументПоступления.ДатаВходящегоДокумента        КАК ДатаВходящегоДокумента,
	|	Документ.ДокументПоступления.Организация.Префикс           КАК ПрефиксВходящегоДокумента,
	|	Документ.Организация                                       КАК Организация,
	|	Документ.Организация                                       КАК Получатель,
	|	Документ.Организация.КодПоОКПО                             КАК КодОКПО,
	|	НЕОПРЕДЕЛЕНО                                               КАК БанковскийСчет,
	|	""""                                                       КАК АдресДоставки,
	|	Документ.Контрагент                                        КАК Контрагент,
	|	Документ.Контрагент                                        КАК Отправитель,
	|	Документ.ДоговорКонтрагента                                КАК Договор,
	|	ВЫБОР
	|		КОГДА Документ.ДокументПоступления.Грузоотправитель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА Документ.Контрагент
	|		ИНАЧЕ Документ.ДокументПоступления.Грузоотправитель
	|	КОНЕЦ                                                      КАК Грузоотправитель,
	|	Документ.ПодразделениеОрганизации                          КАК Подразделение,
	|	Документ.ПодразделениеОрганизации                          КАК ПолучательПодразделение,
	|	Документ.ПодразделениеОрганизации.Представление            КАК ПредставлениеПодразделения,
	|	Документ.Валюта                                            КАК Валюта,
	|	Документ.ЦенаВключаетНДС                                   КАК ЦенаВключаетНДС
	|ИЗ
	|	Документ.АктОбУстановленииРасхожденияВКоличествеИКачестве КАК Документ
	|ГДЕ
	|	Документ.Ссылка В(&ТекущийДокумент)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Ссылка КАК Ссылка,
	|	Товары.НомерСтроки,
	|	Товары.Номенклатура,
	|	Товары.ТоварНаименование,
	|	Товары.ТоварКод,
	|	Товары.Серия,
	|	Товары.СерийныйНомер,
	|	Товары.СрокГодности,
	|	Товары.ЕдиницаИзмерения,
	|	Товары.КодПоОКЕИ,
	|	Товары.Цена,
	|	Товары.Количество,
	|	Товары.КоличествоПоДокументу,
	|	Товары.КоличествоИзлишки,
	|	Товары.КоличествоНедостача,
	|	Товары.КоличествоНедостачаВПределахНорм,
	|	Товары.КоличествоБрак,
	|	Товары.КоличествоБой,
	|	Товары.КоличествоБойВПределахНорм,
	|	Товары.ЕстьОтклонения,
	|	Товары.СуммаСНДС,
	|	Товары.ЦенаСНДС,
	|	Товары.Сумма,
	|	Товары.СтавкаНДС,
	|	Товары.СуммаНДС,
	|	Товары.КоличествоПоДокументу * Товары.ЦенаСНДС КАК СуммаПоДокументу
	|ИЗ
	|	(ВЫБРАТЬ
	|		Документ.Ссылка                            КАК Ссылка,
	|		Документ.НомерСтроки                       КАК НомерСтроки,
	|		Документ.Номенклатура                      КАК Номенклатура,
	|		Документ.Номенклатура.НаименованиеПолное   КАК ТоварНаименование,
	|		Документ.Номенклатура.Код                  КАК ТоварКод,
	|		Документ.СерияНоменклатуры                 КАК Серия,
	|		Документ.СерияНоменклатуры.Номер           КАК СерийныйНомер,
	|		Документ.СерияНоменклатуры.ГоденДо         КАК СрокГодности,
	|		Документ.ЕдиницаИзмерения                  КАК ЕдиницаИзмерения,
	|		Документ.ЕдиницаИзмерения.КодОКЕИ          КАК КодПоОКЕИ,
	|		Документ.Цена                              КАК Цена,
	|		Документ.КоличествоВЕдиницахИзмерения      КАК Количество,
	|		Документ.КоличествоПоДокументу             КАК КоличествоПоДокументу,
	|		Документ.КоличествоИзлишки                 КАК КоличествоИзлишки,
	|		Документ.КоличествоНедостача               КАК КоличествоНедостача,
	|		Документ.КоличествоНедостачаВПределахНорм  КАК КоличествоНедостачаВПределахНорм,
	|		Документ.КоличествоБрак                    КАК КоличествоБрак,
	|		Документ.КоличествоБой                     КАК КоличествоБой,
	|		Документ.КоличествоБойВПределахНорм        КАК КоличествоБойВПределахНорм,
	|		ВЫБОР
	|			КОГДА Документ.КоличествоВЕдиницахИзмерения = Документ.КоличествоПоДокументу
	|					И Документ.КоличествоИзлишки = 0
	|					И Документ.КоличествоНедостача = 0
	|					И Документ.КоличествоНедостачаВПределахНорм = 0
	|					И Документ.КоличествоБрак = 0
	|					И Документ.КоличествоБой = 0
	|					И Документ.КоличествоБойВПределахНорм = 0
	|				ТОГДА ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ                                      КАК ЕстьОтклонения,
	|		ВЫБОР
	|			КОГДА Документ.Ссылка.ЦенаВключаетНДС
	|				ТОГДА Документ.Сумма
	|			ИНАЧЕ Документ.Сумма + Документ.СуммаНДС
	|		КОНЕЦ                                      КАК СуммаСНДС,
	|		ВЫБОР
	|			КОГДА Документ.Ссылка.ЦенаВключаетНДС
	|				ТОГДА Документ.Цена
	|			ИНАЧЕ ВЫРАЗИТЬ(ВЫБОР
	|						КОГДА Документ.КоличествоВЕдиницахИзмерения = 0
	|							ТОГДА 0
	|						ИНАЧЕ (Документ.Сумма + Документ.СуммаНДС * ВЫБОР
	|								КОГДА Документ.Ссылка.ЦенаВключаетНДС
	|									ТОГДА 0
	|								ИНАЧЕ 1
	|							КОНЕЦ) / Документ.КоличествоВЕдиницахИзмерения
	|					КОНЕЦ КАК ЧИСЛО(15, 2))
	|		КОНЕЦ                                      КАК ЦенаСНДС,
	|		Документ.Сумма                             КАК Сумма,
	|		Документ.СтавкаНДС                         КАК СтавкаНДС,
	|		Документ.СуммаНДС                          КАК СуммаНДС
	|	ИЗ
	|		Документ.АктОбУстановленииРасхожденияВКоличествеИКачестве.Товары КАК Документ
	|	ГДЕ
	|		Документ.Ссылка В(&ТекущийДокумент)) КАК Товары
	|ГДЕ
	|	&ВключатьВсеСтроки ИЛИ Товары.ЕстьОтклонения
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(СуммаПоДокументу) КАК СуммаПоДокументу
	|ПО
	|	Ссылка
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ПечатьТОРГ2(МассивОбъектов, ОбъектыПечати) Экспорт
	
	ВалютаПечати = ЗначениеНастроекБольничнаяАптекаПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	// Зададим параметры макета
	ТабДокумент.АвтоМасштаб = Истина;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_АктОбУстановленииРасхожденияВКоличествеИКачестве_ТОРГ2";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.АктОбУстановленииРасхожденияВКоличествеИКачестве.ПФ_MXL_ТОРГ2");
	
	Запрос = Новый Запрос;
	Запрос.Текст = ПолучитьТекстЗапросаДанныеДляПечати();
	Запрос.УстановитьПараметр("ТекущийДокумент", МассивОбъектов);
	Запрос.УстановитьПараметр("ВключатьВсеСтроки", Ложь);
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	Шапка = РезультатыЗапроса[0].Выбрать();
	ВыборкаПоДокументам = РезультатыЗапроса[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	Пока Шапка.Следующий() Цикл
		
		// Найдем в выборке товары по текущему документу
		СтруктураПоиска = Новый Структура("Ссылка", Шапка.Ссылка);
		НайденСледующий = ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска);
		
		Если НайденСледующий Тогда
			ВыборкаПоТоварам = ВыборкаПоДокументам.Выбрать();
		Иначе
			Продолжить;
		КонецЕсли;
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		//////////////////////////////////////////////////////////////////////////////
		// Лист 1
		//
		
		ОбластьЛист1 = Макет.ПолучитьОбласть("Лист1");
		
		ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(Шапка.Ссылка, ТабДокумент, Макет, ОбластьЛист1);
		
		// Выводим общие реквизиты шапки
		СведенияОПокупателе = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Шапка.Организация, Шапка.ДатаДокумента);
		СведенияОПоставщике = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.ДатаДокумента);
		СведенияОГрузоотправителе = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Шапка.Грузоотправитель, Шапка.ДатаДокумента);
		
		ОбластьЛист1.Параметры.Заполнить(Шапка);
		
		ОбластьЛист1.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПокупателе);
		ОбластьЛист1.Параметры.Дата  = Шапка.ДатаДокумента;
		ОбластьЛист1.Параметры.Номер = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Шапка.НомерДокумента);
		
		ОтветственныеЛица = ОтветственныеЛицаСервер.ПолучитьОтветственныеЛицаОрганизации(Шапка.Организация, Шапка.ДатаДокумента);
		Руководитель = ФизическиеЛицаКлиентСервер.ФамилияИнициалы(СокрЛП(ОтветственныеЛица.Руководитель));
		Бухгалтер    = ФизическиеЛицаКлиентСервер.ФамилияИнициалы(СокрЛП(ОтветственныеЛица.ГлавныйБухгалтер));
		
		ОбластьЛист1.Параметры.ПерРуководитель = Руководитель;
		ОбластьЛист1.Параметры.ПечДолжностьРуководителя = ОтветственныеЛица.РуководительДолжность;
		
		ОбластьЛист1.Параметры.ПредставлениеПоставщика = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике, "ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны");
		Если ЗначениеЗаполнено(Шапка.Грузоотправитель) Тогда
			ОбластьЛист1.Параметры.ПредставлениеГрузоотправителя = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОГрузоотправителе, "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны");
		Иначе
			ОбластьЛист1.Параметры.ПредставлениеГрузоотправителя = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике, "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны");
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьЛист1);
		
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		//////////////////////////////////////////////////////////////////////////////
		// Лист 2
		//
		
		ОбластьЛист2_1 = Макет.ПолучитьОбласть("Лист2_1");
		ТабДокумент.Вывести(ОбластьЛист2_1);
		
		ВыборкаПоТоварам.Сбросить();
		Пока ВыборкаПоТоварам.Следующий() Цикл
			
			НоваяСтрока = Макет.ПолучитьОбласть("СтрокиЛиста2_1");
			НоваяСтрока.Параметры.Заполнить(ВыборкаПоТоварам);
			НоваяСтрока.Параметры.Наименование = ОбщегоНазначенияБольничнаяАптека.ПолучитьПредставлениеНоменклатурыДляПечати(ВыборкаПоТоварам.ТоварНаименование, ВыборкаПоТоварам.Серия);
			
			ТабДокумент.Вывести(НоваяСтрока);
			
		КонецЦикла;
		
		ОбластьЛист2_2 = Макет.ПолучитьОбласть("Лист2_2");
		ТабДокумент.Вывести(ОбластьЛист2_2);
		
		ОбластьЛист2_3 = Макет.ПолучитьОбласть("Лист2_3");
		ТабДокумент.Вывести(ОбластьЛист2_3);
		
		НомерСтроки = 0;
		ВыборкаПоТоварам.Сбросить();
		Пока ВыборкаПоТоварам.Следующий() Цикл
			
			НомерСтроки = НомерСтроки + 1;
			
			НоваяСтрока=Макет.ПолучитьОбласть("СтрокиЛиста2_2");
			НоваяСтрока.Параметры.Заполнить(ВыборкаПоТоварам);
			НоваяСтрока.Параметры.пп = НомерСтроки;
			НоваяСтрока.Параметры.Товар = ОбщегоНазначенияБольничнаяАптека.ПолучитьПредставлениеНоменклатурыДляПечати(ВыборкаПоТоварам.ТоварНаименование, ВыборкаПоТоварам.Серия);
			
			НоваяСтрока.Параметры.Цена  = ВыборкаПоТоварам.ЦенаСНДС;
			НоваяСтрока.Параметры.Сумма = Окр(ВыборкаПоТоварам.КоличествоПоДокументу * ВыборкаПоТоварам.ЦенаСНДС, 2);
			
			ТабДокумент.Вывести(НоваяСтрока);
			
		КонецЦикла;
		
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		//////////////////////////////////////////////////////////////////////////////
		// Лист 3
		
		ОбластьЛист3_1 = Макет.ПолучитьОбласть("Лист3_1");
		ТабДокумент.Вывести(ОбластьЛист3_1);
		
		ОбластьЛист3_2 = Макет.ПолучитьОбласть("Лист3_2");
		ТабДокумент.Вывести(ОбластьЛист3_2);
		
		
		НомерСтроки = 0;
		ВыборкаПоТоварам.Сбросить();
		Пока ВыборкаПоТоварам.Следующий() Цикл
			
			НомерСтроки = НомерСтроки + 1;
			
			НоваяСтрока = Макет.ПолучитьОбласть("СтрокиЛиста3_1");
			НоваяСтрока.Параметры.Заполнить(ВыборкаПоТоварам);
			НоваяСтрока.Параметры.ПП = НомерСтроки;
			
			НоваяСтрока.Параметры.Цена = ВыборкаПоТоварам.ЦенаСНДС;
			НоваяСтрока.Параметры.Сумма 			= ВыборкаПоТоварам.СуммаСНДС;//Окр(Выборка.КоличествоПоДокументу * Цена, 2);
			НоваяСтрока.Параметры.СуммаБрак 		= Окр(ВыборкаПоТоварам.КоличествоБрак * ВыборкаПоТоварам.ЦенаСНДС, 2);
			НоваяСтрока.Параметры.СуммаБой 			= Окр(ВыборкаПоТоварам.КоличествоБой * ВыборкаПоТоварам.ЦенаСНДС, 2);
			НоваяСтрока.Параметры.СуммаНедостача 	= Окр(ВыборкаПоТоварам.КоличествоНедостача * ВыборкаПоТоварам.ЦенаСНДС, 2);
			НоваяСтрока.Параметры.СуммаИзлишки 		= Окр(ВыборкаПоТоварам.КоличествоИзлишки * ВыборкаПоТоварам.ЦенаСНДС, 2);
			
			ТабДокумент.Вывести(НоваяСтрока);	
			
		КонецЦикла;
		
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		//////////////////////////////////////////////////////////////////////////////
		// Лист 4
		//
		
		ОбластьЛист4 = Макет.ПолучитьОбласть("Лист4");
		ТабДокумент.Вывести(ОбластьЛист4);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции

Функция ПечатьАП2_88(МассивОбъектов, ОбъектыПечати) Экспорт
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_АктОбУстановленииРасхожденияВКоличествеИКачестве_АП2_88";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.АктОбУстановленииРасхожденияВКоличествеИКачестве.ПФ_MXL_АП2_88");
	
	Запрос = Новый Запрос;
	Запрос.Текст = ПолучитьТекстЗапросаДанныеДляПечати();
	Запрос.УстановитьПараметр("ТекущийДокумент", МассивОбъектов);
	Запрос.УстановитьПараметр("ВключатьВсеСтроки", Истина);
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	Шапка = РезультатыЗапроса[0].Выбрать();
	ВыборкаПоДокументам = РезультатыЗапроса[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	Пока Шапка.Следующий() Цикл
		
		// Найдем в выборке товары по текущему документу
		СтруктураПоиска = Новый Структура("Ссылка", Шапка.Ссылка);
		НайденСледующий = ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска);
		
		Если НайденСледующий Тогда
			ВыборкаПоТоварам = ВыборкаПоДокументам.Выбрать();
		Иначе
			Продолжить;
		КонецЕсли;
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		// Выводим общие реквизиты шапки
		СведенияОПокупателе = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Шапка.Организация, Шапка.ДатаДокумента);
		СведенияОПоставщике = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.ДатаДокумента);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		
		ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(Шапка.Ссылка, ТабДокумент, Макет, ОбластьМакета);
		
		ОбластьМакета.Параметры.Организация = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПокупателе, "ПолноеНаименование");
		
		ОтветственныеЛица = ОтветственныеЛицаСервер.ПолучитьОтветственныеЛицаОрганизации(Шапка.Организация, Шапка.ДатаДокумента);
		ОбластьМакета.Параметры.Руководитель = ФизическиеЛицаКлиентСервер.ФамилияИнициалы(СокрЛП(ОтветственныеЛица.Руководитель));
		ОбластьМакета.Параметры.Дата = Формат(Шапка.ДатаДокумента, "ДЛФ=D");
		ОбластьМакета.Параметры.Номер = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Шапка.НомерДокумента);
		ТабДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТабл");
		ТабДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Строка");
		
		ВыборкаПоТоварам.Сбросить();
		Пока ВыборкаПоТоварам.Следующий() Цикл
			
			ОбластьМакета.Параметры.Заполнить(ВыборкаПоТоварам);
			
			ОбластьМакета.Параметры.Номенклатура = ОбщегоНазначенияБольничнаяАптека.ПолучитьПредставлениеНоменклатурыДляПечати(ВыборкаПоТоварам.ТоварНаименование, ВыборкаПоТоварам.Серия);
			
			КоличествоПоДокументу             = ВыборкаПоТоварам.КоличествоПоДокументу;
			КоличествоНедостача               = ВыборкаПоТоварам.КоличествоНедостача - ВыборкаПоТоварам.КоличествоНедостачаВПределахНорм;
			КоличествоНедостачаВПределахНорм  = ВыборкаПоТоварам.КоличествоНедостачаВПределахНорм;
			КоличествоБой                     = ВыборкаПоТоварам.КоличествоБой - ВыборкаПоТоварам.КоличествоБойВПределахНорм;
			КоличествоБойВПределахНорм        = ВыборкаПоТоварам.КоличествоБойВПределахНорм;
			КоличествоБрак                    = ВыборкаПоТоварам.КоличествоБрак;
			КоличествоИзлишки                 = ВыборкаПоТоварам.КоличествоИзлишки;
			
			ОбластьМакета.Параметры.КоличествоПоДокументу             = КоличествоПоДокументу;
			ОбластьМакета.Параметры.КоличествоНедостача               = КоличествоНедостача;
			ОбластьМакета.Параметры.КоличествоНедостачаВПределахНорм  = КоличествоНедостачаВПределахНорм;
			ОбластьМакета.Параметры.КоличествоБой                     = КоличествоБой;
			ОбластьМакета.Параметры.КоличествоБойВПределахНорм        = КоличествоБойВПределахНорм;
			ОбластьМакета.Параметры.КоличествоБрак                    = КоличествоБрак;
			ОбластьМакета.Параметры.КоличествоИзлишки                 = КоличествоИзлишки;
			
			Если Шапка.ЦенаВключаетНДС Или ВыборкаПоТоварам.Количество = 0 Тогда
				Цена = ВыборкаПоТоварам.Цена;
			Иначе
				Цена = Окр((ВыборкаПоТоварам.Сумма + ВыборкаПоТоварам.СуммаНДС)/ ВыборкаПоТоварам.Количество, 2);
			КонецЕсли;
			
			ОбластьМакета.Параметры.Цена = Цена;
			
			ОбластьМакета.Параметры.СуммаФакт                = ВыборкаПоТоварам.Сумма;
			ОбластьМакета.Параметры.Сумма                    = Цена * КоличествоПоДокументу;
			ОбластьМакета.Параметры.СуммаНедостачи           = Цена * КоличествоНедостача;
			ОбластьМакета.Параметры.СуммаНедостачиВПределах  = Цена * КоличествоНедостачаВПределахНорм;
			ОбластьМакета.Параметры.СуммаБоя                 = Цена * КоличествоБой;
			ОбластьМакета.Параметры.СуммаБояВПределах        = Цена * КоличествоБойВПределахНорм;
			ОбластьМакета.Параметры.СуммаБрака               = Цена * КоличествоБрак;
			ОбластьМакета.Параметры.СуммаИзлишек             = Цена * КоличествоИзлишки;
			
			ТабДокумент.Вывести(ОбластьМакета);
			
		КонецЦикла;
		
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		ТабДокумент.Вывести(ОбластьМакета);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции

Функция ПечатьМ7_Шапка(МассивОбъектов, ОбъектыПечати) Экспорт
	
	ВалютаПечати = ЗначениеНастроекБольничнаяАптекаПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_АктОбУстановленииРасхожденияВКоличествеИКачестве_М7_Шапка";
	
	// Зададим параметры макета
	ТабДокумент.АвтоМасштаб = Истина;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.АктОбУстановленииРасхожденияВКоличествеИКачестве.ПФ_MXL_М7_Шапка");
	
	Запрос = Новый Запрос;
	Запрос.Текст = ПолучитьТекстЗапросаДанныеДляПечати();
	Запрос.УстановитьПараметр("ТекущийДокумент", МассивОбъектов);
	Запрос.УстановитьПараметр("ВключатьВсеСтроки", Истина);
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	Шапка = РезультатыЗапроса[0].Выбрать();
	ВыборкаПоДокументам = РезультатыЗапроса[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ВсегоДокументовВШапке = Шапка.Количество();
	ПервыйДокумент = Истина;
	Пока Шапка.Следующий() Цикл
		
		// Найдем в выборке товары по текущему документу
		СтруктураПоиска = Новый Структура("Ссылка", Шапка.Ссылка);
		НайденСледующий = ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска);
		
		Если НайденСледующий Тогда
			ВыборкаПоТоварам = ВыборкаПоДокументам.Выбрать();
		Иначе
			Продолжить;
		КонецЕсли;
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		//////////////////////////////////////////////////////////////////////////////
		// Лист 1
		//
		ОбластьМакетаЗаголовок     = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакетаШапка1        = Макет.ПолучитьОбласть("Шапка1");
		ОбластьМакетаСтрока1       = Макет.ПолучитьОбласть("Строка1");
		ОбластьМакетаСтрока1Пустая = Макет.ПолучитьОбласть("Строка1Пустая");
		ОбластьМакетаКонцевик1     = Макет.ПолучитьОбласть("Концевик1");
		ОбластьМакетаТаблица1      = Макет.ПолучитьОбласть("Таблица1");
		ОбластьМакетаСтраница2     = Макет.ПолучитьОбласть("Страница2");
		ОбластьМакетаСтраница4     = Макет.ПолучитьОбласть("Страница4");
		ОбластьМакетаКомиссия      = Макет.ПолучитьОбласть("Комиссия");
		ОбластьМакетаСтраница41    = Макет.ПолучитьОбласть("Страница41");
		
		ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(Шапка.Ссылка, ТабДокумент, Макет, ОбластьМакетаЗаголовок);
		
		// Выводим общие реквизиты шапки
		СведенияОПокупателе = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Шапка.Организация, Шапка.ДатаДокумента);
		СведенияОПоставщике = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.ДатаДокумента);
		СведенияОГрузоотправителе = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Шапка.Грузоотправитель, Шапка.ДатаДокумента);
		
		ОтветственныеЛица = ОтветственныеЛицаСервер.ПолучитьОтветственныеЛицаОрганизации(Шапка.Организация, Шапка.ДатаДокумента);
		Руководитель = ФизическиеЛицаКлиентСервер.ФамилияИнициалы(СокрЛП(ОтветственныеЛица.Руководитель));
		Бухгалтер    = ФизическиеЛицаКлиентСервер.ФамилияИнициалы(СокрЛП(ОтветственныеЛица.ГлавныйБухгалтер));
		
		ОбластьМакетаЗаголовок.Параметры.Заполнить(Шапка);
		
		НомерДокумента = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Шапка.НомерДокумента);
		ОбластьМакетаЗаголовок.Параметры.Номер = НомерДокумента;
		ОбластьМакетаЗаголовок.Параметры.ФИОРуководитель = Руководитель;
		ОбластьМакетаЗаголовок.Параметры.ДолжностьРуководитель = ОтветственныеЛица.РуководительДолжность;
	
		ОбластьМакетаЗаголовок.Параметры.НаименованиеУчреждение = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПокупателе);
		
		ОбластьМакетаЗаголовок.Параметры.МестоСоставления = "";
		ОбластьМакетаЗаголовок.Параметры.НомерСертификатаКачества = "";
		ОбластьМакетаЗаголовок.Параметры.Станция = "";
		ОбластьМакетаЗаголовок.Параметры.НомераВагонов = "";
		
		ПредставлениеВходящегоДокумента = "";
		Если ЗначениеЗаполнено(Шапка.НомерВходящегоДокумента) Тогда
			ПредставлениеВходящегоДокумента = ПредставлениеВходящегоДокумента + Шапка.НомерВходящегоДокумента;
		КонецЕсли;
		Если ЗначениеЗаполнено(Шапка.ДатаВходящегоДокумента) Тогда
			ПредставлениеВходящегоДокумента = ПредставлениеВходящегоДокумента + " " + НСтр("ru = 'от'") + " " + Формат(Шапка.ДатаВходящегоДокумента, "ДЛФ=D");
		КонецЕсли;
		ОбластьМакетаЗаголовок.Параметры.НомерДатаСопроводительногоДокумента = СокрЛП(ПредставлениеВходящегоДокумента);
		
		Если ЗначениеЗаполнено(Шапка.Грузоотправитель) Тогда
			ПредставлениеГрузоотправителя = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОГрузоотправителе, "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны");
		Иначе
			ПредставлениеГрузоотправителя = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике, "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны");
		КонецЕсли;
		ОбластьМакетаЗаголовок.Параметры.НаименованиеГрузоотправитель  = ПредставлениеГрузоотправителя;
		
		ОбластьМакетаЗаголовок.Параметры.НаименованиеКонтрагент        = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике, "ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны");
		ОбластьМакетаЗаголовок.Параметры.НаименованиеГрузополучатель   = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПокупателе);
		ОбластьМакетаЗаголовок.Параметры.НаименованиеСтраховаяКомпания = "";
		
		ТабДокумент.Вывести(ОбластьМакетаЗаголовок);
		ТабДокумент.Вывести(ОбластьМакетаШапка1);
		
		Для Индекс = 1 По 9 Цикл
			ТабДокумент.Вывести(ОбластьМакетаСтрока1Пустая);
		КонецЦикла;
		
		ТабДокумент.Вывести(ОбластьМакетаКонцевик1);
		ТабДокумент.Вывести(ОбластьМакетаТаблица1);
		
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		// страница 2
		ОбластьМакетаСтраница2.Параметры.Заполнить(Шапка);
		ОбластьМакетаСтраница2.Параметры.УсловияХранения = "";
		ОбластьМакетаСтраница2.Параметры.СостояниеТары = "";
		ОбластьМакетаСтраница2.Параметры.МетодОпределенияНедостачи = "";
		ОбластьМакетаСтраница2.Параметры.ДругиеДанные = "";
		
		ТабДокумент.Вывести(ОбластьМакетаСтраница2);
		
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		ПереченьДокументов = "";
		ЗаключениеКомиссии = "";
		
		ОбластьМакетаСтраница4.Параметры.Заполнить(Шапка);
		ОбластьМакетаСтраница4.Параметры.ПереченьДокументов = ПереченьДокументов;
		ОбластьМакетаСтраница4.Параметры.ЗаключениеКомиссии = ЗаключениеКомиссии;
		ТабДокумент.Вывести(ОбластьМакетаСтраница4);
		
		Для Индекс = 1 По 4 Цикл
			ТабДокумент.Вывести(ОбластьМакетаКомиссия);
		КонецЦикла;
		
		ОбластьМакетаСтраница41.Параметры.Заполнить(Шапка);
		ТабДокумент.Вывести(ОбластьМакетаСтраница41);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции

Функция ПечатьМ7_ТабличнаяЧасть(МассивОбъектов, ОбъектыПечати) Экспорт
	
	ВалютаПечати = ЗначениеНастроекБольничнаяАптекаПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_АктОбУстановленииРасхожденияВКоличествеИКачестве_М7_Таблица";
	
	ТабДокумент.АвтоМасштаб = Истина;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.АктОбУстановленииРасхожденияВКоличествеИКачестве.ПФ_MXL_М7_ТабличнаяЧасть");
	
	Запрос = Новый Запрос;
	Запрос.Текст = ПолучитьТекстЗапросаДанныеДляПечати();
	Запрос.УстановитьПараметр("ТекущийДокумент", МассивОбъектов);
	Запрос.УстановитьПараметр("ВключатьВсеСтроки", Истина);
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	Шапка = РезультатыЗапроса[0].Выбрать();
	ВыборкаПоДокументам = РезультатыЗапроса[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ВсегоДокументовВШапке = Шапка.Количество();
	ПервыйДокумент = Истина;
	Пока Шапка.Следующий() Цикл
		
		// Найдем в выборке товары по текущему документу
		СтруктураПоиска = Новый Структура("Ссылка", Шапка.Ссылка);
		НайденСледующий = ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска);
		
		Если НайденСледующий Тогда
			ВыборкаПоТоварам = ВыборкаПоДокументам.Выбрать();
		Иначе
			Продолжить;
		КонецЕсли;
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		//////////////////////////////////////////////////////////////////////////////
		// Лист 1
		//
		ОбластьМакетаТаблица2      = Макет.ПолучитьОбласть("Таблица2");
		ОбластьМакетаШапка2        = Макет.ПолучитьОбласть("Шапка2");
		ОбластьМакетаСтрока2       = Макет.ПолучитьОбласть("Строка2");
		ОбластьМакетаСтрока2Пустая = Макет.ПолучитьОбласть("Строка2Пустая");
		ОбластьМакетаКонцевик      = Макет.ПолучитьОбласть("Концевик");
		
		// Выводим второй табличный документ
		ОбластьМакетаТаблица2.Параметры.Заполнить(Шапка);
		
		ПечНомерДокумента = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Шапка.НомерДокумента);
		ПечДатаДокумента = Формат(Шапка.ДатаДокумента, "ДЛФ=D");
		
		Если ВсегоДокументовВШапке > 1 Тогда
			ОписаниеШапкиДокумента = "Акт "  +ПечНомерДокумента + " от " + ПечДатаДокумента;
		Иначе
			ОписаниеШапкиДокумента = "";
		КонецЕсли;
		ОбластьМакетаТаблица2.Параметры.ОписаниеШапкиДокумента = ОписаниеШапкиДокумента;
		ОбластьМакетаТаблица2.Параметры.НомерСопроводительногоТД = "";
		
		ТабДокумент.Вывести(ОбластьМакетаТаблица2);
		ТабДокумент.Вывести(ОбластьМакетаШапка2);
		
		НомерСтроки = 0;
		ВыборкаПоТоварам.Сбросить();
		Пока ВыборкаПоТоварам.Следующий() Цикл
			
			ОбластьМакетаСтрока2.Параметры.Заполнить(ВыборкаПоТоварам);
			КоличествоБойБрак = ВыборкаПоТоварам.КоличествоБой + ВыборкаПоТоварам.КоличествоБрак;
			
			ОбластьМакетаСтрока2.Параметры.Сумма    = ВыборкаПоТоварам.СуммаСНДС;
			ОбластьМакетаСтрока2.Параметры.Цена     = ВыборкаПоТоварам.ЦенаСНДС;
			ОбластьМакетаСтрока2.Параметры.СуммаПоДокументу     = ВыборкаПоТоварам.КоличествоПоДокументу * ВыборкаПоТоварам.ЦенаСНДС;
			ОбластьМакетаСтрока2.Параметры.КоличествоБой        = КоличествоБойБрак;
			ОбластьМакетаСтрока2.Параметры.СуммаБой             = КоличествоБойБрак * ВыборкаПоТоварам.ЦенаСНДС;
			ОбластьМакетаСтрока2.Параметры.СуммаНедостача       = ВыборкаПоТоварам.КоличествоНедостача * ВыборкаПоТоварам.ЦенаСНДС;
			ОбластьМакетаСтрока2.Параметры.СуммаИзлишки         = ВыборкаПоТоварам.КоличествоИзлишки * ВыборкаПоТоварам.ЦенаСНДС;
			
			ОбластьМакетаСтрока2.Параметры.НомерПаспорта = "";
			
			ТабДокумент.Вывести(ОбластьМакетаСтрока2);
			НомерСтроки = НомерСтроки + 1;
			
		КонецЦикла;
		Для Индекс = НомерСтроки + 1 По 19 Цикл
			ТабДокумент.Вывести(ОбластьМакетаСтрока2Пустая);
		КонецЦикла;
		ТабДокумент.Вывести(ОбластьМакетаКонцевик);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции

Функция ПолучитьДанныеДляПечати(МассивОбъектов, ПараметрыПечати = Неопределено) Экспорт
	
	ВключатьВсеСтроки = Истина;
	Если ТипЗнч(ПараметрыПечати) = Тип("Структура") Тогда
		Если Не ПараметрыПечати.Свойство("ВключатьВсеСтроки", ВключатьВсеСтроки) Тогда
			ВключатьВсеСтроки = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ПолучитьТекстЗапросаДанныеДляПечати();
	Запрос.УстановитьПараметр("ТекущийДокумент"  , МассивОбъектов);
	Запрос.УстановитьПараметр("ВключатьВсеСтроки", ВключатьВсеСтроки);
	
	РезультатыЗапросов = Запрос.ВыполнитьПакет();
	
	ДанныеДляПечати = Новый Структура;
	ДанныеДляПечати.Вставить("ОсновныеДанные"     , РезультатыЗапросов[0].Выбрать());
	ДанныеДляПечати.Вставить("ВыборкаПоДокументам", РезультатыЗапросов[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам));
	
	Возврат ДанныеДляПечати;
	
КонецФункции

#КонецОбласти // Печать

////////////////////////////////////////////////////////////////////////////////
// Команды формы
#Область КомандыФормы

// Заполняет список команд ввода на основании.
// 
// Параметры:
//   КомандыСоздатьНаОсновании - ТаблицаЗначений - Таблица команд для вывода в подменю. Для изменения.
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСоздатьНаОсновании, НастройкиФормы) Экспорт
	
	ВводНаОснованииБольничнаяАптека.ДобавитьКомандыСозданияНаОсновании(ПустаяСсылка().Метаданные().ПолноеИмя(), КомандыСоздатьНаОсновании, НастройкиФормы);
	
КонецПроцедуры

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица команд для вывода в подменю. Для изменения.
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, НастройкиФормы) Экспорт
	
	МенюОтчетыБольничнаяАптека.ДобавитьОбщиеКоманды(ПустаяСсылка().Метаданные().ПолноеИмя(), КомандыОтчетов, НастройкиФормы);
	
КонецПроцедуры

#КонецОбласти // КомандыФормы

#КонецОбласти // СлужебныеПроцедурыИФункции

////////////////////////////////////////////////////////////////////////////////
// СТАНДАРТНЫЕ ПОДСИСТЕМЫ
#Область СтандартныеПодсистемы

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
//
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти // СтандартныеПодсистемы

#КонецЕсли