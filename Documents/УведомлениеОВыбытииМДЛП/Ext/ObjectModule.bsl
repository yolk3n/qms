#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	// ИнтеграцияМДЛП.Инвентаризация
	Если ОбщегоНазначения.ПодсистемаСуществует("ИнтеграцияМДЛП.Инвентаризация")
	   И ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ИнвентаризацияПотребительскихУпаковокМДЛП") Тогда
		МодульИнвентаризацияМДЛП = ОбщегоНазначения.ОбщийМодуль("ИнвентаризацияМДЛП");
		МодульИнвентаризацияМДЛП.ОбработкаЗаполнения(ЭтотОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
		Возврат; // Переопределение см. в общем модуле ИнвентаризацияМДЛППереопределяемый.
	КонецЕсли;
	// Конец ИнтеграцияМДЛП.Инвентаризация
	
	ИнтеграцияМДЛППереопределяемый.ОбработкаЗаполнения(ЭтотОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	СостояниеПодтверждения = Метаданные().Реквизиты.СостояниеПодтверждения.ЗначениеЗаполнения;
	НомераУпаковок.Очистить();
	ТранспортныеУпаковки.Очистить();
	
	Операция = Перечисления.ОперацииВыбытияМДЛП.ВыводПоРазличнымПричинам;
	
	Если ТипВыводаИзОборота = Перечисления.ВидыВыводаИзОборотаМДЛП.АвтоматическоеСписаниеПоИстечениюСрокаГодности Тогда
		ТипВыводаИзОборота = Неопределено;
		ДанныеПолученыИзМДЛП = Неопределено;
	КонецЕсли;
	
	ДокументИнвентаризации = Неопределено;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	НепроверяемыеРеквизиты = Новый Массив;
	
	Если Не ИнтеграцияМДЛП.ИспользоватьХарактеристикиНоменклатуры() Тогда
		НепроверяемыеРеквизиты.Добавить("Товары.Характеристика");
	КонецЕсли;
	
	Если Не ИнтеграцияМДЛП.ИспользоватьСерииНоменклатуры() Тогда
		НепроверяемыеРеквизиты.Добавить("Товары.Серия");
	КонецЕсли;
	
	ИнтеграцияМДЛП.ПроверитьЗаполнениеУпаковок(ЭтотОбъект, Отказ);
	
	ВсеРеквизиты = Неопределено;
	РеквизитыОперации = Неопределено;
	Документы.УведомлениеОВыбытииМДЛП.ЗаполнитьИменаРеквизитовПоТипуОперации(Операция, ВсеРеквизиты, РеквизитыОперации);
	Документы.УведомлениеОВыбытииМДЛП.ЗаполнитьИменаРеквизитовПоТипуВыводаИзОборота(ТипВыводаИзОборота, ВсеРеквизиты, РеквизитыОперации);
	Для Каждого Реквизит Из ВсеРеквизиты Цикл
		Если РеквизитыОперации.Найти(Реквизит) = Неопределено Тогда
			НепроверяемыеРеквизиты.Добавить(Реквизит);
		КонецЕсли;
	КонецЦикла;
	
	ИнтеграцияМДЛППереопределяемый.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты, НепроверяемыеРеквизиты);
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, НепроверяемыеРеквизиты);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтоНовый());
	
	ИнтеграцияМДЛП.ПроверитьВозможностьЗаписиУведомления(ЭтотОбъект, РежимЗаписи);
	
	ВсеРеквизиты = Неопределено;
	РеквизитыОперации = Неопределено;
	Документы.УведомлениеОВыбытииМДЛП.ЗаполнитьИменаРеквизитовПоТипуОперации(Операция, ВсеРеквизиты, РеквизитыОперации);
	Документы.УведомлениеОВыбытииМДЛП.ЗаполнитьИменаРеквизитовПоТипуВыводаИзОборота(ТипВыводаИзОборота, ВсеРеквизиты, РеквизитыОперации);
	ИнтеграцияМДЛП.ОчиститьНеиспользуемыеРеквизиты(ЭтотОбъект, ВсеРеквизиты, РеквизитыОперации);
	
	ИнтеграцияМДЛП.УбратьНезначащиеСимволы(ЭтотОбъект, "НомерДокумента");
	
	ИнтеграцияМДЛППереопределяемый.ПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ИнтеграцияМДЛП.ЗаписатьСтатусДокументаПоУмолчанию(ЭтотОбъект);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	СтандартнаяОбработка = Истина;
	ИнтеграцияМДЛППереопределяемый.ОбработкаПроведения(ЭтотОбъект, Отказ, РежимПроведения, СтандартнаяОбработка);
	Если Не СтандартнаяОбработка Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыОперации = ИнтеграцияМДЛП.ПараметрыОперацииИзмененияСтатусаУпаковок();
	
	Если Операция = Перечисления.ОперацииВыбытияМДЛП.ВыводПоРазличнымПричинам_Входящий Тогда
		
		ИсходныеСтатусы = Новый Массив;
		ИсходныеСтатусы.Добавить(Перечисления.СтатусыУпаковокМДЛП.ОжидаетВыпуска);
		ИсходныеСтатусы.Добавить(Перечисления.СтатусыУпаковокМДЛП.ВОбороте);
		ИсходныеСтатусы.Добавить(Перечисления.СтатусыУпаковокМДЛП.ОжидаетОтгрузкиВРФ);
		ИсходныеСтатусы.Добавить(Перечисления.СтатусыУпаковокМДЛП.МаркированаВЗТК);
		ИсходныеСтатусы.Добавить(Перечисления.СтатусыУпаковокМДЛП.ВвезенНаТерриториюРФ);
		ИсходныеСтатусы.Добавить(Перечисления.СтатусыУпаковокМДЛП.Задекларирована);
		ИсходныеСтатусы.Добавить(Перечисления.СтатусыУпаковокМДЛП.ПринятаНаСкладИзЗТК);
		ИсходныеСтатусы.Добавить(Перечисления.СтатусыУпаковокМДЛП.ВыбылаИзОборота);
		ИсходныеСтатусы.Добавить(Перечисления.СтатусыУпаковокМДЛП.ОборотПриостановлен);
		ИсходныеСтатусы.Добавить(Перечисления.СтатусыУпаковокМДЛП.ПустаяСсылка());
		ПараметрыОперации.ИсходныйСтатус = ИсходныеСтатусы;
		
		// Проверка возможности выбытия и резерв упаковок.
		ПараметрыОперации.НовыйСтатус    = Перечисления.СтатусыУпаковокМДЛП.ВыбылаИзОборота;
		ПараметрыОперации.Владелец       = Справочники.ОрганизацииМДЛП.ПустаяСсылка();
		ПараметрыОперации.КонтролироватьОстаткиДолейВРеестреВыбытия = Истина;
		ИнтеграцияМДЛП.ПровестиДокументПоРегиструУпаковок(Ссылка, ПараметрыОперации, Отказ, Перечисления.СостоянияПодтвержденияМДЛП.КПередаче);
		Если Отказ Тогда
			Возврат;
		КонецЕсли;
		
	Иначе
		
		Если ТипВыводаИзОборота = Перечисления.ВидыВыводаИзОборотаМДЛП.СписаниеРазукомплектованнойПотребительскойУпаковки Тогда
			ИсходныеСтатусы = Новый Массив;
			ИсходныеСтатусы.Добавить(Перечисления.СтатусыУпаковокМДЛП.ВОбороте);
			ИсходныеСтатусы.Добавить(Перечисления.СтатусыУпаковокМДЛП.ОборотПриостановлен);
			ПараметрыОперации.ИсходныйСтатус = ИсходныеСтатусы;
			ПараметрыОперации.КонтролироватьНаличиеДолиБезКоличества = Истина;
		Иначе
			ИсходныеСтатусы = Новый Массив;
			ИсходныеСтатусы.Добавить(Перечисления.СтатусыУпаковокМДЛП.ОжидаетВыпуска);
			ИсходныеСтатусы.Добавить(Перечисления.СтатусыУпаковокМДЛП.ВОбороте);
			ИсходныеСтатусы.Добавить(Перечисления.СтатусыУпаковокМДЛП.ОжидаетОтгрузкиВРФ);
			ИсходныеСтатусы.Добавить(Перечисления.СтатусыУпаковокМДЛП.МаркированаВЗТК);
			ИсходныеСтатусы.Добавить(Перечисления.СтатусыУпаковокМДЛП.ВвезенНаТерриториюРФ);
			ИсходныеСтатусы.Добавить(Перечисления.СтатусыУпаковокМДЛП.Задекларирована);
			ИсходныеСтатусы.Добавить(Перечисления.СтатусыУпаковокМДЛП.ПринятаНаСкладИзЗТК);
			ИсходныеСтатусы.Добавить(Перечисления.СтатусыУпаковокМДЛП.ОборотПриостановлен);
			ПараметрыОперации.ИсходныйСтатус = ИсходныеСтатусы;
			Если ТипВыводаИзОборота = Перечисления.ВидыВыводаИзОборотаМДЛП.АвтоматическоеСписаниеПоИстечениюСрокаГодности Тогда
				// Проверка возможности выбытия и резерв упаковок.
				ПараметрыОперации.ИсходныйСтатус.Добавить(Перечисления.СтатусыУпаковокМДЛП.ВыбылаИзОборота);
				ПараметрыОперации.НовыйСтатус    = Перечисления.СтатусыУпаковокМДЛП.ВыбылаИзОборота;
				ПараметрыОперации.Владелец       = Справочники.ОрганизацииМДЛП.ПустаяСсылка();
				ПараметрыОперации.КонтролироватьОстаткиДолейВРеестреВыбытия = Истина;
				ИнтеграцияМДЛП.ПровестиДокументПоРегиструУпаковок(Ссылка, ПараметрыОперации, Отказ, Перечисления.СостоянияПодтвержденияМДЛП.КПередаче);
				Если Отказ Тогда
					Возврат;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	ПараметрыОперации.НовыйСтатус    = Перечисления.СтатусыУпаковокМДЛП.ВыбылаИзОборота;
	ПараметрыОперации.Владелец       = Справочники.ОрганизацииМДЛП.ПустаяСсылка();
	ПараметрыОперации.КонтролироватьОстаткиДолейВРеестреВыбытия = Истина;
	ИнтеграцияМДЛП.ПровестиДокументПоРегиструУпаковок(Ссылка, ПараметрыОперации, Отказ);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	СтандартнаяОбработка = Истина;
	ИнтеграцияМДЛППереопределяемый.ОбработкаУдаленияПроведения(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	Если Не СтандартнаяОбработка Тогда
		Возврат;
	КонецЕсли;
	
	ИнтеграцияМДЛП.ОтменитьРезерв(Ссылка);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли