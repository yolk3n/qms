
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ
#Область ОбработчикиСобытий

&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	
	ОчиститьСообщения();
	
	ВыполнитьАрхивированиеЧековНаСервере(ПараметрКоманды);
	
	Оповестить("Запись_ОтчетОРозничныхПродажах", Новый Структура, ПараметрКоманды);
	
	ПоказатьОповещениеПользователя(НСтр("ru = 'Архивация чеков ККМ выполнена'"));
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытий

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ВыполнитьАрхивированиеЧековНаСервере(ОтчетОРозничныхПродажах)
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ОтчетОРозничныхПродажах.Ссылка КАК ОтчетОРозничныхПродажах
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах
	|ГДЕ
	|	ОтчетОРозничныхПродажах.Проведен
	|	И ОтчетОРозничныхПродажах.Ссылка В (&ОтчетОРозничныхПродажах)
	|	И ОтчетОРозничныхПродажах.СтатусКассовойСмены = ЗНАЧЕНИЕ(Перечисление.СтатусыКассовойСмены.Закрыта)
	|	И ОтчетОРозничныхПродажах.КассаККМ.ТипКассы = ЗНАЧЕНИЕ(Перечисление.ТипыКассККМ.ФискальныйРегистратор)
	|");
	
	Запрос.УстановитьПараметр("ОтчетОРозничныхПродажах", ОтчетОРозничныхПродажах);
	
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		
		ПараметрыЗадания = РозничныеПродажи.ПараметрыВыполненияОперацийСЧекамиККМ(
			Результат.Выгрузить().ВыгрузитьКолонку("ОтчетОРозничныхПродажах"));
		РозничныеПродажи.ВыполнитьАрхивированиеЧековККМ(ПараметрыЗадания);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти // СлужебныеПроцедурыИФункции