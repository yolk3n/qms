
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если Параметры.Свойство("Отбор") Тогда
		Параметры.Отбор.Свойство("Организация", Организация);
		Параметры.Отбор.Свойство("Склад", Склад);
		Параметры.Отбор.Свойство("ПодразделениеОрганизации", ПодразделениеОрганизации);
		
		Элементы.ТекстОтбора.Видимость = Истина;
		ТекстОтбора = НСтр("ru = 'Организация: %1, Подразделение: %2, Склад: %3'");
		ТекстОтбора = СтрЗаменить(ТекстОтбора, "%1", Строка(Организация));
		ТекстОтбора = СтрЗаменить(ТекстОтбора, "%2", Строка(ПодразделениеОрганизации));
		ТекстОтбора = СтрЗаменить(ТекстОтбора, "%3", Строка(Склад));
		Если ПолучитьФункциональнуюОпцию("ИспользоватьИсточникиФинансирования") Тогда
			Параметры.Отбор.Свойство("ИсточникФинансирования", ИсточникФинансирования);
			ТекстОтбора = ТекстОтбора + ", " + СтрЗаменить(НСтр("ru = 'Источник финансирования: %1'"), "%1", Строка(ИсточникФинансирования));
		КонецЕсли;
		
		Элементы.ТекстОтбора.Заголовок = ТекстОтбора;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ЗаполнитьСписок();
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ
#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПеренестиТоварыИзДокументов(Команда)
	
	ДанныеПодбора = Новый Структура("АдресТоваровВХранилище", ПоместитьТоварыВХранилище());
	
	ЗакрыватьПриВыборе = Ложь;
	ОповеститьОВыборе(ДанныеПодбора);
	
	Закрыть(ДанныеПодбора);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПериод(Команда)
	
	ВыборПериода = Новый ДиалогРедактированияСтандартногоПериода;
	ВыборПериода.Период = Новый СтандартныйПериод(ДатаНачала, ДатаОкончания);
	
	Оповестить = Новый ОписаниеОповещения("ВыбратьПериодЗавершение", ЭтотОбъект);
	ВыборПериода.Показать(Оповестить);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПериодЗавершение(РезультатВыбора, ДопПараметры) Экспорт
	
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, РезультатВыбора, "ДатаНачала, ДатаОкончания");
	ЗаполнитьСписок();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьДокументы(Команда)
	
	Для Каждого Строка Из Список Цикл
		Строка.Выбран = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсключитьДокументы(Команда)
	
	Для Каждого Строка Из Список Цикл
		Строка.Выбран = Ложь;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти // ОбработчикиКомандФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ
#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ДатаНачалаПриИзменении(Элемент)
	
	ЗаполнитьСписок();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаОкончанияПриИзменении(Элемент)
	
	ЗаполнитьСписок();
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийЭлементовФормы

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	ОбработкаТабличнойЧастиСервер.УстановитьОформлениеСерийНоменклатуры(ЭтотОбъект, "СписокСерияНоменклатуры", "Список.СтатусУказанияСерий");
	ОбработкаТабличнойЧастиСервер.УстановитьОформлениеПартий(ЭтотОбъект, "СписокПартия", "Список.СтатусУказанияПартий");
	
	СтандартныеПодсистемыСервер.УстановитьУсловноеОформлениеПоляДата(ЭтотОбъект, "Список.Дата", Элементы.СписокДата.Имя);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписок()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура                         КАК Номенклатура,
	|	ТаблицаТовары.СерияНоменклатуры                    КАК СерияНоменклатуры,
	|	ТаблицаТовары.СтатусУказанияСерий                  КАК СтатусУказанияСерий,
	|	ТаблицаТовары.Партия                               КАК Партия,
	|	ТаблицаТовары.СтатусУказанияПартий                 КАК СтатусУказанияПартий,
	|	ТаблицаТовары.СтатьяРасходов                       КАК СтатьяРасходов,
	|	ТаблицаТовары.АналитикаРасходов                    КАК АналитикаРасходов,
	|	Шапка.Ответственный                                КАК Ответственный,
	|	ТаблицаТовары.Ссылка                               КАК СписаниеНаРасходы,
	|	Шапка.Дата                                         КАК Дата,
	|	Шапка.Склад                                        КАК Склад,
	|	ТаблицаТовары.ЕдиницаИзмерения                     КАК ЕдиницаИзмерения,
	|	ТаблицаТовары.Коэффициент                          КАК Коэффициент,
	|	СУММА(ТаблицаТовары.КоличествоВЕдиницахИзмерения)  КАК КоличествоВЕдиницахИзмерения
	|ИЗ
	|	Документ.ВнутреннееПотреблениеТоваров.Товары КАК ТаблицаТовары
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВнутреннееПотреблениеТоваров КАК Шапка
	|	ПО
	|		ТаблицаТовары.Ссылка = Шапка.Ссылка
	|
	|ГДЕ
	|	(&Организация = НЕОПРЕДЕЛЕНО
	|			ИЛИ Шапка.Организация = &Организация)
	|	И (&Склад = НЕОПРЕДЕЛЕНО
	|			ИЛИ Шапка.Склад = &Склад)
	|	И (&Подразделение = НЕОПРЕДЕЛЕНО
	|			ИЛИ Шапка.ПодразделениеОрганизации = &Подразделение)
	|	И (&ИсточникФинансирования = НЕОПРЕДЕЛЕНО
	|			ИЛИ ТаблицаТовары.ИсточникФинансирования = &ИсточникФинансирования)
	|	И Шапка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
	|	И Шапка.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И Шапка.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.СерияНоменклатуры,
	|	ТаблицаТовары.СтатусУказанияСерий,
	|	ТаблицаТовары.Партия,
	|	ТаблицаТовары.СтатусУказанияПартий,
	|	ТаблицаТовары.СтатьяРасходов,
	|	ТаблицаТовары.АналитикаРасходов,
	|	Шапка.Ответственный,
	|	ТаблицаТовары.Ссылка,
	|	Шапка.Дата,
	|	Шапка.Склад,
	|	ТаблицаТовары.ЕдиницаИзмерения,
	|	ТаблицаТовары.Коэффициент
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата УБЫВ
	|";
	
	Запрос.УстановитьПараметр("Организация", ?(ЗначениеЗаполнено(Организация), Организация, Неопределено));
	Запрос.УстановитьПараметр("Склад", ?(ЗначениеЗаполнено(Склад), Склад, Неопределено));
	Запрос.УстановитьПараметр("Подразделение", ?(ЗначениеЗаполнено(ПодразделениеОрганизации), ПодразделениеОрганизации, Неопределено));
	Запрос.УстановитьПараметр("ИсточникФинансирования", ?(ЗначениеЗаполнено(ИсточникФинансирования), ИсточникФинансирования, Неопределено));
	Если Не ЗначениеЗаполнено(ДатаНачала) Тогда
		ДатаНачала = НачалоМесяца(НачалоМесяца(ТекущаяДатаСеанса()) - 1);
		Запрос.УстановитьПараметр("НачалоПериода", ДатаНачала);
	Иначе
		Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(ДатаНачала));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(ДатаОкончания) Тогда
		ДатаОкончания = КонецМесяца(ТекущаяДатаСеанса());
		Запрос.УстановитьПараметр("КонецПериода", ДатаОкончания);
	Иначе
		Запрос.УстановитьПараметр("КонецПериода", КонецДня(ДатаОкончания));
	КонецЕсли;
	
	Список.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаСервере
Функция ПоместитьТоварыВХранилище()
	
	КопируемыеПоля = Новый Структура;
	КопируемыеПоля.Вставить("Номенклатура");
	КопируемыеПоля.Вставить("СерияНоменклатуры");
	КопируемыеПоля.Вставить("Партия");
	КопируемыеПоля.Вставить("КоличествоВЕдиницахИзмерения");
	КопируемыеПоля.Вставить("ЕдиницаИзмерения");
	КопируемыеПоля.Вставить("Коэффициент");
	КопируемыеПоля.Вставить("СтатьяРасходов");
	КопируемыеПоля.Вставить("АналитикаРасходов");
	КопируемыеПоля.Вставить("СписаниеНаРасходы");
	КопируемыеПоля = ОбщегоНазначенияКлиентСервер.КлючиСтруктурыВСтроку(КопируемыеПоля);
	Товары = Список.Выгрузить(Список.НайтиСтроки(Новый Структура("Выбран", Истина)), КопируемыеПоля);
	
	Возврат ПоместитьВоВременноеХранилище(Товары, УникальныйИдентификатор);
	
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции
