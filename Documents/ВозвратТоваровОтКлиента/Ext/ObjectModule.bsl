#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ
#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	
	Если ТипДанныхЗаполнения = Тип("ДокументСсылка.ЧекККМ") Тогда
		
		Документы.ВозвратТоваровОтКлиента.ЗаполнитьДокументНаОснованииЧекаККМ(ЭтотОбъект, ДанныеЗаполнения, Истина);
		
	ИначеЕсли ТипДанныхЗаполнения = Тип("Структура") И ДанныеЗаполнения.Свойство("Товары") Тогда
		
		Документы.ВозвратТоваровОтКлиента.ЗаполнитьДокументНаОснованииЧекаККМ(ЭтотОбъект, ДанныеЗаполнения.ЧекККМ, Ложь);
		
		Товары.Загрузить(ПолучитьИзВременногоХранилища(ДанныеЗаполнения.Товары));
		ЗапасыСервер.ЗаполнитьСтатусыУчетаНоменклатуры(ЭтотОбъект, ЗапасыСервер.ПолучитьПараметрыУчетаНоменклатуры(ЭтотОбъект));
		
	ИначеЕсли ТипДанныхЗаполнения = Тип("Структура") Тогда
		
		ЗаполнитьДокументПоОтбору(ДанныеЗаполнения);
		
	КонецЕсли;
	
	ИнициализироватьДокумент();
	
	ЗаполнитьПоЗначениямАвтозаполнения();
	
	ОбщегоНазначенияБольничнаяАптека.ЗаполнитьРеквизитыПоСкладу(ЭтотОбъект);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ИнициализироватьДокумент();
	
	ЗапасыСервер.ЗаполнитьСтатусыУчетаНоменклатуры(ЭтотОбъект, ЗапасыСервер.ПолучитьПараметрыУчетаНоменклатуры(ЭтотОбъект));
	
	ОбщегоНазначенияБольничнаяАптека.ЗаполнитьРеквизитыПоСкладу(ЭтотОбъект);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	НепроверяемыеРеквизиты = Новый Массив;
	
	ОбработкаТабличнойЧастиСервер.ПроверитьЗаполнениеКоличества(ЭтотОбъект, НепроверяемыеРеквизиты, Отказ);
	ОбработкаТабличнойЧастиСервер.ПроверитьЗаполнениеИсточникаФинансирования(ЭтотОбъект, НепроверяемыеРеквизиты, Отказ);
	
	ПараметрыУчетаНоменклатуры = ЗапасыСервер.ПолучитьПараметрыУчетаНоменклатуры(ЭтотОбъект);
	ЗапасыСервер.ПроверитьЗаполнениеСерийНоменклатуры(ЭтотОбъект, ПараметрыУчетаНоменклатуры, НепроверяемыеРеквизиты, Отказ);
	ЗапасыСервер.ПроверитьЗаполнениеПартийНоменклатуры(ЭтотОбъект, ПараметрыУчетаНоменклатуры, НепроверяемыеРеквизиты, Отказ);
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, НепроверяемыеРеквизиты);
	
	Если ЗначениеЗаполнено(ЧекККМ) Тогда
		ПроверитьКорректностьВозвращаемыхТоваровПоЧекуККМ(Отказ);
	ИначеЕсли СпособОпределенияСебестоимости = Перечисления.СпособыОпределенияСебестоимости.ИзДокументаПродажи Тогда
		Если Не ЗначениеЗаполнено(ДокументРеализации) Тогда
			ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Не заполнено поле Документ реализации'"), ЭтотОбъект, "ДокументРеализации");
		Иначе
			ПроверитьКорректностьВозвращаемыхТоваров(Отказ);
		КонецЕсли;
	ИначеЕсли СпособОпределенияСебестоимости = Перечисления.СпособыОпределенияСебестоимости.Вручную Тогда
		ШаблонСообщения = НСтр("ru = 'Строка %1. Не заполнена себестоимость оприходования'");
		Для Каждого Строка Из Товары Цикл
			Если Строка.Себестоимость = 0
			 Или Строка.СебестоимостьБезНДС = 0 И НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС
			 Или Строка.СебестоимостьРегл = 0 Тогда
				Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", Строка.НомерСтроки, "НомерСтроки");
				ОбщегоНазначения.СообщитьПользователю(
					СтрЗаменить(ШаблонСообщения, "%1", Строка.НомерСтроки), ЭтотОбъект, Поле);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	ОбработкаТабличнойЧастиСервер.ОкруглитьКоличествоШтучныхТоваров(ЭтотОбъект, РежимЗаписи);
	
	СуммаДокумента = ЦенообразованиеБольничнаяАптекаКлиентСервер.ПолучитьСуммуДокумента(Товары, ЦенаВключаетНДС);
	
	Если СпособОпределенияСебестоимости <> Перечисления.СпособыОпределенияСебестоимости.ИзДокументаПродажи Тогда
		ДокументРеализации = Неопределено;
	КонецЕсли;
	
	ЗапасыСервер.ОчиститьНеиспользуемыеРеквизиты(ЭтотОбъект, ЗапасыСервер.ПолучитьПараметрыУчетаНоменклатуры(ЭтотОбъект));
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеБольничнаяАптека.СформироватьДвиженияПоРегистрам(ЭтотОбъект, Отказ, РежимПроведения);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПроведениеБольничнаяАптека.СформироватьДвиженияПоРегистрам(ЭтотОбъект, Отказ);
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытий

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

////////////////////////////////////////////////////////////////////////////////
// Инициализация и заполнение документа
#Область ИнициализацияИЗаполнение

Процедура ИнициализироватьДокумент()
	
	Автор = Пользователи.ТекущийПользователь();
	Ответственный = Пользователи.ТекущийПользователь();
	
	Если Не ЗначениеЗаполнено(Валюта) Тогда
		Валюта = ЗначениеНастроекБольничнаяАптекаПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	КонецЕсли;
	
	ЗаполнитьПоляПоУмолчанию();
	
КонецПроцедуры

Процедура ЗаполнитьПоляПоУмолчанию()
	
	Организация = ЗначениеНастроекБольничнаяАптекаПовтИсп.ПолучитьОрганизациюПоУмолчанию(Организация);
	ПодразделениеОрганизации = ЗначениеНастроекБольничнаяАптекаПовтИсп.ПолучитьПодразделениеПоУмолчанию(ПодразделениеОрганизации, Организация);
	Склад = ЗначениеНастроекБольничнаяАптекаПовтИсп.ПолучитьСкладПоУмолчанию(Склад, ПодразделениеОрганизации);
	
	Если Не ЗначениеЗаполнено(НалогообложениеНДС) Тогда
		НалогообложениеНДС = РозничныеПродажи.НалогообложениеНДС(Организация, Склад, Дата);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПоЗначениямАвтозаполнения()
	
	ОбщегоНазначенияБольничнаяАптека.ЗаполнитьПоЗначениямАвтозаполнения(ЭтотОбъект, Неопределено, "Организация, Склад");
	ОбщегоНазначенияБольничнаяАптека.ЗаполнитьПоЗначениямАвтозаполнения(ЭтотОбъект, Неопределено, "ПодразделениеОрганизации", "Организация");
	
КонецПроцедуры

Процедура ЗаполнитьДокументПоОтбору(ДанныеЗаполнения)
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
	ОбщегоНазначенияБольничнаяАптека.ПроверитьЗаполнениеПодразделенияОрганизации(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти // ИнициализацияИЗаполнение

////////////////////////////////////////////////////////////////////////////////
// Прочее
#Область Прочее

Функция СписокРегистровДляКонтроля() Экспорт
	
	РегистрыДляКонтроля = Новый Массив;
	
	Если Не ДополнительныеСвойства.ЭтоНовый Тогда
		// Приходы в регистр (сторно расхода из регистра) контролируем при перепроведении и отмене проведения
		РегистрыДляКонтроля.Добавить(Движения.СебестоимостьТоваров);
	КонецЕсли;
	
	Возврат РегистрыДляКонтроля;
	
КонецФункции

Процедура ПроверитьКорректностьВозвращаемыхТоваровПоЧекуККМ(Отказ)
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(&ЧекККМ КАК Документ.ЧекККМ)КАК ЧекККМ,
	|	ТаблицаТовары.Номенклатура           КАК Номенклатура,
	|	ТаблицаТовары.СерияНоменклатуры      КАК СерияНоменклатуры,
	|	ТаблицаТовары.Партия                 КАК Партия,
	|	ТаблицаТовары.ЕдиницаИзмерения       КАК ЕдиницаИзмерения,
	|	ТаблицаТовары.Количество             КАК Количество
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	&ТаблицаПроверяемыеТовары КАК ТаблицаТовары
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.ЧекККМ                      КАК ЧекККМ,
	|	ТаблицаТовары.Номенклатура                КАК Номенклатура,
	|	ТаблицаТовары.СерияНоменклатуры           КАК СерияНоменклатуры,
	|	ТаблицаТовары.Партия                      КАК Партия,
	|	МАКСИМУМ(ТаблицаТовары.ЕдиницаИзмерения)  КАК ЕдиницаИзмерения,
	|	СУММА(ТаблицаТовары.Количество)           КАК Количество
	|ПОМЕСТИТЬ ПроверяемыеТовары
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|
	|СГРУППИРОВАТЬ ПО
	|	ЧекККМ,
	|	Номенклатура,
	|	СерияНоменклатуры,
	|	Партия
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ЧекККМ,
	|	Номенклатура,
	|	СерияНоменклатуры,
	|	Партия
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка             КАК ЧекККМ,
	|	ТаблицаТовары.Номенклатура       КАК Номенклатура,
	|	ТаблицаТовары.СерияНоменклатуры  КАК СерияНоменклатуры,
	|	ТаблицаТовары.Партия             КАК Партия,
	|	СУММА(ТаблицаТовары.Количество)  КАК Количество
	|ПОМЕСТИТЬ ЧекиККМ
	|ИЗ
	|	Документ.ЧекККМ.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка.Проведен
	|	И ТаблицаТовары.Ссылка = &ЧекККМ
	|	И ТаблицаТовары.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЧековККМ.Пробит)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Ссылка,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.СерияНоменклатуры,
	|	ТаблицаТовары.Партия
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	СерияНоменклатуры,
	|	Партия,
	|	ЧекККМ
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка.ЧекККМ      КАК ЧекККМ,
	|	ТаблицаТовары.Номенклатура       КАК Номенклатура,
	|	ТаблицаТовары.СерияНоменклатуры  КАК СерияНоменклатуры,
	|	ТаблицаТовары.Партия             КАК Партия,
	|	СУММА(ТаблицаТовары.Количество)  КАК Количество
	|ПОМЕСТИТЬ ЧекиККМВозврат
	|ИЗ
	|	Документ.ЧекККМВозврат.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка.Проведен
	|	И ТаблицаТовары.Ссылка.ЧекККМ В (ВЫБРАТЬ Т.ЧекККМ ИЗ ЧекиККМ КАК Т)
	|	И ТаблицаТовары.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЧековККМ.Пробит)
	|
	|СГРУППИРОВАТЬ ПО
	|	Ссылка.ЧекККМ,
	|	Номенклатура,
	|	СерияНоменклатуры,
	|	Партия
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ЧекККМ,
	|	Номенклатура,
	|	СерияНоменклатуры,
	|	Партия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка.ЧекККМ        КАК ЧекККМ,
	|	ТаблицаТовары.Номенклатура         КАК Номенклатура,
	|	ТаблицаТовары.СерияНоменклатуры    КАК СерияНоменклатуры,
	|	ТаблицаТовары.Партия               КАК Партия,
	|	СУММА(ТаблицаТовары.Количество)    КАК Количество
	|ПОМЕСТИТЬ ДанныеВозврата
	|ИЗ
	|	Документ.ВозвратТоваровОтКлиента.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка.Проведен
	|	И ТаблицаТовары.Ссылка <> &ЭтотВозвратСсылка
	|	И ТаблицаТовары.Ссылка.ЧекККМ В (ВЫБРАТЬ Т.ЧекККМ ИЗ ЧекиККМ КАК Т)
	|
	|СГРУППИРОВАТЬ ПО
	|	Ссылка.ЧекККМ,
	|	Номенклатура,
	|	СерияНоменклатуры,
	|	Партия
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ЧекККМ,
	|	Номенклатура,
	|	СерияНоменклатуры,
	|	Партия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПроверяемыеТовары.ЧекККМ             КАК ДокументРеализации,
	|	ПроверяемыеТовары.Номенклатура       КАК Номенклатура,
	|	ПроверяемыеТовары.СерияНоменклатуры  КАК СерияНоменклатуры,
	|	ПроверяемыеТовары.Партия             КАК Партия,
	|	ПроверяемыеТовары.ЕдиницаИзмерения   КАК ЕдиницаИзмерения,
	|	ЕСТЬNULL(ЧекиККМ.Количество, 0) - ЕСТЬNULL(ЧекиККМВозврат.Количество, 0) - ЕСТЬNULL(ДанныеВозврата.Количество, 0) - ЕСТЬNULL(ПроверяемыеТовары.Количество, 0)  КАК Количество,
	|	ПроверяемыеТовары.ЧекККМ.Дата        КАК ДатаРеализации,
	|	ПроверяемыеТовары.ЧекККМ.Номер       КАК НомерРеализации
	|ИЗ
	|	ПроверяемыеТовары КАК ПроверяемыеТовары
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ЧекиККМ КАК ЧекиККМ
	|	ПО
	|		ЧекиККМ.ЧекККМ = ПроверяемыеТовары.ЧекККМ
	|		И ЧекиККМ.Номенклатура = ПроверяемыеТовары.Номенклатура
	|		И ЧекиККМ.СерияНоменклатуры = ПроверяемыеТовары.СерияНоменклатуры
	|		И ЧекиККМ.Партия = ПроверяемыеТовары.Партия
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			ЧекиККМВозврат КАК ЧекиККМВозврат
	|		ПО
	|			ЧекиККМВозврат.ЧекККМ = ЧекиККМ.ЧекККМ
	|			И ЧекиККМВозврат.Номенклатура = ЧекиККМ.Номенклатура
	|			И ЧекиККМВозврат.СерияНоменклатуры = ЧекиККМ.СерияНоменклатуры
	|			И ЧекиККМВозврат.Партия = ЧекиККМ.Партия
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			ДанныеВозврата КАК ДанныеВозврата
	|		ПО
	|			ДанныеВозврата.ЧекККМ = ЧекиККМ.ЧекККМ
	|			И ДанныеВозврата.Номенклатура = ЧекиККМ.Номенклатура
	|			И ДанныеВозврата.СерияНоменклатуры = ЧекиККМ.СерияНоменклатуры
	|			И ДанныеВозврата.Партия = ЧекиККМ.Партия
	|		
	|ГДЕ
	|	ЕСТЬNULL(ЧекиККМ.Количество, 0) - ЕСТЬNULL(ЧекиККМВозврат.Количество, 0) - ЕСТЬNULL(ДанныеВозврата.Количество, 0) - ЕСТЬNULL(ПроверяемыеТовары.Количество, 0) < 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаРеализации УБЫВ
	|";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ТаблицаПроверяемыеТовары", Товары.Выгрузить());
	Запрос.УстановитьПараметр("ЭтотВозвратСсылка", Ссылка);
	Запрос.УстановитьПараметр("ЧекККМ", ЧекККМ);
	
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить().Выгрузить();
	Если Результат.Количество() > 0 Тогда
		СообщитьОбОшибкахКорректностиВозвращаемыхТоваров(Результат, Отказ);
	КонецЕсли; 
	
КонецПроцедуры

Процедура ПроверитьКорректностьВозвращаемыхТоваров(Отказ)
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(&ДокументРеализации КАК Документ.ОтчетОРозничныхПродажах)  КАК ДокументРеализации,
	|	ТаблицаТовары.Номенклатура           КАК Номенклатура,
	|	ТаблицаТовары.СерияНоменклатуры      КАК СерияНоменклатуры,
	|	ТаблицаТовары.Партия                 КАК Партия,
	|	ТаблицаТовары.ЕдиницаИзмерения       КАК ЕдиницаИзмерения,
	|	ТаблицаТовары.Количество             КАК Количество
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	&ТаблицаПроверяемыеТовары КАК ТаблицаТовары
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.ДокументРеализации          КАК ДокументРеализации,
	|	ТаблицаТовары.Номенклатура                КАК Номенклатура,
	|	ТаблицаТовары.СерияНоменклатуры           КАК СерияНоменклатуры,
	|	ТаблицаТовары.Партия                      КАК Партия,
	|	МАКСИМУМ(ТаблицаТовары.ЕдиницаИзмерения)  КАК ЕдиницаИзмерения,
	|	СУММА(ТаблицаТовары.Количество)           КАК Количество
	|ПОМЕСТИТЬ ПроверяемыеТовары
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументРеализации,
	|	Номенклатура,
	|	СерияНоменклатуры,
	|	Партия
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументРеализации,
	|	Номенклатура,
	|	СерияНоменклатуры,
	|	Партия
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка             КАК ДокументРеализации,
	|	ТаблицаТовары.Номенклатура       КАК Номенклатура,
	|	ТаблицаТовары.СерияНоменклатуры  КАК СерияНоменклатуры,
	|	ТаблицаТовары.Партия             КАК Партия,
	|	СУММА(ТаблицаТовары.Количество)  КАК Количество
	|ПОМЕСТИТЬ ДанныеРеализации
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка.Проведен
	|	И ТаблицаТовары.Ссылка = &ДокументРеализации
	|	И ТаблицаТовары.Ссылка.СтатусКассовойСмены В (ЗНАЧЕНИЕ(Перечисление.СтатусыКассовойСмены.Закрыта), ЗНАЧЕНИЕ(Перечисление.СтатусыКассовойСмены.ЗакрытаЧекиЗаархивированы))
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Ссылка,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.СерияНоменклатуры,
	|	ТаблицаТовары.Партия
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументРеализации,
	|	Номенклатура,
	|	СерияНоменклатуры,
	|	Партия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка.ДокументРеализации  КАК ДокументРеализации,
	|	ТаблицаТовары.Номенклатура               КАК Номенклатура,
	|	ТаблицаТовары.СерияНоменклатуры          КАК СерияНоменклатуры,
	|	ТаблицаТовары.Партия                     КАК Партия,
	|	СУММА(ТаблицаТовары.Количество)          КАК Количество
	|ПОМЕСТИТЬ ДанныеВозврата
	|ИЗ
	|	Документ.ВозвратТоваровОтКлиента.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка.Проведен
	|	И ТаблицаТовары.Ссылка <> &ЭтотВозвратСсылка
	|	И ТаблицаТовары.Ссылка.ДокументРеализации В (ВЫБРАТЬ Т.ДокументРеализации ИЗ ДанныеРеализации КАК Т)
	|
	|СГРУППИРОВАТЬ ПО
	|	Ссылка.ДокументРеализации,
	|	Номенклатура,
	|	СерияНоменклатуры,
	|	Партия
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументРеализации,
	|	Номенклатура,
	|	СерияНоменклатуры,
	|	Партия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПроверяемыеТовары.ДокументРеализации КАК ДокументРеализации,
	|	ПроверяемыеТовары.Номенклатура       КАК Номенклатура,
	|	ПроверяемыеТовары.СерияНоменклатуры  КАК СерияНоменклатуры,
	|	ПроверяемыеТовары.Партия             КАК Партия,
	|	ПроверяемыеТовары.ЕдиницаИзмерения   КАК ЕдиницаИзмерения,
	|	ЕСТЬNULL(ДанныеРеализации.Количество, 0) - ЕСТЬNULL(ДанныеВозврата.Количество, 0) - ЕСТЬNULL(ПроверяемыеТовары.Количество, 0)  КАК Количество,
	|	ПроверяемыеТовары.ДокументРеализации.Дата        КАК ДатаРеализации,
	|	ПроверяемыеТовары.ДокументРеализации.Номер       КАК НомерРеализации
	|ИЗ
	|	ПроверяемыеТовары КАК ПроверяемыеТовары
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ДанныеРеализации КАК ДанныеРеализации
	|	ПО
	|		ДанныеРеализации.ДокументРеализации = ПроверяемыеТовары.ДокументРеализации
	|		И ДанныеРеализации.Номенклатура = ПроверяемыеТовары.Номенклатура
	|		И ДанныеРеализации.СерияНоменклатуры = ПроверяемыеТовары.СерияНоменклатуры
	|		И ДанныеРеализации.Партия = ПроверяемыеТовары.Партия
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			ДанныеВозврата КАК ДанныеВозврата
	|		ПО
	|			ДанныеВозврата.ДокументРеализации = ДанныеРеализации.ДокументРеализации
	|			И ДанныеВозврата.Номенклатура = ДанныеРеализации.Номенклатура
	|			И ДанныеВозврата.СерияНоменклатуры = ДанныеРеализации.СерияНоменклатуры
	|			И ДанныеВозврата.Партия = ДанныеРеализации.Партия
	|		
	|ГДЕ
	|	ЕСТЬNULL(ДанныеРеализации.Количество, 0) - ЕСТЬNULL(ДанныеВозврата.Количество, 0) - ЕСТЬNULL(ПроверяемыеТовары.Количество, 0) < 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаРеализации УБЫВ
	|";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ТаблицаПроверяемыеТовары", Товары.Выгрузить());
	Запрос.УстановитьПараметр("ЭтотВозвратСсылка", Ссылка);
	Запрос.УстановитьПараметр("ДокументРеализации", ДокументРеализации);
	
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить().Выгрузить();
	Если Результат.Количество() > 0 Тогда
		СообщитьОбОшибкахКорректностиВозвращаемыхТоваров(Результат, Отказ);
	КонецЕсли; 
	
КонецПроцедуры

Процедура СообщитьОбОшибкахКорректностиВозвращаемыхТоваров(ТаблицаОшибок, Отказ)
	
	ШаблонСообщения = НСтр("ru='Возврат по номенклатуре %1 превышает количество реализованных товаров по документу продажи %2 на %3 %4'");
	
	Для Каждого СтрокаОшибки Из ТаблицаОшибок Цикл
		Если СтрокаОшибки.Количество < 0 Тогда
			СообщениеОбОшибке = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ШаблонСообщения,
				ОбщегоНазначенияБольничнаяАптека.ПолучитьПредставлениеНоменклатуры(СтрокаОшибки.Номенклатура, СтрокаОшибки.СерияНоменклатуры, СтрокаОшибки.Партия),
				СтрокаОшибки.НомерРеализации,
				- СтрокаОшибки.Количество / НоменклатураСервер.КоэффициентЕдиницыИзмерения(СтрокаОшибки.Номенклатура, СтрокаОшибки.ЕдиницаИзмерения),
				СтрокаОшибки.ЕдиницаИзмерения);
			Если ТипЗнч(СтрокаОшибки.ДокументРеализации) = Тип("ДокументСсылка.ЧекККМ") Тогда
				СообщениеОбОшибке = СтрЗаменить(СообщениеОбОшибке, НСтр("ru='документу продажи'"), НСтр("ru='чеку ККМ'"));
			КонецЕсли;
			ОбщегоНазначения.СообщитьПользователю(СообщениеОбОшибке, ЭтотОбъект,,, Отказ);
		КонецЕсли;
	КонецЦикла; 
	
КонецПроцедуры

#КонецОбласти // Прочее

#КонецОбласти // СлужебныеПроцедурыИФункции

#КонецЕсли