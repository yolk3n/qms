#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС
#Область ПрограммныйИнтерфейс

// Имена реквизитов, от значений которых зависят параметры учета номенклатуры
//
// Возвращаемое значение:
//   Строка - имена реквизитов, перечисленные через запятую
//
Функция ИменаРеквизитовДляЗаполненияПараметровУчетаНоменклатуры() Экспорт
	
	Возврат "Склад";
	
КонецФункции

// Возвращает параметры учета для номенклатуры, указанной в документе
//
// Параметры
//   Объект - Структура - структура значений реквизитов объекта, необходимых для заполнения параметров указания серий
// Возвращаемое значение
//   Структура - Состав полей задается в функции НоменклатураКлиентСервер.ПараметрыУчетаНоменклатуры
//
Функция ПараметрыУчетаНоменклатуры(Объект) Экспорт
	
	ПараметрыУчета = ЗапасыСервер.ПараметрыУчетаНоменклатуры();
	ПараметрыУчета.ПолноеИмяОбъекта = ПустаяСсылка().Метаданные().ПолноеИмя();
	
	ПараметрыУчетаНаСкладе = СкладыСервер.ПараметрыУчетаНоменклатуры(Объект.Склад);
	ПараметрыУчета.ИспользоватьСерии = ПараметрыУчетаНаСкладе.ИспользоватьСерииНоменклатуры;
	ПараметрыУчета.ИспользоватьПартии = ПараметрыУчетаНаСкладе.ИспользоватьПартии;
	ПараметрыУчета.Склад = Объект.Склад;
	
	Возврат ПараметрыУчета;
	
КонецФункции

// Возвращает текст запроса для расчета статусов указания параметров учета номенклатуры
//
// Параметры
//   ПараметрыУчетаНоменклатуры - Структура - состав полей задается в функции ЗапасыСервер.ПараметрыУчетаНоменклатуры
//
// Возвращаемое значение
//   Строка - текст запроса
//
Функция ТекстЗапросаРасчетаСтатусовУчетаНоменклатуры(ПараметрыУчетаНоменклатуры) Экспорт
	
	Возврат ЗапасыСервер.ТекстЗапросаРасчетаСтатусовУчетаНоменклатуры(ПараметрыУчетаНоменклатуры);
	
КонецФункции

// Заполняет документ по чеку ККМ.
//
// Параметры:
//  Объект - ДокументОбъект.ВозвратТоваровОтКлиента
//  ЧекККМ - ДокументСсылка.ЧекККМ
//  ПерезаполнятьТовары - Булево - определяет необходимость перезаполнения списка товаров по чеку ККМ.
//
Процедура ЗаполнитьДокументНаОснованииЧекаККМ(Объект, ЧекККМ, ПерезаполнитьТовары = Истина) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	Документ.Ссылка                    КАК ЧекККМ,
	|	Документ.Организация               КАК Организация,
	|	Документ.КассоваяСмена             КАК КассоваяСмена,
	|	Документ.КассоваяСмена             КАК ДокументРеализации,
	|	Документ.КассоваяСмена.ПодразделениеОрганизации  КАК ПодразделениеОрганизации,
	|	Документ.Валюта                    КАК Валюта,
	|	Документ.ЦенаВключаетНДС           КАК ЦенаВключаетНДС,
	|	Документ.НалогообложениеНДС        КАК НалогообложениеНДС,
	|	Документ.Валюта                    КАК ВалютаВзаиморасчетов,
	|	Документ.Склад                     КАК Склад,
	|	Документ.ИсточникФинансирования    КАК ИсточникФинансирования,
	|	НЕ Документ.Проведен               КАК ЕстьОшибкиПроведен,
	|	Документ.Статус                    КАК Статус,
	|	ВЫБОР
	|		КОГДА Документ.Статус В (&ДопустимыеСтатусы)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ                              КАК ЕстьОшибкиСтатус
	|ИЗ
	|	Документ.ЧекККМ КАК Документ
	|ГДЕ
	|	Документ.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(Товары.НомерСтроки)          КАК НомерСтроки,
	|	Товары.Номенклатура                  КАК Номенклатура,
	|	Товары.СерияНоменклатуры             КАК СерияНоменклатуры,
	|	Товары.Партия                        КАК Партия,
	|	МАКСИМУМ(Товары.ЕдиницаИзмерения)    КАК ЕдиницаИзмерения,
	|	МАКСИМУМ(Товары.СтавкаНДС)           КАК СтавкаНДС,
	|	СУММА(Товары.Количество)             КАК Количество,
	|	СУММА(Товары.Сумма)                  КАК Сумма,
	|	СУММА(Товары.СуммаНДС)               КАК СуммаНДС,
	|	СУММА(Товары.СуммаСНДС)              КАК СуммаСНДС
	|ПОМЕСТИТЬ ЧекиККМ
	|ИЗ
	|	Документ.ЧекККМ.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И Товары.Номенклатура.ТипНоменклатурыРасширенный <> ЗНАЧЕНИЕ(Справочник.ТипыНоменклатурыРасширенные.ЛекарственноеСредство)
	|СГРУППИРОВАТЬ ПО
	|	Номенклатура,
	|	СерияНоменклатуры,
	|	Партия
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	СерияНоменклатуры,
	|	Партия
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура                  КАК Номенклатура,
	|	Товары.СерияНоменклатуры             КАК СерияНоменклатуры,
	|	Товары.Партия                        КАК Партия,
	|	СУММА(Товары.Количество)             КАК Количество,
	|	СУММА(Товары.Сумма)                  КАК Сумма,
	|	СУММА(Товары.СуммаНДС)               КАК СуммаНДС,
	|	СУММА(Товары.СуммаСНДС)              КАК СуммаСНДС
	|ПОМЕСТИТЬ ЧекиККМВозврат
	|ИЗ
	|	Документ.ЧекККМВозврат.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка.ЧекККМ = &ДокументОснование
	|	И Товары.Ссылка.Проведен
	|	И Товары.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЧековККМ.Пробит)
	|СГРУППИРОВАТЬ ПО
	|	Номенклатура,
	|	СерияНоменклатуры,
	|	Партия
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	СерияНоменклатуры,
	|	Партия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура                  КАК Номенклатура,
	|	Товары.СерияНоменклатуры             КАК СерияНоменклатуры,
	|	Товары.Партия                        КАК Партия,
	|	СУММА(Товары.Количество)             КАК Количество,
	|	СУММА(Товары.Сумма)                  КАК Сумма,
	|	СУММА(Товары.СуммаНДС)               КАК СуммаНДС,
	|	СУММА(Товары.СуммаСНДС)              КАК СуммаСНДС
	|ПОМЕСТИТЬ ДанныеВозврата
	|ИЗ
	|	Документ.ВозвратТоваровОтКлиента.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка.ЧекККМ = &ДокументОснование
	|	И Товары.Ссылка <> &ДокументВозврата
	|	И Товары.Ссылка.Проведен
	|СГРУППИРОВАТЬ ПО
	|	Номенклатура,
	|	СерияНоменклатуры,
	|	Партия
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	СерияНоменклатуры,
	|	Партия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки             КАК НомерСтроки,
	|	Товары.Номенклатура            КАК Номенклатура,
	|	Товары.СерияНоменклатуры       КАК СерияНоменклатуры,
	|	Товары.Партия                  КАК Партия,
	|	Товары.ЕдиницаИзмерения        КАК ЕдиницаИзмерения,
	|	Товары.СтавкаНДС               КАК СтавкаНДС,
	|	Товары.Количество - ЕСТЬNULL(ЧекиККМВозврат.Количество, 0) - ЕСТЬNULL(ДанныеВозврата.Количество, 0)  КАК Количество,
	|	Товары.Сумма - ЕСТЬNULL(ЧекиККМВозврат.Сумма, 0) - ЕСТЬNULL(ДанныеВозврата.Сумма, 0)                 КАК Сумма,
	|	Товары.СуммаНДС - ЕСТЬNULL(ЧекиККМВозврат.СуммаНДС, 0) - ЕСТЬNULL(ДанныеВозврата.СуммаНДС, 0)        КАК СуммаНДС,
	|	Товары.СуммаСНДС - ЕСТЬNULL(ЧекиККМВозврат.СуммаСНДС, 0) - ЕСТЬNULL(ДанныеВозврата.СуммаСНДС, 0)     КАК СуммаСНДС
	|
	|ИЗ
	|	ЧекиККМ КАК Товары
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ЧекиККМВозврат КАК ЧекиККМВозврат
	|	ПО
	|		ЧекиККМВозврат.Номенклатура = Товары.Номенклатура
	|		И ЧекиККМВозврат.СерияНоменклатуры = Товары.СерияНоменклатуры
	|		И ЧекиККМВозврат.Партия = Товары.Партия
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ДанныеВозврата КАК ДанныеВозврата
	|	ПО
	|		ДанныеВозврата.Номенклатура = Товары.Номенклатура
	|		И ДанныеВозврата.СерияНоменклатуры = Товары.СерияНоменклатуры
	|		И ДанныеВозврата.Партия = Товары.Партия
	|ГДЕ
	|	Товары.Количество - ЕСТЬNULL(ЧекиККМВозврат.Количество, 0) - ЕСТЬNULL(ДанныеВозврата.Количество, 0) > 0
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|";
	
	Запрос.УстановитьПараметр("ДокументОснование", ЧекККМ);
	ДопустимыеСтатусы = Новый Массив();
	ДопустимыеСтатусы.Добавить(Перечисления.СтатусыЧековККМ.Пробит);
	Запрос.УстановитьПараметр("ДопустимыеСтатусы", ДопустимыеСтатусы);
	Запрос.УстановитьПараметр("ДокументВозврата", Объект.Ссылка);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	Шапка = РезультатЗапроса[0].Выбрать();
	Шапка.Следующий();
	
	ОбщегоНазначенияБольничнаяАптека.ПроверитьВозможностьВводаНаОсновании(
		Шапка.ЧекККМ,
		Шапка.ЕстьОшибкиПроведен,
		Шапка.Статус,
		Шапка.ЕстьОшибкиСтатус,
		ДопустимыеСтатусы);
	
	Если РозничныеПродажи.СменаОткрыта(Шапка.КассоваяСмена, Объект.Дата) Тогда
		ВызватьИсключение НСтр("ru = 'Кассовая смена открыта. Ввод на основании чека документа ""Возврат товаров от клиента"" при открытой кассовой смене запрещен.'");
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(Объект, Шапка);
	Объект.СпособОпределенияСебестоимости = Перечисления.СпособыОпределенияСебестоимости.ИзДокументаПродажи;
	
	Если РезультатЗапроса[РезультатЗапроса.ВГраница()].Пустой() Тогда
		ВызватьИсключение НСтр("ru = 'По данному чеку ККМ нет товаров которые можно вернуть.'");
	КонецЕсли;
	
	Если Не ПерезаполнитьТовары Тогда
		Возврат;
	КонецЕсли;
	
	Объект.Товары.Очистить();
	
	КэшированныеЗначения = Неопределено;
	
	Действия = ОбработкаТабличнойЧастиКлиентСервер;
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить(Действия.Действие_ПересчитатьКоэффициент());
	СтруктураДействий.Вставить(Действия.Действие_ПересчитатьКоличествоУпаковок());
	СтруктураДействий.Вставить(Действия.Действие_ПересчитатьЦену());
	
	Выборка = РезультатЗапроса[РезультатЗапроса.ВГраница()].Выбрать();
	Пока Выборка.Следующий() Цикл
		ТекущаяСтрока = Объект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(ТекущаяСтрока, Выборка);
		ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТабличнойЧасти(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	КонецЦикла;
	
	ПараметрыУчетаНоменклатуры = ЗапасыСервер.ПолучитьПараметрыУчетаНоменклатуры(Объект);
	ЗапасыСервер.ЗаполнитьСтатусыУчетаНоменклатуры(Объект, ПараметрыУчетаНоменклатуры);
	
КонецПроцедуры

// Возвращает предварительные параметры фискализации чека для документа.
//
// Параметры:
//  ДокументСсылка - ДокументСсылка.ВозвратТоваровОтКлиента - Документ.
//  СуммыОплаты - Структура - суммы оплаты.
//  ВерсияФФД - Строка - версия формата ФД для которой нужно вернуть данные.
//
// ВозвращаемоеЗначение:
//  Структура - см. функцию ОборудованиеЧекопечатающиеУстройстваКлиентСервер.ПараметрыОперацииФискализацииЧека().
//
Функция ПараметрыОперацииФискализацииЧека(ДокументСсылка, ВерсияФФД = Неопределено, СуммыОплаты = Неопределено) Экспорт
	
	Если Не РозничныеПродажи.ПоддерживаетсяВерсияФФД1_0_5(ВерсияФФД) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка               КАК ДокументСсылка,
	|	ДанныеДокумента.Организация          КАК Организация,
	|	ДанныеДокумента.Склад                КАК Склад,
	|	ДанныеДокумента.ЦенаВключаетНДС      КАК ЦенаВключаетНДС,
	|	ДанныеДокумента.НалогообложениеНДС   КАК НалогообложениеНДС,
	|	ДанныеДокумента.ЧекККМ               КАК ЧекККМ,
	|	ДанныеДокумента.СуммаДокумента       КАК СуммаДокумента
	|ИЗ
	|	Документ.ВозвратТоваровОтКлиента КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.НомерСтроки                   КАК НомерСтроки,
	|	ТабличнаяЧасть.Номенклатура                  КАК Номенклатура,
	|	ТабличнаяЧасть.СерияНоменклатуры             КАК СерияНоменклатуры,
	|	ТабличнаяЧасть.Партия                        КАК Партия,
	|	ТабличнаяЧасть.ЕдиницаИзмерения              КАК ЕдиницаИзмерения,
	|	
	|	ТабличнаяЧасть.КоличествоВЕдиницахИзмерения  КАК КоличествоВЕдиницахИзмерения,
	|	
	|	ТабличнаяЧасть.Цена                          КАК Цена,
	|	0                                            КАК СуммаСкидки,
	|	ТабличнаяЧасть.СтавкаНДС                     КАК СтавкаНДС,
	|	ТабличнаяЧасть.СуммаНДС                      КАК СуммаНДС,
	|	ТабличнаяЧасть.СуммаСНДС                     КАК СуммаСНДС
	|ИЗ
	|	Документ.ВозвратТоваровОтКлиента.Товары КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка");
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	Шапка = РезультатЗапроса[0].Выбрать();
	Шапка.Следующий();
	
	Товары = РезультатЗапроса[РезультатЗапроса.ВГраница()].Выгрузить();
	
	ПараметрыФискализацииЧека = ОборудованиеЧекопечатающиеУстройстваКлиентСервер.ПараметрыОперацииФискализацииЧека();
	
	ПараметрыФискализацииЧека.ДокументОснование = Шапка.ДокументСсылка;
	
	ПараметрыФискализацииЧека.ТипРасчета = Перечисления.ТипыРасчетаДенежнымиСредствами.ВозвратДенежныхСредств;
	
	Если Шапка.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД Тогда
		ПараметрыФискализацииЧека.СистемаНалогообложения = Перечисления.ТипыСистемНалогообложенияККТ.ЕНВД;
	Иначе
		ПараметрыФискализацииЧека.СистемаНалогообложения = Перечисления.ТипыСистемНалогообложенияККТ.ОСН;
	КонецЕсли;
	
	СведенияОЮрФизЛице = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Шапка.Организация, ТекущаяДатаСеанса());
	
	ПараметрыФискализацииЧека.АдресРасчетов          = СведенияОЮрФизЛице.ФактическийАдрес;
	ПараметрыФискализацииЧека.МестоРасчетов          = "";
	
	// Параметры необходимые для чека ЕНВД на принтере чеков
	ПараметрыФискализацииЧека.Организация          = Шапка.Организация;
	ПараметрыФискализацииЧека.ОрганизацияНазвание  = СведенияОЮрФизЛице.ПолноеНаименование;
	ПараметрыФискализацииЧека.ОрганизацияИНН       = СведенияОЮрФизЛице.ИНН;
	ПараметрыФискализацииЧека.ОрганизацияКПП       = СведенияОЮрФизЛице.КПП;
	ПараметрыФискализацииЧека.АдресМагазина        = СведенияОЮрФизЛице.ФактическийАдрес;
	ПараметрыФискализацииЧека.НаименованиеМагазина = СведенияОЮрФизЛице.СокращенноеНаименование;
	
	СуммаДокумента  = Шапка.СуммаДокумента;
	
	Оплата = Новый Структура;
	Оплата.Вставить("СуммаНаличные"  , 0);
	Оплата.Вставить("СуммаЭлектронно", 0);
	Оплата.Вставить("СуммаПредоплата", 0);
	Оплата.Вставить("СуммаПостоплата", 0);
	
	ВсегоОплаты = 0;
	Если ЗначениеЗаполнено(СуммыОплаты) Тогда
		Для Каждого КлючИЗначение Из СуммыОплаты Цикл
			ВсегоОплаты = ВсегоОплаты + КлючИЗначение.Значение;
		КонецЦикла;
	КонецЕсли;
	
	Если ВсегоОплаты > 0 Тогда
		
		ЗаполнитьЗначенияСвойств(Оплата, СуммыОплаты);
		
	ИначеЕсли ЗначениеЗаполнено(Шапка.ЧекККМ) Тогда
		
		Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	ЧекККМ.Ссылка                                     КАК Ссылка,
		|	СУММА(ЕСТЬNULL(ОплатаКартами.Сумма, 0))           КАК СуммаЭлектронно,
		|	МАКСИМУМ(ЧекККМ.СуммаДокумента)
		|		- СУММА(ЕСТЬNULL(ОплатаКартами.Сумма, 0))     КАК СуммаНеЭлектронно,
		// ПолученоНаличными = СуммаНаличные + Сдача
		|	МАКСИМУМ(ЧекККМ.ПолученоНаличными)                КАК ПолученоНаличными
		|ПОМЕСТИТЬ ДанныеОплаты
		|ИЗ
		|	Документ.ЧекККМ КАК ЧекККМ
		|		ЛЕВОЕ СОЕДИНЕНИЕ
		|			Документ.ЧекККМ.ОплатаПлатежнымиКартами КАК ОплатаКартами
		|		ПО
		|			ОплатаКартами.Ссылка = ЧекККМ.Ссылка
		|ГДЕ
		|	ЧекККМ.Ссылка = &ЧекККМ
		|	И ЧекККМ.СуммаДокумента = &СуммаДокументаВозврата
		|СГРУППИРОВАТЬ ПО
		|	ЧекККМ.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеОплаты.СуммаЭлектронно               КАК СуммаЭлектронно,
		// СуммаНаличные = Мин(ПолученоНаличными, СуммаНеЭлектронно)
		|	ВЫБОР
		|		КОГДА ДанныеОплаты.ПолученоНаличными < ДанныеОплаты.СуммаНеЭлектронно
		|			ТОГДА ДанныеОплаты.ПолученоНаличными
		|		ИНАЧЕ ДанныеОплаты.СуммаНеЭлектронно
		|	КОНЕЦ                                      КАК СуммаНаличные,
		// СуммаПредоплата = СуммаНеЭлектронно - СуммаНаличные
		|	ДанныеОплаты.СуммаНеЭлектронно
		|		- ВЫБОР
		|			КОГДА ДанныеОплаты.ПолученоНаличными < ДанныеОплаты.СуммаНеЭлектронно
		|				ТОГДА ДанныеОплаты.ПолученоНаличными
		|			ИНАЧЕ ДанныеОплаты.СуммаНеЭлектронно
		|		КОНЕЦ                                  КАК СуммаПредоплата
		|ИЗ
		|	ДанныеОплаты КАК ДанныеОплаты
		|");
		
		Запрос.УстановитьПараметр("ЧекККМ"                , Шапка.ЧекККМ);
		Запрос.УстановитьПараметр("СуммаДокументаВозврата", СуммаДокумента);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Выборка.Следующий();
		
		ЗаполнитьЗначенияСвойств(Оплата, Выборка);
		
	КонецЕсли;
	
	СуммаОплаты = Оплата.СуммаНаличные + Оплата.СуммаЭлектронно + Оплата.СуммаПредоплата;
	
	Для Каждого СтрокаТЧ Из Товары Цикл
		
		СтрокаПозицииЧека = ОборудованиеЧекопечатающиеУстройстваКлиентСервер.ПараметрыФискальнойСтрокиЧека();
		
		Если СуммаОплаты > 0 И СуммаОплаты >= СуммаДокумента Тогда
			СтрокаПозицииЧека.ПризнакСпособаРасчета = Перечисления.ПризнакиСпособаРасчета.ПередачаСПолнойОплатой;
		ИначеЕсли СуммаОплаты > 0 Тогда
			СтрокаПозицииЧека.ПризнакСпособаРасчета = Перечисления.ПризнакиСпособаРасчета.ПередачаСЧастичнойОплатой;
		Иначе
			СтрокаПозицииЧека.ПризнакСпособаРасчета = Перечисления.ПризнакиСпособаРасчета.ПередачаБезОплаты;
		КонецЕсли;
		
		СтрокаПозицииЧека.ПризнакПредметаРасчета = Перечисления.ПризнакиПредметаРасчета.Товар; // Признак предмета расчета. Обязательно для ФФД 1.1 и выше.
		
		Если СтрокаТЧ.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС Тогда
			ЗначениеСтавкиНДС = Неопределено;
		Иначе
			СтавкаНДС = ЦенообразованиеБольничнаяАптекаКлиентСервер.ПолучитьСтавкуНДСЧислом(СтрокаТЧ.СтавкаНДС);
			ЗначениеСтавкиНДС = СтавкаНДС * 100;
		КонецЕсли;
		
		СтрокаПозицииЧека.НомерСекции       = 1;
		СтрокаПозицииЧека.НомерСтрокиТовара = СтрокаТЧ.НомерСтроки;
		СтрокаПозицииЧека.Наименование = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
			СтрокаТЧ.Номенклатура, СтрокаТЧ.СерияНоменклатуры);
		СтрокаПозицииЧека.Количество     = СтрокаТЧ.КоличествоВЕдиницахИзмерения;
		СтрокаПозицииЧека.Цена           = ?(Шапка.ЦенаВключаетНДС, СтрокаТЧ.Цена, Окр(СтрокаТЧ.СуммаСНДС / СтрокаПозицииЧека.Количество, 2));
		СтрокаПозицииЧека.Сумма          = СтрокаТЧ.СуммаСНДС;
		СтрокаПозицииЧека.ЦенаСоСкидками = Окр(СтрокаПозицииЧека.Сумма / СтрокаПозицииЧека.Количество, 2, 1); // Обязательно, Цена с учетом скидок и наценок (Необходимо начиная с ФФД 1.0.5 и выше)
		СтрокаПозицииЧека.СуммаСкидок    = СтрокаТЧ.СуммаСкидки;
		СтрокаПозицииЧека.СтавкаНДС      = ЗначениеСтавкиНДС;
		СтрокаПозицииЧека.СуммаНДС       = СтрокаТЧ.СуммаНДС;
		
		ПараметрыФискализацииЧека.ПозицииЧека.Добавить(СтрокаПозицииЧека);
		
	КонецЦикла;
	
	// Сумма наличными
	СтрокаОплаты = Новый Структура();
	СтрокаОплаты.Вставить("ТипОплаты", Перечисления.ТипыОплатыККТ.Наличные);
	СтрокаОплаты.Вставить("Сумма"    , Оплата.СуммаНаличные);
	ПараметрыФискализацииЧека.ТаблицаОплат.Добавить(СтрокаОплаты);
	
	// Сумма электронно
	СтрокаОплаты = Новый Структура();
	СтрокаОплаты.Вставить("ТипОплаты", Перечисления.ТипыОплатыККТ.Электронно);
	СтрокаОплаты.Вставить("Сумма"    , Оплата.СуммаЭлектронно);
	ПараметрыФискализацииЧека.ТаблицаОплат.Добавить(СтрокаОплаты);
	
	// Сумма предоплатой (зачетом аванса)
	СтрокаОплаты = Новый Структура();
	СтрокаОплаты.Вставить("ТипОплаты", Перечисления.ТипыОплатыККТ.Предоплата);
	СтрокаОплаты.Вставить("Сумма"    , Оплата.СуммаПредоплата);
	ПараметрыФискализацииЧека.ТаблицаОплат.Добавить(СтрокаОплаты);
	
	// Сумма постоплатой (в кредит)
	СтрокаОплаты = Новый Структура();
	СтрокаОплаты.Вставить("ТипОплаты", Перечисления.ТипыОплатыККТ.Постоплата);
	СтрокаОплаты.Вставить("Сумма"    , Оплата.СуммаПостоплата);
	ПараметрыФискализацииЧека.ТаблицаОплат.Добавить(СтрокаОплаты);
	
	Возврат ПараметрыФискализацииЧека;
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	И ЗначениеРазрешено(ПодразделениеОрганизации)
	|	И ЗначениеРазрешено(Склад)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти // ПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

////////////////////////////////////////////////////////////////////////////////
// Проведение
#Область Проведение

// Инициализирует таблицы значений, содержащие данные для проведения документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицыДвиженийДляПроведения(ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	ОсновныеДанныеДокумента = ПодготовитьОсновныеДанныеДляПроведения(ДополнительныеСвойства);
	
	ИнициализироватьКлючиАналитикиВидаУчета(ОсновныеДанныеДокумента);
	ИнициализироватьКлючиАналитикиУчетаНоменклатуры(ОсновныеДанныеДокумента);
	
	ПроведениеБольничнаяАптека.ДобавитьТекстЗапросаДвижений(ДополнительныеСвойства, ТекстЗапросаВтТаблицаТовары());
	ПроведениеБольничнаяАптека.ДобавитьТекстЗапросаДвижений(ДополнительныеСвойства, ТекстЗапросаТоварыНаСкладах(), Метаданные.РегистрыНакопления.ТоварыНаСкладах);
	ПроведениеБольничнаяАптека.ДобавитьТекстЗапросаДвижений(ДополнительныеСвойства, ТекстЗапросаСвободныеОстатки(), Метаданные.РегистрыНакопления.СвободныеОстатки);
	ПроведениеБольничнаяАптека.ДобавитьТекстЗапросаДвижений(ДополнительныеСвойства, ТекстЗапросаВтАналитика());
	ПроведениеБольничнаяАптека.ДобавитьТекстЗапросаДвижений(ДополнительныеСвойства, ТекстЗапросаСебестоимостьТоваров(), Метаданные.РегистрыНакопления.СебестоимостьТоваров);
	ПроведениеБольничнаяАптека.ДобавитьТекстЗапросаДвижений(ДополнительныеСвойства, ТекстЗапросаВыручкаИСебестоимостьПродаж(), Метаданные.РегистрыНакопления.ВыручкаИСебестоимостьПродаж);
	ПроведениеБольничнаяАптека.ДобавитьТекстЗапросаДвижений(ДополнительныеСвойства, ТекстЗапросаДвиженияНоменклатураНоменклатура(), Метаданные.РегистрыНакопления.ДвиженияНоменклатураНоменклатура);
	
	Запрос = Новый Запрос(ПроведениеБольничнаяАптека.ПолучитьТекстЗапросаДвижений(ДополнительныеСвойства, Регистры));
	
	Для Каждого ДанныеДокумента Из ОсновныеДанныеДокумента Цикл
		Запрос.УстановитьПараметр(ДанныеДокумента.Ключ, ДанныеДокумента.Значение);
	КонецЦикла;
	
	ПроведениеБольничнаяАптека.ЗаполнитьТаблицыДвижений(ДополнительныеСвойства, Запрос.ВыполнитьПакет(), Регистры);
	
КонецПроцедуры

Функция ПодготовитьОсновныеДанныеДляПроведения(ДополнительныеСвойства)
	
	ЗапрашиваемыеДанные = Новый Структура;
	ЗапрашиваемыеДанные.Вставить("Ссылка");
	ЗапрашиваемыеДанные.Вставить("Период", "Дата");
	ЗапрашиваемыеДанные.Вставить("Организация");
	ЗапрашиваемыеДанные.Вставить("Склад");
	ЗапрашиваемыеДанные.Вставить("ПодразделениеОрганизации");
	ЗапрашиваемыеДанные.Вставить("Валюта");
	ЗапрашиваемыеДанные.Вставить("ИсточникФинансирования");
	ЗапрашиваемыеДанные.Вставить("НалогообложениеНДС");
	ЗапрашиваемыеДанные.Вставить("СпособОпределенияСебестоимости");
	ЗапрашиваемыеДанные.Вставить("ДокументРеализации");
	ЗапрашиваемыеДанные.Вставить("ПериодПродажи"          , "ЕСТЬNULL(ДокументРеализации.Дата, ДАТАВРЕМЯ(1, 1, 1))");
	ЗапрашиваемыеДанные.Вставить("СкладРеализации"        , "ЕСТЬNULL(ДокументРеализации.Склад, Склад)");
	ЗапрашиваемыеДанные.Вставить("ПодразделениеРеализации", "ЕСТЬNULL(ДокументРеализации.ПодразделениеОрганизации, ПодразделениеОрганизации)");
	
	ОсновныеДанныеДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
		ПроведениеБольничнаяАптека.ПолучитьСсылкуНаДокументДляПроведения(ДополнительныеСвойства),
		ЗапрашиваемыеДанные);
	
	ОсновныеДанныеДокумента.Вставить("НачалоМесяцаПериода", НачалоМесяца(ОсновныеДанныеДокумента.Период));
	ОсновныеДанныеДокумента.ДокументРеализации = ?(ЗначениеЗаполнено(ОсновныеДанныеДокумента.ДокументРеализации), ОсновныеДанныеДокумента.ДокументРеализации, Неопределено);
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьИсточникиФинансирования") Тогда
		ОсновныеДанныеДокумента.ИсточникФинансирования = Справочники.ИсточникиФинансирования.ПустаяСсылка();
	КонецЕсли;
	
	СтруктураКурсаДокумента = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ОсновныеДанныеДокумента.Валюта, ОсновныеДанныеДокумента.Период);
	КоэффициентПересчетаВВалютуРегл = СтруктураКурсаДокумента.Курс / СтруктураКурсаДокумента.Кратность;
	ОсновныеДанныеДокумента.Вставить("КоэффициентПересчетаВВалютуРегл", КоэффициентПересчетаВВалютуРегл);
	
	ЗапасыСервер.ПриПодготовкеОсновныхДанныхДляПроведения(ДополнительныеСвойства, ОсновныеДанныеДокумента);
	
	Возврат ОсновныеДанныеДокумента;
	
КонецФункции

Функция ТекстЗапросаВтТаблицаТовары()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки                               КАК НомерСтроки,
	|	&Организация                                            КАК Организация,
	|	ТаблицаТовары.Номенклатура                              КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерий В (&СтатусУчетПоСериям, &СтатусУчетСебестоимостиПоСериям)
	|			ТОГДА ТаблицаТовары.СерияНоменклатуры
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ                                                   КАК СерияНоменклатуры,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияПартий В (&СтатусУчетПоПартиям, &СтатусУчетСебестоимостиПоПартиям)
	|			ТОГДА ТаблицаТовары.Партия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ                                                   КАК Партия,
	|	&ИсточникФинансирования                                 КАК ИсточникФинансирования,
	|	ТаблицаТовары.Количество                                КАК Количество,
	|	ТаблицаТовары.СтавкаНДС                                 КАК СтавкаНДС,
	|	ВЫРАЗИТЬ(ТаблицаТовары.СуммаСНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2)) КАК СуммаСНДС,
	|	ВЫРАЗИТЬ(ТаблицаТовары.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))  КАК СуммаНДС,
	|	ВЫРАЗИТЬ((ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2)) КАК СуммаРегл,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерий В (&СтатусУчетСебестоимостиПоСериям)
	|			ТОГДА ТаблицаТовары.СерияНоменклатуры
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ                                                   КАК СерияНоменклатурыДляСебестоимости,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияПартий В (&СтатусУчетСебестоимостиПоПартиям)
	|			ТОГДА ТаблицаТовары.Партия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ                                                   КАК ПартияДляСебестоимости,
	|	&ДокументРеализации                                     КАК ДокументРеализации,
	|	&ПериодПродажи                                          КАК ПериодПродажи,
	|	&СкладРеализации                                        КАК СкладРеализации,
	|	&ПодразделениеРеализации                                КАК ПодразделениеРеализации,
	|	ТаблицаТовары.Себестоимость                             КАК Себестоимость,
	|	ВЫБОР
	|		КОГДА &НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|			ТОГДА ТаблицаТовары.СебестоимостьБезНДС
	|		ИНАЧЕ ТаблицаТовары.Себестоимость
	|	КОНЕЦ                                                   КАК СебестоимостьБезНДС,
	|	ТаблицаТовары.СебестоимостьРегл                         КАК СебестоимостьРегл
	|ПОМЕСТИТЬ ВтТаблицаТовары
	|ИЗ
	|	Документ.ВозвратТоваровОтКлиента.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТоварыНаСкладах()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки               КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)  КАК ВидДвижения,
	|	&Период                                 КАК Период,
	|	ТаблицаТовары.Организация               КАК Организация,
	|	&Склад                                  КАК Склад,
	|	ТаблицаТовары.Номенклатура              КАК Номенклатура,
	|	ТаблицаТовары.СерияНоменклатуры         КАК СерияНоменклатуры,
	|	ТаблицаТовары.Партия                    КАК Партия,
	|	ТаблицаТовары.ИсточникФинансирования    КАК ИсточникФинансирования,
	|	ТаблицаТовары.Количество                КАК Количество
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаСвободныеОстатки()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки               КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)  КАК ВидДвижения,
	|	&Период                                 КАК Период,
	|	ТаблицаТовары.Организация               КАК Организация,
	|	&Склад                                  КАК Склад,
	|	ТаблицаТовары.Номенклатура              КАК Номенклатура,
	|	ТаблицаТовары.СерияНоменклатуры         КАК СерияНоменклатуры,
	|	ТаблицаТовары.Партия                    КАК Партия,
	|	ТаблицаТовары.ИсточникФинансирования    КАК ИсточникФинансирования,
	|	ТаблицаТовары.Количество                КАК ВНаличии
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтАналитика()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТовары.Номенклатура                       КАК Номенклатура,
	|	ТаблицаТовары.СерияНоменклатурыДляСебестоимости  КАК СерияНоменклатуры,
	|	ТаблицаТовары.ПартияДляСебестоимости             КАК Партия,
	|	ТаблицаТовары.ИсточникФинансирования             КАК ИсточникФинансирования,
	|	АналитикаУчетаНоменклатуры.КлючАналитики         КАК АналитикаУчетаНоменклатуры,
	|	АналитикаВидаУчета.КлючАналитики                 КАК АналитикаВидаУчета,
	|	АналитикаВидаУчетаРеализации.КлючАналитики       КАК АналитикаВидаУчетаРеализации,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета
	|ПОМЕСТИТЬ ВтАналитика
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
	|		ПО
	|			ТаблицаТовары.Номенклатура                        = АналитикаУчетаНоменклатуры.Номенклатура
	|			И ТаблицаТовары.СерияНоменклатурыДляСебестоимости = АналитикаУчетаНоменклатуры.СерияНоменклатуры
	|			И ТаблицаТовары.ПартияДляСебестоимости            = АналитикаУчетаНоменклатуры.Партия
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РегистрСведений.АналитикаВидаУчета КАК АналитикаВидаУчета
	|		ПО
	|			АналитикаВидаУчета.Организация                = ТаблицаТовары.Организация
	|			И АналитикаВидаУчета.Склад                    = &Склад
	|			И АналитикаВидаУчета.ИсточникФинансирования   = ТаблицаТовары.ИсточникФинансирования
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РегистрСведений.АналитикаВидаУчета КАК АналитикаВидаУчетаРеализации
	|		ПО
	|			АналитикаВидаУчетаРеализации.Организация                = ТаблицаТовары.Организация
	|			И АналитикаВидаУчетаРеализации.Склад                    = ТаблицаТовары.СкладРеализации
	|			И АналитикаВидаУчетаРеализации.ИсточникФинансирования   = ТаблицаТовары.ИсточникФинансирования
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	АналитикаВидаУчета,
	|	РазделУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаСебестоимостьТоваров()
	
	ТекстЗапроса = "
	// Возврат без документа продажи
	|ВЫБРАТЬ
	|	1                                                         КАК Порядок,
	|	ТаблицаТовары.НомерСтроки                                 КАК НомерСтроки,
	|	&Период                                                   КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                    КАК ВидДвижения,
	|	Аналитика.АналитикаУчетаНоменклатуры                      КАК АналитикаУчетаНоменклатуры,
	|	Аналитика.АналитикаВидаУчета                              КАК АналитикаВидаУчета,
	|	Аналитика.РазделУчета                                     КАК РазделУчета,
	|	ТаблицаТовары.Количество                                  КАК Количество,
	|	ВЫБОР
	|		КОГДА &СпособОпределенияСебестоимости = ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимости.Вручную)
	|			ТОГДА ТаблицаТовары.Себестоимость
	|		ИНАЧЕ ТаблицаТовары.СуммаСНДС
	|	КОНЕЦ                                                     КАК Стоимость,
	|	ВЫБОР
	|		КОГДА &СпособОпределенияСебестоимости = ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимости.Вручную)
	|			ТОГДА ТаблицаТовары.СебестоимостьБезНДС
	|		ИНАЧЕ ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС
	|	КОНЕЦ                                                     КАК СтоимостьБезНДС,
	|	ВЫБОР
	|		КОГДА &СпособОпределенияСебестоимости = ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимости.Вручную)
	|			ТОГДА ТаблицаТовары.СебестоимостьРегл
	|		ИНАЧЕ ТаблицаТовары.СуммаРегл
	|	КОНЕЦ                                                     КАК СтоимостьРегл,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОприходованиеПоВозврату)  КАК ХозяйственнаяОперация,
	|	&Ссылка                                                   КАК ДокументДвижения,
	|	&ПодразделениеОрганизации                                 КАК ПодразделениеОрганизации,
	|	НЕОПРЕДЕЛЕНО                                              КАК ДокументИсточник,
	|	ДАТАВРЕМЯ(1, 1, 1)                                        КАК ПериодПродажи,
	|	НЕОПРЕДЕЛЕНО                                              КАК КорРазделУчета,
	|	НЕОПРЕДЕЛЕНО                                              КАК КорАналитикаВидаУчета,
	|	НЕОПРЕДЕЛЕНО                                              КАК КорАналитикаУчетаНоменклатуры
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			ВтАналитика КАК Аналитика
	|		ПО
	|			ТаблицаТовары.Номенклатура                        = Аналитика.Номенклатура
	|			И ТаблицаТовары.СерияНоменклатурыДляСебестоимости = Аналитика.СерияНоменклатуры
	|			И ТаблицаТовары.ПартияДляСебестоимости            = Аналитика.Партия
	|			И ТаблицаТовары.ИсточникФинансирования            = Аналитика.ИсточникФинансирования
	|ГДЕ
	|	ТаблицаТовары.ДокументРеализации = НЕОПРЕДЕЛЕНО
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Возврат прошлого периода - всегда по документу реализации.
	// В кор. части необходимо указать аналитику продажи
	// если товар возвращается на склад, отличный от склада реализации.
	|ВЫБРАТЬ
	|	2                                                         КАК Порядок,
	|	ТаблицаТовары.НомерСтроки                                 КАК НомерСтроки,
	|	&Период                                                   КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                    КАК ВидДвижения,
	|	Аналитика.АналитикаУчетаНоменклатуры                      КАК АналитикаУчетаНоменклатуры,
	|	Аналитика.АналитикаВидаУчета                              КАК АналитикаВидаУчета,
	|	Аналитика.РазделУчета                                     КАК РазделУчета,
	|	ТаблицаТовары.Количество                                  КАК Количество,
	|	0                                                         КАК Стоимость,
	|	0                                                         КАК СтоимостьБезНДС,
	|	0                                                         КАК СтоимостьРегл,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровОтКлиентаПрошлыхПериодов) КАК ХозяйственнаяОперация,
	|	&Ссылка                                                   КАК ДокументДвижения,
	|	&ПодразделениеРеализации                                  КАК ПодразделениеОрганизации,
	|	ТаблицаТовары.ДокументРеализации                          КАК ДокументИсточник,
	|	ТаблицаТовары.ПериодПродажи                               КАК ПериодПродажи,
	|	НЕОПРЕДЕЛЕНО                                              КАК КорРазделУчета,
	|	Аналитика.АналитикаВидаУчетаРеализации                    КАК КорАналитикаВидаУчета,
	|	НЕОПРЕДЕЛЕНО                                              КАК КорАналитикаУчетаНоменклатуры
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			ВтАналитика КАК Аналитика
	|		ПО
	|			ТаблицаТовары.Номенклатура                        = Аналитика.Номенклатура
	|			И ТаблицаТовары.СерияНоменклатурыДляСебестоимости = Аналитика.СерияНоменклатуры
	|			И ТаблицаТовары.ПартияДляСебестоимости            = Аналитика.Партия
	|			И ТаблицаТовары.ИсточникФинансирования            = Аналитика.ИсточникФинансирования
	|ГДЕ
	|	ТаблицаТовары.ДокументРеализации <> НЕОПРЕДЕЛЕНО
	|	И ТаблицаТовары.ПериодПродажи < &НачалоМесяцаПериода
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Данные для возврата товаров по документу реализации
	// Сторнирование реализации текущего периода. Используется аналитика продажи.
	|ВЫБРАТЬ
	|	3                                                         КАК Порядок,
	|	ТаблицаТовары.НомерСтроки                                 КАК НомерСтроки,
	|	&Период                                                   КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)                    КАК ВидДвижения,
	|	Аналитика.АналитикаУчетаНоменклатуры                      КАК АналитикаУчетаНоменклатуры,
	|	Аналитика.АналитикаВидаУчетаРеализации                    КАК АналитикаВидаУчета,
	|	Аналитика.РазделУчета                                     КАК РазделУчета,
	|	-ТаблицаТовары.Количество                                 КАК Количество,
	|	0                                                         КАК Стоимость,
	|	0                                                         КАК СтоимостьБезНДС,
	|	0                                                         КАК СтоимостьРегл,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноРеализации) КАК ХозяйственнаяОперация,
	|	&Ссылка                                                   КАК ДокументДвижения,
	|	&ПодразделениеРеализации                                  КАК ПодразделениеОрганизации,
	|	ТаблицаТовары.ДокументРеализации                          КАК ДокументИсточник,
	|	ТаблицаТовары.ПериодПродажи                               КАК ПериодПродажи,
	|	НЕОПРЕДЕЛЕНО                                              КАК КорРазделУчета,
	|	НЕОПРЕДЕЛЕНО                                              КАК КорАналитикаВидаУчета,
	|	НЕОПРЕДЕЛЕНО                                              КАК КорАналитикаУчетаНоменклатуры
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			ВтАналитика КАК Аналитика
	|		ПО
	|			ТаблицаТовары.Номенклатура                        = Аналитика.Номенклатура
	|			И ТаблицаТовары.СерияНоменклатурыДляСебестоимости = Аналитика.СерияНоменклатуры
	|			И ТаблицаТовары.ПартияДляСебестоимости            = Аналитика.Партия
	|			И ТаблицаТовары.ИсточникФинансирования            = Аналитика.ИсточникФинансирования
	|ГДЕ
	|	ТаблицаТовары.ДокументРеализации <> НЕОПРЕДЕЛЕНО
	|	И ТаблицаТовары.ПериодПродажи >= &НачалоМесяцаПериода
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Перемещение с реализации на возврат - списание
	|ВЫБРАТЬ
	|	4                                                         КАК Порядок,
	|	ТаблицаТовары.НомерСтроки                                 КАК НомерСтроки,
	|	&Период                                                   КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)                    КАК ВидДвижения,
	|	Аналитика.АналитикаУчетаНоменклатуры                      КАК АналитикаУчетаНоменклатуры,
	|	Аналитика.АналитикаВидаУчетаРеализации                    КАК АналитикаВидаУчета,
	|	Аналитика.РазделУчета                                     КАК РазделУчета,
	|	ТаблицаТовары.Количество                                  КАК Количество,
	|	0                                                         КАК Стоимость,
	|	0                                                         КАК СтоимостьБезНДС,
	|	0                                                         КАК СтоимостьРегл,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеТоваров)  КАК ХозяйственнаяОперация,
	|	&Ссылка                                                   КАК ДокументДвижения,
	|	НЕОПРЕДЕЛЕНО                                              КАК ПодразделениеОрганизации,
	|	НЕОПРЕДЕЛЕНО                                              КАК ДокументИсточник,
	|	ДАТАВРЕМЯ(1, 1, 1)                                        КАК ПериодПродажи,
	|	Аналитика.РазделУчета                                     КАК КорРазделУчета,
	|	Аналитика.АналитикаВидаУчета                              КАК КорАналитикаВидаУчета,
	|	Аналитика.АналитикаУчетаНоменклатуры                      КАК КорАналитикаУчетаНоменклатуры
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			ВтАналитика КАК Аналитика
	|		ПО
	|			ТаблицаТовары.Номенклатура                        = Аналитика.Номенклатура
	|			И ТаблицаТовары.СерияНоменклатурыДляСебестоимости = Аналитика.СерияНоменклатуры
	|			И ТаблицаТовары.ПартияДляСебестоимости            = Аналитика.Партия
	|			И ТаблицаТовары.ИсточникФинансирования            = Аналитика.ИсточникФинансирования
	|ГДЕ
	|	ТаблицаТовары.ДокументРеализации <> НЕОПРЕДЕЛЕНО
	|	И ТаблицаТовары.ПериодПродажи >= &НачалоМесяцаПериода
	|	И ТаблицаТовары.СкладРеализации <> &Склад
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Перемещение с реализации на возврат - Оприходование
	|ВЫБРАТЬ
	|	5                                                         КАК Порядок,
	|	ТаблицаТовары.НомерСтроки                                 КАК НомерСтроки,
	|	&Период                                                   КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                    КАК ВидДвижения,
	|	Аналитика.АналитикаУчетаНоменклатуры                      КАК АналитикаУчетаНоменклатуры,
	|	Аналитика.АналитикаВидаУчета                              КАК АналитикаВидаУчета,
	|	Аналитика.РазделУчета                                     КАК РазделУчета,
	|	ТаблицаТовары.Количество                                  КАК Количество,
	|	0                                                         КАК Стоимость,
	|	0                                                         КАК СтоимостьБезНДС,
	|	0                                                         КАК СтоимостьРегл,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеТоваров)  КАК ХозяйственнаяОперация,
	|	&Ссылка                                                   КАК ДокументДвижения,
	|	НЕОПРЕДЕЛЕНО                                              КАК ПодразделениеОрганизации,
	|	НЕОПРЕДЕЛЕНО                                              КАК ДокументИсточник,
	|	ДАТАВРЕМЯ(1, 1, 1)                                        КАК ПериодПродажи,
	|	НЕОПРЕДЕЛЕНО                                              КАК КорРазделУчета,
	|	НЕОПРЕДЕЛЕНО                                              КАК КорАналитикаВидаУчета,
	|	НЕОПРЕДЕЛЕНО                                              КАК КорАналитикаУчетаНоменклатуры
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			ВтАналитика КАК Аналитика
	|		ПО
	|			ТаблицаТовары.Номенклатура                        = Аналитика.Номенклатура
	|			И ТаблицаТовары.СерияНоменклатурыДляСебестоимости = Аналитика.СерияНоменклатуры
	|			И ТаблицаТовары.ПартияДляСебестоимости            = Аналитика.Партия
	|			И ТаблицаТовары.ИсточникФинансирования            = Аналитика.ИсточникФинансирования
	|ГДЕ
	|	ТаблицаТовары.ДокументРеализации <> НЕОПРЕДЕЛЕНО
	|	И ТаблицаТовары.ПериодПродажи >= &НачалоМесяцаПериода
	|	И ТаблицаТовары.СкладРеализации <> &Склад
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВыручкаИСебестоимостьПродаж()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки                                 КАК НомерСтроки,
	|	&Период                                                   КАК Период,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.ДокументРеализации <> НЕОПРЕДЕЛЕНО
	|				И ТаблицаТовары.ПериодПродажи < &НачалоМесяцаПериода
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровОтКлиентаПрошлыхПериодов)
	|		КОГДА ТаблицаТовары.ДокументРеализации = НЕОПРЕДЕЛЕНО
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОприходованиеПоВозврату)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноРеализации)
	|	КОНЕЦ                                                     КАК ХозяйственнаяОперация,
	|	Аналитика.АналитикаУчетаНоменклатуры                      КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.Организация                                 КАК Организация,
	|	ТаблицаТовары.СкладРеализации                             КАК Склад,
	|	ТаблицаТовары.ПодразделениеРеализации                     КАК ПодразделениеОрганизации,
	|	НЕОПРЕДЕЛЕНО                                              КАК Контрагент,
	|	НЕОПРЕДЕЛЕНО                                              КАК ДоговорКонтрагента,
	|	ТаблицаТовары.ИсточникФинансирования                      КАК ИсточникФинансирования,
	|	-ТаблицаТовары.Количество                                 КАК Количество,
	|	-ТаблицаТовары.СуммаСНДС                                  КАК Сумма,
	|	-ТаблицаТовары.СуммаСНДС + ТаблицаТовары.СуммаНДС         КАК СуммаБезНДС,
	|	ВЫБОР
	|		КОГДА &СпособОпределенияСебестоимости = ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимости.Вручную)
	|			ТОГДА - ТаблицаТовары.Себестоимость
	|		КОГДА &СпособОпределенияСебестоимости = ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимости.ИзТекущегоДокумента)
	|			ТОГДА - ТаблицаТовары.СуммаСНДС
	|		ИНАЧЕ 0
	|	КОНЕЦ                                                     КАК Стоимость,
	|	ВЫБОР
	|		КОГДА &СпособОпределенияСебестоимости = ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимости.Вручную)
	|			ТОГДА - ТаблицаТовары.СебестоимостьБезНДС
	|		КОГДА &СпособОпределенияСебестоимости = ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимости.ИзТекущегоДокумента)
	|			ТОГДА - (ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС)
	|		ИНАЧЕ 0
	|	КОНЕЦ                                                     КАК СтоимостьБезНДС,
	|	ВЫБОР
	|		КОГДА &СпособОпределенияСебестоимости = ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимости.Вручную)
	|			ТОГДА - ТаблицаТовары.СебестоимостьРегл
	|		КОГДА &СпособОпределенияСебестоимости = ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимости.ИзТекущегоДокумента)
	|			ТОГДА - ТаблицаТовары.СуммаРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ                                                     КАК СтоимостьРегл,
	|	&Ссылка                                                   КАК ДокументДвижения
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			ВтАналитика КАК Аналитика
	|		ПО
	|			ТаблицаТовары.Номенклатура                        = Аналитика.Номенклатура
	|			И ТаблицаТовары.СерияНоменклатурыДляСебестоимости = Аналитика.СерияНоменклатуры
	|			И ТаблицаТовары.ПартияДляСебестоимости            = Аналитика.Партия
	|			И ТаблицаТовары.ИсточникФинансирования            = Аналитика.ИсточникФинансирования
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаДвиженияНоменклатураНоменклатура()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки                           КАК НомерСтроки,
	|	&Период                                             КАК Период,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеТоваров)  КАК ХозяйственнаяОперация,
	|	Аналитика.АналитикаВидаУчетаРеализации              КАК АналитикаВидаУчета,
	|	Аналитика.АналитикаУчетаНоменклатуры                КАК АналитикаУчетаНоменклатуры,
	|	Аналитика.АналитикаВидаУчета                        КАК КорАналитикаВидаУчета,
	|	Аналитика.АналитикаУчетаНоменклатуры                КАК КорАналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.Количество                            КАК Количество,
	|	ТаблицаТовары.Количество                            КАК КорКоличество,
	|	&Ссылка                                             КАК ДокументДвижения
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			ВтАналитика КАК Аналитика
	|		ПО
	|			ТаблицаТовары.Номенклатура                        = Аналитика.Номенклатура
	|			И ТаблицаТовары.СерияНоменклатурыДляСебестоимости = Аналитика.СерияНоменклатуры
	|			И ТаблицаТовары.ПартияДляСебестоимости            = Аналитика.Партия
	|			И ТаблицаТовары.ИсточникФинансирования            = Аналитика.ИсточникФинансирования
	|ГДЕ
	|	ТаблицаТовары.ДокументРеализации <> НЕОПРЕДЕЛЕНО
	|	И ТаблицаТовары.ПериодПродажи >= &НачалоМесяцаПериода
	|	И ТаблицаТовары.СкладРеализации <> &Склад
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ИнициализироватьКлючиАналитикиУчетаНоменклатуры(Реквизиты)

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерий В (&СтатусУчетСебестоимостиПоСериям)
	|			ТОГДА ТаблицаТовары.СерияНоменклатуры
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК СерияНоменклатуры,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияПартий В (&СтатусУчетСебестоимостиПоПартиям)
	|			ТОГДА ТаблицаТовары.Партия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК Партия
	|ПОМЕСТИТЬ втТаблицаАналитики
	|ИЗ
	|	Документ.ВозвратТоваровОтКлиента.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	СерияНоменклатуры,
	|	Партия
	|";
	
	Запрос.УстановитьПараметр("Ссылка", Реквизиты.Ссылка);
	Запрос.УстановитьПараметр("СтатусУчетСебестоимостиПоСериям", Реквизиты.СтатусУчетСебестоимостиПоСериям);
	Запрос.УстановитьПараметр("СтатусУчетСебестоимостиПоПартиям", Реквизиты.СтатусУчетСебестоимостиПоПартиям);
	Запрос.Выполнить();
	
	Справочники.КлючиАналитикиУчетаНоменклатуры.ИнициализироватьКлючиАналитики(Запрос.МенеджерВременныхТаблиц);

КонецПроцедуры

Процедура ИнициализироватьКлючиАналитикиВидаУчета(Реквизиты)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	&Организация             КАК Организация,
	|	&Склад                   КАК Склад,
	|	&ИсточникФинансирования  КАК ИсточникФинансирования
	|ПОМЕСТИТЬ втТаблицаАналитики
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Склад,
	|	ИсточникФинансирования
	|";
	
	Запрос.УстановитьПараметр("Организация", Реквизиты.Организация);
	Запрос.УстановитьПараметр("Склад", Реквизиты.Склад);
	Запрос.УстановитьПараметр("ИсточникФинансирования", Реквизиты.ИсточникФинансирования);
	Запрос.Выполнить();
	
	Справочники.КлючиАналитикиВидаУчета.ИнициализироватьКлючиАналитики(Запрос.МенеджерВременныхТаблиц);
	
КонецПроцедуры

#КонецОбласти // Проведение

////////////////////////////////////////////////////////////////////////////////
// Печать
#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	УправлениеПечатьюБольничнаяАптека.ДобавитьКомандыПечати(ПустаяСсылка().Метаданные().ПолноеИмя(), КомандыПечати);
	
КонецПроцедуры

// Возвращает список доступных печатных форм документа
//
Функция ДоступныеПечатныеФормы() Экспорт
	
	ПечатныеФормы = УправлениеПечатьюБольничнаяАптека.СоздатьКоллекциюДоступныхПечатныхФорм();
	
	МетаданныеДокумента = ПустаяСсылка().Метаданные();
	МенеджерПечати      = МетаданныеДокумента.ПолноеИмя();
	МетаданныеМакетов   = МетаданныеДокумента.Макеты;
	
	Возврат ПечатныеФормы;
	
КонецФункции

#КонецОбласти // Печать

////////////////////////////////////////////////////////////////////////////////
// Команды формы
#Область КомандыФормы

// Заполняет список команд ввода на основании.
// 
// Параметры:
//   КомандыСоздатьНаОсновании - ТаблицаЗначений - Таблица команд для вывода в подменю. Для изменения.
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСоздатьНаОсновании, НастройкиФормы) Экспорт
	
	ВводНаОснованииБольничнаяАптека.ДобавитьКомандыСозданияНаОсновании(ПустаяСсылка().Метаданные().ПолноеИмя(), КомандыСоздатьНаОсновании, НастройкиФормы);
	
КонецПроцедуры

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица команд для вывода в подменю. Для изменения.
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, НастройкиФормы) Экспорт
	
	МенюОтчетыБольничнаяАптека.ДобавитьОбщиеКоманды(ПустаяСсылка().Метаданные().ПолноеИмя(), КомандыОтчетов, НастройкиФормы);
	
КонецПроцедуры

#КонецОбласти // КомандыФормы

#КонецОбласти // СлужебныеПроцедурыИФункции

////////////////////////////////////////////////////////////////////////////////
// СТАНДАРТНЫЕ ПОДСИСТЕМЫ
#Область СтандартныеПодсистемы

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
//
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти // СтандартныеПодсистемы

#КонецЕсли