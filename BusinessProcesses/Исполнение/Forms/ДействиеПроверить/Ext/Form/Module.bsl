
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	БизнесПроцессыИЗадачиСервер.ФормаЗадачиПриСозданииНаСервере(
		ЭтотОбъект,
		Объект,
		Элементы.ГруппаСостояние,
		Элементы.ДатаИсполнения);
	
	БизнесПроцессыИЗадачиСервер.УстановитьФорматДаты(Элементы.ИсполнителиДатаИсполнения);
	
	// номер итерации
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	НомерИтерации КАК НомерИтерации
	|ИЗ
	|	БизнесПроцесс.Исполнение.РезультатыПроверки
	|ГДЕ
	|	Ссылка = &БизнесПроцесс
	|	И ЗадачаПроверяющего = &ЗадачаПроверяющего
	|");
	Запрос.УстановитьПараметр("БизнесПроцесс", Объект.БизнесПроцесс);
	Запрос.УстановитьПараметр("ЗадачаПроверяющего", Объект.Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	НомерИтерации = Выборка.НомерИтерации;
	
	Если НомерИтерации < 2 Тогда
		Элементы.НомерИтерации.Видимость = Ложь;
		Элементы.История.Видимость = Ложь;
	КонецЕсли;
	
	Если Объект.Ссылка.Пустая() Тогда
		ИнициализацияФормы();
	КонецЕсли;
	
	ТекущийПользователь = Пользователи.ТекущийПользователь();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	ИнициализацияФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	БизнесПроцессыИЗадачиКлиент.ФормаЗадачиОбработкаОповещения(ЭтотОбъект, ИмяСобытия, Параметр, Источник);
	
	Если ИмяСобытия = "ИзмененыРеквизитыНевыполненныхЗадач" И Параметр = Объект.БизнесПроцесс И Не Объект.Выполнена Тогда
		ДатаИсполнения = Объект.ДатаИсполнения;
		Прочитать();
		Объект.ДатаИсполнения = ДатаИсполнения;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ПараметрыЗаписи.Свойство("ВыполнитьЗадачу") И ПараметрыЗаписи.ВыполнитьЗадачу И Не ОтправленоНаДоработку(ЭтотОбъект) Тогда
		ДополнительныеПараметры = Неопределено;
		ПараметрыЗаписи.Свойство("ДополнительныеПараметры", ДополнительныеПараметры);
		БизнесПроцессыИЗадачиБольничнаяАптека.УстановитьСтатусПредмета(ТекущийОбъект.Предмет, "Закрыт", ДополнительныеПараметры);
	КонецЕсли;
	
	ИсполнениеОбъект = ТекущийОбъект.БизнесПроцесс.ПолучитьОбъект();
	ЗаблокироватьДанныеДляРедактирования(ИсполнениеОбъект.Ссылка);
	
	ПараметрыОтбора = Новый Структура("ЗадачаПроверяющего", Объект.Ссылка);
	НайденныеСтроки = ИсполнениеОбъект.РезультатыПроверки.НайтиСтроки(ПараметрыОтбора);
	Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
		ИсполнениеОбъект.РезультатыПроверки.Удалить(НайденнаяСтрока);
	КонецЦикла;
	
	Для Каждого Строка Из Исполнители Цикл
		НоваяСтрока = ИсполнениеОбъект.РезультатыПроверки.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
	КонецЦикла;
	ИсполнениеОбъект.Записать();
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ
#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьИЗакрытьВыполнить(Команда)
	
	ОчиститьСообщения();
	Если Записать() Тогда
		ОповеститьОбИзменении(Объект.Ссылка);
		Оповестить("ЗадачаИзменена", Объект.Ссылка);
		
		ПоказатьОповещениеПользователя(
			НСтр("ru = 'Изменение:'"),
			ПолучитьНавигационнуюСсылку(Объект.Ссылка),
			Строка(Объект.Ссылка),
			БиблиотекаКартинок.Информация32);
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьВыполнить(Команда)
	
	Если Записать() Тогда
		ОповеститьОбИзменении(Объект.Ссылка);
		Оповестить("ЗадачаИзменена", Объект.Ссылка);
		
		ПоказатьОповещениеПользователя(
			НСтр("ru = 'Изменение:'"),
			ПолучитьНавигационнуюСсылку(Объект.Ссылка),
			Строка(Объект.Ссылка),
			БиблиотекаКартинок.Информация32);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Проверено(Команда)
	
	ОбработатьПроверкуИсполненияПредмета();
	
КонецПроцедуры

&НаКлиенте
Процедура ИсторияИсполнения(Команда)
	
	ПараметрыФормы = Новый Структура("ЗадачаСсылка", Объект.Ссылка);
	ОткрытьФорму("БизнесПроцесс.Исполнение.Форма.ФормаИсторияИсполнения", ПараметрыФормы, ЭтотОбъект);
	
	
КонецПроцедуры

&НаКлиенте
Процедура Дополнительно(Команда)
	
	БизнесПроцессыИЗадачиКлиент.ОткрытьДопИнформациюОЗадаче(Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьБизнесПроцесс(Команда)
	
	ПоказатьЗначение(Неопределено, Объект.БизнесПроцесс);
	
КонецПроцедуры

&НаКлиенте
Процедура ПринятьКИсполнению(Команда)
	
	БизнесПроцессыИЗадачиКлиент.ПринятьЗадачуКИсполнению(ЭтотОбъект, ТекущийПользователь);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьПринятиеКИсполнению(Команда)
	
	БизнесПроцессыИЗадачиКлиент.ОтменитьПринятиеЗадачиКИсполнению(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти // ОбработчикиКомандФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ
#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ПредметНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПоказатьЗначение(Неопределено, Объект.Предмет);
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнительСтрокойОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если ЗначениеЗаполнено(Объект.Исполнитель) Тогда
		ПоказатьЗначение(Неопределено, Объект.Исполнитель);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийЭлементовФормы

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ИнициализацияФормы()
	
	НачальныйПризнакВыполнения = Объект.Выполнена;
	
	БизнесПроцессыИЗадачиБольничнаяАптека.ФормаЗадачиИнициализировать(ЭтотОбъект, Объект, Элементы.СрокИсполнения, Элементы.Предмет);
	
	Если Объект.Выполнена Тогда
		Элементы.ТекстРезультатаВыполнения.Заголовок = НСтр("ru = 'Проверено.'");
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ИсполнениеРезультатыПроверки.НомерИтерации КАК НомерИтерации,
	|	ИсполнениеРезультатыПроверки.ЗадачаИсполнителя КАК ЗадачаИсполнителя,
	|	ИсполнениеРезультатыПроверки.ЗадачаПроверяющего КАК ЗадачаПроверяющего,
	|	ИсполнениеРезультатыПроверки.ОтправленоНаДоработку КАК ОтправленоНаДоработку,
	|	ИсполнениеРезультатыПроверки.КомментарийПроверяющего КАК КомментарийПроверяющего,
	|	ВЫБОР
	|		КОГДА ИсполнениеРезультатыПроверки.ЗадачаИсполнителя.ТочкаМаршрута = &ТочкаМаршрутаОтвИсполнение
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ОтвИсполнение
	|ИЗ
	|	БизнесПроцесс.Исполнение.РезультатыПроверки КАК ИсполнениеРезультатыПроверки
	|ГДЕ
	|	ИсполнениеРезультатыПроверки.ЗадачаПроверяющего = &ЗадачаПроверяющего
	|";
	Запрос.УстановитьПараметр("ЗадачаПроверяющего", Объект.Ссылка);
	Запрос.УстановитьПараметр("ТочкаМаршрутаОтвИсполнение", БизнесПроцессы.Исполнение.ТочкиМаршрута.ОтветственноеИсполнение);
	Исполнители.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьПроверкуИсполненияПредмета()
	
	Если ЗначениеЗаполнено(Объект.Предмет) И Не ОтправленоНаДоработку(ЭтотОбъект) Тогда
		Оповещение = Новый ОписаниеОповещения("ВыполнитьЗадачуПроверкиПослеПроверкиИсполнения", ЭтотОбъект, Новый Структура);
		БизнесПроцессыИЗадачиБольничнаяАптекаКлиент.ПередУстановкойСтатусаПредметаЗакрыт(Объект.Предмет, Оповещение);
	Иначе
		ВыполнитьЗадачуПроверки();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ОтправленоНаДоработку(Форма)
	
	ПараметрыОтбора = Новый Структура("ОтправленоНаДоработку", Истина);
	Возврат Форма.Исполнители.НайтиСтроки(ПараметрыОтбора).Количество() > 0
	
КонецФункции

&НаКлиенте
Процедура ВыполнитьЗадачуПроверки(ДополнительныеПараметры = Неопределено)
	
	ПараметрыЗаписи = Новый Структура;
	ПараметрыЗаписи.Вставить("ВыполнитьЗадачу", Истина);
	Если ЗначениеЗаполнено(ДополнительныеПараметры) Тогда
		ПараметрыЗаписи.Вставить("ДополнительныеПараметры", ДополнительныеПараметры);
	КонецЕсли;
	
	Если Записать(ПараметрыЗаписи) Тогда
		ПоказатьОповещениеПользователя(
			НСтр("ru = 'Выполнение:'"),
			ПолучитьНавигационнуюСсылку(Объект.Ссылка),
			Строка(Объект.Ссылка),
			БиблиотекаКартинок.Информация32);
		
		ОповеститьОбИзменении(Объект.Ссылка);
		Оповестить("ЗадачаВыполнена", Объект.Ссылка);
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьЗадачуПроверкиПослеПроверкиИсполнения(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Истина Тогда
		ВыполнитьЗадачуПроверки(ДополнительныеПараметры);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти // СлужебныеПроцедурыИФункции
