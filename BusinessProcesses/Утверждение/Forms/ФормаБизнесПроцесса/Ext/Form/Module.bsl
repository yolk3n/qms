
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	НастройкаФормБольничнаяАптека.ФормаБизнесПроцесса_ПриСозданииНаСервере(ЭтотОбъект);
	
	ЗакрытьФормуВладельцаПоИмени = Параметры.ЗакрытьФормуВладельцаПоИмени;
	
	Копирование = ЗначениеЗаполнено(Параметры.ЗначениеКопирования);
	Если Объект.Ссылка.Пустая() Тогда
		
		Если Не Копирование Тогда 
			ШаблоныПоПредмету.ЗагрузитьЗначения(ШаблоныБизнесПроцессов.ПолучитьШаблоныПоПредмету(Объект.Предмет, ТипЗнч(Объект.Шаблон)));
			Если ШаблоныПоПредмету.Количество() = 1 Тогда 
				ЗаполнитьПоШаблонуНаСервере(ШаблоныПоПредмету[0].Значение);
			КонецЕсли;
		КонецЕсли;
		
		Если Объект.Исполнитель = Неопределено Тогда 
			Объект.Исполнитель = Справочники.Пользователи.ПустаяСсылка();
		КонецЕсли;
		
		ИнициализацияФормы();
		
	КонецЕсли;
	
	ИзменятьЗаданияЗаднимЧислом = ПолучитьФункциональнуюОпцию("ИзменятьЗаданияЗаднимЧислом");
	ИспользоватьДатуИВремяВСрокахЗадач = ПолучитьФункциональнуюОпцию("ИспользоватьДатуИВремяВСрокахЗадач");
	Элементы.СрокИсполненияВремя.Видимость = ИспользоватьДатуИВремяВСрокахЗадач;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	НастройкаФормБольничнаяАптека.ФормаБизнесПроцесса_ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	
	ИнициализацияФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Объект.Ссылка.Пустая() И Не Копирование Тогда 
		Если ШаблоныПоПредмету.Количество() > 1 Тогда 
			ПодключитьОбработчикОжидания("ВыбратьШаблонБизнесПроцессаПриОткрытии", 0.2, Истина);
		КонецЕсли;
	КонецЕсли;
	
	Если ТипЗнч(ВладелецФормы) = Тип("ФормаКлиентскогоПриложения") И ВладелецФормы.ИмяФормы = ЗакрытьФормуВладельцаПоИмени И ВладелецФормы.Открыта() Тогда
		ВладелецФормы.Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзмененаНастройкаОтложенногоСтарта" И Параметр.БизнесПроцесс = Объект.Ссылка Тогда
		ОбработатьИзменениеОтложенногоСтарта();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	ИзменитьРеквизитыНевыполненныхЗадач = Ложь;
	
	Если ПараметрыЗаписи.Свойство("Старт") И ПараметрыЗаписи.Старт Тогда
		
		БизнесПроцессыИЗадачиБольничнаяАптекаКлиент.ПроверитьСрокВыполненияПроцессаПередСтартом(
			Объект, ЭтотОбъект, ПараметрыЗаписи, Отказ);
		
	ИначеЕсли Объект.Стартован И ИзменятьЗаданияЗаднимЧислом И Модифицированность Тогда
		ИзменитьРеквизитыНевыполненныхЗадач = Истина;
	ИначеЕсли Не Объект.Стартован Тогда
		БизнесПроцессыИЗадачиБольничнаяАптекаКлиент.ПроверитьКорректностиЗаполненияОтложенногоПроцесса(
			ЭтотОбъект, Объект, ПараметрыЗаписи, Отказ);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ИзменитьРеквизитыНевыполненныхЗадач Тогда 
		ТекущийОбъект.ИзменитьРеквизитыНевыполненныхЗадач();
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	НастройкаФормБольничнаяАптека.ФормаБизнесПроцесса_ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	
	БизнесПроцессыИЗадачиБольничнаяАптека.ОбновитьДоступностьПолейСостояния(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("БизнесПроцессИзменен", Объект.Ссылка);
	
	Если ПараметрыЗаписи.Свойство("Старт") И ПараметрыЗаписи.Старт Тогда
		ИнформацияОЗапуске = Новый Структура();
		ИнформацияОЗапуске.Вставить("СсылкаНаБизнесПроцесс", Объект.Ссылка);
		ИнформацияОЗапуске.Вставить("СсылкаНаПредметБизнесПроцесса", Объект.Предмет);
		
		Оповестить("БизнесПроцессСтартован", ИнформацияОЗапуске);
		Если ЗначениеЗаполнено(Объект.Предмет) Тогда
			ОповеститьОбИзменении(Объект.Предмет);
		КонецЕсли;
	ИначеЕсли ИзменитьРеквизитыНевыполненныхЗадач Тогда 
		Оповестить("ИзмененыРеквизитыНевыполненныхЗадач", Объект.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ
#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	ПараметрыЗаписи = Новый Структура;
	ПараметрыЗаписи.Вставить("ЗакрытьФормуПослеЗаписи", Истина);
	
	Если Записать(ПараметрыЗаписи) Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СтартоватьИЗакрыть(Команда)
	
	ПараметрыЗаписи = Новый Структура;
	ПараметрыЗаписи.Вставить("ЗакрытьФормуПослеЗаписи", Истина);
	ПараметрыЗаписи.Вставить("Старт", Истина);
	
	Если Записать(ПараметрыЗаписи) Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоШаблону(Команда)
	
	ШаблоныПоПредмету.ЗагрузитьЗначения(ПолучитьШаблоныПоПредмету(Объект.Предмет, ТипЗнч(Объект.Шаблон), Ложь));
	Оповещение = Новый ОписаниеОповещения("ЗаполнитьПоШаблонуЗавершение", ЭтотОбъект);
	ШаблоныБизнесПроцессовКлиент.ВыбратьШаблонБизнесПроцесса(ТипЗнч(Объект.Шаблон), ШаблоныПоПредмету,, Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоШаблонуЗавершение(РезультатВыбора, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(РезультатВыбора) Тогда 
		ЗаполнитьПоШаблонуНаСервере(РезультатВыбора);
		УстановитьДоступностьПоШаблону();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Остановить(Команда)
	
	БизнесПроцессыИЗадачиКлиент.ОстановитьБизнесПроцессИзФормыОбъекта(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПродолжитьБизнесПроцесс(Команда)
	
	БизнесПроцессыИЗадачиКлиент.ПродолжитьБизнесПроцессИзФормыОбъекта(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьГлавнуюЗадачу(Команда)
	
	БизнесПроцессыИЗадачиБольничнаяАптекаКлиент.УстановитьГлавнуюЗадачуБизнесПроцессаИзФормыОбъекта(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьОтложенныйСтарт(Команда)
	
	ОткрытьНастройкуОтложенногоСтарта();
	
КонецПроцедуры

#КонецОбласти // ОбработчикиКомандФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ
#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ГлавнаяЗадачаНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПоказатьЗначение(, Объект.ГлавнаяЗадача);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредметСтрокойНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПоказатьЗначение(Неопределено, Объект.Предмет);
	
КонецПроцедуры

&НаКлиенте
Процедура СрокИсполненияПриИзменении(Элемент)
	
	Если Объект.СрокИсполнения = НачалоДня(Объект.СрокИсполнения) Тогда
		Объект.СрокИсполнения = КонецДня(Объект.СрокИсполнения);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////
// Обработчики поля Исполнитель

&НаКлиенте
Процедура ИсполнительНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	БизнесПроцессыИЗадачиКлиент.ВыбратьИсполнителя(
		Элемент,
		Объект.Исполнитель,
		Ложь, // ТолькоПростыеРоли
		Истина); // БезВнешнихРолей
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнительОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда
		СтандартнаяОбработка = Ложь;
		
		Объект.Исполнитель = ВыбранноеЗначение.РольИсполнителя;
		Объект.ОсновнойОбъектАдресации = ВыбранноеЗначение.ОсновнойОбъектАдресации;
		Объект.ДополнительныйОбъектАдресации = ВыбранноеЗначение.ДополнительныйОбъектАдресации;
		
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнительАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда 
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = БизнесПроцессыИЗадачиВызовСервера.СформироватьДанныеВыбораИсполнителя(Текст);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнительОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда 
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = БизнесПроцессыИЗадачиВызовСервера.СформироватьДанныеВыбораИсполнителя(Текст);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнительПриИзменении(Элемент)
	
	БизнесПроцессыИЗадачиБольничнаяАптекаКлиент.ПриИзмененииУчастника(
		Объект,
		"Исполнитель",
		"ОсновнойОбъектАдресации",
		"ДополнительныйОбъектАдресации",
		ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийЭлементовФормы

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ИнициализацияФормы()
	
	УстановитьДоступностьПоШаблону();
	УстановитьДоступность();
	
	Элементы.Предмет.Гиперссылка = Объект.Предмет <> Неопределено И Не Объект.Предмет.Пустая();
	ПредметСтрокой = ОбщегоНазначения.ПредметСтрокой(Объект.Предмет);
	
	Если Объект.Стартован Тогда
		Если Объект.Завершен Тогда
			Длительность = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				"(выполнялся %1)",
				НРег(БизнесПроцессыИЗадачиБольничнаяАптека.ДлительностьПроцесса(Объект.ДатаНачала, Объект.ДатаЗавершения)));
		Иначе
			Длительность = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				"(выполняется %1)",
				НРег(БизнесПроцессыИЗадачиБольничнаяАптека.ДлительностьПроцесса(Объект.ДатаНачала, ТекущаяДатаСеанса())));
		КонецЕсли;
	КонецЕсли;
	
	Если Объект.ГлавнаяЗадача = Неопределено Или Объект.ГлавнаяЗадача.Пустая() Тогда
		Элементы.ГлавнаяЗадача.Гиперссылка = Ложь;
		ГлавнаяЗадачаСтрокой = НСтр("ru = 'не задана'");
	Иначе
		ГлавнаяЗадачаСтрокой = Строка(Объект.ГлавнаяЗадача);
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьПодчиненныеБизнесПроцессы") Тогда
		Элементы.ГлавнаяЗадача.Видимость = Ложь;
	КонецЕсли;
	
	БизнесПроцессыИЗадачиБольничнаяАптека.ОбновитьДоступностьПолейСостояния(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступность()
	
	Если Объект.Завершен Тогда 
		ЭтотОбъект.ТолькоПросмотр = Истина;
	КонецЕсли;
	
	Элементы.ПодписыватьЭП.Доступность = ЭлектроннаяПодписьБольничнаяАптека.ИспользоватьЭлектронныеПодписи(Объект.Предмет);
	
	Если Объект.Стартован Тогда
		Элементы.Исполнитель.ТолькоПросмотр = Истина;
		Элементы.Предмет.ТолькоПросмотр = Истина;
		Элементы.ЗаполнитьПоШаблону.Доступность = Ложь;
		Элементы.ПодписыватьЭП.Доступность = Ложь;
	КонецЕсли;
	
	Элементы.ГруппаИнфо.Видимость = Не Объект.Ссылка.Пустая();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоШаблонуНаСервере(Шаблон) 
	
	БизнесПроцессОбъект = РеквизитФормыВЗначение("Объект");
	БизнесПроцессОбъект.ЗаполнитьПоШаблону(Шаблон);
	ЗначениеВРеквизитФормы(БизнесПроцессОбъект, "Объект");
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьПоШаблону()
	
	ДоступностьПоШаблону = ШаблоныБизнесПроцессов.ДоступностьПоШаблону(Объект);
	
	Если ЗначениеЗаполнено(Объект.СрокИсполнения) Тогда 
		Элементы.СрокИсполнения.ТолькоПросмотр = Не ДоступностьПоШаблону;
		Элементы.СрокИсполненияВремя.ТолькоПросмотр = Не ДоступностьПоШаблону;
	Иначе
		Элементы.СрокИсполнения.ТолькоПросмотр = Ложь;
		Элементы.СрокИсполненияВремя.ТолькоПросмотр = Ложь;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Исполнитель) Тогда 
		Элементы.Исполнитель.ТолькоПросмотр = Не ДоступностьПоШаблону;
	Иначе
		Элементы.Исполнитель.ТолькоПросмотр = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьШаблоныПоПредмету(Знач Предмет, Знач ТипШаблона, Знач ТолькоНастроенные = Истина)
	
	Возврат ШаблоныБизнесПроцессов.ПолучитьШаблоныПоПредмету(Предмет, ТипШаблона, ТолькоНастроенные)
	
КонецФункции

&НаКлиенте
Процедура ВыбратьШаблонБизнесПроцессаПриОткрытии()
	
	Оповещение = Новый ОписаниеОповещения("ВыбратьШаблонБизнесПроцессаПриОткрытииЗавершение", ЭтотОбъект);
	ШаблоныБизнесПроцессовКлиент.ВыбратьШаблонБизнесПроцесса(ТипЗнч(Объект.Шаблон), ШаблоныПоПредмету,, Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьШаблонБизнесПроцессаПриОткрытииЗавершение(РезультатВыбора, ДополнительныеПараметры) Экспорт
	
	Если Не ЗначениеЗаполнено(РезультатВыбора) Тогда 
		Закрыть();
		Возврат;
	КонецЕсли;
	
	ЗаполнитьПоШаблонуНаСервере(РезультатВыбора);
	УстановитьДоступностьПоШаблону();
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьНастройкуОтложенногоСтарта()
	
	Если ПроверитьЗаполнение() Тогда
		БизнесПроцессыИЗадачиКлиент.НастроитьОтложенныйСтарт(Объект.Ссылка, Объект.СрокИсполнения);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьИзменениеОтложенногоСтарта()
	
	БизнесПроцессыИЗадачиБольничнаяАптека.ОбновитьДоступностьПолейСостояния(ЭтотОбъект);
	НастройкаФормБольничнаяАптека.ОбновитьСостояниеБизнесПроцесса(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти // СлужебныеПроцедурыИФункции
