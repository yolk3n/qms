
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	БизнесПроцессыИЗадачиСервер.УстановитьФорматДаты(Элементы.ИсторияЦикловДатаИсполнения);
	БизнесПроцессыИЗадачиСервер.УстановитьФорматДаты(Элементы.ИсторияИсполнителяДатаИсполнения);
	
	ЗадачаСсылка = Параметры.ЗадачаСсылка;
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	Задача.БизнесПроцесс КАК БизнесПроцесс,
	|	Задача.Предмет КАК Предмет,
	|	Задача.ТочкаМаршрута КАК ТочкаМаршрута,
	|	Задача.Исполнитель КАК Исполнитель,
	|	Задача.РольИсполнителя КАК РольИсполнителя,
	|	Задача.ОсновнойОбъектАдресации КАК ОсновнойОбъектАдресации,
	|	Задача.ДополнительныйОбъектАдресации КАК ДополнительныйОбъектАдресации,
	|	ВЫБОР
	|		КОГДА Задача.ТочкаМаршрута = &ТочкаМаршрутаОзнакомиться ТОГДА
	|			Ознакомление.НомерИтерации
	|		КОГДА Задача.ТочкаМаршрута = &ТочкаМаршрутаУтвердить ТОГДА
	|			ВЫБОР
	|				КОГДА Задача.Выполнена ТОГДА
	|					Утверждение.НомерИтерации
	|				ИНАЧЕ
	|					Утверждение.НомерИтерации - 1
	|			КОНЕЦ
	|	КОНЕЦ КАК НомерИтерации
	|ИЗ
	|	Задача.ЗадачаИсполнителя КАК Задача
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		БизнесПроцесс.Утверждение.РезультатыОзнакомлений КАК Ознакомление
	|	ПО
	|		Задача.ТочкаМаршрута = &ТочкаМаршрутаОзнакомиться
	|		И Задача.БизнесПроцесс = Ознакомление.Ссылка
	|		И Задача.Ссылка = Ознакомление.ЗадачаИсполнителя
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		БизнесПроцесс.Утверждение.РезультатыУтверждения КАК Утверждение
	|	ПО
	|		Задача.ТочкаМаршрута = &ТочкаМаршрутаУтвердить
	|		И Задача.БизнесПроцесс = Утверждение.Ссылка
	|		И Задача.Ссылка = Утверждение.ЗадачаИсполнителя
	|ГДЕ
	|	Задача.Ссылка = &ЗадачаИсполнителя
	|");
	Запрос.УстановитьПараметр("ЗадачаИсполнителя", ЗадачаСсылка);
	Запрос.УстановитьПараметр("ТочкаМаршрутаОзнакомиться", БизнесПроцессы.Утверждение.ТочкиМаршрута.Ознакомиться);
	Запрос.УстановитьПараметр("ТочкаМаршрутаУтвердить", БизнесПроцессы.Утверждение.ТочкиМаршрута.Утвердить);
	
	ДанныеЗадачи = Запрос.Выполнить().Выбрать();
	ДанныеЗадачи.Следующий();
	
	БизнесПроцесс = ДанныеЗадачи.БизнесПроцесс;
	
	Предмет = ДанныеЗадачи.Предмет;
	Элементы.ПредметИсторияЦиклов.Гиперссылка = ЗначениеЗаполнено(Предмет);
	Элементы.ПредметИсторияИсполнителя.Гиперссылка = ЗначениеЗаполнено(Предмет);
	ПредметСтрокой = ОбщегоНазначения.ПредметСтрокой(Предмет);
	
	ТочкиМаршрута = Новый Массив;
	ТочкиМаршрута.Добавить(БизнесПроцессы.Утверждение.ТочкиМаршрута.Утвердить);
	
	НомерИтерации = ДанныеЗадачи.НомерИтерации;
	
	Если ДанныеЗадачи.ТочкаМаршрута = БизнесПроцессы.Утверждение.ТочкиМаршрута.Ознакомиться Тогда
		
		ИсторияЦиклов.Параметры.УстановитьЗначениеПараметра("ТочкиМаршрута", ТочкиМаршрута);
		ИсторияЦиклов.Параметры.УстановитьЗначениеПараметра("БизнесПроцесс", БизнесПроцесс);
		ИсторияЦиклов.Параметры.УстановитьЗначениеПараметра("НомерИтерации", НомерИтерации);
		
		Элементы.ГруппаИсторияЦиклов.Видимость = Истина;
		Элементы.ГруппаИсторияИсполнителя.Видимость = Ложь;
		
	ИначеЕсли ДанныеЗадачи.ТочкаМаршрута = БизнесПроцессы.Утверждение.ТочкиМаршрута.Утвердить Тогда
		
		ИсторияИсполнителя.Параметры.УстановитьЗначениеПараметра("ТочкиМаршрута", ТочкиМаршрута);
		ИсторияИсполнителя.Параметры.УстановитьЗначениеПараметра("БизнесПроцесс", БизнесПроцесс);
		ИсторияИсполнителя.Параметры.УстановитьЗначениеПараметра("НомерИтерации", НомерИтерации);
		
		ИсторияИсполнителя.Параметры.УстановитьЗначениеПараметра("Исполнитель", ДанныеЗадачи.Исполнитель);
		ИсторияИсполнителя.Параметры.УстановитьЗначениеПараметра("РольИсполнителя", ДанныеЗадачи.РольИсполнителя);
		ИсторияИсполнителя.Параметры.УстановитьЗначениеПараметра(
			"ОсновнойОбъектАдресации",
			ДанныеЗадачи.ОсновнойОбъектАдресации);
		ИсторияИсполнителя.Параметры.УстановитьЗначениеПараметра(
			"ДополнительныйОбъектАдресации",
			ДанныеЗадачи.ДополнительныйОбъектАдресации);
		
		Элементы.ГруппаИсторияЦиклов.Видимость = Ложь;
		Элементы.ГруппаИсторияИсполнителя.Видимость = Истина;
		
		Если ЗначениеЗаполнено(ДанныеЗадачи.РольИсполнителя) Тогда
			Заголовок = Заголовок
				+ " ("
				+ Строка(ДанныеЗадачи.РольИсполнителя)
				+ ?(ЗначениеЗаполнено(ДанныеЗадачи.ОсновнойОбъектАдресации),
					", " + Строка(ДанныеЗадачи.ОсновнойОбъектАдресации),
					"")
				+ ?(ЗначениеЗаполнено(ДанныеЗадачи.ДополнительныйОбъектАдресации),
					", " + Строка(ДанныеЗадачи.ДополнительныйОбъектАдресации),
					"")
				+ " )";
		Иначе
			Заголовок = Заголовок + " (" + Строка(ДанныеЗадачи.Исполнитель) + " )";
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ
#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ПредметНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПоказатьЗначение(Неопределено, Предмет);
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийЭлементовФормы
