
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ ОПЕРАЦИЙ
#Область ОбработчикиОпераций

// Получает список организаций
//
Функция GetOrganizationList()
	
	Возврат ОбменДаннымиСМИС.СформироватьСписокОрганизацийXDTO();
	
КонецФункции

// Получает список складов
//
Функция GetStorageList()
	
	Возврат ОбменДаннымиСМИС.СформироватьСписокСкладовXDTO();
	
КонецФункции

// Получает список отделений
//
Функция GetDepartmentList(ИдентификаторОрганизации)
	
	Организация = Неопределено;
	Если ЗначениеЗаполнено(ИдентификаторОрганизации) Тогда
		Если СтроковыеФункцииКлиентСервер.ЭтоУникальныйИдентификатор(ИдентификаторОрганизации) Тогда
			Организация = Справочники.Организации.ПолучитьСсылку(Новый УникальныйИдентификатор(ИдентификаторОрганизации));
		Иначе
			Организация = Справочники.Организации.НайтиПоРеквизиту("КодOID", ИдентификаторОрганизации);
		КонецЕсли;
	КонецЕсли;

	Возврат ОбменДаннымиСМИС.СформироватьСписокОтделенийXDTO(Организация);
	
КонецФункции

Функция BalanceOfGoods(СписокФОЛС, ИдентификаторОрганизации, ИдентификаторСклада)
	
	Организация = Неопределено;
	Если ЗначениеЗаполнено(ИдентификаторОрганизации) Тогда
		Если СтроковыеФункцииКлиентСервер.ЭтоУникальныйИдентификатор(ИдентификаторОрганизации) Тогда
			Организация = Справочники.Организации.ПолучитьСсылку(Новый УникальныйИдентификатор(ИдентификаторОрганизации));
		Иначе
			Организация = Справочники.Организации.НайтиПоРеквизиту("КодOID", ИдентификаторОрганизации);
		КонецЕсли;
	КонецЕсли;
	
	Склад = Неопределено;
	Если ЗначениеЗаполнено(ИдентификаторСклада) Тогда
		Склад = Справочники.Склады.ПолучитьСсылку(Новый УникальныйИдентификатор(ИдентификаторСклада));
	КонецЕсли;
	
	Возврат ОбменДаннымиСМИС.ПолучитьИнформациюОНаличииТоваровНаСкладе(СписокФОЛС, Организация, Склад);
	
КонецФункции

Функция GetDrugList()
	
	СписокНоменклатуры = ОбменДаннымиСМИС.СформироватьСписокОписанийНоменклатурыXDTO();
	
	Запись = Новый ЗаписьXML;
	Запись.УстановитьСтроку("UTF-8");
	ФабрикаXDTO.ЗаписатьXML(Запись, СписокНоменклатуры);
	СписокНоменклатурыСтрокой = Запись.Закрыть();
	
	ЗаписьЖурналаРегистрации(
		СобытиеЖурналаРегистрации() + "." + НСтр("ru='GetDrugList'", ОбщегоНазначения.КодОсновногоЯзыка()),
		УровеньЖурналаРегистрации.Информация,
		Метаданные.WebСервисы.MISExchange,
		НСтр("ru='Операция GetDrugsList: Отправлен список номенклатуры в МИС'", ОбщегоНазначения.КодОсновногоЯзыка()),
		СписокНоменклатурыСтрокой);
	
	Возврат СписокНоменклатуры;
	
КонецФункции

// Обрабатывает входящие сообщения в формате HL7v3
//
Функция ProcessHL7v3Message(Request)
	
	Запись = Новый ЗаписьXML;
	Запись.УстановитьСтроку("UTF-8");
	ФабрикаXDTO.ЗаписатьXML(Запись, Request);
	ПолученноеСообщение = Запись.Закрыть();
	
	ЗаписьЖурналаРегистрации(
		СобытиеЖурналаРегистрации() + "." + НСтр("ru='ОбработкаСообщенийHL7'", ОбщегоНазначения.КодОсновногоЯзыка()),
		УровеньЖурналаРегистрации.Информация,
		Метаданные.WebСервисы.MISExchange,
		НСтр("ru='Операция ProcessHL7v3Message: Получено сообщение от МИС'", ОбщегоНазначения.КодОсновногоЯзыка()),
		ПолученноеСообщение);
	
	Ответ = ОбменДаннымиСМИС.ОбработатьСообщениеHL7(Request.Message);
	
	Запись = Новый ЗаписьXML;
	Запись.УстановитьСтроку("UTF-8");
	ФабрикаXDTO.ЗаписатьXML(Запись, Ответ);
	ОтправленноеСообщение = Запись.Закрыть();
	
	ЗаписьЖурналаРегистрации(
		СобытиеЖурналаРегистрации() + "." + НСтр("ru='ОбработкаСообщенийHL7'", ОбщегоНазначения.КодОсновногоЯзыка()),
		УровеньЖурналаРегистрации.Информация,
		Метаданные.WebСервисы.MISExchange,
		НСтр("ru='Операция ProcessHL7v3Message: Отправленное сообщение для МИС'", ОбщегоНазначения.КодОсновногоЯзыка()),
		ОтправленноеСообщение);
		
	Возврат Ответ;
	
КонецФункции

Функция GetDict(Dict)
	
	Возврат ОбменДаннымиСМИС.СформироватьКлассификаторXDTO(Dict);
	
КонецФункции

#КонецОбласти // ОбработчикиОпераций

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

Функция СобытиеЖурналаРегистрации()
	
	Возврат НСтр("ru='ОбменСМИС'", ОбщегоНазначения.КодОсновногоЯзыка());
	
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции
