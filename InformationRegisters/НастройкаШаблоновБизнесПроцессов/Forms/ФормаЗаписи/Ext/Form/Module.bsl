
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Запись, ЭтотОбъект);
	
	Если ЗначениеЗаполнено(Запись.Организация) Тогда 
		ВариантЗаданияОрганизации = 1;
	Иначе
		ВариантЗаданияОрганизации = 0;
	КонецЕсли;
	
	СписокТипов = ПолучитьТипыОбъекта();
	ЗаполнитьИдентификаторыОбъектов();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьДоступность();
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если ВариантЗаданияОрганизации = 1 И Не ЗначениеЗаполнено(Запись.Организация) Тогда
		ОбщегоНазначения.СообщитьПользователю(
			НСтр("ru = 'Не заполнено поле ""Организация"".'")
			,
			,
			"Запись.Организация",
			,
			Отказ);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ
#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ВариантЗаданияОрганизацииПриИзменении(Элемент)
	
	Если ВариантЗаданияОрганизации = 0 Тогда
		Запись.Организация = Неопределено;
	КонецЕсли;
	
	УстановитьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ШаблонБизнесПроцессаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Оповещение = Новый ОписаниеОповещения("ОбработатьВыборШаблонаБизнесПроцесса", ЭтотОбъект, Элемент);
	ПоказатьВыборИзСписка(Оповещение, СписокТипов, Элемент);
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийЭлементовФормы

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбработатьВыборШаблонаБизнесПроцесса(ВыбранныйТип, Элемент) Экспорт
	
	Если ВыбранныйТип <> Неопределено Тогда
		ОткрытьФорму(ВыбранныйТип.Значение + ".ФормаВыбора", , Элемент);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступность()
	
	Если ВариантЗаданияОрганизации = 0 Тогда
		Элементы.Организация.Доступность = Ложь;
	Иначе
		Элементы.Организация.Доступность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьТипыОбъекта()
	
	СписокТипов = Новый СписокЗначений;
	ТипыОбъекта = Метаданные.РегистрыСведений.НастройкаШаблоновБизнесПроцессов.Измерения.ШаблонБизнесПроцесса.Тип.Типы();
	
	Для Каждого ТипОбъекта Из ТипыОбъекта Цикл
		ОбъектСсылка = Новый(ТипОбъекта);
		СписокТипов.Добавить(ОбъектСсылка.Метаданные().ПолноеИмя(), ОбъектСсылка.Метаданные().Представление());
	КонецЦикла;
	СписокТипов.СортироватьПоПредставлению();
	
	Возврат СписокТипов;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьИдентификаторыОбъектов()
	
	ТипыОбъекта = ШаблоныБизнесПроцессов.ПоддерживаемыеТипыПредметов();
	Для Каждого ТипОбъекта Из ТипыОбъекта Цикл
		Элементы.ИдентификаторОбъекта.СписокВыбора.Добавить(ОбщегоНазначения.ИдентификаторОбъектаМетаданных(ТипОбъекта.ПолноеИмя()));
	КонецЦикла;
	
	Если ЗначениеЗаполнено(Запись.ИдентификаторОбъекта) И Элементы.ИдентификаторОбъекта.СписокВыбора.НайтиПоЗначению(Запись.ИдентификаторОбъекта) = Неопределено Тогда
		Элементы.ИдентификаторОбъекта.СписокВыбора.Добавить(Запись.ИдентификаторОбъекта);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти // СлужебныеПроцедурыИФункции
