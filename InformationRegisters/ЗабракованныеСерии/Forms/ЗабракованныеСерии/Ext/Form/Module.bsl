
////////////////////////////////////////////////////////////////////////////////
// ОПИСАНИЕ ПЕРЕМЕННЫХ
#Область ОписаниеПеременных

&НаКлиенте
Перем ТекущаяСерия;

#КонецОбласти // ОписаниеПеременных

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ЗабраковкаСерии = Параметры.ЗабраковкаСерии;
	ОбновитьСписокЗабракованныхСерий();
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ
#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Обновить(Команда)
	
	ОбновитьСписокЗабракованныхСерий();
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнитьПодходящимиСериями(Команда)
	
	БылоСтрок = СерииНоменклатуры.Количество();
	ДополнитьТаблицуЗабракованныхСерий();
	ДобавленоСтрок = СерииНоменклатуры.Количество() - БылоСтрок;
	
	ТекстСообщения = НСтр("ru='Добавлено серий:'") + " " + ДобавленоСтрок;
	ПоказатьОповещениеПользователя(ТекстСообщения,, ТекстСообщения, БиблиотекаКартинок.Информация32);
	
КонецПроцедуры

#КонецОбласти // ОбработчикиКомандФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ
#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СерииНоменклатурыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	ПараметрыФормы = СформироватьПараметрыПоискаЗабракованныхСерий(ЗабраковкаСерии);
	Оповещение = Новый ОписаниеОповещения("СерииНоменклатурыПередНачаломДобавленияЗавершение", ЭтотОбъект);
	ОткрытьФорму(
		"Справочник.ЗабракованныеСерии.Форма.ФормаВыбораСерииНоменклатуры", 
		ПараметрыФормы, 
		Элемент,
		,
		,
		,
		Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура СерииНоменклатурыПередНачаломДобавленияЗавершение(ВыбраннаяСерия, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(ВыбраннаяСерия) Тогда
		Если СерияЗабракована(ЗабраковкаСерии, ВыбраннаяСерия) Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(
				НСтр("ru='Серия уже присутствует в списке забракованных серий'"));
		Иначе
			СтрокаСерии = СерииНоменклатуры.Добавить();
			СтрокаСерии.Серия = ВыбраннаяСерия;
			Элементы.СерииНоменклатуры.ТекущаяСтрока = СтрокаСерии.ПолучитьИдентификатор();
			СохранитьИзмененияСпискаЗабракованныхСерий(ЗабраковкаСерии, Неопределено, ВыбраннаяСерия);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СерииНоменклатурыПередНачаломИзменения(Элемент, Отказ)
	
	ОчиститьСообщения();
	ТекущаяСерия = Элементы.СерииНоменклатуры.ТекущиеДанные.Серия;
	
КонецПроцедуры

&НаКлиенте
Процедура СерииНоменклатурыПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	Если Не ОтменаРедактирования Тогда
		ВыбраннаяСерия = Элементы.СерииНоменклатуры.ТекущиеДанные.Серия;
		Если Не ЗначениеЗаполнено(ВыбраннаяСерия) Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(
				НСтр("ru='Не выбрано значение поля ""Серия""'"),
				,
				,
				,
				Отказ);
		ИначеЕсли ВыбраннаяСерия <> ТекущаяСерия И СерияЗабракована(ЗабраковкаСерии, ВыбраннаяСерия) Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(
				НСтр("ru='Значение в поле ""Серия"" уже присутствует в списке забракованных серий'"),
				,
				,
				,
				Отказ);
		КонецЕсли;
	Иначе
		Если Не НоваяСтрока Тогда
			Элементы.СерииНоменклатуры.ТекущиеДанные.Серия = ТекущаяСерия;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СерииНоменклатурыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если ОтменаРедактирования Тогда
		Возврат;
	КонецЕсли;
	
	ВыбраннаяСерия = Элементы.СерииНоменклатуры.ТекущиеДанные.Серия;
	Если ТекущаяСерия = ВыбраннаяСерия Тогда
		Возврат;
	КонецЕсли;
	
	СохранитьИзмененияСпискаЗабракованныхСерий(ЗабраковкаСерии, ТекущаяСерия, ВыбраннаяСерия);
	
КонецПроцедуры

&НаКлиенте
Процедура СерииНоменклатурыПередУдалением(Элемент, Отказ)
	
	УдалитьСериюИзСпискаЗабракованныхСерий(ЗабраковкаСерии, Элементы.СерииНоменклатуры.ТекущиеДанные.Серия);
	
КонецПроцедуры

&НаКлиенте
Процедура СерииНоменклатурыСерияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПараметрыФормы = СформироватьПараметрыПоискаЗабракованныхСерий(ЗабраковкаСерии);
	ОткрытьФорму(
		"Справочник.ЗабракованныеСерии.Форма.ФормаВыбораСерииНоменклатуры", 
		ПараметрыФормы, 
		Элемент);
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийЭлементовФормы

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция СерияЗабракована(Знач ЗабраковкаСерии, Знач Серия)
	
	МенеджерЗаписи = РегистрыСведений.ЗабракованныеСерии.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.ЗабраковкаСерии = ЗабраковкаСерии;
	МенеджерЗаписи.Серия = Серия;
	
	МенеджерЗаписи.Прочитать();
	
	Возврат МенеджерЗаписи.Выбран() И Не МенеджерЗаписи.ИсключитьИзАвтоматическогоПоиска;
	
КонецФункции

&НаСервереБезКонтекста
Процедура СохранитьИзмененияСпискаЗабракованныхСерий(Знач ЗабраковкаСерии, Знач ТекущаяСерия, Знач ВыбраннаяСерия)
	
	МенеджерЗаписи = РегистрыСведений.ЗабракованныеСерии.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.ЗабраковкаСерии = ЗабраковкаСерии;
	Если ЗначениеЗаполнено(ТекущаяСерия) Тогда
		МенеджерЗаписи.Серия = ТекущаяСерия;
		МенеджерЗаписи.Прочитать();
		МенеджерЗаписи.ЗабраковкаСерии = ЗабраковкаСерии;
	КонецЕсли;
	
	МенеджерЗаписи.Серия = ВыбраннаяСерия;
	МенеджерЗаписи.ИсключитьИзАвтоматическогоПоиска = Ложь;
	МенеджерЗаписи.Записать();

КонецПроцедуры

&НаСервереБезКонтекста
Процедура УдалитьСериюИзСпискаЗабракованныхСерий(Знач ЗабраковкаСерии, Знач Серия)
	
	МенеджерЗаписи = РегистрыСведений.ЗабракованныеСерии.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.ЗабраковкаСерии = ЗабраковкаСерии;
	МенеджерЗаписи.Серия = Серия;
	МенеджерЗаписи.Удалить();

КонецПроцедуры

&НаСервере
Процедура ДополнитьТаблицуЗабракованныхСерий()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ЗабраковкаСерии", ЗабраковкаСерии);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗабраковкаСерии.Наименование КАК Наименование,
	|	ЗабраковкаСерии.ВсеСерии КАК ВсеСерии,
	|	ЗабраковкаСерии.НомерРЛС КАК НомерРЛС,
	|	ЗабраковкаСерии.Номенклатура КАК Номенклатура,
	|	ЗабраковкаСерии.Препарат КАК Препарат,
	|	ЗабраковкаСерии.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ЗабраковкаСерий
	|ИЗ
	|	Справочник.ЗабракованныеСерии КАК ЗабраковкаСерии
	|ГДЕ
	|	ЗабраковкаСерии.Ссылка = &ЗабраковкаСерии
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СерииНоменклатуры.Ссылка КАК Серия
	|ИЗ
	|	Справочник.СерииНоменклатуры КАК СерииНоменклатуры
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ЗабраковкаСерий КАК ЗабраковкаСерий 
	|		ПО
	|			ВЫБОР
	|				КОГДА ЗабраковкаСерий.НомерРЛС > 0
	|					ТОГДА ЗабраковкаСерий.НомерРЛС = СерииНоменклатуры.Владелец.ЭлементКАТ.НомерРЛС
	|				КОГДА ЗабраковкаСерий.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|					ТОГДА ЗабраковкаСерий.Номенклатура = СерииНоменклатуры.Владелец
	|				КОГДА ЗабраковкаСерий.Препарат <> """"
	|					ТОГДА ЕСТЬNULL(СерииНоменклатуры.Владелец.ЭлементКАТ.Наименование, СерииНоменклатуры.Владелец.Наименование) = ЗабраковкаСерий.Препарат
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ
	|			И (ЗабраковкаСерий.ВсеСерии ИЛИ ЗабраковкаСерий.Наименование = СерииНоменклатуры.Номер)
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ЗабракованныеСерии КАК ЗабракованныеСерии
	|		ПО
	|			ЗабраковкаСерий.Ссылка = ЗабракованныеСерии.ЗабраковкаСерии
	|			И СерииНоменклатуры.Ссылка = ЗабракованныеСерии.Серия
	|ГДЕ
	|	ЗабракованныеСерии.Серия ЕСТЬ NULL
	|";					
	
	Результат = Запрос.Выполнить();
	
	Если Не Результат.Пустой() Тогда
		
		Набор = РегистрыСведений.ЗабракованныеСерии.СоздатьНаборЗаписей();
		Набор.Отбор.ЗабраковкаСерии.Установить(ЗабраковкаСерии);
		
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			СтрокаНабора = Набор.Добавить();
			СтрокаНабора.ЗабраковкаСерии = ЗабраковкаСерии;
			СтрокаНабора.Серия = Выборка.Серия;
		КонецЦикла;
		
		Набор.Записать(Ложь);
		
		ОбновитьСписокЗабракованныхСерий();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСписокЗабракованныхСерий()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ЗабраковкаСерии", ЗабраковкаСерии);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Серия
	|ИЗ
	|	РегистрСведений.ЗабракованныеСерии КАК ЗабракованныеСерии
	|ГДЕ
	|	ЗабракованныеСерии.ЗабраковкаСерии = &ЗабраковкаСерии
	|	И НЕ ЗабракованныеСерии.ИсключитьИзАвтоматическогоПоиска
	|";
	
	СерииНоменклатуры.Загрузить(Запрос.Выполнить().Выгрузить()); 
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СформироватьПараметрыПоискаЗабракованныхСерий(Знач ЗабраковкаСерий)
	
	ЗапрашиваемыеРеквизиты = Новый Структура;
	ЗапрашиваемыеРеквизиты.Вставить("НомерСерии", "Наименование");
	ЗапрашиваемыеРеквизиты.Вставить("ВсеСерии");
	ЗапрашиваемыеРеквизиты.Вставить("Номенклатура");
	ЗапрашиваемыеРеквизиты.Вставить("НаименованиеПрепарата", "Препарат");
	ЗапрашиваемыеРеквизиты.Вставить("НомерРЛС");
	
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ЗабраковкаСерий, ЗапрашиваемыеРеквизиты);
	
	Отбор = Новый Структура;
	
	ЕстьОтборПоНоменклатуре = Ложь;
	Если Не ЕстьОтборПоНоменклатуре И ЗначениеЗаполнено(Реквизиты.НомерРЛС) Тогда
		АптечныйТовар = Справочники.РегистрЛекарственныхСредств.НайтиПоРеквизиту("НомерРЛС", Реквизиты.НомерРЛС);
		Если Не АптечныйТовар.Пустая() Тогда
			Номенклатура = АптечныеТовары.ПолучитьНоменклатуруПоЭлементуКАТ(АптечныйТовар);
			Если ЗначениеЗаполнено(Номенклатура) Тогда
				Отбор.Вставить("Владелец", Номенклатура);
				ЕстьОтборПоНоменклатуре = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если Не ЕстьОтборПоНоменклатуре И ЗначениеЗаполнено(Реквизиты.Номенклатура) Тогда
		Отбор.Вставить("Владелец", Реквизиты.Номенклатура);
		ЕстьОтборПоНоменклатуре = Истина;
	КонецЕсли;
		
	Если Не ЕстьОтборПоНоменклатуре И ЗначениеЗаполнено(Реквизиты.НаименованиеПрепарата) Тогда
		Отбор.Вставить("ВладелецНаименование", Реквизиты.НаименованиеПрепарата);
	КонецЕсли;
	
	Если Не Реквизиты.ВсеСерии Тогда
		Отбор.Вставить("Номер", Реквизиты.НомерСерии);
	КонецЕсли;	
			
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Отбор", Отбор);
	ПараметрыФормы.Вставить("Заголовок",
		СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Забракованная серия: %1 Препарат: %2'"), 
			Реквизиты.НомерСерии, 
			Реквизиты.НаименованиеПрепарата));
	
	Возврат ПараметрыФормы;
	
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции
