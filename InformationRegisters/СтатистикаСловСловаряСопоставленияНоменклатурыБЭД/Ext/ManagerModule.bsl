
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Обработчик обновления БЭД 1.7.1
//
// Получает из РС.СловарьНоменклатурыХарактеристикиБЭД количество различных слов используемых в словаре и заносит в статистику.
// 
// Параметры:
//  Параметры - Структура из см. ОбновлениеИнформационнойБазы.ОсновныеПараметрыОтметкиКОбработке
//
Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	Если НЕ ОбновлениеИнформационнойБазы.ОбъектОбработан(Метаданные.РегистрыСведений.СловарьСопоставленияНоменклатурыБЭД.ПолноеИмя()).Обработан Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьСловарьСопоставленияНоменклатурыБЭД") Тогда
		ОчиститьРегистрСтатистики();
		Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь,
			Метаданные.РегистрыСведений.СтатистикаСловСловаряСопоставленияНоменклатурыБЭД.ПолноеИмя());
		Возврат;
	КонецЕсли;
	
	ЕстьОтработанныеЗаписи = Ложь;
	ПроизошлаОшибка        = Ложь;
	ТекстСообщения         = "";
	
	ЗаписатьНаборСловВСтатистикуСловСловаря(Перечисления.ТипОбъектаСопоставленияНоменклатурыБЭД.Номенклатура,
		ЕстьОтработанныеЗаписи, ПроизошлаОшибка, ТекстСообщения);
	ЗаписатьНаборСловВСтатистикуСловСловаря(Перечисления.ТипОбъектаСопоставленияНоменклатурыБЭД.Характеристика,
		ЕстьОтработанныеЗаписи, ПроизошлаОшибка, ТекстСообщения);
	
	Если НЕ ЕстьОтработанныеЗаписи И ПроизошлаОшибка Тогда
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
		
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь,
		Метаданные.РегистрыСведений.СтатистикаСловСловаряСопоставленияНоменклатурыБЭД.ПолноеИмя());
		
КонецПроцедуры

Процедура ОбновитьСтатистику(Знач Параметры) Экспорт
	
	ЗаписатьНабор(Параметры);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаписатьНаборСловВСтатистикуСловСловаря(Знач ТипОбъекта, ЕстьОтработанныеЗаписи, ПроизошлаОшибка, ТекстСообщения)
	
	Результат = СопоставлениеНоменклатурыКонтрагентовСлужебный.ПолучитьНесоответствияСтатистикиСловИспользованияВСловареСопоставленияНоменклатурыБЭД(ТипОбъекта);
	
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		Попытка
			
			НаборЗаписейСтатистикиСлов = СопоставлениеНоменклатурыКонтрагентовСлужебный.ЗаполнитьНаборЗаписейСтатистикиСловВСловаре(Выборка, ТипОбъекта);
			ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписейСтатистикиСлов);
			
			ЕстьОтработанныеЗаписи = Истина;
			ЗафиксироватьТранзакцию();
			
		Исключение
			ОтменитьТранзакцию();
			
			ШаблонСообщения = НСтр("ru = 'Не удалось обработать запись по слову: %1 по причине:'");
			ТекстСообщения  = СтрШаблон(ШаблонСообщения, Выборка.Слово) + Символы.ПС + ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Предупреждение,
				Метаданные.РегистрыСведений.СтатистикаСловСловаряСопоставленияНоменклатурыБЭД, , ТекстСообщения);
			
			ПроизошлаОшибка = Истина;
			
		КонецПопытки;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаписатьНабор(Параметры)
	
	Набор = РегистрыСведений.СтатистикаСловСловаряСопоставленияНоменклатурыБЭД.СоздатьНаборЗаписей();
	
	Набор.Отбор.ТипОбъекта.Установить(Параметры.ТипОбъекта);
	Если Параметры.Свойство("ХешСлова") Тогда
		Набор.Отбор.ХешСлова.Установить(Параметры.ХешСлова);
	КонецЕсли;
	Если Параметры.Свойство("Количество") И Параметры.Количество > 0 Тогда
		ЗаполнитьЗначенияСвойств(Набор.Добавить(), Параметры);
	КонецЕсли;
	
	Блокировка = Новый БлокировкаДанных;
	Элемент = Блокировка.Добавить(Набор.Метаданные().ПолноеИмя());
	Элемент.УстановитьЗначение("ТипОбъекта", Параметры.ТипОбъекта);
	Если Параметры.Свойство("ХешСлова") Тогда
		Элемент.УстановитьЗначение("ХешСлова", Параметры.ХешСлова);
	КонецЕсли;
	Элемент.Режим = РежимБлокировкиДанных.Исключительный;
	
	НачатьТранзакцию();
	Попытка
		Блокировка.Заблокировать();
		Набор.Записать();
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ПараметрыЗаписи = ОбщегоНазначенияБЭД.НовыеПараметрыЗаписиВЖурналРегистрации();
		ПараметрыЗаписи.ОбъектМетаданных = Набор.Метаданные();
		Комментарий = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ОбщегоНазначенияБЭД.ЗаписатьВЖурналРегистрации(Комментарий, 
			ОбщегоНазначенияБЭДКлиентСервер.ПодсистемыБЭД().СопоставлениеНоменклатурыКонтрагентов,, ПараметрыЗаписи);
		ВызватьИсключение Комментарий;
	КонецПопытки;
	
КонецПроцедуры

Процедура ОчиститьРегистрСтатистики()
	
	ПараметрыЗаписи = Новый Структура("ТипОбъекта", Перечисления.ТипОбъектаСопоставленияНоменклатурыБЭД.Номенклатура);
	ЗаписатьНабор(ПараметрыЗаписи);
	
	ПараметрыЗаписи.ТипОбъекта = Перечисления.ТипОбъектаСопоставленияНоменклатурыБЭД.Характеристика;
	ЗаписатьНабор(ПараметрыЗаписи);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли