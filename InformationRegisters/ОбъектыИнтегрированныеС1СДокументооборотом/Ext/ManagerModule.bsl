#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Добавляет связь объекта ИС и объекта ДО.
//
// Параметры:
//   ID - Строка - идентификатор объекта ДО.
//   Тип - Строка - тип объекта ДО.
//   ОбъектИС - ОпределяемыйТип.ИнтеграцияС1СДокументооборотВсеСсылкиПереопределяемый - объект ИС.
//   НаличиеПрисоединенныхФайлов - Булево - Истина, если в ДО есть присоединенные файлы.
//
Процедура ДобавитьСвязь(ID, Тип, ОбъектИС, НаличиеПрисоединенныхФайлов = Неопределено) Экспорт
	
	Если Не ИнтеграцияС1СДокументооборотБазоваяФункциональностьПовтИсп.ДоступенФункционалВерсииСервиса("1.3.2.3.CORP") Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ОбъектИС) Тогда
		ВызватьИсключение СтрШаблон(
			НСтр("ru = 'Установка связи объекта ДО (%1, %2) с несуществующим объектом ИС.'"), ID, Тип);
	КонецЕсли;
	
	НаборЗаписей = РегистрыСведений.ОбъектыИнтегрированныеС1СДокументооборотом.СоздатьНаборЗаписей();
	
	НаборЗаписей.Отбор.Объект.Установить(ОбъектИС);
	НаборЗаписей.Очистить();
	
	Запись = НаборЗаписей.Добавить();
	
	Запись.Объект = ОбъектИС;
	Запись.ТипОбъектаДО = Тип;
	Запись.ИдентификаторОбъектаДО = ID;
	
	НаборЗаписей.Записать();
	
	ИнтеграцияС1СДокументооборотБазоваяФункциональность.ПриПоявленииПрисоединенныхФайловДокументооборота(
		ID,
		Тип,
		ОбъектИС,
		НаличиеПрисоединенныхФайлов);
	
КонецПроцедуры

// Удаляет связь объекта ИС и объекта ДО.
//
// Параметры:
//   ID - Строка - идентификатор объекта ДО.
//   Тип - Строка - тип объекта ДО.
//   ОбъектИС - ЛюбаяСсылка - объект ИС.
//
Процедура УдалитьСвязь(ID, Тип, ОбъектИС) Экспорт
	
	// синхронизация
	Если Не ИнтеграцияС1СДокументооборотБазоваяФункциональностьПовтИсп.ДоступенФункционалВерсииСервиса("1.3.2.3.CORP") Тогда
		Возврат;
	КонецЕсли;
	
	НаборЗаписей = РегистрыСведений.ОбъектыИнтегрированныеС1СДокументооборотом.СоздатьНаборЗаписей();
	
	НаборЗаписей.Отбор.Объект.Установить(ОбъектИС);
	НаборЗаписей.Отбор.ТипОбъектаДО.Установить(Тип);
	НаборЗаписей.Отбор.ИдентификаторОбъектаДО.Установить(ID);
	
	НаборЗаписей.Записать();
	
	ИнтеграцияС1СДокументооборотБазоваяФункциональность.ПриУдаленииПрисоединенныхФайловДокументооборота(
		ID,
		Тип,
		ОбъектИС);
	
КонецПроцедуры

// Получает связанный объект ИС по объекту ДО.
//
// Параметры:
//   ID - Строка - идентификатор объекта ДО.
//   Тип - Строка - тип объекта ДО.
//   ТипОбъекта - Строка - необязательный, тип объекта ИС.
//
// Возвращаемое значение:
//   ОпределяемыйТип.ИнтеграцияС1СДокументооборотВсеСсылкиПереопределяемый
//
Функция СсылкаНаОбъектИСПоДаннымДокументооборота(ID, Тип, ТипОбъекта = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ОбъектыИнтегрированныеС1СДокументооборотом.Объект
		|ИЗ
		|	РегистрСведений.ОбъектыИнтегрированныеС1СДокументооборотом КАК ОбъектыИнтегрированныеС1СДокументооборотом
		|ГДЕ
		|	ОбъектыИнтегрированныеС1СДокументооборотом.ТипОбъектаДО = &ТипОбъектаДО
		|	И ОбъектыИнтегрированныеС1СДокументооборотом.ИдентификаторОбъектаДО = &ИдентификаторОбъектаДО
		|	И &Условие";
		
	Запрос.УстановитьПараметр("ТипОбъектаДО", Тип);
	Запрос.УстановитьПараметр("ИдентификаторОбъектаДО", ID);
	
	Если ТипОбъекта = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Условие", "ИСТИНА");
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст,
			"&Условие",
			"ТИПЗНАЧЕНИЯ(ОбъектыИнтегрированныеС1СДокументооборотом.Объект) = &ТипОбъекта");
		Запрос.УстановитьПараметр("ТипОбъекта", ТипОбъекта);
	КонецЕсли;
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Возврат Неопределено;
		
	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		
		Возврат Выборка.Объект;
	КонецЕсли;
	
КонецФункции

// Получает из регистра данные объекта 1С:Документооборота, связанного с объектом конфигурации-потребителя.
//
// Параметры:
//   СсылкаНаВнешнийОбъект - ЛюбаяСсылка - ссылка на объект конфигурации-потребителя.
//
// Возвращаемое значение:
//   Структура:
//     * name - Строка - имя объекта Документооборота.
//     * ID - Строка - уникальный идентификатор объекта в Документообороте.
//     * type - Строка - имя типа XDTO, соответствующего объекту ДО.
//     * ВнешнийОбъект - ЛюбаяСсылка - ссылка на связанный объект ИС.
//   Неопределено - если связанного объекта не существует.
//
Функция ДанныеОбъектаДОПоВнешнемуОбъекту(СсылкаНаВнешнийОбъект) Экспорт
	
	Если СсылкаНаВнешнийОбъект = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ОбъектыИнтегрированныеС1СДокументооборотом.ТипОбъектаДО КАК ТипОбъектаДО,
		|	ОбъектыИнтегрированныеС1СДокументооборотом.ИдентификаторОбъектаДО КАК ИдентификаторОбъектаДО
		|ИЗ
		|	РегистрСведений.ОбъектыИнтегрированныеС1СДокументооборотом КАК ОбъектыИнтегрированныеС1СДокументооборотом
		|ГДЕ
		|	ОбъектыИнтегрированныеС1СДокументооборотом.Объект = &ВнешнийОбъект");
	Запрос.УстановитьПараметр("ВнешнийОбъект", СсылкаНаВнешнийОбъект);
	
	Выборка = Запрос.Выполнить().Выбрать();
	КоличествоСвязей = Выборка.Количество();
	
	Если КоличествоСвязей = 1 Тогда
		Выборка.Следующий();
		Результат = Новый Структура;
		Результат.Вставить("name", СокрЛП(СсылкаНаВнешнийОбъект));
		Результат.Вставить("ID", Выборка.ИдентификаторОбъектаДО);
		Результат.Вставить("type", Выборка.ТипОбъектаДО);
		Результат.Вставить("ВнешнийОбъект", СсылкаНаВнешнийОбъект);
		Возврат Результат;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

#КонецОбласти

#КонецЕсли