#Область ПрограммныйИнтерфейс

/// Добавление записи регистра
//
// Параметры:
//   ИдентификаторСообщенияИзМИС - Строка -
//     Идентификатор сообщения из МИС.
//   УзелОбменаСМИС - ПланОбменаСсылка.ФедеральныеВебСервисыМИСДляПрокси -
//     узел обмена с МИС.
//   Статус - ПеречислениеСсылка.СтатусыЗапросовВСервисИдентификацииОбогащения -
//     Статус запроса в сервис идентификации.
//   СообщениеЗапрос - Строка -
//     Текст сообщения.
//   СообщениеОтвет - Строка -
//     Текст сообщения.
//   ИдентификаторЗапроса - Строка -
//     Идентификатор запроса.
//   ДатаЗапроса - Дата -
//     Дата запроса.
//   ДатаОтвета - Дата -
//     Дата ответа.
//   ДанныеПациента - Структура
//    Структура, содержащая данные пациента.
///
Процедура ЗаписатьСообщениеЗапрос( // 9 параметров
	ИдентификаторСообщенияИзМИС,
	ИдКлиента,
	Статус,
	СообщениеЗапрос,
	СообщениеОтвет,
	ИдентификаторЗапроса,
	ДатаЗапроса,
	ДатаОтвета,
	ДанныеПациента
)
Экспорт
	
	НаборЗаписей_ = РегистрыСведений.ФедеральныеВебСервисыЗапросыВСервисОбогащения.СоздатьНаборЗаписей();
	Запись_ = НаборЗаписей_.Добавить();
	Запись_.ИдентификаторСообщенияИзМИС = ИдентификаторСообщенияИзМИС;
	Запись_.ИдКлиента = ИдКлиента;
	Запись_.СтатусЗапроса = Статус;
	Запись_.ИдентификаторСообщенияИзСервиса = ИдентификаторЗапроса;
	Запись_.ВремяИзменения = ДатаЗапроса;
	Запись_.ДатаПолученияОтвета = ДатаОтвета;
	Запись_.СообщениеЗапрос = СообщениеЗапрос;
	Запись_.ОтветСервиса = СообщениеОтвет;
	
	Запись_.Фамилия = ДанныеПациента.patient.familyname;
	Запись_.Имя = ДанныеПациента.patient.firstname;
	Если ДанныеПациента.patient.Свойство("patronymic") Тогда
		Запись_.Отчество = ДанныеПациента.patient.patronymic;
	КонецЕсли;
	Запись_.ДатаРождения = ФедеральныеВебСервисыJWT.ДатаИзСтрокиyyyyMMdd(
		ДанныеПациента.patient.birthDate
	);
	
	Если ДанныеПациента.Свойство("patient_persdocs") Тогда
		Запись_.ДокументВид = ДанныеПациента.patient_persdocs.type;
		Если ДанныеПациента.patient_persdocs.Свойство("series") Тогда
			Запись_.ДокументСерия = ДанныеПациента.patient_persdocs.series;
		КонецЕсли;
		Запись_.ДокументНомер = ДанныеПациента.patient_persdocs.number;
		Запись_.ДокументДатаВыдачи = ФедеральныеВебСервисыJWT.ДатаИзСтрокиyyyyMMdd(
			ДанныеПациента.patient_persdocs.issue_date
		);
		Запись_.ДокументКемВыдан = ДанныеПациента.patient_persdocs.issuer;
	КонецЕсли;
	
	НаборЗаписей_.Записать(Ложь);
	
КонецПроцедуры

/// Запись ответа от сервиса обогащения
//
// Параметры:
//   ИдентификаторСообщенияИзМИС - Строка -
//     Идентификатор сообщения из МИС.
//   Статус - ПеречислениеСсылка.СтатусыЗапросовВСервисИдентификацииОбогащения -
//     Статус запроса в сервис идентификации.
//   СообщениеОтвет - Строка -
//     Текст сообщения.
//   ДатаОтвета - Дата -
//     Дата ответа.
//   Результат - Строка -
//     Данные результата.
///
Функция ЗаписатьОтвет( // 4 параметра
	ИдентификаторСообщенияИзМИС,
	Статус,
	СообщениеОтвет,
	ДатаОтвета
)
Экспорт
	
	Успех_ = Истина;
	Попытка
		
		НаборЗаписей_ = РегистрыСведений.ФедеральныеВебСервисыЗапросыВСервисОбогащения.СоздатьНаборЗаписей();
		НаборЗаписей_.Отбор.ИдентификаторСообщенияИзМИС.Установить(ИдентификаторСообщенияИзМИС);
		НаборЗаписей_.Прочитать();
		Если НаборЗаписей_.Количество() = 1 Тогда
			Запись_ = НаборЗаписей_[0];
			Запись_.СтатусЗапроса = Статус;
			Запись_.ОтветСервиса = СообщениеОтвет;
			Запись_.ДатаПолученияОтвета = ДатаОтвета;
			НаборЗаписей_.Записать(Истина)
		КонецЕсли;
		
	Исключение
		ВызватьИсключение "Не удалось записать результат обмена."
			+ Символы.ПС
			+ ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())
			+ Символы.ПС
		;
	КонецПопытки;
КонецФункции

/// Проверка наличия в регистре запросов, которые находятся в очереди в сервисе обогащения.
//
// Возвращаемое значение:.
//   Структура, Неопределено -
//     Данные сообщения в очереди на получение полиса ОМС.
///
Функция СледующийЗапросВОчереди() Экспорт
	
	Запрос_ = Новый Запрос;
	
	Запрос_.Текст = 
		"ВЫБРАТЬ
		|	ФедеральныеВебСервисыЗапросыВСервисОбогащения.ИдентификаторСообщенияИзСервиса КАК ИдентификаторСообщенияИзСервиса,
		|	ФедеральныеВебСервисыЗапросыВСервисОбогащения.ИдентификаторСообщенияИзМИС КАК ИдентификаторСообщенияИзМИС
		|ИЗ
		|	РегистрСведений.ФедеральныеВебСервисыЗапросыВСервисОбогащения КАК ФедеральныеВебСервисыЗапросыВСервисОбогащения
		|ГДЕ
		|	ФедеральныеВебСервисыЗапросыВСервисОбогащения.СтатусЗапроса = ЗНАЧЕНИЕ(Перечисление.СтатусыЗапросовВСервисИдентификацииОбогащения.ВПроцессеОбработки)";
	
	РезультатЗапроса_ = Запрос_.Выполнить();
	
	ВыборкаДетальныеЗаписи_ = РезультатЗапроса_.Выбрать();
	Если ВыборкаДетальныеЗаписи_.Следующий() Тогда
		Возврат ВыборкаДетальныеЗаписи_;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

Функция ПолучитьСообщениеСОтветомСервисаОбогащения(ИдентификаторСообщенияИзСервиса) Экспорт
	
	Запрос_ = Новый Запрос;
	Запрос_.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ФедеральныеВебСервисыЗапросыВСервисОбогащения.ОтветСервиса КАК ОтветСервиса,
		|	ФедеральныеВебСервисыЗапросыВСервисОбогащения.СтатусЗапроса КАК СтатусЗапроса,
		|	ФедеральныеВебСервисыЗапросыВСервисОбогащения.ИдентификаторСообщенияИзМИС КАК ИдентификаторСообщенияИзМИС
		|ИЗ
		|	РегистрСведений.ФедеральныеВебСервисыЗапросыВСервисОбогащения КАК ФедеральныеВебСервисыЗапросыВСервисОбогащения
		|ГДЕ
		|	ФедеральныеВебСервисыЗапросыВСервисОбогащения.ИдентификаторСообщенияИзСервиса = &ИдентификаторСообщенияИзСервиса";
	
	Запрос_.УстановитьПараметр("ИдентификаторСообщенияИзСервиса", ИдентификаторСообщенияИзСервиса);
	
	РезультатЗапроса_ = Запрос_.Выполнить();
	
	Выборка_ = РезультатЗапроса_.Выбрать();
	
	СообщениеОтвет_ = Неопределено;
	
	Если Выборка_.Следующий() Тогда
		СообщениеОтвет_ = Выборка_;
	КонецЕсли;
	
	Возврат СообщениеОтвет_;
	
КонецФункции

Функция ПолучитьСообщениеСОтветомПоДаннымПациента(ДанныеПациента) Экспорт
	
	Запрос_ = Новый Запрос;
	Запрос_.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ФедеральныеВебСервисыЗапросыВСервисОбогащения.ОтветСервиса КАК ОтветСервиса,
		|	ФедеральныеВебСервисыЗапросыВСервисОбогащения.СтатусЗапроса КАК СтатусЗапроса,
		|	ФедеральныеВебСервисыЗапросыВСервисОбогащения.ИдентификаторСообщенияИзМИС КАК ИдентификаторСообщенияИзМИС
		|ИЗ
		|	РегистрСведений.ФедеральныеВебСервисыЗапросыВСервисОбогащения КАК ФедеральныеВебСервисыЗапросыВСервисОбогащения
		|ГДЕ
		|	ФедеральныеВебСервисыЗапросыВСервисОбогащения.Фамилия = &Фамилия
		|	И ФедеральныеВебСервисыЗапросыВСервисОбогащения.Имя = &Имя
		|	И ФедеральныеВебСервисыЗапросыВСервисОбогащения.Отчество = &Отчество
		|	И ФедеральныеВебСервисыЗапросыВСервисОбогащения.ДокументНомер = &ДокументНомер
		|	И ФедеральныеВебСервисыЗапросыВСервисОбогащения.ДокументВид = &ДокументВид
		|	И ФедеральныеВебСервисыЗапросыВСервисОбогащения.ДокументСерия = &ДокументСерия
		|	И ФедеральныеВебСервисыЗапросыВСервисОбогащения.СтатусЗапроса = ЗНАЧЕНИЕ(Перечисление.СтатусыЗапросовВСервисИдентификацииОбогащения.Выполнено)";
	
	Запрос_.УстановитьПараметр("Фамилия", ДанныеПациента.patient.familyname);
	Запрос_.УстановитьПараметр("Имя", ДанныеПациента.patient.firstname);
	
	Отчество_ = "";
	Если ДанныеПациента.patient.Свойство("patronymic") Тогда
		Отчество_ = ДанныеПациента.patient.patronymic;
	КонецЕсли;
	Запрос_.УстановитьПараметр("Отчество", Отчество_);
	
	Запрос_.УстановитьПараметр("ДокументВид", Строка(ДанныеПациента.patient_persdocs.type));
	
	Серия_ = "";
	Если ДанныеПациента.patient_persdocs.Свойство("series") Тогда
		Серия_ = ДанныеПациента.patient_persdocs.series;
	КонецЕсли;
	Запрос_.УстановитьПараметр("ДокументСерия", Серия_);
	
	Запрос_.УстановитьПараметр("ДокументНомер", ДанныеПациента.patient_persdocs.number);
	
	РезультатЗапроса_ = Запрос_.Выполнить();
	
	Выборка_ = РезультатЗапроса_.Выбрать();
	
	СообщениеОтвет_ = Неопределено;
	
	Если Выборка_.Следующий() Тогда
		СообщениеОтвет_ = Выборка_;
	КонецЕсли;
	
	Возврат СообщениеОтвет_;
	
КонецФункции


#КонецОбласти
