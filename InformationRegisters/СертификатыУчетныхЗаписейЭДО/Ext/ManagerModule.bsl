#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ОбновлениеВерсииИБ

// Регистрирует данные к обновлению в плане обмена ОбновлениеИнформационнойБазы
//  см. Стандарты и методики разработки прикладных решений: Параллельный режим отложенного обновления.
//
// Параметры:
//  Параметры - см. ОбновлениеИнформационнойБазы.ОсновныеПараметрыОтметкиКОбработке
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ПолноеИмяРегистра = Метаданные.РегистрыСведений.СертификатыУчетныхЗаписейЭДО.ПолноеИмя();
	ДополнительныеПараметры.ЭтоНезависимыйРегистрСведений = Истина;
	
	ПараметрыВыборки = Параметры.ПараметрыВыборки;
	ПараметрыВыборки.СпособВыборки = ОбновлениеИнформационнойБазы.СпособВыборкиИзмеренияНезависимогоРегистраСведений();
	ПараметрыВыборки.ПолныеИменаРегистров = Метаданные.РегистрыСведений.СертификатыУчетныхЗаписейЭДО.ПолноеИмя();
	
	ОтработаныВсеДанные = Ложь;
	
	ИдентификаторЭДО = Неопределено;
	Сертификат = Неопределено;
	
	Пока Не ОтработаныВсеДанные Цикл
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1000
			|	СертификатыУчетныхЗаписейЭДО.ИдентификаторЭДО КАК ИдентификаторЭДО,
			|	СертификатыУчетныхЗаписейЭДО.Сертификат КАК Сертификат
			|ИЗ
			|	РегистрСведений.СертификатыУчетныхЗаписейЭДО КАК СертификатыУчетныхЗаписейЭДО
			|ГДЕ
			|	СертификатыУчетныхЗаписейЭДО.Доверенность <> ЗНАЧЕНИЕ(Справочник.МашиночитаемыеДоверенностиОрганизаций.ПустаяСсылка)
			|	И СертификатыУчетныхЗаписейЭДО.ИдентификаторЭДО > &ИдентификаторЭДО
			|	И СертификатыУчетныхЗаписейЭДО.Сертификат > &Сертификат
			|	И СертификатыУчетныхЗаписейЭДО.Доверенность.ДатаСоздания = ДАТАВРЕМЯ(1, 1, 1)
			|
			|УПОРЯДОЧИТЬ ПО
			|	ИдентификаторЭДО,
			|	Сертификат";
		
		Запрос.УстановитьПараметр("ИдентификаторЭДО", ИдентификаторЭДО);
		Запрос.УстановитьПараметр("Сертификат", Сертификат);
		
		Данные = Запрос.Выполнить().Выгрузить();
		
		ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Данные, ДополнительныеПараметры);
		
		КоличествоСтрокТаблицы = Данные.Количество();
		Если КоличествоСтрокТаблицы < 1000 Тогда
			ОтработаныВсеДанные = Истина;
		КонецЕсли;
		
		Если КоличествоСтрокТаблицы > 0 Тогда
			ИдентификаторЭДО = Данные[КоличествоСтрокТаблицы - 1].ИдентификаторЭДО;
			Сертификат = Данные[КоличествоСтрокТаблицы - 1].Сертификат;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Обрабатывает данные, зарегистрированные в плане обмена ОбновлениеИнформационнойБазы
//  см. Стандарты и методики разработки прикладных решений: Параллельный режим отложенного обновления.
//
// Параметры:
//  Параметры - см. ОбновлениеИнформационнойБазы.ОсновныеПараметрыОтметкиКОбработке
//
Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	МетаданныеОбъекта = Метаданные.РегистрыСведений.СертификатыУчетныхЗаписейЭДО;
	ПолноеИмяОбъекта = МетаданныеОбъекта.ПолноеИмя();
	
	ПараметрыОтметкиВыполнения = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	
	ОбработанныхОбъектов = 0;
	ПроблемныхОбъектов = 0;
	
	ТаблицаДанных = ОбновлениеИнформационнойБазы.ДанныеДляОбновленияВМногопоточномОбработчике(Параметры);
	
	Если Не ЗначениеЗаполнено(ТаблицаДанных) Тогда
		Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(
			Параметры.Очередь, ПолноеИмяОбъекта);
		Возврат;
	КонецЕсли;
	
	Для каждого СтрокаТаблицы Из ТаблицаДанных Цикл
		
		Набор = РегистрыСведений.СертификатыУчетныхЗаписейЭДО.СоздатьНаборЗаписей();
		Набор.Отбор.ИдентификаторЭДО.Установить(СтрокаТаблицы.ИдентификаторЭДО);
		Набор.Отбор.Сертификат.Установить(СтрокаТаблицы.Сертификат);
			
		НачатьТранзакцию();
		Попытка
			
			ОбщегоНазначенияБЭД.УстановитьУправляемуюБлокировкуПоНаборуЗаписей(Набор);
			Набор.Прочитать();
			
			Записать = Ложь;
			
			ОбработатьДанные_ОчиститьДоверенность(Набор, Записать);
			
			Если Записать Тогда
				ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(Набор);
			Иначе
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Набор, ПараметрыОтметкиВыполнения);
			КонецЕсли;
			
			ОбработанныхОбъектов = ОбработанныхОбъектов + 1;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			ПроблемныхОбъектов = ПроблемныхОбъектов + 1;
			ТекстСообщения = НСтр("ru = 'Не удалось обработать сертификаты учетных записей ЭДО по причине:'") + Символы.ПС 
				+ ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Ошибка,
				МетаданныеОбъекта,, ТекстСообщения);
			
		КонецПопытки;
		
	КонецЦикла;
	
	Если ОбработанныхОбъектов = 0 И ПроблемныхОбъектов <> 0 Тогда
		ШаблонСообщения = НСтр("ru = 'Не удалось обработать некоторые сертификаты учетных записей ЭДО (пропущены): %1'");
		ТекстСообщения = СтрШаблон(ШаблонСообщения, ПроблемныхОбъектов);
		ВызватьИсключение ТекстСообщения;
	Иначе
		ШаблонСообщения = НСтр("ru = 'Обработана очередная порция сертификатов учетных записей ЭДО: %1'");
		ТекстСообщения = СтрШаблон(ШаблонСообщения, ОбработанныхОбъектов);
		ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Информация,
			МетаданныеОбъекта,, ТекстСообщения);
	КонецЕсли;
	
	Параметры.ПрогрессВыполнения.ОбработаноОбъектов =
		Параметры.ПрогрессВыполнения.ОбработаноОбъектов + ОбработанныхОбъектов;
	
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(
		Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ОбновлениеВерсииИБ

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ДобавитьСертификат(Знач ИдентификаторЭДО, Знач Сертификаты, ПрочитатьСписокСертификатов = Ложь) Экспорт
	
	Если ТипЗнч(Сертификаты) <> Тип("Массив") Тогда
		Сертификаты = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Сертификаты);
	КонецЕсли;
	
	НачатьТранзакцию();
	Попытка
		БлокировкаДанных = Новый БлокировкаДанных;
		ЭлементБлокировкиДанных = БлокировкаДанных.Добавить("РегистрСведений.СертификатыУчетныхЗаписейЭДО");
		ЭлементБлокировкиДанных.УстановитьЗначение("ИдентификаторЭДО", ИдентификаторЭДО);
		ЭлементБлокировкиДанных.Режим = РежимБлокировкиДанных.Исключительный;
		БлокировкаДанных.Заблокировать();
		
		НаборЗаписей = РегистрыСведений.СертификатыУчетныхЗаписейЭДО.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ИдентификаторЭДО.Установить(ИдентификаторЭДО);
		
		Если ПрочитатьСписокСертификатов Тогда 
			НаборЗаписей.Прочитать();
		КонецЕсли;
		
		СертификатыДействителенДо = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(Сертификаты, "ДействителенДо");
		ТаблицаЗаписей = НаборЗаписей.Выгрузить();
		
		Для Каждого Сертификат Из Сертификаты Цикл 
			
			НоваяЗапись = ТаблицаЗаписей.Добавить();
			НоваяЗапись.ИдентификаторЭДО = ИдентификаторЭДО;
			НоваяЗапись.Сертификат = Сертификат;
			НоваяЗапись.ДействителенДо = СертификатыДействителенДо.Получить(Сертификат);
			
		КонецЦикла;
		
		ТаблицаЗаписей.Свернуть("ИдентификаторЭДО, Сертификат, ДействителенДо");
		
		НаборЗаписей.Загрузить(ТаблицаЗаписей);
		НаборЗаписей.Записать(Истина);
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		
		Информация = ИнформацияОбОшибке();
		
		ЭлектронноеВзаимодействие.ОбработатьОшибку(НСтр("ru = 'Обновление сертификатов учетной записи'"),
			ПодробноеПредставлениеОшибки(Информация),
			СтрШаблон(НСтр("ru = 'Не удалось обновить сертификаты по ученой записи: %1'"), ИдентификаторЭДО));
			
	КонецПопытки;
	
КонецПроцедуры

Функция СертификатыУчетнойЗаписи(ИдентификаторЭДО) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СертификатыУчетныхЗаписейЭДО.Сертификат КАК Сертификат
		|ИЗ
		|	РегистрСведений.СертификатыУчетныхЗаписейЭДО КАК СертификатыУчетныхЗаписейЭДО
		|ГДЕ
		|	СертификатыУчетныхЗаписейЭДО.ИдентификаторЭДО = &ИдентификаторЭДО";
	
	Запрос.УстановитьПараметр("ИдентификаторЭДО", ИдентификаторЭДО);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Сертификат");
	
КонецФункции

// Очищает доверенность в наборе записей в связи с обнулением реестра ФНС.
// 
// Параметры:
//  Набор - РегистрСведенийНаборЗаписей.СертификатыУчетныхЗаписейЭДО
//  Записать - Булево
Процедура ОбработатьДанные_ОчиститьДоверенность(Набор, Записать)
	
	Для Каждого Запись Из Набор Цикл
		Если ЗначениеЗаполнено(Запись.Доверенность) Тогда
			Запись.Доверенность = Справочники.МашиночитаемыеДоверенностиОрганизаций.ПустаяСсылка();
			Записать = Истина;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли