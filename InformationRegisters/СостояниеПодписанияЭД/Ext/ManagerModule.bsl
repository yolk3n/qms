#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	МетаданныеОбъекта = Метаданные.РегистрыСведений.СостояниеПодписанияЭД;
	ПолноеИмяРегистра = МетаданныеОбъекта.ПолноеИмя();
	
	ПараметрыВыборки = Параметры.ПараметрыВыборки;
	ПараметрыВыборки.СпособВыборки        = ОбновлениеИнформационнойБазы.СпособВыборкиИзмеренияНезависимогоРегистраСведений();
	ПараметрыВыборки.ПолныеИменаРегистров = ПолноеИмяРегистра;
	
	Если Не ОбщегоНазначения.ПодсистемаСуществует("ЭлектронноеВзаимодействие.ОбменСКонтрагентами") Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ЭтоНезависимыйРегистрСведений = Истина;
	ДополнительныеПараметры.ПолноеИмяРегистра = ПолноеИмяРегистра;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СостояниеПодписанияЭД.Объект КАК Объект
	|ИЗ
	|	РегистрСведений.СостояниеПодписанияЭД КАК СостояниеПодписанияЭД
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СообщениеЭДОПрисоединенныеФайлы КАК ПрисоединенныеФайлы
	|		ПО СостояниеПодписанияЭД.Объект = ПрисоединенныеФайлы.Ссылка";
	
	Выгрузка = Запрос.Выполнить().Выгрузить();
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Выгрузка, ДополнительныеПараметры);
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	Если Не ОбщегоНазначения.ПодсистемаСуществует("ЭлектронноеВзаимодействие.ОбменСКонтрагентами") Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	
	МетаданныеОбъекта = Метаданные.РегистрыСведений.СостояниеПодписанияЭД;
	ПолноеИмяОбъекта = МетаданныеОбъекта.ПолноеИмя();
	
	Если ОбновлениеИнформационнойБазы.ЕстьЗаблокированныеПредыдущимиОчередямиДанные(
		Параметры.Очередь, "Справочник.СообщениеЭДОПрисоединенныеФайлы") Тогда
		Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(
			Параметры.Очередь, ПолноеИмяОбъекта);
		Возврат;
	КонецЕсли;
	
	ПараметрыОтметкиВыполнения = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	
	ВыбранныеДанные = ОбновлениеИнформационнойБазы.ДанныеДляОбновленияВМногопоточномОбработчике(Параметры);
	
	Если Не ЗначениеЗаполнено(ВыбранныеДанные) Тогда
		Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(
			Параметры.Очередь, ПолноеИмяОбъекта);
		Возврат;
	КонецЕсли;
	
	ВыбранныеДанные.Свернуть("Объект");
	
	МодульОбменСКонтрагентамиИнтеграция = ОбщегоНазначения.ОбщийМодуль("ОбменСКонтрагентамиИнтеграция");
	Выборка = МодульОбменСКонтрагентамиИнтеграция.ВыборкаСообщенийДляЗаменыОбъектовВСостоянииПодписания(ВыбранныеДанные);
	
	ОбъектовОбработано = 0;
	ПроблемныхОбъектов = 0;
	
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		Попытка
			
			Записать = Ложь;
			
			ТекущийНаборЗаписей = РегистрыСведений.СостояниеПодписанияЭД.СоздатьНаборЗаписей();
			ТекущийНаборЗаписей.Отбор.Объект.Установить(Выборка.Объект);
			
			ОбщегоНазначенияБЭД.УстановитьУправляемуюБлокировкуПоНаборуЗаписей(ТекущийНаборЗаписей);
			
			ТекущийНаборЗаписей.Прочитать();
			
			Если ЗначениеЗаполнено(Выборка.Сообщение) Тогда
				
				НовыйНаборЗаписей = РегистрыСведений.СостояниеПодписанияЭД.СоздатьНаборЗаписей();
				НовыйНаборЗаписей.Отбор.Объект.Установить(Выборка.Сообщение);
				
				Если ТекущийНаборЗаписей.Количество() Тогда
					Записать = Истина;
					Для Каждого Запись Из ТекущийНаборЗаписей Цикл
						НоваяЗапись = НовыйНаборЗаписей.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяЗапись, Запись);
						НоваяЗапись.Объект = Выборка.Сообщение; 
					КонецЦикла;
					ТекущийНаборЗаписей.Очистить();
				КонецЕсли;
				
			КонецЕсли;
			
			Если Записать Тогда
				ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(ТекущийНаборЗаписей);
				ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НовыйНаборЗаписей);
			Иначе
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(ТекущийНаборЗаписей, ПараметрыОтметкиВыполнения);
			КонецЕсли;
			
			ОбъектовОбработано = ОбъектовОбработано + 1;
			
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			
			ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(ТекущийНаборЗаписей, ПараметрыОтметкиВыполнения);
			ПроблемныхОбъектов = ПроблемныхОбъектов + 1;
			
			ТекстСообщения = СтрШаблон(НСтр("ru = 'Не удалось обработать состояние подписания объекта: %1 по причине:
				|%2'"), Выборка.Объект, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Ошибка, МетаданныеОбъекта, Выборка.Объект, ТекстСообщения);
		КонецПопытки;
		
	КонецЦикла;
	
	Если ОбъектовОбработано = 0 И ПроблемныхОбъектов <> 0 Тогда
		ШаблонСообщения = НСтр("ru = 'Не удалось обработать состояния подписания некоторых объектов (пропущены): %1'");
		ТекстСообщения = СтрШаблон(ШаблонСообщения, ПроблемныхОбъектов);
		ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
			УровеньЖурналаРегистрации.Информация,
			МетаданныеОбъекта,, ТекстСообщения);
	Иначе
		ШаблонСообщения = НСтр("ru = 'Обработана очередная порция состояния подписания объектов: %1'");
		ТекстСообщения = СтрШаблон(ШаблонСообщения, ОбъектовОбработано);
		ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
			УровеньЖурналаРегистрации.Информация,
			МетаданныеОбъекта,, ТекстСообщения);
	КонецЕсли;
	
	Параметры.ПрогрессВыполнения.ОбработаноОбъектов =
		Параметры.ПрогрессВыполнения.ОбработаноОбъектов + ОбъектовОбработано;
	
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(
		Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли