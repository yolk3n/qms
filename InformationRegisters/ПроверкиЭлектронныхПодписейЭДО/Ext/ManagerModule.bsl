#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Записывает значения проверок электронных подписей по электронному документу в регистр.
// 
// Параметры:
//  ЭлектронныйДокумент - ДокументСсылка.ЭлектронныйДокументВходящийЭДО,
//                        ДокументСсылка.ЭлектронныйДокументИсходящийЭДО
//  ЗначенияПроверок - Структура - Значения ресурсов регистра.
//
Процедура ЗаписатьПроверки(ЭлектронныйДокумент, ЗначенияПроверок) Экспорт
	
	НаборЗаписей = РегистрыСведений.ПроверкиЭлектронныхПодписейЭДО.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ЭлектронныйДокумент.Установить(ЭлектронныйДокумент);
	
	Если ЗначениеЗаполнено(ЗначенияПроверок.ДатаПроверкиПодписиПоМЧД) Тогда
		Запись = НаборЗаписей.Добавить();
		Запись.ЭлектронныйДокумент = ЭлектронныйДокумент;
		ЗаполнитьЗначенияСвойств(Запись, ЗначенияПроверок);
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	НаборЗаписей.Записать();
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	
	Ограничение.Текст =
	"РазрешитьЧтение
	|ГДЕ
	|	ЧтениеОбъектаРазрешено(ЭлектронныйДокумент)
	|;
	|РазрешитьИзменениеЕслиРазрешеноЧтение
	|ГДЕ
	|	ИзменениеОбъектаРазрешено(ЭлектронныйДокумент)";
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

// Регистрирует данные для обработчика обновления.
// 
// Параметры:
//  Параметры - Структура - параметры.
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяРегистра = Метаданные.РегистрыСведений.ПроверкиЭлектронныхПодписейЭДО.ПолноеИмя();
	
	ПараметрыВыборки = Параметры.ПараметрыВыборки;
	ПараметрыВыборки.СпособВыборки = ОбновлениеИнформационнойБазы.СпособВыборкиИзмеренияНезависимогоРегистраСведений();
	ПараметрыВыборки.ПолныеИменаРегистров = ПолноеИмяРегистра;
	ПараметрыВыборки.ПоляУпорядочиванияПриРаботеПользователей.Добавить("ЭлектронныйДокумент");
	ПараметрыВыборки.ПоляУпорядочиванияПриОбработкеДанных.Добавить("ЭлектронныйДокумент");
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ЭтоНезависимыйРегистрСведений = Истина;
	ДополнительныеПараметры.ПолноеИмяРегистра = ПолноеИмяРегистра;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1000
	|	ЭлектронныеПодписиПоМЧД.ПодписанныйОбъект.ВладелецФайла.ЭлектронныйДокумент КАК ЭлектронныйДокумент
	|ИЗ
	|	РегистрСведений.ЭлектронныеПодписиПоМЧД КАК ЭлектронныеПодписиПоМЧД
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПроверкиЭлектронныхПодписейЭДО КАК ПроверкиЭлектронныхПодписейЭДО
	|		ПО ЭлектронныеПодписиПоМЧД.ПодписанныйОбъект.ВладелецФайла.ЭлектронныйДокумент = ПроверкиЭлектронныхПодписейЭДО.ЭлектронныйДокумент
	|ГДЕ
	|	ЭлектронныеПодписиПоМЧД.ПодписанныйОбъект.ВладелецФайла.ТипЭлементаРегламента В
	|	(ЗНАЧЕНИЕ(Перечисление.ТипыЭлементовРегламентаЭДО.ИнформацияОтправителя),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЭлементовРегламентаЭДО.ИнформацияПолучателя))
	|	И ЕСТЬNULL(ПроверкиЭлектронныхПодписейЭДО.ДатаПроверкиПодписиПоМЧД, ДАТАВРЕМЯ(1, 1, 1)) = ДАТАВРЕМЯ(1, 1, 1)
	|	И ЭлектронныеПодписиПоМЧД.ПодписанныйОбъект.ВладелецФайла.ЭлектронныйДокумент > &ЭлектронныйДокумент
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЭлектронныйДокумент";
	
	ЭлектронныйДокумент = Неопределено;
	
	Пока Истина Цикл
		
		Запрос.УстановитьПараметр("ЭлектронныйДокумент", ЭлектронныйДокумент);
		
		Выгрузка = Запрос.Выполнить().Выгрузить();
		КоличествоСтрок = Выгрузка.Количество();
		
		Если КоличествоСтрок = 0 Тогда
			Прервать;
		КонецЕсли;
		
		ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Выгрузка, ДополнительныеПараметры);
		
		Если КоличествоСтрок < 1000 Тогда
			Прервать;
		КонецЕсли;
		
		ЭлектронныйДокумент = Выгрузка[КоличествоСтрок - 1].ЭлектронныйДокумент;
		
	КонецЦикла;
	
КонецПроцедуры

// Обработчик обновления.
// 
// Параметры:
//  Параметры - Структура - параметры.
//
Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяРегистра = Метаданные.РегистрыСведений.ПроверкиЭлектронныхПодписейЭДО.ПолноеИмя();
	
	ЕстьЗаблокированныеПредыдущимиОчередямиДанные =
		ОбновлениеИнформационнойБазы.ЕстьЗаблокированныеПредыдущимиОчередямиДанные(
		Параметры.Очередь, "Справочник.СообщениеЭДОПрисоединенныеФайлы");
	Если ЕстьЗаблокированныеПредыдущимиОчередямиДанные Тогда
		Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(
			Параметры.Очередь, ПолноеИмяРегистра);
		Возврат;
	КонецЕсли;
	
	ОбновляемыеДанные = ОбновлениеИнформационнойБазы.ДанныеДляОбновленияВМногопоточномОбработчике(Параметры);
	
	Если ОбновляемыеДанные.Количество() = 0 Тогда
		Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(
			Параметры.Очередь, ПолноеИмяРегистра);
		Возврат;
	КонецЕсли;
	
	ОбъектовОбработано = 0;
	ПроблемныхОбъектов = 0;
	
	ЭлектронныеДокументы = ОбновляемыеДанные.ВыгрузитьКолонку("ЭлектронныйДокумент");
	
	Для каждого ЭлектронныйДокумент Из ЭлектронныеДокументы Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			НаборЗаписей = РегистрыСведений.ПроверкиЭлектронныхПодписейЭДО.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.ЭлектронныйДокумент.Установить(ЭлектронныйДокумент);
			
			ОбщегоНазначенияБЭД.УстановитьУправляемуюБлокировкуПоНаборуЗаписей(НаборЗаписей);
			
			ЗначенияПроверок = ИнтерфейсДокументовЭДО.ЗначенияПроверокЭлектронныхПодписейПоЭлектронномуДокументу(
				ЭлектронныйДокумент);
			
			Если ЗначениеЗаполнено(ЗначенияПроверок.ДатаПроверкиПодписиПоМЧД) Тогда
				Запись = НаборЗаписей.Добавить();
				Запись.ЭлектронныйДокумент = ЭлектронныйДокумент;
				ЗаполнитьЗначенияСвойств(Запись, ЗначенияПроверок);
			КонецЕсли;
			
			ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
			
			ОбъектовОбработано = ОбъектовОбработано + 1;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ПроблемныхОбъектов = ПроблемныхОбъектов + 1;
			
			ШаблонСообщения = НСтр("ru = 'Не удалось обработать запись по электронному документу %1 по причине:'");
			ТекстСообщения = СтрШаблон(ШаблонСообщения, ЭлектронныйДокумент)
				+ Символы.ПС + ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Ошибка, ПолноеИмяРегистра, , ТекстСообщения);
			
		КонецПопытки;
		
	КонецЦикла;
	
	Если ОбъектовОбработано = 0 И ПроблемныхОбъектов <> 0 Тогда
		ШаблонСообщения = НСтр("ru = 'Не удалось обработать некоторые записи регистра Проверки электронных подписей ЭДО (пропущены): %1'");
		ТекстСообщения = СтрШаблон(ШаблонСообщения, ПроблемныхОбъектов);
		ВызватьИсключение ТекстСообщения;
	Иначе
		ШаблонСообщения = НСтр("ru = 'Обработана очередная порция записей регистра Проверки электронных подписей ЭДО: %1'");
		ТекстСообщения = СтрШаблон(ШаблонСообщения, ОбъектовОбработано);
		ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
			УровеньЖурналаРегистрации.Информация, ПолноеИмяРегистра, , ТекстСообщения);
	КонецЕсли;
	
	Параметры.ПрогрессВыполнения.ОбработаноОбъектов = Параметры.ПрогрессВыполнения.ОбработаноОбъектов
		+ ОбъектовОбработано;
	
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(
		Параметры.Очередь, ПолноеИмяРегистра);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли