
#Область ОписаниеПеременных

&НаКлиенте
Перем НачалоОтправкиПриглашения;

&НаКлиенте
Перем ПриглашениеОтправлено;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не НастройкиЭДО.ЕстьПравоНастройкиОбмена() Тогда
		ВызватьИсключение НСтр("ru = 'Недостаточно прав для выполнения операции'");
	КонецЕсли;
	
	ЖирныйШрифтБЭД = ШрифтыСтиля.ЖирныйШрифтБЭД;
	Элементы.НадписьОшибкаПерейти.Видимость = Пользователи.ЭтоПолноправныйПользователь();
	
	ОбщегоНазначенияБЭД.СброситьРазмерыИПоложениеОкна(ЭтаФорма);
	
	КлючЗаписиПриглашения = Неопределено;
	Параметры.Свойство("Ключ", КлючЗаписиПриглашения);
	Если Не КлючЗаписиПриглашения = Неопределено Тогда
		КлючПриглашения = КлючЗаписиПриглашения.Ключ;
	Иначе
		Параметры.Свойство("КлючПриглашения", КлючПриглашения);
	КонецЕсли;
	
	// ЭлектронноеВзаимодействие.ОбменСКонтрагентами.КонтекстныеПодсказкиБЭД
	КонтекстныеПодсказкиБЭД.КонтекстныеПодсказки_ПриСозданииНаСервере(ЭтотОбъект, Элементы.ПанельКонтекстныхНовостей);
	СформироватьКонтекст();
	// Конец ЭлектронноеВзаимодействие.ОбменСКонтрагентами.КонтекстныеПодсказкиБЭД
	
	Параметры.Свойство("ИдентификаторОрганизации", ИдентификаторОрганизации);
	Параметры.Свойство("ИдентификаторКонтрагента", ИдентификаторКонтрагента);
	Параметры.Свойство("Абоненты", Абоненты);
	Параметры.Свойство("РежимНастройки", РежимНастройки);
	Параметры.Свойство("Организация", Организация);
	Параметры.Свойство("Контрагент", Контрагент);
	Параметры.Свойство("ЗапрещеноСоздаватьНастройкиЭДО", ЗапрещеноСоздаватьНастройкиЭДО);
	Параметры.Свойство("ЭлектроннаяПочта", ЭлектроннаяПочта);
	Параметры.Свойство("ОператорКонтрагента", ОператорКонтрагента);
	Параметры.Свойство("ТекстПриглашения", ТекстПриглашения);
	Если Параметры.Свойство("EmailОрганизации") И ЗначениеЗаполнено(Параметры.EmailОрганизации) Тогда
		Элементы.ЭлектроннаяПочтаОрганизацииДополнительно.ТолькоПросмотр = Истина;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Организация)
		И Не ИнтеграцияЭДО.ИспользуетсяНесколькоОрганизаций() Тогда
		Организация = ИнтеграцияЭДО.ОрганизацияПоУмолчанию();
		ПриИзмененииОрганизации();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Организация) Тогда
		Элементы.Организация.Вид = ВидПоляФормы.ПолеНадписи;
		Элементы.Организация.Гиперссылка = Истина;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Контрагент) Тогда
		Элементы.Контрагент.Вид = ВидПоляФормы.ПолеНадписи;
		Элементы.Контрагент.Гиперссылка = Истина;
	КонецЕсли;
	
	ТипыИнформацииОКонтрагенте = ТипыИнформацииОКонтрагенте();
	Если ЗначениеЗаполнено(ИдентификаторКонтрагента) Тогда
		ТипИнформацииОКонтрагенте = ТипыИнформацииОКонтрагенте.ИдентификаторЭДО;
		Элементы.ГруппаСтраницыИнформацииОКонтрагенте.ТекущаяСтраница = Элементы.СтраницаИнформацииОКонтрагентеИдентификатор;
	ИначеЕсли ЗначениеЗаполнено(ЭлектроннаяПочта) Тогда
		ТипИнформацииОКонтрагенте = ТипыИнформацииОКонтрагенте.ЭлектроннаяПочта;
		Элементы.ГруппаСтраницыИнформацииОКонтрагенте.ТекущаяСтраница = Элементы.СтраницаИнформацииОКонтрагентеЭлектроннаяПочта;
	ИначеЕсли ЗначениеЗаполнено(ОператорКонтрагента) Тогда
		ИдентификаторКонтрагента = ОператорКонтрагента;
		ТипИнформацииОКонтрагенте = ТипыИнформацииОКонтрагенте.ОператорЭДО;
		Элементы.ГруппаСтраницыИнформацииОКонтрагенте.ТекущаяСтраница = Элементы.СтраницаИнформацииОКонтрагентеОператор;
	КонецЕсли;
	
	Если ПустаяСтрока(ТекстПриглашения) Тогда
		ТекстПриглашения = ПриглашенияЭДОСлужебный.СтандартныйШаблонПриглашения();
	КонецЕсли;
	
	ДлительнаяОперация = НачатьПолучениеДанныхПоИдентификаторамУчастниковЭДО();
	Если ДлительнаяОперация.Статус = "Выполняется" Тогда
		Возврат;
	ИначеЕсли ДлительнаяОперация.Статус = "Ошибка" Тогда
		ОписаниеОшибки = НСтр("ru = 'Не удалось загрузить данные из сервиса настроек.'");
		НастроитьСтраницуОшибки(ЭтотОбъект, ОписаниеОшибки);
		ДлительнаяОперация = Неопределено;
		Возврат;
	КонецЕсли;
	
	ПодготовитьФормуПослеПолученияДанныхПоИдентификаторамУчастниковЭДО(ДлительнаяОперация.АдресРезультата);
	
	ДлительнаяОперация = Неопределено;
	
	ПроверитьСоответствиеАбонентаИКонтрагента(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПриглашениеОтправлено = Ложь;
	
	Если ДлительнаяОперация = Неопределено Тогда
		ПоказатьГруппуПредупреждения();
		Возврат;
	КонецЕсли;
	
	Оповещение = Новый ОписаниеОповещения(
		"ЗаполнитьДанныеПоИдентификаторамУчастниковЭДОПослеОбновленияКэшаЗавершение", ЭтотОбъект);
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, Оповещение, ПараметрыОжидания);
	
	НастроитьСтраницуОжидания(Истина);
	
	// ЭлектронноеВзаимодействие.ОбменСКонтрагентами.КонтекстныеПодсказкиБЭД
	КонтекстныеПодсказкиБЭДКлиент.КонтекстныеНовости_ПриОткрытии(ЭтотОбъект);
	// Конец ЭлектронноеВзаимодействие.ОбменСКонтрагентами.КонтекстныеПодсказкиБЭД
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбновленСписокУчетныхЗаписей1СЭДО" Тогда
		ПриОбновленииСпискаУчетныхЗаписей();
	ИначеЕсли ИмяСобытия = "ОбновитьСостояниеПриглашений"
		И ПриглашениеОтправлено <> Истина Тогда
		ОбновитьОсновнуюСтраницуФормы(ЭтотОбъект);
	ИначеЕсли ОбщегоНазначенияБЭДКлиент.ЭтоСобытиеИзменениеОбъекта(Контрагент, ИмяСобытия) Тогда
		ОбновитьДанныеКонтрагента();
	КонецЕсли;
	
	// ЭлектронноеВзаимодействие.ОбменСКонтрагентами.КонтекстныеПодсказкиБЭД
	КонтекстныеПодсказкиБЭДКлиент.КонтекстныеНовости_ОбработкаОповещения(ЭтотОбъект, ИмяСобытия, Параметр, Источник);
	// Конец ЭлектронноеВзаимодействие.ОбменСКонтрагентами.КонтекстныеПодсказкиБЭД
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ПриИзмененииОрганизации();
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	
	ПриИзмененииКонтрагента();

	// ЭлектронноеВзаимодействие.ОбменСКонтрагентами.КонтекстныеПодсказкиБЭД
	ОбновляемыеКатегории = Новый Массив;
	ОбновляемыеКатегории.Добавить(КонтекстныеПодсказкиБЭДКатегоризацияВызовСервера.Категория_ОператорАбонента());
	
	СформироватьКонтекст(ОбновляемыеКатегории); 
	// Конец ЭлектронноеВзаимодействие.ОбменСКонтрагентами.КонтекстныеПодсказкиБЭД
	
	Если ДлительнаяОперация = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Оповещение = Новый ОписаниеОповещения("ПриИзмененииКонтрагентаЗавершение", ЭтотОбъект);
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ТекстСообщения = НСтр("ru = 'Выполняется загрузка настроек.'");
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, Оповещение, ПараметрыОжидания);
	
КонецПроцедуры

&НаКлиенте
Процедура ИдентификаторОрганизацииПриИзменении(Элемент)
	
	ОбновитьОсновнуюСтраницуФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ИдентификаторОрганизацииОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	УчетныеЗаписиЭДОКлиент.ОткрытьУчетнуюЗапись(ИдентификаторОрганизации);
	
КонецПроцедуры

&НаКлиенте
Процедура ИдентификаторОрганизацииОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ВыбранноеЗначение <> Идентификатор_Создать() Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	Оповещение = Новый ОписаниеОповещения("УстановитьИдентификаторПослеСозданияУчетнойЗаписи", ЭтотОбъект);
	
	ПараметрыСоздания = УчетныеЗаписиЭДОКлиент.НовыеПараметрыСозданияУчетнойЗаписи();
	ПараметрыСоздания.Организация = Организация;
	ПараметрыСоздания.КнопкаНазадДоступна = Истина;
	ПараметрыСоздания.ОповещениеОЗавершении = Оповещение;
	УчетныеЗаписиЭДОКлиент.СоздатьУчетнуюЗапись(ПараметрыСоздания);
	
КонецПроцедуры

&НаКлиенте
Процедура ИдентификаторКонтрагентаПриИзменении(Элемент)
	
	ПриИзмененииИдентификатораКонтрагентаИнтерактивно();
	
КонецПроцедуры

&НаКлиенте
Процедура ИдентификаторКонтрагентаОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	ДобавитьПроизвольныйИдентификаторКонтрагентаВСписокВыбора(ЭтотОбъект, Текст);
	
КонецПроцедуры

&НаКлиенте
Процедура ОператорКонтрагентаПриИзменении(Элемент)
	
	ПриИзмененииИдентификатораКонтрагентаИнтерактивно();
	
КонецПроцедуры

&НаКлиенте
Процедура ИдентификаторКонтрагентаВводПриИзменении(Элемент)
	
	ПриИзмененииИдентификатораКонтрагентаИнтерактивно();
	
КонецПроцедуры

&НаКлиенте
Процедура ИдентификаторКонтрагентаВводИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Текст <> ИдентификаторКонтрагента Тогда
		ПодключитьОбработчикОжидания("Подключаемый_ПослеИзмененияТекстаИдентификатораКонтрагента", 1, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЭлектроннаяПочтаПриИзменении(Элемент)
	
	ПриИзмененииЭлектроннойПочты();
	
КонецПроцедуры

&НаКлиенте
Процедура ЭлектроннаяПочтаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ОбработкаВыбораЭлектроннойПочты(ВыбранноеЗначение, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ЭлектроннаяПочтаИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Текст <> ЭлектроннаяПочта Тогда
		ПодключитьОбработчикОжидания("Подключаемый_ПослеИзмененияТекстаЭлектроннойПочты", 0.5, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЭлектроннаяПочтаОрганизацииДополнительноИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Текст <> ЭлектроннаяПочта Тогда
		ПодключитьОбработчикОжидания("Подключаемый_ПослеИзмененияТекстаЭлектроннойПочтыОрганизацииВторойЭтап", 0.5, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьНеЗнаюОператораНажатие(Элемент)
	
	ПоказатьВариантыИнформацииОКонтрагенте(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьНеЗнаюEmailНажатие(Элемент)
	
	ПоказатьВариантыИнформацииОКонтрагенте(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьНеЗнаюИдентификаторНажатие(Элемент)
	
	ПоказатьВариантыИнформацииОКонтрагенте(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьПовторноеПриглашениеОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если НавигационнаяСсылка = "ОткрытьПриглашение"
		И ЗначениеЗаполнено(НавигационнаяСсылкаНаПриглашение) Тогда
		ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку(НавигационнаяСсылкаНаПриглашение);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЭлектроннаяПочтаДополнительноПриИзменении(Элемент)
	
	ПриИзмененииЭлектроннойПочты();
	
КонецПроцедуры

&НаКлиенте
Процедура ЭлектроннаяПочтаДополнительноОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ОбработкаВыбораЭлектроннойПочты(ВыбранноеЗначение, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ЭлектроннаяПочтаДополнительноИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Текст <> ЭлектроннаяПочта Тогда
		ПодключитьОбработчикОжидания("Подключаемый_ПослеИзмененияТекстаЭлектроннойПочтыВторойЭтап", 0.5, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьСоглашениеНаРоумингНеВыбраноОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если НавигационнаяСсылка = "ПолучитьШаблонСоглашениеНаРоуминг" Тогда
		ПолучитьШаблонСоглашениеНаРоуминг();
		ОткрылиПисьмоОВыбореОператора = Истина;
		Оповестить("ОткрытиеПисьмаОВыбореОператора", Истина);
	ИначеЕсли НавигационнаяСсылка = "ПрикрепитьСоглашениеНаРоуминг" Тогда
		ПрикрепитьСоглашениеНаРоуминг();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьИмяФайлаСоглашенияНаРоумингНажатие(Элемент)
	
	АдресСоглашенияНаРоуминг = АдресДанныхСоглашенияНаРоуминг(ИдентификаторОрганизации, УникальныйИдентификатор);
	
	Если ЗначениеЗаполнено(АдресСоглашенияНаРоуминг) Тогда
		ФайловаяСистемаКлиент.СохранитьФайл(Неопределено, АдресСоглашенияНаРоуминг, ИмяФайлаСоглашенияНаРоуминг);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТекстПриглашенияПриИзменении(Элемент)
	
	НастроитьОсновнуюСтраницуФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьОшибкаПерейтиНажатие(Элемент)
	
	ОтборЖурнала = Новый Структура;
	Если ЗначениеЗаполнено(НачалоОтправкиПриглашения) Тогда
		ОтборЖурнала.Вставить("ДатаНачала", НачалоОтправкиПриглашения);
	КонецЕсли;
	ОтборЖурнала.Вставить("Уровень", "Ошибка");
	ЖурналРегистрацииКлиент.ОткрытьЖурналРегистрации(ОтборЖурнала);
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьВыполненоОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылка, СтандартнаяОбработка)
	ОбработкаНавигационнойСсылкиОткрытьТекущиеДела(НавигационнаяСсылка, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура НадписьВыполненоРоумингОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылка, СтандартнаяОбработка)
	ОбработкаНавигационнойСсылкиОткрытьТекущиеДела(НавигационнаяСсылка, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияНадписьПредупреждениеОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПараметрыОбработкиОшибок = ОбработкаНеисправностейБЭДКлиент.НовыеПараметрыОбработкиОшибок();
	ПараметрыОбработкиОшибок.ГруппаПредупреждения = Элементы.ГруппаПредупреждения;
	КонтекстДиагностики.ОшибкиОбработаны = Ложь;
	ОбработкаНеисправностейБЭДКлиент.ОбработатьОшибки(КонтекстДиагностики, ПараметрыОбработкиОшибок);
	
КонецПроцедуры

&НаКлиенте
Процедура ЭлектроннаяПочтаОрганизацииДополнительноПриИзменении(Элемент)
	
	ПриИзмененииЭлектроннойПочты();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Отправить(Команда)
	
	ОтправитьПриглашение();
	
КонецПроцедуры

&НаКлиенте
Процедура Назад(Команда)
	
	НастроитьОсновнуюСтраницуФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Если ДлительнаяОперация <> Неопределено Тогда
		ИнтеграцияБСПБЭДВызовСервера.ОтменитьВыполнениеЗадания(ДлительнаяОперация.ИдентификаторЗадания);
	КонецЕсли;
	
	Результат = Неопределено;
	Если ПриглашениеОтправлено Тогда
		Результат = РезультатОтправкиПриглашения();
	КонецЕсли;
	
	Закрыть(Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьФайл(Команда)
	
	Если УдалитьДанныеСоглашенияНаРоуминг(ИдентификаторОрганизации) Тогда
		ИмяФайлаСоглашенияНаРоуминг = "";
		НастроитьОсновнуюСтраницуФормы(ЭтотОбъект);
		Оповестить("ОткрепленоПисьмоОВыбореОператора");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Применить(Команда)
	
	Результат = РезультатОтправкиПриглашения();
	
	Закрыть(Результат);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Функция НовыеПараметрыОпределенияТипаПриглашения()
	
	Результат = Новый Структура;
	
	Результат.Вставить("ТипИнформацииОКонтрагенте", "");
	Результат.Вставить("ОтправкаТолькоНаИдентификаторЭДО", Ложь);
	Результат.Вставить("РоумингБезАвтоматическойНастройки", Ложь);
	Результат.Вставить("ОператорОрганизации", "");
	Результат.Вставить("ОператорКонтрагента", "");
	Результат.Вставить("АбонентВХабе1С", Ложь);
	
	Возврат Результат;

КонецФункции

// Описание
// 
// Параметры:
// 	Параметры - Структура - см. НовыеПараметрыОпределенияТипаПриглашения
// 
// Возвращаемое значение:
// 	Неопределено, ПеречислениеСсылка.ТипыПриглашений - Описание
&НаКлиентеНаСервереБезКонтекста
Функция ТипПриглашения(Параметры)
	
	Результат = Неопределено;
	
	ТипыИнформацииОКонтрагенте = ТипыИнформацииОКонтрагенте();
	ТипыПриглашений = ПриглашенияЭДОСлужебныйКлиентСервер.ТипыПриглашений();

	Если Параметры.ТипИнформацииОКонтрагенте = ТипыИнформацииОКонтрагенте.ИдентификаторЭДО
		Или Параметры.ОтправкаТолькоНаИдентификаторЭДО Тогда
		
		Если Параметры.РоумингБезАвтоматическойНастройки Тогда
			Результат = ТипыПриглашений.ЗаявкаНаРоуминг
		Иначе
			Результат = ТипыПриглашений.НаИдентификатор;
		КонецЕсли;
	ИначеЕсли Параметры.ТипИнформацииОКонтрагенте = ТипыИнформацииОКонтрагенте.ЭлектроннаяПочта
		Или ОтправкаНаТогоЖеОператора(Параметры.ТипИнформацииОКонтрагенте, Параметры.ОператорОрганизации, Параметры.ОператорКонтрагента) Тогда
	
		Результат = ТипыПриглашений.Широковещательное;
	ИначеЕсли Параметры.ТипИнформацииОКонтрагенте = ТипыИнформацииОКонтрагенте.ОператорЭДО Тогда
		Если Параметры.АбонентВХабе1С Тогда
			Результат = ТипыПриглашений.Широковещательное;
		Иначе
			Результат = ТипыПриглашений.ЗаявкаНаРоуминг;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция НачатьПолучениеДанныхПоИдентификаторамУчастниковЭДО()
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияФункции(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Получение данных по участникам ЭДО для отправки приглашения.'");
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;
	
	ПараметрыПроцедуры = Новый Структура("Организация, Контрагент", Организация, Контрагент);
	
	Если ЗначениеЗаполнено(ИдентификаторОрганизации) Тогда
		ПараметрыПроцедуры.Вставить("ИдентификаторОрганизации", ИдентификаторОрганизации);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ИдентификаторКонтрагента) Тогда
		ПараметрыПроцедуры.Вставить("ИдентификаторКонтрагента", ИдентификаторКонтрагента);
	КонецЕсли;
	
	Возврат ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения,
		"РаботаСАбонентамиЭДО.ДанныеПоИдентификаторамАбонентов",
		ПараметрыПроцедуры);
	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьДанныеПоИдентификаторамУчастниковЭДОПослеОбновленияКэшаЗавершение(Результат, Контекст) Экспорт
	
	ДлительнаяОперация = Неопределено;
	
	Если Результат = Неопределено Тогда
		Возврат;
	ИначеЕсли Результат.Статус <> "Выполнено" Тогда
		ОписаниеОшибки = НСтр("ru = 'Не удалось загрузить данные из сервиса настроек.'");
		НастроитьСтраницуОшибки(ЭтотОбъект, ОписаниеОшибки);
		Возврат;
	КонецЕсли;
	
	ПодготовитьФормуПослеПолученияДанныхПоИдентификаторамУчастниковЭДО(Результат.АдресРезультата);
	ПоказатьГруппуПредупреждения();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьГруппуПредупреждения()
	
	Элементы.ГруппаПредупреждения.Видимость = Ложь;
	
	Если КонтекстДиагностики = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	КонтекстДиагностики.ЗаголовокОперации = НСтр("ru = 'При получении данных участников ЭДО'");
	ПараметрыОбработкиОшибок = ОбработкаНеисправностейБЭДКлиент.НовыеПараметрыОбработкиОшибок();
	ПараметрыОбработкиОшибок.КонтекстныйРежимОбработки = Истина;
	ПараметрыОбработкиОшибок.ГруппаПредупреждения = Элементы.ГруппаПредупреждения;
	ПараметрыОбработкиОшибок.НадписьПредупреждение = Элементы.ДекорацияНадписьПредупреждение;
	ПараметрыОбработкиОшибок.ТекстПредупреждения = ДиагностикаЭДОКлиент.ТекстПредупреждения(КонтекстДиагностики);
	ОбработкаНеисправностейБЭДКлиент.ОбработатьОшибки(КонтекстДиагностики, ПараметрыОбработкиОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПодготовитьФормуПослеПолученияДанныхПоИдентификаторамУчастниковЭДО(Знач АдресРезультата)
	
	ЗаполнитьСписокОператоровЭДО();
	
	ДанныеПоИдентификаторамУчастниковЭДО = ПолучитьИзВременногоХранилища(АдресРезультата);
	
	ЗаполнитьИдентификаторыОрганизации(ДанныеПоИдентификаторамУчастниковЭДО.ИдентификаторыОрганизации);
	
	ПараметрыОтправки = НовыеПараметрыОтправкиПриглашения(ТипИнформацииОКонтрагенте,
		ДанныеПоИдентификаторамУчастниковЭДО.ПараметрыСвязиИдентификаторовЭДО);
		
	КонтекстДиагностики = ДанныеПоИдентификаторамУчастниковЭДО.КонтекстДиагностики;
		
	ЗаполнитьДанныеКонтрагента(ПараметрыОтправки);
	
	ОбновитьНастройкуОтправкиПриглашения(ЭтотОбъект, ПараметрыОтправки);
	
	НастроитьОсновнуюСтраницуФормы(ЭтотОбъект);
	
	ПроверитьСоответствиеАбонентаИКонтрагента(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьИдентификаторыОрганизации(СписокИдентификаторов = Неопределено)
	
	Если СписокИдентификаторов = Неопределено Тогда
		СписокИдентификаторов = УчетныеЗаписиЭДО.СписокИдентификаторовУчетныхЗаписейОрганизацииСервисаЭДО(Организация);
	КонецЕсли;
	
	СписокВыбора = Элементы.ИдентификаторОрганизации.СписокВыбора;
	Если СписокВыбора.Количество() Тогда
		СписокВыбора.Очистить();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СписокИдентификаторов) Тогда
		Для Каждого ЭлементСписка Из СписокИдентификаторов Цикл
			ЗаполнитьЗначенияСвойств(СписокВыбора.Добавить(), ЭлементСписка);
		КонецЦикла;
	КонецЕсли;
	
	СписокВыбора.Добавить(Идентификатор_Создать(), НСтр("ru = 'Создать новую учетную запись'"),,
		БиблиотекаКартинок.СоздатьЭлементСписка);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьEmailОрганизации()
	
	СписокВыбора = Элементы.ЭлектроннаяПочтаОрганизацииДополнительно.СписокВыбора;
	СписокВыбора.Очистить();
	СписокВыбора.ЗагрузитьЗначения(УчетныеЗаписиЭДО.ЭлектронныеАдресаДляУведомленияОСтатусеЗаявкиНаРоуминг(Организация));
	
	Если СписокВыбора.Количество() Тогда
		EmailОрганизации = СписокВыбора[0].Значение;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеКонтрагента(ПараметрыОтправки)
	
	КонтрагентИНН = ПараметрыОтправки.КонтрагентИНН;
	КонтрагентКПП = ПараметрыОтправки.КонтрагентКПП;
	
	ТипыИнформацииОКонтрагенте = ТипыИнформацииОКонтрагенте();
	Если ЗначениеЗаполнено(ПараметрыОтправки.СписокИдентификаторовКонтрагента) Тогда
		ТипИнформацииОКонтрагенте = ТипыИнформацииОКонтрагенте.ИдентификаторЭДО;
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ТипИнформацииОКонтрагенте) Тогда
		ТипИнформацииОКонтрагенте = ТипыИнформацииОКонтрагенте.ОператорЭДО;
	КонецЕсли;
	
	ЗаполнитьЭлектроннуюПочтуКонтрагента();
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииКонтрагента()
	
	КонтрагентИНН            = "";
	ИдентификаторКонтрагента = "";
	ОператорКонтрагента      = "";
	ЭлектроннаяПочта         = "";
	
	ТипИнформацииОКонтрагенте = ТипыИнформацииОКонтрагенте().ОператорЭДО;
	
	ДлительнаяОперация = ЗаполнитьПараметрыСвязиИдентификаторовЭДОПослеСинхронизацииАбонентов();
	Если ДлительнаяОперация.Статус = "Выполняется" Тогда
		Возврат;
	КонецЕсли;
	
	ОбновитьНастройкуОтправкиПриглашенияПоПараметрамСвязи(ДлительнаяОперация.АдресРезультата);
	
	ДлительнаяОперация = Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииКонтрагентаЗавершение(Результат, Контекст) Экспорт
	
	ДлительнаяОперация = Неопределено;
	
	Если Результат = Неопределено Тогда
		Возврат;
	ИначеЕсли Результат.Статус <> "Выполнено" Тогда
		ОписаниеОшибки = НСтр("ru = 'Не удалось загрузить данные из сервиса настроек.'");
		НастроитьСтраницуОшибки(ЭтотОбъект, ОписаниеОшибки);
		Возврат;
	КонецЕсли;
	
	УстановитьСтраницуИнформацииОКонтрагенте();
	
	ОбновитьНастройкуОтправкиПриглашенияПоПараметрамСвязи(Результат.АдресРезультата);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьНастройкуОтправкиПриглашенияПоПараметрамСвязи(Знач АдресРезультата)
	
	ПараметрыСвязиИдентификаторов = ПолучитьИзВременногоХранилища(АдресРезультата);
	
	ПараметрыОтправки = НовыеПараметрыОтправкиПриглашения(ТипИнформацииОКонтрагенте, ПараметрыСвязиИдентификаторов);
	
	ЗаполнитьДанныеКонтрагента(ПараметрыОтправки);
	
	ОбновитьНастройкуОтправкиПриглашения(ЭтотОбъект, ПараметрыОтправки);
	
	НастроитьОсновнуюСтраницуФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Функция ЗаполнитьПараметрыСвязиИдентификаторовЭДОПослеСинхронизацииАбонентов()
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияФункции(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Получение данных по контрагенту из сервиса настроек'");
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;
	
	ПараметрыПолученияСвязи = РаботаСАбонентамиЭДО.НовыеПараметрыПолученияСвязиИдентификаторов();
	
	ПараметрыПолученияСвязи.Контрагент = Контрагент;
	
	МассивИдентификаторовОрганизации = Новый Массив;
	
	Если ЗначениеЗаполнено(ИдентификаторОрганизации) Тогда
		МассивИдентификаторовОрганизации.Добавить(ИдентификаторОрганизации);
	Иначе
		Для Каждого ЭлементСписка Из Элементы.ИдентификаторОрганизации.СписокВыбора Цикл
			Если ЭлементСписка.Значение <> Идентификатор_Создать() Тогда
				МассивИдентификаторовОрганизации.Добавить(ЭлементСписка.Значение);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	ПараметрыПолученияСвязи.ИдентификаторыОрганизации = МассивИдентификаторовОрганизации;
	
	Возврат ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения,
		"РаботаСАбонентамиЭДО.ПараметрыСвязиИдентификаторов",
		ПараметрыПолученияСвязи,, Истина);
	
КонецФункции

&НаСервере
Процедура ЗаполнитьСписокОператоровЭДО()
	
	СписокОператоровЭДО = Элементы.ОператорКонтрагента.СписокВыбора;
	Если СписокОператоровЭДО.Количество() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = ПриглашенияЭДОСлужебный.ВыборкаОператоровЭлектронногоДокументооборота();
	Пока Выборка.Следующий() Цикл
		СписокОператоровЭДО.Добавить(Выборка.ИдентификаторОператора, Выборка.Представление);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЭлектроннуюПочтуКонтрагента()
	
	СписокВыбора = Элементы.ЭлектроннаяПочта.СписокВыбора;
	СписокВыбора.Очистить();
	
	СписокВыбораДополнительно = Элементы.ЭлектроннаяПочтаДополнительно.СписокВыбора;
	СписокВыбораДополнительно.Очистить();
	
	КонтактнаяИнформация = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъектов(
		ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Контрагент),
		Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты,,
		ТекущаяДатаСеанса());
	
	Если КонтактнаяИнформация.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого СтрокаТаблицы Из КонтактнаяИнформация Цикл
		
		Если ЗначениеЗаполнено(СтрокаТаблицы.Представление)
			И ОбщегоНазначенияКлиентСервер.АдресЭлектроннойПочтыСоответствуетТребованиям(
				СтрокаТаблицы.Представление) Тогда
			СписокВыбора.Добавить(СтрокаТаблицы.Представление);
			СписокВыбораДополнительно.Добавить(СтрокаТаблицы.Представление);
		КонецЕсли;
		
	КонецЦикла;
	
	Если ПустаяСтрока(ЭлектроннаяПочта)
		И СписокВыбора.Количество() = 1 Тогда
		ЭлектроннаяПочта = СписокВыбора[0].Значение;
	КонецЕсли;
	
	Элементы.ЭлектроннаяПочта.КнопкаВыпадающегоСписка = СписокВыбора.Количество();
	Элементы.ЭлектроннаяПочтаДополнительно.КнопкаВыпадающегоСписка = СписокВыбораДополнительно.Количество();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДанныеКонтрагента();
	
	ПараметрыОтправки = ПараметрыОтправкиПриглашения(ЭтотОбъект);
	
	ЗаполнитьДанныеКонтрагента(ПараметрыОтправки);
	
	ОбновитьНастройкуОтправкиПриглашения(ЭтотОбъект, ПараметрыОтправки);
	
	НастроитьОсновнуюСтраницуФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьОсновнуюСтраницуФормы(Форма)
	
	ОбновитьНастройкуОтправкиПриглашения(Форма);
	
	НастроитьОсновнуюСтраницуФормы(Форма);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьОсновнуюСтраницуФормы(Форма)
	
	ТипыИнформацииОКонтрагенте = ТипыИнформацииОКонтрагенте();

	Элементы = Форма.Элементы;
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаОсновная;
	
	ИдентификаторыКонтрагентаИзвестны = Ложь;
	Для Каждого ЭлементСписка Из Элементы.ИдентификаторКонтрагента.СписокВыбора Цикл
		Если Не ЭлементСписка.Пометка Тогда
			ИдентификаторыКонтрагентаИзвестны = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	ИдентификаторКонтрагентаКорректный   = ИдентификаторКонтрагентаКорректный(Форма);
	ЭлектроннаяПочтаКорректна            = ЭлектроннаяПочтаКорректна(Форма);
	ЭлектроннаяПочтаОрганизацииКорректна = ОбщегоНазначенияКлиентСервер.АдресЭлектроннойПочтыСоответствуетТребованиям(Форма.EmailОрганизации);
	
	Если ИдентификаторыКонтрагентаИзвестны Тогда
		Элементы.ГруппаСтраницыИнформацииОКонтрагенте.Видимость = Ложь;
		
		Этап1Завершен = ЗначениеЗаполнено(Форма.Организация)
			И ЗначениеЗаполнено(Форма.Контрагент)
			И ЗначениеЗаполнено(Форма.КонтрагентИНН);
		
		Этап2Завершен = Этап1Завершен
			И Форма.ТипПредупреждения <> ТипПредупреждения_ОбменНеПоддерживается()
			И Форма.ТипПредупреждения <> ТипПредупреждения_ПовторноеПриглашение()
			И ЗначениеЗаполнено(Форма.ИдентификаторОрганизации)
			И ЗначениеЗаполнено(Форма.ИдентификаторКонтрагента)
			И ИдентификаторКонтрагентаКорректный;
	Иначе
		Элементы.ГруппаСтраницыИнформацииОКонтрагенте.Видимость = ЗначениеЗаполнено(Форма.Контрагент);
		
		Этап1Завершен = ЗначениеЗаполнено(Форма.Организация)
			И ЗначениеЗаполнено(Форма.Контрагент)
			И ЗначениеЗаполнено(Форма.КонтрагентИНН)
			И (Форма.ТипИнформацииОКонтрагенте = ТипыИнформацииОКонтрагенте.ОператорЭДО
					И ЗначениеЗаполнено(Форма.ОператорКонтрагента)
				ИЛИ Форма.ТипИнформацииОКонтрагенте = ТипыИнформацииОКонтрагенте.ИдентификаторЭДО
					И ЗначениеЗаполнено(Форма.ИдентификаторКонтрагента)
					И ИдентификаторКонтрагентаКорректный
				ИЛИ Форма.ТипИнформацииОКонтрагенте = ТипыИнформацииОКонтрагенте.ЭлектроннаяПочта
					И ЭлектроннаяПочтаКорректна);
		Этап2Завершен = Этап1Завершен
			И Форма.ТипПредупреждения <> ТипПредупреждения_ОбменНеПоддерживается()
			И Форма.ТипПредупреждения <> ТипПредупреждения_ПовторноеПриглашение()
			И ЗначениеЗаполнено(Форма.ИдентификаторОрганизации)
			И (Форма.ТипИнформацииОКонтрагенте <> ТипыИнформацииОКонтрагенте.ОператорЭДО
				ИЛИ Не Форма.ОтправкаТолькоНаИдентификаторЭДО
				ИЛИ ЗначениеЗаполнено(Форма.ИдентификаторКонтрагента))
			И ИдентификаторКонтрагентаКорректный
			И ЗначениеЗаполнено(Форма.КонтрагентИНН);
	КонецЕсли;
	
	СоглашениеНаРоумингНеОбязательно = Форма.ВариантПотребностиСоглашения =
		ПредопределенноеЗначение("Перечисление.ВариантыПотребностиСоглашенияНаРоуминг.НеОбязательно");
		
	ПроверкаОтправкиЗаявкиНаРоуминг = Истина;
	Если Форма.ОбязательнаяОтправкаЗаявкиНаРоуминг Тогда
		ПроверкаОтправкиЗаявкиНаРоуминг = ЗначениеЗаполнено(Форма.ИмяФайлаСоглашенияНаРоуминг);
	Иначе
		Если Форма.ТребуетсяСоглашениеПриПервомПодключении Тогда
			ПроверкаОтправкиЗаявкиНаРоуминг = Форма.ЗаявкаНаРоумингПринята 
				Или ЗначениеЗаполнено(Форма.ИмяФайлаСоглашенияНаРоуминг);
		КонецЕсли;
	КонецЕсли;
	
	Этап3Завершен = Этап2Завершен
		И ЗначениеЗаполнено(Форма.ТекстПриглашения)
		И (ЗначениеЗаполнено(Форма.ИмяФайлаСоглашенияНаРоуминг)
			Или Не Форма.ТребуетсяСоглашение
			Или СоглашениеНаРоумингНеОбязательно)
		И ПроверкаОтправкиЗаявкиНаРоуминг
		И ЭлектроннаяПочтаКорректна
		И (ЭлектроннаяПочтаОрганизацииКорректна Или Не ТребуетсяЗаполнитьEmailОрганизации(Форма));
	
	Элементы.НадписьНеУказанИНН.Видимость = ЗначениеЗаполнено(Форма.Контрагент) И ПустаяСтрока(Форма.КонтрагентИНН);
	
	Элементы.НадписьЭлектроннаяПочтаНекорректна.Видимость = ЗначениеЗаполнено(Форма.ЭлектроннаяПочта)
		И Не ЭлектроннаяПочтаКорректна
		И Не ОтправкаНаТогоЖеОператора(Форма.ТипИнформацииОКонтрагенте, Форма.ОператорОрганизации, Форма.ОператорКонтрагента);
	
	Элементы.НадписьИдентификаторКонтрагентаВводНекорректный.Видимость = Не ИдентификаторыКонтрагентаИзвестны
		И Форма.ТипИнформацииОКонтрагенте = ТипыИнформацииОКонтрагенте.ИдентификаторЭДО
		И ЗначениеЗаполнено(Форма.ИдентификаторКонтрагента)
		И Не ИдентификаторКонтрагентаКорректный;
	
	Если Не Этап1Завершен Тогда
		Элементы.КартинкаЭтап1.Картинка = БиблиотекаКартинок.Этап1СинийБЭД;
		Элементы.НадписьЭтап1.Заголовок = НСтр("ru = 'Заполните информацию об участниках документооборота:'");
		Элементы.НадписьЭтап1.Шрифт = Форма.ЖирныйШрифтБЭД;
		Элементы.ГруппаВторойЭтап.Доступность = Ложь;
		Элементы.ПанельИдентификаторыЭДО.ТекущаяСтраница = Элементы.СтраницаОжиданиеЗаполненияИдентификаторов;
		Элементы.ГруппаИдентификаторКонтрагента.Видимость = Ложь;
		Элементы.ПанельПодсказокПоСвязкеИдентификаторовЭДО.Видимость = Ложь;
	Иначе
		Элементы.КартинкаЭтап1.Картинка = БиблиотекаКартинок.Этап1ЗеленыйБЭД;
		Элементы.НадписьЭтап1.Заголовок = НСтр("ru = 'Участники документооборота'");
		Элементы.НадписьЭтап1.Шрифт = Новый Шрифт;
		Элементы.ГруппаВторойЭтап.Доступность = Истина;
		Элементы.ПанельИдентификаторыЭДО.ТекущаяСтраница = Элементы.СтраницаИдентификаторыЭДО;
		
		Элементы.НадписьИдентификаторКонтрагентаНекорректный.Видимость = ЗначениеЗаполнено(Форма.ИдентификаторКонтрагента)
			И Не ИдентификаторКонтрагентаКорректный;
		
		Если Форма.ТипИнформацииОКонтрагенте = ТипыИнформацииОКонтрагенте.ОператорЭДО
			И Форма.ОтправкаТолькоНаИдентификаторЭДО Тогда
			Элементы.ГруппаИдентификаторКонтрагента.Видимость = Истина;
			Элементы.ИдентификаторКонтрагента.РежимВыбораИзСписка = Ложь;
			Элементы.ГруппаПодробнее.Видимость = Ложь;
		Иначе
			Элементы.ГруппаИдентификаторКонтрагента.Видимость = ИдентификаторыКонтрагентаИзвестны;
			Элементы.ИдентификаторКонтрагента.РежимВыбораИзСписка = Истина;
			Элементы.ГруппаПодробнее.Видимость = Истина;
			ЭлементСписка = Элементы.ИдентификаторКонтрагента.СписокВыбора.НайтиПоЗначению(Форма.ИдентификаторКонтрагента);
			Если ЭлементСписка <> Неопределено Тогда
				Элементы.КартинкаСтатусПриглашения.Картинка = ЭлементСписка.Картинка;
			КонецЕсли;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Форма.ТипПредупреждения) Тогда
			Элементы.ПанельПодсказокПоСвязкеИдентификаторовЭДО.Видимость = Ложь;
		Иначе
			Элементы.ПанельПодсказокПоСвязкеИдентификаторовЭДО.Видимость = Истина;
			
			Если Форма.ТипПредупреждения = ТипПредупреждения_ВыбраныАвтоматически() Тогда
				Элементы.ПанельПодсказокПоСвязкеИдентификаторовЭДО.ТекущаяСтраница =
					Элементы.СтраницаПодсказкаИдентификаторыВыбраныАвтоматически;
				
			ИначеЕсли Форма.ТипПредупреждения = ТипПредупреждения_ОбменНеПоддерживается() Тогда
				Элементы.ПанельПодсказокПоСвязкеИдентификаторовЭДО.ТекущаяСтраница =
					Элементы.СтраницаПодсказкаОбменНеПоддерживается;
				
			ИначеЕсли Форма.ТипПредупреждения = ТипПредупреждения_ПовторноеПриглашение() Тогда
				Элементы.ПанельПодсказокПоСвязкеИдентификаторовЭДО.ТекущаяСтраница =
					Элементы.СтраницаПодсказкаПовторноеПриглашение;
				
			ИначеЕсли Форма.ТипПредупреждения = ТипПредупреждения_НеактивнаяЗапись() Тогда
				Элементы.ПанельПодсказокПоСвязкеИдентификаторовЭДО.ТекущаяСтраница =
					Элементы.СтраницаПодсказкаНеактивнаяЗапись;
				
			ИначеЕсли Форма.ТипПредупреждения = ТипПредупреждения_ОтсутствуютСертификаты() Тогда
				Элементы.ПанельПодсказокПоСвязкеИдентификаторовЭДО.ТекущаяСтраница =
					Элементы.СтраницаПодсказкаОтсутствуютСертификаты;
				
			ИначеЕсли Форма.ТипПредупреждения = ТипПредупреждения_ТребуетсяИдентификаторЭДО() Тогда
				Элементы.ПанельПодсказокПоСвязкеИдентификаторовЭДО.ТекущаяСтраница =
					Элементы.СтраницаПодсказкаТребуетсяИдентификаторЭДО;
				
			Иначе
				Элементы.ПанельПодсказокПоСвязкеИдентификаторовЭДО.Видимость = Ложь;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	Если Не Этап2Завершен Тогда
		Элементы.КартинкаЭтап2.Картинка = БиблиотекаКартинок.Этап2СинийБЭД;
		Элементы.НадписьЭтап2.Заголовок = НСтр("ru = 'Выберите учетные записи:'");
		Элементы.НадписьЭтап2.Шрифт = Форма.ЖирныйШрифтБЭД;
		Элементы.ГруппаТретийЭтап.Доступность = Ложь;
		Элементы.ПанельДополнительныхСведений.ТекущаяСтраница = Элементы.СтраницаОжиданиеПредыдущихЭтапов;
		Элементы.ГруппаЭлектроннаяПочтаДополнительно.Видимость = Ложь;
		Элементы.ГруппаСоглашениеНаРоуминг.Видимость = Ложь;
	Иначе
		Элементы.КартинкаЭтап2.Картинка = БиблиотекаКартинок.Этап2ЗеленыйБЭД;
		Элементы.НадписьЭтап2.Заголовок = НСтр("ru = 'Учетные записи'");
		Элементы.НадписьЭтап2.Шрифт = Новый Шрифт;
		Элементы.ГруппаТретийЭтап.Доступность = Истина;
		Элементы.ПанельДополнительныхСведений.ТекущаяСтраница = Элементы.СтраницаЗаполнениеДополнительныхСведений;

		ОбязательнаяЗаявкаНаРоуминг = Ложь;
		Если Форма.ОбязательнаяОтправкаЗаявкиНаРоуминг Тогда
			ОбязательнаяЗаявкаНаРоуминг = Истина;
		Иначе
			Если Форма.ТребуетсяСоглашениеПриПервомПодключении И Не Форма.ЗаявкаНаРоумингПринята Тогда
				ОбязательнаяЗаявкаНаРоуминг = Истина;
			КонецЕсли;
		КонецЕсли;
		
		Если (Форма.ТребуетсяСоглашение Или ОбязательнаяЗаявкаНаРоуминг)
			И Форма.ТипИнформацииОКонтрагенте <> ТипыИнформацииОКонтрагенте.ЭлектроннаяПочта Тогда
			Элементы.ГруппаСоглашениеНаРоуминг.Видимость = Истина;
			Элементы.ПанельСоглашениеНаРоуминг.ТекущаяСтраница =
				?(ЗначениеЗаполнено(Форма.ИмяФайлаСоглашенияНаРоуминг) И Не Форма.ТребуетсяНовоеСоглашение,
				Элементы.СтраницаСоглашениеНаРоумингВыбрано,
				Элементы.СтраницаСоглашениеНаРоумингНеВыбрано);
			Если Элементы.НадписьИмяФайлаСоглашенияНаРоуминг.Заголовок <> Форма.ИмяФайлаСоглашенияНаРоуминг Тогда
				Элементы.НадписьИмяФайлаСоглашенияНаРоуминг.Заголовок = Форма.ИмяФайлаСоглашенияНаРоуминг;
			КонецЕсли;
		Иначе
			Элементы.ГруппаСоглашениеНаРоуминг.Видимость = Ложь;
		КонецЕсли;
		
		Если ОтправкаНаТогоЖеОператора(Форма.ТипИнформацииОКонтрагенте, Форма.ОператорОрганизации, Форма.ОператорКонтрагента) Тогда
			Элементы.ГруппаЭлектроннаяПочтаДополнительно.Видимость = Истина;
			Элементы.НадписьЭлектроннаяПочтаНекорректнаДополнительно.Видимость = ЗначениеЗаполнено(Форма.ЭлектроннаяПочта)
				И Не ЭлектроннаяПочтаКорректна;
		Иначе
			Элементы.ГруппаЭлектроннаяПочтаДополнительно.Видимость = Ложь;
			Элементы.НадписьЭлектроннаяПочтаНекорректнаДополнительно.Видимость = Ложь;
		КонецЕсли;
		
		Элементы.НадписьЭлектроннаяПочтаОрганизацииНекорректнаДополнительно.Видимость = ЗначениеЗаполнено(Форма.EmailОрганизации)
			И Не ЭлектроннаяПочтаОрганизацииКорректна;
			
	КонецЕсли;
	
	Если Этап3Завершен Тогда
		Элементы.КартинкаЭтап3.Картинка = БиблиотекаКартинок.Этап3ЗеленыйБЭД;
		Элементы.НадписьЭтап3.Заголовок = НСтр("ru = 'Дополнительные сведения'");
		Элементы.НадписьЭтап3.Шрифт = Новый Шрифт;
	Иначе
		Элементы.КартинкаЭтап3.Картинка = БиблиотекаКартинок.Этап3СинийБЭД;
		Элементы.НадписьЭтап3.Заголовок = НСтр("ru = 'Укажите дополнительные сведения:'");
		Элементы.НадписьЭтап3.Шрифт = Форма.ЖирныйШрифтБЭД;
	КонецЕсли;
	
	Элементы.КнопкаНазад.Видимость = Ложь;
	
	Если Форма.РежимНастройки Тогда
		Элементы.КнопкаПрименить.Видимость = Истина;
		Элементы.КнопкаПрименить.КнопкаПоУмолчанию = Истина;
		Элементы.КнопкаПрименить.Доступность = Этап3Завершен;
		
		Элементы.КнопкаОтправить.Видимость = Ложь;
	Иначе
		Элементы.КнопкаОтправить.Видимость = Истина;
		Элементы.КнопкаОтправить.КнопкаПоУмолчанию = Истина;
		Элементы.КнопкаОтправить.Доступность = Этап3Завершен;
		
		Элементы.КнопкаПрименить.Видимость = Ложь;
	КонецЕсли;
	
	Элементы.ЭлектроннаяПочтаОрганизацииДополнительно.Подсказка =
		ПриглашенияЭДОСлужебныйКлиентСервер.ПодсказкаЭлектроннаяПочтаДляУведомленияОСтатусеЗаявкиНаРоуминг();
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьСтраницуОжидания(РежимЗагрузкиНастроек = Ложь)
	
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаОжидание;
	
	Элементы.НадписьОжиданиеЗагрузкаНастроек.Видимость = РежимЗагрузкиНастроек;
	Элементы.НадписьОжиданиеОтправкаПриглашения.Видимость = Не РежимЗагрузкиНастроек;
	
	Элементы.КнопкаНазад.Видимость = Ложь;
	Элементы.КнопкаОтправить.Видимость = Ложь;
	Элементы.КнопкаПрименить.Видимость = Ложь;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьСтраницуОшибки(Форма, ОписаниеОшибки = Неопределено)
	
	Элементы = Форма.Элементы;
	
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаОшибка;
	
	Элементы.КнопкаОтправить.Видимость = Ложь;
	Элементы.КнопкаПрименить.Видимость = Ложь;
	
	Если ОписаниеОшибки = Неопределено Тогда
		Элементы.КнопкаНазад.Видимость = Истина;
	Иначе
		Элементы.КнопкаНазад.Видимость = Ложь;
		Элементы.НадписьОшибка.Заголовок = ОписаниеОшибки;
		Элементы.КнопкаОтмена.Заголовок = НСтр("ru = 'Закрыть'");
		Элементы.КнопкаОтмена.КнопкаПоУмолчанию = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьСтраницуВыполнено()
	
	ТипыИнформацииОКонтрагенте = ТипыИнформацииОКонтрагенте();
	
	ТипПриглашения = "Широковещательное";
	
	Если ОбязательнаяОтправкаЗаявкиНаРоуминг Тогда
		ТипПриглашения = "ЗаявкаНаРоуминг";
	ИначеЕсли ТребуетсяСоглашениеПриПервомПодключении Тогда
		Если ЗаявкаНаРоумингПринята Тогда
			ТипПриглашения = "Авто";
		Иначе
			ТипПриглашения = "ЗаявкаНаРоуминг";
		КонецЕсли;
	ИначеЕсли ТипИнформацииОКонтрагенте = ТипыИнформацииОКонтрагенте.ИдентификаторЭДО
		ИЛИ ОтправкаТолькоНаИдентификаторЭДО Тогда
		
		Если РоумингБезАвтоматическойНастройки Тогда
			ТипПриглашения = "ЗаявкаНаРоуминг";
		Иначе
			ТипПриглашения = "Авто";
		КонецЕсли;
		
	ИначеЕсли ТипИнформацииОКонтрагенте = ТипыИнформацииОКонтрагенте.ОператорЭДО
		И ОператорОрганизации <> ОператорКонтрагента Тогда
		
		Если АбонентВХабе1С Тогда
			ТипПриглашения = "Широковещательное";
		Иначе
			ТипПриглашения = "ЗаявкаНаРоуминг";
		КонецЕсли;
		
	КонецЕсли;
	
	Элементы.НадписьВыполнено.Видимость = ТипПриглашения = "Широковещательное";
	Элементы.НадписьВыполненоАвто.Видимость = ТипПриглашения = "Авто";
	Элементы.НадписьВыполненоРоуминг.Видимость = ТипПриглашения = "ЗаявкаНаРоуминг";
	
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаВыполнено;
	
	Элементы.КнопкаНазад.Видимость = Ложь;
	Элементы.КнопкаОтмена.Заголовок = НСтр("ru = 'Закрыть'");
	Элементы.КнопкаОтправить.Видимость = Ложь;
	Элементы.КнопкаПрименить.Видимость = Ложь;
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииОрганизации()
	
	ИдентификаторОрганизации = "";
	
	ЗаполнитьИдентификаторыОрганизации();
	
	ЗаполнитьEmailОрганизации();
	
	ОбновитьОсновнуюСтраницуФормы(ЭтотОбъект);
	
	// ЭлектронноеВзаимодействие.ОбменСКонтрагентами.КонтекстныеПодсказкиБЭД
	ОбновляемыеКатегории = Новый Массив;
	ОбновляемыеКатегории.Добавить(КонтекстныеПодсказкиБЭДКатегоризацияВызовСервера.Категория_КодОператораУчетнойЗаписиОрганизации());
	
	СформироватьКонтекст(ОбновляемыеКатегории);
	// Конец ЭлектронноеВзаимодействие.ОбменСКонтрагентами.КонтекстныеПодсказкиБЭД
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииЭлектроннойПочты()
	
	НастроитьОсновнуюСтраницуФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбораЭлектроннойПочты(ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ЭлектроннаяПочта = ВыбранноеЗначение;
	
	НастроитьОсновнуюСтраницуФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПослеИзмененияТекстаЭлектроннойПочты()
	
	Текст = Элементы.ЭлектроннаяПочта.ТекстРедактирования;
	ИсходноеСостояние = Элементы.НадписьЭлектроннаяПочтаНекорректна.Видимость;
	НовоеСостояние = Не ОбщегоНазначенияКлиентСервер.АдресЭлектроннойПочтыСоответствуетТребованиям(Текст);
	
	Если ПустаяСтрока(ЭлектроннаяПочта)
		ИЛИ ИсходноеСостояние <> НовоеСостояние Тогда
		ЭлектроннаяПочта = Текст;
		НастроитьОсновнуюСтраницуФормы(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПослеИзмененияТекстаЭлектроннойПочтыВторойЭтап()
	
	Текст = Элементы.ЭлектроннаяПочтаДополнительно.ТекстРедактирования;
	ИсходноеСостояние = Элементы.НадписьЭлектроннаяПочтаНекорректнаДополнительно.Видимость;
	НовоеСостояние = Не ОбщегоНазначенияКлиентСервер.АдресЭлектроннойПочтыСоответствуетТребованиям(Текст);
	
	Если ПустаяСтрока(ЭлектроннаяПочта)
		ИЛИ ИсходноеСостояние <> НовоеСостояние Тогда
		ЭлектроннаяПочта = Текст;
		НастроитьОсновнуюСтраницуФормы(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПослеИзмененияТекстаЭлектроннойПочтыОрганизацииВторойЭтап()
	
	Текст = Элементы.ЭлектроннаяПочтаОрганизацииДополнительно.ТекстРедактирования;
	ИсходноеСостояние = Элементы.НадписьЭлектроннаяПочтаОрганизацииНекорректнаДополнительно.Видимость;
	НовоеСостояние = Не ОбщегоНазначенияКлиентСервер.АдресЭлектроннойПочтыСоответствуетТребованиям(Текст);
	
	Если ПустаяСтрока(EmailОрганизации)
		ИЛИ ИсходноеСостояние <> НовоеСостояние Тогда
		EmailОрганизации = Текст;
		НастроитьОсновнуюСтраницуФормы(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПослеИзмененияТекстаИдентификатораКонтрагента()
	ИдентификаторКонтрагента = Элементы.ИдентификаторКонтрагентаВвод.ТекстРедактирования;
	ПриИзмененииИдентификатораКонтрагентаИнтерактивно();
КонецПроцедуры

&НаСервере
Процедура ПриОбновленииСпискаУчетныхЗаписей()
	
	ЗаполнитьИдентификаторыОрганизации();
	
	Если Элементы.ИдентификаторОрганизации.СписокВыбора.НайтиПоЗначению(ИдентификаторОрганизации) <> Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИдентификаторОрганизации = "";
	
	ОбновитьОсновнуюСтраницуФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииИдентификатораКонтрагентаИнтерактивно()
	
	ИдентификаторКонтрагента = СокрЛП(ИдентификаторКонтрагента);
	
	ПараметрыОтправки = ПараметрыОтправкиПриглашения(ЭтотОбъект, Ложь);
	
	ОбновитьНастройкуОтправкиПриглашения(ЭтотОбъект, ПараметрыОтправки);
	
	НастроитьОсновнуюСтраницуФормы(ЭтотОбъект);
	
	ПриИзмененииИдентификатораКонтрагента(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ПриИзмененииИдентификатораКонтрагента(Форма)
	
	ПроверитьСоответствиеАбонентаИКонтрагента(Форма);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ИдентификаторКонтрагентаКорректный(Форма)
	
	ТипыИнформацииОКонтрагенте = ТипыИнформацииОКонтрагенте();
	Если Форма.ТипИнформацииОКонтрагенте = ТипыИнформацииОКонтрагенте.ОператорЭДО
		И Не Форма.ОтправкаТолькоНаИдентификаторЭДО
		ИЛИ Форма.ТипИнформацииОКонтрагенте = ТипыИнформацииОКонтрагенте.ЭлектроннаяПочта Тогда
		Возврат Истина;
	КонецЕсли;
	Если Не РаботаСАбонентамиЭДОКлиентСервер.ИдентификаторАбонентаКорректный(Форма.ИдентификаторКонтрагента)
		ИЛИ Форма.ИдентификаторКонтрагента = Форма.ИдентификаторОрганизации Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если Форма.ТипИнформацииОКонтрагенте = ТипыИнформацииОКонтрагенте.ОператорЭДО
		И ЗначениеЗаполнено(Форма.ОператорКонтрагента) Тогда
		Возврат СтрНачинаетсяС(Форма.ИдентификаторКонтрагента, Форма.ОператорКонтрагента)
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ДобавитьПроизвольныйИдентификаторКонтрагентаВСписокВыбора(Форма, ПроизвольныйИдентификатор, Картинка = Неопределено)
	
	Если Картинка = Неопределено Тогда
		Картинка = Новый Картинка;
	КонецЕсли;
	
	Идентификатор = СокрЛП(ПроизвольныйИдентификатор);
	
	Элементы = Форма.Элементы;
	
	СписокВыбора = Элементы.ИдентификаторКонтрагента.СписокВыбора;
	
	Если СписокВыбора.Количество() И СписокВыбора[0].Пометка Тогда
		СписокВыбора.Удалить(0);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Идентификатор)
		ИЛИ Не Элементы.ИдентификаторКонтрагента.РежимВыбораИзСписка Тогда
		Возврат;
	КонецЕсли;
	
	Если СписокВыбора.Количество() = 0 Тогда
		СписокВыбора.Добавить(Идентификатор,,Истина, Картинка);
		Возврат;
	КонецЕсли;
	
	ЭлементСписка = СписокВыбора.НайтиПоЗначению(Идентификатор);
	Если ЭлементСписка = Неопределено Тогда
		СписокВыбора.Вставить(0, Идентификатор,, Истина, Картинка);
	Иначе
		ЭлементСписка.Картинка = Картинка;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьИдентификаторПослеСозданияУчетнойЗаписи(Идентификатор, Контекст) Экспорт
	
	Если Не ЗначениеЗаполнено(Идентификатор) Тогда
		Возврат;
	КонецЕсли;
	
	ИдентификаторОрганизации = Идентификатор;
	
	ОбновитьОсновнуюСтраницуФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ЭлектроннаяПочтаКорректна(Форма)
	
	Если Форма.ТипИнформацииОКонтрагенте <> ТипыИнформацииОКонтрагенте().ЭлектроннаяПочта
		И Не ОтправкаНаТогоЖеОператора(Форма.ТипИнформацииОКонтрагенте, Форма.ОператорОрганизации, Форма.ОператорКонтрагента) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Возврат ЗначениеЗаполнено(Форма.ЭлектроннаяПочта)
		И ОбщегоНазначенияКлиентСервер.АдресЭлектроннойПочтыСоответствуетТребованиям(Форма.ЭлектроннаяПочта);
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ОтправкаНаТогоЖеОператора(ТипИнформацииОКонтрагенте, ОператорОрганизации, ОператорКонтрагента)
	Возврат ТипИнформацииОКонтрагенте = ТипыИнформацииОКонтрагенте().ОператорЭДО
		И ОператорОрганизации = ОператорКонтрагента;
КонецФункции

&НаКлиенте
Процедура ПоказатьВариантыИнформацииОКонтрагенте(Элемент)
	
	Оповещение = Новый ОписаниеОповещения("ПослеВыбораВариантаИнформацииОКонтрагенте", ЭтотОбъект);
	СписокВыбора = СписокВыбораВариантовИнформацииОКонтрагенте();
	ПоказатьВыборИзМеню(Оповещение, СписокВыбора, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораВариантаИнформацииОКонтрагенте(ЭлементСписка, Контекст) Экспорт
	
	Если ЭлементСписка = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТипИнформацииОКонтрагенте = ЭлементСписка.Значение;
	
	УстановитьСтраницуИнформацииОКонтрагенте();
	
	ОбновитьОсновнуюСтраницуФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуИнформацииОКонтрагенте()
	
	ТипыИнформацииОКонтрагенте = ТипыИнформацииОКонтрагенте();
	Если ТипИнформацииОКонтрагенте = ТипыИнформацииОКонтрагенте.ОператорЭДО Тогда
		СтраницаИнформацииОКонтрагенте = Элементы.СтраницаИнформацииОКонтрагентеОператор;
	ИначеЕсли ТипИнформацииОКонтрагенте = ТипыИнформацииОКонтрагенте.ИдентификаторЭДО Тогда 
		СтраницаИнформацииОКонтрагенте = Элементы.СтраницаИнформацииОКонтрагентеИдентификатор;
	ИначеЕсли ТипИнформацииОКонтрагенте = ТипыИнформацииОКонтрагенте.ЭлектроннаяПочта Тогда
		СтраницаИнформацииОКонтрагенте = Элементы.СтраницаИнформацииОКонтрагентеЭлектроннаяПочта;
	Иначе
		СтраницаИнформацииОКонтрагенте = Элементы.ГруппаСтраницыИнформацииОКонтрагенте.ТекущаяСтраница;
	КонецЕсли;
	
	Элементы.ГруппаСтраницыИнформацииОКонтрагенте.ТекущаяСтраница = СтраницаИнформацииОКонтрагенте;
	
КонецПроцедуры

&НаКлиенте
Функция СписокВыбораВариантовИнформацииОКонтрагенте()
	
	ТипыИнформацииОКонтрагенте = ТипыИнформацииОКонтрагенте();
	СписокВыбора = Новый СписокЗначений;
	СписокВыбора.Добавить(ТипыИнформацииОКонтрагенте.ОператорЭДО,      НСтр("ru = 'Я знаю оператора ЭДО'"));
	СписокВыбора.Добавить(ТипыИнформацииОКонтрагенте.ИдентификаторЭДО, НСтр("ru = 'Я знаю идентификатор ЭДО'"));
	СписокВыбора.Добавить(ТипыИнформацииОКонтрагенте.ЭлектроннаяПочта, НСтр("ru = 'Я знаю только e-mail'"));
	
	ТекущееЗначение = СписокВыбора.НайтиПоЗначению(ТипИнформацииОКонтрагенте);
	СписокВыбора.Удалить(ТекущееЗначение);
	
	Возврат СписокВыбора;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьНастройкуОтправкиПриглашения(Форма, ПараметрыОтправки = Неопределено)
	
	Если ПараметрыОтправки = Неопределено Тогда
		ПараметрыОтправки = ПараметрыОтправкиПриглашения(Форма);
	КонецЕсли;
	
	Форма.ОператорКонтрагента               = ПараметрыОтправки.ОператорКонтрагента;
	Форма.ОператорКонтрагентаПредставление  = ПараметрыОтправки.ОператорКонтрагентаПредставление;
	Форма.АбонентВХабе1С                    = ПараметрыОтправки.АбонентВХабе1С;
	Форма.ИдентификаторКонтрагентаОписание  = ПараметрыОтправки.ИдентификаторКонтрагентаОписание;
	Форма.РоумингБезАвтоматическойНастройки = ПараметрыОтправки.РоумингБезАвтоматическойНастройки;
	Форма.ОтправкаТолькоНаИдентификаторЭДО  = ПараметрыОтправки.ОтправкаТолькоНаИдентификаторЭДО;
	Форма.ТребуетсяСоглашение               = ПараметрыОтправки.ТребуетсяСоглашение;
	Форма.ТипПредупреждения                 = ПараметрыОтправки.ТипПредупреждения;
	Форма.ИмяФайлаСоглашенияНаРоуминг       = ПараметрыОтправки.ИмяФайлаСоглашенияНаРоуминг;
	Форма.ОператорОрганизации               = ПараметрыОтправки.ОператорОрганизации;
	Форма.СтатусПриглашенияПредставление    = ПараметрыОтправки.СтатусПриглашенияПредставление;
	Форма.НавигационнаяСсылкаНаПриглашение  = ПараметрыОтправки.НавигационнаяСсылкаНаПриглашение;
	Форма.ВариантПотребностиСоглашения      = ПараметрыОтправки.ВариантПотребностиСоглашения;
	Форма.Абоненты = ПараметрыОтправки.Абоненты;
	Форма.ТребуетсяНовоеСоглашение = ПараметрыОтправки.ТребуетсяНовоеСоглашение;
	Форма.ТребуетсяСоглашениеПриПервомПодключении = ПараметрыОтправки.ТребуетсяСоглашениеПриПервомПодключении;
	Форма.ОбязательнаяОтправкаЗаявкиНаРоуминг = ПараметрыОтправки.ОбязательнаяОтправкаЗаявкиНаРоуминг;
	Форма.ЗаявкаНаРоумингПринята = ПараметрыОтправки.ЗаявкаНаРоумингПринята;
	
	Форма.Элементы.ГруппаЭлектроннаяПочтаОрганизацииДополнительно.Видимость = ТребуетсяЗаполнитьEmailОрганизации(Форма);
	
	Если Форма.ТребуетсяСоглашение Тогда
		Форма.Элементы.НадписьСоглашениеНаРоумингНеВыбрано.Подсказка = ПараметрыОтправки.РекомендацияПоНастройке;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПараметрыОтправки.ИдентификаторОрганизации)
		И Форма.ИдентификаторОрганизации <> ПараметрыОтправки.ИдентификаторОрганизации Тогда
		Форма.ИдентификаторОрганизации = ПараметрыОтправки.ИдентификаторОрганизации;
		
		Если Не ЗначениеЗаполнено(Форма.ТипПредупреждения)
			И Форма.Элементы.ИдентификаторОрганизации.СписокВыбора.Количество() > 1 Тогда
			Форма.ТипПредупреждения = ТипПредупреждения_ВыбраныАвтоматически();
		КонецЕсли;
	КонецЕсли;
	
	СписокВыбора = Форма.Элементы.ИдентификаторКонтрагента.СписокВыбора;
	Если ЗначениеЗаполнено(ПараметрыОтправки.СписокИдентификаторовКонтрагента) Тогда
		СписокВыбора.Очистить();
		Для Каждого ЭлементСписка Из ПараметрыОтправки.СписокИдентификаторовКонтрагента Цикл
			ЗаполнитьЗначенияСвойств(СписокВыбора.Добавить(), ЭлементСписка);
		КонецЦикла;
	КонецЕсли;
	
	Если Форма.ТипИнформацииОКонтрагенте <> ТипыИнформацииОКонтрагенте().ОператорЭДО
		И ЗначениеЗаполнено(ПараметрыОтправки.ИдентификаторОрганизации)
		И ЗначениеЗаполнено(ПараметрыОтправки.ИдентификаторКонтрагента)
		И Форма.ИдентификаторКонтрагента <> ПараметрыОтправки.ИдентификаторКонтрагента Тогда
		Форма.ИдентификаторКонтрагента = ПараметрыОтправки.ИдентификаторКонтрагента;
		ПриИзмененииИдентификатораКонтрагента(Форма);
		Если Не ЗначениеЗаполнено(Форма.ТипПредупреждения)
			И СписокВыбора.Количество() > 1 Тогда
			Форма.ТипПредупреждения = ТипПредупреждения_ВыбраныАвтоматически();
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Форма.ИдентификаторКонтрагента)
		И Форма.ТипПредупреждения <> ТипПредупреждения_ТребуетсяИдентификаторЭДО()
		И Не ИдентификаторКонтрагентаКорректный(Форма) Тогда
		Форма.ТипПредупреждения = ТипПредупреждения_ОбменНеПоддерживается();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Форма.ИдентификаторКонтрагента) Тогда
		ДобавитьПроизвольныйИдентификаторКонтрагентаВСписокВыбора(Форма,
			Форма.ИдентификаторКонтрагента, ПараметрыОтправки.КартинкаСтатусаПодключения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПараметрыОтправкиПриглашения(Форма, ФормироватьСписокВыбора = Истина)
	
	ТипыИнформацииОКонтрагенте = ТипыИнформацииОКонтрагенте();
	МассивИдентификаторовОрганизации = Новый Массив;
	
	Если ЗначениеЗаполнено(Форма.ИдентификаторОрганизации) Тогда
		МассивИдентификаторовОрганизации.Добавить(Форма.ИдентификаторОрганизации);
	Иначе
		Для Каждого ЭлементСписка Из Форма.Элементы.ИдентификаторОрганизации.СписокВыбора Цикл
			Если ЭлементСписка.Значение <> Идентификатор_Создать() Тогда
				МассивИдентификаторовОрганизации.Добавить(ЭлементСписка.Значение);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если Форма.ТипИнформацииОКонтрагенте = ТипыИнформацииОКонтрагенте.ИдентификаторЭДО Тогда
		
		Если ЗначениеЗаполнено(Форма.ИдентификаторКонтрагента) Тогда
			МассивИдентификаторовКонтрагента = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Форма.ИдентификаторКонтрагента);
		Иначе
			МассивИдентификаторовКонтрагента = Неопределено;
		КонецЕсли;
		
	ИначеЕсли Форма.ТипИнформацииОКонтрагенте = ТипыИнформацииОКонтрагенте.ОператорЭДО Тогда
		
		Если РаботаСАбонентамиЭДОКлиентСервер.ЭтоАбонентОператора(Форма.ИдентификаторКонтрагента,
			Форма.ОператорКонтрагента) И Форма.ОтправкаТолькоНаИдентификаторЭДО Тогда
			МассивИдентификаторовКонтрагента = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Форма.ИдентификаторКонтрагента);
		Иначе
			МассивИдентификаторовКонтрагента = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Форма.ОператорКонтрагента);
		КонецЕсли;
		
	ИначеЕсли Форма.ТипИнформацииОКонтрагенте = ТипыИнформацииОКонтрагенте.ЭлектроннаяПочта Тогда
		
		МассивИдентификаторовКонтрагента = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве("");
		
	КонецЕсли;
	
	ПараметрыОтправки = ПолучитьПараметрыОтправкиПриглашенияНаСервере(МассивИдентификаторовОрганизации,
		МассивИдентификаторовКонтрагента, Форма.Контрагент, ФормироватьСписокВыбора, Форма.ТипИнформацииОКонтрагенте);
	
	Возврат ПараметрыОтправки;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьПараметрыОтправкиПриглашенияНаСервере(ИдентификаторыОрганизации, ИдентификаторыКонтрагента,
	Контрагент,  ФормироватьСписокВыбора, ТипИнформацииОКонтрагенте)
	
	ПараметрыСвязиИдентификаторов = Неопределено;
	Если ЗначениеЗаполнено(Контрагент) Тогда
		ПараметрыПолученияСвязи = РаботаСАбонентамиЭДО.НовыеПараметрыПолученияСвязиИдентификаторов();
		ПараметрыПолученияСвязи.ИдентификаторыОрганизации = ИдентификаторыОрганизации;
		ПараметрыПолученияСвязи.ИдентификаторыКонтрагента = ИдентификаторыКонтрагента;
		ПараметрыПолученияСвязи.Контрагент = Контрагент;
		ПараметрыПолученияСвязи.ФормироватьСписокВыбора = ФормироватьСписокВыбора;
		
		ПараметрыСвязиИдентификаторов = РаботаСАбонентамиЭДО.ПараметрыСвязиИдентификаторов(
			ПараметрыПолученияСвязи,, Истина);
	КонецЕсли;
	
	ПараметрыОтправки = НовыеПараметрыОтправкиПриглашения(ТипИнформацииОКонтрагенте, ПараметрыСвязиИдентификаторов);
	
	Возврат ПараметрыОтправки;
	
КонецФункции

&НаСервереБезКонтекста
Функция НовыеПараметрыОтправкиПриглашения(ТипИнформацииОКонтрагенте, ПараметрыСвязиИдентификаторов = Неопределено)
	
	ПараметрыОтправки = Новый Структура(
		"ОператорОрганизации,
		|ОператорКонтрагента,
		|ОператорКонтрагентаПредставление,
		|АбонентВХабе1С,
		|ИдентификаторКонтрагентаОписание,
		|РоумингБезАвтоматическойНастройки,
		|ОтправкаТолькоНаИдентификаторЭДО,
		|ТипПредупреждения,
		|ТребуетсяСоглашение,
		|ТребуетсяНовоеСоглашение,
		|ИмяФайлаСоглашенияНаРоуминг,
		|РекомендацияПоНастройке,
		|ИдентификаторОрганизации,
		|ИдентификаторКонтрагента,
		|СписокИдентификаторовКонтрагента,
		|КонтрагентИНН,
		|КонтрагентКПП,
		|СтатусПриглашенияПредставление,
		|НавигационнаяСсылкаНаПриглашение,
		|КартинкаСтатусаПодключения,
		|ВариантПотребностиСоглашения,
		|СвязьДоступна,
		|Абоненты,
		|ТребуетсяСоглашениеПриПервомПодключении,
		|ОбязательнаяОтправкаЗаявкиНаРоуминг,
		|ЗаявкаНаРоумингПринята,
		|ПриглашениеОтправлено");
	
	Если Не ЗначениеЗаполнено(ПараметрыСвязиИдентификаторов) Тогда
		Возврат ПараметрыОтправки;
	КонецЕсли;
	
	СтрокаПараметровСвязи = ПараметрыСвязиИдентификаторов[0];
	
	ЗаполнитьЗначенияСвойств(ПараметрыОтправки, СтрокаПараметровСвязи);
	ПараметрыОтправки.РоумингБезАвтоматическойНастройки = СтрокаПараметровСвязи.СвязьДоступна = 0
		Или СтрокаПараметровСвязи.ОбязательнаяОтправкаЗаявкиНаРоуминг
		Или (СтрокаПараметровСвязи.ТребуетсяСоглашениеПриПервомПодключении И Не СтрокаПараметровСвязи.ЗаявкаНаРоумингПринята);
	ПараметрыОтправки.СписокИдентификаторовКонтрагента  = СтрокаПараметровСвязи.СписокВыбора;
	
	ПараметрыОпределенияТипаПриглашения = НовыеПараметрыОпределенияТипаПриглашения();
	ЗаполнитьЗначенияСвойств(ПараметрыОпределенияТипаПриглашения, ПараметрыОтправки);
	ПараметрыОпределенияТипаПриглашения.ТипИнформацииОКонтрагенте = ТипИнформацииОКонтрагенте;
	
	ТипПриглашения = ТипПриглашения(ПараметрыОпределенияТипаПриглашения);
	
	ЗаполнитьПредупреждениеПоПараметрамСвязи(ПараметрыОтправки, СтрокаПараметровСвязи, ТипПриглашения);
	
	ПараметрыОтправки.КартинкаСтатусаПодключения = СинхронизацияЭДО.КартинкаСтатусаПодключенияАбонента(
		СтрокаПараметровСвязи.СтатусПодключения);
	Возврат ПараметрыОтправки;
	
КонецФункции

&НаСервереБезКонтекста
Процедура ЗаполнитьПредупреждениеПоПараметрамСвязи(ПараметрыОтправки, ПараметрыСвязи, ТипПриглашения)
	
	ПовторноеПриглашение = Ложь;
	Если ТипПриглашения = Перечисления.ТипыПриглашений.НаИдентификатор
		И ЗначениеЗаполнено(ПараметрыСвязи.СтатусПриглашенияНаИдентификатор)
		И Не ВозможнаПовторнаяОтправка(ПараметрыСвязи.СтатусПриглашенияНаИдентификатор) Тогда
		
		ПовторноеПриглашение = Истина;
	ИначеЕсли ТипПриглашения = Перечисления.ТипыПриглашений.Широковещательное
		И ЗначениеЗаполнено(ПараметрыСвязи.СтатусШироковещательногоПриглашения)
		И Не ВозможнаПовторнаяОтправка(ПараметрыСвязи.СтатусШироковещательногоПриглашения) Тогда
		
		ПовторноеПриглашение = Истина;
	ИначеЕсли ТипПриглашения = Перечисления.ТипыПриглашений.ЗаявкаНаРоуминг
		И ЗначениеЗаполнено(ПараметрыСвязи.СтатусЗаявкиНаРоуминг)
		И Не ВозможнаПовторнаяОтправка(ПараметрыСвязи.СтатусЗаявкиНаРоуминг) Тогда
		
		ПовторноеПриглашение = Истина;
	КонецЕсли;
	
	Если ПовторноеПриглашение Тогда
		ПараметрыОтправки.ТипПредупреждения = ТипПредупреждения_ПовторноеПриглашение();
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ПараметрыСвязи.ИдентификаторКонтрагента) Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ПараметрыСвязи.АбонентАктивен Тогда
		ПараметрыОтправки.ТипПредупреждения = ТипПредупреждения_НеактивнаяЗапись();
	ИначеЕсли Не ПараметрыСвязи.СертификатДействителен Тогда
		ПараметрыОтправки.ТипПредупреждения = ТипПредупреждения_ОтсутствуютСертификаты();
	КонецЕсли;
	
	Если ПараметрыСвязи.ОператорыСовпадают Тогда
		Возврат;
		
	ИначеЕсли ПараметрыСвязи.СвязьДоступна = -1 Тогда
		ПараметрыОтправки.ТипПредупреждения = ТипПредупреждения_ОбменНеПоддерживается();
		
	ИначеЕсли ПараметрыСвязи.ОтправкаТолькоНаИдентификаторЭДО
		И ПараметрыСвязи.ИдентификаторКонтрагента = ПараметрыСвязи.ОператорКонтрагента Тогда
		ПараметрыОтправки.ТипПредупреждения = ТипПредупреждения_ТребуетсяИдентификаторЭДО();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВозможнаПовторнаяОтправка(ПроверяемыйСтатус) 
	
	Результат = Ложь;
	
	СтатусыПовторнойОтправкиПриглашений = Новый Массив;
	СтатусыПовторнойОтправкиПриглашений.Добавить(Перечисления.СтатусыПриглашений.Ошибка);
	СтатусыПовторнойОтправкиПриглашений.Добавить(Перечисления.СтатусыПриглашений.Отклонено);
	
	Результат = СтатусыПовторнойОтправкиПриглашений.Найти(ПроверяемыйСтатус) <> Неопределено;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ОбработкаНавигационнойСсылкиОткрытьТекущиеДела(НавигационнаяСсылка, СтандартнаяОбработка);
	
	Если НавигационнаяСсылка = "ОткрытьТекущиеДелаЭДО" Тогда
		СтандартнаяОбработка = Ложь;
		ИнтерфейсДокументовЭДОКлиент.ОткрытьТекущиеДелаЭДО();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьШаблонСоглашениеНаРоуминг()
	
	Если Не ЗначениеЗаполнено(ИдентификаторОрганизации) Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.ПанельСоглашениеНаРоуминг.ТекущаяСтраница = Элементы.СтраницаСоглашениеНаРоумингОжидание;
	
	Оповещение = Новый ОписаниеОповещения("ПолучитьШаблонСоглашениеНаРоумингЗавершение", ЭтотОбъект);
	ПараметрыСоглашения = Новый Структура("ИдентификаторЭДО", ИдентификаторОрганизации);
	ПриглашенияЭДОСлужебныйКлиент.ПолучитьСоглашениеНаРоуминг(Оповещение, ПараметрыСоглашения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьШаблонСоглашениеНаРоумингЗавершение(Результат, Контекст) Экспорт
	Элементы.ПанельСоглашениеНаРоуминг.ТекущаяСтраница = Элементы.СтраницаСоглашениеНаРоумингНеВыбрано;
КонецПроцедуры

&НаКлиенте
Процедура ПрикрепитьСоглашениеНаРоуминг()
	
	ПараметрыСоглашения = Новый Структура;
	ПараметрыСоглашения.Вставить("ИдентификаторОрганизации", ИдентификаторОрганизации);
	Оповещение = Новый ОписаниеОповещения("ПрикрепитьСоглашениеНаРоумингЗавершение", ЭтотОбъект);
	ПриглашенияЭДОСлужебныйКлиент.ПрикрепитьСоглашениеНаРоуминг(Оповещение, ПараметрыСоглашения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПрикрепитьСоглашениеНаРоумингЗавершение(Результат, Контекст) Экспорт
	
	Если Результат.Статус Тогда
		ИмяФайлаСоглашенияНаРоуминг = Результат.ИмяФайла;
		ТребуетсяНовоеСоглашение = Ложь;
		Оповестить("ПрикрепленоПисьмоОВыбореОператора", ИмяФайлаСоглашенияНаРоуминг);
	ИначеЕсли ЗначениеЗаполнено(Результат.ОписаниеОшибки) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(Результат.ОписаниеОшибки);
	КонецЕсли;
	
	НастроитьОсновнуюСтраницуФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция УдалитьДанныеСоглашенияНаРоуминг(Знач ИдентификаторОрганизации)
	
	Возврат УчетныеЗаписиЭДО.УдалитьДанныеСоглашенияНаРоуминг(ИдентификаторОрганизации);
	
КонецФункции

&НаСервереБезКонтекста
Функция АдресДанныхСоглашенияНаРоуминг(Знач ИдентификаторОрганизации, Знач УникальныйИдентификатор)
	
	ДанныеСоглашения = ПриглашенияЭДОСлужебный.ДанныеСоглашенияНаРоуминг(ИдентификаторОрганизации);
	Если ДанныеСоглашения = Неопределено Тогда
		Возврат ДанныеСоглашения;
	Иначе
		Возврат ПоместитьВоВременноеХранилище(ДанныеСоглашения, УникальныйИдентификатор);
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ОтправитьПриглашение()
	
	Оповещение = Новый ОписаниеОповещения("ПослеОтветаНаВопросОСоглашенииНаРоуминг", ЭтотОбъект);
	Если ОткрылиПисьмоОВыбореОператора И Не ЗначениеЗаполнено(ИмяФайлаСоглашенияНаРоуминг)
		И ВариантПотребностиСоглашения = ПредопределенноеЗначение("Перечисление.ВариантыПотребностиСоглашенияНаРоуминг.НеОбязательно") Тогда
		ПриглашенияЭДОСлужебныйКлиент.ПоказатьВопросОПрикрепленииСоглашенияНаРоуминг(Оповещение);
	Иначе 
		ВыполнитьОбработкуОповещения(Оповещение, КодВозвратаДиалога.Да);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеОтветаНаВопросОСоглашенииНаРоуминг(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ОтправитьПриглашениеПослеОтветаНаВопросОСоглашенииНаРоуминг();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьПриглашениеПослеОтветаНаВопросОСоглашенииНаРоуминг()
	
	НачалоОтправкиПриглашения = ОбщегоНазначенияКлиент.ДатаСеанса();
	
	НастроитьСтраницуОжидания();
	
	ПараметрыОпределенияТипаПриглашения = НовыеПараметрыОпределенияТипаПриглашения();
	ПараметрыОпределенияТипаПриглашения.ТипИнформацииОКонтрагенте = ТипИнформацииОКонтрагенте;
	ПараметрыОпределенияТипаПриглашения.ОтправкаТолькоНаИдентификаторЭДО = ОтправкаТолькоНаИдентификаторЭДО;
	ПараметрыОпределенияТипаПриглашения.РоумингБезАвтоматическойНастройки = РоумингБезАвтоматическойНастройки;
	ПараметрыОпределенияТипаПриглашения.ОператорОрганизации = ОператорОрганизации;
	ПараметрыОпределенияТипаПриглашения.ОператорКонтрагента = ОператорКонтрагента;
	ПараметрыОпределенияТипаПриглашения.АбонентВХабе1С = АбонентВХабе1С;

	ТипПриглашения = ТипПриглашения(ПараметрыОпределенияТипаПриглашения);
	
	ТипыПриглашений = ПриглашенияЭДОСлужебныйКлиентСервер.ТипыПриглашений();
	Если ТипПриглашения = ТипыПриглашений.НаИдентификатор Тогда
		Приглашение = ПриглашенияЭДОКлиент.НовоеПриглашениеНаИдентификатор();
		Приглашение.ИдентификаторКонтрагента = ИдентификаторКонтрагента;
		// Форма открыта в сценарии, который предполагает создание настроек.
		Если Не ЗапрещеноСоздаватьНастройкиЭДО Тогда
			Приглашение.СоздаватьНастройкиЭДО = Истина;
		КонецЕсли;
	ИначеЕсли ТипПриглашения = ТипыПриглашений.Широковещательное Тогда
		Приглашение = ПриглашенияЭДОКлиент.НовоеШироковещательноеПриглашение();
		Приглашение.EmailКонтрагента = ЭлектроннаяПочта;
	ИначеЕсли ТипПриглашения = ТипыПриглашений.ЗаявкаНаРоуминг Тогда
		Приглашение = ПриглашенияЭДОКлиент.НоваяЗаявкаНаРоуминг();
		Приглашение.ОператорЭДО = ОператорКонтрагента;
		Приглашение.ТребуетсяСоглашение = ТребуетсяСоглашение;
	КонецЕсли;
	
	Приглашение.ИдентификаторОрганизации = ИдентификаторОрганизации;
	Приглашение.Организация = Организация;
	Приглашение.Контрагент = Контрагент;
	Приглашение.ТекстПриглашения = ТекстПриглашения;
	Если ТребуетсяЗаполнитьEmailОрганизации(ЭтаФорма) Тогда
		Приглашение.EmailОрганизации = EmailОрганизации;
	КонецЕсли;
		
	Абонент = АбонентПоПриглашению(ЭтотОбъект);
	
	Если Абонент = Неопределено Тогда
		Приглашение.ПолучательИНН = КонтрагентИНН;
		Приглашение.ПолучательКПП = КонтрагентКПП;
	Иначе
		Приглашение.ПолучательИНН = Абонент.ИНН;
		Приглашение.ПолучательКПП = Абонент.КПП;
	КонецЕсли;

	Если ЗначениеЗаполнено(КлючПриглашения) Тогда
		Приглашение.КлючПриглашения = КлючПриглашения;
	Иначе
		ПриглашенияЭДОСлужебныйКлиент.АктуализироватьКлючПриглашенияПоНатуральнымКлючам(Приглашение);
	КонецЕсли;
	
	Приглашения = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Приглашение);
	
	Оповещение = Новый ОписаниеОповещения("ОтправитьПриглашениеЗавершение", ЭтотОбъект);
	ПриглашенияЭДОСлужебныйКлиент.ОтправитьПриглашения(Приглашения, ЭтаФорма, Оповещение);
		
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьПриглашениеЗавершение(РезультатОтправки, Контекст) Экспорт
	
	Если Не РезультатОтправки.Успех Тогда
		НастроитьСтраницуОшибки(ЭтотОбъект);
		ОбработкаНеисправностейБЭДКлиент.ОбработатьОшибки(РезультатОтправки.КонтекстДиагностики);
		Возврат;
	КонецЕсли;
	
	ПриглашениеОтправлено = Истина;
	
	НастроитьСтраницуВыполнено();
	
	Оповестить("ОбновитьСостояниеПриглашений");
	
	ОповеститьОбИзмененииПриглашения();
	
КонецПроцедуры

&НаКлиенте
Процедура ОповеститьОбИзмененииПриглашения()

	Если ЗначениеЗаполнено(КлючПриглашения) Тогда
		ПолныйКлючПриглашения = ПриглашенияЭДОКлиентСервер.НовыйКлючПриглашения();
		ПолныйКлючПриглашения.Ключ = КлючПриглашения;
		ПолныйКлючПриглашения.ИдентификаторОрганизации = ИдентификаторОрганизации;
		
		КлючЗаписи = ПриглашенияЭДОСлужебныйКлиент.КлючЗаписиПриглашения(ПолныйКлючПриглашения);
		ОбщегоНазначенияКлиент.ОповеститьОбИзмененииОбъекта(КлючЗаписи);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция РезультатОтправкиПриглашения()
	
	Результат = Новый Структура;
	Результат.Вставить("Организация", Организация);
	Результат.Вставить("Контрагент", Контрагент);
	Результат.Вставить("ИдентификаторОрганизации", ИдентификаторОрганизации);
	Результат.Вставить("ИдентификаторКонтрагента");
	Результат.Вставить("ЭлектроннаяПочта");
	Результат.Вставить("ОператорКонтрагента");
	Результат.Вставить("ОткрылиПисьмоОВыбореОператора", ОткрылиПисьмоОВыбореОператора);
	
	ТипыИнформацииОКонтрагенте = ТипыИнформацииОКонтрагенте();
	Если ТипИнформацииОКонтрагенте = ТипыИнформацииОКонтрагенте.ИдентификаторЭДО
		ИЛИ ОтправкаТолькоНаИдентификаторЭДО Тогда
		
		Результат.Вставить("ИдентификаторКонтрагента", ИдентификаторКонтрагента);
		
	ИначеЕсли ТипИнформацииОКонтрагенте = ТипыИнформацииОКонтрагенте.ЭлектроннаяПочта
		ИЛИ ОтправкаНаТогоЖеОператора(ТипИнформацииОКонтрагенте, ОператорОрганизации, ОператорКонтрагента) Тогда
		
		Результат.Вставить("ЭлектроннаяПочта", ЭлектроннаяПочта);
		
	ИначеЕсли ТипИнформацииОКонтрагенте = ТипыИнформацииОКонтрагенте.ОператорЭДО Тогда
		
		Результат.Вставить("ОператорКонтрагента", ОператорКонтрагента);
		
	КонецЕсли;
	
	Результат.Вставить("ТекстПриглашения", ТекстПриглашения);
	
	Возврат Результат;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция Идентификатор_Создать()
	Возврат "Создать";
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ТребуетсяЗаполнитьEmailОрганизации(Форма) 
		
	Результат = Ложь;
	
	Если Форма.ТребуетсяСоглашениеПриПервомПодключении И Форма.ЗаявкаНаРоумингПринята
		И Не Форма.ОбязательнаяОтправкаЗаявкиНаРоуминг Тогда
		
		Результат = Ложь;
	Иначе
		Результат = Форма.РоумингБезАвтоматическойНастройки И Не Форма.РежимНастройки;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Формирует набор значений типов информации о контрагенте.
// 
// Возвращаемое значение:
// 	ФиксированнаяСтруктура - Описание:
// * ЭлектроннаяПочта - Строка -
// * ИдентификаторЭДО - Строка -
// * ОператорЭДО - Строка -
&НаКлиентеНаСервереБезКонтекста
Функция ТипыИнформацииОКонтрагенте()
	
	ИсходнаяСтруктура = Новый Структура;
	ИсходнаяСтруктура.Вставить("ОператорЭДО", "ОператорЭДО");
	ИсходнаяСтруктура.Вставить("ИдентификаторЭДО", "ИдентификаторЭДО");
	ИсходнаяСтруктура.Вставить("ЭлектроннаяПочта", "ЭлектроннаяПочта");

	Возврат Новый ФиксированнаяСтруктура(ИсходнаяСтруктура);
	
КонецФункции

#Область ТипыПредупреждений

&НаКлиентеНаСервереБезКонтекста
Функция ТипПредупреждения_ВыбраныАвтоматически()
	Возврат "ВыбраныАвтоматически";
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ТипПредупреждения_ОбменНеПоддерживается()
	Возврат "ОбменНеПоддерживается";
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ТипПредупреждения_НеактивнаяЗапись()
	Возврат "НеактивнаяЗапись";
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ТипПредупреждения_ОтсутствуютСертификаты()
	Возврат "ОтсутствуютСертификаты";
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ТипПредупреждения_ТребуетсяИдентификаторЭДО()
	Возврат "ТребуетсяИдентификаторЭДО";
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ТипПредупреждения_ПовторноеПриглашение()
	Возврат "ПовторноеПриглашение";
КонецФункции

#КонецОбласти

#Область Абоненты

&НаКлиентеНаСервереБезКонтекста
Функция АбонентПоПриглашению(Форма)
	
	Если Форма.Абоненты <> Неопределено Тогда
		Для каждого Элемент Из Форма.Абоненты Цикл
			
			Абонент = Элемент.Значение;
			
			Если Абонент.Идентификатор = Форма.ИдентификаторКонтрагента Тогда
				Возврат Абонент;
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста 
Процедура ПроверитьСоответствиеАбонентаИКонтрагента(Форма)
	
	ПоказатьПредупреждение = Ложь;
	
	Абонент = АбонентПоПриглашению(Форма);
	
	Если Абонент <> Неопределено Тогда
		Если Форма.КонтрагентИНН = Абонент.ИНН И Форма.КонтрагентКПП <> Абонент.КПП Тогда
			ПоказатьПредупреждение = Истина;
		КонецЕсли;
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы, "ГруппаПредупреждениеПроКПП", "Видимость", ПоказатьПредупреждение);
	
КонецПроцедуры

#КонецОбласти

#Область КонтекстныеПодсказки

&НаСервере
Процедура СформироватьКонтекст(КатегорииПересчета = Неопределено) 
	
	Если Не КонтекстныеПодсказкиБЭД.ФункционалКонтекстныхПодсказокДоступен() Тогда 
		Возврат;
	КонецЕсли;   
	
	Категория = КонтекстныеПодсказкиБЭДКатегоризацияВызовСервера.Категория_ОператорАбонента();
	Если ЗначениеЗаполнено(Категория)  
			И ?(ЗначениеЗаполнено(КатегорииПересчета), КатегорииПересчета.Найти(Категория) <> Неопределено, Истина) Тогда 
		Значение = КонтекстныеПодсказкиБЭДКатегоризация.ОператорАбонента(ИдентификаторКонтрагента); 
		КонтекстныеПодсказкиБЭДКлиентСервер.УстановитьЗначениеКатегорииКонтекстаФормы(ЭтаФорма, Категория, Значение);
	КонецЕсли;
	
	Категория = КонтекстныеПодсказкиБЭДКатегоризацияВызовСервера.Категория_КодОператораУчетнойЗаписиОрганизации();
	Если ЗначениеЗаполнено(Категория)  
			И ?(ЗначениеЗаполнено(КатегорииПересчета), КатегорииПересчета.Найти(Категория) <> Неопределено, Истина) Тогда 
		Значение = КонтекстныеПодсказкиБЭДКатегоризация.КодОператораУчетнойЗаписиОрганизации(Организация); 
		КонтекстныеПодсказкиБЭДКлиентСервер.УстановитьЗначениеКатегорииКонтекстаФормы(ЭтаФорма, Категория, Значение);
	КонецЕсли;
	
	КонтекстныеПодсказкиБЭД.ОтобразитьАктуальныеДляКонтекстаНовости(ЭтотОбъект);
	
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ПанельКонтекстныхНовостей_ЭлементУправленияНажатие(Элемент)
	
	КонтекстныеПодсказкиБЭДКлиент.ЭлементУправленияНажатие(ЭтотОбъект, Элемент);
	
КонецПроцедуры

// Процедура показывает новости, требующие прочтения (важные и очень важные).
//
// Параметры:
//  Нет.
//
//@skip-warning
&НаКлиенте
Процедура Подключаемый_ПоказатьНовостиТребующиеПрочтенияПриОткрытии()

	ИдентификаторыСобытийПриОткрытии = "ПриОткрытии";	
	КонтекстныеПодсказкиБЭДКлиент.КонтекстныеНовости_ПоказатьНовостиТребующиеПрочтенияПриОткрытии(ЭтотОбъект, ИдентификаторыСобытийПриОткрытии);

КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ПанельКонтекстныхНовостейОбработкаНавигационнойСсылки(Элемент, ПараметрНавигационнаяСсылка, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;

	КонтекстныеПодсказкиБЭДКлиент.ПанельКонтекстныхНовостей_ЭлементПанелиНовостейОбработкаНавигационнойСсылки(
		ЭтотОбъект,
		Элемент,
		ПараметрНавигационнаяСсылка,
		СтандартнаяОбработка);

КонецПроцедуры
	
#КонецОбласти

#КонецОбласти