////////////////////////////////////////////////////////////////////////////////
// Модуль менеджера РегистрСведений.СостоянияОбменовЭДЧерезОператоровЭДО
//  
////////////////////////////////////////////////////////////////////////////////

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ОбновлениеВерсииИБ

// Регистрирует данные для обработчика обновления
// 
// Параметры:
//  Параметры - Структура - параметры.
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ПолноеИмяРегистра = "РегистрСведений.СостоянияОбменовЭДЧерезОператоровЭДО";
	ДополнительныеПараметры.ЭтоНезависимыйРегистрСведений = Истина;
	
	ПараметрыВыборки = Параметры.ПараметрыВыборки;
	ПараметрыВыборки.СпособВыборки = ОбновлениеИнформационнойБазы.СпособВыборкиИзмеренияНезависимогоРегистраСведений();
	ПараметрыВыборки.ПолныеИменаРегистров = Метаданные.РегистрыСведений.СостоянияОбменовЭДЧерезОператоровЭДО.ПолноеИмя();
	
	ОтработаныВсеДанные = Ложь;
	
	ПрофильНастроекЭДО = Неопределено;
	
	Пока Не ОтработаныВсеДанные Цикл
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СостоянияОбменов.УдалитьПрофильНастроекЭДО КАК УдалитьПрофильНастроекЭДО,
		|	СостоянияОбменов.УдалитьСоглашениеОбИспользованииЭД КАК УдалитьСоглашениеОбИспользованииЭД
		|ИЗ
		|	РегистрСведений.СостоянияОбменовЭДЧерезОператоровЭДО КАК СостоянияОбменов
		|ГДЕ
		|	СостоянияОбменов.УдалитьПрофильНастроекЭДО > &ПрофильНастроекЭДО
		// Переход на новую архитектуру настроек ЭДО.
		|	И (СостоянияОбменов.ИдентификаторОрганизации = """"
		|	И СостоянияОбменов.УдалитьПрофильНастроекЭДО <> ЗНАЧЕНИЕ(Справочник.УдалитьПрофилиНастроекЭДО.ПустаяСсылка)) 
		// Изменение типа дат запроса данных.
		|	ИЛИ СостоянияОбменов.ДатаПолученияЭД = 0
		|	ИЛИ СостоянияОбменов.ДатаПоследнегоПолученияПриглашений = 0
		|	ИЛИ СостоянияОбменов.ПроверочнаяДатаПолученияЭД = 0
		|	ИЛИ СостоянияОбменов.ПроверочнаяДатаПолученияПриглашений = 0";
		
		Запрос.УстановитьПараметр("ПрофильНастроекЭДО", ПрофильНастроекЭДО);
		
		Данные = Запрос.Выполнить().Выгрузить();
		
		ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
		ДополнительныеПараметры.ЭтоНезависимыйРегистрСведений = Истина;
		ДополнительныеПараметры.ПолноеИмяРегистра = Метаданные.РегистрыСведений.СостоянияОбменовЭДЧерезОператоровЭДО.ПолноеИмя();
		
		ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Данные, ДополнительныеПараметры);
		
		КоличествоСтрокТаблицы = Данные.Количество();
		Если КоличествоСтрокТаблицы < 1000 Тогда
			ОтработаныВсеДанные = Истина;
		КонецЕсли;
		
		Если КоличествоСтрокТаблицы > 0 Тогда
			ПрофильНастроекЭДО = Данные[КоличествоСтрокТаблицы - 1].УдалитьПрофильНастроекЭДО;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Обработчик обновления.
// 
// Параметры:
//  Параметры - Структура - параметры.
//
Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	МетаданныеОбъекта = Метаданные.РегистрыСведений.СостоянияОбменовЭДЧерезОператоровЭДО;
	ПолноеИмяОбъекта = МетаданныеОбъекта.ПолноеИмя();
	
	ПараметрыОтметкиВыполнения = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	
	ОбработанныхОбъектов = 0;
	ПроблемныхОбъектов = 0;
	
	ПараметрыВыборки = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыВыборкиДанныхДляОбработки();
	ПараметрыВыборки.ДополнительныеИсточникиДанных.Вставить("УдалитьПрофильНастроекЭДО");
	ТаблицаДанных = ОбновлениеИнформационнойБазы.ДанныеДляОбновленияВМногопоточномОбработчике(Параметры);
	
	ИдентификаторыПрофилей = ИдентификаторыПрофилейНастроекЭДО();
	
	Для каждого СтрокаТаблицы Из ТаблицаДанных Цикл
		
		НачатьТранзакцию();
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъекта);
			ЭлементБлокировки.УстановитьЗначение("УдалитьПрофильНастроекЭДО", СтрокаТаблицы.УдалитьПрофильНастроекЭДО);
			ЭлементБлокировки.УстановитьЗначение("УдалитьСоглашениеОбИспользованииЭД", СтрокаТаблицы.УдалитьСоглашениеОбИспользованииЭД);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			Блокировка.Заблокировать();
			
			Набор = РегистрыСведений.СостоянияОбменовЭДЧерезОператоровЭДО.СоздатьНаборЗаписей();
			Набор.Отбор.УдалитьПрофильНастроекЭДО.Установить(СтрокаТаблицы.УдалитьПрофильНастроекЭДО);
			Набор.Отбор.УдалитьСоглашениеОбИспользованииЭД.Установить(СтрокаТаблицы.УдалитьСоглашениеОбИспользованииЭД);
			Набор.Прочитать();
			
			Записать = Ложь;
			
			ОбработатьДанные_НоваяАрхитектураНастроекЭДО(Набор, ИдентификаторыПрофилей, Записать);
			ОбработатьДанные_ЗаменитьТипДатЗапросаДанных(Набор, ИдентификаторыПрофилей, Записать);
			
			Если Записать Тогда
				ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(Набор);
			Иначе
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Набор, ПараметрыОтметкиВыполнения);
			КонецЕсли;
			
			ОбработанныхОбъектов = ОбработанныхОбъектов + 1;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			ПроблемныхОбъектов = ПроблемныхОбъектов + 1;
			ТекстСообщения = НСтр("ru = 'Не удалось обработать состояния обменов электронных документов по причине:'") + Символы.ПС 
				+ ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Предупреждение,
				МетаданныеОбъекта,, ТекстСообщения);
			
		КонецПопытки;
		
	КонецЦикла;
	
	Если ОбработанныхОбъектов = 0 И ПроблемныхОбъектов <> 0 Тогда
		ШаблонСообщения = НСтр("ru = 'Не удалось обработать некоторые состояния обменов электронных документов (пропущены): %1'");
		ТекстСообщения = СтрШаблон(ШаблонСообщения, ПроблемныхОбъектов);
		ВызватьИсключение ТекстСообщения;
	Иначе
		ШаблонСообщения = НСтр("ru = 'Обработана очередная порция состояний обменов электронных документов: %1'");
		ТекстСообщения = СтрШаблон(ШаблонСообщения, ОбработанныхОбъектов);
		ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Информация,
			МетаданныеОбъекта,, ТекстСообщения);
	КонецЕсли;
	
	Параметры.ПрогрессВыполнения.ОбработаноОбъектов =
		Параметры.ПрогрессВыполнения.ОбработаноОбъектов + ОбработанныхОбъектов;
	
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(
		Параметры.Очередь, ПолноеИмяОбъекта);

	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ОбновлениеВерсииИБ

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Обновление

Процедура ОбработатьДанные_НоваяАрхитектураНастроекЭДО(Набор, ИдентификаторыПрофилей, Записать)
	
	Для каждого Запись Из Набор Цикл
		
		Если Не ЗначениеЗаполнено(Запись.ИдентификаторОрганизации)
			И ЗначениеЗаполнено(Запись.УдалитьПрофильНастроекЭДО) Тогда
			
			СтрокаИдентификатора = ИдентификаторыПрофилей.Найти(Запись.УдалитьПрофильНастроекЭДО, "ПрофильНастроекЭДО");
			Если СтрокаИдентификатора = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			Если Запись.ИдентификаторОрганизации <> СтрокаИдентификатора.ИдентификаторОрганизации Тогда
				Записать = Истина;
				Запись.ИдентификаторОрганизации = СтрокаИдентификатора.ИдентификаторОрганизации;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработатьДанные_ЗаменитьТипДатЗапросаДанных(Набор, ИдентификаторыПрофилей, Записать)
	
	Для Каждого Запись Из Набор Цикл
		Если Не ЗначениеЗаполнено(Запись.ДатаПолученияЭД) И ЗначениеЗаполнено(Запись.УдалитьДатаПолученияЭД) Тогда
			Записать = Истина;
			Запись.ДатаПолученияЭД = ОбщегоНазначенияБЭД.УниверсальнаяДатаВМиллисекундахИзДаты(
				Запись.УдалитьДатаПолученияЭД);
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Запись.ДатаПоследнегоПолученияПриглашений) И ЗначениеЗаполнено(
			Запись.УдалитьДатаПоследнегоПолученияПриглашений) Тогда
			Записать = Истина;
			Запись.ДатаПоследнегоПолученияПриглашений = ОбщегоНазначенияБЭД.УниверсальнаяДатаВМиллисекундахИзДаты(
				Запись.УдалитьДатаПоследнегоПолученияПриглашений);
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Запись.ПроверочнаяДатаПолученияЭД) И ЗначениеЗаполнено(
			Запись.УдалитьПроверочнаяДатаПолученияЭД) Тогда
			Записать = Истина;
			Запись.ПроверочнаяДатаПолученияЭД = ОбщегоНазначенияБЭД.УниверсальнаяДатаВМиллисекундахИзДаты(
				Запись.УдалитьПроверочнаяДатаПолученияЭД);
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Запись.ПроверочнаяДатаПолученияПриглашений) И ЗначениеЗаполнено(
			Запись.УдалитьПроверочнаяДатаПолученияПриглашений) Тогда
			Записать = Истина;
			Запись.ПроверочнаяДатаПолученияПриглашений = ОбщегоНазначенияБЭД.УниверсальнаяДатаВМиллисекундахИзДаты(
				Запись.УдалитьПроверочнаяДатаПолученияПриглашений);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Функция ИдентификаторыПрофилейНастроекЭДО()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УдалитьПрофилиНастроекЭДО.Ссылка КАК ПрофильНастроекЭДО,
	|	УдалитьПрофилиНастроекЭДО.ИдентификаторОрганизации КАК ИдентификаторОрганизации
	|ИЗ
	|	Справочник.УдалитьПрофилиНастроекЭДО КАК УдалитьПрофилиНастроекЭДО";
	
	Идентификаторы = Запрос.Выполнить().Выгрузить();
	Идентификаторы.Индексы.Добавить("ПрофильНастроекЭДО");
	
	Возврат Идентификаторы;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли