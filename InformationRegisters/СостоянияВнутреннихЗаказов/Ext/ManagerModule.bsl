#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС
#Область ПрограммныйИнтерфейс

// Процедура по переданной ссылке на заказ рассчитывает и записывает в регистр сведений состояние заказа
//
// Параметры:
//  Заказы - ДокументСсылка, Массив(ДокументСсылка)- заказ, для которого рассчитывается состояние
//
Процедура ОтразитьСостояниеЗаказа(Заказы) Экспорт
	
	Если ОбщегоНазначения.ЗначениеСсылочногоТипа(Заказы) Тогда
		МассивСсылок = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Заказы);
	Иначе
		МассивСсылок = Заказы;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(МассивСсылок) Тогда
		Возврат;
	КонецЕсли;
	
	ЗаказыПоТипам = ОбщегоНазначенияБольничнаяАптека.РазложитьМассивСсылокПоТипам(МассивСсылок);
	
	Для Каждого Элемент Из ЗаказыПоТипам Цикл
		
		ТипЗаказа = Элемент.Ключ;
		СписокЗаказов = Элемент.Значение;
		
		ТаблицаСостоянийЗаказов = ТаблицаСостоянийЗаказов(ТипЗаказа, СписокЗаказов);
		
		Для Каждого СтрокаТаблицы Из ТаблицаСостоянийЗаказов Цикл
			Набор = РегистрыСведений.СостоянияВнутреннихЗаказов.СоздатьНаборЗаписей();
			Набор.Отбор.Заказ.Установить(СтрокаТаблицы.Заказ);
			
			Если ЗначениеЗаполнено(СтрокаТаблицы.Состояние) Тогда
				СтрокаНабора = Набор.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаНабора, СтрокаТаблицы);
			КонецЕсли;
			
			Попытка
				Набор.Записать(Истина);
			Исключение
				ТекстСообщения = НСтр("ru = 'Не удалось отразить состояние заказа: %Ссылка% по причине: %Причина%'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", СтрокаТаблицы.Заказ);
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
				
				ЗаписьЖурналаРегистрации(
					ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
					УровеньЖурналаРегистрации.Предупреждение,
					СтрокаТаблицы.Заказ.Метаданные(),
					СтрокаТаблицы.Заказ,
					ТекстСообщения);
			КонецПопытки;
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

// Заполняет информацию на форме документа о состоянии заказа.
//
// Параметры:
//  Заказ - ДокументСсылка - заказ, для которого заполняется текущее состояние.
//  СостояниеЗаказа - ФормаКлиентскогоПриложения - форма, на которой выводится состояние заказа.
//
Процедура ЗаполнитьТекущееСостояние(Заказ, СостояниеЗаказа) Экспорт
	
	ЗаполнитьЗначенияСвойств(СостояниеЗаказа, ПустоеСостояниеЗаказа());
	
	Если ЗначениеЗаполнено(Заказ) Тогда
		
		Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА (НЕ ВнутреннийЗаказ.Проведен)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияВнутреннихЗаказов.ПустаяСсылка)
		|		ИНАЧЕ
		|			ЕСТЬNULL(СостоянияВнутреннихЗаказов.Состояние, ЗНАЧЕНИЕ(Перечисление.СостоянияВнутреннихЗаказов.Закрыт))
		|	КОНЕЦ КАК Состояние,
		|	ВЫБОР
		|		КОГДА (НЕ ВнутреннийЗаказ.Проведен)
		|			ТОГДА ЛОЖЬ
		|		КОГДА (ВнутреннийЗаказ.Статус = ЗНАЧЕНИЕ(Перечисление.СостоянияВнутреннихЗаказов.Закрыт) И &ИспользоватьСтатусы)
		|			ТОГДА ЛОЖЬ
		|		КОГДА СостоянияВнутреннихЗаказов.ДатаСобытия <> ДАТАВРЕМЯ(1, 1, 1)
		|				И &ТекущаяДата > СостоянияВнутреннихЗаказов.ДатаСобытия
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК СостояниеПросрочено
		|ИЗ
		|	#ВнутреннийЗаказ КАК ВнутреннийЗаказ
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		РегистрСведений.СостоянияВнутреннихЗаказов КАК СостоянияВнутреннихЗаказов
		|		ПО
		|			СостоянияВнутреннихЗаказов.Заказ = ВнутреннийЗаказ.Ссылка
		|ГДЕ
		|	ВнутреннийЗаказ.Ссылка = &Заказ
		|");
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "#ВнутреннийЗаказ", Заказ.Метаданные().ПолноеИмя());
		
		Запрос.УстановитьПараметр("Заказ"              , Заказ);
		Запрос.УстановитьПараметр("ТекущаяДата"        , НачалоДня(ТекущаяДатаСеанса()));
		Запрос.УстановитьПараметр("ИспользоватьСтатусы", ОбщегоНазначенияБольничнаяАптека.ИспользоватьСтатусы(Заказ));
		
		Выборка = Запрос.Выполнить().Выбрать();
		Выборка.Следующий();
		
		ЗаполнитьЗначенияСвойств(СостояниеЗаказа, Выборка);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти // ПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

Функция ТаблицаСостоянийЗаказов(ПолноеИмяОбъекта, Заказы)
	
	МенеджерЗаказа = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(ПолноеИмяОбъекта);
	ПараметрыРасчета = МенеджерЗаказа.ПараметрыРасчетаСостоянияЗаказов();
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ЗаказНаПеремещение КАК Заказ,
	|	ЗаказаноКонечныйОстаток КАК Заказано,
	|	КОформлениюКонечныйОстаток КАК КОформлению,
	|	КОформлениюРасход КАК Поступило
	|ПОМЕСТИТЬ ЗаказыНаПеремещениеОстатки
	|ИЗ
	|	РегистрНакопления.ЗаказыНаПеремещение.ОстаткиИОбороты(,,,, ЗаказНаПеремещение В (&Заказы)) КАК ЗаказыНаПеремещениеОстатки
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ 
	|ВЫБОР
	|// НЕ ПРОВЕДЕН /////////////////////////////////////////////////////////////
	|	КОГДА
	|		НЕ ДокументЗаказ.Проведен
	|	ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияВнутреннихЗаказов.ПустаяСсылка)
	|// ОЖИДАЕТСЯ СОГЛАСОВАНИЕ //////////////////////////////////////////////////
	|	КОГДА
	|		ДокументЗаказ.Статус В(&СтатусНеСогласован)
	|	ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияВнутреннихЗаказов.ОжидаетсяСогласование)
	|// ГОТОВ К ОТГРУЗКЕ //////////////////////////////////////////////////////
	|	КОГДА
	|		ДокументЗаказ.Статус В (&СтатусСогласован)
	|		И ЕСТЬNULL(ЗаказыНаПеремещениеОстатки.Заказано, 0) <> 0
	|	ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияВнутреннихЗаказов.ГотовКОтгрузке)
	|// В ПРОЦЕССЕ ОТГРУЗКИ //////////////////////////////////////////////////////
	|	КОГДА
	|		(НЕ &ИспользоватьСтатусыЗаказов ИЛИ ДокументЗаказ.Статус В (&СтатусКВыполнению))
	|		И ЕСТЬNULL(ЗаказыНаПеремещениеОстатки.КОформлению, 0) <> 0
	|		И ЕСТЬNULL(ЗаказыНаПеремещениеОстатки.Поступило, 0) = 0
	|	ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияВнутреннихЗаказов.ВПроцессеОтгрузки)
	|// В ПРОЦЕССЕ ПОСТУПЛЕНИЯ //////////////////////////////////////////////////////
	|	КОГДА
	|		(НЕ &ИспользоватьСтатусыЗаказов ИЛИ ДокументЗаказ.Статус В (&СтатусКВыполнению))
	|		И ЕСТЬNULL(ЗаказыНаПеремещениеОстатки.КОформлению, 0) <> 0
	|		И ЕСТЬNULL(ЗаказыНаПеремещениеОстатки.Поступило, 0) <> 0
	|	ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияВнутреннихЗаказов.ВПроцессеПоступления)
	|// ГОТОВ К ЗАКРЫТИЮ ////////////////////////////////////////////////////////
	|	КОГДА
	|		ДокументЗаказ.Статус <> &СтатусЗакрыт
	|	ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияВнутреннихЗаказов.ГотовКЗакрытию)
	|// ЗАКРЫТ //////////////////////////////////////////////////////////////////
	|	КОГДА
	|		НЕ &ИспользоватьСтатусыЗаказов ИЛИ ДокументЗаказ.Статус = &СтатусЗакрыт
	|	ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияВнутреннихЗаказов.Закрыт)
	|КОНЕЦ КАК Состояние,
	|ВЫБОР
	|// НЕ ПРОВЕДЕН /////////////////////////////////////////////////////////////
	|	КОГДА
	|		НЕ ДокументЗаказ.Проведен
	|	ТОГДА
	|		ДАТАВРЕМЯ(1,1,1)
	|// ДАТА СОГЛАСОВАНИЯ ///////////////////////////////////////////////////////
	|	КОГДА
	|		ДокументЗаказ.Статус В(&СтатусНеСогласован)
	|	ТОГДА
	|		ДокументЗаказ.ДатаСогласования
	|// ДАТА ПЕРВОГО ПОСТУПЛЕНИЯ ////////////////////////////////////////////////
	|	КОГДА
	|		(НЕ &ИспользоватьСтатусыЗаказов
	|			ИЛИ ДокументЗаказ.Статус В (&СтатусКВыполнению))
	|		И (ЕСТЬNULL(ЗаказыНаПеремещениеОстатки.Заказано, 0) <> 0 ИЛИ ЕСТЬNULL(ЗаказыНаПеремещениеОстатки.КОформлению, 0) <> 0)
	|		И ЕСТЬNULL(ЗаказыНаПеремещениеОстатки.Поступило, 0) = 0
	|	ТОГДА
	|		ДокументЗаказ.ДатаПервогоПоступления
	|КОНЕЦ КАК ДатаСобытия,
	|	ДокументЗаказ.Ссылка КАК Заказ
	|ИЗ
	|	#ДокументЗаказ КАК ДокументЗаказ
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ЗаказыНаПеремещениеОстатки КАК ЗаказыНаПеремещениеОстатки
	|		ПО
	|			ДокументЗаказ.Ссылка = ЗаказыНаПеремещениеОстатки.Заказ
	|ГДЕ
	|	ДокументЗаказ.Ссылка В (&Заказы)
	|";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#ДокументЗаказ", ПолноеИмяОбъекта);
	Если ПараметрыРасчета.Свойство("РеквизитДатаПервогоПоступления") Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ДокументЗаказ.ДатаПервогоПоступления", "ДокументЗаказ." + ПараметрыРасчета.РеквизитДатаПервогоПоступления);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Заказы", Заказы);
	Запрос.УстановитьПараметр("ИспользоватьСтатусыЗаказов", ОбщегоНазначенияБольничнаяАптека.ИспользоватьСтатусы(МенеджерЗаказа.ПустаяСсылка()));
	Запрос.УстановитьПараметр("СтатусНеСогласован", ПараметрыРасчета.СтатусНеСогласован);
	Запрос.УстановитьПараметр("СтатусСогласован"  , ПараметрыРасчета.СтатусСогласован);
	Запрос.УстановитьПараметр("СтатусКВыполнению" , ПараметрыРасчета.СтатусКВыполнению);
	Запрос.УстановитьПараметр("СтатусЗакрыт"      , ПараметрыРасчета.СтатусЗакрыт);
	
	ТаблицаСостояний = Запрос.Выполнить().Выгрузить();
	
	Возврат ТаблицаСостояний;
	
КонецФункции

Функция ПустоеСостояниеЗаказа()
	
	СостояниеЗаказа = Новый Структура;
	СостояниеЗаказа.Вставить("Состояние"          , Перечисления.СостоянияВнутреннихЗаказов.ПустаяСсылка());
	СостояниеЗаказа.Вставить("СостояниеПросрочено", Ложь);
	
	Возврат СостояниеЗаказа;
	
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции

#КонецЕсли