
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

Процедура ДобавитьЗапись(ТекущийПользователь, ПараметрыЗаписи) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ИдентификаторПользователяСервиса = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
		ТекущийПользователь,
		"ИдентификаторПользователяСервиса");
	
	Если Не ЗначениеЗаполнено(ИдентификаторПользователяСервиса) Тогда
		Возврат;
	КонецЕсли;
	
	Блокировка = Новый БлокировкаДанных();
	ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.СведенияОПользователяхСервиса");
	ЭлементБлокировки.УстановитьЗначение("ИдентификаторПользователяСервиса", ИдентификаторПользователяСервиса);
	
	НачатьТранзакцию();
	
	Попытка
		
		Блокировка.Заблокировать();
		
		Записывать = Ложь;
		
		ЗаписьРегистра = СоздатьМенеджерЗаписи();
		ЗаписьРегистра.ИдентификаторПользователяСервиса = ИдентификаторПользователяСервиса;
		ЗаписьРегистра.Прочитать();
		
		Если Не ЗаписьРегистра.Выбран() Тогда
			ЗаписьРегистра.ИдентификаторПользователяСервиса = ИдентификаторПользователяСервиса;
			Записывать = Истина;
		Иначе
			
			Для Каждого ЭлементПараметр Из ПараметрыЗаписи Цикл
				
				Если ЗаписьРегистра[ЭлементПараметр.Ключ] <> ЭлементПараметр.Значение Тогда
					Записывать = Истина;
					Прервать;
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
		Если Записывать Тогда
			
			ЗаполнитьЗначенияСвойств(ЗаписьРегистра, ПараметрыЗаписи);
			ЗаписьРегистра.ОповеститьОбИзменении = Истина;
			ЗаписьРегистра.Записать();
			
		КонецЕсли;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		ВызватьИсключение;
		
	КонецПопытки;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
