#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС
#Область ПрограммныйИнтерфейс

// Процедура по переданной ссылке на заказ рассчитывает и записывает в регистр сведений состояние заказа
//
// Параметры:
//  Заказы - ДокументСсылка.ЗаказПоставщику, Массив(ДокументСсылка.ЗаказПоставщику)- заказ поставщику, для которого перерассчитывается состояние
//
Процедура ОтразитьСостояниеЗаказа(Заказы) Экспорт
	
	Если ОбщегоНазначения.ЗначениеСсылочногоТипа(Заказы) Тогда
		МассивСсылок = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Заказы);
	Иначе
		МассивСсылок = Заказы;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(МассивСсылок) Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаСостоянийЗаказов = ТаблицаСостоянийЗаказов(МассивСсылок);
	
	Для Каждого СтрокаТаблицы Из ТаблицаСостоянийЗаказов Цикл
		Набор = РегистрыСведений.СостоянияЗаказовПоставщикам.СоздатьНаборЗаписей();
		Набор.Отбор.Заказ.Установить(СтрокаТаблицы.Заказ);
		
		Если ЗначениеЗаполнено(СтрокаТаблицы.Состояние) Тогда
			СтрокаНабора = Набор.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаНабора, СтрокаТаблицы);
		КонецЕсли;
		
		Попытка
			Набор.Записать(Истина);
		Исключение
			ТекстСообщения = НСтр("ru = 'Не удалось отразить состояние заказа поставщику: %Ссылка% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", СтрокаТаблицы.Заказ);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Предупреждение,
				Метаданные.Документы.ЗаказПоставщику, СтрокаТаблицы.Заказ, ТекстСообщения);
		КонецПопытки;
	КонецЦикла;
	
КонецПроцедуры

// Заполняет информацию на форме документа о состоянии заказа.
//
// Параметры:
//  ЗаказПоставщику - ДокументСсылка.ЗаказПоставщику - заказ, для которого заполняется текущее состояние.
//  СостояниеЗаказа - Структура - ФормаКлиентскогоПриложения - форма, на которой выводится состояние заказа.
//
Процедура ЗаполнитьТекущееСостояние(ЗаказПоставщику, СостояниеЗаказа) Экспорт
	
	ЗаполнитьЗначенияСвойств(СостояниеЗаказа, ПустоеСостояниеЗаказа());
	
	Если ЗначениеЗаполнено(ЗаказПоставщику) Тогда
		
		Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА (НЕ ДокументЗаказПоставщику.Проведен)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияЗаказовПоставщикам.ПустаяСсылка)
		|		ИНАЧЕ
		|			ЕСТЬNULL(СостоянияЗаказовПоставщикам.Состояние, ЗНАЧЕНИЕ(Перечисление.СостоянияЗаказовПоставщикам.Закрыт))
		|	КОНЕЦ КАК Состояние,
		|	ВЫБОР
		|		КОГДА (НЕ ДокументЗаказПоставщику.Проведен)
		|			ТОГДА ЛОЖЬ
		|		КОГДА (ДокументЗаказПоставщику.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовПоставщикам.Закрыт) И &ИспользоватьСтатусы)
		|			ТОГДА ЛОЖЬ
		|		КОГДА СостоянияЗаказовПоставщикам.ДатаСобытия <> ДАТАВРЕМЯ(1, 1, 1)
		|				И &ТекущаяДата > СостоянияЗаказовПоставщикам.ДатаСобытия 
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК СостояниеПросрочено
		|ИЗ
		|	Документ.ЗаказПоставщику КАК ДокументЗаказПоставщику
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		РегистрСведений.СостоянияЗаказовПоставщикам КАК СостоянияЗаказовПоставщикам
		|		ПО
		|			СостоянияЗаказовПоставщикам.Заказ = ДокументЗаказПоставщику.Ссылка
		|ГДЕ
		|	ДокументЗаказПоставщику.Ссылка = &ЗаказПоставщику
		|");
		
		Запрос.УстановитьПараметр("ЗаказПоставщику"    , ЗаказПоставщику);
		Запрос.УстановитьПараметр("ТекущаяДата"        , НачалоДня(ТекущаяДатаСеанса()));
		Запрос.УстановитьПараметр("ИспользоватьСтатусы", ОбщегоНазначенияБольничнаяАптека.ИспользоватьСтатусы(ЗаказПоставщику));
		
		Выборка = Запрос.Выполнить().Выбрать();
		Выборка.Следующий();
		
		ЗаполнитьЗначенияСвойств(СостояниеЗаказа, Выборка);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти // ПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

Функция ТаблицаСостоянийЗаказов(Заказы)
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ЗаказПоставщику КАК ЗаказПоставщику,
	|	ЗаказаноКонечныйОстаток КАК Заказано,
	|	КОформлениюКонечныйОстаток КАК КОформлению,
	|	КОформлениюРасход КАК Поступило
	|ПОМЕСТИТЬ ЗаказыПоставщикамОстатки
	|ИЗ
	|	РегистрНакопления.ЗаказыПоставщикам.ОстаткиИОбороты(,,,, ЗаказПоставщику В (&Заказы)) КАК ЗаказыПоставщикамОстатки
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ 
	|ВЫБОР
	|// НЕ ПРОВЕДЕН /////////////////////////////////////////////////////////////
	|	КОГДА
	|		НЕ ДокументЗаказПоставщику.Проведен
	|	ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияЗаказовПоставщикам.ПустаяСсылка)
	|// ОЖИДАЕТСЯ СОГЛАСОВАНИЕ //////////////////////////////////////////////////
	|	КОГДА
	|		ДокументЗаказПоставщику.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовПоставщикам.НеСогласован)
	|	ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияЗаказовПоставщикам.ОжидаетсяСогласование)
	|// ОЖИДАЕТСЯ ПОДТВЕРЖДЕНИЕ //////////////////////////////////////////////////
	|	КОГДА
	|		ДокументЗаказПоставщику.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовПоставщикам.Согласован) И
	|		ДокументЗаказПоставщику.СуммаДокумента > 0
	|	ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияЗаказовПоставщикам.ОжидаетсяПодтверждение)
	|// ГОТОВ К ПОСТУПЛЕНИЮ //////////////////////////////////////////////////////
	|	КОГДА
	|		ДокументЗаказПоставщику.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовПоставщикам.Подтвержден) И
	|		ДокументЗаказПоставщику.СуммаДокумента > 0
	|		И ЕСТЬNULL(ЗаказыПоставщикамОстатки.Заказано, 0) <> 0
	|	ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияЗаказовПоставщикам.ГотовКПоступлению)
	|// ОЖИДАЕТСЯ ПОСТУПЛЕНИЕ //////////////////////////////////////////////////////
	|	КОГДА
	|		(ДокументЗаказПоставщику.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовПоставщикам.КПоступлению) ИЛИ НЕ &ИспользоватьСтатусыЗаказовПоставщикам) И
	|		ДокументЗаказПоставщику.СуммаДокумента > 0
	|		И ЕСТЬNULL(ЗаказыПоставщикамОстатки.КОформлению, 0) <> 0
	|	ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияЗаказовПоставщикам.ОжидаетсяПоступление)
	|// ГОТОВ К ЗАКРЫТИЮ ////////////////////////////////////////////////////////
	|	КОГДА
	|		ДокументЗаказПоставщику.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовПоставщикам.Закрыт)
	|	ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияЗаказовПоставщикам.ГотовКЗакрытию)
	|// ЗАКРЫТ //////////////////////////////////////////////////////////////////
	|	КОГДА
	|		(ДокументЗаказПоставщику.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовПоставщикам.Закрыт) И &ИспользоватьСтатусыЗаказовПоставщикам) ИЛИ НЕ &ИспользоватьСтатусыЗаказовПоставщикам
	|	ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияЗаказовПоставщикам.Закрыт)
	|КОНЕЦ КАК Состояние,
	|ВЫБОР
	|// НЕ ПРОВЕДЕН /////////////////////////////////////////////////////////////
	|	КОГДА
	|		НЕ ДокументЗаказПоставщику.Проведен
	|	ТОГДА
	|		ДАТАВРЕМЯ(1,1,1)
	|// ДАТА СОГЛАСОВАНИЯ ///////////////////////////////////////////////////////
	|	КОГДА
	|		ДокументЗаказПоставщику.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовПоставщикам.НеСогласован)
	|	ТОГДА
	|		ДокументЗаказПоставщику.ДатаСогласования
	|// ДАТА ПЕРВОГО ПОСТУПЛЕНИЯ ////////////////////////////////////////////////
	|	КОГДА
	|		(ДокументЗаказПоставщику.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовПоставщикам.Подтвержден) ИЛИ
	|		ДокументЗаказПоставщику.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовПоставщикам.КПоступлению) ИЛИ НЕ &ИспользоватьСтатусыЗаказовПоставщикам) И
	|		(ЕСТЬNULL(ЗаказыПоставщикамОстатки.Заказано, 0) <> 0 ИЛИ ЕСТЬNULL(ЗаказыПоставщикамОстатки.КОформлению, 0) <> 0)
	|		И ЕСТЬNULL(ЗаказыПоставщикамОстатки.Поступило, 0) = 0
	|	ТОГДА
	|		ДокументЗаказПоставщику.ДатаПервогоПоступления
	|КОНЕЦ КАК ДатаСобытия,
	|	ДокументЗаказПоставщику.Ссылка КАК Заказ
	|ИЗ
	|	Документ.ЗаказПоставщику КАК ДокументЗаказПоставщику
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ЗаказыПоставщикамОстатки КАК ЗаказыПоставщикамОстатки
	|		ПО
	|			ДокументЗаказПоставщику.Ссылка = ЗаказыПоставщикамОстатки.ЗаказПоставщику
	|ГДЕ
	|	ДокументЗаказПоставщику.Ссылка В (&Заказы)
	|";
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Заказы", Заказы);
	Запрос.УстановитьПараметр("ИспользоватьСтатусыЗаказовПоставщикам", ОбщегоНазначенияБольничнаяАптека.ИспользоватьСтатусы(Документы.ЗаказПоставщику.ПустаяСсылка()));
	
	ТаблицаСостояний = Запрос.Выполнить().Выгрузить();
	
	Возврат ТаблицаСостояний;
	
КонецФункции

Функция ПустоеСостояниеЗаказа()
	
	СостояниеЗаказа = Новый Структура;
	СостояниеЗаказа.Вставить("Состояние"          , Перечисления.СостоянияЗаказовПоставщикам.ПустаяСсылка());
	СостояниеЗаказа.Вставить("СостояниеПросрочено", Ложь);
	
	Возврат СостояниеЗаказа;
	
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции

#КонецЕсли