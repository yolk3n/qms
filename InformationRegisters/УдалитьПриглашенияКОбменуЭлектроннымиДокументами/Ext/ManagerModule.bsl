
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем  

// СтандартныеПодсистемы.ОбновлениеВерсииИБ

// Регистрирует данные для обработчика обновления
// 
// Параметры:
//  Параметры - Структура - параметры.
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
		
	МетаданныеОбъекта = Метаданные.РегистрыСведений.УдалитьПриглашенияКОбменуЭлектроннымиДокументами;
	ПолноеИмяОбъекта = МетаданныеОбъекта.ПолноеИмя();
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ЭтоНезависимыйРегистрСведений = Истина;
	ДополнительныеПараметры.ПолноеИмяРегистра = ПолноеИмяОбъекта;
	
	ПараметрыВыборки = Параметры.ПараметрыВыборки;
	ПараметрыВыборки.СпособВыборки = ОбновлениеИнформационнойБазы.СпособВыборкиИзмеренияНезависимогоРегистраСведений();
	ПараметрыВыборки.ПолныеИменаРегистров = ПолноеИмяОбъекта;    
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	УдалитьПриглашенияКОбменуЭлектроннымиДокументами.ИдентификаторОрганизации,
		|	УдалитьПриглашенияКОбменуЭлектроннымиДокументами.ИдентификаторКонтрагента
		|ИЗ
		|	РегистрСведений.УдалитьПриглашенияКОбменуЭлектроннымиДокументами КАК УдалитьПриглашенияКОбменуЭлектроннымиДокументами";
	
	Данные = Запрос.Выполнить().Выгрузить();
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Данные, ДополнительныеПараметры);   
	
КонецПроцедуры

// Обработчик обновления.
// 
// Параметры:
//  Параметры - Структура - параметры.
//
Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	МетаданныеОбъекта = Метаданные.РегистрыСведений.УдалитьПриглашенияКОбменуЭлектроннымиДокументами;
	ПолноеИмяОбъекта = МетаданныеОбъекта.ПолноеИмя();
	ПредставлениеОбъекта = МетаданныеОбъекта.Представление();
	
	ДанныеДляОбновления = ОбновлениеИнформационнойБазы.ДанныеДляОбновленияВМногопоточномОбработчике(Параметры);
	
	Если Не ЗначениеЗаполнено(ДанныеДляОбновления) Тогда
		Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(
		Параметры.Очередь, ПолноеИмяОбъекта);
		Возврат;
	КонецЕсли;
	
	ОбъектовОбработано = 0;
	ПроблемныхОбъектов = 0;  
	
	ОрганизацияПоИдентификатору = 
ПриглашенияЭДОСлужебный.СоответствиеИдентификаторовОрганизаций(ДанныеДляОбновления.ВыгрузитьКолонку("ИдентификаторОрганизации"));
	
	Для Каждого СтрокаДанных Из ДанныеДляОбновления Цикл
		НачатьТранзакцию();
		Попытка  
			
			Записать = Ложь; 
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.УдалитьПриглашенияКОбменуЭлектроннымиДокументами");
			ЭлементБлокировки.УстановитьЗначение("ИдентификаторОрганизации", СтрокаДанных.ИдентификаторОрганизации);
			ЭлементБлокировки.УстановитьЗначение("ИдентификаторКонтрагента", СтрокаДанных.ИдентификаторКонтрагента);		
			Блокировка.Заблокировать();
			
			НаборЗаписейСтарый = СоздатьНаборЗаписей();
			НаборЗаписейСтарый.Отбор.ИдентификаторОрганизации.Установить(СтрокаДанных.ИдентификаторОрганизации);
			НаборЗаписейСтарый.Отбор.ИдентификаторКонтрагента.Установить(СтрокаДанных.ИдентификаторКонтрагента);
			НаборЗаписейСтарый.Прочитать(); 
			
			НаборЗаписейНовый = РегистрыСведений.ПриглашенияКОбменуЭлектроннымиДокументами.СоздатьНаборЗаписей();   
			
			Организация = ОрганизацияПоИдентификатору.Получить(СтрокаДанных.ИдентификаторОрганизации);
			Если Не ЗначениеЗаполнено(Организация) Тогда
				Организация = Справочники.Организации.ПустаяСсылка();
			КонецЕсли;
			
			ПеренестиЗаписьРегистраПриглашений(НаборЗаписейСтарый, НаборЗаписейНовый, Организация, СтрокаДанных, Записать);
			
			Если Записать Тогда
				ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписейНовый); 
				ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписейСтарый);
			Иначе
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(НаборЗаписейСтарый);
			КонецЕсли;
			
			ОбъектовОбработано = ОбъектовОбработано + 1;
			
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию(); 
			
			ПроблемныхОбъектов = ПроблемныхОбъектов + 1;  
			
			ТекстСообщения = СтрШаблон(НСтр("ru = 'Не удалось обработать набор записей регистра: %1 по причине:
			|%2'"), ПредставлениеОбъекта, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
			УровеньЖурналаРегистрации.Ошибка, МетаданныеОбъекта, СтрокаДанных.Ссылка, ТекстСообщения);
		КонецПопытки;
	КонецЦикла;       
	
	Если ОбъектовОбработано = 0 И ПроблемныхОбъектов <> 0 Тогда
		ШаблонСообщения = НСтр("ru = 'Не удалось обработать некоторые записи регистра (пропущены): %1'");
		ТекстСообщения = СтрШаблон(ШаблонСообщения, ПроблемныхОбъектов);
		ВызватьИсключение ТекстСообщения;
	Иначе
		ШаблонСообщения = НСтр("ru = 'Обработана очередная порция записей регистра: %1'");
		ТекстСообщения = СтрШаблон(ШаблонСообщения, ОбъектовОбработано);
		ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
		УровеньЖурналаРегистрации.Информация,
		МетаданныеОбъекта,, ТекстСообщения);
	КонецЕсли;
	
	Параметры.ПрогрессВыполнения.ОбработаноОбъектов  = 
	Параметры.ПрогрессВыполнения.ОбработаноОбъектов  + ДанныеДляОбновления.Количество();
	
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(
	Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры
	
// Конец СтандартныеПодсистемы.ОбновлениеВерсииИБ

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Обновление

Процедура ПеренестиЗаписьРегистраПриглашений(НаборЗаписейСтарый, НаборЗаписейНовый, Организация, ЗаписьРегистра, Записать) 
	
	Если НаборЗаписейСтарый.Количество() = 0 Тогда
		Возврат;
	Иначе
		НовыйКлючПриглашения = Строка(Новый УникальныйИдентификатор);
		
		НаборЗаписейНовый.Отбор.Ключ.Установить(НовыйКлючПриглашения);		
		
		ЗаписьНовый = НаборЗаписейНовый.Добавить();
		ЗаполнитьЗначенияСвойств(ЗаписьНовый, НаборЗаписейСтарый[0]); 
		ЗаписьНовый.Организация = Организация;
		ЗаписьНовый.Ключ = НовыйКлючПриглашения;
		ЗаписьНовый.ИдентификаторОператора = НаборЗаписейСтарый[0].ОператорЭДО;
		ЗаписьНовый.EmailКонтрагента = НаборЗаписейСтарый[0].Email;
		
		Если ЗаписьНовый.ИдентификаторКонтрагента = ЗаписьНовый.ИНН
			Или СтрДлина(ЗаписьНовый.ИдентификаторКонтрагента) <= 12 Тогда
			ЗаписьНовый.ИдентификаторКонтрагента = "";
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ЗаписьНовый.ИдентификаторОрганизации)
			И ЗначениеЗаполнено(ЗаписьНовый.ИдентификаторКонтрагента) Тогда
			ЗаписьНовый.Тип = Перечисления.ТипыПриглашений.НаИдентификатор;
		ИначеЕсли ЗначениеЗаполнено(ЗаписьНовый.ИдентификаторОператора) Тогда
			ЗаписьНовый.Тип = Перечисления.ТипыПриглашений.ЗаявкаНаРоуминг;
		Иначе
			ЗаписьНовый.Тип = Перечисления.ТипыПриглашений.Широковещательное;
		КонецЕсли;
		
		НаборЗаписейСтарый.Очистить(); 
		
		Записать = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
	
#КонецЕсли
