#Область ПрограммныйИнтерфейс

/// Добавление записи регистра
//
// Параметры:
//   ИдентификаторСообщенияИзМИС - Строка -
//     Идентификатор сообщения из МИС.
//   УзелОбменаСМИС - ПланОбменаСсылка.ФедеральныеВебСервисыМИСДляПрокси -
//     узел обмена с МИС.
//   Статус - ПеречислениеСсылка.СтатусыЗапросовВСервисИдентификацииОбогащения -
//     Статус запроса в сервис идентификации.
//   СообщениеЗапрос - Строка -
//     Текст сообщения.
//   СообщениеОтвет - Строка -
//     Текст сообщения.
//   ИдентификаторЗапроса - Строка -
//     Идентификатор запроса.
//   ДатаЗапроса - Дата -
//     Дата запроса.
//   ДатаОтвета - Дата -
//     Дата ответа.
//   Результат - Строка -
//     Данные результата.
//   OIDМО - Строка -
//     OID медицинской организации, от которой был получен запрос
//   ДанныеПациента - Структура
//    Структура, содержащая данные пациента.
///
Процедура ЗаписатьСообщениеЗапрос( // 11 параметров
	ИдентификаторСообщенияИзМИС,
	ИдКлиента,
	Статус,
	СообщениеЗапрос,
	СообщениеОтвет,
	ИдентификаторЗапроса,
	ДатаЗапроса,
	ДатаОтвета,
	Результат,
	OIDМО,
	ДанныеПациента
)
Экспорт
	
	НаборЗаписей_ = РегистрыСведений.ФедеральныеВебСервисыЗапросыВСервисИдентификации.СоздатьНаборЗаписей();
	Запись_ = НаборЗаписей_.Добавить();
	Запись_.ИдентификаторСообщенияИзМИС = ИдентификаторСообщенияИзМИС;
	Запись_.ИдКлиента = ИдКлиента;
	Запись_.СтатусЗапроса = Статус;
	Запись_.ИдентификаторСообщенияИзСервиса = ИдентификаторЗапроса;
	Запись_.ВремяИзменения = ДатаЗапроса;
	Запись_.ДатаПолученияОтвета = ДатаОтвета;
	Запись_.СообщениеЗапрос = СообщениеЗапрос;
	Запись_.ОтветСервиса = СообщениеОтвет;
	Запись_.Комментарий = Результат;
	Запись_.OIDМО = OIDМО;
	
	Запись_.Фамилия = ДанныеПациента.Фамилия;
	Запись_.Имя = ДанныеПациента.Имя;
	Если ЗначениеЗаполнено(ДанныеПациента.Отчество) Тогда
		Запись_.Отчество = ДанныеПациента.Отчество;
	КонецЕсли;
	Запись_.ДатаРождения = ДанныеПациента.ДатаРождения;
	
	Если ЗначениеЗаполнено(ДанныеПациента.ДокументВид) Тогда
		Запись_.ДокументВид = ДанныеПациента.ДокументВид;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДанныеПациента.ДокументСерия) Тогда
		Запись_.ДокументСерия = ДанныеПациента.ДокументСерия;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДанныеПациента.ДокументНомер) Тогда
		Запись_.ДокументНомер = ДанныеПациента.ДокументНомер;
	КонецЕсли;
	
	НаборЗаписей_.Записать(Ложь);
	
КонецПроцедуры

/// Запись ответа от сервиса идентификации
//
// Параметры:
//   ИдентификаторСообщенияИзМИС - Строка -
//     Идентификатор сообщения из МИС.
//   Статус - ПеречислениеСсылка.СтатусыЗапросовВСервисИдентификацииОбогащения -
//     Статус запроса в сервис идентификации.
//   СообщениеОтвет - Строка -
//     Текст сообщения.
//   ДатаОтвета - Дата -
//     Дата ответа.
//   Результат - Строка -
//     Данные результата.
//   ИдентификаторЗапроса - Строка -
//     Идентификатор запроса из сервиса идентификации.
///
Функция ЗаписатьОтвет( // 5 параметров
	ИдентификаторСообщенияИзМИС,
	Статус,
	СообщениеОтвет,
	ДатаОтвета,
	Результат
)
Экспорт
	
	Успех_ = Истина;
	Попытка
		
		НаборЗаписей_ = РегистрыСведений.ФедеральныеВебСервисыЗапросыВСервисИдентификации.СоздатьНаборЗаписей();
		НаборЗаписей_.Отбор.ИдентификаторСообщенияИзМИС.Установить(ИдентификаторСообщенияИзМИС);
		НаборЗаписей_.Прочитать();
		Если НаборЗаписей_.Количество() = 1 Тогда
			Запись_ = НаборЗаписей_[0];
			Запись_.СтатусЗапроса = Статус;
			Запись_.ОтветСервиса = СообщениеОтвет;
			Запись_.ДатаПолученияОтвета = ДатаОтвета;
			Запись_.Комментарий = Результат;
			НаборЗаписей_.Записать(Истина)
		КонецЕсли;
		
	Исключение
		ВызватьИсключение "Не удалось записать результат обмена."
			+ Символы.ПС
			+ ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())
			+ Символы.ПС
		;
	КонецПопытки;
КонецФункции

/// Изменяет статус запроса
//
// Параметры:
//   ИдентификаторСообщенияИзМИС - Строка -
//     Идентификатор сообщения из МИС.
//   Статус - ПеречислениеСсылка.СтатусыЗапросовВСервисИдентификацииОбогащения -
//     Статус запроса в сервис идентификации.
///
Функция ИзменитьСтатусЗапроса(ИдентификаторСообщенияИзМИС, Статус) Экспорт
	
	Успех_ = Истина;
	Попытка
		
		НаборЗаписей_ = РегистрыСведений.ФедеральныеВебСервисыЗапросыВСервисИдентификации.СоздатьНаборЗаписей();
		НаборЗаписей_.Отбор.ИдентификаторСообщенияИзМИС.Установить(ИдентификаторСообщенияИзМИС);
		НаборЗаписей_.Прочитать();
		Если НаборЗаписей_.Количество() = 1 Тогда
			Запись_ = НаборЗаписей_[0];
			Запись_.СтатусЗапроса = Статус;
			НаборЗаписей_.Записать(Истина)
		КонецЕсли;
		
	Исключение
		ВызватьИсключение "Не удалось изменить статус запроса."
			+ Символы.ПС
			+ ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())
			+ Символы.ПС
		;
	КонецПопытки;
КонецФункции

/// Проверка наличия в регистре запросов, которые находятся в очереди в сервисе идентификации.
//
// Возвращаемое значение:.
//   Структура, Неопределено -
//     Данные сообщения в очереди на получение полиса ОМС.
///
Функция СледующийЗапросВОчереди() Экспорт
	
	Запрос_ = Новый Запрос;
	
	Запрос_.Текст = 
		"ВЫБРАТЬ
		|	ФедеральныеВебСервисыЗапросыВСервисИдентификации.СтатусЗапроса КАК СтатусЗапроса,
		|	ФедеральныеВебСервисыЗапросыВСервисИдентификации.ИдентификаторСообщенияИзСервиса КАК ИдентификаторСообщенияИзСервиса,
		|	ФедеральныеВебСервисыЗапросыВСервисИдентификации.ИдентификаторСообщенияИзМИС КАК ИдентификаторСообщенияИзМИС,
		|	ФедеральныеВебСервисыЗапросыВСервисИдентификации.OIDМО КАК OIDМО
		|ИЗ
		|	РегистрСведений.ФедеральныеВебСервисыЗапросыВСервисИдентификации КАК ФедеральныеВебСервисыЗапросыВСервисИдентификации
		|ГДЕ
		|	ФедеральныеВебСервисыЗапросыВСервисИдентификации.СтатусЗапроса = ЗНАЧЕНИЕ(Перечисление.СтатусыЗапросовВСервисИдентификацииОбогащения.ВПроцессеОбработки)";
	
	РезультатЗапроса_ = Запрос_.Выполнить();
	
	ВыборкаДетальныеЗаписи_ = РезультатЗапроса_.Выбрать();
	Если ВыборкаДетальныеЗаписи_.Следующий() Тогда
		Возврат ВыборкаДетальныеЗаписи_;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

Функция ПолучитьСообщениеСОтветомСервисаИдентификации(ИдентификаторСообщенияИзСервиса) Экспорт
	
	Запрос_ = Новый Запрос;
	Запрос_.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ФедеральныеВебСервисыЗапросыВСервисИдентификации.ОтветСервиса КАК ОтветСервиса,
		|	ФедеральныеВебСервисыЗапросыВСервисИдентификации.СтатусЗапроса КАК СтатусЗапроса,
		|	ФедеральныеВебСервисыЗапросыВСервисИдентификации.ИдентификаторСообщенияИзМИС КАК ИдентификаторСообщенияИзМИС
		|ИЗ
		|	РегистрСведений.ФедеральныеВебСервисыЗапросыВСервисИдентификации КАК ФедеральныеВебСервисыЗапросыВСервисИдентификации
		|ГДЕ
		|	ФедеральныеВебСервисыЗапросыВСервисИдентификации.ИдентификаторСообщенияИзСервиса = &ИдентификаторСообщенияИзСервиса";
	
	Запрос_.УстановитьПараметр("ИдентификаторСообщенияИзСервиса", ИдентификаторСообщенияИзСервиса);
	
	РезультатЗапроса_ = Запрос_.Выполнить();
	
	Выборка_ = РезультатЗапроса_.Выбрать();
	
	СообщениеОтвет_ = Неопределено;
	
	Если Выборка_.Следующий() Тогда
		СообщениеОтвет_ = Выборка_;
	КонецЕсли;
	
	Возврат СообщениеОтвет_;
	
КонецФункции

Функция ПолучитьСообщениеСОтветомПоДаннымПациента(ДанныеПациента) Экспорт
	
	Запрос_ = Новый Запрос;
	Запрос_.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ФедеральныеВебСервисыЗапросыВСервисИдентификации.ОтветСервиса КАК ОтветСервиса,
		|	ФедеральныеВебСервисыЗапросыВСервисИдентификации.СтатусЗапроса КАК СтатусЗапроса,
		|	ФедеральныеВебСервисыЗапросыВСервисИдентификации.ИдентификаторСообщенияИзМИС КАК ИдентификаторСообщенияИзМИС
		|ИЗ
		|	РегистрСведений.ФедеральныеВебСервисыЗапросыВСервисИдентификации КАК ФедеральныеВебСервисыЗапросыВСервисИдентификации
		|ГДЕ
		|	ФедеральныеВебСервисыЗапросыВСервисИдентификации.Фамилия = &Фамилия
		|	И ФедеральныеВебСервисыЗапросыВСервисИдентификации.Имя = &Имя
		|	И ФедеральныеВебСервисыЗапросыВСервисИдентификации.Отчество = &Отчество
		|	И ФедеральныеВебСервисыЗапросыВСервисИдентификации.ДокументВид = &ДокументВид
		|	И ФедеральныеВебСервисыЗапросыВСервисИдентификации.ДокументНомер = &ДокументНомер
		|	И ФедеральныеВебСервисыЗапросыВСервисИдентификации.ДокументСерия = &ДокументСерия";
	
	Запрос_.УстановитьПараметр("Фамилия", ДанныеПациента.Фамилия);
	Запрос_.УстановитьПараметр("Имя", ДанныеПациента.Имя);
	
	Отчество_ = "";
	Если ЗначениеЗаполнено(ДанныеПациента.Отчество) Тогда
		Отчество_ = ДанныеПациента.Отчество;
	КонецЕсли;
	Запрос_.УстановитьПараметр("Отчество", Отчество_);
	
	Запрос_.УстановитьПараметр("ДокументВид", ДанныеПациента.ДокументВид);
	
	Серия_ = "";
	Если ЗначениеЗаполнено(ДанныеПациента.ДокументСерия) Тогда
		Серия_ = ДанныеПациента.ДокументСерия;
	КонецЕсли;
	Запрос_.УстановитьПараметр("ДокументСерия", Серия_);
	
	Запрос_.УстановитьПараметр("ДокументНомер", ДанныеПациента.ДокументНомер);
	
	РезультатЗапроса_ = Запрос_.Выполнить();
	Выборка_ = РезультатЗапроса_.Выбрать();
	
	СообщениеОтвет_ = Неопределено;
	
	Если Выборка_.Следующий() Тогда
		СообщениеОтвет_ = Выборка_;
	КонецЕсли;
	
	Возврат СообщениеОтвет_;
	
КонецФункции

#КонецОбласти
