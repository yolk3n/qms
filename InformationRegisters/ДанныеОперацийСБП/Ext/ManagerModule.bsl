///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2022, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

// Получает исторические данные заказа на оплату по идентификатору.
//
// Параметры
//  Идентификатор - Строка - идентификатор заказа на оплату.
//
// Возвращаемое значение:
//  Структура - данные заказа на оплату:
//    *ДатаОперации - Дата - дата заказа в программе;
//    *СуммаОперации - Число - сумма операции;
//    *НазначениеПлатежа - Строка - назначение для СБП;
//    *ДокументОперации - ОпределяемыйТип.ДокументОперацииБИП - объект оплаты в информационной базе;
//    *ТорговаяТочка - Строка - идентификатор торговой точки для которой была сформирован заказ.
//
Функция ДанныеОперацииСБППоИдентификатору(Идентификатор) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ДанныеОперацийСБП.ДатаОперации КАК ДатаОперации,
		|	ДанныеОперацийСБП.СуммаОперации КАК СуммаОперации,
		|	ДанныеОперацийСБП.НазначениеПлатежа КАК НазначениеПлатежа,
		|	ДанныеОперацийСБП.ДокументОперации КАК ДокументОперации,
		|	ДанныеОперацийСБП.ТорговаяТочка КАК ТорговаяТочка,
		|	ДанныеОперацийСБП.Оплата КАК Оплата,
		|	ДанныеОперацийСБП.КассоваяСсылка КАК КассоваяСсылка,
		|	ИдентификаторыОперацийСБП.НастройкаИнтеграции КАК НастройкаИнтеграции
		|ИЗ
		|	РегистрСведений.ДанныеОперацийСБП КАК ДанныеОперацийСБП
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ИдентификаторыОперацийСБП КАК ИдентификаторыОперацийСБП
		|		ПО ДанныеОперацийСБП.Идентификатор = ИдентификаторыОперацийСБП.Идентификатор
		|ГДЕ
		|	ДанныеОперацийСБП.Идентификатор = &Идентификатор";
	
	Запрос.УстановитьПараметр("Идентификатор", Идентификатор);
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Результат = Новый Структура;
		Результат.Вставить("ДатаОперации",        ВыборкаДетальныеЗаписи.ДатаОперации);
		Результат.Вставить("СуммаОперации",       ВыборкаДетальныеЗаписи.СуммаОперации);
		Результат.Вставить("НазначениеПлатежа",   ВыборкаДетальныеЗаписи.НазначениеПлатежа);
		Результат.Вставить("ДокументОперации",    ВыборкаДетальныеЗаписи.ДокументОперации);
		Результат.Вставить("ТорговаяТочка",       ВыборкаДетальныеЗаписи.ТорговаяТочка);
		Результат.Вставить("Оплата",              ВыборкаДетальныеЗаписи.Оплата);
		Результат.Вставить("КассоваяСсылка",      ВыборкаДетальныеЗаписи.КассоваяСсылка);
		Результат.Вставить("НастройкаИнтеграции", ВыборкаДетальныеЗаписи.НастройкаИнтеграции);
		Возврат Результат;
	КонецЕсли;
	
КонецФункции

// Записывает данные оплаты в информационную базу.
//
// Параметры
//  Идентификатор - Строка - идентификатор заказа на оплату;
//  ЗаказНаОплату - Структура - данные заказа на оплату:
//    *ДатаОплаты - Дата - дата заказа в программе;
//    *СуммаОплаты - Число - сумма оплаты;
//    *НазначениеПлатежа - Строка - назначение для СБП;
//  ДокументОплаты - ОпределяемыйТип.ДокументОперацииБИП - объект оплаты в информационной базе;
//  КассоваяСсылка - Строка - идентификатор кассовой ссылки;
//  ТорговаяТочка - Строка - идентификатор торговой точки для которой была сформирован заказ.
//
Процедура СохранитьДанныеОплаты(
		Идентификатор,
		ЗаказНаОплату,
		КассоваяСсылка,
		ДокументОплаты,
		ТорговаяТочка) Экспорт
	
	Запись = РегистрыСведений.ДанныеОперацийСБП.СоздатьМенеджерЗаписи();
	Запись.Идентификатор = Идентификатор;
	Запись.ДокументОперации  = ДокументОплаты;
	Запись.ДатаОперации = ЗаказНаОплату.ДатаОплаты;
	Запись.СуммаОперации = ЗаказНаОплату.СуммаОплаты;
	Запись.НазначениеПлатежа = ЗаказНаОплату.НазначениеПлатежа;
	Запись.ТорговаяТочка = ТорговаяТочка;
	Запись.КассоваяСсылка = КассоваяСсылка;
	Запись.Оплата = Истина;
	Запись.Записать();
	
КонецПроцедуры

// Записывает данные возврата в информационную базу.
//
// Параметры
//  Идентификатор - Строка - идентификатор заказа на оплату;
//  ЗаказНаВозврат - Структура - данные заказа на возврат:
//    *ДатаВозврата - Дата - дата возврата в программе;
//    *СуммаВозврата - Число - сумма возврата;
//    *НазначениеПлатежа - Строка - назначение для СБП;
//  ДокументВозврата - ОпределяемыйТип.ДокументОперацииБИП - объект оплаты в информационной базе;
//  ТорговаяТочка - Строка - идентификатор торговой точки для которой была сформирован заказ.
//
Процедура СохранитьДанныеВозврата(
		Идентификатор,
		ЗаказНаВозврат,
		ДокументВозврата,
		ТорговаяТочка) Экспорт
	
	Запись = РегистрыСведений.ДанныеОперацийСБП.СоздатьМенеджерЗаписи();
	Запись.Идентификатор    = Идентификатор;
	Запись.ДокументОперации = ДокументВозврата;
	Запись.ДатаОперации     = ЗаказНаВозврат.ДатаВозврата;
	Запись.СуммаОперации    = ЗаказНаВозврат.СуммаВозврата;
	Запись.ТорговаяТочка    = ТорговаяТочка;
	Запись.Записать();
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли