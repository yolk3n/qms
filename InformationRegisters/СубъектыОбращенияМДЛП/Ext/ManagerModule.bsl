#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбновлениеИнформационнойБазы

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ЭтоНезависимыйРегистрСведений = Истина;
	ДополнительныеПараметры.ПолноеИмяРегистра = "РегистрСведений.СубъектыОбращенияМДЛП";
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	Субъекты.ОрганизацияКонтрагент КАК ОрганизацияКонтрагент,
	|	Субъекты.ОбъектМестаДеятельности КАК ОбъектМестаДеятельности
	|ИЗ
	|	РегистрСведений.СубъектыОбращенияМДЛП КАК Субъекты
	|ГДЕ
	|	Субъекты.ИдентификаторСубъектаОбращения <> """"
	|	И Субъекты.МестоДеятельности = ЗНАЧЕНИЕ(Справочник.МестаДеятельностиМДЛП.ПустаяСсылка)
	|";
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить(), ДополнительныеПараметры);
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуИзмеренийНезависимогоРегистраСведенийДляОбработки(
		Параметры.Очередь,
		"РегистрСведений.СубъектыОбращенияМДЛП",
		МенеджерВременныхТаблиц);
	
	Если Не Результат.ЕстьДанныеДляОбработки Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	Если Не Результат.ЕстьЗаписиВоВременнойТаблице Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДанныеДляОбработки.ОрганизацияКонтрагент             КАК ОрганизацияКонтрагент,
	|	ДанныеДляОбработки.ОбъектМестаДеятельности           КАК ОбъектМестаДеятельности,
	|	СвязьССубъектамиМДЛП.ИдентификаторОрганизации        КАК ИдентификаторОрганизации,
	|	СвязьССубъектамиМДЛП.ИдентификаторСубъектаОбращения  КАК ИдентификаторСубъектаОбращения,
	|	МестаДеятельностиМДЛП.Организация                    КАК Организации,
	|	МестаДеятельностиМДЛП.Ссылка                         КАК МестоДеятельности
	|ИЗ
	|	#ДанныеДляОбработки КАК ДанныеДляОбработки
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СубъектыОбращенияМДЛП КАК СвязьССубъектамиМДЛП
	|	ПО
	|		СвязьССубъектамиМДЛП.ОрганизацияКонтрагент = ДанныеДляОбработки.ОрганизацияКонтрагент
	|		И СвязьССубъектамиМДЛП.ОбъектМестаДеятельности = ДанныеДляОбработки.ОбъектМестаДеятельности
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.МестаДеятельностиМДЛП КАК МестаДеятельностиМДЛП
	|	ПО
	|		МестаДеятельностиМДЛП.Идентификатор = СвязьССубъектамиМДЛП.ИдентификаторСубъектаОбращения
	|";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "#ДанныеДляОбработки", Результат.ИмяВременнойТаблицы);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			НаборЗаписей = РегистрыСведений.СубъектыОбращенияМДЛП.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.ОрганизацияКонтрагент.Установить(Выборка.ОрганизацияКонтрагент);
			НаборЗаписей.Отбор.ОбъектМестаДеятельности.Установить(Выборка.ОбъектМестаДеятельности);
			
			Если Выборка.ИдентификаторСубъектаОбращения = Null Тогда
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(НаборЗаписей);
				ЗафиксироватьТранзакцию();
				Продолжить;
			КонецЕсли;
			
			НоваяЗапись = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяЗапись, Выборка);
			
			ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
			
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			ТекстСообщения = НСтр("ru = 'Не удалось сделать запись связи с субъектами МДЛП по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(
				ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Предупреждение,,,
				ТекстСообщения);
		КонецПопытки;
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(
		Параметры.Очередь,
		"РегистрСведений.СубъектыОбращенияМДЛП");
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли