#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция СформироватьКоллекциюНомеровИКлючейУпаковок(НомераУпаковок, ТипВозвращаемойКоллекции) Экспорт
	
	ТаблицаНомеровУпаковок = Новый ТаблицаЗначений;
	ТаблицаНомеровУпаковок.Колонки.Добавить("НомерУпаковки", Метаданные.ОпределяемыеТипы.НомерУпаковкиМДЛП.Тип);
	ТаблицаНомеровУпаковок.Колонки.Добавить("КлючУпаковки" , ОбщегоНазначения.ОписаниеТипаСтрока(100));
	
	Для Каждого НомерУпаковки Из НомераУпаковок Цикл
		Строка = ТаблицаНомеровУпаковок.Добавить();
		Строка.НомерУпаковки = НомерУпаковки;
		Строка.КлючУпаковки = ИнтеграцияМДЛПКлиентСервер.ПолучитьКлючУпаковки(Строка.НомерУпаковки);
	КонецЦикла;
	
	Если ТипВозвращаемойКоллекции = Тип("ТаблицаЗначений") Тогда
		
		Возврат ТаблицаНомеровУпаковок;
		
	Иначе
		
		Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	*
		|ПОМЕСТИТЬ НомераУпаковок
		|ИЗ
		|	&НомераУпаковок КАК НомераУпаковок
		|");
		Запрос.УстановитьПараметр("НомераУпаковок", ТаблицаНомеровУпаковок);
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		Запрос.Выполнить();
		
		Если ТипВозвращаемойКоллекции = Тип("МенеджерВременныхТаблиц") Тогда
			
			Возврат Запрос.МенеджерВременныхТаблиц;
			
		ИначеЕсли ТипВозвращаемойКоллекции = Тип("ВыборкаИзРезультатаЗапроса") Тогда
			
			Возврат Запрос.МенеджерВременныхТаблиц.Таблицы["НомераУпаковок"].ПолучитьДанные().Выбрать();
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецФункции

Функция ПолучитьДанныеУпаковок(НомераУпаковок, ТипВозвращаемойКоллекции, Отбор = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СформироватьКоллекциюНомеровИКлючейУпаковок(НомераУпаковок, Тип("МенеджерВременныхТаблиц"));
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеУпаковок.*
	|ПОМЕСТИТЬ ДанныеУпаковок
	|ИЗ
	|	НомераУпаковок КАК НомераУпаковок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			РегистрСведений.УпаковкиМДЛП КАК ДанныеУпаковок
	|		ПО
	|			ДанныеУпаковок.НомерУпаковки = НомераУпаковок.НомерУпаковки
	|			И ДанныеУпаковок.КлючУпаковки = НомераУпаковок.КлючУпаковки
	|";
	
	Если Отбор <> Неопределено Тогда
		
		СхемаЗапроса = Новый СхемаЗапроса;
		СхемаЗапроса.УстановитьТекстЗапроса(Запрос.Текст);
		ОтборОбъект = СхемаЗапроса.ПакетЗапросов[0].Операторы[0].Отбор;
		
		Для Каждого КлючИЗначение Из Отбор Цикл
			Если ТипЗнч(КлючИЗначение.Значение) = Тип("Массив") Тогда
				Выражение = СтрШаблон("ДанныеУпаковок.%1 В (&%1)", КлючИЗначение.Ключ);
			Иначе
				Выражение = СтрШаблон("ДанныеУпаковок.%1 = &%1", КлючИЗначение.Ключ);
			КонецЕсли;
			ОтборОбъект.Добавить(Выражение);
			Запрос.УстановитьПараметр(КлючИЗначение.Ключ, КлючИЗначение.Значение);
		КонецЦикла;
		
		Запрос.Текст = СхемаЗапроса.ПолучитьТекстЗапроса();
		
	КонецЕсли;
	
	Запрос.Выполнить();
	
	Возврат СформироватьРезультатПолученияДанных(Запрос, ТипВозвращаемойКоллекции, "ДанныеУпаковок");
	
КонецФункции


Функция ПолучитьДанныеПотребительскихУпаковок(НомераУпаковок, ТипВозвращаемойКоллекции, Отбор = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ПолучитьДанныеУпаковок(НомераУпаковок, Тип("МенеджерВременныхТаблиц"), Отбор);
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДанныеУпаковок.*
	|ПОМЕСТИТЬ ПотребительскиеУпаковки
	|ИЗ
	|	ДанныеУпаковок КАК ДанныеУпаковок
	|ГДЕ
	|	НЕ ДанныеУпаковок.ГрупповаяУпаковка
	|";
	
	Запрос.Выполнить();
	
	Возврат СформироватьРезультатПолученияДанных(Запрос, ТипВозвращаемойКоллекции, "ПотребительскиеУпаковки");
	
КонецФункции

Функция ПолучитьДанныеГрупповыхУпаковок(НомераУпаковок, ТипВозвращаемойКоллекции, Отбор = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ПолучитьДанныеУпаковок(НомераУпаковок, Тип("МенеджерВременныхТаблиц"), Отбор);
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДанныеУпаковок.*
	|ПОМЕСТИТЬ ГрупповыеУпаковки
	|ИЗ
	|	ДанныеУпаковок КАК ДанныеУпаковок
	|ГДЕ
	|	ДанныеУпаковок.ГрупповаяУпаковка
	|";
	
	Запрос.Выполнить();
	
	Возврат СформироватьРезультатПолученияДанных(Запрос, ТипВозвращаемойКоллекции, "ГрупповыеУпаковки");
	
КонецФункции


Функция ПолучитьДанныеУпаковокБезРодителей(НомераУпаковок, ТипВозвращаемойКоллекции, Отбор = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ПолучитьДанныеУпаковок(НомераУпаковок, Тип("МенеджерВременныхТаблиц"), Отбор);
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДанныеУпаковок.*
	|ПОМЕСТИТЬ УпаковкиБезРодителей
	|ИЗ
	|	ДанныеУпаковок КАК ДанныеУпаковок
	|ГДЕ
	|	ДанныеУпаковок.НомерГрупповойУпаковки = &ПустаяГрупповаяУпаковка
	|";
	
	Запрос.УстановитьПараметр("ПустаяГрупповаяУпаковка", Метаданные.ОпределяемыеТипы.SSCC.Тип.ПривестиЗначение());
	Запрос.Выполнить();
	
	Возврат СформироватьРезультатПолученияДанных(Запрос, ТипВозвращаемойКоллекции, "УпаковкиБезРодителей");
	
КонецФункции

Функция ПолучитьДанныеПотребительскихУпаковокБезРодителей(НомераУпаковок, ТипВозвращаемойКоллекции, Отбор = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ПолучитьДанныеУпаковок(НомераУпаковок, Тип("МенеджерВременныхТаблиц"), Отбор);
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДанныеУпаковок.*
	|ПОМЕСТИТЬ ПотребительскиеУпаковкиБезРодителей
	|ИЗ
	|	ДанныеУпаковок КАК ДанныеУпаковок
	|ГДЕ
	|	НЕ ДанныеУпаковок.ГрупповаяУпаковка
	|	И ДанныеУпаковок.НомерГрупповойУпаковки = &ПустаяГрупповаяУпаковка
	|";
	
	Запрос.УстановитьПараметр("ПустаяГрупповаяУпаковка", Метаданные.ОпределяемыеТипы.SSCC.Тип.ПривестиЗначение());
	Запрос.Выполнить();
	
	Возврат СформироватьРезультатПолученияДанных(Запрос, ТипВозвращаемойКоллекции, "ПотребительскиеУпаковкиБезРодителей");
	
КонецФункции

Функция ПолучитьДанныеГрупповыхУпаковокБезРодителей(НомераУпаковок, ТипВозвращаемойКоллекции, Отбор = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ПолучитьДанныеУпаковок(НомераУпаковок, Тип("МенеджерВременныхТаблиц"), Отбор);
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДанныеУпаковок.*
	|ПОМЕСТИТЬ ГрупповыеУпаковкиБезРодителей
	|ИЗ
	|	ДанныеУпаковок КАК ДанныеУпаковок
	|ГДЕ
	|	ДанныеУпаковок.ГрупповаяУпаковка
	|	И ДанныеУпаковок.НомерГрупповойУпаковки = &ПустаяГрупповаяУпаковка
	|";
	
	Запрос.УстановитьПараметр("ПустаяГрупповаяУпаковка", Метаданные.ОпределяемыеТипы.SSCC.Тип.ПривестиЗначение());
	Запрос.Выполнить();
	
	Возврат СформироватьРезультатПолученияДанных(Запрос, ТипВозвращаемойКоллекции, "ГрупповыеУпаковкиБезРодителей");
	
КонецФункции


Функция ПолучитьДанныеРодителейУпаковок(НомераУпаковок, ТипВозвращаемойКоллекции, Отбор = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ПолучитьДанныеУпаковок(НомераУпаковок, Тип("МенеджерВременныхТаблиц"), Отбор);
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РодительскиеУпаковки.*
	|ПОМЕСТИТЬ РодителиУпаковок
	|ИЗ
	|	ДанныеУпаковок КАК ДанныеУпаковок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			РегистрСведений.УпаковкиМДЛП КАК РодительскиеУпаковки
	|		ПО
	|			РодительскиеУпаковки.НомерУпаковки = ДанныеУпаковок.НомерГрупповойУпаковки
	|			И РодительскиеУпаковки.МестоДеятельности = ДанныеУпаковок.МестоДеятельности
	|ГДЕ
	|	ДанныеУпаковок.НомерГрупповойУпаковки <> &ПустаяГрупповаяУпаковка
	|";
	
	Запрос.УстановитьПараметр("ПустаяГрупповаяУпаковка", Метаданные.ОпределяемыеТипы.SSCC.Тип.ПривестиЗначение());
	Запрос.Выполнить();
	
	Возврат СформироватьРезультатПолученияДанных(Запрос, ТипВозвращаемойКоллекции, "РодителиУпаковок");
	
КонецФункции

Функция ПолучитьДанныеРодителейПотребительскихУпаковок(НомераУпаковок, ТипВозвращаемойКоллекции, Отбор = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ПолучитьДанныеУпаковок(НомераУпаковок, Тип("МенеджерВременныхТаблиц"), Отбор);
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РодительскиеУпаковки.*
	|ПОМЕСТИТЬ РодителиПотребительскихУпаковок
	|ИЗ
	|	ДанныеУпаковок КАК ДанныеУпаковок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			РегистрСведений.УпаковкиМДЛП КАК РодительскиеУпаковки
	|		ПО
	|			РодительскиеУпаковки.НомерУпаковки = ДанныеУпаковок.НомерГрупповойУпаковки
	|			И РодительскиеУпаковки.МестоДеятельности = ДанныеУпаковок.МестоДеятельности
	|ГДЕ
	|	НЕ ДанныеУпаковок.ГрупповаяУпаковка
	|	И ДанныеУпаковок.НомерГрупповойУпаковки <> &ПустаяГрупповаяУпаковка
	|";
	
	Запрос.УстановитьПараметр("ПустаяГрупповаяУпаковка", Метаданные.ОпределяемыеТипы.SSCC.Тип.ПривестиЗначение());
	Запрос.Выполнить();
	
	Возврат СформироватьРезультатПолученияДанных(Запрос, ТипВозвращаемойКоллекции, "РодителиПотребительскихУпаковок");
	
КонецФункции

Функция ПолучитьДанныеРодителейГрупповыхУпаковок(НомераУпаковок, ТипВозвращаемойКоллекции, Отбор = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ПолучитьДанныеУпаковок(НомераУпаковок, Тип("МенеджерВременныхТаблиц"), Отбор);
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РодительскиеУпаковки.*
	|ПОМЕСТИТЬ РодителиГрупповыхУпаковок
	|ИЗ
	|	ДанныеУпаковок КАК ДанныеУпаковок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			РегистрСведений.УпаковкиМДЛП КАК РодительскиеУпаковки
	|		ПО
	|			РодительскиеУпаковки.НомерУпаковки = ДанныеУпаковок.НомерГрупповойУпаковки
	|			И РодительскиеУпаковки.МестоДеятельности = ДанныеУпаковок.МестоДеятельности
	|ГДЕ
	|	ДанныеУпаковок.ГрупповаяУпаковка
	|	И ДанныеУпаковок.НомерГрупповойУпаковки <> &ПустаяГрупповаяУпаковка
	|";
	
	Запрос.УстановитьПараметр("ПустаяГрупповаяУпаковка", Метаданные.ОпределяемыеТипы.SSCC.Тип.ПривестиЗначение());
	Запрос.Выполнить();
	
	Возврат СформироватьРезультатПолученияДанных(Запрос, ТипВозвращаемойКоллекции, "РодителиГрупповыхУпаковок");
	
КонецФункции


Функция ПолучитьДанныеРодителейУпаковокСамогоВерхнегоУровня(НомераУпаковок, ТипВозвращаемойКоллекции, Отбор = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ПолучитьДанныеУпаковок(НомераУпаковок, Тип("МенеджерВременныхТаблиц"), Отбор);
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РодительскиеУпаковкиСамогоВерхнегоУровня.*
	|ПОМЕСТИТЬ РодителиУпаковокСамогоВерхнегоУровня
	|ИЗ
	|	ДанныеУпаковок КАК ДанныеУпаковок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			РегистрСведений.УпаковкиМДЛП КАК РодительскиеУпаковкиСамогоВерхнегоУровня
	|		ПО
	|			РодительскиеУпаковкиСамогоВерхнегоУровня.НомерУпаковки = ДанныеУпаковок.ДокументРезерва
	|			И РодительскиеУпаковкиСамогоВерхнегоУровня.МестоДеятельности = ДанныеУпаковок.МестоДеятельности
	|";
	
	Запрос.Выполнить();
	
	Возврат СформироватьРезультатПолученияДанных(Запрос, ТипВозвращаемойКоллекции, "РодителиУпаковокСамогоВерхнегоУровня");
	
КонецФункции


Функция ПолучитьДанныеБлижайшихПодчиненныхУпаковок(НомераУпаковок, ТипВозвращаемойКоллекции, Отбор = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ПолучитьДанныеГрупповыхУпаковок(НомераУпаковок, Тип("МенеджерВременныхТаблиц"), Отбор);
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	БлижайшиеПодчиненныеУпаковки.*
	|ПОМЕСТИТЬ БлижайшиеПодчиненныеУпаковки
	|ИЗ
	|	ГрупповыеУпаковки КАК ГрупповыеУпаковки
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РегистрСведений.УпаковкиМДЛП КАК БлижайшиеПодчиненныеУпаковки
	|		ПО
	|			БлижайшиеПодчиненныеУпаковки.НомерГрупповойУпаковки = ГрупповыеУпаковки.НомерУпаковки
	|			И БлижайшиеПодчиненныеУпаковки.МестоДеятельности = ГрупповыеУпаковки.МестоДеятельности
	|";
	
	Запрос.Выполнить();
	
	Возврат СформироватьРезультатПолученияДанных(Запрос, ТипВозвращаемойКоллекции, "БлижайшиеПодчиненныеУпаковки");
	
КонецФункции

Функция ПолучитьДанныеВсехПодчиненныхУпаковокБезИерархии(НомераУпаковок, Отбор = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ПолучитьДанныеГрупповыхУпаковок(НомераУпаковок, Тип("МенеджерВременныхТаблиц"), Отбор);
	Запрос.Текст = "
	// Групповые упаковки без родителей.
	|ВЫБРАТЬ
	|	РодительскиеУпаковкиСамогоВерхнегоУровня.*
	|ПОМЕСТИТЬ РодительскиеУпаковкиСамогоВерхнегоУровня
	|ИЗ
	|	ГрупповыеУпаковки КАК РодительскиеУпаковкиСамогоВерхнегоУровня
	|ГДЕ
	|	РодительскиеУпаковкиСамогоВерхнегоУровня.НомерГрупповойУпаковки = &ПустаяГрупповаяУпаковка
	|
	|ОБЪЕДИНИТЬ
	|
	// Родители групповых упаковок самого верхнего уровня.
	|ВЫБРАТЬ
	|	РодительскиеУпаковкиСамогоВерхнегоУровня.*
	|ИЗ
	|	ГрупповыеУпаковки КАК ГрупповыеУпаковки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			РегистрСведений.УпаковкиМДЛП КАК РодительскиеУпаковкиСамогоВерхнегоУровня
	|		ПО
	|			РодительскиеУпаковкиСамогоВерхнегоУровня.НомерУпаковки = ГрупповыеУпаковки.ДокументРезерва
	|			И РодительскиеУпаковкиСамогоВерхнегоУровня.МестоДеятельности = ГрупповыеУпаковки.МестоДеятельности
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// Все упаковки принадлежащие родителям самого верхнего уровня.
	|ВЫБРАТЬ
	|	ВложенныеУпаковки.*
	|ИЗ
	|	РодительскиеУпаковкиСамогоВерхнегоУровня КАК РодительскиеУпаковкиСамогоВерхнегоУровня
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			РегистрСведений.УпаковкиМДЛП КАК ВложенныеУпаковки
	|		ПО
	|			ВложенныеУпаковки.ДокументРезерва = РодительскиеУпаковкиСамогоВерхнегоУровня.НомерУпаковки
	|			И ВложенныеУпаковки.МестоДеятельности = РодительскиеУпаковкиСамогоВерхнегоУровня.МестоДеятельности
	|";
	
	Запрос.УстановитьПараметр("ПустаяГрупповаяУпаковка", Метаданные.ОпределяемыеТипы.SSCC.Тип.ПривестиЗначение());
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция ПолучитьДанныеВсехПодчиненныхУпаковокИерархия(НомераУпаковок, Отбор = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ПолучитьДанныеГрупповыхУпаковок(НомераУпаковок, Тип("МенеджерВременныхТаблиц"), Отбор);
	Запрос.Текст = "
	// Групповые упаковки без родителей.
	|ВЫБРАТЬ
	|	РодительскиеУпаковкиСамогоВерхнегоУровня.*
	|ПОМЕСТИТЬ РодительскиеУпаковкиСамогоВерхнегоУровня
	|ИЗ
	|	ГрупповыеУпаковки КАК РодительскиеУпаковкиСамогоВерхнегоУровня
	|ГДЕ
	|	РодительскиеУпаковкиСамогоВерхнегоУровня.НомерГрупповойУпаковки = &ПустаяГрупповаяУпаковка
	|
	|ОБЪЕДИНИТЬ
	|
	// Родители групповых упаковок самого верхнего уровня.
	|ВЫБРАТЬ
	|	РодительскиеУпаковкиСамогоВерхнегоУровня.*
	|ИЗ
	|	ГрупповыеУпаковки КАК ГрупповыеУпаковки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			РегистрСведений.УпаковкиМДЛП КАК РодительскиеУпаковкиСамогоВерхнегоУровня
	|		ПО
	|			РодительскиеУпаковкиСамогоВерхнегоУровня.НомерУпаковки = ГрупповыеУпаковки.ДокументРезерва
	|			И РодительскиеУпаковкиСамогоВерхнегоУровня.МестоДеятельности = ГрупповыеУпаковки.МестоДеятельности
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// Родители упаковок.
	|ВЫБРАТЬ
	|	ГрупповыеУпаковки.*
	|ИЗ
	|	ГрупповыеУпаковки КАК ГрупповыеУпаковки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// Все упаковки принадлежащие родителям самого верхнего уровня.
	|ВЫБРАТЬ
	|	ВложенныеУпаковки.*
	|ИЗ
	|	РодительскиеУпаковкиСамогоВерхнегоУровня КАК РодительскиеУпаковкиСамогоВерхнегоУровня
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			РегистрСведений.УпаковкиМДЛП КАК ВложенныеУпаковки
	|		ПО
	|			ВложенныеУпаковки.ДокументРезерва = РодительскиеУпаковкиСамогоВерхнегоУровня.НомерУпаковки
	|			И ВложенныеУпаковки.МестоДеятельности = РодительскиеУпаковкиСамогоВерхнегоУровня.МестоДеятельности
	|";
	
	Запрос.УстановитьПараметр("ПустаяГрупповаяУпаковка", Метаданные.ОпределяемыеТипы.SSCC.Тип.ПривестиЗначение());
	
	Результат = Запрос.ВыполнитьПакет();
	ВыборкаРодителей       = Результат[Результат.ВГраница() - 1].Выбрать();
	ВыборкаВложенныхДанных = Результат[Результат.ВГраница()].Выбрать();
	
	Дерево = Новый ДеревоЗначений;
	Колонки = ВыборкаРодителей.Владелец().Колонки;
	Для Каждого Колонка Из Колонки Цикл
		Дерево.Колонки.Добавить(Колонка.Имя, Колонка.ТипЗначения);
	КонецЦикла;
	
	ОчередьПолученияВложенныхДанных = Новый Массив;
	Пока ВыборкаРодителей.Следующий() Цикл
		
		Строка = Дерево.Строки.Добавить();
		ЗаполнитьЗначенияСвойств(Строка, ВыборкаРодителей);
		ОчередьПолученияВложенныхДанных.Добавить(Строка);
		
	КонецЦикла;
	
	Пока ОчередьПолученияВложенныхДанных.Количество() > 0 Цикл
		
		Строка = ОчередьПолученияВложенныхДанных[0];
		ОчередьПолученияВложенныхДанных.Удалить(0);
		
		ВыборкаВложенныхДанных.Сбросить();
		Пока ВыборкаВложенныхДанных.Следующий() Цикл
			
			Если Строка.НомерУпаковки = ВыборкаВложенныхДанных.НомерГрупповойУпаковки Тогда
				
				ПодчиненнаяСтрока = Строка.Строки.Добавить();
				ЗаполнитьЗначенияСвойств(ПодчиненнаяСтрока, ВыборкаВложенныхДанных);
				Если ПодчиненнаяСтрока.ГрупповаяУпаковка Тогда
					ОчередьПолученияВложенныхДанных.Добавить(ПодчиненнаяСтрока);
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат Дерево;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция СформироватьРезультатПолученияДанных(Запрос, ТипВозвращаемойКоллекции, ИмяТаблицы)
	
	Если ТипВозвращаемойКоллекции = Тип("ТаблицаЗначений") Тогда
		
		Возврат Запрос.МенеджерВременныхТаблиц.Таблицы[ИмяТаблицы].ПолучитьДанные().Выгрузить();
		
	ИначеЕсли ТипВозвращаемойКоллекции = Тип("МенеджерВременныхТаблиц") Тогда
		
		Возврат Запрос.МенеджерВременныхТаблиц;
		
	ИначеЕсли ТипВозвращаемойКоллекции = Тип("ВыборкаИзРезультатаЗапроса") Тогда
		
		Возврат Запрос.МенеджерВременныхТаблиц.Таблицы[ИмяТаблицы].ПолучитьДанные().Выбрать();
		
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#КонецЕсли