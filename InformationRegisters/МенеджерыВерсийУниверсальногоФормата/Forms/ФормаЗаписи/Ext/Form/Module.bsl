
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ЭтоНовый       = Запись.ИсходныйКлючЗаписи.Пустой();
	ЭтоКопирование = ЗначениеЗаполнено(Параметры.ЗначениеКопирования.ВерсияФорматаОбмена);
	
	ОбновитьСписокВыбораПлановОбмена();
	ОбновитьСписокВерсийФорматаОбмена();
	
	Если ЭтоКопирование Тогда
		Запись.ВерсияФорматаОбмена = Неопределено;
		КопироватьХранилищеОбработки(Параметры.ЗначениеКопирования);
	КонецЕсли;
	
	ПоказатьДиалогЗагрузкиИзФайлаПриОткрытии = ЭтоНовый И Не ЭтоКопирование Или Параметры.ПоказатьДиалогЗагрузкиИзФайлаПриОткрытии;
	
	Если Запись.РежимОтладки И Не ПоказатьДиалогЗагрузкиИзФайлаПриОткрытии Тогда
		ИсточникМенеджера = ИсточникМенеджераРежимОтладки();
	Иначе
		ИсточникМенеджера = ИсточникМенеджераЗагруженИзФайла();
	КонецЕсли;
	
	Элементы.ПланОбмена.ТолькоПросмотр = Не ЭтоНовый;
	
	УстановитьОформлениеФормыПоИсточнику(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ПоказатьДиалогЗагрузкиИзФайлаПриОткрытии Тогда
		ПодключитьОбработчикОжидания("ЗагрузитьИзФайлаЗапуск", 0.1, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ДвоичныеДанныеМенеджера = ТекущийОбъект.ХранилищеОбработки.Получить();
	Если ДвоичныеДанныеМенеджера <> Неопределено Тогда
		АдресДанныхОбработки = ПоместитьВоВременноеХранилище(ДвоичныеДанныеМенеджера, УникальныйИдентификатор);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если ИсточникМенеджера = ИсточникМенеджераЗагруженИзФайла() И ПустаяСтрока(АдресДанныхОбработки) Тогда
		
		ТекстСообщения = НСтр("ru = 'Для версии формата %1 не загружен файл менеджера обмена.'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%1", Запись.ВерсияФорматаОбмена);
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,, "Запись.ИмяФайла",, Отказ);
		
	ИначеЕсли ИсточникМенеджера = ИсточникМенеджераРежимОтладки() И ПустаяСтрока(Запись.ИмяФайлаОтладки) Тогда
		
		ТекстСообщения = НСтр("ru = 'Для версии формата %1 не выбран файл менеджера обмена для отладки.'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%1", Запись.ВерсияФорматаОбмена);
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,, "Запись.ИмяФайлаОтладки",, Отказ);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если Не ПустаяСтрока(АдресДанныхОбработки) Тогда
		ДвоичныеДанныеОбработки = ПолучитьИзВременногоХранилища(АдресДанныхОбработки);
		ТекущийОбъект.ХранилищеОбработки = Новый ХранилищеЗначения(ДвоичныеДанныеОбработки, Новый СжатиеДанных(9));
	КонецЕсли;
	
	ТекущийОбъект.РежимОтладки = ИсточникМенеджера = ИсточникМенеджераРежимОтладки();
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Элементы.ПланОбмена.ТолькоПросмотр = Истина;
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ
#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗагрузитьИзФайла(Команда)
	
	ЗагрузитьИзФайлаЗапуск();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьВФайлОбработку(Команда)
	
	ВыгрузитьВФайлОбработкуНаКлиенте();
	
КонецПроцедуры

#КонецОбласти // ОбработчикиКомандФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ
#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ИсточникМенеджераПриИзменении(Элемент)
	
	УстановитьОформлениеФормыПоИсточнику(ЭтотОбъект);
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяФайлаОтладкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ВыбратьФайлМенеджераДляОтладки();
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийЭлементовФормы

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьСписокВыбораПлановОбмена()
	
	СписокВыбораПлановОбмена = Элементы.ПланОбмена.СписокВыбора;
	СписокВыбораПлановОбмена.Очистить();
	
	СписокПлановОбмена = ОбменДаннымиПовтИсп.СписокПлановОбменаБСП();
	Для Каждого ЭлементПланОбмена Из СписокПлановОбмена Цикл
		
		ЭтоПланОбменаXDTO = ОбменДаннымиПовтИсп.ЭтоПланОбменаXDTO(ЭлементПланОбмена.Значение);
		Если ЭтоПланОбменаXDTO Тогда
			ПланОбменаМетаданные = Метаданные.ПланыОбмена[ЭлементПланОбмена.Значение];
			СписокВыбораПлановОбмена.Добавить(ОбщегоНазначения.ИдентификаторОбъектаМетаданных(ПланОбменаМетаданные));
		КонецЕсли;
		
	КонецЦикла;
	
	Если ЭтоНовый И СписокВыбораПлановОбмена.Количество() = 1 Тогда
		Запись.ПланОбмена = СписокВыбораПлановОбмена[0].Значение;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСписокВерсийФорматаОбмена()
	
	ВерсииФормата = ОбменДаннымиБольничнаяАптека.ВерсииФорматаОбмена();
	Элементы.ВерсияФорматаОбмена.СписокВыбора.ЗагрузитьЗначения(ВерсииФормата);
	
КонецПроцедуры

&НаСервере
Процедура КопироватьХранилищеОбработки(ЗначениеКопирования)
	
	ДанныеВерсииФормата = РегистрыСведений.МенеджерыВерсийУниверсальногоФормата.ДанныеВерсииФормата(
		ЗначениеКопирования.ПланОбмена,
		ЗначениеКопирования.ВерсияФорматаОбмена,
		УникальныйИдентификатор);
	
	Если ДанныеВерсииФормата <> Неопределено  Тогда
		АдресДанныхОбработки = ДанныеВерсииФормата.АдресДанныхОбработки;
	КонецЕсли;
	
КонецПроцедуры

#Область ЗагрузкаМенеджера

&НаКлиенте
Процедура ЗагрузитьИзФайлаЗапуск()
	
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ЗагрузитьИзФайлаЗавершение", ЭтотОбъект);
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ОповещениеОЗавершении", ОповещениеОЗавершении);
	ДополнительныеПараметры.Вставить("ИмяФайла"             , Запись.ИмяФайла);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Ключ", "ПередДобавлениемДополнительногоОтчетаИлиОбработки");
	
	Оповестить = Новый ОписаниеОповещения("ЗагрузитьИзФайлаПослеПодтверждения", ЭтотОбъект, ДополнительныеПараметры);
	ОткрытьФорму("ОбщаяФорма.ПредупреждениеБезопасности", ПараметрыФормы,,,,, Оповестить);
	
КонецПроцедуры

// Продолжение процедуры ЗагрузитьИзФайлаЗапуск
//
&НаКлиенте
Процедура ЗагрузитьИзФайлаПослеПодтверждения(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ <> "Продолжить" Тогда
		ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеОЗавершении);
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗагрузитьИзФайлаПослеУстановкиРасширенийРаботыСФайлами", ЭтотОбъект, ДополнительныеПараметры);
	ФайловаяСистемаКлиент.ПодключитьРасширениеДляРаботыСФайлами(ОписаниеОповещения);
	
КонецПроцедуры

// Продолжение процедуры ЗагрузитьИзФайлаПослеПодтверждения
//
&НаКлиенте
Процедура ЗагрузитьИзФайлаПослеУстановкиРасширенийРаботыСФайлами(РасширениеПодключено, ДополнительныеПараметры) Экспорт
	
	Если Не РасширениеПодключено Тогда
		ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеОЗавершении);
		Возврат;
	КонецЕсли;
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.ПолноеИмяФайла = ДополнительныеПараметры.ИмяФайла;
	Диалог.Фильтр         = НСтр("ru = 'Внешние обработки (*.epf)|*.epf'");
	Диалог.Заголовок      = НСтр("ru = 'Выберите файл внешней обработки'");
	Диалог.ПроверятьСуществованиеФайла = Истина;
	
	Оповестить = Новый ОписаниеОповещения("ЗагрузитьИзФайлаПослеВыбораФайла", ЭтотОбъект, ДополнительныеПараметры);
	Диалог.Показать(Оповестить);
	
КонецПроцедуры

// Продолжение процедуры ЗагрузитьИзФайлаПослеУстановкиРасширенийРаботыСФайлами
//
&НаКлиенте
Процедура ЗагрузитьИзФайлаПослеВыбораФайла(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныеФайлы = Неопределено Или ВыбранныеФайлы.Количество() = 0 Тогда
		ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеОЗавершении);
		Возврат;
	КонецЕсли;
	
	Файл = Новый Файл(ВыбранныеФайлы[0]);
	ДополнительныеПараметры.Вставить("Файл", Файл);
	
	ИнформацияОФайле = Новый Структура;
	ИнформацияОФайле.Вставить("ИмяФайла"      , Файл.Имя);
	ИнформацияОФайле.Вставить("ПолноеИмяФайла", Файл.ПолноеИмя);
	ДополнительныеПараметры.Вставить("ИнформацияОФайле", ИнформацияОФайле);
	
	Оповестить = Новый ОписаниеОповещения("ЗагрузитьИзФайлаПослеПроверкиСуществования", ЭтотОбъект, ДополнительныеПараметры);
	Файл.НачатьПроверкуСуществования(Оповестить);
	
КонецПроцедуры

// Продолжение процедуры ЗагрузитьИзФайлаПослеВыбораФайла
//
&НаКлиенте
Процедура ЗагрузитьИзФайлаПослеПроверкиСуществования(Существует, ДополнительныеПараметры) Экспорт
	
	Если Не Существует Тогда
		
		ПараметрыПредупреждения = Новый Структура;
		ПараметрыПредупреждения.Вставить("Текст"    , НСтр("ru = 'Файл не существует.'"));
		ПараметрыПредупреждения.Вставить("Заголовок", НСтр("ru = 'Обработка не получена'"));
		ВывестиПредупреждение(ПараметрыПредупреждения, ДополнительныеПараметры.ОповещениеОЗавершении);
		
		Возврат;
		
	КонецЕсли;
	
	Если ВРег(ДополнительныеПараметры.Файл.Расширение) <> ".EPF" Тогда
		
		ПараметрыПредупреждения = Новый Структура;
		ПараметрыПредупреждения.Вставить("Текст"    , НСтр("ru = 'Расширение файла не соответствует расширению внешней обработки (.epf).'"));
		ПараметрыПредупреждения.Вставить("Заголовок", НСтр("ru = 'Обработка не получена'"));
		ВывестиПредупреждение(ПараметрыПредупреждения, ДополнительныеПараметры.ОповещениеОЗавершении);
		
		Возврат;
		
	КонецЕсли;
	
	Оповестить = Новый ОписаниеОповещения("ЗагрузитьИзФайлаПослеПолученияВремениИзменения", ЭтотОбъект, ДополнительныеПараметры);
	ДополнительныеПараметры.Файл.НачатьПолучениеВремениИзменения(Оповестить);
	
КонецПроцедуры

// Продолжение процедуры ЗагрузитьИзФайлаПослеПроверкиСуществования
//
&НаКлиенте
Процедура ЗагрузитьИзФайлаПослеПолученияВремениИзменения(ВремяИзменения, ДополнительныеПараметры) Экспорт
	
	ИнформацияОФайле = ДополнительныеПараметры.ИнформацияОФайле;
	ИнформацияОФайле.Вставить("ВремяИзменения", ВремяИзменения);
	
	Оповестить = Новый ОписаниеОповещения("ЗагрузитьИзФайлаПослеПолученияРазмераФайла", ЭтотОбъект, ДополнительныеПараметры);
	ДополнительныеПараметры.Файл.НачатьПолучениеРазмера(Оповестить);
	
КонецПроцедуры

// Продолжение процедуры ЗагрузитьИзФайлаПослеПолученияВремениИзменения
//
&НаКлиенте
Процедура ЗагрузитьИзФайлаПослеПолученияРазмераФайла(Размер, ДополнительныеПараметры) Экспорт
	
	ИнформацияОФайле = ДополнительныеПараметры.ИнформацияОФайле;
	ИнформацияОФайле.Вставить("Размер", Размер);
	
	ПомещаемыеФайлы = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Новый ОписаниеПередаваемогоФайла(ИнформацияОФайле.ПолноеИмяФайла));
	
	Оповестить = Новый ОписаниеОповещения("ЗагрузитьИзФайлаПослеПомещенияФайла", ЭтотОбъект, ДополнительныеПараметры);
	НачатьПомещениеФайловНаСервер(Оповестить,,, ПомещаемыеФайлы, УникальныйИдентификатор);
	
КонецПроцедуры

// Продолжение процедуры ЗагрузитьИзФайлаПослеПолученияРазмераФайла
//
&НаКлиенте
Процедура ЗагрузитьИзФайлаПослеПомещенияФайла(ПомещенныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ПомещенныеФайлы = Неопределено Или ПомещенныеФайлы.Количество() = 0 Тогда
		ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеОЗавершении);
		Возврат;
	КонецЕсли;
	
	АдресДанныхОбработки = ПомещенныеФайлы[0].Адрес;
	
	ОписаниеМенеджера = ОписаниеМенеджераФормата(АдресДанныхОбработки);
	Если ОписаниеМенеджера.Информация = Неопределено Тогда
		
		ПараметрыПредупреждения = Новый Структура;
		ПараметрыПредупреждения.Вставить("Текст"    , ОписаниеМенеджера.ТекстОшибки);
		ПараметрыПредупреждения.Вставить("Заголовок", НСтр("ru = 'Обработка не подключена'"));
		ВывестиПредупреждение(ПараметрыПредупреждения, ДополнительныеПараметры.ОповещениеОЗавершении);
		
		Возврат;
		
	КонецЕсли;
	
	ИнформацияОФайле = ДополнительныеПараметры.ИнформацияОФайле;
	
	ДанныеОЗагрузке = Новый Структура("АдресДанныхОбработки, ИмяФайла, Информация");
	ДанныеОЗагрузке.АдресДанныхОбработки = АдресДанныхОбработки;
	ДанныеОЗагрузке.ИмяФайла             = ИнформацияОФайле.ИмяФайла;
	ДанныеОЗагрузке.Информация           = СформироватьИнформациюОМенеджереФормата(ИнформацияОФайле, ОписаниеМенеджера);
	
	ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеОЗавершении, ДанныеОЗагрузке);
	
КонецПроцедуры

// Продолжение процедуры ЗагрузитьИзФайлаЗапуск
//
&НаКлиенте
Процедура ЗагрузитьИзФайлаЗавершение(ДанныеОЗагрузке, ДополнительныеПараметры) Экспорт
	
	Если ДанныеОЗагрузке = Неопределено Тогда
		
		Если ПоказатьДиалогЗагрузкиИзФайлаПриОткрытии И Открыта() Тогда
			Закрыть();
		КонецЕсли;
		
		Возврат;
		
	КонецЕсли;
	
	Если Не Открыта() Тогда
		Открыть();
	КонецЕсли;
	
	ТекстОповещения = НСтр("ru = 'Файл обработки загружен'");
	ПоказатьОповещениеПользователя(ТекстОповещения,, ДанныеОЗагрузке.ИмяФайла, БиблиотекаКартинок.ЗеленаяГалка);
	
	ЗаполнитьЗначенияСвойств(Запись, ДанныеОЗагрузке);
	
	АдресДанныхОбработки = ДанныеОЗагрузке.АдресДанныхОбработки;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ОписаниеМенеджераФормата(АдресДанныхОбработки)
	
	ОписаниеМенеджера = Новый Структура("Информация, ТекстОшибки");
	
	Результат = РегистрыСведений.МенеджерыВерсийУниверсальногоФормата.ПолучитьМенеджерФорматаИзВременногоХранилища(АдресДанныхОбработки);
	
	Если Результат.Получен Тогда
		МетаданныеМенеджераФормата = Результат.МенеджерФормата.Метаданные();
		ОписаниеМенеджера.Информация = МетаданныеМенеджераФормата.Комментарий;
	Иначе
		ОписаниеМенеджера.ТекстОшибки = Результат.ТекстОшибки;
	КонецЕсли;
	
	Возврат ОписаниеМенеджера;
	
КонецФункции

&НаКлиенте
Функция СформироватьИнформациюОМенеджереФормата(ИнформацияОФайле, ОписаниеМенеджера)
	
	Информация = НСтр("ru = 'Внешний менеджер обмена через универсальный формат.
		|Путь к файлу: %1
		|Дата изменения: %2
		|Размер: %3 КБ'");
	
	ДатаИзменения = Формат(ИнформацияОФайле.ВремяИзменения, "ДЛФ=DT");
	РазмерКБ      = Цел(ИнформацияОФайле.Размер / 1024);
	
	Информация = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Информация, ИнформацияОФайле.ПолноеИмяФайла, ДатаИзменения, РазмерКБ);
	
	ИнформацияОМенеджере = ОписаниеМенеджера.Информация;
	Если Не ПустаяСтрока(ИнформацияОМенеджере) Тогда
		Информация = Информация + Символы.ПС + Информация;
	КонецЕсли;
	
	Возврат Информация;
	
КонецФункции

#КонецОбласти // ЗагрузкаМенеджера

#Область ВыборМенеджераДляОтладки

&НаКлиенте
Процедура ВыбратьФайлМенеджераДляОтладки()
	
	Оповестить = Новый ОписаниеОповещения("ВыбратьФайлМенеджераДляОтладкиЗавершение", ЭтотОбъект);
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.ПолноеИмяФайла = Запись.ИмяФайлаОтладки;
	Диалог.Фильтр          = НСтр("ru = 'Внешние обработки (*.epf)|*.epf'");
	Диалог.Заголовок       = НСтр("ru = 'Выберите файл внешней обработки'");
	Диалог.ПроверятьСуществованиеФайла = Истина;
	Диалог.Показать(Оповестить);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьФайлМенеджераДляОтладкиЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныеФайлы = Неопределено Или ВыбранныеФайлы.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Запись.ИмяФайлаОтладки = ВыбранныеФайлы[0];
	
	Модифицированность = Истина;
	
КонецПроцедуры

#КонецОбласти // ВыборМенеджераДляОтладки

#Область ВыгрузкаМенеджера

&НаКлиенте
Процедура ВыгрузитьВФайлОбработкуНаКлиенте()
	
	Если Не ЗначениеЗаполнено(АдресДанныхОбработки) Тогда
		ТекстОповещения = НСтр("ru = 'Файл обработки не выгружен'");
		Пояснение = НСтр("ru = 'Файл менеджера версии формата не обнаружен в программе.'");
		ПоказатьОповещениеПользователя(ТекстОповещения,, Пояснение, БиблиотекаКартинок.Предупреждение32);
		Возврат;
	КонецЕсли;
	
	ТекстСообщения = НСтр("ru = 'Для выгрузки внешнего менеджера обмена через универсальный формат рекомендуется установить расширение для веб-клиента 1С:Предприятие.'");
	Оповестить = Новый ОписаниеОповещения("ВыгрузитьВФайлОбработкуПродолжение", ЭтотОбъект);
	ФайловаяСистемаКлиент.ПодключитьРасширениеДляРаботыСФайлами(Оповестить, ТекстСообщения);
	
КонецПроцедуры

// Продолжение процедуры ВыгрузитьВФайлОбработкуНаКлиенте
//
&НаКлиенте
Процедура ВыгрузитьВФайлОбработкуПродолжение(Подключено, ДополнительныеПараметры) Экспорт
	
	Если Не Подключено Тогда
		НачатьПолучениеФайлаССервера(АдресДанныхОбработки, Запись.ИмяФайла);
		Возврат;
	КонецЕсли;
	
	ДиалогСохраненияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	ДиалогСохраненияФайла.ПолноеИмяФайла     = Запись.ИмяФайла;
	ДиалогСохраненияФайла.Фильтр             = НСтр("ru = 'Внешние обработки (*.epf)|*.epf'");
	ДиалогСохраненияФайла.Заголовок          = НСтр("ru = 'Укажите файл'");
	
	Оповестить = Новый ОписаниеОповещения("ВыгрузитьВФайлОбработкуПослеВыбораФайла", ЭтотОбъект);
	ДиалогСохраненияФайла.Показать(Оповестить);
	
КонецПроцедуры

// Продолжение процедуры ВыгрузитьВФайлОбработкуПродолжение
//
&НаКлиенте
Процедура ВыгрузитьВФайлОбработкуПослеВыбораФайла(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныеФайлы <> Неопределено Тогда
		
		ПолноеИмяФайла = ВыбранныеФайлы[0];
		ПолучаемыеФайлы = Новый Массив;
		ПолучаемыеФайлы.Добавить(Новый ОписаниеПередаваемогоФайла(ПолноеИмяФайла, АдресДанныхОбработки));
		
		Оповестить = Новый ОписаниеОповещения("ВыгрузитьВФайлОбработкуЗавершение", ЭтотОбъект);
		НачатьПолучениеФайловССервера(Оповестить, ПолучаемыеФайлы);
		
	КонецЕсли;
	
КонецПроцедуры

// Продолжение процедуры ВыгрузитьВФайлОбработкуПослеВыбораФайла
//
&НаКлиенте
Процедура ВыгрузитьВФайлОбработкуЗавершение(ПолученныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ПолученныеФайлы <> Неопределено Тогда
		ТекстОповещения = НСтр("ru = 'Файл внешней обработки выгружен'");
		ПоказатьОповещениеПользователя(ТекстОповещения,, Запись.ИмяФайла, БиблиотекаКартинок.ЗеленаяГалка);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти // ВыгрузкаМенеджера

#Область Прочее

&НаКлиенте
Процедура ВывестиПредупреждение(ПараметрыПредупреждения, ОповещениеОЗавершении)
	
	ОписаниеПредупреждения = Новый Структура("Заголовок, Текст", "", "");
	
	ЗаполнитьЗначенияСвойств(ОписаниеПредупреждения, ПараметрыПредупреждения);
	
	Если ПустаяСтрока(ОписаниеПредупреждения.Текст) Тогда
		ВыполнитьОбработкуОповещения(ОповещениеОЗавершении);
		Возврат;
	КонецЕсли;
	
	Кнопки = Новый СписокЗначений;
	Кнопки.Добавить(КодВозвратаДиалога.ОК, НСтр("ru = 'Закрыть'"));
	
	Оповестить = Новый ОписаниеОповещения("ВывестиПредупреждениеПродолжение", ЭтотОбъект, ОповещениеОЗавершении);
	ПоказатьВопрос(Оповестить, ОписаниеПредупреждения.Текст, Кнопки,, КодВозвратаДиалога.ОК, ОписаниеПредупреждения.Заголовок);
	
КонецПроцедуры

// Продолжение процедуры ВывестиПредупреждение.
//
&НаКлиенте
Процедура ВывестиПредупреждениеПродолжение(Ответ, ОповещениеОЗавершении) Экспорт
	
	ВыполнитьОбработкуОповещения(ОповещениеОЗавершении);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОформлениеФормыПоИсточнику(Форма)
	
	Элементы = Форма.Элементы;
	
	Если Форма.ИсточникМенеджера = ИсточникМенеджераРежимОтладки() Тогда
		Элементы.СтраницыДанныеМенеджераВерсииФормата.ТекущаяСтраница = Элементы.СтраницаМенеджерВерсииФорматаРежимОтладки;
		Элементы.Информация.Видимость = Ложь;
	Иначе
		Элементы.СтраницыДанныеМенеджераВерсииФормата.ТекущаяСтраница = Элементы.СтраницаМенеджерВерсииФорматаИзФайла;
		Элементы.Информация.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ИсточникМенеджераЗагруженИзФайла()
	
	Возврат "ЗагруженныеИзФайла";
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ИсточникМенеджераРежимОтладки()
	
	Возврат "РежимОтладки";
	
КонецФункции

#КонецОбласти // Прочее

#КонецОбласти // СлужебныеПроцедурыИФункции
