
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Параметры.ШаблонПроводки) Тогда
		ТекстСообщения = НСтр("ru='Непосредственное открытие этой формы не предусмотрено.'");
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	ШаблонПроводки = Параметры.ШаблонПроводки;
	
	ЗаполнитьСписокУчетныхПолитик();
	
	УстановитьДоступностьЭлементовНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	ИзменитьПравилаОтраженияВБухгалтерскомУчете(СписокНастроек, ШаблонПроводки);
	Оповестить("ИзмененыНастройкиИспользованияВБухгалтерскомУчете",, ШаблонПроводки);
	Закрыть(Истина);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьСписокУчетныхПолитик()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ШаблонПроводки.ПланОбмена КАК ПланОбмена
	|ПОМЕСТИТЬ ПараметрыШаблона
	|ИЗ
	|	Справочник.ШаблоныСводныхПроводокДляОбменаСБухгалтерией КАК ШаблонПроводки
	|ГДЕ
	|	ШаблонПроводки.Ссылка = &ШаблонПроводки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПравилаОтражения.НастройкаОтраженияВБухгалтерскомУчете КАК НастройкаОтраженияВБухгалтерскомУчете,
	|	ПравилаОтражения.ШаблонПроводки КАК ШаблонПроводки
	|ПОМЕСТИТЬ ПравилаОтражения
	|ИЗ
	|	РегистрСведений.ПравилаОтраженияВБухгалтерскомУчете КАК ПравилаОтражения
	|ГДЕ
	|	ПравилаОтражения.ШаблонПроводки = &ШаблонПроводки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НастройкиОтраженияВБухгалтерскомУчете.Ссылка КАК НастройкаОтраженияВБухгалтерскомУчете,
	|	ВЫБОР
	|		КОГДА ПравилаОтражения.ШаблонПроводки ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Использование
	|ИЗ
	|	Справочник.НастройкиОтраженияВБухгалтерскомУчете КАК НастройкиОтраженияВБухгалтерскомУчете
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ПараметрыШаблона КАК ПараметрыШаблона
	|	ПО
	|		ПараметрыШаблона.ПланОбмена = НастройкиОтраженияВБухгалтерскомУчете.ПланОбмена
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПравилаОтражения КАК ПравилаОтражения
	|	ПО
	|		(ПравилаОтражения.НастройкаОтраженияВБухгалтерскомУчете = НастройкиОтраженияВБухгалтерскомУчете.Ссылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НастройкиОтраженияВБухгалтерскомУчете.Наименование
	|";
	
	Запрос.УстановитьПараметр("ШаблонПроводки", ШаблонПроводки);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СписокНастроек.Добавить(Выборка.НастройкаОтраженияВБухгалтерскомУчете,, Выборка.Использование);
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ИзменитьПравилаОтраженияВБухгалтерскомУчете(СписокНастроек, ШаблонПроводки)
	
	НаборЗаписей = РегистрыСведений.ПравилаОтраженияВБухгалтерскомУчете.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ШаблонПроводки.Установить(ШаблонПроводки);
	Для Каждого ЭлементНастройки Из СписокНастроек Цикл
		Если ЭлементНастройки.Пометка Тогда
			НоваяЗапись = НаборЗаписей.Добавить();
			НоваяЗапись.НастройкаОтраженияВБухгалтерскомУчете = ЭлементНастройки.Значение;
			НоваяЗапись.ШаблонПроводки = ШаблонПроводки;
		КонецЕсли;
	КонецЦикла;
	НаборЗаписей.Записать();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьЭлементовНаСервере()
	
	МассивЭлементов = Новый Массив;
	МассивЭлементов.Добавить("ФормаЗаписатьИЗакрыть");
	МассивЭлементов.Добавить("СписокНастроек");
	
	ДоступноИзменение = ПравоДоступа("Изменение", Метаданные.Справочники.ШаблоныСводныхПроводокДляОбменаСБухгалтерией);
	
	ОбщегоНазначенияБольничнаяАптекаКлиентСервер.УстановитьСвойствоЭлементовФормы(Элементы, МассивЭлементов, "ТолькоПросмотр", Не ДоступноИзменение);
	
КонецПроцедуры

#КонецОбласти
