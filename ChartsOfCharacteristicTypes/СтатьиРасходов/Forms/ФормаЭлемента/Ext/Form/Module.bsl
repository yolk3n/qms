
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", Элементы.ГруппаДополнительныеРеквизиты.Имя);
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	
	Если Объект.Ссылка.Пустая() Тогда
		ПриСозданииНовогоПриЧтенииНаСервере();
	КонецЕсли;
	
	УстановитьДоступностьПредопределенныхЭлементов(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	ПриСозданииНовогоПриЧтенииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СписокЗначений") Тогда
		ОбработатьВыборХозяйственныхОпераций(ВыбранноеЗначение);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
	ПолеТипАналитики = Неопределено;
	Если Объект.ВариантРаспределенияРасходов = Перечисления.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров Тогда
		ПолеТипАналитики = Элементы.ТипАналитикиНаСебестоимостьТоваров;
	ИначеЕсли Объект.ВариантРаспределенияРасходов = Перечисления.ВариантыРаспределенияРасходов.НеРаспределять Тогда
		ПолеТипАналитики = Элементы.ТипАналитикиНеРаспределять;
	КонецЕсли;
	
	Если ПолеТипАналитики <> Неопределено И ПолеТипАналитики.СписокВыбора.НайтиПоЗначению(ТипАналитики) = Неопределено Тогда
		ТекстСообщения = НСтр("ru = 'В поле ""Аналитика расходов"" не выбрано ни одного вида аналитики'");
		ОбщегоНазначения.СообщитьПользователю(
			ТекстСообщения,
			, // Ключ данных
			"ТипАналитики",
			, // Путь к данным
			Отказ);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	Если Не ПустаяСтрока(ТипАналитики) Тогда
		Типы = Новый Массив;
		Типы.Добавить(Тип(ТипАналитики));
		Если Типы[0] = Тип("СправочникСсылка.ПодразделенияОрганизаций") Тогда
			Типы.Добавить(Тип("СправочникСсылка.ОтделенияОрганизаций"));
		ИначеЕсли Типы[0] = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
			Типы.Добавить(Тип("ДокументСсылка.ВозвратТоваровИзОтделения"));
			Типы.Добавить(Тип("ДокументСсылка.ОтпускТоваровВОтделение"));
		КонецЕсли;
		ТекущийОбъект.ТипЗначения = Новый ОписаниеТипов(Типы);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	
	ЗаполнитьТекстДоступныхОпераций();
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ
#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ВариантРаспределенияРасходовПриИзменении(Элемент)
	
	Если Объект.ВариантРаспределенияРасходов = ПредопределенноеЗначение("Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров") Тогда
		ЭлементСтраница = Элементы.ГруппаВариантРаспределенияНаСебестоимостьТоваров;
		СписокАналитик = Элементы.ТипАналитикиНаСебестоимостьТоваров.СписокВыбора;
	ИначеЕсли Объект.ВариантРаспределенияРасходов = ПредопределенноеЗначение("Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы") Тогда
		ЭлементСтраница = Элементы.ГруппаВариантРаспределенияНаПрочиеАктивы;
		СписокАналитик = Элементы.ТипАналитикиНаПрочиеАктивы.СписокВыбора;
	ИначеЕсли Объект.ВариантРаспределенияРасходов = ПредопределенноеЗначение("Перечисление.ВариантыРаспределенияРасходов.НеРаспределять") Тогда
		ЭлементСтраница = Элементы.ГруппаВариантРаспределенияНеРаспределять;
		СписокАналитик = Элементы.ТипАналитикиНеРаспределять.СписокВыбора;
	КонецЕсли;
	
	Если СписокАналитик.НайтиПоЗначению(ТипАналитики) = Неопределено Тогда
		ТипАналитики = СписокАналитик[0].Значение;
	КонецЕсли;
	
	Элементы.ГруппаПараметрыВариантаРаспределения.ТекущаяСтраница = ЭлементСтраница;
	
	Если Объект.ДоступныеХозяйственныеОперации.Количество() > 0 Тогда
		ОчиститьНедоступныеХозяйственныеОперации();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТипАналитикиНаСебестоимостьТоваровПриИзменении(Элемент)
	
	Если ТипАналитики = "ДокументСсылка.ЗаказНаПеремещение"
	 Или ТипАналитики = "ДокументСсылка.ПеремещениеТоваров" Тогда
		Объект.ПравилоРаспределенияНаСебестоимость = ПредопределенноеЗначение("Перечисление.ПравилаРаспределенияНаСебестоимостьТоваров.ПропорциональноКоличеству");
		Элементы.ПравилоРаспределенияНаСебестоимость.Доступность = Ложь;
	Иначе
		Элементы.ПравилоРаспределенияНаСебестоимость.Доступность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОграничитьИспользованиеПриИзменении(Элемент)
	
	ЗаполнитьТекстДоступныхОпераций();
	
КонецПроцедуры

&НаКлиенте
Процедура ДоступныеОперацииНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ВыбранныеОперации = Новый Массив;
	Для Каждого СтрокаТаблицы Из Объект.ДоступныеХозяйственныеОперации Цикл
		ВыбранныеОперации.Добавить(СтрокаТаблицы.ХозяйственнаяОперация);
	КонецЦикла;
	
	ПараметрыФормыВыбора = Новый Структура;
	ПараметрыФормыВыбора.Вставить("ВыбранныеОперации", ВыбранныеОперации);
	ПараметрыФормыВыбора.Вставить("ВариантРаспределенияРасходов", Объект.ВариантРаспределенияРасходов);
	ПараметрыФормыВыбора.Вставить("ТолькоПросмотр", ТолькоПросмотр);
	ОткрытьФорму("ПланВидовХарактеристик.СтатьиРасходов.Форма.ФормаВыбораДоступныхОпераций", ПараметрыФормыВыбора, ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийЭлементовФормы

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПриСозданииНовогоПриЧтенииНаСервере()
	
	УстановитьТипАналитики();
	УстановитьТекущуюСтраницу();
	УправлениеЭлементамиФормы();
	ЗаполнитьТекстДоступныхОпераций();
	ЗаполнитьСписокВыбораКорреспондирующегоСчета();
	
КонецПроцедуры

&НаСервере
Процедура УправлениеЭлементамиФормы()
	
	ДоступностьПравилаРаспределенияНаСебестоимость = Не (ТипАналитики = "ДокументСсылка.ЗаказНаПеремещение" Или ТипАналитики = "ДокументСсылка.ПеремещениеТоваров");
	Элементы.ПравилоРаспределенияНаСебестоимость.Доступность = ДоступностьПравилаРаспределенияНаСебестоимость;
	Элементы.ДоступныеОперации.Доступность = (Объект.ОграничитьИспользование И Не ТолькоПросмотр);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьПредопределенныхЭлементов(Форма)
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	Если Объект.Предопределенный Тогда
		Элементы.ВариантРаспределенияРасходов.ТолькоПросмотр = Истина;
		Элементы.ГруппаПараметрыВариантаРаспределения.ТолькоПросмотр = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьТекущуюСтраницу()
	
	Соответствие = Новый Соответствие;
	Соответствие.Вставить(Перечисления.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров, Элементы.ГруппаВариантРаспределенияНаСебестоимостьТоваров);
	Соответствие.Вставить(Перечисления.ВариантыРаспределенияРасходов.НаПрочиеАктивы, Элементы.ГруппаВариантРаспределенияНаПрочиеАктивы);
	Соответствие.Вставить(Перечисления.ВариантыРаспределенияРасходов.НеРаспределять, Элементы.ГруппаВариантРаспределенияНеРаспределять);
	
	ЭлементСтраница = Соответствие.Получить(Объект.ВариантРаспределенияРасходов);
	Если ЭлементСтраница <> Неопределено Тогда
		Элементы.ГруппаПараметрыВариантаРаспределения.ТекущаяСтраница = ЭлементСтраница;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьТипАналитики()
	
	Поля = Новый Массив;
	Поля.Добавить(Элементы.ТипАналитикиНаСебестоимостьТоваров);
	Поля.Добавить(Элементы.ТипАналитикиНеРаспределять);
	
	Для Каждого Поле Из Поля Цикл
		Для Каждого Элемент Из Поле.СписокВыбора Цикл
			Если Объект.ТипЗначения.СодержитТип(Тип(Элемент.Значение)) Тогда
				ТипАналитики = Элемент.Значение;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если ЗначениеЗаполнено(ТипАналитики) Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВыборХозяйственныхОпераций(ВыбранныеОперации)
	
	Модифицированность = Истина;
	
	ДоступныеОперации = "";
	Объект.ДоступныеХозяйственныеОперации.Очистить();
	Для Каждого ЭлементСписка Из ВыбранныеОперации Цикл
		Если ЭлементСписка.Пометка Тогда
			
			НоваяСтрока = Объект.ДоступныеХозяйственныеОперации.Добавить();
			НоваяСтрока.ХозяйственнаяОперация = ЭлементСписка.Значение;
			
			ДоступныеОперации = ДоступныеОперации
				+ ?(Не ПустаяСтрока(ДоступныеОперации), ", ", "")
				+ ЭлементСписка.Представление;
		КонецЕсли;
	КонецЦикла;
	
	Если ПустаяСтрока(ДоступныеОперации) Тогда
		ДоступныеОперации = НСтр("ru = '<Указать доступные операции>'");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТекстДоступныхОпераций()
	
	Элементы.ДоступныеОперации.Доступность = Объект.ОграничитьИспользование;
	
	Если Не Объект.ОграничитьИспользование Тогда
		ДоступныеОперации = НСтр("ru = '<Ограничения не заданы>'");
	ИначеЕсли Объект.ДоступныеХозяйственныеОперации.Количество() = 0 Тогда
		ДоступныеОперации = НСтр("ru = '<Указать доступные операции>'");
	Иначе
		ДоступныеОперации = "";
		СписокОпераций = Новый СписокЗначений;
		ПланыВидовХарактеристик.СтатьиРасходов.ЗаполнитьСписокХозяйственныхОпераций(СписокОпераций);
		Для Каждого СтрокаТаблицы Из Объект.ДоступныеХозяйственныеОперации Цикл
			ЭлементСписка = СписокОпераций.НайтиПоЗначению(СтрокаТаблицы.ХозяйственнаяОперация);
			Если ЭлементСписка <> Неопределено Тогда
				ДоступныеОперации = ДоступныеОперации + ", " + ЭлементСписка.Представление;
			КонецЕсли;
		КонецЦикла;
		ДоступныеОперации = Сред(ДоступныеОперации, 3)
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокВыбораКорреспондирующегоСчета()
	
	СписокВыбора = Элементы.КорреспондирующийСчет.СписокВыбора;
	СписокВыбора.Очистить();
	
	СписокВыбора.Добавить("20.01", НСтр("ru='Основное производство (20.01)'"));
	СписокВыбора.Добавить("23"   , НСтр("ru='Вспомогательные производства (23)'"));
	СписокВыбора.Добавить("25"   , НСтр("ru='Общепроизводственные расходы (25)'"));
	СписокВыбора.Добавить("26"   , НСтр("ru='Общехозяйственные расходы (26)'"));
	СписокВыбора.Добавить("91.02", НСтр("ru='Прочие расходы (91.02)'"));
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьНедоступныеХозяйственныеОперации()
	
	ПланыВидовХарактеристик.СтатьиРасходов.ОчиститьНедоступныеХозяйственныеОперации(
		Объект.ВариантРаспределенияРасходов, Объект.ДоступныеХозяйственныеОперации, ДоступныеОперации);
	Если Объект.ДоступныеХозяйственныеОперации.Количество() = 0 Тогда
		ЗаполнитьТекстДоступныхОпераций();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти // СлужебныеПроцедурыИФункции

////////////////////////////////////////////////////////////////////////////////
// СТАНДАРТНЫЕ ПОДСИСТЕМЫ
#Область СтандартныеПодсистемы

// СтандартныеПодсистемы.Свойства

&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
	
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.Свойства

// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов

&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
	
	Оповещение = Новый ОписаниеОповещения("РазрешитьРедактированиеРеквизитовОбъектаЗавершение", ЭтотОбъект);
	ЗапретРедактированияРеквизитовОбъектовБольничнаяАптекаКлиент.РазрешитьРедактированиеРеквизитовОбъекта(ЭтотОбъект,, Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура РазрешитьРедактированиеРеквизитовОбъектаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(Результат) = Тип("Массив") И Результат.Количество() > 0 Тогда
		УстановитьДоступностьПредопределенныхЭлементов(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов

#КонецОбласти // СтандартныеПодсистемы
